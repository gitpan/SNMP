RFC1155-SMI DEFINITIONS ::= BEGIN;
    nullOID       OBJECT IDENTIFIER ::= { ccitt 0 }
    internet      OBJECT IDENTIFIER ::= { iso org(3) dod(6) 1 }
    directory     OBJECT IDENTIFIER ::= { internet 1 }
    mgmt          OBJECT IDENTIFIER ::= { internet 2 }
    experimental  OBJECT IDENTIFIER ::= { internet 3 }
    private       OBJECT IDENTIFIER ::= { internet 4 }
    enterprises   OBJECT IDENTIFIER ::= { private 1 }
END

RFC1213-MIB DEFINITIONS ::= BEGIN

          IMPORTS
                  mgmt, NetworkAddress, IpAddress, Counter, Gauge,
                          TimeTicks
                      FROM RFC1155-SMI
                  OBJECT-TYPE
                          FROM RFC-1212;

          --  This MIB module uses the extended OBJECT-TYPE macro as
          --  defined in [14];

          --  MIB-II (same prefix as MIB-I)

          mib-2      OBJECT IDENTIFIER ::= { mgmt 1 }

          -- textual conventions

          DisplayString ::=
              OCTET STRING
          -- This data type is used to model textual information taken
          -- from the NVT ASCII character set.  By convention, objects
          -- with this syntax are declared as having


          --
          --      SIZE (0..255)

          PhysAddress ::=
              OCTET STRING
          -- This data type is used to model media addresses.  For many
          -- types of media, this will be in a binary representation.
          -- For example, an ethernet address would be represented as
          -- a string of 6 octets.

          -- groups in MIB-II

          system       OBJECT IDENTIFIER ::= { mib-2 1 }

          interfaces   OBJECT IDENTIFIER ::= { mib-2 2 }

          at           OBJECT IDENTIFIER ::= { mib-2 3 }

          ip           OBJECT IDENTIFIER ::= { mib-2 4 }

          icmp         OBJECT IDENTIFIER ::= { mib-2 5 }

          tcp          OBJECT IDENTIFIER ::= { mib-2 6 }

          udp          OBJECT IDENTIFIER ::= { mib-2 7 }

          egp          OBJECT IDENTIFIER ::= { mib-2 8 }

          -- historical (some say hysterical)
          -- cmot      OBJECT IDENTIFIER ::= { mib-2 9 }

          transmission OBJECT IDENTIFIER ::= { mib-2 10 }

          snmp         OBJECT IDENTIFIER ::= { mib-2 11 }

          -- the System group

          -- Implementation of the System group is mandatory for all
          -- systems.  If an agent is not configured to have a value
          -- for any of these variables, a string of length 0 is
          -- returned.

          sysDescr OBJECT-TYPE
              SYNTAX  DisplayString (SIZE (0..255))
              ACCESS  read-only
              STATUS  mandatory


              DESCRIPTION
                      "A textual description of the entity.  This value
                      should include the full name and version
                      identification of the system's hardware type,
                      software operating-system, and networking
                      software.  It is mandatory that this only contain
                      printable ASCII characters."
              ::= { system 1 }

          sysObjectID OBJECT-TYPE
              SYNTAX  OBJECT IDENTIFIER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The vendor's authoritative identification of the
                      network management subsystem contained in the
                      entity.  This value is allocated within the SMI
                      enterprises subtree (1.3.6.1.4.1) and provides an
                      easy and unambiguous means for determining `what
                      kind of box' is being managed.  For example, if
                      vendor `Flintstones, Inc.' was assigned the
                      subtree 1.3.6.1.4.1.4242, it could assign the
                      identifier 1.3.6.1.4.1.4242.1.1 to its `Fred
                      Router'."
              ::= { system 2 }

          sysUpTime OBJECT-TYPE
              SYNTAX  TimeTicks
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The time (in hundredths of a second) since the
                      network management portion of the system was last
                      re-initialized."
              ::= { system 3 }

          sysContact OBJECT-TYPE
              SYNTAX  DisplayString (SIZE (0..255))
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The textual identification of the contact person
                      for this managed node, together with information
                      on how to contact this person."
              ::= { system 4 }

          sysName OBJECT-TYPE
              SYNTAX  DisplayString (SIZE (0..255))


              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "An administratively-assigned name for this
                      managed node.  By convention, this is the node's
                      fully-qualified domain name."
              ::= { system 5 }

          sysLocation OBJECT-TYPE
              SYNTAX  DisplayString (SIZE (0..255))
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The physical location of this node (e.g.,
                      `telephone closet, 3rd floor')."
              ::= { system 6 }

          sysServices OBJECT-TYPE
              SYNTAX  INTEGER (0..127)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A value which indicates the set of services that
                      this entity primarily offers.

                      The value is a sum.  This sum initially takes the
                      value zero, Then, for each layer, L, in the range
                      1 through 7, that this node performs transactions
                      for, 2 raised to (L - 1) is added to the sum.  For
                      example, a node which performs primarily routing
                      functions would have a value of 4 (2^(3-1)).  In
                      contrast, a node which is a host offering
                      application services would have a value of 72
                      (2^(4-1) + 2^(7-1)).  Note that in the context of
                      the Internet suite of protocols, values should be
                      calculated accordingly:

                           layer  functionality
                               1  physical (e.g., repeaters)
                               2  datalink/subnetwork (e.g., bridges)
                               3  internet (e.g., IP gateways)
                               4  end-to-end  (e.g., IP hosts)
                               7  applications (e.g., mail relays)

                      For systems including OSI protocols, layers 5 and
                      6 may also be counted."
              ::= { system 7 }


          -- the Interfaces group

          -- Implementation of the Interfaces group is mandatory for
          -- all systems.

          ifNumber OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of network interfaces (regardless of
                      their current state) present on this system."
              ::= { interfaces 1 }

          -- the Interfaces table

          -- The Interfaces table contains information on the entity's
          -- interfaces.  Each interface is thought of as being
          -- attached to a `subnetwork'.  Note that this term should
          -- not be confused with `subnet' which refers to an
          -- addressing partitioning scheme used in the Internet suite
          -- of protocols.

          ifTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF IfEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A list of interface entries.  The number of
                      entries is given by the value of ifNumber."
              ::= { interfaces 2 }

          ifEntry OBJECT-TYPE
              SYNTAX  IfEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "An interface entry containing objects at the
                      subnetwork layer and below for a particular
                      interface."
              INDEX   { ifIndex }
              ::= { ifTable 1 }

          IfEntry ::=
              SEQUENCE {
                  ifIndex
                      INTEGER,


                  ifDescr
                      DisplayString,
                  ifType
                      INTEGER,
                  ifMtu
                      INTEGER,
                  ifSpeed
                      Gauge,
                  ifPhysAddress
                      PhysAddress,
                  ifAdminStatus
                      INTEGER,
                  ifOperStatus
                      INTEGER,
                  ifLastChange
                      TimeTicks,
                  ifInOctets
                      Counter,
                  ifInUcastPkts
                      Counter,
                  ifInNUcastPkts
                      Counter,
                  ifInDiscards
                      Counter,
                  ifInErrors
                      Counter,
                  ifInUnknownProtos
                      Counter,
                  ifOutOctets
                      Counter,
                  ifOutUcastPkts
                      Counter,
                  ifOutNUcastPkts
                      Counter,
                  ifOutDiscards
                      Counter,
                  ifOutErrors
                      Counter,
                  ifOutQLen
                      Gauge,
                  ifSpecific
                      OBJECT IDENTIFIER
              }

          ifIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory


              DESCRIPTION
                      "A unique value for each interface.  Its value
                      ranges between 1 and the value of ifNumber.  The
                      value for each interface must remain constant at
                      least from one re-initialization of the entity's
                      network management system to the next re-
                      initialization."
              ::= { ifEntry 1 }

          ifDescr OBJECT-TYPE
              SYNTAX  DisplayString (SIZE (0..255))
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A textual string containing information about the
                      interface.  This string should include the name of
                      the manufacturer, the product name and the version
                      of the hardware interface."
              ::= { ifEntry 2 }

          ifType OBJECT-TYPE
              SYNTAX  INTEGER {
                          other(1),          -- none of the following
                          regular1822(2),
                          hdh1822(3),
                          ddn-x25(4),
                          rfc877-x25(5),
                          ethernet-csmacd(6),
                          iso88023-csmacd(7),
                          iso88024-tokenBus(8),
                          iso88025-tokenRing(9),
                          iso88026-man(10),
                          starLan(11),
                          proteon-10Mbit(12),
                          proteon-80Mbit(13),
                          hyperchannel(14),
                          fddi(15),
                          lapb(16),
                          sdlc(17),
                          ds1(18),           -- T-1
                          e1(19),            -- european equiv. of T-1
                          basicISDN(20),
                          primaryISDN(21),   -- proprietary serial
                          propPointToPointSerial(22),
                          ppp(23),
                          softwareLoopback(24),
                          eon(25),            -- CLNP over IP [11]
                          ethernet-3Mbit(26),


                          nsip(27),           -- XNS over IP
                          slip(28),           -- generic SLIP
                          ultra(29),          -- ULTRA technologies
                          ds3(30),            -- T-3
                          sip(31),            -- SMDS
                          frame-relay(32)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The type of interface, distinguished according to
                      the physical/link protocol(s) immediately `below'
                      the network layer in the protocol stack."
              ::= { ifEntry 3 }

          ifMtu OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The size of the largest datagram which can be
                      sent/received on the interface, specified in
                      octets.  For interfaces that are used for
                      transmitting network datagrams, this is the size
                      of the largest network datagram that can be sent
                      on the interface."
              ::= { ifEntry 4 }

          ifSpeed OBJECT-TYPE
              SYNTAX  Gauge
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "An estimate of the interface's current bandwidth
                      in bits per second.  For interfaces which do not
                      vary in bandwidth or for those where no accurate
                      estimation can be made, this object should contain
                      the nominal bandwidth."
              ::= { ifEntry 5 }

          ifPhysAddress OBJECT-TYPE
              SYNTAX  PhysAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The interface's address at the protocol layer
                      immediately `below' the network layer in the
                      protocol stack.  For interfaces which do not have


                      such an address (e.g., a serial line), this object
                      should contain an octet string of zero length."
              ::= { ifEntry 6 }

          ifAdminStatus OBJECT-TYPE
              SYNTAX  INTEGER {
                          up(1),       -- ready to pass packets
                          down(2),
                          testing(3)   -- in some test mode
                      }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The desired state of the interface.  The
                      testing(3) state indicates that no operational
                      packets can be passed."
              ::= { ifEntry 7 }

          ifOperStatus OBJECT-TYPE
              SYNTAX  INTEGER {
                          up(1),       -- ready to pass packets
                          down(2),
                          testing(3)   -- in some test mode
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The current operational state of the interface.
                      The testing(3) state indicates that no operational
                      packets can be passed."
              ::= { ifEntry 8 }

          ifLastChange OBJECT-TYPE
              SYNTAX  TimeTicks
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of sysUpTime at the time the interface
                      entered its current operational state.  If the
                      current state was entered prior to the last re-
                      initialization of the local network management
                      subsystem, then this object contains a zero
                      value."
              ::= { ifEntry 9 }

          ifInOctets OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only


              STATUS  mandatory
              DESCRIPTION
                      "The total number of octets received on the
                      interface, including framing characters."
              ::= { ifEntry 10 }

          ifInUcastPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of subnetwork-unicast packets
                      delivered to a higher-layer protocol."
              ::= { ifEntry 11 }

          ifInNUcastPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of non-unicast (i.e., subnetwork-
                      broadcast or subnetwork-multicast) packets
                      delivered to a higher-layer protocol."
              ::= { ifEntry 12 }

          ifInDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of inbound packets which were chosen
                      to be discarded even though no errors had been
                      detected to prevent their being deliverable to a
                      higher-layer protocol.  One possible reason for
                      discarding such a packet could be to free up
                      buffer space."
              ::= { ifEntry 13 }

          ifInErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of inbound packets that contained
                      errors preventing them from being deliverable to a
                      higher-layer protocol."
              ::= { ifEntry 14 }


          ifInUnknownProtos OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of packets received via the interface
                      which were discarded because of an unknown or
                      unsupported protocol."
              ::= { ifEntry 15 }

          ifOutOctets OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of octets transmitted out of the
                      interface, including framing characters."
              ::= { ifEntry 16 }

          ifOutUcastPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of packets that higher-level
                      protocols requested be transmitted to a
                      subnetwork-unicast address, including those that
                      were discarded or not sent."
              ::= { ifEntry 17 }

          ifOutNUcastPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of packets that higher-level
                      protocols requested be transmitted to a non-
                      unicast (i.e., a subnetwork-broadcast or
                      subnetwork-multicast) address, including those
                      that were discarded or not sent."
              ::= { ifEntry 18 }

          ifOutDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of outbound packets which were chosen


                      to be discarded even though no errors had been
                      detected to prevent their being transmitted.  One
                      possible reason for discarding such a packet could
                      be to free up buffer space."
              ::= { ifEntry 19 }

          ifOutErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of outbound packets that could not be
                      transmitted because of errors."
              ::= { ifEntry 20 }

          ifOutQLen OBJECT-TYPE
              SYNTAX  Gauge
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The length of the output packet queue (in
                      packets)."
              ::= { ifEntry 21 }

          ifSpecific OBJECT-TYPE
              SYNTAX  OBJECT IDENTIFIER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A reference to MIB definitions specific to the
                      particular media being used to realize the
                      interface.  For example, if the interface is
                      realized by an ethernet, then the value of this
                      object refers to a document defining objects
                      specific to ethernet.  If this information is not
                      present, its value should be set to the OBJECT
                      IDENTIFIER { 0 0 }, which is a syntatically valid
                      object identifier, and any conformant
                      implementation of ASN.1 and BER must be able to
                      generate and recognize this value."
              ::= { ifEntry 22 }

          -- the Address Translation group

          -- Implementation of the Address Translation group is
          -- mandatory for all systems.  Note however that this group
          -- is deprecated by MIB-II. That is, it is being included


          -- solely for compatibility with MIB-I nodes, and will most
          -- likely be excluded from MIB-III nodes.  From MIB-II and
          -- onwards, each network protocol group contains its own
          -- address translation tables.

          -- The Address Translation group contains one table which is
          -- the union across all interfaces of the translation tables
          -- for converting a NetworkAddress (e.g., an IP address) into
          -- a subnetwork-specific address.  For lack of a better term,
          -- this document refers to such a subnetwork-specific address
          -- as a `physical' address.

          -- Examples of such translation tables are: for broadcast
          -- media where ARP is in use, the translation table is
          -- equivalent to the ARP cache; or, on an X.25 network where
          -- non-algorithmic translation to X.121 addresses is
          -- required, the translation table contains the
          -- NetworkAddress to X.121 address equivalences.

          atTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF AtEntry
              ACCESS  not-accessible
              STATUS  deprecated
              DESCRIPTION
                      "The Address Translation tables contain the
                      NetworkAddress to `physical' address equivalences.
                      Some interfaces do not use translation tables for
                      determining address equivalences (e.g., DDN-X.25
                      has an algorithmic method); if all interfaces are
                      of this type, then the Address Translation table
                      is empty, i.e., has zero entries."
              ::= { at 1 }

          atEntry OBJECT-TYPE
              SYNTAX  AtEntry
              ACCESS  not-accessible
              STATUS  deprecated
              DESCRIPTION
                      "Each entry contains one NetworkAddress to
                      `physical' address equivalence."
              INDEX   { atIfIndex,
                        atNetAddress }
              ::= { atTable 1 }

          AtEntry ::=
              SEQUENCE {
                  atIfIndex
                      INTEGER,


                  atPhysAddress
                      PhysAddress,
                  atNetAddress
                      NetworkAddress
              }

          atIfIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  deprecated
              DESCRIPTION
                      "The interface on which this entry's equivalence
                      is effective.  The interface identified by a
                      particular value of this index is the same
                      interface as identified by the same value of
                      ifIndex."
              ::= { atEntry 1 }

          atPhysAddress OBJECT-TYPE
              SYNTAX  PhysAddress
              ACCESS  read-write
              STATUS  deprecated
              DESCRIPTION
                      "The media-dependent `physical' address.

                      Setting this object to a null string (one of zero
                      length) has the effect of invaliding the
                      corresponding entry in the atTable object.  That
                      is, it effectively dissasociates the interface
                      identified with said entry from the mapping
                      identified with said entry.  It is an
                      implementation-specific matter as to whether the
                      agent removes an invalidated entry from the table.
                      Accordingly, management stations must be prepared
                      to receive tabular information from agents that
                      corresponds to entries not currently in use.
                      Proper interpretation of such entries requires
                      examination of the relevant atPhysAddress object."
              ::= { atEntry 2 }

          atNetAddress OBJECT-TYPE
              SYNTAX  NetworkAddress
              ACCESS  read-write
              STATUS  deprecated
              DESCRIPTION
                      "The NetworkAddress (e.g., the IP address)
                      corresponding to the media-dependent `physical'
                      address."


              ::= { atEntry 3 }

          -- the IP group

          -- Implementation of the IP group is mandatory for all
          -- systems.

          ipForwarding OBJECT-TYPE
              SYNTAX  INTEGER {
                          forwarding(1),    -- acting as a gateway
                          not-forwarding(2) -- NOT acting as a gateway
                      }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The indication of whether this entity is acting
                      as an IP gateway in respect to the forwarding of
                      datagrams received by, but not addressed to, this
                      entity.  IP gateways forward datagrams.  IP hosts
                      do not (except those source-routed via the host).

                      Note that for some managed nodes, this object may
                      take on only a subset of the values possible.
                      Accordingly, it is appropriate for an agent to
                      return a `badValue' response if a management
                      station attempts to change this object to an
                      inappropriate value."
              ::= { ip 1 }

          ipDefaultTTL OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The default value inserted into the Time-To-Live
                      field of the IP header of datagrams originated at
                      this entity, whenever a TTL value is not supplied
                      by the transport layer protocol."
              ::= { ip 2 }

          ipInReceives OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of input datagrams received from
                      interfaces, including those received in error."


              ::= { ip 3 }

          ipInHdrErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of input datagrams discarded due to
                      errors in their IP headers, including bad
                      checksums, version number mismatch, other format
                      errors, time-to-live exceeded, errors discovered
                      in processing their IP options, etc."
              ::= { ip 4 }

          ipInAddrErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of input datagrams discarded because
                      the IP address in their IP header's destination
                      field was not a valid address to be received at
                      this entity.  This count includes invalid
                      addresses (e.g., 0.0.0.0) and addresses of
                      unsupported Classes (e.g., Class E).  For entities
                      which are not IP Gateways and therefore do not
                      forward datagrams, this counter includes datagrams
                      discarded because the destination address was not
                      a local address."
              ::= { ip 5 }

          ipForwDatagrams OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of input datagrams for which this
                      entity was not their final IP destination, as a
                      result of which an attempt was made to find a
                      route to forward them to that final destination.
                      In entities which do not act as IP Gateways, this
                      counter will include only those packets which were
                      Source-Routed via this entity, and the Source-
                      Route option processing was successful."
              ::= { ip 6 }

          ipInUnknownProtos OBJECT-TYPE
              SYNTAX  Counter


              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of locally-addressed datagrams
                      received successfully but discarded because of an
                      unknown or unsupported protocol."
              ::= { ip 7 }

          ipInDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of input IP datagrams for which no
                      problems were encountered to prevent their
                      continued processing, but which were discarded
                      (e.g., for lack of buffer space).  Note that this
                      counter does not include any datagrams discarded
                      while awaiting re-assembly."
              ::= { ip 8 }

          ipInDelivers OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of input datagrams successfully
                      delivered to IP user-protocols (including ICMP)."
              ::= { ip 9 }

          ipOutRequests OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of IP datagrams which local IP
                      user-protocols (including ICMP) supplied to IP in
                      requests for transmission.  Note that this counter
                      does not include any datagrams counted in
                      ipForwDatagrams."
              ::= { ip 10 }

          ipOutDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of output IP datagrams for which no


                      problem was encountered to prevent their
                      transmission to their destination, but which were
                      discarded (e.g., for lack of buffer space).  Note
                      that this counter would include datagrams counted
                      in ipForwDatagrams if any such packets met this
                      (discretionary) discard criterion."
              ::= { ip 11 }

          ipOutNoRoutes OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of IP datagrams discarded because no
                      route could be found to transmit them to their
                      destination.  Note that this counter includes any
                      packets counted in ipForwDatagrams which meet this
                      `no-route' criterion.  Note that this includes any
                      datagarms which a host cannot route because all of
                      its default gateways are down."
              ::= { ip 12 }

          ipReasmTimeout OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The maximum number of seconds which received
                      fragments are held while they are awaiting
                      reassembly at this entity."
              ::= { ip 13 }

          ipReasmReqds OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of IP fragments received which needed
                      to be reassembled at this entity."
              ::= { ip 14 }

          ipReasmOKs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of IP datagrams successfully re-
                      assembled."


              ::= { ip 15 }

          ipReasmFails OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of failures detected by the IP re-
                      assembly algorithm (for whatever reason: timed
                      out, errors, etc).  Note that this is not
                      necessarily a count of discarded IP fragments
                      since some algorithms (notably the algorithm in
                      RFC 815) can lose track of the number of fragments
                      by combining them as they are received."
              ::= { ip 16 }

          ipFragOKs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of IP datagrams that have been
                      successfully fragmented at this entity."
              ::= { ip 17 }

          ipFragFails OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of IP datagrams that have been
                      discarded because they needed to be fragmented at
                      this entity but could not be, e.g., because their
                      Don't Fragment flag was set."
              ::= { ip 18 }

          ipFragCreates OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of IP datagram fragments that have
                      been generated as a result of fragmentation at
                      this entity."
              ::= { ip 19 }


          -- the IP address table

          -- The IP address table contains this entity's IP addressing
          -- information.

          ipAddrTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF IpAddrEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "The table of addressing information relevant to
                      this entity's IP addresses."
              ::= { ip 20 }

          ipAddrEntry OBJECT-TYPE
              SYNTAX  IpAddrEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "The addressing information for one of this
                      entity's IP addresses."
              INDEX   { ipAdEntAddr }
              ::= { ipAddrTable 1 }

          IpAddrEntry ::=
              SEQUENCE {
                  ipAdEntAddr
                      IpAddress,
                  ipAdEntIfIndex
                      INTEGER,
                  ipAdEntNetMask
                      IpAddress,
                  ipAdEntBcastAddr
                      INTEGER,
                  ipAdEntReasmMaxSize
                      INTEGER (0..65535)
              }

          ipAdEntAddr OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The IP address to which this entry's addressing
                      information pertains."
              ::= { ipAddrEntry 1 }


          ipAdEntIfIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The index value which uniquely identifies the
                      interface to which this entry is applicable.  The
                      interface identified by a particular value of this
                      index is the same interface as identified by the
                      same value of ifIndex."
              ::= { ipAddrEntry 2 }

          ipAdEntNetMask OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The subnet mask associated with the IP address of
                      this entry.  The value of the mask is an IP
                      address with all the network bits set to 1 and all
                      the hosts bits set to 0."
              ::= { ipAddrEntry 3 }

          ipAdEntBcastAddr OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of the least-significant bit in the IP
                      broadcast address used for sending datagrams on
                      the (logical) interface associated with the IP
                      address of this entry.  For example, when the
                      Internet standard all-ones broadcast address is
                      used, the value will be 1.  This value applies to
                      both the subnet and network broadcasts addresses
                      used by the entity on this (logical) interface."
              ::= { ipAddrEntry 4 }

          ipAdEntReasmMaxSize OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The size of the largest IP datagram which this
                      entity can re-assemble from incoming IP fragmented
                      datagrams received on this interface."
              ::= { ipAddrEntry 5 }


          -- the IP routing table

          -- The IP routing table contains an entry for each route
          -- presently known to this entity.

          ipRouteTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF IpRouteEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "This entity's IP Routing table."
              ::= { ip 21 }

          ipRouteEntry OBJECT-TYPE
              SYNTAX  IpRouteEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A route to a particular destination."
              INDEX   { ipRouteDest }
              ::= { ipRouteTable 1 }

          IpRouteEntry ::=
              SEQUENCE {
                  ipRouteDest
                      IpAddress,
                  ipRouteIfIndex
                      INTEGER,
                  ipRouteMetric1
                      INTEGER,
                  ipRouteMetric2
                      INTEGER,
                  ipRouteMetric3
                      INTEGER,
                  ipRouteMetric4
                      INTEGER,
                  ipRouteNextHop
                      IpAddress,
                  ipRouteType
                      INTEGER,
                  ipRouteProto
                      INTEGER,
                  ipRouteAge
                      INTEGER,
                  ipRouteMask
                      IpAddress,
                  ipRouteMetric5
                      INTEGER,


                  ipRouteInfo
                      OBJECT IDENTIFIER
              }

          ipRouteDest OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The destination IP address of this route.  An
                      entry with a value of 0.0.0.0 is considered a
                      default route.  Multiple routes to a single
                      destination can appear in the table, but access to
                      such multiple entries is dependent on the table-
                      access mechanisms defined by the network
                      management protocol in use."
              ::= { ipRouteEntry 1 }

          ipRouteIfIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The index value which uniquely identifies the
                      local interface through which the next hop of this
                      route should be reached.  The interface identified
                      by a particular value of this index is the same
                      interface as identified by the same value of
                      ifIndex."
              ::= { ipRouteEntry 2 }

          ipRouteMetric1 OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The primary routing metric for this route.  The
                      semantics of this metric are determined by the
                      routing-protocol specified in the route's
                      ipRouteProto value.  If this metric is not used,
                      its value should be set to -1."
              ::= { ipRouteEntry 3 }

          ipRouteMetric2 OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION


                      "An alternate routing metric for this route.  The
                      semantics of this metric are determined by the
                      routing-protocol specified in the route's
                      ipRouteProto value.  If this metric is not used,
                      its value should be set to -1."
              ::= { ipRouteEntry 4 }

          ipRouteMetric3 OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "An alternate routing metric for this route.  The
                      semantics of this metric are determined by the
                      routing-protocol specified in the route's
                      ipRouteProto value.  If this metric is not used,
                      its value should be set to -1."
              ::= { ipRouteEntry 5 }

          ipRouteMetric4 OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "An alternate routing metric for this route.  The
                      semantics of this metric are determined by the
                      routing-protocol specified in the route's
                      ipRouteProto value.  If this metric is not used,
                      its value should be set to -1."
              ::= { ipRouteEntry 6 }

          ipRouteNextHop OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The IP address of the next hop of this route.
                      (In the case of a route bound to an interface
                      which is realized via a broadcast media, the value
                      of this field is the agent's IP address on that
                      interface.)"
              ::= { ipRouteEntry 7 }

          ipRouteType OBJECT-TYPE
              SYNTAX  INTEGER {
                          other(1),        -- none of the following

                          invalid(2),      -- an invalidated route


                                           -- route to directly
                          direct(3),       -- connected (sub-)network

                                           -- route to a non-local
                          indirect(4)      -- host/network/sub-network
                      }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The type of route.  Note that the values
                      direct(3) and indirect(4) refer to the notion of
                      direct and indirect routing in the IP
                      architecture.

                      Setting this object to the value invalid(2) has
                      the effect of invalidating the corresponding entry
                      in the ipRouteTable object.  That is, it
                      effectively dissasociates the destination
                      identified with said entry from the route
                      identified with said entry.  It is an
                      implementation-specific matter as to whether the
                      agent removes an invalidated entry from the table.
                      Accordingly, management stations must be prepared
                      to receive tabular information from agents that
                      corresponds to entries not currently in use.
                      Proper interpretation of such entries requires
                      examination of the relevant ipRouteType object."
              ::= { ipRouteEntry 8 }

          ipRouteProto OBJECT-TYPE
              SYNTAX  INTEGER {
                          other(1),       -- none of the following

                                          -- non-protocol information,
                                          -- e.g., manually configured
                          local(2),       -- entries

                                          -- set via a network
                          netmgmt(3),     -- management protocol

                                          -- obtained via ICMP,
                          icmp(4),        -- e.g., Redirect

                                          -- the remaining values are
                                          -- all gateway routing
                                          -- protocols
                          egp(5),
                          ggp(6),


                          hello(7),
                          rip(8),
                          is-is(9),
                          es-is(10),
                          ciscoIgrp(11),
                          bbnSpfIgp(12),
                          ospf(13),
                          bgp(14)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The routing mechanism via which this route was
                      learned.  Inclusion of values for gateway routing
                      protocols is not intended to imply that hosts
                      should support those protocols."
              ::= { ipRouteEntry 9 }

          ipRouteAge OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The number of seconds since this route was last
                      updated or otherwise determined to be correct.
                      Note that no semantics of `too old' can be implied
                      except through knowledge of the routing protocol
                      by which the route was learned."
              ::= { ipRouteEntry 10 }

          ipRouteMask OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "Indicate the mask to be logical-ANDed with the
                      destination address before being compared to the
                      value in the ipRouteDest field.  For those systems
                      that do not support arbitrary subnet masks, an
                      agent constructs the value of the ipRouteMask by
                      determining whether the value of the correspondent
                      ipRouteDest field belong to a class-A, B, or C
                      network, and then using one of:

                           mask           network
                           255.0.0.0      class-A
                           255.255.0.0    class-B
                           255.255.255.0  class-C


                      If the value of the ipRouteDest is 0.0.0.0 (a
                      default route), then the mask value is also
                      0.0.0.0.  It should be noted that all IP routing
                      subsystems implicitly use this mechanism."
              ::= { ipRouteEntry 11 }

          ipRouteMetric5 OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "An alternate routing metric for this route.  The
                      semantics of this metric are determined by the
                      routing-protocol specified in the route's
                      ipRouteProto value.  If this metric is not used,
                      its value should be set to -1."
              ::= { ipRouteEntry 12 }

          ipRouteInfo OBJECT-TYPE
              SYNTAX  OBJECT IDENTIFIER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A reference to MIB definitions specific to the
                      particular routing protocol which is responsible
                      for this route, as determined by the value
                      specified in the route's ipRouteProto value.  If
                      this information is not present, its value should
                      be set to the OBJECT IDENTIFIER { 0 0 }, which is
                      a syntatically valid object identifier, and any
                      conformant implementation of ASN.1 and BER must be
                      able to generate and recognize this value."
              ::= { ipRouteEntry 13 }

          -- the IP Address Translation table

          -- The IP address translation table contain the IpAddress to
          -- `physical' address equivalences.  Some interfaces do not
          -- use translation tables for determining address
          -- equivalences (e.g., DDN-X.25 has an algorithmic method);
          -- if all interfaces are of this type, then the Address
          -- Translation table is empty, i.e., has zero entries.

          ipNetToMediaTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF IpNetToMediaEntry
              ACCESS  not-accessible
              STATUS  mandatory


              DESCRIPTION
                      "The IP Address Translation table used for mapping
                      from IP addresses to physical addresses."
              ::= { ip 22 }

          ipNetToMediaEntry OBJECT-TYPE
              SYNTAX  IpNetToMediaEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Each entry contains one IpAddress to `physical'
                      address equivalence."
              INDEX   { ipNetToMediaIfIndex,
                        ipNetToMediaNetAddress }
              ::= { ipNetToMediaTable 1 }

          IpNetToMediaEntry ::=
              SEQUENCE {
                  ipNetToMediaIfIndex
                      INTEGER,
                  ipNetToMediaPhysAddress
                      PhysAddress,
                  ipNetToMediaNetAddress
                      IpAddress,
                  ipNetToMediaType
                      INTEGER
              }

          ipNetToMediaIfIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The interface on which this entry's equivalence
                      is effective.  The interface identified by a
                      particular value of this index is the same
                      interface as identified by the same value of
                      ifIndex."
              ::= { ipNetToMediaEntry 1 }

          ipNetToMediaPhysAddress OBJECT-TYPE
              SYNTAX  PhysAddress
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The media-dependent `physical' address."
              ::= { ipNetToMediaEntry 2 }


          ipNetToMediaNetAddress OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The IpAddress corresponding to the media-
                      dependent `physical' address."
              ::= { ipNetToMediaEntry 3 }

          ipNetToMediaType OBJECT-TYPE
              SYNTAX  INTEGER {
                          other(1),        -- none of the following
                          invalid(2),      -- an invalidated mapping
                          dynamic(3),
                          static(4)
                      }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The type of mapping.

                      Setting this object to the value invalid(2) has
                      the effect of invalidating the corresponding entry
                      in the ipNetToMediaTable.  That is, it effectively
                      dissasociates the interface identified with said
                      entry from the mapping identified with said entry.
                      It is an implementation-specific matter as to
                      whether the agent removes an invalidated entry
                      from the table.  Accordingly, management stations
                      must be prepared to receive tabular information
                      from agents that corresponds to entries not
                      currently in use.  Proper interpretation of such
                      entries requires examination of the relevant
                      ipNetToMediaType object."
              ::= { ipNetToMediaEntry 4 }

          -- additional IP objects

          ipRoutingDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of routing entries which were chosen
                      to be discarded even though they are valid.  One
                      possible reason for discarding such an entry could
                      be to free-up buffer space for other routing


                      entries."
              ::= { ip 23 }

          -- the ICMP group

          -- Implementation of the ICMP group is mandatory for all
          -- systems.

          icmpInMsgs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of ICMP messages which the
                      entity received.  Note that this counter includes
                      all those counted by icmpInErrors."
              ::= { icmp 1 }

          icmpInErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP messages which the entity
                      received but determined as having ICMP-specific
                      errors (bad ICMP checksums, bad length, etc.)."
              ::= { icmp 2 }

          icmpInDestUnreachs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Destination Unreachable
                      messages received."
              ::= { icmp 3 }

          icmpInTimeExcds OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Time Exceeded messages
                      received."
              ::= { icmp 4 }


          icmpInParmProbs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Parameter Problem messages
                      received."
              ::= { icmp 5 }

          icmpInSrcQuenchs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Source Quench messages
                      received."
              ::= { icmp 6 }

          icmpInRedirects OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Redirect messages received."
              ::= { icmp 7 }

          icmpInEchos OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Echo (request) messages
                      received."
              ::= { icmp 8 }

          icmpInEchoReps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Echo Reply messages received."
              ::= { icmp 9 }

          icmpInTimestamps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION


                      "The number of ICMP Timestamp (request) messages
                      received."
              ::= { icmp 10 }

          icmpInTimestampReps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Timestamp Reply messages
                      received."
              ::= { icmp 11 }

          icmpInAddrMasks OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Address Mask Request messages
                      received."
              ::= { icmp 12 }

          icmpInAddrMaskReps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Address Mask Reply messages
                      received."
              ::= { icmp 13 }

          icmpOutMsgs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of ICMP messages which this
                      entity attempted to send.  Note that this counter
                      includes all those counted by icmpOutErrors."
              ::= { icmp 14 }

          icmpOutErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP messages which this entity did
                      not send due to problems discovered within ICMP


                      such as a lack of buffers.  This value should not
                      include errors discovered outside the ICMP layer
                      such as the inability of IP to route the resultant
                      datagram.  In some implementations there may be no
                      types of error which contribute to this counter's
                      value."
              ::= { icmp 15 }

          icmpOutDestUnreachs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Destination Unreachable
                      messages sent."
              ::= { icmp 16 }

          icmpOutTimeExcds OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Time Exceeded messages sent."
              ::= { icmp 17 }

          icmpOutParmProbs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Parameter Problem messages
                      sent."
              ::= { icmp 18 }

          icmpOutSrcQuenchs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Source Quench messages sent."
              ::= { icmp 19 }

          icmpOutRedirects OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Redirect messages sent.  For a


                      host, this object will always be zero, since hosts
                      do not send redirects."
              ::= { icmp 20 }

          icmpOutEchos OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Echo (request) messages sent."
              ::= { icmp 21 }

          icmpOutEchoReps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Echo Reply messages sent."
              ::= { icmp 22 }

          icmpOutTimestamps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Timestamp (request) messages
                      sent."
              ::= { icmp 23 }

          icmpOutTimestampReps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Timestamp Reply messages
                      sent."
              ::= { icmp 24 }

          icmpOutAddrMasks OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Address Mask Request messages
                      sent."
              ::= { icmp 25 }


          icmpOutAddrMaskReps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Address Mask Reply messages
                      sent."
              ::= { icmp 26 }

          -- the TCP group

          -- Implementation of the TCP group is mandatory for all
          -- systems that implement the TCP.

          -- Note that instances of object types that represent
          -- information about a particular TCP connection are
          -- transient; they persist only as long as the connection
          -- in question.

          tcpRtoAlgorithm OBJECT-TYPE
              SYNTAX  INTEGER {
                          other(1),    -- none of the following

                          constant(2), -- a constant rto
                          rsre(3),     -- MIL-STD-1778, Appendix B
                          vanj(4)      -- Van Jacobson's algorithm [10]
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The algorithm used to determine the timeout value
                      used for retransmitting unacknowledged octets."
              ::= { tcp 1 }

          tcpRtoMin OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The minimum value permitted by a TCP
                      implementation for the retransmission timeout,
                      measured in milliseconds.  More refined semantics
                      for objects of this type depend upon the algorithm
                      used to determine the retransmission timeout.  In
                      particular, when the timeout algorithm is rsre(3),
                      an object of this type has the semantics of the
                      LBOUND quantity described in RFC 793."


              ::= { tcp 2 }

          tcpRtoMax OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The maximum value permitted by a TCP
                      implementation for the retransmission timeout,
                      measured in milliseconds.  More refined semantics
                      for objects of this type depend upon the algorithm
                      used to determine the retransmission timeout.  In
                      particular, when the timeout algorithm is rsre(3),
                      an object of this type has the semantics of the
                      UBOUND quantity described in RFC 793."
              ::= { tcp 3 }

          tcpMaxConn OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The limit on the total number of TCP connections
                      the entity can support.  In entities where the
                      maximum number of connections is dynamic, this
                      object should contain the value -1."
              ::= { tcp 4 }

          tcpActiveOpens OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of times TCP connections have made a
                      direct transition to the SYN-SENT state from the
                      CLOSED state."
              ::= { tcp 5 }

          tcpPassiveOpens OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of times TCP connections have made a
                      direct transition to the SYN-RCVD state from the
                      LISTEN state."
              ::= { tcp 6 }


          tcpAttemptFails OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of times TCP connections have made a
                      direct transition to the CLOSED state from either
                      the SYN-SENT state or the SYN-RCVD state, plus the
                      number of times TCP connections have made a direct
                      transition to the LISTEN state from the SYN-RCVD
                      state."
              ::= { tcp 7 }

          tcpEstabResets OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of times TCP connections have made a
                      direct transition to the CLOSED state from either
                      the ESTABLISHED state or the CLOSE-WAIT state."
              ::= { tcp 8 }

          tcpCurrEstab OBJECT-TYPE
              SYNTAX  Gauge
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of TCP connections for which the
                      current state is either ESTABLISHED or CLOSE-
                      WAIT."
              ::= { tcp 9 }

          tcpInSegs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of segments received, including
                      those received in error.  This count includes
                      segments received on currently established
                      connections."
              ::= { tcp 10 }

          tcpOutSegs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory


              DESCRIPTION
                      "The total number of segments sent, including
                      those on current connections but excluding those
                      containing only retransmitted octets."
              ::= { tcp 11 }

          tcpRetransSegs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of segments retransmitted - that
                      is, the number of TCP segments transmitted
                      containing one or more previously transmitted
                      octets."
              ::= { tcp 12 }

          -- the TCP Connection table

          -- The TCP connection table contains information about this
          -- entity's existing TCP connections.

          tcpConnTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF TcpConnEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A table containing TCP connection-specific
                      information."
              ::= { tcp 13 }

          tcpConnEntry OBJECT-TYPE
              SYNTAX  TcpConnEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Information about a particular current TCP
                      connection.  An object of this type is transient,
                      in that it ceases to exist when (or soon after)
                      the connection makes the transition to the CLOSED
                      state."
              INDEX   { tcpConnLocalAddress,
                        tcpConnLocalPort,
                        tcpConnRemAddress,
                        tcpConnRemPort }
              ::= { tcpConnTable 1 }


          TcpConnEntry ::=
              SEQUENCE {
                  tcpConnState
                      INTEGER,
                  tcpConnLocalAddress
                      IpAddress,
                  tcpConnLocalPort
                      INTEGER (0..65535),
                  tcpConnRemAddress
                      IpAddress,
                  tcpConnRemPort
                      INTEGER (0..65535)
              }

          tcpConnState OBJECT-TYPE
              SYNTAX  INTEGER {
                          closed(1),
                          listen(2),
                          synSent(3),
                          synReceived(4),
                          established(5),
                          finWait1(6),
                          finWait2(7),
                          closeWait(8),
                          lastAck(9),
                          closing(10),
                          timeWait(11),
                          deleteTCB(12)
                      }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The state of this TCP connection.

                      The only value which may be set by a management
                      station is deleteTCB(12).  Accordingly, it is
                      appropriate for an agent to return a `badValue'
                      response if a management station attempts to set
                      this object to any other value.

                      If a management station sets this object to the
                      value deleteTCB(12), then this has the effect of
                      deleting the TCB (as defined in RFC 793) of the
                      corresponding connection on the managed node,
                      resulting in immediate termination of the
                      connection.

                      As an implementation-specific option, a RST


                      segment may be sent from the managed node to the
                      other TCP endpoint (note however that RST segments
                      are not sent reliably)."
              ::= { tcpConnEntry 1 }

          tcpConnLocalAddress OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The local IP address for this TCP connection.  In
                      the case of a connection in the listen state which
                      is willing to accept connections for any IP
                      interface associated with the node, the value
                      0.0.0.0 is used."
              ::= { tcpConnEntry 2 }

          tcpConnLocalPort OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The local port number for this TCP connection."
              ::= { tcpConnEntry 3 }

          tcpConnRemAddress OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The remote IP address for this TCP connection."
              ::= { tcpConnEntry 4 }

          tcpConnRemPort OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The remote port number for this TCP connection."
              ::= { tcpConnEntry 5 }

          -- additional TCP objects

          tcpInErrs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory


              DESCRIPTION
                      "The total number of segments received in error
                      (e.g., bad TCP checksums)."
              ::= { tcp 14 }

          tcpOutRsts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of TCP segments sent containing the
                      RST flag."
              ::= { tcp 15 }

          -- the UDP group

          -- Implementation of the UDP group is mandatory for all
          -- systems which implement the UDP.

          udpInDatagrams OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of UDP datagrams delivered to
                      UDP users."
              ::= { udp 1 }

          udpNoPorts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of received UDP datagrams for
                      which there was no application at the destination
                      port."
              ::= { udp 2 }

          udpInErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of received UDP datagrams that could
                      not be delivered for reasons other than the lack
                      of an application at the destination port."
              ::= { udp 3 }


          udpOutDatagrams OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of UDP datagrams sent from this
                      entity."
              ::= { udp 4 }

          -- the UDP Listener table

          -- The UDP listener table contains information about this
          -- entity's UDP end-points on which a local application is
          -- currently accepting datagrams.

          udpTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF UdpEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A table containing UDP listener information."
              ::= { udp 5 }

          udpEntry OBJECT-TYPE
              SYNTAX  UdpEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Information about a particular current UDP
                      listener."
              INDEX   { udpLocalAddress, udpLocalPort }
              ::= { udpTable 1 }

          UdpEntry ::=
              SEQUENCE {
                  udpLocalAddress
                      IpAddress,
                  udpLocalPort
                      INTEGER (0..65535)
              }

          udpLocalAddress OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The local IP address for this UDP listener.  In


                      the case of a UDP listener which is willing to
                      accept datagrams for any IP interface associated
                      with the node, the value 0.0.0.0 is used."
              ::= { udpEntry 1 }

          udpLocalPort OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The local port number for this UDP listener."
              ::= { udpEntry 2 }

          -- the EGP group

          -- Implementation of the EGP group is mandatory for all
          -- systems which implement the EGP.

          egpInMsgs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of EGP messages received without
                      error."
              ::= { egp 1 }

          egpInErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of EGP messages received that proved
                      to be in error."
              ::= { egp 2 }

          egpOutMsgs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of locally generated EGP
                      messages."
              ::= { egp 3 }

          egpOutErrors OBJECT-TYPE
              SYNTAX  Counter


              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of locally generated EGP messages not
                      sent due to resource limitations within an EGP
                      entity."
              ::= { egp 4 }

          -- the EGP Neighbor table

          -- The EGP neighbor table contains information about this
          -- entity's EGP neighbors.

          egpNeighTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF EgpNeighEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "The EGP neighbor table."
              ::= { egp 5 }

          egpNeighEntry OBJECT-TYPE
              SYNTAX  EgpNeighEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Information about this entity's relationship with
                      a particular EGP neighbor."
              INDEX   { egpNeighAddr }
              ::= { egpNeighTable 1 }

          EgpNeighEntry ::=
              SEQUENCE {
                  egpNeighState
                      INTEGER,
                  egpNeighAddr
                      IpAddress,
                  egpNeighAs
                      INTEGER,
                  egpNeighInMsgs
                      Counter,
                  egpNeighInErrs
                      Counter,
                  egpNeighOutMsgs
                      Counter,
                  egpNeighOutErrs
                      Counter,


                  egpNeighInErrMsgs
                      Counter,
                  egpNeighOutErrMsgs
                      Counter,
                  egpNeighStateUps
                      Counter,
                  egpNeighStateDowns
                      Counter,
                  egpNeighIntervalHello
                      INTEGER,
                  egpNeighIntervalPoll
                      INTEGER,
                  egpNeighMode
                      INTEGER,
                  egpNeighEventTrigger
                      INTEGER
              }

          egpNeighState OBJECT-TYPE
              SYNTAX  INTEGER {
                          idle(1),
                          acquisition(2),
                          down(3),
                          up(4),
                          cease(5)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The EGP state of the local system with respect to
                      this entry's EGP neighbor.  Each EGP state is
                      represented by a value that is one greater than
                      the numerical value associated with said state in
                      RFC 904."
              ::= { egpNeighEntry 1 }

          egpNeighAddr OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The IP address of this entry's EGP neighbor."
              ::= { egpNeighEntry 2 }

          egpNeighAs OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory


              DESCRIPTION
                      "The autonomous system of this EGP peer.  Zero
                      should be specified if the autonomous system
                      number of the neighbor is not yet known."
              ::= { egpNeighEntry 3 }

          egpNeighInMsgs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of EGP messages received without error
                      from this EGP peer."
              ::= { egpNeighEntry 4 }

          egpNeighInErrs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of EGP messages received from this EGP
                      peer that proved to be in error (e.g., bad EGP
                      checksum)."
              ::= { egpNeighEntry 5 }

          egpNeighOutMsgs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of locally generated EGP messages to
                      this EGP peer."
              ::= { egpNeighEntry 6 }

          egpNeighOutErrs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of locally generated EGP messages not
                      sent to this EGP peer due to resource limitations
                      within an EGP entity."
              ::= { egpNeighEntry 7 }

          egpNeighInErrMsgs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory


              DESCRIPTION
                      "The number of EGP-defined error messages received
                      from this EGP peer."
              ::= { egpNeighEntry 8 }

          egpNeighOutErrMsgs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of EGP-defined error messages sent to
                      this EGP peer."
              ::= { egpNeighEntry 9 }

          egpNeighStateUps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of EGP state transitions to the UP
                      state with this EGP peer."
              ::= { egpNeighEntry 10 }

          egpNeighStateDowns OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of EGP state transitions from the UP
                      state to any other state with this EGP peer."
              ::= { egpNeighEntry 11 }

          egpNeighIntervalHello OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The interval between EGP Hello command
                      retransmissions (in hundredths of a second).  This
                      represents the t1 timer as defined in RFC 904."
              ::= { egpNeighEntry 12 }

          egpNeighIntervalPoll OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The interval between EGP poll command


                      retransmissions (in hundredths of a second).  This
                      represents the t3 timer as defined in RFC 904."
              ::= { egpNeighEntry 13 }

          egpNeighMode OBJECT-TYPE
              SYNTAX  INTEGER { active(1), passive(2) }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The polling mode of this EGP entity, either
                      passive or active."
              ::= { egpNeighEntry 14 }

          egpNeighEventTrigger OBJECT-TYPE
              SYNTAX  INTEGER { start(1), stop(2) }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "A control variable used to trigger operator-
                      initiated Start and Stop events.  When read, this
                      variable always returns the most recent value that
                      egpNeighEventTrigger was set to.  If it has not
                      been set since the last initialization of the
                      network management subsystem on the node, it
                      returns a value of `stop'.

                      When set, this variable causes a Start or Stop
                      event on the specified neighbor, as specified on
                      pages 8-10 of RFC 904.  Briefly, a Start event
                      causes an Idle peer to begin neighbor acquisition
                      and a non-Idle peer to reinitiate neighbor
                      acquisition.  A stop event causes a non-Idle peer
                      to return to the Idle state until a Start event
                      occurs, either via egpNeighEventTrigger or
                      otherwise."
              ::= { egpNeighEntry 15 }

          -- additional EGP objects

          egpAs OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The autonomous system number of this EGP entity."
              ::= { egp 6 }


          -- the Transmission group

          -- Based on the transmission media underlying each interface
          -- on a system, the corresponding portion of the Transmission
          -- group is mandatory for that system.

          -- When Internet-standard definitions for managing
          -- transmission media are defined, the transmission group is
          -- used to provide a prefix for the names of those objects.

          -- Typically, such definitions reside in the experimental
          -- portion of the MIB until they are "proven", then as a
          -- part of the Internet standardization process, the
          -- definitions are accordingly elevated and a new object
          -- identifier, under the transmission group is defined. By
          -- convention, the name assigned is:
          --
          --     type OBJECT IDENTIFIER    ::= { transmission number }
          --
          -- where "type" is the symbolic value used for the media in
          -- the ifType column of the ifTable object, and "number" is
          -- the actual integer value corresponding to the symbol.

          -- the SNMP group

          -- Implementation of the SNMP group is mandatory for all
          -- systems which support an SNMP protocol entity.  Some of
          -- the objects defined below will be zero-valued in those
          -- SNMP implementations that are optimized to support only
          -- those functions specific to either a management agent or
          -- a management station.  In particular, it should be
          -- observed that the objects below refer to an SNMP entity,
          -- and there may be several SNMP entities residing on a
          -- managed node (e.g., if the node is hosting acting as
          -- a management station).

          snmpInPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of Messages delivered to the
                      SNMP entity from the transport service."
              ::= { snmp 1 }

          snmpOutPkts OBJECT-TYPE
              SYNTAX  Counter


              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Messages which were
                      passed from the SNMP protocol entity to the
                      transport service."
              ::= { snmp 2 }

          snmpInBadVersions OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Messages which were
                      delivered to the SNMP protocol entity and were for
                      an unsupported SNMP version."
              ::= { snmp 3 }

          snmpInBadCommunityNames OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Messages delivered to
                      the SNMP protocol entity which used a SNMP
                      community name not known to said entity."
              ::= { snmp 4 }

          snmpInBadCommunityUses OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Messages delivered to
                      the SNMP protocol entity which represented an SNMP
                      operation which was not allowed by the SNMP
                      community named in the Message."
              ::= { snmp 5 }

          snmpInASNParseErrs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of ASN.1 or BER errors
                      encountered by the SNMP protocol entity when
                      decoding received SNMP Messages."
              ::= { snmp 6 }


          -- { snmp 7 } is not used

          snmpInTooBigs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP PDUs which were
                      delivered to the SNMP protocol entity and for
                      which the value of the error-status field is
                      `tooBig'."
              ::= { snmp 8 }

          snmpInNoSuchNames OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP PDUs which were
                      delivered to the SNMP protocol entity and for
                      which the value of the error-status field is
                      `noSuchName'."
              ::= { snmp 9 }

          snmpInBadValues OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP PDUs which were
                      delivered to the SNMP protocol entity and for
                      which the value of the error-status field is
                      `badValue'."
              ::= { snmp 10 }

          snmpInReadOnlys OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number valid SNMP PDUs which were
                      delivered to the SNMP protocol entity and for
                      which the value of the error-status field is
                      `readOnly'.  It should be noted that it is a
                      protocol error to generate an SNMP PDU which
                      contains the value `readOnly' in the error-status
                      field, as such this object is provided as a means
                      of detecting incorrect implementations of the


                      SNMP."
              ::= { snmp 11 }

          snmpInGenErrs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP PDUs which were
                      delivered to the SNMP protocol entity and for
                      which the value of the error-status field is
                      `genErr'."
              ::= { snmp 12 }

          snmpInTotalReqVars OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of MIB objects which have been
                      retrieved successfully by the SNMP protocol entity
                      as the result of receiving valid SNMP Get-Request
                      and Get-Next PDUs."
              ::= { snmp 13 }

          snmpInTotalSetVars OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of MIB objects which have been
                      altered successfully by the SNMP protocol entity
                      as the result of receiving valid SNMP Set-Request
                      PDUs."
              ::= { snmp 14 }

          snmpInGetRequests OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Get-Request PDUs which
                      have been accepted and processed by the SNMP
                      protocol entity."
              ::= { snmp 15 }

          snmpInGetNexts OBJECT-TYPE
              SYNTAX  Counter


              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Get-Next PDUs which have
                      been accepted and processed by the SNMP protocol
                      entity."
              ::= { snmp 16 }

          snmpInSetRequests OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Set-Request PDUs which
                      have been accepted and processed by the SNMP
                      protocol entity."
              ::= { snmp 17 }

          snmpInGetResponses OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Get-Response PDUs which
                      have been accepted and processed by the SNMP
                      protocol entity."
              ::= { snmp 18 }

          snmpInTraps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Trap PDUs which have
                      been accepted and processed by the SNMP protocol
                      entity."
              ::= { snmp 19 }

          snmpOutTooBigs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP PDUs which were
                      generated by the SNMP protocol entity and for
                      which the value of the error-status field is
                      `tooBig.'"
              ::= { snmp 20 }


          snmpOutNoSuchNames OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP PDUs which were
                      generated by the SNMP protocol entity and for
                      which the value of the error-status is
                      `noSuchName'."
              ::= { snmp 21 }

          snmpOutBadValues OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP PDUs which were
                      generated by the SNMP protocol entity and for
                      which the value of the error-status field is
                      `badValue'."
              ::= { snmp 22 }

          -- { snmp 23 } is not used

          snmpOutGenErrs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP PDUs which were
                      generated by the SNMP protocol entity and for
                      which the value of the error-status field is
                      `genErr'."
              ::= { snmp 24 }

          snmpOutGetRequests OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Get-Request PDUs which
                      have been generated by the SNMP protocol entity."
              ::= { snmp 25 }

          snmpOutGetNexts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory


              DESCRIPTION
                      "The total number of SNMP Get-Next PDUs which have
                      been generated by the SNMP protocol entity."
              ::= { snmp 26 }

          snmpOutSetRequests OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Set-Request PDUs which
                      have been generated by the SNMP protocol entity."
              ::= { snmp 27 }

          snmpOutGetResponses OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Get-Response PDUs which
                      have been generated by the SNMP protocol entity."
              ::= { snmp 28 }

          snmpOutTraps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Trap PDUs which have
                      been generated by the SNMP protocol entity."
              ::= { snmp 29 }

          snmpEnableAuthenTraps OBJECT-TYPE
              SYNTAX  INTEGER { enabled(1), disabled(2) }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "Indicates whether the SNMP agent process is
                      permitted to generate authentication-failure
                      traps.  The value of this object overrides any
                      configuration information; as such, it provides a
                      means whereby all authentication-failure traps may
                      be disabled.

                      Note that it is strongly recommended that this
                      object be stored in non-volatile memory so that it
                      remains constant between re-initializations of the
                      network management system."


              ::= { snmp 30 }

END

DEMO-MIB DEFINITIONS ::= BEGIN

EXPORTS -- everything --;

IMPORTS
    OBJECT-TYPE, OBJECT-GROUP, Counter64, Gauge32, NsapAddress
	FROM SMP-SMI
    ifIndex
	FROM RFC1213-MIB;


mtrDemo		OBJECT IDENTIFIER ::=
		    { joint-iso-ccitt mhs(6) group(6) mtr(200) 5 }


mtrDemoGroup OBJECT-GROUP
    OBJECTS { mtrBigNumber, mtrNsapAddress, mtrBitString, mtrColumn }
    DESCRIPTION
	"The demo group."
    ::= { mtrDemo 1 }

mtrBigNumber OBJECT-TYPE
    SYNTAX     Counter64
    MAX-ACCESS read-write
    STATUS     mandatory
    DESCRIPTION
	"A big number.  On startup, the agent initializes this to the value

		18,023,456,790,123,456,789
	"
    ::= { mtrDemoGroup 1 }

mtrNsapAddress OBJECT-TYPE
    SYNTAX     NsapAddress
    MAX-ACCESS read-write
    STATUS     mandatory
    DESCRIPTION
	"An OSI Network Address.  On startup, the agent initializes this to
	 the value

		NS+47000580ffff000000012301230123456789ab01
	"
    ::= { mtrDemoGroup 2 }

mtrBitString OBJECT-TYPE
    SYNTAX     BIT STRING { 
                          rejectA-A(0),
                          rejectA-B(1),
                          rejectA-S(2),
                          rejectA-M(3),
                          rejectB-A(4),
                          rejectB-B(5),
                          rejectB-S(6),
                          rejectB-M(7),
                          rejectS-A(8),
                          rejectS-B(9),
                          rejectS-S(10),
                          rejectS-M(11),
                          rejectM-A(12),
                          rejectM-B(13),
                          rejectM-S(14),
                          rejectM-M(15)
		}
    MAX-ACCESS read-write
    STATUS     mandatory
    DESCRIPTION
	"A string of bits.  On startup, the agent initializes this to the value

		'0000000000000000'B
	"
    ::= { mtrDemoGroup 3 }

mtrTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF MtrEntry
    MAX-ACCESS not-accessible
    STATUS     mandatory
    DESCRIPTION
	"A mtr table used for testing..."
    ::= { mtrDemoGroup 4 }

mtrEntry OBJECT-TYPE
    SYNTAX     MtrEntry
    MAX-ACCESS not-accessible
    STATUS     mandatory
    DESCRIPTION
	"An entry (conceptual row) in the mtrTable."
    INDEX   { mtrIndex }
    ::= { mtrTable 1 }

MtrEntry ::=
    SEQUENCE {
	mtrIndex INTEGER (0..50000),
	mtrColumn Integer32
    }

mtrIndex OBJECT-TYPE
    SYNTAX     INTEGER (0..50000)
    MAX-ACCESS not-accessible
    STATUS     mandatory
    DESCRIPTION
	"The auxilary variable used to identify (conceptual) rows in the 
	 mtrTable."
    ::= { mtrEntry 1 }

mtrColumn OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     mandatory
    DESCRIPTION
	"The column."
    ::= { mtrEntry 2 }


END
SNMPv2-SMI DEFINITIONS ::= BEGIN;

          security       OBJECT IDENTIFIER ::= { internet 5 }

          snmpV2         OBJECT IDENTIFIER ::= { internet 6 }

          -- transport domains
          snmpDomains    OBJECT IDENTIFIER ::= { snmpV2 1 }

          -- transport proxies
          snmpProxys     OBJECT IDENTIFIER ::= { snmpV2 2 }

          -- module identities
          snmpModules    OBJECT IDENTIFIER ::= { snmpV2 3 }

END

SNMPv2-TC DEFINITIONS ::= BEGIN

          IMPORTS
              ObjectSyntax, Integer32, TimeTicks
                  FROM SNMPv2-SMI;


          DisplayString ::= TEXTUAL-CONVENTION
              DISPLAY-HINT "255a"
              STATUS       current
              DESCRIPTION
                      "Represents textual information taken from the NVT
                      ASCII character set, as defined in pages 4, 10-11
                      of RFC 854.  Any object defined using this syntax
                      may not exceed 255 characters in length."
              SYNTAX       OCTET STRING (SIZE (0..255))

          PhysAddress ::= TEXTUAL-CONVENTION
              DISPLAY-HINT "1x:"
              STATUS       current
              DESCRIPTION
                      "Represents media- or physical-level addresses."
              SYNTAX       OCTET STRING

          MacAddress ::= TEXTUAL-CONVENTION
              DISPLAY-HINT "1x:"
              STATUS       current
              DESCRIPTION
                      "Represents an 802 MAC address represented in the
                      'canonical' order defined by IEEE 802.1a, i.e., as
                      if it were transmitted least significant bit
                      first, even though 802.5 (in contrast to other
                      802.x protocols) requires MAC addresses to be
                      transmitted most significant bit first."
              SYNTAX       OCTET STRING (SIZE (6))

          TruthValue ::= TEXTUAL-CONVENTION
              STATUS       current
              DESCRIPTION
                      "Represents a boolean value."
              SYNTAX       INTEGER { true(1), false(2) }


          TestAndIncr ::= TEXTUAL-CONVENTION
              STATUS       current
              DESCRIPTION
                      "Represents integer-valued information used for
                      atomic operations.  When the management protocol
                      is used to specify that an object instance having
                      this syntax is to be modified, the new value
                      supplied via the management protocol must
                      precisely match the value presently held by the
                      instance.  If not, the management protocol set
                      operation fails with an error of
                      'inconsistentValue'.  Otherwise, if the current
                      value is the maximum value of 2^31-1 (2147483647
                      decimal), then the value held by the instance is
                      wrapped to zero; otherwise, the value held by the
                      instance is incremented by one.  (Note that
                      regardless of whether the management protocol set
                      operation succeeds, the variable-binding in the
                      request and response PDUs are identical.)

                      The value of the ACCESS clause for objects having
                      this syntax is either 'read-write' or 'read-
                      create'.  When an instance of a columnar object
                      having this syntax is created, any value may be
                      supplied via the management protocol."
              SYNTAX       INTEGER (0..2147483647)


          AutonomousType ::= TEXTUAL-CONVENTION
              STATUS       current
              DESCRIPTION
                      "Represents an independently extensible type
                      identification value.  It may, for example,
                      indicate a particular sub-tree with further MIB
                      definitions, or define a particular type of
                      protocol or hardware."
              SYNTAX       OBJECT IDENTIFIER

          InstancePointer ::= TEXTUAL-CONVENTION
              STATUS       current
              DESCRIPTION
                      "A pointer to a specific instance of a conceptual
                      row of a MIB table in the managed device.  By
                      convention, it is the name of the particular
                      instance of the first columnar object in the
                      conceptual row."
              SYNTAX       OBJECT IDENTIFIER


          RowStatus ::= TEXTUAL-CONVENTION
              STATUS       current
              DESCRIPTION
                      "The RowStatus textual convention is used to
                      manage the creation and deletion of conceptual
                      rows, and is used as the value of the SYNTAX
                      clause for the status column of a conceptual row
                      (as described in Section 7.7.1 of [2].)

                      The status column has six defined values:

                           - 'active', which indicates that the
                           conceptual row is available for use by the
                           managed device;

                           - 'notInService', which indicates that the
                           conceptual row exists in the agent, but is
                           unavailable for use by the managed device
                           (see NOTE below);

                           - 'notReady', which indicates that the
                           conceptual row exists in the agent, but is
                           missing information necessary in order to be
                           available for use by the managed device;

                           - 'createAndGo', which is supplied by a
                           management station wishing to create a new
                           instance of a conceptual row and to have it
                           available for use by the managed device;

                           - 'createAndWait', which is supplied by a
                           management station wishing to create a new
                           instance of a conceptual row but not to have
                           it available for use by the managed device;
                           and,

                           - 'destroy', which is supplied by a
                           management station wishing to delete all of
                           the instances associated with an existing
                           conceptual row.

                      Whereas five of the six values (all except
                      'notReady') may be specified in a management
                      protocol set operation, only three values will be
                      returned in response to a management protocol


                      retrieval operation: 'notReady', 'notInService' or
                      'active'.  That is, when queried, an existing
                      conceptual row has only three states: it is either
                      available for use by the managed device (the
                      status column has value 'active'); it is not
                      available for use by the managed device, though
                      the agent has sufficient information to make it so
                      (the status column has value 'notInService'); or,
                      it is not available for use by the managed device,
                      because the agent lacks sufficient information
                      (the status column has value 'notReady').

                                          NOTE WELL

                           This textual convention may be used for a MIB
                           table, irrespective of whether the values of
                           that table's conceptual rows are able to be
                           modified while it is active, or whether its
                           conceptual rows must be taken out of service
                           in order to be modified.  That is, it is the
                           responsibility of the DESCRIPTION clause of
                           the status column to specify whether the
                           status column must be 'notInService' in order
                           for the value of some other column of the
                           same conceptual row to be modified.


                      To summarize the effect of having a conceptual row
                      with a status column having a SYNTAX clause value
                      of RowStatus, consider the following state
                      diagram:

                                            STATE
                 +--------------+-----------+-------------+-------------
                 |      A       |     B     |      C      |      D
                 |              |status col.|status column|
                 |status column |    is     |      is     |status column
       ACTION    |does not exist|  notReady | notInService|  is active
   --------------+--------------+-----------+-------------+-------------
   set status    |noError    ->D|inconsist- |inconsistent-|inconsistent-
   column to     |       or     |   entValue|        Value|        Value
   createAndGo   |inconsistent- |           |             |
                 |         Value|           |             |
   --------------+--------------+-----------+-------------+-------------
   set status    |noError  see 1|inconsist- |inconsistent-|inconsistent-
   column to     |       or     |   entValue|        Value|        Value
   createAndWait |wrongValue    |           |             |
   --------------+--------------+-----------+-------------+-------------
   set status    |inconsistent- |inconsist- |noError      |noError
   column to     |         Value|   entValue|             |
   active        |              |           |             |
                 |              |     or    |             |
                 |              |           |             |
                 |              |see 2   ->D|          ->D|          ->D
   --------------+--------------+-----------+-------------+-------------
   set status    |inconsistent- |inconsist- |noError      |noError   ->C
   column to     |         Value|   entValue|             |
   notInService  |              |           |             |
                 |              |     or    |             |      or
                 |              |           |             |
                 |              |see 3   ->C|          ->C|wrongValue
   --------------+--------------+-----------+-------------+-------------
   set status    |noError       |noError    |noError      |noError
   column to     |              |           |             |
   destroy       |           ->A|        ->A|          ->A|          ->A
   --------------+--------------+-----------+-------------+-------------
   set any other |see 4         |noError    |noError      |noError
   column to some|              |           |             |
   value         |           ->A|      see 1|          ->C|          ->D
   --------------+--------------+-----------+-------------+-------------


                      (1) goto B or C, depending on information
                      available to the agent.

                      (2) if other variable bindings included in the
                      same PDU, provide values for all columns which are
                      missing but required, then return noError and goto
                      D.

                      (3) if other variable bindings included in the
                      same PDU, provide values for all columns which are
                      missing but required, then return noError and goto
                      C.

                      (4) at the discretion of the agent, either noError
                      or inconsistentValue may be returned.

                      NOTE: Other processing of the set request may
                      result in a response other than noError being
                      returned, e.g., wrongValue, noCreation, etc.

                                   Conceptual Row Creation

                      There are four potential interactions when
                      creating a conceptual row: selecting an instance-
                      identifier which is not in use; creating the
                      conceptual row; initializing any objects for which
                      the agent does not supply a default; and, making
                      the conceptual row available for use by the
                      managed device.

                      Interaction 1: Selecting an Instance-Identifier

                      The algorithm used to select an instance-
                      identifier varies for each conceptual row.  In
                      some cases, the instance-identifier is
                      semantically significant, e.g., the destination
                      address of a route, and a management station
                      selects the instance-identifier according to the
                      semantics.

                      In other cases, the instance-identifier is used
                      solely to distinguish conceptual rows, and a
                      management station without specific knowledge of
                      the conceptual row might examine the instances


                      present in order to determine an unused instance-
                      identifier.  (This approach may be used, but it is
                      often highly sub-optimal; however, it is also a
                      questionable practice for a naive management
                      station to attempt conceptual row creation.)

                      Alternately, the MIB module which defines the
                      conceptual row might provide one or more objects
                      which provide assistance in determining an unused
                      instance-identifier.  For example, if the
                      conceptual row is indexed by an integer-value,
                      then an object having an integer-valued SYNTAX
                      clause might be defined for such a purpose,
                      allowing a management station to issue a
                      management protocol retrieval operation.  In order
                      to avoid unnecessary collisions between competing
                      management stations, 'adjacent' retrievals of this
                      object should be different.

                      Finally, the management station could select a
                      pseudo-random number to use as the index.  In the
                      event that this index was already in use and an
                      inconsistentValue was returned in response to the
                      management protocol set operation, the management
                      station should simply select a new pseudo-random
                      number and retry the operation.

                      A MIB designer should choose between the two
                      latter algorithms based on the size of the table
                      (and therefore the efficiency of each algorithm).
                      For tables in which a large number of entries are
                      expected, it is recommended that a MIB object be
                      defined that returns an acceptable index for
                      creation.  For tables with small numbers of
                      entries, it is recommended that the latter
                      pseudo-random index mechanism be used.

                      Interaction 2: Creating the Conceptual Row

                      Once an unused instance-identifier has been
                      selected, the management station determines if it
                      wishes to create and activate the conceptual row
                      in one transaction or in a negotiated set of
                      interactions.


                      Interaction 2a: Creating and Activating the
                      Conceptual Row

                      The management station must first determine the
                      column requirements, i.e., it must determine those
                      columns for which it must or must not provide
                      values.  Depending on the complexity of the table
                      and the management station's knowledge of the
                      agent's capabilities, this determination can be
                      made locally by the management station.
                      Alternately, the management station issues a
                      management protocol get operation to examine all
                      columns in the conceptual row that it wishes to
                      create.  In response, for each column, there are
                      three possible outcomes:

                           - a value is returned, indicating that some
                           other management station has already created
                           this conceptual row.  We return to
                           interaction 1.

                           - the exception 'noSuchInstance' is returned,
                           indicating that the agent implements the
                           object-type associated with this column, and
                           that this column in at least one conceptual
                           row would be accessible in the MIB view used
                           by the retrieval were it to exist. For those
                           columns to which the agent provides read-
                           create access, the 'noSuchInstance' exception
                           tells the management station that it should
                           supply a value for this column when the
                           conceptual row is to be created.

                           - the exception 'noSuchObject' is returned,
                           indicating that the agent does not implement
                           the object-type associated with this column
                           or that there is no conceptual row for which
                           this column would be accessible in the MIB
                           view used by the retrieval.  As such, the
                           management station can not issue any
                           management protocol set operations to create
                           an instance of this column.

                      Once the column requirements have been determined,
                      a management protocol set operation is accordingly


                      issued.  This operation also sets the new instance
                      of the status column to 'createAndGo'.

                      When the agent processes the set operation, it
                      verifies that it has sufficient information to
                      make the conceptual row available for use by the
                      managed device.  The information available to the
                      agent is provided by two sources: the management
                      protocol set operation which creates the
                      conceptual row, and, implementation-specific
                      defaults supplied by the agent (note that an agent
                      must provide implementation-specific defaults for
                      at least those objects which it implements as
                      read-only).  If there is sufficient information
                      available, then the conceptual row is created, a
                      'noError' response is returned, the status column
                      is set to 'active', and no further interactions
                      are necessary (i.e., interactions 3 and 4 are
                      skipped).  If there is insufficient information,
                      then the conceptual row is not created, and the
                      set operation fails with an error of
                      'inconsistentValue'.  On this error, the
                      management station can issue a management protocol
                      retrieval operation to determine if this was
                      because it failed to specify a value for a
                      required column, or, because the selected instance
                      of the status column already existed.  In the
                      latter case, we return to interaction 1.  In the
                      former case, the management station can re-issue
                      the set operation with the additional information,
                      or begin interaction 2 again using 'createAndWait'
                      in order to negotiate creation of the conceptual
                      row.


                                          NOTE WELL

                           Regardless of the method used to determine
                           the column requirements, it is possible that
                           the management station might deem a column
                           necessary when, in fact, the agent will not
                           allow that particular columnar instance to be
                           created or written.  In this case, the
                           management protocol set operation will fail
                           with an error such as 'noCreation' or
                           'notWritable'.  In this case, the management
                           station decides whether it needs to be able
                           to set a value for that particular columnar
                           instance.  If not, the management station
                           re-issues the management protocol set
                           operation, but without setting a value for
                           that particular columnar instance; otherwise,
                           the management station aborts the row
                           creation algorithm.

                      Interaction 2b: Negotiating the Creation of the
                      Conceptual Row

                      The management station issues a management
                      protocol set operation which sets the desired
                      instance of the status column to 'createAndWait'.
                      If the agent is unwilling to process a request of
                      this sort, the set operation fails with an error
                      of 'wrongValue'.  (As a consequence, such an agent
                      must be prepared to accept a single management
                      protocol set operation, i.e., interaction 2a
                      above, containing all of the columns indicated by
                      its column requirements.) Otherwise, the
                      conceptual row is created, a 'noError' response is
                      returned, and the status column is immediately set
                      to either 'notInService' or 'notReady', depending
                      on whether it has sufficient information to make
                      the conceptual row available for use by the
                      managed device.  If there is sufficient
                      information available, then the status column is
                      set to 'notInService'; otherwise, if there is
                      insufficient information, then the status column
                      is set to 'notReady'.  Regardless, we proceed to
                      interaction 3.


                      Interaction 3: Initializing non-defaulted Objects

                      The management station must now determine the
                      column requirements.  It issues a management
                      protocol get operation to examine all columns in
                      the created conceptual row.  In the response, for
                      each column, there are three possible outcomes:

                           - a value is returned, indicating that the
                           agent implements the object-type associated
                           with this column and had sufficient
                           information to provide a value.  For those
                           columns to which the agent provides read-
                           create access, a value return tells the
                           management station that it may issue
                           additional management protocol set
                           operations, if it desires, in order to change
                           the value associated with this column.

                           - the exception 'noSuchInstance' is returned,
                           indicating that the agent implements the
                           object-type associated with this column, and
                           that this column in at least one conceptual
                           row would be accessible in the MIB view used
                           by the retrieval were it to exist. However,
                           the agent does not have sufficient
                           information to provide a value, and until a
                           value is provided, the conceptual row may not
                           be made available for use by the managed
                           device.  For those columns to which the agent
                           provides read-create access, the
                           'noSuchInstance' exception tells the
                           management station that it must issue
                           additional management protocol set
                           operations, in order to provide a value
                           associated with this column.

                           - the exception 'noSuchObject' is returned,
                           indicating that the agent does not implement
                           the object-type associated with this column
                           or that there is no conceptual row for which
                           this column would be accessible in the MIB
                           view used by the retrieval.  As such, the
                           management station can not issue any
                           management protocol set operations to create


                           an instance of this column.

                      If the value associated with the status column is
                      'notReady', then the management station must first
                      deal with all 'noSuchInstance' columns, if any.
                      Having done so, the value of the status column
                      becomes 'notInService', and we proceed to
                      interaction 4.

                      Interaction 4: Making the Conceptual Row Available

                      Once the management station is satisfied with the
                      values associated with the columns of the
                      conceptual row, it issues a management protocol
                      set operation to set the status column to
                      'active'.  If the agent has sufficient information
                      to make the conceptual row available for use by
                      the managed device, the management protocol set
                      operation succeeds (a 'noError' response is
                      returned).  Otherwise, the management protocol set
                      operation fails with an error of
                      'inconsistentValue'.

                                          NOTE WELL

                           A conceptual row having a status column with
                           value 'notInService' or 'notReady' is
                           unavailable to the managed device.  As such,
                           it is possible for the managed device to
                           create its own instances during the time
                           between the management protocol set operation
                           which sets the status column to
                           'createAndWait' and the management protocol
                           set operation which sets the status column to
                           'active'.  In this case, when the management
                           protocol set operation is issued to set the
                           status column to 'active', the values held in
                           the agent supersede those used by the managed
                           device.

                      If the management station is prevented from
                      setting the status column to 'active' (e.g., due
                      to management station or network failure) the
                      conceptual row will be left in the 'notInService'
                      or 'notReady' state, consuming resources


                      indefinitely.  The agent must detect conceptual
                      rows that have been in either state for an
                      abnormally long period of time and remove them.
                      This period of time should be long enough to allow
                      for human response time (including 'think time')
                      between the creation of the conceptual row and the
                      setting of the status to 'active'.  It is
                      suggested that this period be approximately 5
                      minutes in length.

                                  Conceptual Row Suspension

                      When a conceptual row is 'active', the management
                      station may issue a management protocol set
                      operation which sets the instance of the status
                      column to 'notInService'.  If the agent is
                      unwilling to do so, the set operation fails with
                      an error of 'wrongValue'.  Otherwise, the
                      conceptual row is taken out of service, and a
                      'noError' response is returned.  It is the
                      responsibility of the the DESCRIPTION clause of
                      the status column to indicate under what
                      circumstances the status column should be taken
                      out of service (e.g., in order for the value of
                      some other column of the same conceptual row to be
                      modified).

                                   Conceptual Row Deletion

                      For deletion of conceptual rows, a management
                      protocol set operation is issued which sets the
                      instance of the status column to 'destroy'.  This
                      request may be made regardless of the current
                      value of the status column (e.g., it is possible
                      to delete conceptual rows which are either
                      'notReady', 'notInService' or 'active'.) If the
                      operation succeeds, then all instances associated
                      with the conceptual row are immediately removed."


              SYNTAX       INTEGER {
                               -- the following two values are states:
                               -- these values may be read or written
                               active(1),
                               notInService(2),

                               -- the following value is a state:
                               -- this value may be read, but not written
                               notReady(3),

                               -- the following three values are
                               -- actions: these values may be written,
                               --   but are never read
                               createAndGo(4),
                               createAndWait(5),
                               destroy(6)
                           }


          TimeStamp ::= TEXTUAL-CONVENTION
              STATUS       current
              DESCRIPTION
                      "The value of MIB-II's sysUpTime object at which a
                      specific occurrence happened.  The specific
                      occurrence must be defined in the description of
                      any object defined using this type."
              SYNTAX       TimeTicks

          TimeInterval ::= TEXTUAL-CONVENTION
              STATUS       current
              DESCRIPTION
                      "A period of time, measured in units of 0.01
                      seconds."
              SYNTAX       INTEGER (0..2147483647)


          DateAndTime ::= TEXTUAL-CONVENTION
              DISPLAY-HINT "2d-1d-1d,1d:1d:1d.1d,1a1d:1d"
              STATUS       current
              DESCRIPTION
                      "A date-time specification.

                      field  octets  contents                  range
                      -----  ------  --------                  -----
                        1      1-2   year                      0..65536
                        2       3    month                     1..12
                        3       4    day                       1..31
                        4       5    hour                      0..23
                        5       6    minutes                   0..59
                        6       7    seconds                   0..60
                                     (use 60 for leap-second)
                        7       8    deci-seconds              0..9
                        8       9    direction from UTC        '+' / '-'
                        9      10    hours from UTC            0..11
                       10      11    minutes from UTC          0..59

                      For example, Tuesday May 26, 1992 at 1:30:15 PM
                      EDT would be displayed as:

                                  1992-5-26,13:30:15.0,-4:0

                      Note that if only local time is known, then
                      timezone information (fields 8-10) is not
                      present."
              SYNTAX       OCTET STRING (SIZE (8 | 11))

END
SNMPv2-PARTY-MIB DEFINITIONS ::= BEGIN

          IMPORTS
              MODULE-IDENTITY, OBJECT-TYPE, snmpModules,
                  UInteger32
                  FROM SNMPv2-SMI
              TEXTUAL-CONVENTION, RowStatus, TruthValue
                  FROM SNMPv2-TC
              MODULE-COMPLIANCE, OBJECT-GROUP
                  FROM SNMPv2-CONF;

          partyMIB MODULE-IDENTITY
              LAST-UPDATED "9304010000Z"
              ORGANIZATION "IETF SNMP Security Working Group"
              CONTACT-INFO
                      "        Keith McCloghrie

                       Postal: Hughes LAN Systems
                               1225 Charleston Road
                               Mountain View, CA  94043
                               US

                          Tel: +1 415 966 7934
                          Fax: +1 415 960 3738

                       E-mail: kzm@hls.com"
              DESCRIPTION
                      "The MIB module describing SNMPv2 parties."
              ::= { snmpModules 3 }


          -- textual conventions

          Party ::= TEXTUAL-CONVENTION
              STATUS       current
              DESCRIPTION
                      "Denotes a SNMPv2 party identifier.

                      Note that agents may impose implementation
                      limitations on the length of OIDs used to identify
                      Parties. As such, management stations creating
                      new parties should be aware that using an
                      excessively long OID may result in the agent
                      refusing to perform the set operation and instead
                      returning the appropriate error response, e.g.,
                      noCreation."
              SYNTAX       OBJECT IDENTIFIER

          TAddress ::= TEXTUAL-CONVENTION
              STATUS       current
              DESCRIPTION
                      "Denotes a transport service address.

                      For snmpUDPDomain, a TAddress is 6 octets long,
                      the initial 4 octets containing the IP-address in
                      network-byte order and the last 2 containing the
                      UDP port in network-byte order.  Consult [5] for
                      further information on snmpUDPDomain."
              SYNTAX       OCTET STRING


          Clock ::= TEXTUAL-CONVENTION
              STATUS       current
              DESCRIPTION
                      "A party's authentication clock - a non-negative
                      integer which is incremented as specified/allowed
                      by the party's Authentication Protocol.

                      For noAuth, a party's authentication clock is
                      unused and its value is undefined.

                      For v2md5AuthProtocol, a party's authentication
                      clock is a relative clock with 1-second
                      granularity."
              SYNTAX       UInteger32

          Context ::= TEXTUAL-CONVENTION
              STATUS       current
              DESCRIPTION
                      "Denotes a SNMPv2 context identifier.

                      Note that agents may impose implementation
                      limitations on the length of OIDs used to identify
                      Contexts. As such, management stations creating new
                      contexts should be aware that using an excessively
                      long OID may result in the agent refusing to
                      perform the set operation and instead returning
                      the appropriate error response, e.g., noCreation."
              SYNTAX       OBJECT IDENTIFIER


          StorageType ::= TEXTUAL-CONVENTION
              STATUS       current
              DESCRIPTION
                      "Describes the memory realization of a conceptual
                      row.  A row which is volatile(2) is lost upon
                      reboot.  A row which is nonVolatile(3) is backed
                      up by stable storage.  A row which is permanent(4)
                      cannot be changed nor deleted."
              SYNTAX       INTEGER {
                               other(1),       -- eh?
                               volatile(2),    -- e.g., in RAM
                               nonVolatile(3), -- e.g., in NVRAM
                               permanent(4)    -- e.g., in ROM
                           }


          -- administrative assignments

          partyAdmin     OBJECT IDENTIFIER ::= { partyMIB 1 }

          -- definitions of security protocols

          partyProtocols OBJECT IDENTIFIER ::= { partyAdmin 1 }

          -- the protocol without authentication
          noAuth         OBJECT IDENTIFIER ::= { partyProtocols 1 }

          -- the protocol without privacy
          noPriv         OBJECT IDENTIFIER ::= { partyProtocols 2 }

          -- the DES Privacy Protocol [4]
          desPrivProtocol
                         OBJECT IDENTIFIER ::= { partyProtocols 3 }

          -- the MD5 Authentication Protocol [4]
          v2md5AuthProtocol
                         OBJECT IDENTIFIER ::= { partyProtocols 4 }

          -- definitions of temporal domains

          temporalDomains
                         OBJECT IDENTIFIER ::= { partyAdmin 2 }

          -- this temporal domain refers to management information
          -- at the current time
          currentTime    OBJECT IDENTIFIER ::= { temporalDomains 1 }

          -- this temporal domain refers to management information
          -- upon the next re-initialization of the managed device
          restartTime    OBJECT IDENTIFIER ::= { temporalDomains 2 }

          -- the temporal domain { cacheTime N } refers to management
          -- information that is cached and guaranteed to be at most
          -- N seconds old
          cacheTime      OBJECT IDENTIFIER ::= { temporalDomains 3 }


          -- Definition of Initial Party and Context Identifiers

          -- When devices are installed, they need to be configured
          -- with an initial set of SNMPv2 parties and contexts.  The
          -- configuration of SNMPv2 parties and contexts requires (among
          -- other things) the assignment of several OBJECT IDENTIFIERs.
          -- Any local network administration can obtain the delegated
          -- authority necessary to assign its own OBJECT IDENTIFIERs.
          -- However, to provide for those administrations who have not
          -- obtained the necessary authority, this document allocates a
          -- branch of the naming tree for use with the following
          -- conventions.

          initialPartyId OBJECT IDENTIFIER ::= { partyAdmin 3 }

          initialContextId
                         OBJECT IDENTIFIER ::= { partyAdmin 4 }

          -- Note these are identified as "initial" party and context
          -- identifiers since these allow secure SNMPv2 communication
          -- to proceed, thereby allowing further SNMPv2 parties to be
          -- configured through use of the SNMPv2 itself.

          -- The following definitions identify a party identifier, and
          -- specify the initial values of various object instances
          -- indexed by that identifier.  In addition, the SNMPv2
          -- context, access control policy, and MIB view information
          -- assigned, by convention, are identified.


          -- Party Identifiers for use as initial SNMPv2 parties
          --       at IP address  a.b.c.d

          -- Note that for all OBJECT IDENTIFIERs assigned under
          -- initialPartyId, the four sub-identifiers immediately
          -- following initialPartyId represent the four octets of
          -- an IP address.  Initial party identifiers for other address
          -- families are assigned under a different OBJECT IDENTIFIER,
          -- as defined elsewhere.

          -- Devices which support SNMPv2 as entities acting in an
          -- agent role, and accessed via the snmpUDPDomain transport
          -- domain, are required to be configured with the appropriate
          -- set of the following as implicit assignments as and when
          -- they are configured with an IP address.  The appropriate
          -- set is all those applicable to the authentication and
          -- privacy protocols supported by the device.


          --      a noAuth/noPriv party which executes at the agent
          -- partyIdentity            = { initialPartyId a b c d 1 }
          -- partyIndex               = 1
          -- partyTDomain             = snmpUDPDomain
          -- partyTAddress            = a.b.c.d, 161
          -- partyLocal               = true (in agent's database)
          -- partyAuthProtocol        = noAuth
          -- partyAuthClock           = 0
          -- partyAuthPrivate         = ''H    (the empty string)
          -- partyAuthPublic          = ''H    (the empty string)
          -- partyAuthLifetime        = 0
          -- partyPrivProtocol        = noPriv
          -- partyPrivPrivate         = ''H    (the empty string)
          -- partyPrivPublic          = ''H    (the empty string)

          --      a noAuth/noPriv party which executes at a manager
          -- partyIdentity            = { initialPartyId a b c d 2 }
          -- partyIndex               = 2
          -- partyTDomain             = snmpUDPDomain
          -- partyTAddress            = assigned by local administration
          -- partyLocal               = false (in agent's database)
          -- partyAuthProtocol        = noAuth
          -- partyAuthClock           = 0
          -- partyAuthPrivate         = ''H    (the empty string)
          -- partyAuthPublic          = ''H    (the empty string)
          -- partyAuthLifetime        = 0
          -- partyPrivProtocol        = noPriv
          -- partyPrivPrivate         = ''H    (the empty string)
          -- partyPrivPublic          = ''H    (the empty string)


          --      a md5Auth/noPriv party which executes at the agent
          -- partyIdentity            = { initialPartyId a b c d 3 }
          -- partyIndex               = 3
          -- partyTDomain             = snmpUDPDomain
          -- partyTAddress            = a.b.c.d, 161
          -- partyLocal               = true (in agent's database)
          -- partyAuthProtocol        = v2md5AuthProtocol
          -- partyAuthClock           = 0
          -- partyAuthPrivate         = assigned by local administration
          -- partyAuthPublic          = ''H    (the empty string)
          -- partyAuthLifetime        = 300
          -- partyPrivProtocol        = noPriv
          -- partyPrivPrivate         = ''H    (the empty string)
          -- partyPrivPublic          = ''H    (the empty string)

          --      a md5Auth/noPriv party which executes at a manager
          -- partyIdentity            = { initialPartyId a b c d 4 }
          -- partyIndex               = 4
          -- partyTDomain             = snmpUDPDomain
          -- partyTAddress            = assigned by local administration
          -- partyLocal               = false (in agent's database)
          -- partyAuthProtocol        = v2md5AuthProtocol
          -- partyAuthClock           = 0
          -- partyAuthPrivate         = assigned by local administration
          -- partyAuthPublic          = ''H    (the empty string)
          -- partyAuthLifetime        = 300
          -- partyPrivProtocol        = noPriv
          -- partyPrivPrivate         = ''H    (the empty string)
          -- partyPrivPublic          = ''H    (the empty string)


          --      a md5Auth/desPriv party which executes at the agent
          -- partyIdentity            = { initialPartyId a b c d 5 }
          -- partyIndex               = 5
          -- partyTDomain             = snmpUDPDomain
          -- partyTAddress            = a.b.c.d, 161
          -- partyLocal               = true (in agent's database)
          -- partyAuthProtocol        = v2md5AuthProtocol
          -- partyAuthClock           = 0
          -- partyAuthPrivate         = assigned by local administration
          -- partyAuthPublic          = ''H    (the empty string)
          -- partyAuthLifetime        = 300
          -- partyPrivProtocol        = desPrivProtocol
          -- partyPrivPrivate         = assigned by local administration
          -- partyPrivPublic          = ''H    (the empty string)

          --      a md5Auth/desPriv party which executes at a manager
          -- partyIdentity            = { initialPartyId a b c d 6 }
          -- partyIndex               = 6
          -- partyTDomain             = snmpUDPDomain
          -- partyTAddress            = assigned by local administration
          -- partyLocal               = false (in agent's database)
          -- partyAuthProtocol        = v2md5AuthProtocol
          -- partyAuthClock           = 0
          -- partyAuthPrivate         = assigned by local administration
          -- partyAuthPublic          = ''H    (the empty string)
          -- partyAuthLifetime        = 300
          -- partyPrivProtocol        = desPrivProtocol
          -- partyPrivPrivate         = assigned by local administration
          -- partyPrivPublic          = ''H    (the empty string)


          -- the initial SNMPv2 contexts assigned, by convention, are:

          -- contextIdentity          = { initialContextId a b c d 1 }
          -- contextIndex             = 1
          -- contextLocal             = true (in agent's database)
          -- contextViewIndex         = 1
          -- contextLocalEntity       = ''H    (the empty string)
          -- contextLocalTime         = currentTime
          -- contextProxyDstParty     = { 0 0 }
          -- contextProxySrcParty     = { 0 0 }
          -- contextProxyContext      = { 0 0 }

          -- contextIdentity          = { initialContextId a b c d 2 }
          -- contextIndex             = 2
          -- contextLocal             = true (in agent's database)
          -- contextViewIndex         = 2
          -- contextLocalEntity       = ''H    (the empty string)
          -- contextLocalTime         = currentTime
          -- contextProxyDstParty     = { 0 0 }
          -- contextProxySrcParty     = { 0 0 }
          -- contextProxyContext      = { 0 0 }


       -- The initial access control policy assigned, by
       -- convention, is:

       -- aclTarget                =   1
       -- aclSubject               =   2
       -- aclResources             =   1
       -- aclPrivileges            =  35 (Get, Get-Next & Get-Bulk)

       -- aclTarget                =   2
       -- aclSubject               =   1
       -- aclResources             =   1
       -- aclPrivileges            = 132 (Response & SNMPv2-Trap)

       -- aclTarget                =   3
       -- aclSubject               =   4
       -- aclResources             =   2
       -- aclPrivileges            =  43 (Get, Get-Next, Set & Get-Bulk)

       -- aclTarget                =   4
       -- aclSubject               =   3
       -- aclResources             =   2
       -- aclPrivileges            =   4 (Response)

       -- aclTarget                =   5
       -- aclSubject               =   6
       -- aclResources             =   2
       -- aclPrivileges            =  43 (Get, Get-Next, Set & Get-Bulk)

       -- aclTarget                =   6
       -- aclSubject               =   5
       -- aclResources             =   2
       -- aclPrivileges            =   4 (Response)

       -- Note that the initial context and access control
       -- information assigned above, by default, to the
       -- md5Auth/desPriv parties are identical to those assigned to
       -- the md5Auth/noPriv parties.  However, each administration
       -- may choose to have different authorization policies,
       -- depending on whether privacy is used.


          -- The initial MIB views assigned, by convention, are:

          -- viewIndex                = 1
          -- viewSubtree              = system
          -- viewMask                 = ''H
          -- viewType                 = included

          -- viewIndex                = 1
          -- viewSubtree              = snmpStats
          -- viewMask                 = ''H
          -- viewType                 = included

          -- viewIndex                = 1
          -- viewSubtree              = snmpParties
          -- viewMask                 = ''H
          -- viewType                 = included

          -- viewIndex                = 2
          -- viewSubtree              = internet
          -- viewMask                 = ''H
          -- viewType                 = included

          -- Note that full access to the partyTable, contextTable,
          -- aclTable, and viewTable gives a manager the ability to
          -- configure any parties with any/all capabilities (the
          -- equivalent of "root" access).  A lesser manager can be
          -- given access only to the partyTable so that it can
          -- maintain its own parties, but not increase/decrease
          -- their capabilities.  Such a lesser manager can also
          -- create new parties but they are of no use to it.


          -- object assignments

          partyMIBObjects
                         OBJECT IDENTIFIER ::= { partyMIB 2 }

          -- the SNMPv2 party database group

          snmpParties    OBJECT IDENTIFIER ::= { partyMIBObjects 1 }

          partyTable OBJECT-TYPE
              SYNTAX      SEQUENCE OF PartyEntry
              MAX-ACCESS  not-accessible
              STATUS      current
              DESCRIPTION
                      "The SNMPv2 Party database."
              ::= { snmpParties 1 }

          partyEntry OBJECT-TYPE
              SYNTAX      PartyEntry
              MAX-ACCESS  not-accessible
              STATUS      current
              DESCRIPTION
                      "Locally held information about a particular
                      SNMPv2 party."
              INDEX      { IMPLIED partyIdentity }
              ::= { partyTable 1 }


          PartyEntry ::=
              SEQUENCE {
                  partyIdentity        Party,
                  partyIndex           INTEGER,
                  partyTDomain         OBJECT IDENTIFIER,
                  partyTAddress        TAddress,
                  partyMaxMessageSize  INTEGER,
                  partyLocal           TruthValue,
                  partyAuthProtocol    OBJECT IDENTIFIER,
                  partyAuthClock       Clock,
                  partyAuthPrivate     OCTET STRING,
                  partyAuthPublic      OCTET STRING,
                  partyAuthLifetime    INTEGER,
                  partyPrivProtocol    OBJECT IDENTIFIER,
                  partyPrivPrivate     OCTET STRING,
                  partyPrivPublic      OCTET STRING,
                  partyCloneFrom       Party,
                  partyStorageType     StorageType,
                  partyStatus          RowStatus
              }

          partyIdentity OBJECT-TYPE
              SYNTAX      Party
              MAX-ACCESS  not-accessible
              STATUS      current
              DESCRIPTION
                      "A party identifier uniquely identifying a
                      particular SNMPv2 party."
              ::= { partyEntry 1 }

          partyIndex OBJECT-TYPE
              SYNTAX      INTEGER (1..65535)
              MAX-ACCESS  read-only
              STATUS      current
              DESCRIPTION
                      "A unique value for each SNMPv2 party.  The value
                      for each SNMPv2 party must remain constant at
                      least from one re-initialization of the entity's
                      network management system to the next re-
                      initialization."
              ::= { partyEntry 2 }


          partyTDomain OBJECT-TYPE
              SYNTAX      OBJECT IDENTIFIER
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "Indicates the kind of transport service by which
                      the party receives network management traffic."
              DEFVAL      { snmpUDPDomain }
              ::= { partyEntry 3 }

          partyTAddress OBJECT-TYPE
              SYNTAX      TAddress
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "The transport service address by which the party
                      receives network management traffic, formatted
                      according to the corresponding value of
                      partyTDomain.  For snmpUDPDomain, partyTAddress is
                      formatted as a 4-octet IP Address concatenated
                      with a 2-octet UDP port number."
              DEFVAL      { '000000000000'H }
              ::= { partyEntry 4 }

          partyMaxMessageSize OBJECT-TYPE
              SYNTAX      INTEGER (484..65507)
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "The maximum length in octets of a SNMPv2 message
                      which this party will accept.  For parties which
                      execute at an agent, the agent initializes this
                      object to the maximum length supported by the
                      agent, and does not let the object be set to any
                      larger value.  For parties which do not execute at
                      the agent, the agent must allow the manager to set
                      this object to any legal value, even if it is
                      larger than the agent can generate."
              DEFVAL      { 484 }
              ::= { partyEntry 5 }


          partyLocal OBJECT-TYPE
              SYNTAX      TruthValue
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "An indication of whether this party executes at
                      this SNMPv2 entity.  If this object has a value of
                      true(1), then the SNMPv2 entity will listen for
                      SNMPv2 messages on the partyTAddress associated
                      with this party.  If this object has the value
                      false(2), then the SNMPv2 entity will not listen
                      for SNMPv2 messages on the partyTAddress
                      associated with this party."
              DEFVAL      { false }
              ::= { partyEntry 6 }

          partyAuthProtocol OBJECT-TYPE
              SYNTAX      OBJECT IDENTIFIER
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "The authentication protocol by which all messages
                      generated by the party are authenticated as to
                      origin and integrity.  The value noAuth signifies
                      that messages generated by the party are not
                      authenticated.

                      Once an instance of this object is created, its
                      value can not be changed."
              DEFVAL      { v2md5AuthProtocol }
              ::= { partyEntry 7 }


          partyAuthClock OBJECT-TYPE
              SYNTAX      Clock
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "The authentication clock which represents the
                      local notion of the current time specific to the
                      party.  This value must not be decremented unless
                      the party's private authentication key is changed
                      simultaneously."
              DEFVAL      { 0 }
              ::= { partyEntry 8 }


          partyAuthPrivate OBJECT-TYPE
              SYNTAX      OCTET STRING
                          -- for v2md5AuthProtocol: (SIZE (16))
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "An encoding of the party's private authentication
                      key which may be needed to support the
                      authentication protocol.  Although the value of
                      this variable may be altered by a management
                      operation (e.g., a SNMPv2 Set-Request), its value
                      can never be retrieved by a management operation:
                      when read, the value of this variable is the zero
                      length OCTET STRING.

                      The private authentication key is NOT directly
                      represented by the value of this variable, but
                      rather it is represented according to an encoding.
                      This encoding is the bitwise exclusive-OR of the
                      old key with the new key, i.e., of the old private
                      authentication key (prior to the alteration) with
                      the new private authentication key (after the
                      alteration).  Thus, when processing a received
                      protocol Set operation, the new private
                      authentication key is obtained from the value of
                      this variable as the result of a bitwise
                      exclusive-OR of the variable's value and the old
                      private authentication key.  In calculating the
                      exclusive-OR, if the old key is shorter than the
                      new key, zero-valued padding is appended to the
                      old key.  If no value for the old key exists, a
                      zero-length OCTET STRING is used in the
                      calculation."
              DEFVAL      { ''H }     -- the empty string
              ::= { partyEntry 9 }


          partyAuthPublic OBJECT-TYPE
              SYNTAX      OCTET STRING
                          -- for v2md5AuthProtocol: (SIZE (0..16))
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "A publically-readable value for the party.

                      Depending on the party's authentication protocol,
                      this value may be needed to support the party's
                      authentication protocol.  Alternatively, it may be
                      used by a manager during the procedure for
                      altering secret information about a party.  (For
                      example, by altering the value of an instance of
                      this object in the same SNMPv2 Set-Request used to
                      update an instance of partyAuthPrivate, a
                      subsequent Get-Request can determine if the Set-
                      Request was successful in the event that no
                      response to the Set-Request is received, see [4].)

                      The length of the value is dependent on the
                      party's authentication protocol.  If not used by
                      the authentication protocol, it is recommended
                      that agents support values of any length up to and
                      including the length of the corresponding
                      partyAuthPrivate object."
              DEFVAL      { ''H }      -- the empty string
              ::= { partyEntry 10 }


          partyAuthLifetime OBJECT-TYPE
              SYNTAX      INTEGER (0..2147483647)
              UNITS       "seconds"
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "The lifetime (in units of seconds) which
                      represents an administrative upper bound on
                      acceptable delivery delay for protocol messages
                      generated by the party.

                      Once an instance of this object is created, its
                      value can not be changed."
              DEFVAL      { 300 }
              ::= { partyEntry 11 }

          partyPrivProtocol OBJECT-TYPE
              SYNTAX      OBJECT IDENTIFIER
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "The privacy protocol by which all protocol
                      messages received by the party are protected from
                      disclosure.  The value noPriv signifies that
                      messages received by the party are not protected.

                      Once an instance of this object is created, its
                      value can not be changed."
              DEFVAL      { noPriv }
              ::= { partyEntry 12 }


          partyPrivPrivate OBJECT-TYPE
              SYNTAX      OCTET STRING
                          -- for desPrivProtocol: (SIZE (16))
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "An encoding of the party's private encryption key
                      which may be needed to support the privacy
                      protocol.  Although the value of this variable may
                      be altered by a management operation (e.g., a
                      SNMPv2 Set-Request), its value can never be
                      retrieved by a management operation: when read,
                      the value of this variable is the zero length
                      OCTET STRING.

                      The private encryption key is NOT directly
                      represented by the value of this variable, but
                      rather it is represented according to an encoding.
                      This encoding is the bitwise exclusive-OR of the
                      old key with the new key, i.e., of the old private
                      encryption key (prior to the alteration) with the
                      new private encryption key (after the alteration).
                      Thus, when processing a received protocol Set
                      operation, the new private encryption key is
                      obtained from the value of this variable as the
                      result of a bitwise exclusive-OR of the variable's
                      value and the old private encryption key.  In
                      calculating the exclusive-OR, if the old key is
                      shorter than the new key, zero-valued padding is
                      appended to the old key.  If no value for the old
                      key exists, a zero-length OCTET STRING is used in
                      the calculation."
              DEFVAL      { ''H }     -- the empty string
              ::= { partyEntry 13 }


          partyPrivPublic OBJECT-TYPE
              SYNTAX      OCTET STRING
                          -- for desPrivProtocol: (SIZE (0..16))
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "A publically-readable value for the party.

                      Depending on the party's privacy protocol, this
                      value may be needed to support the party's privacy
                      protocol.  Alternatively, it may be used by a
                      manager as a part of its procedure for altering
                      secret information about a party.  (For example,
                      by altering the value of an instance of this
                      object in the same SNMPv2 Set-Request used to
                      update an instance of partyPrivPrivate, a
                      subsequent Get-Request can determine if the Set-
                      Request was successful in the event that no
                      response to the Set-Request is received, see [4].)

                      The length of the value is dependent on the
                      party's privacy protocol.  If not used by the
                      privacy protocol, it is recommended that agents
                      support values of any length up to and including
                      the length of the corresponding partyPrivPrivate
                      object."
              DEFVAL      { ''H }     -- the empty string
              ::= { partyEntry 14 }


          partyCloneFrom OBJECT-TYPE
              SYNTAX      Party
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "The identity of a party to clone authentication
                      and privacy parameters from.  When read, the value
                      { 0 0 } is returned.

                      This value must be written exactly once, when the
                      associated instance of partyStatus either does not
                      exist or has the value `notReady'.  When written,
                      the value identifies a party, the cloning party,
                      whose status column has the value `active'.  The
                      cloning party is used in two ways.

                      One, if instances of the following objects do not
                      exist for the party being created, then they are
                      created with values identical to those of the
                      corresponding objects for the cloning party:

                           partyAuthProtocol
                           partyAuthPublic
                           partyAuthLifetime
                           partyPrivProtocol
                           partyPrivPublic

                      Two, instances of the following objects are
                      updated using the corresponding values of the
                      cloning party:

                           partyAuthPrivate
                           partyPrivPrivate

                      (e.g., the value of the cloning party's instance
                      of the partyAuthPrivate object is XOR'd with the
                      value of the partyAuthPrivate instances of the
                      party being created.)"
              ::= { partyEntry 15 }


          partyStorageType OBJECT-TYPE
              SYNTAX      StorageType
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "The storage type for this conceptual row in the
                      partyTable."
              DEFVAL      { nonVolatile }
              ::= { partyEntry 16 }

          partyStatus OBJECT-TYPE
              SYNTAX      RowStatus
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "The status of this conceptual row in the
                      partyTable.

                      A party is not qualified for activation until
                      instances of all columns of its partyEntry row
                      have an appropriate value.  In particular:

                        A value must be written to the Party's
                        partyCloneFrom object.

                        If the Party's partyAuthProtocol object has the
                        value md5AuthProtocol, then the corresponding
                        instance of partyAuthPrivate must contain a
                        secret of the appropriate length.  Further, at
                        least one management protocol set operation
                        updating the value of the party's
                        partyAuthPrivate object must be successfully
                        processed, before the partyAuthPrivate column is
                        considered appropriately configured.

                        If the Party's partyPrivProtocol object has the
                        value desPrivProtocol, then the corresponding
                        instance of partyPrivPrivate must contain a
                        secret of the appropriate length.  Further, at
                        least one management protocol set operation
                        updating the value of the party's
                        partyPrivPrivate object must be successfully
                        processed, before the partyPrivPrivate column is
                        considered appropriately configured.


                     Until instances of all corresponding columns are
                     appropriately configured, the value of the
                     corresponding instance of the partyStatus column is
                     `notReady'."
              ::= { partyEntry 17 }


          -- the SNMPv2 contexts database group

          snmpContexts   OBJECT IDENTIFIER ::= { partyMIBObjects 2 }

          contextTable OBJECT-TYPE
              SYNTAX      SEQUENCE OF ContextEntry
              MAX-ACCESS  not-accessible
              STATUS      current
              DESCRIPTION
                      "The SNMPv2 Context database."
              ::= { snmpContexts 1 }

          contextEntry OBJECT-TYPE
              SYNTAX      ContextEntry
              MAX-ACCESS  not-accessible
              STATUS      current
              DESCRIPTION
                      "Locally held information about a particular
                      SNMPv2 context."
              INDEX      { IMPLIED contextIdentity }
              ::= { contextTable 1 }

          ContextEntry ::=
              SEQUENCE {
                  contextIdentity         Context,
                  contextIndex            INTEGER,
                  contextLocal            TruthValue,
                  contextViewIndex        INTEGER,
                  contextLocalEntity      OCTET STRING,
                  contextLocalTime        OBJECT IDENTIFIER,
                  contextProxyDstParty    Party,
                  contextProxySrcParty    Party,
                  contextProxyContext     OBJECT IDENTIFIER,
                  contextStorageType      StorageType,
                  contextStatus           RowStatus
              }


          contextIdentity OBJECT-TYPE
              SYNTAX      Context
              MAX-ACCESS  not-accessible
              STATUS      current
              DESCRIPTION
                      "A context identifier uniquely identifying a
                      particular SNMPv2 context."
              ::= { contextEntry 1 }

          contextIndex OBJECT-TYPE
              SYNTAX      INTEGER (1..65535)
              MAX-ACCESS  read-only
              STATUS      current
              DESCRIPTION
                      "A unique value for each SNMPv2 context.  The
                      value for each SNMPv2 context must remain constant
                      at least from one re-initialization of the
                      entity's network management system to the next
                      re-initialization."
              ::= { contextEntry 2 }

          contextLocal OBJECT-TYPE
              SYNTAX      TruthValue
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "An indication of whether this context is realized
                      by this SNMPv2 entity."
              DEFVAL      { true }
              ::= { contextEntry 3 }


          contextViewIndex OBJECT-TYPE
              SYNTAX      INTEGER (0..65535)
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "If the value of an instance of this object is
                      zero, then this corresponding conceptual row in
                      the contextTable refers to a SNMPv2 context which
                      identifies a proxy relationship; the values of the
                      corresponding instances of the
                      contextProxyDstParty, contextProxySrcParty, and
                      contextProxyContext objects provide further
                      information on the proxy relationship.

                      Otherwise, if the value of an instance of this
                      object is greater than zero, then this
                      corresponding conceptual row in the contextTable
                      refers to a SNMPv2 context which identifies a MIB
                      view of a locally accessible entity; the value of
                      the instance identifies the particular MIB view
                      which has the same value of viewIndex; and the
                      value of the corresponding instances of the
                      contextLocalEntity and contextLocalTime objects
                      provide further information on the local entity
                      and its temporal domain."
              ::= { contextEntry 4 }


          contextLocalEntity OBJECT-TYPE
              SYNTAX      OCTET STRING
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "If the value of the corresponding instance of the
                      contextViewIndex is greater than zero, then the
                      value of an instance of this object identifies the
                      local entity whose management information is in
                      the SNMPv2 context's MIB view.  The empty string
                      indicates that the MIB view contains the SNMPv2
                      entity's own local management information;
                      otherwise, a non-empty string indicates that the
                      MIB view contains management information of some
                      other local entity, e.g., 'Repeater1'."
              DEFVAL      { ''H }     -- the empty string
              ::= { contextEntry 5 }

          contextLocalTime OBJECT-TYPE
              SYNTAX      OBJECT IDENTIFIER
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "If the value of the corresponding instance of the
                      contextViewIndex is greater than zero, then the
                      value of an instance of this object identifies the
                      temporal context of the management information in
                      the MIB view."
              DEFVAL      { currentTime }
              ::= { contextEntry 6 }


          contextProxyDstParty OBJECT-TYPE
              SYNTAX      Party
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "If the value of the corresponding instance of the
                      contextViewIndex is equal to zero, then the value
                      of an instance of this object identifies a SNMPv2
                      party which is the proxy destination of a proxy
                      relationship.

                      If the value of the corresponding instance of the
                      contextViewIndex is greater than zero, then the
                      value of an instance of this object is { 0 0 }."
              ::= { contextEntry 7 }

          contextProxySrcParty OBJECT-TYPE
              SYNTAX      Party
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "If the value of the corresponding instance of the
                      contextViewIndex is equal to zero, then the value
                      of an instance of this object identifies a SNMPv2
                      party which is the proxy source of a proxy
                      relationship.

                      Interpretation of an instance of this object
                      depends upon the value of the transport domain
                      associated with the SNMPv2 party used as the proxy
                      destination in this proxy relationship.

                      If the value of the corresponding instance of the
                      contextViewIndex is greater than zero, then the
                      value of an instance of this object is { 0 0 }."
              ::= { contextEntry 8 }


          contextProxyContext OBJECT-TYPE
              SYNTAX      OBJECT IDENTIFIER
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "If the value of the corresponding instance of the
                      contextViewIndex is equal to zero, then the value
                      of an instance of this object identifies the
                      context of a proxy relationship.

                      Interpretation of an instance of this object
                      depends upon the value of the transport domain
                      associated with the SNMPv2 party used as the proxy
                      destination in this proxy relationship.

                      If the value of the corresponding instance of the
                      contextViewIndex is greater than zero, then the
                      value of an instance of this object is { 0 0 }."
              ::= { contextEntry 9 }

          contextStorageType OBJECT-TYPE
              SYNTAX      StorageType
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "The storage type for this conceptual row in the
                      contextTable."
              DEFVAL      { nonVolatile }
              ::= { contextEntry 10 }


          contextStatus OBJECT-TYPE
              SYNTAX      RowStatus
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "The status of this conceptual row in the
                      contextTable.

                      A context is not qualified for activation until
                      instances of all corresponding columns have the
                      appropriate value.  In  particular, if the
                      context's contextViewIndex is greater than zero,
                      then the viewStatus column of the associated
                      conceptual row(s) in the viewTable must have the
                      value `active'.  Until instances of all
                      corresponding columns are appropriately
                      configured, the value of the corresponding
                      instance of the contextStatus column is
                      `notReady'."
              ::= { contextEntry 11 }


          -- the SNMPv2 access privileges database group

          snmpAccess     OBJECT IDENTIFIER ::= { partyMIBObjects 3 }

          aclTable OBJECT-TYPE
              SYNTAX      SEQUENCE OF AclEntry
              MAX-ACCESS  not-accessible
              STATUS      current
              DESCRIPTION
                      "The access privileges database."
              ::= { snmpAccess 1 }

          aclEntry OBJECT-TYPE
              SYNTAX      AclEntry
              MAX-ACCESS  not-accessible
              STATUS      current
              DESCRIPTION
                      "The access privileges for a particular subject
                      SNMPv2 party when asking a particular target
                      SNMPv2 party to access a particular SNMPv2
                      context."
              INDEX      { aclTarget, aclSubject, aclResources }
              ::= { aclTable 1 }

          AclEntry ::=
              SEQUENCE {
                  aclTarget        INTEGER,
                  aclSubject       INTEGER,
                  aclResources     INTEGER,
                  aclPrivileges    INTEGER,
                  aclStorageType   StorageType,
                  aclStatus        RowStatus
              }


          aclTarget OBJECT-TYPE
              SYNTAX      INTEGER (1..65535)
              MAX-ACCESS  not-accessible
              STATUS      current
              DESCRIPTION
                      "The value of an instance of this object
                      identifies a SNMPv2 party which is the target of
                      an access control policy, and has the same value
                      as the instance of the partyIndex object for that
                      party."
              ::= { aclEntry 1 }

          aclSubject OBJECT-TYPE
              SYNTAX      INTEGER (1..65535)
              MAX-ACCESS  not-accessible
              STATUS      current
              DESCRIPTION
                      "The value of an instance of this object
                      identifies a SNMPv2 party which is the subject of
                      an access control policy, and has the same value
                      as the instance of the partyIndex object for that
                      SNMPv2 party."
              ::= { aclEntry 2 }

          aclResources OBJECT-TYPE
              SYNTAX      INTEGER (1..65535)
              MAX-ACCESS  not-accessible
              STATUS      current
              DESCRIPTION
                      "The value of an instance of this object
                      identifies a SNMPv2 context in an access control
                      policy, and has the same value as the instance of
                      the contextIndex object for that SNMPv2 context."
              ::= { aclEntry 3 }


          aclPrivileges OBJECT-TYPE
              SYNTAX      INTEGER (0..255)
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "The access privileges which govern what
                      management operations a particular target party
                      may perform with respect to a particular SNMPv2
                      context when requested by a particular subject
                      party.  These privileges are specified as a sum of
                      values, where each value specifies a SNMPv2 PDU
                      type by which the subject party may request a
                      permitted operation.  The value for a particular
                      PDU type is computed as 2 raised to the value of
                      the ASN.1 context-specific tag for the appropriate
                      SNMPv2 PDU type.  The values (for the tags defined
                      in [5]) are defined in [3] as:

                       Get         :   1
                       GetNext     :   2
                       Response    :   4
                       Set         :   8
                       unused      :  16
                       GetBulk     :  32
                       Inform      :  64
                       SNMPv2-Trap : 128

                      The null set is represented by the value zero."
              DEFVAL      { 35 }      -- Get, Get-Next & Get-Bulk
              ::= { aclEntry 4 }

          aclStorageType OBJECT-TYPE
              SYNTAX      StorageType
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "The storage type for this conceptual row in the
                      aclTable."
              DEFVAL      { nonVolatile }
              ::= { aclEntry 5 }


          aclStatus OBJECT-TYPE
              SYNTAX      RowStatus
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "The status of this conceptual row in the
                      aclTable."
              ::= { aclEntry 6 }


          -- the MIB view database group

          snmpViews      OBJECT IDENTIFIER ::= { partyMIBObjects 4 }

          viewTable OBJECT-TYPE
              SYNTAX      SEQUENCE OF ViewEntry
              MAX-ACCESS  not-accessible
              STATUS      current
              DESCRIPTION
                      "Locally held information about the MIB views
                      known to this SNMPv2 entity.

                      Each SNMPv2 context which is locally accessible
                      has a single MIB view which is defined by two
                      collections of view subtrees: the included view
                      subtrees, and the excluded view subtrees.  Every
                      such subtree, both included and excluded, is
                      defined in this table.

                      To determine if a particular object instance is in
                      a particular MIB view, compare the object
                      instance's OBJECT IDENTIFIER with each of the MIB
                      view's entries in this table.  If none match, then
                      the object instance is not in the MIB view.  If
                      one or more match, then the object instance is
                      included in, or excluded from, the MIB view
                      according to the value of viewType in the entry
                      whose value of viewSubtree has the most sub-
                      identifiers.  If multiple entries match and have
                      the same number of sub-identifiers, then the
                      lexicographically greatest instance of viewType
                      determines the inclusion or exclusion.

                      An object instance's OBJECT IDENTIFIER X matches
                      an entry in this table when the number of sub-
                      identifiers in X is at least as many as in the
                      value of viewSubtree for the entry, and each sub-
                      identifier in the value of viewSubtree matches its
                      corresponding sub-identifier in X.  Two sub-
                      identifiers match either if the corresponding bit
                      of viewMask is zero (the 'wild card' value), or if
                      they are equal.

                      Due to this 'wild card' capability, we introduce


                      the term, a 'family' of view subtrees, to refer to
                      the set of subtrees defined by a particular
                      combination of values of viewSubtree and viewMask.
                      In the case where no 'wild card' is defined in
                      viewMask, the family of view subtrees reduces to a
                      single view subtree."
              ::= { snmpViews 1 }

          viewEntry OBJECT-TYPE
              SYNTAX      ViewEntry
              MAX-ACCESS  not-accessible
              STATUS      current
              DESCRIPTION
                      "Information on a particular family of view
                      subtrees included in or excluded from a particular
                      SNMPv2 context's MIB view.

                      Implementations must not restrict the number of
                      families of view subtrees for a given MIB view,
                      except as dictated by resource constraints on the
                      overall number of entries in the viewTable."
              INDEX      { viewIndex, IMPLIED viewSubtree }
              ::= { viewTable 1 }

          ViewEntry ::=
              SEQUENCE {
                  viewIndex        INTEGER,
                  viewSubtree      OBJECT IDENTIFIER,
                  viewMask         OCTET STRING,
                  viewType         INTEGER,
                  viewStorageType  StorageType,
                  viewStatus       RowStatus
              }


          viewIndex OBJECT-TYPE
              SYNTAX      INTEGER (1..65535)
              MAX-ACCESS  not-accessible
              STATUS      current
              DESCRIPTION
                      "A unique value for each MIB view.  The value for
                      each MIB view must remain constant at least from
                      one re-initialization of the entity's network
                      management system to the next re-initialization."
              ::= { viewEntry 1 }

          viewSubtree OBJECT-TYPE
              SYNTAX      OBJECT IDENTIFIER
              MAX-ACCESS  not-accessible
              STATUS      current
              DESCRIPTION
                      "A MIB subtree."
              ::= { viewEntry 2 }

          viewMask OBJECT-TYPE
              SYNTAX      OCTET STRING (SIZE (0..16))
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "The bit mask which, in combination with the
                      corresponding instance of viewSubtree, defines a
                      family of view subtrees.

                      Each bit of this bit mask corresponds to a sub-
                      identifier of viewSubtree, with the most
                      significant bit of the i-th octet of this octet
                      string value (extended if necessary, see below)
                      corresponding to the (8*i - 7)-th sub-identifier,
                      and the least significant bit of the i-th octet of
                      this octet string corresponding to the (8*i)-th
                      sub-identifier, where i is in the range 1 through
                      16.

                      Each bit of this bit mask specifies whether or not
                      the corresponding sub-identifiers must match when
                      determining if an OBJECT IDENTIFIER is in this
                      family of view subtrees; a '1' indicates that an
                      exact match must occur; a '0' indicates 'wild
                      card', i.e., any sub-identifier value matches.


                      Thus, the OBJECT IDENTIFIER X of an object
                      instance is contained in a family of view subtrees
                      if the following criteria are met:

                           for each sub-identifier of the value of
                           viewSubtree, either:

                                the i-th bit of viewMask is 0, or

                                the i-th sub-identifier of X is equal to
                                the i-th sub-identifier of the value of
                                viewSubtree.

                      If the value of this bit mask is M bits long and
                      there are more than M sub-identifiers in the
                      corresponding instance of viewSubtree, then the
                      bit mask is extended with 1's to be the required
                      length.

                      Note that when the value of this object is the
                      zero-length string, this extension rule results in
                      a mask of all-1's being used (i.e., no 'wild
                      card'), and the family of view subtrees is the one
                      view subtree uniquely identified by the
                      corresponding instance of viewSubtree."
              DEFVAL      { ''H }
              ::= { viewEntry 3 }


          viewType OBJECT-TYPE
              SYNTAX      INTEGER  {
                              included(1),
                              excluded(2)
                          }
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "The status of a particular family of view
                      subtrees within the particular SNMPv2 context's
                      MIB view.  The value 'included(1)' indicates that
                      the corresponding instances of viewSubtree and
                      viewMask define a family of view subtrees included
                      in the MIB view.  The  value 'excluded(2)'
                      indicates that the corresponding instances of
                      viewSubtree and viewMask define a family of view
                      subtrees excluded from the MIB view."
              DEFVAL      { included }
              ::= { viewEntry 4 }

          viewStorageType OBJECT-TYPE
              SYNTAX      StorageType
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "The storage type for this conceptual row in the
                      viewTable."
              DEFVAL      { nonVolatile }
              ::= { viewEntry 5 }

          viewStatus OBJECT-TYPE
              SYNTAX      RowStatus
              MAX-ACCESS  read-create
              STATUS      current
              DESCRIPTION
                      "The status of this conceptual row in the
                      viewTable."
              ::= { viewEntry 6 }


          -- conformance information

          partyMIBConformance
                         OBJECT IDENTIFIER ::= { partyMIB 3 }

          partyMIBCompliances
                         OBJECT IDENTIFIER ::= { partyMIBConformance 1 }
          partyMIBGroups
                         OBJECT IDENTIFIER ::= { partyMIBConformance 2 }

          -- compliance statements

          unSecurableCompliance MODULE-COMPLIANCE
              STATUS  current
              DESCRIPTION
                      "The compliance statement for SNMPv2 entities
                      which implement the Party MIB, but do not support
                      any authentication or privacy protocols (i.e.,
                      only the noAuth and noPriv protocols are
                      supported)."
              MODULE  -- this module
                  MANDATORY-GROUPS { partyMIBGroup }
              ::= { partyMIBCompliances 1 }

          partyNoPrivacyCompliance MODULE-COMPLIANCE
              STATUS  current
              DESCRIPTION
                      "The compliance statement for SNMPv2 entities
                      which implement the Party MIB, and support an
                      authentication protocol, but do not support any
                      privacy protocols (i.e., only the noAuth,
                      v2md5AuthProtocol, and noPriv protocols are
                      supported)."
              MODULE  -- this module
                  MANDATORY-GROUPS { partyMIBGroup }
              ::= { partyMIBCompliances 2 }


          partyPrivacyCompliance MODULE-COMPLIANCE
              STATUS  current
              DESCRIPTION
                      "The compliance statement for SNMPv2 entities
                      which implement the Party MIB, support an
                      authentication protocol, and support a privacy
                      protocol ONLY for the purpose of accessing
                      security parameters.

                      For all aclTable entries authorizing a subject
                      and/or target SNMPv2 party whose privacy protocol
                      is desPrivProtocol, to be used in accessing a
                      SNMPv2 context, the MIB view for that SNMPv2
                      context shall include only those objects
                      subordinate to partyMIBObjects, or a subset
                      thereof, e.g.,

                           viewSubtree = { partyMIBObjects }
                           viewMask    = ''H
                           viewType    = { included }

                      Any attempt to configure an entry in the
                      partyTable, the contextTable, the aclTable or the
                      viewTable such that a party using the
                      desPrivProtocol would be authorized for use in
                      accessing objects outside of the partyMIBObjects
                      subtree shall result in the appropriate error
                      response (e.g., wrongValue or inconsistentValue)."
              MODULE  -- this module
                  MANDATORY-GROUPS { partyMIBGroup }
              ::= { partyMIBCompliances 3 }


          fullPrivacyCompliance MODULE-COMPLIANCE
              STATUS  current
              DESCRIPTION
                      "The compliance statement for SNMPv2 entities
                      which implement the Party MIB, support an
                      authentication protocol, and support a privacy
                      protocol without restrictions on its use."
              MODULE  -- this module
                  MANDATORY-GROUPS { partyMIBGroup }
              ::= { partyMIBCompliances 4 }

        -- units of conformance

        partyMIBGroup OBJECT-GROUP
            OBJECTS { partyIndex, partyTDomain, partyTAddress,
                      partyMaxMessageSize, partyLocal,
                      partyAuthProtocol, partyAuthClock,
                      partyAuthPrivate, partyAuthPublic,
                      partyAuthLifetime, partyPrivProtocol,
                      partyPrivPrivate, partyPrivPublic,
                      partyStorageType, partyStatus,
                      partyCloneFrom,
                      contextIndex, contextLocal,
                      contextViewIndex, contextLocalEntity,
                      contextLocalTime, contextStorageType,
                      contextStatus, aclTarget, aclSubject,
                      aclPrivileges, aclStorageType, aclStatus,
                      viewMask, viewType, viewStorageType, viewStatus }
            STATUS  current
            DESCRIPTION
                    "The collection of objects allowing the
                    description and configuration of SNMPv2 parties.

                    Note that objects which support proxy
                    relationships are not included in this conformance
                    group."
            ::= { partyMIBGroups 1 }

END
SNMPv2-MIB DEFINITIONS ::= BEGIN

          IMPORTS
              MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE,
              ObjectName, Integer32, Counter32, snmpModules
                  FROM SNMPv2-SMI
              TruthValue, DisplayString, TestAndIncr, TimeStamp
                  FROM SNMPv2-TC
              MODULE-COMPLIANCE, OBJECT-GROUP
                  FROM SNMPv2-CONF
              system, ifIndex, egpNeighAddr
                  FROM RFC1213-MIB
              partyEntry
                  FROM SNMPv2-PARTY-MIB;

          snmpMIB MODULE-IDENTITY
              LAST-UPDATED "9304010000Z"
              ORGANIZATION "IETF SNMPv2 Working Group"
              CONTACT-INFO
                      "        Marshall T. Rose

                       Postal: Dover Beach Consulting, Inc.
                               420 Whisman Court
                               Mountain View, CA  94043-2186
                               US

                          Tel: +1 415 968 1052
                          Fax: +1 415 968 2510

                       E-mail: mrose@dbc.mtview.ca.us"
              DESCRIPTION
                      "The MIB module for SNMPv2 entities."
              ::= { snmpModules 1 }

          snmpMIBObjects OBJECT IDENTIFIER ::= { snmpMIB 1 }


          -- the SNMPv2 statistics group
          --
          -- a collection of objects providing basic instrumentation of
          -- the SNMPv2 entity.

          -- A Case diagram[4] relating these objects is:
          --
          --  \v/   transport service
          --   |
          -- ==+==  snmpStatsPackets
          --   |
          --   +==> snmpStats30Something
          --   |
          --   +==> snmpStatsEncodingErrors
          --   |
          --   +==> snmpStatsUnknownDstParties
          --   |
          --   +==> snmpStatsDstPartyMismatches
          --   |
          --   +==> snmpStatsUnknownSrcParties
          --   |
          --   +==> snmpStatsBadAuths
          --   |
          --   +==> snmpStatsNotInLifetimes
          --   |
          --   +==> snmpStatsWrongDigestValues
          --   |
          --   +==> snmpStatsUnknownContexts
          --   |
          --   +==> snmpStatsBadOperations
          --   |
          --   +==> snmpStatsSilentDrops
          --   |
          -- ===== sink

          snmpStats      OBJECT IDENTIFIER ::= { snmpMIBObjects 1 }


          snmpStatsPackets OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The total number of packets received by the
                      SNMPv2 entity from the transport service."
              REFERENCE
                      "Derived from RFC1213-MIB.snmpInPkts."
              ::= { snmpStats 1 }

          snmpStats30Something OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The total number of packets which had an initial
                      octet with a value of 30 hexadecimal received by a
                      SNMPv2 entity which does not support SNMPv1.
                      (Such packets are possibly misdirected SNMPv1
                      Messages.)"
              REFERENCE
                      "Derived from RFC1213-MIB.snmpInASNParseErrs."
              ::= { snmpStats 2 }

          snmpStatsEncodingErrors OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The total number of packets received by the
                      SNMPv2 entity which were improperly encoded or had
                      invalid syntax."
              REFERENCE
                      "Derived from RFC1213-MIB.snmpInASNParseErrs."
              ::= { snmpStats 3 }


          snmpStatsUnknownDstParties OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The total number of SnmpPrivMsgs delivered to the
                      SNMPv2 entity for which the privDst field was not
                      a known local party."
              ::= { snmpStats 4 }

          snmpStatsDstPartyMismatches OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The total number of SnmpPrivMsgs delivered to the
                      SNMPv2 entity which contained a SnmpAuthMsg for
                      which the authData.dstParty field did not match
                      the privDst field in the SnmpPrivMsg."
              ::= { snmpStats 5 }

          snmpStatsUnknownSrcParties OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The total number of SnmpAuthMsgs delivered to the
                      SNMPv2 entity for which the authData.srcParty
                      field was not a known remote party."
              ::= { snmpStats 6 }

          snmpStatsBadAuths OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The total number of SnmpAuthMsgs delivered to the
                      SNMPv2 entity which contained an authInfo field
                      which was inconsistent with the authentication
                      protocol associated with the source party."
              ::= { snmpStats 7 }


          snmpStatsNotInLifetimes OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The total number of SnmpAuthMsgs delivered to the
                      SNMPv2 entity which were deemed unauthentic due to
                      their authInfo.authSrcTimestamp field being less
                      than the source party's clock plus lifetime."
              ::= { snmpStats 8 }

          snmpStatsWrongDigestValues OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The total number of SnmpAuthMsgs delivered to the
                      SNMPv2 entity which were deemed unauthentic due to
                      their authInfo.authDigest field being unequal to
                      the expected digest value."
              ::= { snmpStats 9 }

          snmpStatsUnknownContexts OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The total number of SnmpMgmtComs delivered to the
                      SNMPv2 entity for which the context field was not
                      a known SNMPv2 context."
              ::= { snmpStats 10 }

          snmpStatsBadOperations OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The total number of messages delivered to the
                      SNMPv2 entity which were silently dropped because
                      the PDU type referred to an operation not allowed
                      in the aclTable[5]."
              ::= { snmpStats 11 }


          snmpStatsSilentDrops OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The total number of GetRequest-PDUs,
                      GetNextRequest-PDUs, GetBulkRequest-PDUs,
                      SetRequest-PDUs, and InformRequest-PDUs delivered
                      to the SNMPv2 entity which were silently dropped
                      because the size of an reply containing an
                      alternate Response-PDU with an empty variable-
                      bindings field was greater than either a local
                      constraint or the maximum message size of the
                      request's source party."
              ::= { snmpStats 12 }


          -- the SNMPv1 statistics group
          --
          -- a collection of objects providing basic instrumentation of
          -- a SNMPv2 entity which also implements SNMPv1.

          -- A Case diagram[4] relating these objects
          -- (and those applicable objects in the snmpStats group)
          -- is:
          --
          --  \v/   transport service
          --   |
          -- ==+==  snmpStatsPackets
          --   |
          --   +==> snmpStatsEncodingErrors
          --   |
          --   +==> snmpV1BadCommunityNames
          --   |
          --   +==> snmpV1BadCommunityUses
          --   |
          -- ===== sink

          snmpV1         OBJECT IDENTIFIER ::= { snmpMIBObjects 2 }

          snmpV1BadCommunityNames OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The total number of SNMPv1 Messages delivered to
                      the SNMPv2 entity which used a community name not
                      known to the SNMPv2 entity."
              REFERENCE
                      "Derived from RFC1213-
                      MIB.snmpInBadCommunityNames."
              ::= { snmpV1 1 }


          snmpV1BadCommunityUses OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The total number of SNMPv1 Messages delivered to
                      SNMPv2 entity containing an operation which was
                      not allowed for the community named in the
                      Message."
              REFERENCE
                      "Derived from RFC1213-MIB.snmpInBadCommunityUses."
              ::= { snmpV1 2 }


          -- the object resource group
          --
          -- a collection of objects allowing a SNMPv2 entity acting in
          -- an agent role to describe its dynamically-configurable
          -- object resources.

          snmpOR         OBJECT IDENTIFIER ::= { snmpMIBObjects 3 }

          snmpORLastChange OBJECT-TYPE
              SYNTAX     TimeStamp
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The value of sysUpTime at the time of the most
                      recent change in state or value of any instance of
                      snmpORID."
              ::= { snmpOR 1 }

          snmpORTable OBJECT-TYPE
              SYNTAX     SEQUENCE OF SnmpOREntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "The (conceptual) table listing the dynamically-
                      configurable object resources in a SNMPv2 entity
                      acting in an agent role.  SNMPv2 entities which do
                      not support dynamically-configurable object
                      resources will never have any instances of the
                      columnar objects in this table."
              ::= { snmpOR 2 }

          snmpOREntry OBJECT-TYPE
              SYNTAX     SnmpOREntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "An entry (conceptual row) in the snmpORTable."
              INDEX      { snmpORIndex }
              ::= { snmpORTable 1 }


          SnmpOREntry ::= SEQUENCE {
              snmpORIndex                         Integer32,
              snmpORID                            OBJECT IDENTIFIER,
              snmpORDescr                         DisplayString
          }

          snmpORIndex OBJECT-TYPE
              SYNTAX     Integer32
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "The auxiliary variable used for identifying
                      instances of the columnar objects in the
                      snmpORTable."
              ::= { snmpOREntry 1 }

          snmpORID OBJECT-TYPE
              SYNTAX     OBJECT IDENTIFIER
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "An authoritative identification of one of the
                      dynamically-configurable object resources in a
                      SNMPv2 entity acting in an agent role.  This is
                      analogous to the sysObjectID object in MIB-II."
              ::= { snmpOREntry 2 }

          snmpORDescr OBJECT-TYPE
              SYNTAX     DisplayString
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "A textual description of one of the dynamically-
                      configurable object resources in a SNMPv2 entity
                      acting in an agent role.  This is analogous to the
                      sysDescr object in MIB-II."
              ::= { snmpOREntry 3 }


          -- the traps group
          --
          -- a collection of objects which allow the SNMPv2 entity, when
          -- acting in an agent role, to be configured to generate
          -- SNMPv2-Trap-PDUs.

          snmpTrap       OBJECT IDENTIFIER ::= { snmpMIBObjects 4 }

          snmpTrapOID OBJECT-TYPE
              SYNTAX     OBJECT IDENTIFIER
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "The authoritative identification of the trap
                      currently being sent.  This variable occurs as the
                      second varbind of a SNMPv2-Trap-PDU."
              ::= { snmpTrap 1 }

          snmpTrapTable OBJECT-TYPE
              SYNTAX     SEQUENCE OF SnmpTrapEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "A table which keeps track of how many traps have
                      been sent to each SNMPv2 entity."
              ::= { snmpTrap 2 }

          snmpTrapEntry OBJECT-TYPE
              SYNTAX     SnmpTrapEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "An entry which keeps track of how many traps have
                      been sent to a particular SNMPv2 entity."
              AUGMENTS   { partyEntry }
              ::= { snmpTrapTable 1 }

          SnmpTrapEntry ::= SEQUENCE {
              snmpTrapNumbers                     Counter32
          }


          snmpTrapNumbers OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The number of traps which have been sent to a
                      particular SNMPv2 party, since the last
                      initialization of the SNMPv2 entity, or the
                      creation of the SNMPv2 party, whichever occurred
                      most recently."
              ::= { snmpTrapEntry 1 }

          snmpTrapEnterprise OBJECT-TYPE
              SYNTAX     OBJECT IDENTIFIER
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "The authoritative identification of the
                      enterprise associated with the trap currently
                      being sent.  When a SNMPv2 proxy agent is mapping
                      an RFC1157 Trap-PDU into a SNMPv2-Trap-PDU, this
                      variable occurs as the last varbind."
              ::= { snmpTrap 3 }


          snmpV2EnableAuthenTraps OBJECT-TYPE
              SYNTAX     TruthValue
              MAX-ACCESS read-write
              STATUS     current
              DESCRIPTION
                      "Indicates whether the SNMPv2 entity, when acting
                      in an agent role, is permitted to generate
                      authenticationFailure traps.  The value of this
                      object overrides any configuration information; as
                      such, it provides a means whereby all
                      authenticationFailure traps may be disabled.

                      Note that it is strongly recommended that this
                      object be stored in non-volatile memory so that it
                      remains constant between re-initializations of the
                      network management system."
              REFERENCE
                      "Derived from RFC1213-MIB.snmpEnableAuthenTraps."
              ::= { snmpTrap 4 }


          -- well-known traps

          snmpTraps      OBJECT IDENTIFIER ::= { snmpMIBObjects 5 }

          coldStart NOTIFICATION-TYPE
              STATUS  current
              DESCRIPTION
                      "A coldStart trap signifies that the SNMPv2
                      entity, acting in an agent role, is reinitializing
                      itself such that its configuration may be
                      altered."
              ::= { snmpTraps 1 }

          warmStart NOTIFICATION-TYPE
              STATUS  current
              DESCRIPTION
                      "A warmStart trap signifies that the SNMPv2
                      entity, acting in an agent role, is reinitializing
                      itself such that its configuration is unaltered."
              ::= { snmpTraps 2 }

          linkDown NOTIFICATION-TYPE
              OBJECTS { ifIndex }
              STATUS  current
              DESCRIPTION
                      "A linkDown trap signifies that the SNMPv2 entity,
                      acting in an agent role, recognizes a failure in
                      one of the communication links represented in its
                      configuration."
              ::= { snmpTraps 3 }

          linkUp NOTIFICATION-TYPE
              OBJECTS { ifIndex }
              STATUS  current
              DESCRIPTION
                      "A linkUp trap signifies that the SNMPv2 entity,
                      acting in an agent role, recognizes that one of
                      the communication links represented in its
                      configuration has come up."
              ::= { snmpTraps 4 }


          authenticationFailure NOTIFICATION-TYPE
              STATUS  current
              DESCRIPTION
                      "An authenticationFailure trap signifies that the
                      SNMPv2 entity, acting in an agent role, has
                      received a protocol message that is not properly
                      authenticated.  While all implementations of the
                      SNMPv2 must be capable of generating this trap,
                      the snmpV2EnableAuthenTraps object indicates
                      whether this trap will be generated."
              ::= { snmpTraps 5 }

          egpNeighborLoss NOTIFICATION-TYPE
              OBJECTS { egpNeighAddr }
              STATUS  current
              DESCRIPTION
                      "An egpNeighborLoss trap signifies that an EGP
                      neighbor has been marked down and the EGP peer
                      relationship no longer obtains."
              ::= { snmpTraps 6 }


          -- the set group
          --
          -- a collection of objects which allow several cooperating
          -- SNMPv2 entities, all acting in a manager role, to
          -- coordinate their use of the SNMPv2 set operation.

          snmpSet        OBJECT IDENTIFIER ::= { snmpMIBObjects 6 }

          snmpSetSerialNo OBJECT-TYPE
              SYNTAX     TestAndIncr
              MAX-ACCESS read-write
              STATUS     current
              DESCRIPTION
                      "An advisory lock used to allow several
                      cooperating SNMPv2 entities, all acting in a
                      manager role, to coordinate their use of the
                      SNMPv2 set operation.

                      This object is used for coarse-grain coordination.
                      To achieve fine-grain coordination, one or more
                      similar objects might be defined within each MIB
                      group, as appropriate."
              ::= { snmpSet 1 }


          -- conformance information

          snmpMIBConformance
                         OBJECT IDENTIFIER ::= { snmpMIB 2 }

          snmpMIBCompliances
                         OBJECT IDENTIFIER ::= { snmpMIBConformance 1 }
          snmpMIBGroups  OBJECT IDENTIFIER ::= { snmpMIBConformance 2 }

          -- compliance statements

          snmpMIBCompliance MODULE-COMPLIANCE
              STATUS  current
              DESCRIPTION
                      "The compliance statement for SNMPv2 entities
                      which implement the SNMPv2 MIB."
              MODULE  RFC1213-MIB
                  MANDATORY-GROUPS { system }

              MODULE  -- this module
                  MANDATORY-GROUPS { snmpStatsGroup, snmpORGroup,
                                     snmpTrapGroup, snmpSetGroup }

                  GROUP   snmpV1Group
                  DESCRIPTION
                      "The snmpV1 group is mandatory only for those
                       SNMPv2 entities which also implement SNMPv1."
              ::= { snmpMIBCompliances 1 }


          -- units of conformance

          snmpStatsGroup OBJECT-GROUP
              OBJECTS { snmpStatsPackets, snmpStats30Something,
                        snmpStatsEncodingErrors,
                        snmpStatsUnknownDstParties,
                        snmpStatsDstPartyMismatches,
                        snmpStatsUnknownSrcParties, snmpStatsBadAuths,
                        snmpStatsNotInLifetimes,
                        snmpStatsWrongDigestValues,
                        snmpStatsUnknownContexts,
                        snmpStatsBadOperations,
                        snmpStatsSilentDrops }
              STATUS  current
              DESCRIPTION
                      "A collection of objects providing basic
                      instrumentation of the SNMPv2 entity."
              ::= { snmpMIBGroups 1 }

          snmpV1Group OBJECT-GROUP
              OBJECTS { snmpV1BadCommunityNames, snmpV1BadCommunityUses }
              STATUS  current
              DESCRIPTION
                      "A collection of objects providing basic
                      instrumentation of a SNMPv2 entity which also
                      implements SNMPv1."
              ::= { snmpMIBGroups 2 }

          snmpORGroup OBJECT-GROUP
              OBJECTS { snmpORLastChange, snmpORID, snmpORDescr }
              STATUS  current
              DESCRIPTION
                      "A collection of objects allowing a SNMPv2 entity
                      acting in an agent role to describe its
                      dynamically-configurable object resources."
              ::= { snmpMIBGroups 3 }


          snmpTrapGroup OBJECT-GROUP
              OBJECTS { snmpTrapNumbers, snmpV2EnableAuthenTraps }
              STATUS  current
              DESCRIPTION
                      "A collection of objects which allow the SNMPv2
                      entity, when acting in an agent role, to be
                      configured to generate SNMPv2-Trap-PDUs."
              ::= { snmpMIBGroups 4 }

          snmpSetGroup OBJECT-GROUP
              OBJECTS { snmpSetSerialNo }
              STATUS  current
              DESCRIPTION
                      "A collection of objects which allow several
                      cooperating SNMPv2 entities, all acting in a
                      manager role, to coordinate their use of the
                      SNMPv2 set operation."
              ::= { snmpMIBGroups 5 }

END
SNMPv2-M2M-MIB DEFINITIONS ::= BEGIN

          IMPORTS
              MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE,
              Integer32, Counter32, snmpModules
                  FROM SNMPv2-SMI
              DisplayString, InstancePointer, RowStatus, TimeStamp
                  FROM SNMPv2-TC
              MODULE-COMPLIANCE, OBJECT-GROUP
                  FROM SNMPv2-CONF
              contextIdentity
                  FROM SNMPv2-PARTY-MIB;

          snmpM2M MODULE-IDENTITY
              LAST-UPDATED "9304010000Z"
              ORGANIZATION "IETF SNMPv2 Working Group"
              CONTACT-INFO
                      "        Steven Waldbusser

                       Postal: Carnegie Mellon University
                               4910 Forbes Ave
                               Pittsburgh, PA  15213

                          Tel: +1 412 268 6628
                          Fax: +1 412 268 4987

                       E-mail: waldbusser@cmu.edu"
              DESCRIPTION
                      "The Manager-to-Manager MIB module."
              ::= { snmpModules 2 }

          snmpM2MObjects OBJECT IDENTIFIER ::= { snmpM2M 1 }


          -- the alarm group
          --
          -- a collection of objects allowing the description and
          -- configuration of threshold alarms from a SNMPv2 entity
          -- acting in a dual role.

          snmpAlarm      OBJECT IDENTIFIER ::= { snmpM2MObjects 1 }

          -- This Alarm mechanism periodically takes statistical samples
          -- from variables available via SNMPv2 and compares them to
          -- thresholds that have been configured.  The alarm table
          -- stores configuration entries that each define a variable,
          -- polling period, and threshold parameters.  If a sample is
          -- found to cross the threshold values, an event is generated.
          -- Only variables that resolve to an ASN.1 primitive type of
          -- INTEGER (Integer32, Counter32, Gauge32, TimeTicks,
          -- Counter64, or UInteger32) may be monitored in this way.
          --
          -- This function has a hysteresis mechanism to limit the
          -- generation of events.  This mechanism generates one event
          -- as a threshold is crossed in the appropriate direction.  No
          -- more events are generated for that threshold until the
          -- opposite threshold is crossed.
          --
          -- In the case of sampling a deltaValue, an entity may
          -- implement this mechanism with more precision if it takes a
          -- delta sample twice per period, each time comparing the sum
          -- of the latest two samples to the threshold.  This allows
          -- the detection of threshold crossings that span the sampling
          -- boundary.  Note that this does not require any special
          -- configuration of the threshold value.  It is suggested that
          -- entities implement this more precise algorithm.
          --


          snmpAlarmNextIndex OBJECT-TYPE
              SYNTAX     INTEGER (0..65535)
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The index number of the next appropriate
                      unassigned entry in the snmpAlarmTable.  The value
                      0 indicates that no unassigned entries are
                      available.

                      A management station should create new entries in
                      the snmpAlarmTable using this algorithm: first,
                      issue a management protocol retrieval operation to
                      determine the value of snmpAlarmNextIndex; and,
                      second, issue a management protocol set operation
                      to create an instance of the snmpAlarmStatus
                      object setting its value to `createAndGo' or
                      `createAndWait' (as specified in the description
                      of the RowStatus textual convention)."
              ::= { snmpAlarm 1 }

          snmpAlarmTable OBJECT-TYPE
              SYNTAX     SEQUENCE OF SnmpAlarmEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "A list of snmpAlarm entries."
              ::= { snmpAlarm 2 }

          snmpAlarmEntry OBJECT-TYPE
              SYNTAX     SnmpAlarmEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "A list of parameters that set up a periodic
                      sampling query to check for alarm conditions.  The
                      contextIdentity included in the INDEX clause is
                      the context to which the sampling queries are
                      directed."
              INDEX      { contextIdentity, snmpAlarmIndex }
              ::= { snmpAlarmTable 1 }


          SnmpAlarmEntry ::= SEQUENCE {
              snmpAlarmIndex                    INTEGER,
              snmpAlarmVariable                 InstancePointer,
              snmpAlarmInterval                 Integer32,
              snmpAlarmSampleType               INTEGER,
              snmpAlarmValue                    Integer32,
              snmpAlarmStartupAlarm             INTEGER,
              snmpAlarmRisingThreshold          Integer32,
              snmpAlarmFallingThreshold         Integer32,
              snmpAlarmRisingEventIndex         INTEGER,
              snmpAlarmFallingEventIndex        INTEGER,
              snmpAlarmUnavailableEventIndex    INTEGER,
              snmpAlarmStatus                   RowStatus
          }

          snmpAlarmIndex OBJECT-TYPE
              SYNTAX     INTEGER (1..65535)
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "An index that uniquely identifies an entry in the
                      snmpAlarm table for a particular sampling context.
                      Each such entry defines a diagnostic sample at a
                      particular interval for a variable in the
                      particular context's object resources."
              ::= { snmpAlarmEntry 1 }


          snmpAlarmVariable OBJECT-TYPE
              SYNTAX     InstancePointer
              MAX-ACCESS read-create
              STATUS     current
              DESCRIPTION
                      "The object identifier of the particular variable
                      to be sampled.  Only variables that resolve to an
                      ASN.1 primitive type of INTEGER (Integer32,
                      Counter32, Gauge32, TimeTicks, Counter64, or
                      UInteger32) may be sampled.

                      If it is detected by an error response of
                      authorizationError, noSuchObject, or
                      noSuchInstance that the variable name of an
                      established snmpAlarmEntry is no longer available
                      in the sampling context, a single
                      snmpObjectUnavailableAlarm event is generated and
                      the status of this snmpAlarmEntry is set to
                      `destroy'.  Likewise, if the syntax of the
                      variable retrieved by the query is not Integer32,
                      Counter32, Gauge32, TimeTicks, Counter64, or
                      UInteger32, the same actions will be taken.

                      If the SNMPv2 entity acting in a dual role detects
                      that the sampled value can not be obtained due to
                      lack of response to management queries, it should
                      either:

                           1) Set the status of this snmpAlarmEntry to
                           `destroy', if it is determined that further
                           communication is not possible;

                           or,

                           2) Delete the associated snmpAlarmValue
                           instance (but not the entire conceptual row),
                           and continue to attempt to sample the
                           variable and recreate the associated
                           snmpAlarmValue instance should communication
                           be reestablished.

                      An attempt to modify this object will fail with an
                      `inconsistentValue' error if the associated
                      snmpAlarmStatus object would be equal to `active'
                      both before and after the modification attempt."


              ::= { snmpAlarmEntry 2 }

          snmpAlarmInterval OBJECT-TYPE
              SYNTAX     Integer32
              UNITS      "seconds"
              MAX-ACCESS read-create
              STATUS     current
              DESCRIPTION
                      "The interval in seconds over which the data is
                      sampled and compared with the rising and falling
                      thresholds.  When setting this object and the
                      sampling type is `deltaValue',  care should be
                      taken to ensure that the change during this
                      interval of the variable being sampled will not
                      exceed the (-2^31...2^31-1) range of the
                      snmpAlarmValue.

                      An attempt to modify this object will fail with an
                      `inconsistentValue' error if the associated
                      snmpAlarmStatus object would be equal to `active'
                      both before and after the modification attempt."
              ::= { snmpAlarmEntry 3 }


          snmpAlarmSampleType OBJECT-TYPE
              SYNTAX     INTEGER {
                             absoluteValue(1),
                             deltaValue(2)
                         }
              MAX-ACCESS read-create
              STATUS     current
              DESCRIPTION
                      "The method of sampling the selected variable and
                      calculating the value to be compared against the
                      thresholds.  If the value of this object is
                      `absoluteValue', the value of the selected
                      variable at the end of the sampling interval will
                      be compared directly with both the
                      snmpAlarmRisingThreshold and the
                      snmpAlarmFallingThreshold values.  If the value of
                      this object is `deltaValue', the value of the
                      selected variable at the end of the sampling
                      interval will be subtracted from its value at the
                      end of the previous sampling interval, and the
                      difference compared with both the
                      snmpAlarmRisingThreshold and the
                      snmpAlarmFallingThreshold values.

                      An attempt to modify this object will fail with an
                      `inconsistentValue' error if the associated
                      snmpAlarmStatus object would be equal to `active'
                      both before and after the modification attempt."
              DEFVAL { deltaValue }
              ::= { snmpAlarmEntry 4 }


          snmpAlarmValue OBJECT-TYPE
              SYNTAX     Integer32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The value of the statistic during the last
                      sampling period.  The value during the current
                      sampling period is not made available until the
                      period is completed.  If the value of the
                      statistic does not fit in the signed 32 bit
                      representation of this object, it should be
                      truncated in an implementation specific manner.

                      Note that if the associated snmpAlarmSampleType is
                      set to `deltaValue', the value of this object is
                      the difference in the sampled variable since the
                      last sample.

                      This object will be created by the SNMPv2 entity
                      acting in a dual role when this entry is set to
                      `active', and the first sampling period has
                      completed.  It may be created and deleted at other
                      times by the SNMPv2 entity acting in a dual role
                      when the sampled value can not be obtained, as
                      specified in the snmpAlarmVariable object."
              ::= { snmpAlarmEntry 5 }


          snmpAlarmStartupAlarm OBJECT-TYPE
              SYNTAX     INTEGER {
                             risingAlarm(1),
                             fallingAlarm(2),
                             risingOrFallingAlarm(3)
                         }
              MAX-ACCESS read-create
              STATUS     current
              DESCRIPTION
                      "The alarm that may be sent when this entry is
                      first set to `active'.  If the first sample after
                      this entry becomes active is greater than or equal
                      to the risingThreshold and snmpAlarmStartupAlarm
                      is equal to `risingAlarm' or
                      `risingOrFallingAlarm', then a single rising alarm
                      will be generated.  If the first sample after this
                      entry becomes active is less than or equal to the
                      fallingThreshold and snmpAlarmStartupAlarm is
                      equal to `fallingAlarm' or `risingOrFallingAlarm',
                      then a single falling alarm will be generated.
                      Note that a snmpObjectUnavailableAlarm is sent
                      upon startup whenever it is applicable,
                      independent of the setting of
                      snmpAlarmStartupAlarm.

                      An attempt to modify this object will fail with an
                      `inconsistentValue' error if the associated
                      snmpAlarmStatus object would be equal to `active'
                      both before and after the modification attempt."
              DEFVAL { risingOrFallingAlarm }
              ::= { snmpAlarmEntry 6 }


          snmpAlarmRisingThreshold OBJECT-TYPE
              SYNTAX     Integer32
              MAX-ACCESS read-create
              STATUS     current
              DESCRIPTION
                      "A threshold for the sampled statistic.  When the
                      current sampled value is greater than or equal to
                      this threshold, and the value at the last sampling
                      interval was less than this threshold, a single
                      event will be generated.  A single event will also
                      be generated if the first sample after this entry
                      becomes active is greater than or equal to this
                      threshold and the associated snmpAlarmStartupAlarm
                      is equal to `risingAlarm' or
                      `risingOrFallingAlarm'.

                      After a rising event is generated, another such
                      event will not be generated until the sampled
                      value falls below this threshold and reaches the
                      snmpAlarmFallingThreshold.

                      An attempt to modify this object will fail with an
                      `inconsistentValue' error if the associated
                      snmpAlarmStatus object would be equal to `active'
                      both before and after the modification attempt."
              ::= { snmpAlarmEntry 7 }


          snmpAlarmFallingThreshold OBJECT-TYPE
              SYNTAX     Integer32
              MAX-ACCESS read-create
              STATUS     current
              DESCRIPTION
                      "A threshold for the sampled statistic.  When the
                      current sampled value is less than or equal to
                      this threshold, and the value at the last sampling
                      interval was greater than this threshold, a single
                      event will be generated.  A single event will also
                      be generated if the first sample after this entry
                      becomes active is less than or equal to this
                      threshold and the associated snmpAlarmStartupAlarm
                      is equal to `fallingAlarm' or
                      `risingOrFallingAlarm'.

                      After a falling event is generated, another such
                      event will not be generated until the sampled
                      value rises above this threshold and reaches the
                      snmpAlarmRisingThreshold.

                      An attempt to modify this object will fail with an
                      `inconsistentValue' error if the associated
                      snmpAlarmStatus object would be equal to `active'
                      both before and after the modification attempt."
              ::= { snmpAlarmEntry 8 }


          snmpAlarmRisingEventIndex OBJECT-TYPE
              SYNTAX     INTEGER (0..65535)
              MAX-ACCESS read-create
              STATUS     current
              DESCRIPTION
                      "The index of the snmpEventEntry that is used when
                      a rising threshold is crossed.  The snmpEventEntry
                      identified by a particular value of this index is
                      the same as identified by the same value of the
                      snmpEventIndex object.  If there is no
                      corresponding entry in the snmpEventTable, then no
                      association exists.  In particular, if this value
                      is zero, no associated event will be generated, as
                      zero is not a valid snmpEventIndex.

                      An attempt to modify this object will fail with an
                      `inconsistentValue' error if the associated
                      snmpAlarmStatus object would be equal to `active'
                      both before and after the modification attempt."
              ::= { snmpAlarmEntry 9 }


          snmpAlarmFallingEventIndex OBJECT-TYPE
              SYNTAX     INTEGER (0..65535)
              MAX-ACCESS read-create
              STATUS     current
              DESCRIPTION
                      "The index of the snmpEventEntry that is used when
                      a falling threshold is crossed.  The
                      snmpEventEntry identified by a particular value of
                      this index is the same as identified by the same
                      value of the snmpEventIndex object.  If there is
                      no corresponding entry in the snmpEventTable, then
                      no association exists.  In particular, if this
                      value is zero, no associated event will be
                      generated, as zero is not a valid snmpEventIndex.

                      An attempt to modify this object will fail with an
                      `inconsistentValue' error if the associated
                      snmpAlarmStatus object would be equal to `active'
                      both before and after the modification attempt."
              ::= { snmpAlarmEntry 10 }

          snmpAlarmUnavailableEventIndex OBJECT-TYPE
              SYNTAX     INTEGER (0..65535)
              MAX-ACCESS read-create
              STATUS     current
              DESCRIPTION
                      "The index of the snmpEventEntry that is used when
                      a variable becomes unavailable.  The
                      snmpEventEntry identified by a particular value of
                      this index is the same as identified by the same
                      value of the snmpEventIndex object.  If there is
                      no corresponding entry in the snmpEventTable, then
                      no association exists.  In particular, if this
                      value is zero, no associated event will be
                      generated, as zero is not a valid snmpEventIndex.

                      An attempt to modify this object will fail with an
                      `inconsistentValue' error if the associated
                      snmpAlarmStatus object would be equal to `active'
                      both before and after the modification attempt."
              ::= { snmpAlarmEntry 11 }


          snmpAlarmStatus OBJECT-TYPE
              SYNTAX     RowStatus
              MAX-ACCESS read-create
              STATUS     current
              DESCRIPTION
                      "The status of this snmpAlarm entry.  This object
                      may not be set to `active' unless the following
                      columnar objects exist in this row:
                      snmpAlarmVariable, snmpAlarmInterval,
                      snmpAlarmSampleType, snmpAlarmStartupAlarm,
                      snmpAlarmRisingThreshold,
                      snmpAlarmFallingThreshold,
                      snmpAlarmRisingEventIndex,
                      snmpAlarmFallingEventIndex, and
                      snmpAlarmUnavailableEventIndex."
              ::= { snmpAlarmEntry 12 }


          -- alarm-related notifications

          snmpAlarmNotifications
                         OBJECT IDENTIFIER ::= { snmpAlarm 3 }

          snmpRisingAlarm NOTIFICATION-TYPE
              OBJECTS { snmpAlarmVariable, snmpAlarmSampleType,
                        snmpAlarmValue, snmpAlarmRisingThreshold }
              STATUS  current
              DESCRIPTION
                      "An event that is generated when an alarm entry
                      crosses its rising threshold.  The instances of
                      those objects contained within the varbind list
                      are those of the alarm entry which generated this
                      event."
              ::= { snmpAlarmNotifications 1 }

          snmpFallingAlarm NOTIFICATION-TYPE
              OBJECTS { snmpAlarmVariable, snmpAlarmSampleType,
                        snmpAlarmValue, snmpAlarmFallingThreshold }
              STATUS  current
              DESCRIPTION
                      "An event that is generated when an alarm entry
                      crosses its falling threshold.  The instances of
                      those objects contained within the varbind list
                      are those of the alarm entry which generated this
                      event."
              ::= { snmpAlarmNotifications 2 }

          snmpObjectUnavailableAlarm NOTIFICATION-TYPE
              OBJECTS { snmpAlarmVariable }
              STATUS  current
              DESCRIPTION
                      "An event that is generated when a variable
                      monitored by an alarm entry becomes unavailable.
                      The instance of snmpAlarmVariable contained within
                      the varbind list is the one associated with the
                      alarm entry which generated this event."
              ::= { snmpAlarmNotifications 3 }


          -- the event group
          --
          -- a collection of objects allowing the description and
          -- configuration of events from a SNMPv2 entity acting
          -- in a dual role.

          snmpEvent      OBJECT IDENTIFIER ::= { snmpM2MObjects 2 }

          -- The snmpEvent table defines the set of events generated on
          -- a SNMPv2 entity acting in a dual role.  Each entry in the
          -- snmpEventTable associates an event type with the
          -- notification method and associated parameters.  Some
          -- snmpEvent entries are fired by an associated condition in
          -- the snmpAlarmTable.  Others are fired on behalf of
          -- conditions defined in the NOTIFICATION-TYPE macro.  The
          -- snmpNotificationTable defines notifications that should
          -- occur when an associated event is fired.

          snmpEventNextIndex OBJECT-TYPE
              SYNTAX     INTEGER (0..65535)
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The index number of the next appropriate
                      unassigned entry in the snmpEventTable.  The value
                      0 indicates that no unassigned entries are
                      available.

                      A management station should create new entries in
                      the snmpEventTable using this algorithm: first,
                      issue a management protocol retrieval operation to
                      determine the value of snmpEventNextIndex; and,
                      second, issue a management protocol set operation
                      to create an instance of the snmpEventStatus
                      object setting its value to `createAndWait' or
                      'createAndGo'."
              ::= { snmpEvent 1 }


          snmpEventTable OBJECT-TYPE
              SYNTAX     SEQUENCE OF SnmpEventEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "A list of events."
              ::= { snmpEvent 2 }

          snmpEventEntry OBJECT-TYPE
              SYNTAX     SnmpEventEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "A set of parameters that describe an event that
                      is generated when certain conditions are met."
              INDEX      { snmpEventIndex }
              ::= { snmpEventTable 1 }

          SnmpEventEntry ::= SEQUENCE {
              snmpEventIndex          INTEGER,
              snmpEventID             OBJECT IDENTIFIER,
              snmpEventDescription    DisplayString,
              snmpEventEvents         Counter32,
              snmpEventLastTimeSent   TimeStamp,
              snmpEventStatus         RowStatus
          }

          snmpEventIndex OBJECT-TYPE
              SYNTAX     INTEGER (1..65535)
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "An index that uniquely identifies an entry in the
                      snmpEvent table.  Each such entry defines an event
                      generated when the appropriate conditions occur."
              ::= { snmpEventEntry 1 }


          snmpEventID OBJECT-TYPE
              SYNTAX     OBJECT IDENTIFIER
              MAX-ACCESS read-create
              STATUS     current
              DESCRIPTION
                      "The authoritative identification of the event
                      type generated by this entry.  This variable
                      occurs as the second varbind of an InformRequest-
                      PDU.  If this OBJECT IDENTIFIER maps to a
                      NOTIFICATION-TYPE the sender will place the
                      objects listed in the NOTIFICATION-TYPE in the
                      varbind list."
              ::= { snmpEventEntry 2 }

          snmpEventDescription OBJECT-TYPE
              SYNTAX     DisplayString (SIZE (0..127))
              MAX-ACCESS read-create
              STATUS     current
              DESCRIPTION
                      "A comment describing this snmpEvent entry."
              ::= { snmpEventEntry 3 }

          snmpEventEvents OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The number of events caused by event generators
                      associated with this snmpEvent entry."
              ::= { snmpEventEntry 4 }


          snmpEventLastTimeSent OBJECT-TYPE
              SYNTAX     TimeStamp
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The value of sysUpTime at the time this snmpEvent
                      entry last generated an event.  If this entry has
                      not generated any events, this value will be
                      zero."
              DEFVAL { 0 }
              ::= { snmpEventEntry 5 }

          snmpEventStatus OBJECT-TYPE
              SYNTAX     RowStatus
              MAX-ACCESS read-create
              STATUS     current
              DESCRIPTION
                      "The status of this snmpEvent entry.  This object
                      may not be set to `active' unless the following
                      columnar objects exist in this row: snmpEventID,
                      snmpEventDescription, snmpEventEvents, and
                      snmpEventLastTimeSent.

                      Setting an instance of this object to the value
                      'destroy' has the effect of invalidating any/all
                      entries in the snmpEventTable, and the
                      snmpEventNotifyTable which reference the
                      corresponding snmpEventEntry."
              ::= { snmpEventEntry 6 }


          snmpEventNotifyMinInterval OBJECT-TYPE
              SYNTAX     Integer32
              UNITS      "seconds"
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The minimum interval that the SNMPv2 entity
                      acting in a dual role will wait before
                      retransmitting an InformRequest-PDU.  This object
                      specifies the minimal value supported by the
                      SNMPv2 entity acting in a dual role, based on
                      resource or implementation constraints.

                      For a particular entry in the
                      snmpEventNotifyTable, if the associated
                      snmpEventNotifyIntervalRequested variable is
                      greater than this object, the
                      snmpEventNotifyIntervalRequested value shall be
                      used as the minimum interval for retransmissions
                      of InformRequest-PDUs sent on behalf of that
                      entry."
              ::= { snmpEvent 3 }

          snmpEventNotifyMaxRetransmissions OBJECT-TYPE
              SYNTAX     Integer32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The maximum number of time that the SNMPv2 entity
                      acting in a dual role will retransmit an
                      InformRequest-PDU.  This object specifies the
                      maximal value supported by the SNMPv2 entity
                      acting in a dual role, based on resource or
                      implementation constraints.

                      For a particular entry in the
                      snmpEventNotifyTable, if the associated
                      snmpEventNotifyRetransmissionsRequested variable
                      is less than this object, the
                      snmpEventNotifyRetransmissionsRequested value
                      shall be used as the retransmission count for
                      InformRequest-PDUs sent on behalf of that entry."
              ::= { snmpEvent 4 }

          -- The snmpEventNotifyTable is used to configure the


          -- destination and type of notifications sent by a SNMPv2
          -- entity acting in a manager role when a particular event
          -- is triggered.

          snmpEventNotifyTable OBJECT-TYPE
              SYNTAX     SEQUENCE OF SnmpEventNotifyEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "A list of protocol configuration entries for
                      event notifications from this entity."
              ::= { snmpEvent 5 }

          snmpEventNotifyEntry OBJECT-TYPE
              SYNTAX     SnmpEventNotifyEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "A set of parameters that describe the type and
                      destination of InformRequest-PDUs sent for a
                      particular event.  The snmpEventIndex in this
                      entry's INDEX clause identifies the snmpEventEntry
                      which, when triggered, will generate a
                      notification as configured in this entry.  The
                      contextIdentity in this entry's INDEX clause
                      identifies the context to which a notification
                      will be sent."
              INDEX      { snmpEventIndex, contextIdentity }
              ::= { snmpEventNotifyTable 1 }

          SnmpEventNotifyEntry ::= SEQUENCE {
              snmpEventNotifyIntervalRequested        Integer32,
              snmpEventNotifyRetransmissionsRequested Integer32,
              snmpEventNotifyLifetime                 Integer32,
              snmpEventNotifyStatus                   RowStatus
          }


          snmpEventNotifyIntervalRequested OBJECT-TYPE
              SYNTAX     Integer32
              UNITS      "seconds"
              MAX-ACCESS read-create
              STATUS     current
              DESCRIPTION
                      "The requested interval for retransmission of
                      Inform PDUs generated on the behalf of this entry.

                      This variable will be the actual interval used
                      unless the snmpEventNotifyMinInterval is greater
                      than this object, in which case the interval shall
                      be equal to snmpEventNotifyMinInterval."
              DEFVAL { 30 }
              ::= { snmpEventNotifyEntry 1 }

          snmpEventNotifyRetransmissionsRequested OBJECT-TYPE
              SYNTAX     Integer32
              MAX-ACCESS read-create
              STATUS     current
              DESCRIPTION
                      "The requested number of retransmissions of an
                      InformRequest-PDU generated on behalf of this
                      entry.

                      This variable will be the actual number of
                      retransmissions used unless the
                      snmpEventNotifyMaxRetransmissions is less than
                      this object, in which case the retransmission
                      count shall be equal to
                      snmpEventNotifyMaxRetransmissions."
              DEFVAL { 5 }
              ::= { snmpEventNotifyEntry 2 }


          snmpEventNotifyLifetime OBJECT-TYPE
              SYNTAX     Integer32
              UNITS      "seconds"
              MAX-ACCESS read-create
              STATUS     current
              DESCRIPTION
                      "The number of seconds this entry shall live until
                      the corresponding instance of
                      snmpEventNotifyStatus is set to 'destroy'.  This
                      value shall count down to zero, at which time the
                      corresponding instance of snmpEventNotifyStatus
                      will be set to 'destroy'.  Any management station
                      that is using this entry must periodically refresh
                      this value to ensure the continued delivery of
                      events."
              DEFVAL { 86400 }
              ::= { snmpEventNotifyEntry 3 }

          snmpEventNotifyStatus OBJECT-TYPE
              SYNTAX     RowStatus
              MAX-ACCESS read-create
              STATUS     current
              DESCRIPTION
                      "The state of this snmpEventNotifyEntry.  This
                      object may not be set to `active' unless the
                      following columnar objects exist in this row:
                      snmpEventNotifyIntervalRequested,
                      snmpEventNotifyRetransmissionsRequested, and
                      snmpEventNotifyLifetime."
              ::= { snmpEventNotifyEntry 4 }


          -- conformance information

          snmpM2MConformance
                         OBJECT IDENTIFIER ::= { snmpM2M 2 }

          snmpM2MCompliances
                         OBJECT IDENTIFIER ::= { snmpM2MConformance 1 }
          snmpM2MGroups  OBJECT IDENTIFIER ::= { snmpM2MConformance 2 }

          -- compliance statements

          snmpM2MCompliance MODULE-COMPLIANCE
              STATUS  current
              DESCRIPTION
                      "The compliance statement for SNMPv2 entities
                      which implement the Manager-to-Manager MIB."
              MODULE  -- this module
                  MANDATORY-GROUPS { snmpAlarmGroup, snmpEventGroup }
              ::= { snmpM2MCompliances 1 }

          -- units of conformance

          snmpAlarmGroup OBJECT-GROUP
              OBJECTS { snmpAlarmNextIndex,
                        snmpAlarmVariable, snmpAlarmInterval,
                        snmpAlarmSampleType, snmpAlarmValue,
                        snmpAlarmStartupAlarm, snmpAlarmRisingThreshold,
                        snmpAlarmFallingThreshold,
                        snmpAlarmRisingEventIndex,
                        snmpAlarmFallingEventIndex,
                        snmpAlarmUnavailableEventIndex,
                        snmpAlarmStatus }
              STATUS  current
              DESCRIPTION
                      "A collection of objects allowing the description
                      and configuration of threshold alarms from a
                      SNMPv2 entity acting in a dual role."
              ::= { snmpM2MGroups 1 }


          snmpEventGroup OBJECT-GROUP
              OBJECTS { snmpEventNextIndex,
                        snmpEventID, snmpEventDescription,
                        snmpEventEvents, snmpEventLastTimeSent,
                        snmpEventStatus, snmpEventNotifyMinInterval,
                        snmpEventNotifyMaxRetransmissions,
                        snmpEventNotifyIntervalRequested,
                        snmpEventNotifyRetransmissionsRequested,
                        snmpEventNotifyLifetime, snmpEventNotifyStatus }
              STATUS  current
              DESCRIPTION
                      "A collection of objects allowing the description
                      and configuration of events from a SNMPv2 entity
                      acting in a dual role."
              ::= { snmpM2MGroups 2 }

END

SNMPv2-TM DEFINITIONS ::= BEGIN

          IMPORTS
              snmpDomains, snmpProxys
                  FROM SNMPv2-SMI
              TEXTUAL-CONVENTION
                  FROM SNMPv2-TC;

          -- SNMPv2 over UDP

          snmpUDPDomain  OBJECT IDENTIFIER ::= { snmpDomains 1 }
          -- for a SnmpUDPAddress of length 6:
          --
          -- octets   contents        encoding
          --  1-4     IP-address      network-byte order
          --  5-6     UDP-port        network-byte order
          --
          SnmpUDPAddress ::= TEXTUAL-CONVENTION
              DISPLAY-HINT "1d.1d.1d.1d/2d"
              STATUS       current
              DESCRIPTION
                      "Represents a UDP address."
              SYNTAX       OCTET STRING (SIZE (6))


          -- SNMPv2 over OSI

          snmpCLNSDomain OBJECT IDENTIFIER ::= { snmpDomains 2 }
          snmpCONSDomain OBJECT IDENTIFIER ::= { snmpDomains 3 }
          -- for a SnmpOSIAddress of length m:
          --
          -- octets   contents            encoding
          --    1     length of NSAP      "n" as an unsigned-integer
          --                                (either 0 or from 3 to 20)
          -- 2..(n+1) NSAP                concrete binary representation
          -- (n+2)..m TSEL                string of (up to 64) octets
          --
          SnmpOSIAddress ::= TEXTUAL-CONVENTION
              DISPLAY-HINT "*1x:/1x:"
              STATUS       current
              DESCRIPTION
                      "Represents an OSI transport-address."
              SYNTAX       OCTET STRING (SIZE (1 | 4..85))


          -- SNMPv2 over DDP

          snmpDDPDomain  OBJECT IDENTIFIER ::= { snmpDomains 4 }
          -- for a SnmpNBPAddress of length m:
          --
          --    octets      contents         encoding
          --       1        length of object "n" as an unsigned integer
          --     2..(n+1)   object           string of (up to 32) octets
          --      n+2       length of type   "p" as an unsigned integer
          -- (n+3)..(n+2+p) type             string of (up to 32) octets
          --     n+3+p      length of zone   "q" as an unsigned integer
          -- (n+4+p)..m     zone             string of (up to 32) octets
          --
          -- for comparison purposes, strings are case-insensitive
          --
          -- all strings may contain any octet other than 255 (hex ff)
          --
          SnmpNBPAddress ::= TEXTUAL-CONVENTION
              STATUS       current
              DESCRIPTION
                      "Represents an NBP name."
              SYNTAX       OCTET STRING (SIZE (3..99))

          -- SNMPv2 over IPX

          snmpIPXDomain  OBJECT IDENTIFIER ::= { snmpDomains 5 }
          -- for a SnmpIPXAddress of length 12:
          --
          -- octets   contents            encoding
          --  1-4     network-number      network-byte order
          --  5-10    physical-address    network-byte order
          -- 11-12    socket-number       network-byte order
          --
          SnmpIPXAddress ::= TEXTUAL-CONVENTION
              DISPLAY-HINT "4x.1x:1x:1x:1x:1x:1x.2d"
              STATUS       current
              DESCRIPTION
                      "Represents an IPX address."
              SYNTAX       OCTET STRING (SIZE (12))


          -- for proxy to community-based SNMPv1 (RFC 1157)

          rfc1157Proxy   OBJECT IDENTIFIER ::= { snmpProxys 1 }

          -- uses SnmpUDPAddress
          rfc1157Domain  OBJECT IDENTIFIER ::= { rfc1157Proxy 1 }

          -- the community-based noAuth
          rfc1157noAuth  OBJECT IDENTIFIER ::= { rfc1157Proxy 2 }

END
RFC1271-MIB DEFINITIONS ::= BEGIN

              IMPORTS
                  Counter                              FROM RFC1155-SMI
                  DisplayString                        FROM RFC1158-MIB
                  mib-2                                FROM RFC1213-MIB
                  OBJECT-TYPE                          FROM RFC-1212;

          --  This MIB module uses the extended OBJECT-TYPE macro as
          --  defined in [9].

          --  Remote Network Monitoring MIB

              rmon    OBJECT IDENTIFIER ::= { mib-2 16 }

              -- textual conventions

              OwnerString ::= OCTET STRING
              -- This data type is used to model an administratively
              -- assigned name of the owner of a resource. This
              -- information is taken from the NVT ASCII character set.
              -- It is suggested that this name contain one or more
              -- of the following:
              -- IP address, management station name, network manager's
              -- name, location, or phone number.
              -- In some cases the agent itself will be the owner of
              -- an entry.  In these cases, this string shall be set
              -- to a string starting with 'monitor'.


              --
              -- SNMP access control is articulated entirely in terms of
              -- the contents of MIB views; access to a particular SNMP
              -- object instance depends only upon its presence or
              -- absence in a particular MIB view and never upon its
              -- value or the value of related object instances. Thus,
              -- objects of this type afford resolution of resource
              -- contention only among cooperating managers; they
              -- realize no access control function with respect
              -- to uncooperative parties.
              --
              -- By convention, objects with this syntax are declared
              -- as having
              --
              --      SIZE (0..127)

              EntryStatus ::= INTEGER
                         { valid(1),
                           createRequest(2),
                           underCreation(3),
                           invalid(4)
                         }

              -- The status of a table entry.
              --
              -- Setting this object to the value invalid(4) has the
              -- effect of invalidating the corresponding entry.
              -- That is, it effectively disassociates the mapping
              -- identified with said entry.
              -- It is an implementation-specific matter as to whether
              -- the agent removes an invalidated entry from the table.
              -- Accordingly, management stations must be prepared to
              -- receive tabular information from agents that corresponds
              -- to entries currently not in use.  Proper
              -- interpretation of such entries requires examination
              -- of the relevant EntryStatus object.
              --
              -- An existing instance of this object cannot be set to
              -- createRequest(2).  This object may only be set to
              -- createRequest(2) when this instance is created.  When
              -- this object is created, the agent may wish to create
              -- supplemental object instances to complete a conceptual
              -- row in this table.  Immediately after completing the
              -- create operation, the agent must set this object to
              -- underCreation(3).
              --
              -- Entries shall exist in the underCreation(3) state until


              -- the management station is finished configuring the
              -- entry and sets this object to valid(1) or aborts,
              -- setting this object to invalid(4).  If the agent
              -- determines that an entry has been in the
              -- underCreation(3) state for an abnormally long time,
              -- it may decide that the management station has
              -- crashed.  If the agent makes this decision,
              -- it may set this object to invalid(4) to reclaim the
              -- entry.  A prudent agent will understand that the
              -- management station may need to wait for human input
              -- and will allow for that possibility in its
              -- determination of this abnormally long period.

              statistics        OBJECT IDENTIFIER ::= { rmon 1 }
              history           OBJECT IDENTIFIER ::= { rmon 2 }
              alarm             OBJECT IDENTIFIER ::= { rmon 3 }
              hosts             OBJECT IDENTIFIER ::= { rmon 4 }
              hostTopN          OBJECT IDENTIFIER ::= { rmon 5 }
              matrix            OBJECT IDENTIFIER ::= { rmon 6 }
              filter            OBJECT IDENTIFIER ::= { rmon 7 }
              capture           OBJECT IDENTIFIER ::= { rmon 8 }
              event             OBJECT IDENTIFIER ::= { rmon 9 }

          -- The Statistics Group
          --
          -- Implementation of the Statistics group is optional.
          --
          -- The statistics group contains statistics measured by the
          -- probe for each monitored interface on this device.  These
          -- statistics take the form of free running counters that
          -- start from zero when a valid entry is created.
          --
          -- This group currently has statistics defined only for
          -- Ethernet interfaces.  Each etherStatsEntry contains
          -- statistics for one Ethernet interface.  The probe must
          -- create one etherStats entry for each monitored Ethernet
          -- interface on the device.

          etherStatsTable OBJECT-TYPE
              SYNTAX SEQUENCE OF EtherStatsEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of Ethernet statistics entries."
              ::= { statistics 1 }


          etherStatsEntry OBJECT-TYPE
              SYNTAX EtherStatsEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A collection of statistics kept for a particular
                  Ethernet interface."
              INDEX { etherStatsIndex }
              ::= { etherStatsTable 1 }

          EtherStatsEntry ::= SEQUENCE {
              etherStatsIndex                    INTEGER (1..65535),
              etherStatsDataSource               OBJECT IDENTIFIER,
              etherStatsDropEvents               Counter,
              etherStatsOctets                   Counter,
              etherStatsPkts                     Counter,
              etherStatsBroadcastPkts            Counter,
              etherStatsMulticastPkts            Counter,
              etherStatsCRCAlignErrors           Counter,
              etherStatsUndersizePkts            Counter,
              etherStatsOversizePkts             Counter,
              etherStatsFragments                Counter,
              etherStatsJabbers                  Counter,
              etherStatsCollisions               Counter,
              etherStatsPkts64Octets             Counter,
              etherStatsPkts65to127Octets        Counter,
              etherStatsPkts128to255Octets       Counter,
              etherStatsPkts256to511Octets       Counter,
              etherStatsPkts512to1023Octets      Counter,
              etherStatsPkts1024to1518Octets     Counter,
              etherStatsOwner                    OwnerString,
              etherStatsStatus                   INTEGER
          }

          etherStatsIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The value of this object uniquely identifies this
                  etherStats entry."
              ::= { etherStatsEntry 1 }

          etherStatsDataSource OBJECT-TYPE
              SYNTAX OBJECT IDENTIFIER
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION


                  "This object identifies the source of the data that
                  this etherStats entry is configured to analyze.  This
                  source can be any ethernet interface on this device.
                  In order to identify a particular interface, this
                  object shall identify the instance of the ifIndex
                  object, defined in [4,6], for the desired interface.
                  For example, if an entry were to receive data from
                  interface #1, this object would be set to ifIndex.1.

                  The statistics in this group reflect all packets
                  on the local network segment attached to the
                  identified interface.

                  This object may not be modified if the associated
                  etherStatsStatus object is equal to valid(1)."
              ::= { etherStatsEntry 2 }

          etherStatsDropEvents OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The total number of events in which packets
                  were dropped by the probe due to lack of resources.
                  Note that this number is not necessarily the number of
                  packets dropped; it is just the number of times this
                  condition has been detected."
              ::= { etherStatsEntry 3 }

          etherStatsOctets OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The total number of octets of data (including
                  those in bad packets) received on the
                  network (excluding framing bits but including
                  FCS octets)."
              ::= { etherStatsEntry 4 }

          etherStatsPkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The total number of packets (including error packets)
                  received."
              ::= { etherStatsEntry 5 }


          etherStatsBroadcastPkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The total number of good packets received that were
                  directed to the broadcast address."
              ::= { etherStatsEntry 6 }

          etherStatsMulticastPkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The total number of good packets received that were
                  directed to a multicast address.  Note that this
                  number does not include packets directed to the
                  broadcast address."
              ::= { etherStatsEntry 7 }

          etherStatsCRCAlignErrors OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The total number of packets received that
                  had a length (excluding framing bits, but
                  including FCS octets) of between 64 and 1518
                  octets, inclusive, but were not an integral number
                  of octets in length or had a bad Frame Check
                  Sequence (FCS)."
              ::= { etherStatsEntry 8 }

          etherStatsUndersizePkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The total number of packets received that were
                  less than 64 octets long (excluding framing bits,
                  but including FCS octets) and were otherwise well
                  formed."
              ::= { etherStatsEntry 9 }

          etherStatsOversizePkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory


              DESCRIPTION
                  "The total number of packets received that were
                  longer than 1518 octets (excluding framing bits,
                  but including FCS octets) and were otherwise
                  well formed."
              ::= { etherStatsEntry 10 }

          etherStatsFragments OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The total number of packets received that were not an
                  integral number of octets in length or that had a bad
                  Frame Check Sequence (FCS), and were less than 64
                  octets in length (excluding framing bits but
                  including FCS octets)."
              ::= { etherStatsEntry 11 }

          etherStatsJabbers OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The total number of packets received that were
                  longer than 1518 octets (excluding framing bits,
                  but including FCS octets), and were not an
                  integral number of octets in length or had
                  a bad Frame Check Sequence (FCS)."
              ::= { etherStatsEntry 12 }

          etherStatsCollisions OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The best estimate of the total number of collisions
                  on this Ethernet segment."
              ::= { etherStatsEntry 13 }

          etherStatsPkts64Octets OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The total number of packets (including error
                  packets) received that were 64 octets in length
                  (excluding framing bits but including FCS octets)."


              ::= { etherStatsEntry 14 }

          etherStatsPkts65to127Octets OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The total number of packets (including error
                  packets) received that were between
                  65 and 127 octets in length inclusive
                  (excluding framing bits but including FCS octets)."
              ::= { etherStatsEntry 15 }

          etherStatsPkts128to255Octets OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The total number of packets (including error
                  packets) received that were between
                  128 and 255 octets in length inclusive
                  (excluding framing bits but including FCS octets)."
              ::= { etherStatsEntry 16 }

          etherStatsPkts256to511Octets OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The total number of packets (including error
                  packets) received that were between
                  256 and 511 octets in length inclusive
                  (excluding framing bits but including FCS octets)."
              ::= { etherStatsEntry 17 }

          etherStatsPkts512to1023Octets OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The total number of packets (including error
                  packets) received that were between
                  512 and 1023 octets in length inclusive
                  (excluding framing bits but including FCS octets)."
              ::= { etherStatsEntry 18 }


          etherStatsPkts1024to1518Octets OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The total number of packets (including error
                  packets) received that were between
                  1024 and 1518 octets in length inclusive
                  (excluding framing bits but including FCS octets)."
              ::= { etherStatsEntry 19 }

          etherStatsOwner OBJECT-TYPE
              SYNTAX OwnerString
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The entity that configured this entry and is
                  therefore using the resources assigned to it."
              ::= { etherStatsEntry 20 }

          etherStatsStatus OBJECT-TYPE
              SYNTAX EntryStatus
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The status of this etherStats entry."
              ::= { etherStatsEntry 21 }

          -- The History Group

          -- Implementation of the History group is optional.
          --
          -- The history group records periodic statistical samples from
          -- a network and stores them for later retrieval.  The
          -- historyControl table stores configuration entries that each
          -- define an interface, polling period, and other parameters.
          -- Once samples are taken, their data is stored in an entry
          -- in a media-specific table.  Each such entry defines one
          -- sample, and is associated with the historyControlEntry that
          -- caused the sample to be taken.  Currently the only media-
          -- specific table defined is the etherHistoryTable, for
          -- Ethernet networks.
          --
          -- If the probe keeps track of the time of day, it should
          -- start the first sample of the history at a time such that
          -- when the next hour of the day begins, a sample is
          -- started at that instant.  This tends to make more


          -- user-friendly reports, and enables comparison of reports
          -- from different probes that have relatively accurate time
          -- of day.
          --
          -- The monitor is encouraged to add two history control entries
          -- per monitored interface upon initialization that describe
          -- a short term and a long term polling period.  Suggested
          -- parameters are 30 seconds for the short term polling
          -- period and 30 minutes for the long term period.

          historyControlTable OBJECT-TYPE
              SYNTAX SEQUENCE OF HistoryControlEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of history control entries."
              ::= { history 1 }

          historyControlEntry OBJECT-TYPE
              SYNTAX HistoryControlEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of parameters that set up a periodic
                  sampling of statistics."
              INDEX { historyControlIndex }
              ::= { historyControlTable 1 }

          HistoryControlEntry ::= SEQUENCE {
              historyControlIndex             INTEGER (1..65535),
              historyControlDataSource        OBJECT IDENTIFIER,
              historyControlBucketsRequested  INTEGER (1..65535),
              historyControlBucketsGranted    INTEGER (1..65535),
              historyControlInterval          INTEGER (1..3600),
              historyControlOwner             OwnerString,
              historyControlStatus            INTEGER
          }

          historyControlIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "An index that uniquely identifies an entry in the
                  historyControl table.  Each such entry defines a
                  set of samples at a particular interval for an
                  interface on the device."
              ::= { historyControlEntry 1 }


          historyControlDataSource OBJECT-TYPE
              SYNTAX OBJECT IDENTIFIER
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "This object identifies the source of the data for
                  which historical data was collected and
                  placed in a media-specific table on behalf of this
                  historyControlEntry.  This source can be any
                  interface on this device.  In order to identify
                  a particular interface, this object shall identify
                  the instance of the ifIndex object, defined
                  in [4,6], for the desired interface.  For example,
                  if an entry were to receive data from interface #1,
                  this object would be set to ifIndex.1.

                  The statistics in this group reflect all packets
                  on the local network segment attached to the
                  identified interface.

                  This object may not be modified if the associated
                  historyControlStatus object is equal to valid(1)."
              ::= { historyControlEntry 2 }

          historyControlBucketsRequested OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The requested number of discrete time intervals
                  over which data is to be saved in the part of the
                  media-specific table associated with this
                  historyControl entry.

                  When this object is created or modified, the probe
                  should set historyControlBucketsGranted as closely to
                  this object as is possible for the particular probe
                  implementation and available resources."
              DEFVAL { 50 }
              ::= { historyControlEntry 3 }

          historyControlBucketsGranted OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of discrete sampling intervals
                  over which data shall be saved in the part of


                  the media-specific table associated with this
                  historyControl entry.

                  When the associated historyControlBucketsRequested
                  object is created or modified, the probe
                  should set this object as closely to the requested
                  value as is possible for the particular
                  probe implementation and available resources.  The
                  probe must not lower this value except as a result
                  of a modification to the associated
                  historyControlBucketsRequested object.

                  There will be times when the actual number of
                  buckets associated with this entry is less than
                  the value of this object.  In this case, at the
                  end of each sampling interval, a new bucket will
                  be added to the media-specific table.

                  When the number of buckets reaches the value of
                  this object and a new bucket is to be added to the
                  media-specific table, the oldest bucket associated
                  with this historyControlEntry shall be deleted by
                  the agent so that the new bucket can be added.

                  When the value of this object changes to a value less
                  than the current value, entries are deleted
                  from the media-specific table associated with this
                  historyControlEntry.  Enough of the oldest of these
                  entries shall be deleted by the agent so that their
                  number remains less than or equal to the new value of
                  this object.

                  When the value of this object changes to a value
                  greater than the current value, the number of
                  associated media-specific entries may be allowed
                  to grow."
              ::= { historyControlEntry 4 }

          historyControlInterval OBJECT-TYPE
              SYNTAX INTEGER (1..3600)
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The interval in seconds over which the data is
                  sampled for each bucket in the part of the
                  media-specific table associated with this
                  historyControl entry.  This interval can
                  be set to any number of seconds between 1 and


                  3600 (1 hour).

                  Because the counters in a bucket may overflow at their
                  maximum value with no indication, a prudent manager
                  will take into account the possibility of overflow
                  in any of the associated counters.  It is important
                  to consider the minimum time in which any counter
                  could overflow on a particular media type and set
                  the historyControlInterval object to a value less
                  than this interval.  This is typically most
                  important for the 'octets' counter in any
                  media-specific table.  For example, on an Ethernet
                  network, the etherHistoryOctets counter could overflow
                  in about one hour at the Ethernet's maximum
                  utilization.

                  This object may not be modified if the associated
                  historyControlStatus object is equal to valid(1)."
              DEFVAL { 1800 }
              ::= { historyControlEntry 5 }

          historyControlOwner OBJECT-TYPE
              SYNTAX OwnerString
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The entity that configured this entry and is therefore
                  using the resources assigned to it."
              ::= { historyControlEntry 6 }

          historyControlStatus OBJECT-TYPE
              SYNTAX EntryStatus
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The status of this historyControl entry.

                  Each instance of the media-specific table associated
                  with this historyControlEntry will be deleted by the
                  agent if this historyControlEntry is not equal to
                  valid(1)."
              ::= { historyControlEntry 7 }

          -- Ether History table

          etherHistoryTable OBJECT-TYPE
              SYNTAX SEQUENCE OF EtherHistoryEntry


              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of Ethernet history entries."
              ::= { history 2 }

          etherHistoryEntry OBJECT-TYPE
              SYNTAX EtherHistoryEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "An historical sample of Ethernet statistics on a
                  particular Ethernet interface.  This sample is
                  associated with the historyControlEntry which set
                  up the parameters for a regular collection of these
                  samples."
              INDEX { etherHistoryIndex , etherHistorySampleIndex }
              ::= { etherHistoryTable 1 }

          EtherHistoryEntry ::= SEQUENCE {
              etherHistoryIndex                 INTEGER (1..65535),
              etherHistorySampleIndex           INTEGER,
              etherHistoryIntervalStart         TimeTicks,
              etherHistoryDropEvents            Counter,
              etherHistoryOctets                Counter,
              etherHistoryPkts                  Counter,
              etherHistoryBroadcastPkts         Counter,
              etherHistoryMulticastPkts         Counter,
              etherHistoryCRCAlignErrors        Counter,
              etherHistoryUndersizePkts         Counter,
              etherHistoryOversizePkts          Counter,
              etherHistoryFragments             Counter,
              etherHistoryJabbers               Counter,
              etherHistoryCollisions            Counter,
              etherHistoryUtilization           INTEGER (0..10000)
          }

          etherHistoryIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The history of which this entry is a part.  The
                  history identified by a particular value of this
                  index is the same history as identified
                  by the same value of historyControlIndex."
              ::= { etherHistoryEntry 1 }


          etherHistorySampleIndex OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "An index that uniquely identifies the particular
                  sample this entry represents among all samples
                  associated with the same historyControlEntry.
                  This index starts at 1 and increases by one
                  as each new sample is taken."
              ::= { etherHistoryEntry 2 }

          etherHistoryIntervalStart OBJECT-TYPE
              SYNTAX TimeTicks
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The value of sysUpTime at the start of the interval
                  over which this sample was measured.  If the probe
                  keeps track of the time of day, it should start
                  the first sample of the history at a time such that
                  when the next hour of the day begins, a sample is
                  started at that instant.  Note that following this
                  rule may require the probe to delay collecting the
                  first sample of the history, as each sample must be
                  of the same interval.  Also note that the sample which
                  is currently being collected is not accessible in this
                  table until the end of its interval."
              ::= { etherHistoryEntry 3 }

          etherHistoryDropEvents OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The total number of events in which packets
                  were dropped by the probe due to lack of resources
                  during this interval.  Note that this number is not
                  necessarily the number of packets dropped, it is just
                  the number of times this condition has been detected."
              ::= { etherHistoryEntry 4 }

          etherHistoryOctets OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The total number of octets of data (including


                  those in bad packets) received on the
                  network (excluding framing bits but including
                  FCS octets)."
              ::= { etherHistoryEntry 5 }

          etherHistoryPkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of packets (including error packets)
                  received during this sampling interval."
              ::= { etherHistoryEntry 6 }

          etherHistoryBroadcastPkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of good packets received during this
                  sampling interval that were directed to the
                  broadcast address."
              ::= { etherHistoryEntry 7 }

          etherHistoryMulticastPkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of good packets received during this
                  sampling interval that were directed to a
                  multicast address.  Note that this number does not
                  include packets addressed to the broadcast address."
              ::= { etherHistoryEntry 8 }

          etherHistoryCRCAlignErrors OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of packets received during this
                  sampling interval that had a length (excluding
                  framing bits but including FCS octets) between
                  64 and 1518 octets, inclusive, but were not an
                  integral number of octets in length or had a
                  bad Frame Check Sequence (FCS)."
              ::= { etherHistoryEntry 9 }


          etherHistoryUndersizePkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of packets received during this
                  interval that were less than 64 octets long
                  (excluding framing bits but including FCS
                  octets) and were otherwise well formed."
              ::= { etherHistoryEntry 10 }

          etherHistoryOversizePkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of packets received during this
                  interval that were longer than 1518 octets
                  (excluding framing bits but including FCS
                  octets) but were otherwise well formed."
              ::= { etherHistoryEntry 11 }

          etherHistoryFragments OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The total number of packets received during this
                  sampling interval that were not an integral
                  number of octets in length or that
                  had a bad Frame Check Sequence (FCS), and
                  were less than 64 octets in length (excluding
                  framing bits but including FCS octets)."
              ::= { etherHistoryEntry 12 }

          etherHistoryJabbers OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of packets received during this
                  interval that were longer than 1518 octets
                  (excluding framing bits but including FCS octets),
                  and were not an integral number of octets in
                  length or had a bad Frame Check Sequence (FCS)."
              ::= { etherHistoryEntry 13 }


          etherHistoryCollisions OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The best estimate of the total number of collisions
                  on this Ethernet segment during this interval."
              ::= { etherHistoryEntry 14 }

          etherHistoryUtilization OBJECT-TYPE
              SYNTAX INTEGER (0..10000)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The best estimate of the mean physical layer
                  network utilization on this interface during this
                  interval, in hundredths of a percent."
              ::= { etherHistoryEntry 15 }

          -- The Alarm Group

          -- Implementation of the Alarm group is optional.
          --
          -- The Alarm Group requires the implementation of the Event
          -- group.
          --
          -- The Alarm group periodically takes statistical samples from
          -- variables in the probe and compares them to thresholds
          -- that have been configured.  The alarm table stores
          -- configuration entries that each define a variable,
          -- polling period, and threshold parameters.  If a sample is
          -- found to cross the threshold values, an event is
          -- generated.  Only variables that resolve to an ASN.1
          -- primitive type of INTEGER (INTEGER, Counter,
          -- Gauge, or TimeTicks) may be monitored in this way.
          --
          -- This function has a hysteresis mechanism to limit the
          -- generation of events.  This mechanism generates one event
          -- as a threshold is crossed in the appropriate direction.
          -- No more events are generated for that threshold until the
          -- opposite threshold is crossed.
          --
          -- In the case of a sampling a deltaValue, a probe may
          -- implement this mechanism with more precision if it takes
          -- a delta sample twice per period, each time comparing the
          -- sum of the latest two samples to the threshold.  This
          -- allows the detection of threshold crossings


          -- that span the sampling boundary.  Note that this does not
          -- require any special configuration of the threshold value.
          -- It is suggested that probes implement this more precise
          -- algorithm.

          alarmTable OBJECT-TYPE
              SYNTAX SEQUENCE OF AlarmEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of alarm entries."
              ::= { alarm 1 }

          alarmEntry OBJECT-TYPE
              SYNTAX AlarmEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of parameters that set up a periodic checking
                  for alarm conditions."
              INDEX { alarmIndex }
              ::= { alarmTable 1 }

          AlarmEntry ::= SEQUENCE {
              alarmIndex                    INTEGER (1..65535),
              alarmInterval                 INTEGER,
              alarmVariable                 OBJECT IDENTIFIER,
              alarmSampleType               INTEGER,
              alarmValue                    INTEGER,
              alarmStartupAlarm             INTEGER,
              alarmRisingThreshold          INTEGER,
              alarmFallingThreshold         INTEGER,
              alarmRisingEventIndex         INTEGER (1..65535),
              alarmFallingEventIndex        INTEGER (1..65535),
              alarmOwner                    OwnerString,
              alarmStatus                   INTEGER
          }

          alarmIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "An index that uniquely identifies an entry in the
                  alarm table.  Each such entry defines a
                  diagnostic sample at a particular interval
                  for an object on the device."
              ::= { alarmEntry 1 }


          alarmInterval OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The interval in seconds over which the data is
                  sampled and compared with the rising and falling
                  thresholds.  When setting this variable, care
                  should be given to ensure that the variable being
                  monitored will not exceed 2^31 - 1 and roll
                  over the alarmValue object during the interval.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
              ::= { alarmEntry 2 }

          alarmVariable OBJECT-TYPE
              SYNTAX OBJECT IDENTIFIER
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The object identifier of the particular variable to
                  be sampled.  Only variables that resolve to an ASN.1
                  primitive type of INTEGER (INTEGER, Counter, Gauge,
                  or TimeTicks) may be sampled.

                  Because SNMP access control is articulated entirely
                  in terms of the contents of MIB views, no access
                  control mechanism exists that can restrict the value of
                  this object to identify only those objects that exist
                  in a particular MIB view.  Because there is thus no
                  acceptable means of restricting the read access that
                  could be obtained through the alarm mechanism, the
                  probe must only grant write access to this object in
                  those views that have read access to all objects on
                  the probe.

                  During a set operation, if the supplied variable
                  name is not available in the selected MIB view, a
                  badValue error must be returned.  If at any time
                  the variable name of an established alarmEntry is
                  no longer available in the selected MIB view, the
                  probe must change the status of this alarmEntry
                  to invalid(4).

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
              ::= { alarmEntry 3 }


          alarmSampleType OBJECT-TYPE
              SYNTAX INTEGER {
                  absoluteValue(1),
                  deltaValue(2)
              }
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The method of sampling the selected variable and
                  calculating the value to be compared against the
                  thresholds.  If the value of this object is
                  absoluteValue(1), the value of the selected variable
                  will be compared directly with the thresholds at the
                  end of the sampling interval.  If the value of this
                  object is deltaValue(2), the value of the selected
                  variable at the last sample will be subtracted from
                  the current value, and the difference compared with
                  the thresholds.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
              ::= { alarmEntry 4 }

          alarmValue OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The value of the statistic during the last sampling
                  period.  The value during the current sampling period
                  is not made available until the period is completed."
              ::= { alarmEntry 5 }

          alarmStartupAlarm OBJECT-TYPE
              SYNTAX INTEGER {
                  risingAlarm(1),
                  fallingAlarm(2),
                  risingOrFallingAlarm(3)
              }
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The alarm that may be sent when this entry is first
                  set to valid.  If the first sample after this entry
                  becomes valid is greater than or equal to the
                  risingThreshold and alarmStartupAlarm is equal to
                  risingAlarm(1) or risingOrFallingAlarm(3), then a
                  single rising alarm will be generated.  If the first


                  sample after this entry becomes valid is less than
                  or equal to the fallingThreshold and
                  alarmStartupAlarm is equal to fallingAlarm(2) or
                  risingOrFallingAlarm(3), then a single falling
                  alarm will be generated.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
              ::= { alarmEntry 6 }

          alarmRisingThreshold OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "A threshold for the sampled statistic.  When the
                  current sampled value is greater than or equal to
                  this threshold, and the value at the last sampling
                  interval was less than this threshold, a single
                  event will be generated.
                  A single event will also be generated if the first
                  sample after this entry becomes valid is greater
                  than or equal to this threshold and the associated
                  alarmStartupAlarm is equal to risingAlarm(1) or
                  risingOrFallingAlarm(3).

                  After a rising event is generated, another such event
                  will not be generated until the sampled value
                  falls below this threshold and reaches the
                  alarmFallingThreshold.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
              ::= { alarmEntry 7 }

          alarmFallingThreshold OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "A threshold for the sampled statistic.  When the
                  current sampled value is less than or equal to
                  this threshold, and the value at the last sampling
                  interval was greater than this threshold, a single
                  event will be generated.
                  A single event will also be generated if the first
                  sample after this entry becomes valid is less than or
                  equal to this threshold and the associated


                  alarmStartupAlarm is equal to fallingAlarm(2) or
                  risingOrFallingAlarm(3).

                  After a falling event is generated, another such event
                  will not be generated until the sampled value
                  rises above this threshold and reaches the
                  alarmRisingThreshold.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
              ::= { alarmEntry 8 }

          alarmRisingEventIndex OBJECT-TYPE
              SYNTAX INTEGER (0..65535)
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The index of the eventEntry that is
                  used when a rising threshold is crossed.  The
                  eventEntry identified by a particular value of
                  this index is the same as identified by the same value
                  of the eventIndex object.  If there is no
                  corresponding entry in the eventTable, then
                  no association exists.  In particular, if this value
                  is zero, no associated event will be generated, as
                  zero is not a valid event index.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
              ::= { alarmEntry 9 }

          alarmFallingEventIndex OBJECT-TYPE
              SYNTAX INTEGER (0..65535)
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The index of the eventEntry that is
                  used when a falling threshold is crossed.  The
                  eventEntry identified by a particular value of
                  this index is the same as identified by the same value
                  of the eventIndex object.  If there is no
                  corresponding entry in the eventTable, then
                  no association exists.  In particular, if this value
                  is zero, no associated event will be generated, as
                  zero is not a valid event index.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."


              ::= { alarmEntry 10 }

          alarmOwner OBJECT-TYPE
              SYNTAX OwnerString
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The entity that configured this entry and is
                  therefore using the resources assigned to it."
              ::= { alarmEntry 11 }

          alarmStatus OBJECT-TYPE
              SYNTAX EntryStatus
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The status of this alarm entry."
              ::= { alarmEntry 12 }

          -- The Host Group

          -- Implementation of the Host group is optional.
          --
          -- The host group discovers new hosts on the network by
          -- keeping a list of source and destination MAC Addresses seen
          -- in good packets.  For each of these addresses, the host
          -- group keeps a set of statistics.  The hostControlTable
          -- controls which interfaces this function is performed on,
          -- and contains some information about the process.  On
          -- behalf of each hostControlEntry, data is collected on an
          -- interface and placed both the hostTable and the
          -- hostTimeTable.  If the monitoring device finds itself
          -- short of resources, it may delete entries as needed.  It
          -- is suggested that the device delete the least recently
          -- used entries first.

          -- The hostTable contains entries for each address
          -- discovered on a particular interface.  Each entry
          -- contains statistical data about that host.  This table
          -- is indexed by the MAC address of the host, through
          -- which a random access may be achieved.

          -- The hostTimeTable contains data in the same format as the
          -- hostTable, and must contain the same set of hosts, but is
          -- indexed using hostTimeCreationOrder rather than hostAddress.
          -- The hostTimeCreationOrder is an integer which reflects
          -- the relative order in which a particular entry was


          -- discovered and thus inserted into the table.  As this
          -- order, and thus index, is among those entries currently
          -- in the table, the index for a particular entry may change
          -- if an (earlier) entry is deleted.  Thus the association
          -- between hostTimeCreationOrder and hostTimeEntry may be
          -- broken at any time.

          -- The hostTimeTable has two important uses.  The first is the
          -- fast download of this potentially large table.  Because the
          -- index of this table runs from 1 to the size of the table,
          -- inclusive, its values are predictable.  This allows very
          -- efficient packing of variables into SNMP PDU's and allows
          -- a table transfer to have multiple packets outstanding.
          -- These benefits increase transfer rates tremendously.

          -- The second use of the hostTimeTable is the efficient
          -- discovery by the management station of new entries added
          -- to the table.  After the management station has
          -- downloaded the entire table, it knows that new entries
          -- will be added immediately after the end of the current
          -- table.  It can thus detect new entries there
          -- and retrieve them easily.

          -- Because the association between hostTimeCreationOrder and
          -- hostTimeEntry may be broken at any time, the management
          -- station must monitor the related hostControlLastDeleteTime
          -- object.  When the management station thus detects a deletion,
          -- it must assume that any such associations have been broken,
          -- and invalidate any it has stored locally.  This includes
          -- restarting any download of the hostTimeTable that may have
          -- been in progress, as well as rediscovering the end of the
          -- hostTimeTable so that it may detect new entries.  If the
          -- management station does not detect the broken association,
          -- it may continue to refer to a particular host by its
          -- creationOrder while unwittingly retrieving the data
          -- associated with another host entirely.  If this happens
          -- while downloading the host table, the management station
          -- may fail to download all of the entries in the table.

          hostControlTable OBJECT-TYPE
              SYNTAX SEQUENCE OF HostControlEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of host table control entries."
              ::= { hosts 1 }


          hostControlEntry OBJECT-TYPE
              SYNTAX HostControlEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of parameters that set up the discovery of
                  hosts on a particular interface and the collection
                  of statistics about these hosts."
              INDEX { hostControlIndex }
              ::= { hostControlTable 1 }

          HostControlEntry ::= SEQUENCE {
              hostControlIndex            INTEGER (1..65535),
              hostControlDataSource       OBJECT IDENTIFIER,
              hostControlTableSize        INTEGER,
              hostControlLastDeleteTime   TimeTicks,
              hostControlOwner            OwnerString,
              hostControlStatus           INTEGER
          }

          hostControlIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "An index that uniquely identifies an entry in the
                  hostControl table.  Each such entry defines
                  a function that discovers hosts on a particular
                  interface and places statistics about them in the
                  hostTable and the hostTimeTable on behalf of this
                  hostControlEntry."
              ::= { hostControlEntry 1 }

          hostControlDataSource OBJECT-TYPE
              SYNTAX OBJECT IDENTIFIER
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "This object identifies the source of the data for
                  this instance of the host function.  This source
                  can be any interface on this device.  In order
                  to identify a particular interface, this object shall
                  identify the instance of the ifIndex object, defined
                  in [4,6], for the desired interface.  For example,
                  if an entry were to receive data from interface #1,
                  this object would be set to ifIndex.1.

                  The statistics in this group reflect all packets


                  on the local network segment attached to the
                  identified interface.

                  This object may not be modified if the associated
                  hostControlStatus object is equal to valid(1)."
              ::= { hostControlEntry 2 }

          hostControlTableSize OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of hostEntries in the hostTable and the
                  hostTimeTable associated with this hostControlEntry."
              ::= { hostControlEntry 3 }

          hostControlLastDeleteTime OBJECT-TYPE
              SYNTAX TimeTicks
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The value of sysUpTime when the last entry
                  was deleted from the portion of the hostTable
                  associated with this hostControlEntry.  If no
                  deletions have occurred, this value shall be zero."
              ::= { hostControlEntry 4 }

          hostControlOwner OBJECT-TYPE
              SYNTAX OwnerString
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The entity that configured this entry and is
                  therefore using the resources assigned to it."
              ::= { hostControlEntry 5 }

          hostControlStatus OBJECT-TYPE
              SYNTAX EntryStatus
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The status of this hostControl entry.

                  If this object is not equal to valid(1), all
                  associated entries in the hostTable,
                  hostTimeTable, and the hostTopNTable shall be
                  deleted by the agent."
              ::= { hostControlEntry 6 }


          hostTable OBJECT-TYPE
              SYNTAX SEQUENCE OF HostEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of host entries."
              ::= { hosts 2 }

          hostEntry OBJECT-TYPE
              SYNTAX HostEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A collection of statistics for a particular host
                  that has been discovered on an interface of this
                  device."
              INDEX { hostIndex, hostAddress }
              ::= { hostTable 1 }

          HostEntry ::= SEQUENCE {
              hostAddress             OCTET STRING,
              hostCreationOrder       INTEGER (1..65535),
              hostIndex               INTEGER (1..65535),
              hostInPkts              Counter,
              hostOutPkts             Counter,
              hostInOctets            Counter,
              hostOutOctets           Counter,
              hostOutErrors           Counter,
              hostOutBroadcastPkts    Counter,
              hostOutMulticastPkts    Counter
          }

          hostAddress OBJECT-TYPE
              SYNTAX OCTET STRING
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The physical address of this host."
              ::= { hostEntry 1 }

          hostCreationOrder OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "An index that defines the relative ordering of
                  the creation time of hosts captured for a
                  particular hostControlEntry.  This index shall


                  be between 1 and N, where N is the value of
                  the associated hostControlTableSize.  The ordering
                  of the indexes is based on the order of each entry's
                  insertion into the table, in which entries added
                  earlier have a lower index value than entries added
                  later.

                  It is important to note that the order for a
                  particular entry may change as an (earlier) entry
                  is deleted from the table.  Because this order may
                  change, management stations should make use of the
                  hostControlLastDeleteTime variable in the
                  hostControlEntry associated with the relevant
                  portion of the hostTable.  By observing
                  this variable, the management station may detect
                  the circumstances where a previous association
                  between a value of hostCreationOrder
                  and a hostEntry may no longer hold."
              ::= { hostEntry 2 }

          hostIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The set of collected host statistics of which
                  this entry is a part.  The set of hosts
                  identified by a particular value of this
                  index is associated with the hostControlEntry
                  as identified by the same value of hostControlIndex."
              ::= { hostEntry 3 }

          hostInPkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of packets without errors transmitted to
                  this address since it was added to the hostTable."
              ::= { hostEntry 4 }

          hostOutPkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of packets including errors transmitted
                  by this address since it was added to the hostTable."


              ::= { hostEntry 5 }

          hostInOctets OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of octets transmitted to this address
                  since it was added to the hostTable (excluding
                  framing bits but including FCS octets), except for
                  those octets in packets that contained errors."
              ::= { hostEntry 6 }

          hostOutOctets OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of octets transmitted by this address
                  since it was added to the hostTable (excluding
                  framing bits but including FCS octets), including
                  those octets in packets that contained errors."
              ::= { hostEntry 7 }

          hostOutErrors OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of error packets transmitted by this
                  address since this host was added to the hostTable."
              ::= { hostEntry 8 }

          hostOutBroadcastPkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of good packets transmitted by this
                  address that were directed to the broadcast address
                  since this host was added to the hostTable."
              ::= { hostEntry 9 }

          hostOutMulticastPkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION


                  "The number of good packets transmitted by this
                  address that were directed to a multicast address
                  since this host was added to the hostTable.
                  Note that this number does not include packets
                  directed to the broadcast address."
              ::= { hostEntry 10 }

          -- host Time Table

          hostTimeTable OBJECT-TYPE
              SYNTAX SEQUENCE OF HostTimeEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of time-ordered host table entries."
              ::= { hosts 3 }

          hostTimeEntry OBJECT-TYPE
              SYNTAX HostTimeEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A collection of statistics for a particular host
                  that has been discovered on an interface of this
                  device.  This collection includes the relative
                  ordering of the creation time of this object."
              INDEX { hostTimeIndex, hostTimeCreationOrder }
              ::= { hostTimeTable 1 }

          HostTimeEntry ::= SEQUENCE {
              hostTimeAddress              OCTET STRING,
              hostTimeCreationOrder        INTEGER (1..65535),
              hostTimeIndex                INTEGER (1..65535),
              hostTimeInPkts               Counter,
              hostTimeOutPkts              Counter,
              hostTimeInOctets             Counter,
              hostTimeOutOctets            Counter,
              hostTimeOutErrors            Counter,
              hostTimeOutBroadcastPkts     Counter,
              hostTimeOutMulticastPkts     Counter
          }

          hostTimeAddress OBJECT-TYPE
              SYNTAX OCTET STRING
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION


                  "The physical address of this host."
              ::= { hostTimeEntry 1 }

          hostTimeCreationOrder OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "An index that uniquely identifies an entry in
                  the hostTime table among those entries associated
                  with the same hostControlEntry.  This index shall
                  be between 1 and N, where N is the value of
                  the associated hostControlTableSize.  The ordering
                  of the indexes is based on the order of each entry's
                  insertion into the table, in which entries added
                  earlier have a lower index value than entries added
                  later.  Thus the management station has the ability
                  to learn of new entries added to this table without
                  downloading the entire table.

                  It is important to note that the index for a
                  particular entry may change as an (earlier) entry
                  is deleted from the table.  Because this order may
                  change, management stations should make use of the
                  hostControlLastDeleteTime variable in the
                  hostControlEntry associated with the relevant
                  portion of the hostTimeTable.  By observing
                  this variable, the management station may detect
                  the circumstances where a download of the table
                  may have missed entries, and where a previous
                  association between a value of hostTimeCreationOrder
                  and a hostTimeEntry may no longer hold."
              ::= { hostTimeEntry 2 }

          hostTimeIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The set of collected host statistics of which
                  this entry is a part.  The set of hosts
                  identified by a particular value of this
                  index is associated with the hostControlEntry
                  as identified by the same value of hostControlIndex."
              ::= { hostTimeEntry 3 }


          hostTimeInPkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of packets without errors transmitted to
                  this address since it was added to the hostTimeTable."
              ::= { hostTimeEntry 4 }

          hostTimeOutPkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of packets including errors transmitted
                  by this address since it was added to the
                  hostTimeTable."
              ::= { hostTimeEntry 5 }

          hostTimeInOctets OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of octets transmitted to this address
                  since it was added to the hostTimeTable (excluding
                  framing bits but including FCS octets), except for
                  those octets in packets that contained errors."
              ::= { hostTimeEntry 6 }

          hostTimeOutOctets OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of octets transmitted by this address since
                  it was added to the hostTimeTable (excluding framing
                  bits but including FCS octets), including those
                  octets in packets that contained errors."
              ::= { hostTimeEntry 7 }

          hostTimeOutErrors OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of error packets transmitted by this
                  address since this host was added to the


                  hostTimeTable."
              ::= { hostTimeEntry 8 }

          hostTimeOutBroadcastPkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of good packets transmitted by this
                  address that were directed to the broadcast address
                  since this host was added to the hostTimeTable."
              ::= { hostTimeEntry 9 }

          hostTimeOutMulticastPkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of good packets transmitted by this
                  address that were directed to a multicast address
                  since this host was added to the hostTimeTable.
                  Note that this number does not include packets
                  directed to the broadcast address."
              ::= { hostTimeEntry 10 }

          -- The Host Top "N" Group

          -- Implementation of the Host Top N group is optional.
          --
          -- The Host Top N group requires the implementation of the
          -- host group.
          --
          -- The Host Top N group is used to prepare reports that
          -- describe the hosts that top a list ordered by one of
          -- their statistics.  The available statistics are samples
          -- of one of their base statistics, over an interval
          -- specified by the management station.  Thus, these
          -- statistics are rate based.  The management
          -- station also selects how many such hosts are reported.

          -- The hostTopNControlTable is used to initiate the generation
          -- of such a report.  The management station may select the
          -- parameters of such a report, such as which interface,
          -- which statistic, how many hosts, and the start and stop
          -- times of the sampling.  When the report is prepared,
          -- entries are created in the hostTopNTable associated with
          -- the relevant hostTopNControlEntry.  These entries are


          -- static for each report after it has been prepared.

          hostTopNControlTable OBJECT-TYPE
              SYNTAX SEQUENCE OF HostTopNControlEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of top N host control entries."
              ::= { hostTopN 1 }

          hostTopNControlEntry OBJECT-TYPE
              SYNTAX HostTopNControlEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A set of parameters that control the creation of a
                  report of the top N hosts according to several
                  metrics."
              INDEX { hostTopNControlIndex }
              ::= { hostTopNControlTable 1 }

          HostTopNControlEntry ::= SEQUENCE {
              hostTopNControlIndex    INTEGER (1..65535),
              hostTopNHostIndex       INTEGER (1..65535),
              hostTopNRateBase        INTEGER,
              hostTopNTimeRemaining   INTEGER,
              hostTopNDuration        INTEGER,
              hostTopNRequestedSize   INTEGER,
              hostTopNGrantedSize     INTEGER,
              hostTopNStartTime       TimeTicks,
              hostTopNOwner           OwnerString,
              hostTopNStatus          INTEGER
          }

          hostTopNControlIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "An index that uniquely identifies an entry
                  in the hostTopNControl table.  Each such
                  entry defines one top N report prepared for
                  one interface."
              ::= { hostTopNControlEntry 1 }

          hostTopNHostIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-write


              STATUS mandatory
              DESCRIPTION
                  "The host table for which a top N report will be
                  prepared on behalf of this entry.  The host table
                  identified by a particular value of this index is
                  associated with the same host table as identified
                  by the same value of hostIndex.

                  This object may not be modified if the associated
                  hostTopNStatus object is equal to valid(1)."
              ::= { hostTopNControlEntry 2 }

          hostTopNRateBase OBJECT-TYPE
              SYNTAX INTEGER {
                      hostTopNInPkts(1),
                      hostTopNOutPkts(2),
                      hostTopNInOctets(3),
                      hostTopNOutOctets(4),
                      hostTopNOutErrors(5),
                      hostTopNOutBroadcastPkts(6),
                      hostTopNOutMulticastPkts(7)
              }
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The variable for each host that the hostTopNRate
                  variable is based upon.

                  This object may not be modified if the associated
                  hostTopNStatus object is equal to valid(1)."
              ::= { hostTopNControlEntry 3 }

          hostTopNTimeRemaining OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The number of seconds left in the report currently
                  being collected.  When this object is modified by
                  the management station, a new collection is started,
                  possibly aborting a currently running report.  The
                  new value is used as the requested duration of this
                  report, which is loaded into the associated
                  hostTopNDuration object.

                  When this object is set to a non-zero value, any
                  associated hostTopNEntries shall be made
                  inaccessible by the monitor.  While the value of this


                  object is non-zero, it decrements by one per second
                  until it reaches zero.  During this time, all
                  associated hostTopNEntries shall remain
                  inaccessible.  At the time that this object
                  decrements to zero, the report is made
                  accessible in the hostTopNTable.  Thus, the hostTopN
                  table needs to be created only at the end of the
                  collection interval."
              DEFVAL { 0 }
              ::= { hostTopNControlEntry 4 }

          hostTopNDuration OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of seconds that this report has collected
                  during the last sampling interval, or if this
                  report is currently being collected, the number
                  of seconds that this report is being collected
                  during this sampling interval.

                  When the associated hostTopNTimeRemaining object is
                  set, this object shall be set by the probe to the
                  same value and shall not be modified until the next
                  time the hostTopNTimeRemaining is set.

                  This value shall be zero if no reports have been
                  requested for this hostTopNControlEntry."
              DEFVAL { 0 }
              ::= { hostTopNControlEntry 5 }

          hostTopNRequestedSize OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The maximum number of hosts requested for the top N
                  table.

                  When this object is created or modified, the probe
                  should set hostTopNGrantedSize as closely to this
                  object as is possible for the particular probe
                  implementation and available resources."
              DEFVAL { 10 }
              ::= { hostTopNControlEntry 6 }


          hostTopNGrantedSize OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The maximum number of hosts in the top N table.

                  When the associated hostTopNRequestedSize object is
                  created or modified, the probe should set this
                  object as closely to the requested value as is
                  possible for the particular implementation and
                  available resources. The probe must not lower this
                  value except as a result of a set to the associated
                  hostTopNRequestedSize object.

                  Hosts with the highest value of hostTopNRate shall be
                  placed in this table in decreasing order of this rate
                  until there is no more room or until there are no more
                  hosts."
              ::= { hostTopNControlEntry 7 }

          hostTopNStartTime OBJECT-TYPE
              SYNTAX TimeTicks
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The value of sysUpTime when this top N report was
                  last started.  In other words, this is the time that
                  the associated hostTopNTimeRemaining object was
                  modified to start the requested report."
              ::= { hostTopNControlEntry 8 }

          hostTopNOwner OBJECT-TYPE
              SYNTAX OwnerString
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The entity that configured this entry and is
                  therefore using the resources assigned to it."
              ::= { hostTopNControlEntry 9 }

          hostTopNStatus OBJECT-TYPE
              SYNTAX EntryStatus
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The status of this hostTopNControl entry.


                  If this object is not equal to valid(1), all
                  associated hostTopNEntries shall be deleted by
                  the agent."
              ::= { hostTopNControlEntry 10 }

          hostTopNTable OBJECT-TYPE
              SYNTAX SEQUENCE OF HostTopNEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of top N host entries."
              ::= { hostTopN 2 }

          hostTopNEntry OBJECT-TYPE
              SYNTAX HostTopNEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A set of statistics for a host that is part of a
                  top N report."
              INDEX { hostTopNReport, hostTopNIndex }
              ::= { hostTopNTable 1 }

          HostTopNEntry ::= SEQUENCE {
              hostTopNReport                INTEGER (1..65535),
              hostTopNIndex                 INTEGER (1..65535),
              hostTopNAddress               OCTET STRING,
              hostTopNRate                  INTEGER
          }

          hostTopNReport OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "This object identifies the top N report of which
                  this entry is a part.  The set of hosts
                  identified by a particular value of this
                  object is part of the same report as identified
                  by the same value of the hostTopNControlIndex object."
              ::= { hostTopNEntry 1 }

          hostTopNIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "An index that uniquely identifies an entry in


                  the hostTopN table among those in the same report.
                  This index is between 1 and N, where N is the
                  number of entries in this table.  Increasing values
                  of hostTopNIndex shall be assigned to entries with
                  decreasing values of hostTopNRate until index N
                  is assigned to the entry with the lowest value of
                  hostTopNRate or there are no more hostTopNEntries."
              ::= { hostTopNEntry 2 }

          hostTopNAddress OBJECT-TYPE
              SYNTAX OCTET STRING
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The physical address of this host."
              ::= { hostTopNEntry 3 }

          hostTopNRate OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The amount of change in the selected variable
                  during this sampling interval.  The selected
                  variable is this host's instance of the object
                  selected by hostTopNRateBase."
              ::= { hostTopNEntry 4 }

          -- The Matrix Group

          -- Implementation of the Matrix group is optional.
          --
          -- The Matrix group consists of the matrixControlTable,
          -- matrixSDTable and the matrixDSTable.  These tables
          -- store statistics for a particular conversation between
          -- two addresses.  As the device detects a new conversation,
          -- including those to a non-unicast address, it creates a
          -- new entry in both of the matrix tables.
          -- It must only create new entries based on information
          -- received in good packets.  If the monitoring device finds
          -- itself short of resources, it may delete entries as needed.
          -- It is suggested that the device delete the least recently
          -- used entries first.

          matrixControlTable OBJECT-TYPE
              SYNTAX SEQUENCE OF MatrixControlEntry
              ACCESS not-accessible


              STATUS mandatory
              DESCRIPTION
                  "A list of information entries for the
                  traffic matrix on each interface."
              ::= { matrix 1 }

          matrixControlEntry OBJECT-TYPE
              SYNTAX MatrixControlEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "Information about a traffic matrix on a
                  particular interface."
              INDEX { matrixControlIndex }
              ::= { matrixControlTable 1 }

          MatrixControlEntry ::= SEQUENCE {
              matrixControlIndex           INTEGER (1..65535),
              matrixControlDataSource      OBJECT IDENTIFIER,
              matrixControlTableSize       INTEGER,
              matrixControlLastDeleteTime  TimeTicks,
              matrixControlOwner           OwnerString,
              matrixControlStatus          INTEGER
          }

          matrixControlIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "An index that uniquely identifies an entry in the
                  matrixControl table.  Each such entry defines
                  a function that discovers conversations on a particular
                  interface and places statistics about them in the
                  matrixSDTable and the matrixDSTable on behalf of this
                  matrixControlEntry."
              ::= { matrixControlEntry 1 }

          matrixControlDataSource OBJECT-TYPE
              SYNTAX OBJECT IDENTIFIER
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "This object identifies the source of
                  the data from which this entry creates a traffic matrix.
                  This source can be any interface on this device.  In
                  order to identify a particular interface, this object
                  shall identify the instance of the ifIndex object,


                  defined in [4,6], for the desired interface.  For
                  example, if an entry were to receive data from
                  interface #1, this object would be set to ifIndex.1.

                  The statistics in this group reflect all packets
                  on the local network segment attached to the
                  identified interface.

                  This object may not be modified if the associated
                  matrixControlStatus object is equal to valid(1)."
              ::= { matrixControlEntry 2 }

          matrixControlTableSize OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of matrixSDEntries in the matrixSDTable
                  for this interface.  This must also be the value of
                  the number of entries in the matrixDSTable for this
                  interface."
              ::= { matrixControlEntry 3 }

          matrixControlLastDeleteTime OBJECT-TYPE
              SYNTAX TimeTicks
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The value of sysUpTime when the last entry
                  was deleted from the portion of the matrixSDTable
                  or matrixDSTable associated with this
                  matrixControlEntry.
                  If no deletions have occurred, this value shall be
                  zero."
              ::= { matrixControlEntry 4 }

          matrixControlOwner OBJECT-TYPE
              SYNTAX OwnerString
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The entity that configured this entry and is
                  therefore using the resources assigned to it."
              ::= { matrixControlEntry 5 }

          matrixControlStatus OBJECT-TYPE
              SYNTAX EntryStatus
              ACCESS read-write


              STATUS mandatory
              DESCRIPTION
                  "The status of this matrixControl entry.

                  If this object is not equal to valid(1), all
                  associated entries in the matrixSDTable and the
                  matrixDSTable shall be deleted by the agent."
              ::= { matrixControlEntry 6 }

          matrixSDTable OBJECT-TYPE
              SYNTAX SEQUENCE OF MatrixSDEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of traffic matrix entries indexed by
                  source and destination MAC address."
              ::= { matrix 2 }

          matrixSDEntry OBJECT-TYPE
              SYNTAX MatrixSDEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A collection of statistics for communications between
                  two addresses on a particular interface."
              INDEX { matrixSDIndex,
                      matrixSDSourceAddress, matrixSDDestAddress }
              ::= { matrixSDTable 1 }

          MatrixSDEntry ::= SEQUENCE {
              matrixSDSourceAddress       OCTET STRING,
              matrixSDDestAddress         OCTET STRING,
              matrixSDIndex               INTEGER (1..65535),
              matrixSDPkts                Counter,
              matrixSDOctets              Counter,
              matrixSDErrors              Counter
          }

          matrixSDSourceAddress OBJECT-TYPE
              SYNTAX OCTET STRING
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The source physical address."
              ::= { matrixSDEntry 1 }


          matrixSDDestAddress OBJECT-TYPE
              SYNTAX OCTET STRING
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The destination physical address."
              ::= { matrixSDEntry 2 }

          matrixSDIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The set of collected matrix statistics of which
                  this entry is a part.  The set of matrix statistics
                  identified by a particular value of this index
                  is associated with the same matrixControlEntry
                  as identified by the same value of matrixControlIndex."
              ::= { matrixSDEntry 3 }

          matrixSDPkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of packets transmitted from the source
                  address to the destination address (this number
                  includes error packets)."
              ::= { matrixSDEntry 4 }

          matrixSDOctets OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of octets (excluding framing bits but
                  including FCS octets) contained in all packets
                  transmitted from the source address to the
                  destination address."
              ::= { matrixSDEntry 5 }

          matrixSDErrors OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of error packets transmitted from
                  the source address to the destination address."


              ::= { matrixSDEntry 6 }

          -- Traffic matrix tables from destination to source

          matrixDSTable OBJECT-TYPE
              SYNTAX SEQUENCE OF MatrixDSEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of traffic matrix entries indexed by
                  destination and source MAC address."
              ::= { matrix 3 }

          matrixDSEntry OBJECT-TYPE
              SYNTAX MatrixDSEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A collection of statistics for communications between
                  two address on a particular interface."
              INDEX { matrixDSIndex,
                      matrixDSDestAddress, matrixDSSourceAddress }
              ::= { matrixDSTable 1 }

          MatrixDSEntry ::= SEQUENCE {
              matrixDSSourceAddress       OCTET STRING,
              matrixDSDestAddress         OCTET STRING,
              matrixDSIndex               INTEGER (1..65535),
              matrixDSPkts                Counter,
              matrixDSOctets              Counter,
              matrixDSErrors              Counter
          }

          matrixDSSourceAddress OBJECT-TYPE
              SYNTAX OCTET STRING
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The source physical address."
              ::= { matrixDSEntry 1 }

          matrixDSDestAddress OBJECT-TYPE
              SYNTAX OCTET STRING
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The destination physical address."


              ::= { matrixDSEntry 2 }

          matrixDSIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The set of collected matrix statistics of which
                  this entry is a part.  The set of matrix statistics
                  identified by a particular value of this index
                  is associated with the same matrixControlEntry
                  as identified by the same value of matrixControlIndex."
              ::= { matrixDSEntry 3 }

          matrixDSPkts OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of packets transmitted from the source
                  address to the destination address (this number
                  includes error packets)."
              ::= { matrixDSEntry 4 }

          matrixDSOctets OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of octets (excluding framing bits
                  but including FCS octets) contained in all packets
                  transmitted from the source address to the
                  destination address."
              ::= { matrixDSEntry 5 }

          matrixDSErrors OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of error packets transmitted from
                  the source address to the destination address."
              ::= { matrixDSEntry 6 }

          -- The Filter Group

          -- Implementation of the Filter group is optional.


          --
          -- The Filter group allows packets to be captured with an
          -- arbitrary filter expression.  A logical data and
          -- event stream or "channel" is formed by the packets
          -- that match the filter expression.
          --
          -- This filter mechanism allows the creation of an arbitrary
          -- logical expression with which to filter packets.  Each
          -- filter associated with a channel is OR'ed with the others.
          -- Within a filter, any bits checked in the data and status are
          -- AND'ed with respect to other bits in the same filter.  The
          -- NotMask also allows for checking for inequality.  Finally,
          -- the channelAcceptType object allows for inversion of the
          -- whole equation.
          --
          -- The channel can be turned on or off, and can also
          -- generate events when packets pass through it.

          filterTable OBJECT-TYPE
              SYNTAX SEQUENCE OF FilterEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of packet filter entries."
              ::= { filter 1 }

          filterEntry OBJECT-TYPE
              SYNTAX FilterEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A set of parameters for a packet filter applied on a
                  particular interface."
              INDEX { filterIndex }
              ::= { filterTable 1 }

          FilterEntry ::= SEQUENCE {
              filterIndex                 INTEGER (1..65535),
              filterChannelIndex          INTEGER (1..65535),
              filterPktDataOffset         INTEGER,
              filterPktData               OCTET STRING,
              filterPktDataMask           OCTET STRING,
              filterPktDataNotMask        OCTET STRING,
              filterPktStatus             INTEGER,
              filterPktStatusMask         INTEGER,
              filterPktStatusNotMask      INTEGER,
              filterOwner                 OwnerString,
              filterStatus                INTEGER


          }

          filterIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "An index that uniquely identifies an entry
                  in the filter table.  Each such entry defines
                  one filter that is to be applied to every packet
                  received on an interface."
              ::= { filterEntry 1 }

          filterChannelIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "This object identifies the channel of which this
                  filter is a part.  The filters identified by a
                  particular value of this object are associated
                  with the same channel as identified by the same
                  value of the channelIndex object."
              ::= { filterEntry 2 }

          filterPktDataOffset OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The offset from the beginning of each packet where
                  a match of packet data will be attempted.  This offset
                  is measured from the point in the physical layer
                  packet after the framing bits, if any.  For example,
                  in an Ethernet frame, this point is at the beginning
                  of the destination MAC address.

                  This object may not be modified if the associated
                  filterStatus object is equal to valid(1)."
              DEFVAL { 0 }
              ::= { filterEntry 3 }

          filterPktData OBJECT-TYPE
              SYNTAX OCTET STRING
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The data that is to be matched with the input packet.


                  For each packet received, this filter and the
                  accompanying filterPktDataMask and
                  filterPktDataNotMask will be adjusted for the
                  offset.  The only bits relevant to this
                  match algorithm are those that have the corresponding
                  filterPktDataMask bit equal to one.  The following
                  three rules are then applied to every packet:

                  (1) If the packet is too short and does not have data
                      corresponding to part of the filterPktData, the
                      packet will fail this data match.

                  (2) For each relevant bit from the packet with the
                      corresponding filterPktDataNotMask bit set to
                      zero, if the bit from the packet is not equal to
                      the corresponding bit from the filterPktData,
                      then the packet will fail this data match.

                  (3) If for every relevant bit from the packet with the
                      corresponding filterPktDataNotMask bit set to one,
                      the bit from the packet is equal to the
                      corresponding bit from the filterPktData, then
                      the packet will fail this data match.

                  Any packets that have not failed any of the three
                  matches above have passed this data match.

                  This object may not be modified if the associated
                  filterStatus object is equal to valid(1)."
              ::= { filterEntry 4 }

          filterPktDataMask OBJECT-TYPE
              SYNTAX OCTET STRING
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The mask that is applied to the match process.
                  After adjusting this mask for the offset, only those
                  bits in the received packet that correspond to bits
                  set in this mask are relevant for further processing
                  by the match algorithm.  The offset is applied to
                  filterPktDataMask in the same way it is applied to
                  the filter.  For the purposes of the matching
                  algorithm, if the associated filterPktData object
                  is longer than this mask, this mask is conceptually
                  extended with '1' bits until it reaches the
                  length of the filterPktData object.


                  This object may not be modified if the associated
                  filterStatus object is equal to valid(1)."
              ::= { filterEntry 5 }

          filterPktDataNotMask OBJECT-TYPE
              SYNTAX OCTET STRING
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The inversion mask that is applied to the match
                  process.  After adjusting this mask for the offset,
                  those relevant bits in the received packet that
                  correspond to bits cleared in this mask must all
                  be equal to their corresponding bits in the
                  filterPktData object for the packet to be accepted.
                  In addition, at least one of those relevant
                  bits in the received packet that correspond to bits
                  set in this mask must be different to its
                  corresponding bit in the filterPktData object.

                  For the purposes of the matching algorithm, if
                  the associated filterPktData object is longer than
                  this mask, this mask is conceptually extended with
                  '0' bits until it reaches the length of the
                  filterPktData object.

                  This object may not be modified if the associated
                  filterStatus object is equal to valid(1)."
              ::= { filterEntry 6 }

          filterPktStatus OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The status that is to be matched with the input
                  packet.  The only bits relevant to this match
                  algorithm are those that have the corresponding
                  filterPktStatusMask bit equal to one.

                  The following two rules are then applied to every
                  packet:

                  (1) For each relevant bit from the packet status
                      with the corresponding filterPktStatusNotMask
                      bit set to zero, if the bit from the packet
                      status is not equal to the corresponding bit
                      from the filterPktStatus, then the packet will


                      fail this status match.

                  (2) If for every relevant bit from the packet status
                      with the corresponding filterPktStatusNotMask
                      bit set to one, the bit from the packet status
                      is equal to the corresponding bit from the
                      filterPktStatus, then the packet will fail
                      this status match.

                  Any packets that have not failed either of the two
                  matches above have passed this status match.

                  The value of the packet status is a sum.  This sum
                  initially takes the value zero.  Then, for each
                  error, E, that has been discovered in this packet,
                  2 raised to a value representing E is added to the sum.
                  The errors and the bits that represent them are
                  dependent on the media type of the interface that
                  this channel is receiving packets from.

                  The errors defined for a packet captured off of an
                  Ethernet interface are as follows:

                      bit #    Error
                          0    Packet is longer than 1518 octets
                          1    Packet is shorter than 64 octets
                          2    Packet experienced a CRC or Alignment
                               error

                  For example, an Ethernet fragment would have a
                  value of 6 (2^1 + 2^2).

                  As this MIB is expanded to new media types, this
                  object will have other media-specific errors defined.

                  For the purposes of this status matching algorithm, if
                  the packet status is longer than this
                  object, filterPktStatus this object is conceptually
                  extended with '0' bits until it reaches the size of
                  the packet status.

                  This object may not be modified if the associated
                  filterStatus object is equal to valid(1)."
              ::= { filterEntry 7 }

          filterPktStatusMask OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-write


              STATUS mandatory
              DESCRIPTION
                  "The mask that is applied to the status match process.
                  Only those bits in the received packet that correspond
                  to bits set in this mask are relevant for further
                  processing by the status match algorithm.  For the
                  purposes of the matching algorithm, if the
                  associated filterPktStatus object is longer than
                  this mask, this mask is conceptually extended with
                  '1' bits until it reaches the size of the
                  filterPktStatus.  In addition, if a packet status is
                  longer than this mask, this mask is conceptually
                  extended with '0' bits until it reaches the size of
                  the packet status.

                  This object may not be modified if the associated
                  filterStatus object is equal to valid(1)."
              ::= { filterEntry 8 }

          filterPktStatusNotMask OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The inversion mask that is applied to the status match
                  process.  Those relevant bits in the received packet
                  status that correspond to bits cleared in this mask
                  must all be equal to their corresponding bits in the
                  filterPktStatus object for the packet to be accepted.
                  In addition, at least one of those relevant bits in the
                  received packet status that correspond to bits set in
                  this mask must be different to its corresponding bit
                  in the filterPktStatus object for the packet to be
                  accepted.

                  For the purposes of the matching algorithm, if the
                  associated filterPktStatus object or a packet status
                  is longer than this mask, this mask is conceptually
                  extended with '0' bits until it reaches the longer of
                  the lengths of the filterPktStatus object and the
                  packet status.

                  This object may not be modified if the associated
                  filterStatus object is equal to valid(1)."
              ::= { filterEntry 9 }

          filterOwner OBJECT-TYPE
              SYNTAX OwnerString


              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The entity that configured this entry and is
                  therefore using the resources assigned to it."
              ::= { filterEntry 10 }

          filterStatus OBJECT-TYPE
              SYNTAX EntryStatus
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The status of this filter entry."
              ::= { filterEntry 11 }

          channelTable OBJECT-TYPE
              SYNTAX SEQUENCE OF ChannelEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of packet channel entries."
              ::= { filter 2 }

          channelEntry OBJECT-TYPE
              SYNTAX ChannelEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A set of parameters for a packet channel applied on a
                  particular interface."
              INDEX { channelIndex }
              ::= { channelTable 1 }

          ChannelEntry ::= SEQUENCE {
              channelIndex                 INTEGER (1..65535),
              channelIfIndex               INTEGER (1..65535),
              channelAcceptType            INTEGER,
              channelDataControl           INTEGER,
              channelTurnOnEventIndex      INTEGER (0..65535),
              channelTurnOffEventIndex     INTEGER (0..65535),
              channelEventIndex            INTEGER (0..65535),
              channelEventStatus           INTEGER,
              channelMatches               Counter,
              channelDescription           DisplayString (SIZE (0..127)),
              channelOwner                 OwnerString,
              channelStatus                INTEGER
          }


          channelIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "An index that uniquely identifies an entry
                  in the channel table.  Each such
                  entry defines one channel, a logical data
                  and event stream."
              ::= { channelEntry 1 }

          channelIfIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The value of this object uniquely identifies the
                  interface on this remote network monitoring device
                  to which the associated filters are applied to allow
                  data into this channel.  The interface identified by
                  a particular value of this object is the same
                  interface as identified by the same value of the
                  ifIndex object, defined in [4,6].  The filters in
                  this group are applied to all packets on the local
                  network segment attached to the identified
                  interface.

                  This object may not be modified if the associated
                  channelStatus object is equal to valid(1)."
              ::= { channelEntry 2 }

          channelAcceptType OBJECT-TYPE
              SYNTAX INTEGER {
                  acceptMatched(1),
                  acceptFailed(2)
              }
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "This object controls the action of the filters
                  associated with this channel.  If this object is equal
                  to acceptMatched(1), packets will be accepted to this
                  channel if they are accepted by both the packet data
                  and packet status matches of an associated filter. If
                  this object is equal to acceptFailed(2), packets will
                  be accepted to this channel only if they fail either
                  the packet data match or the packet status match of
                  each of the associated filters.


                  This object may not be modified if the associated
                  channelStatus object is equal to valid(1)."
              ::= { channelEntry 3 }

          channelDataControl OBJECT-TYPE
              SYNTAX INTEGER {
                  on(1),
                  off(2)
              }
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "This object controls the flow of data through this
                  channel.  If this object is on(1), data, status and
                  events flow through this channel.  If this object is
                  off(2), data, status and events will not flow through
                  this channel."
              DEFVAL { off }
              ::= { channelEntry 4 }

          channelTurnOnEventIndex OBJECT-TYPE
              SYNTAX INTEGER (0..65535)
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The value of this object identifies the event
                  that is configured to turn the associated
                  channelDataControl from off to on when the event is
                  generated.  The event identified by a particular value
                  of this object is the same event as identified by the
                  same value of the eventIndex object.  If there is no
                  corresponding entry in the eventTable, then no
                  association exists.  In fact, if no event is intended
                  for this channel, channelTurnOnEventIndex must be
                  set to zero, a non-existent event index.

                  This object may not be modified if the associated
                  channelStatus object is equal to valid(1)."
              ::= { channelEntry 5 }

          channelTurnOffEventIndex OBJECT-TYPE
              SYNTAX INTEGER (0..65535)
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The value of this object identifies the event
                  that is configured to turn the associated
                  channelDataControl from on to off when the event is


                  generated.  The event identified by a particular value
                  of this object is the same event as identified by the
                  same value of the eventIndex object.  If there is no
                  corresponding entry in the eventTable, then no
                  association exists.  In fact, if no event is intended
                  for this channel, channelTurnOffEventIndex must be
                  set to zero, a non-existent event index.

                  This object may not be modified if the associated
                  channelStatus object is equal to valid(1)."
              ::= { channelEntry 6 }

          channelEventIndex OBJECT-TYPE
              SYNTAX INTEGER (0..65535)
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The value of this object identifies the event
                  that is configured to be generated when the
                  associated channelDataControl is on and a packet
                  is matched.  The event identified by a particular value
                  of this object is the same event as identified by the
                  same value of the eventIndex object.  If there is no
                  corresponding entry in the eventTable, then no
                  association exists.  In fact, if no event is intended
                  for this channel, channelEventIndex must be
                  set to zero, a non-existent event index.

                  This object may not be modified if the associated
                  channelStatus object is equal to valid(1)."
              ::= { channelEntry 7 }

          channelEventStatus OBJECT-TYPE
              SYNTAX INTEGER {
                  eventReady(1),
                  eventFired(2),
                  eventAlwaysReady(3)
              }
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The event status of this channel.

                  If this channel is configured to generate events
                  when packets are matched, a means of controlling
                  the flow of those events is often needed.  When
                  this object is equal to eventReady(1), a single
                  event may be generated, after which this object


                  will be set by the probe to eventFired(2).  While
                  in the eventFired(2) state, no events will be
                  generated until the object is modified to
                  eventReady(1) (or eventAlwaysReady(3)).  The
                  management station can thus easily respond to a
                  notification of an event by re-enabling this object.

                  If the management station wishes to disable this
                  flow control and allow events to be generated
                  at will, this object may be set to
                  eventAlwaysReady(3).  Disabling the flow control
                  is discouraged as it can result in high network
                  traffic or other performance problems."
              DEFVAL { eventReady }
              ::= { channelEntry 8 }

          channelMatches OBJECT-TYPE
              SYNTAX Counter
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of times this channel has matched a packet.
                  Note that this object is updated even when
                  channelDataControl is set to off."
              ::= { channelEntry 9 }

          channelDescription OBJECT-TYPE
              SYNTAX DisplayString (SIZE (0..127))
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "A comment describing this channel."
              ::= { channelEntry 10 }

          channelOwner OBJECT-TYPE
              SYNTAX OwnerString
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The entity that configured this entry and is therefore
                  using the resources assigned to it."
              ::= { channelEntry 11 }

          channelStatus OBJECT-TYPE
              SYNTAX EntryStatus
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION


                  "The status of this channel entry."
              ::= { channelEntry 12 }

          -- The Packet Capture Group

          -- Implementation of the Packet Capture group is optional.
          --
          -- The Packet Capture Group requires implementation of the
          -- Filter Group.
          --
          -- The Packet Capture group allows packets to be captured
          -- upon a filter match.  The bufferControlTable controls
          -- the captured packets output from a channel that is
          -- associated with it.  The captured packets are placed
          -- in entries in the captureBufferTable.  These entries are
          -- associated with the bufferControlEntry on whose behalf they
          -- were stored.

          bufferControlTable OBJECT-TYPE
              SYNTAX SEQUENCE OF BufferControlEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of buffers control entries."
              ::= { capture 1 }

          bufferControlEntry OBJECT-TYPE
              SYNTAX BufferControlEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A set of parameters that control the collection of
                  a stream of packets that have matched filters."
              INDEX { bufferControlIndex }
              ::= { bufferControlTable 1 }

          BufferControlEntry ::= SEQUENCE {
              bufferControlIndex                INTEGER (1..65535),
              bufferControlChannelIndex         INTEGER (1..65535),
              bufferControlFullStatus           INTEGER,
              bufferControlFullAction           INTEGER,
              bufferControlCaptureSliceSize     INTEGER,
              bufferControlDownloadSliceSize    INTEGER,
              bufferControlDownloadOffset       INTEGER,
              bufferControlMaxOctetsRequested   INTEGER,
              bufferControlMaxOctetsGranted     INTEGER,
              bufferControlCapturedPackets      INTEGER,


              bufferControlTurnOnTime           TimeTicks,
              bufferControlOwner                OwnerString,
              bufferControlStatus               INTEGER
          }

          bufferControlIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "An index that uniquely identifies an entry
                  in the bufferControl table.  The value of this
                  index shall never be zero.  Each such
                  entry defines one set of packets that is
                  captured and controlled by one or more filters."
              ::= { bufferControlEntry 1 }

          bufferControlChannelIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "An index that identifies the channel that is the
                  source of packets for this bufferControl table.
                  The channel identified by a particular value of this
                  index is the same as identified by the same value of
                  the channelIndex object.

                  This object may not be modified if the associated
                  bufferControlStatus object is equal to valid(1)."
              ::= { bufferControlEntry 2 }

          bufferControlFullStatus OBJECT-TYPE
              SYNTAX INTEGER {
                      spaceAvailable(1),
                      full(2)
              }
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "This object shows whether the buffer has room to
                  accept new packets or if it is full.

                  If the status is spaceAvailable(1), the buffer is
                  accepting new packets normally.  If the status is
                  full(2) and the associated bufferControlFullAction
                  object is wrapWhenFull, the buffer is accepting new
                  packets by deleting enough of the oldest packets


                  to make room for new ones as they arrive.  Otherwise,
                  if the status is full(2) and the
                  bufferControlFullAction object is lockWhenFull,
                  then the buffer has stopped collecting packets.

                  When this object is set to full(2) the probe must
                  not later set it to spaceAvailable(1) except in the
                  case of a significant gain in resources such as
                  an increase of bufferControlOctetsGranted.  In
                  particular, the wrap-mode action of deleting old
                  packets to make room for newly arrived packets
                  must not affect the value of this object."
              ::= { bufferControlEntry 3 }

          bufferControlFullAction OBJECT-TYPE
              SYNTAX INTEGER {
                      lockWhenFull(1),
                      wrapWhenFull(2)    -- FIFO
              }
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "Controls the action of the buffer when it
                  reaches the full status.  When in the lockWhenFull(1)
                  state a packet is added to the buffer that
                  fills the buffer, the bufferControlFullStatus will
                  be set to full(2) and this buffer will stop capturing
                  packets."
              ::= { bufferControlEntry 4 }

          bufferControlCaptureSliceSize OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The maximum number of octets of each packet
                  that will be saved in this capture buffer.
                  For example, if a 1500 octet packet is received by
                  the probe and this object is set to 500, then only
                  500 octets of the packet will be stored in the
                  associated capture buffer.  If this variable is set
                  to 0, the capture buffer will save as many octets
                  as is possible.

                  This object may not be modified if the associated
                  bufferControlStatus object is equal to valid(1)."
              DEFVAL { 100 }
              ::= { bufferControlEntry 5 }


          bufferControlDownloadSliceSize OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The maximum number of octets of each packet
                  in this capture buffer that will be returned in
                  an SNMP retrieval of that packet.  For example,
                  if 500 octets of a packet have been stored in the
                  associated capture buffer, the associated
                  bufferControlDownloadOffset is 0, and this
                  object is set to 100, then the captureBufferPacket
                  object that contains the packet will contain only
                  the first 100 octets of the packet.

                  A prudent manager will take into account possible
                  interoperability or fragmentation problems that may
                  occur if the download slice size is set too large.
                  In particular, conformant SNMP implementations are not
                  required to accept messages whose length exceeds 484
                  octets, although they are encouraged to support larger
                  datagrams whenever feasible."
              DEFVAL { 100 }
              ::= { bufferControlEntry 6 }

          bufferControlDownloadOffset OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The offset of the first octet of each packet
                  in this capture buffer that will be returned in
                  an SNMP retrieval of that packet.  For example,
                  if 500 octets of a packet have been stored in the
                  associated capture buffer and this object is set to
                  100, then the captureBufferPacket object that
                  contains the packet will contain bytes starting
                  100 octets into the packet."
              DEFVAL { 0 }
              ::= { bufferControlEntry 7 }

          bufferControlMaxOctetsRequested OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The requested maximum number of octets to be
                  saved in this captureBuffer, including any


                  implementation-specific overhead. If this variable
                  is set to -1, the capture buffer will save as many
                  octets as is possible.

                  When this object is created or modified, the probe
                  should set bufferControlMaxOctetsGranted as closely
                  to this object as is possible for the particular probe
                  implementation and available resources.  However, if
                  the object has the special value of -1, the probe
                  must set bufferControlMaxOctetsGranted to -1."
              DEFVAL { -1 }
              ::= { bufferControlEntry 8 }

          bufferControlMaxOctetsGranted OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The maximum number of octets that can be
                  saved in this captureBuffer, including overhead.
                  If this variable is -1, the capture buffer will save
                  as many octets as possible.

                  When the bufferControlMaxOctetsRequested object is
                  created or modified, the probe should set this object
                  as closely to the requested value as is possible for
                  the particular probe implementation and available
                  resources.  However, if the request object has the
                  special value of -1, the probe must set this object
                  to -1.  The probe must not lower this value except
                  as a result of a modification to the associated
                  bufferControlMaxOctetsRequested object.

                  When this maximum number of octets is reached
                  and a new packet is to be added to this
                  capture buffer and the corresponding
                  bufferControlFullAction is set to wrapWhenFull(2),
                  enough of the oldest packets associated with this
                  capture buffer shall be deleted by the agent so
                  that the new packet can be added.  If the
                  corresponding bufferControlFullAction is set to
                  lockWhenFull(1), the new packet shall be discarded.
                  In either case, the probe must set
                  bufferControlFullStatus to full(2).

                  When the value of this object changes to a value less
                  than the current value, entries are deleted from
                  the captureBufferTable associated with this


                  bufferControlEntry.  Enough of the
                  oldest of these captureBufferEntries shall be
                  deleted by the agent so that the number of octets
                  used remains less than or equal to the new value of
                  this object.

                  When the value of this object changes to a value greater
                  than the current value, the number of associated
                  captureBufferEntries may be allowed to grow."
              ::= { bufferControlEntry 9 }

          bufferControlCapturedPackets OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of packets currently in this captureBuffer."
              ::= { bufferControlEntry 10 }

          bufferControlTurnOnTime OBJECT-TYPE
              SYNTAX TimeTicks
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The value of sysUpTime when this capture buffer was
                  first turned on."
              ::= { bufferControlEntry 11 }

          bufferControlOwner OBJECT-TYPE
              SYNTAX OwnerString
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The entity that configured this entry and is therefore
                  using the resources assigned to it."
              ::= { bufferControlEntry 12 }

          bufferControlStatus OBJECT-TYPE
              SYNTAX EntryStatus
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The status of this buffer Control Entry."
              ::= { bufferControlEntry 13 }

          captureBufferTable OBJECT-TYPE
              SYNTAX SEQUENCE OF CaptureBufferEntry
              ACCESS not-accessible


              STATUS mandatory
              DESCRIPTION
                  "A list of packets captured off of a channel."
              ::= { capture 2 }

          captureBufferEntry OBJECT-TYPE
              SYNTAX CaptureBufferEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A packet captured off of an attached network."
              INDEX { captureBufferControlIndex, captureBufferIndex }
              ::= { captureBufferTable 1 }

          CaptureBufferEntry ::= SEQUENCE {
              captureBufferControlIndex   INTEGER (1..65535),
              captureBufferIndex          INTEGER,
              captureBufferPacketID       INTEGER,
              captureBufferPacketData     OCTET STRING,
              captureBufferPacketLength   INTEGER,
              captureBufferPacketTime     INTEGER,
              captureBufferPacketStatus   INTEGER
          }

          captureBufferControlIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The index of the bufferControlEntry with which
                  this packet is associated."
              ::= { captureBufferEntry 1 }

          captureBufferIndex OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "An index that uniquely identifies an entry
                  in the captureBuffer table associated with a
                  particular bufferControlEntry.  This index will
                  start at 1 and increase by one for each new packet
                  added with the same captureBufferControlIndex."
              ::= { captureBufferEntry 2 }

          captureBufferPacketID OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-only


              STATUS mandatory
              DESCRIPTION
                  "An index that describes the order of packets
                  that are received on a particular interface.
                  The packetID of a packet captured on an
                  interface is defined to be greater than the
                  packetID's of all packets captured previously on
                  the same interface.  As the captureBufferPacketID
                  object has a maximum positive value of 2^31 - 1,
                  any captureBufferPacketID object shall have the
                  value of the associated packet's packetID mod 2^31."
              ::= { captureBufferEntry 3 }

          captureBufferPacketData OBJECT-TYPE
              SYNTAX OCTET STRING
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The data inside the packet, starting at the beginning
                  of the packet plus any offset specified in the
                  associated bufferControlDownloadOffset, including any
                  link level headers.  The length of the data in this
                  object is the minimum of the length of the captured
                  packet minus the offset, the length of the associated
                  bufferControlCaptureSliceSize minus the offset, and the
                  associated bufferControlDownloadSliceSize.  If this
                  minimum is less than zero, this object shall have a
                  length of zero."
              ::= { captureBufferEntry 4 }

          captureBufferPacketLength OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The actual length (off the wire) of the packet stored
                  in this entry, including FCS octets."
              ::= { captureBufferEntry 5 }

          captureBufferPacketTime OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The number of milliseconds that had passed since
                  this capture buffer was first turned on when this
                  packet was captured."
              ::= { captureBufferEntry 6 }


          captureBufferPacketStatus OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "A value which indicates the error status of this
                  packet.

                  The value of this object is defined in the same way as
                  filterPacketStatus.  The value is a sum.  This sum
                  initially takes the value zero.  Then, for each
                  error, E, that has been discovered in this packet,
                  2 raised to a value representing E is added to the sum.

                  The errors defined for a packet captured off of an
                  Ethernet interface are as follows:

                      bit #    Error
                          0    Packet is longer than 1518 octets
                          1    Packet is shorter than 64 octets
                          2    Packet experienced a CRC or Alignment
                               error
                          3    First packet in this capture buffer after
                               it was detected that some packets were
                               not processed correctly.

                  For example, an Ethernet fragment would have a
                  value of 6 (2^1 + 2^2).

                  As this MIB is expanded to new media types, this object
                  will have other media-specific errors defined."
              ::= { captureBufferEntry 7 }

          -- The Event Group

          -- Implementation of the Event group is optional.
          --
          -- The Event group controls the generation and notification
          -- of events from this device.  Each entry in the eventTable
          -- describes the parameters of the event that can be triggered.
          -- Each event entry is fired by an associated condition located
          -- elsewhere in the MIB.  An event entry may also be associated
          -- with a function elsewhere in the MIB that will be executed
          -- when the event is generated.  For example, a channel may
          -- be turned on or off by the firing of an event.
          --
          -- Each eventEntry may optionally specify that a log entry


          -- be created on its behalf whenever the event occurs.
          -- Each entry may also specify that notification should
          -- occur by way of SNMP trap messages.  In this case, the
          -- community for the trap message is given in the associated
          -- eventCommunity object.  The enterprise and specific trap
          -- fields of the trap are determined by the condition that
          -- triggered the event.  Three traps are defined in a companion
          -- document: risingAlarm, fallingAlarm, and packetMatch.
          -- If the eventTable is triggered by a condition specified
          -- elsewhere, the enterprise and specific trap fields
          -- must be specified for traps generated for that condition.

          eventTable OBJECT-TYPE
              SYNTAX SEQUENCE OF EventEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of events to be generated."
              ::= { event 1 }

          eventEntry OBJECT-TYPE
              SYNTAX EventEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A set of parameters that describe an event to be
                  generated when certain conditions are met."
              INDEX { eventIndex }
              ::= { eventTable 1 }

          EventEntry ::= SEQUENCE {
              eventIndex          INTEGER (1..65535),
              eventDescription    DisplayString (SIZE (0..127)),
              eventType           INTEGER,
              eventCommunity      OCTET STRING (SIZE (0..127)),
              eventLastTimeSent   TimeTicks,
              eventOwner          OwnerString,
              eventStatus         INTEGER
          }

          eventIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "An index that uniquely identifies an entry in the
                  event table.  Each such entry defines one event that
                  is to be generated when the appropriate conditions


                  occur."
              ::= { eventEntry 1 }

          eventDescription OBJECT-TYPE
              SYNTAX DisplayString (SIZE (0..127))
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "A comment describing this event entry."
              ::= { eventEntry 2 }

          eventType OBJECT-TYPE
              SYNTAX INTEGER {
                      none(1),
                      log(2),
                      snmp-trap(3),    -- send an SNMP trap
                      log-and-trap(4)
              }
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The type of notification that the probe will make
                  about this event.  In the case of log, an entry is
                  made in the log table for each event.  In the case of
                  snmp-trap, an SNMP trap is sent to one or more
                  management stations."
              ::= { eventEntry 3 }

          eventCommunity OBJECT-TYPE
              SYNTAX OCTET STRING (SIZE (0..127))
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "If an SNMP trap is to be sent, it will be sent to
                  the SNMP community specified by this octet string.
                  In the future this table will be extended to include
                  the party security mechanism.  This object shall be
                  set to a string of length zero if it is intended that
                  that mechanism be used to specify the destination of
                  the trap."
              ::= { eventEntry 4 }

          eventLastTimeSent OBJECT-TYPE
              SYNTAX TimeTicks
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The value of sysUpTime at the time this event


                  entry last generated an event.  If this entry has
                  not generated any events, this value will be
                  zero."
              ::= { eventEntry 5 }

          eventOwner OBJECT-TYPE
              SYNTAX OwnerString
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The entity that configured this entry and is therefore
                  using the resources assigned to it.

                  If this object contains a string starting with 'monitor'
                  and has associated entries in the log table, all
                  connected management stations should retrieve those
                  log entries, as they may have significance to all
                  management stations connected to this device"
              ::= { eventEntry 6 }

          eventStatus OBJECT-TYPE
              SYNTAX EntryStatus
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The status of this event entry.

                  If this object is not equal to valid(1), all associated
                  log entries shall be deleted by the agent."
              ::= { eventEntry 7 }

          logTable OBJECT-TYPE
              SYNTAX SEQUENCE OF LogEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A list of events that have been logged."
              ::= { event 2 }

          logEntry OBJECT-TYPE
              SYNTAX LogEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                  "A set of data describing an event that has been
                  logged."
              INDEX { logEventIndex, logIndex }


              ::= { logTable 1 }

          LogEntry ::= SEQUENCE {
              logEventIndex           INTEGER (1..65535),
              logIndex                INTEGER,
              logTime                 TimeTicks,
              logDescription          DisplayString (SIZE (0..255))
          }

          logEventIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The event entry that generated this log
                  entry.  The log identified by a particular
                  value of this index is associated with the same
                  eventEntry as identified by the same value
                  of eventIndex."
              ::= { logEntry 1 }

          logIndex OBJECT-TYPE
              SYNTAX INTEGER
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "An index that uniquely identifies an entry
                  in the log table amongst those generated by the
                  same eventEntries.  These indexes are
                  assigned beginning with 1 and increase by one
                  with each new log entry.  The association
                  between values of logIndex and logEntries
                  is fixed for the lifetime of each logEntry.
                  The agent may choose to delete the oldest
                  instances of logEntry as required because of
                  lack of memory.  It is an implementation-specific
                  matter as to when this deletion may occur."
              ::= { logEntry 2 }

          logTime OBJECT-TYPE
              SYNTAX TimeTicks
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The value of sysUpTime when this log entry was
                  created."
              ::= { logEntry 3 }


          logDescription OBJECT-TYPE
              SYNTAX DisplayString (SIZE (0..255))
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "An implementation dependent description of the
                  event that activated this log entry."
              ::= { logEntry 4 }

END
CMU-MIB DEFINITIONS ::= BEGIN;
		Proteon OBJECT IDENTIFIER ::= { enterprises 1 }
		IBM OBJECT IDENTIFIER ::= { enterprises 2 }
		cmu OBJECT IDENTIFIER ::= { enterprises 3 }
		Unix OBJECT IDENTIFIER ::= { enterprises 4 }
		ACC OBJECT IDENTIFIER ::= { enterprises 5 }
		TWG OBJECT IDENTIFIER ::= { enterprises 6 }
		Cayman OBJECT IDENTIFIER ::= { enterprises 7 }
		PSI OBJECT IDENTIFIER ::= { enterprises 8 }
		Cisco OBJECT IDENTIFIER ::= { enterprises 9 }
		NSC OBJECT IDENTIFIER ::= { enterprises 10 }
		HP OBJECT IDENTIFIER ::= { enterprises 11 }
		Epilogue OBJECT IDENTIFIER ::= { enterprises 12 }
		UTK OBJECT IDENTIFIER ::= { enterprises 13 }
		BBN OBJECT IDENTIFIER ::= { enterprises 14 }
		Xylogics OBJECT IDENTIFIER ::= { enterprises 15 }
		Timeplex OBJECT IDENTIFIER ::= { enterprises 16 }
		Canstar OBJECT IDENTIFIER ::= { enterprises 17 }
		Wellfleet OBJECT IDENTIFIER ::= { enterprises 18 }
		TRW OBJECT IDENTIFIER ::= { enterprises 19 }
		MIT OBJECT IDENTIFIER ::= { enterprises 20 }
		EON OBJECT IDENTIFIER ::= { enterprises 21 }
		Spartacus OBJECT IDENTIFIER ::= { enterprises 22 }
		Excelan OBJECT IDENTIFIER ::= { enterprises 23 }
		Spider OBJECT IDENTIFIER ::= { enterprises 24 }
		NSFNET OBJECT IDENTIFIER ::= { enterprises 25 }
		HLS OBJECT IDENTIFIER ::= { enterprises 26 }
		Xyplex OBJECT IDENTIFIER ::= { enterprises 33 }
		Cray OBJECT IDENTIFIER ::= { enterprises 34 }
		Sun OBJECT IDENTIFIER ::= { enterprises 42 }
		Synoptics OBJECT IDENTIFIER ::= { enterprises 45 }
		DEC OBJECT IDENTIFIER ::= { enterprises 36 }
		TGV OBJECT IDENTIFIER ::= { enterprises 58 }
		Apple OBJECT IDENTIFIER ::= { enterprises 63 }
		NAT OBJECT IDENTIFIER ::= { enterprises 86 }
		SNMP-Research OBJECT IDENTIFIER ::= { enterprises 99 }
		FTP OBJECT IDENTIFIER ::= { enterprises 121 }
		Shiva OBJECT IDENTIFIER ::= { enterprises 166 }
		Transarc OBJECT IDENTIFIER ::= { enterprises 257 }
		Lexcel OBJECT IDENTIFIER ::= { enterprises 379 }

END


Wellfleet-Series7-MIB

-- Creation date            : Wed Mar 30 21:30:40 GMT 1994
-- Series 7 Software Release: 

-- Copyright 1993 Wellfleet Communications, Inc.  All Rights
-- Reserved.  Reproduction of this document is authorized on
-- condition that the foregoing copyright notice is included.
-- This Wellfleet SNMP Management Information Base Specification
-- (Specification) embodies Wellfleet's confidential and
-- proprietary intellectual property.  Wellfleet retains all
-- title and ownership in the Specification, including any
-- revisions.
--
-- It is Wellfleet's intent to encourage the widespread use of
-- this Specification in connection with the management of
-- Wellfleet products. Wellfleet grants vendors, end-users,
-- and other interested parties a non-exclusive license to
-- use this Specification in connection with the management
-- of Wellfleet products utilizing series 7.xx system software.
--
-- This Specification is supplied "AS IS", and Wellfleet makes
-- no warranty, either expressed or implied, as to the use,
-- operation, condition, or performance of the Specification.

-- Copyright text courtesy of D. Perkins.


DEFINITIONS ::= BEGIN

IMPORTS

  IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises
    FROM RFC1155-SMI
  OBJECT-TYPE
    FROM RFC-1212
  DisplayString
    FROM RFC1213-MIB;

wellfleet	OBJECT IDENTIFIER ::= { enterprises 18 }

wfSwSeries7	OBJECT IDENTIFIER ::= { wellfleet 3 }

wfHardwareConfig	OBJECT IDENTIFIER ::= { wfSwSeries7 1 }

wfSoftwareConfig	OBJECT IDENTIFIER ::= { wfSwSeries7 2 }

wfSystem	OBJECT IDENTIFIER ::= { wfSwSeries7 3 }

wfServices	OBJECT IDENTIFIER ::= { wfSystem 2 }

wfPacketGenGroup	OBJECT IDENTIFIER ::= { wfServices 4 }

wfGameGroup	OBJECT IDENTIFIER ::= { wfServices 5 }

wfStaGroup	OBJECT IDENTIFIER ::= { wfServices 6 }

wfMibHeapGroup	OBJECT IDENTIFIER ::= { wfServices 7 }

wfCircuitNameExtension	OBJECT IDENTIFIER ::= { wfServices 9 }

wfNetBootGroup	OBJECT IDENTIFIER ::= { wfServices 10 }

wfLine		OBJECT IDENTIFIER ::= { wfSwSeries7 4 }

wfHwFGroup	OBJECT IDENTIFIER ::= { wfLine 6 }

wfMcT1Group	OBJECT IDENTIFIER ::= { wfLine 8 }

wfMcE1Group	OBJECT IDENTIFIER ::= { wfLine 9 }

wfDs1Group	OBJECT IDENTIFIER ::= { wfLine 12 }

wfDs3Group	OBJECT IDENTIFIER ::= { wfLine 13 }

wfSipGroup	OBJECT IDENTIFIER ::= { wfLine 14 }

wfSipPlcpGroup	OBJECT IDENTIFIER ::= { wfSipGroup 2 }

wfFddiGroup	OBJECT IDENTIFIER ::= { wfLine 15 }

wfFddiSmtGroup	OBJECT IDENTIFIER ::= { wfFddiGroup 1 }

wfFddiMacGroup	OBJECT IDENTIFIER ::= { wfFddiGroup 2 }

wfFddiPathGroup	OBJECT IDENTIFIER ::= { wfFddiGroup 3 }

wfFddiPortGroup	OBJECT IDENTIFIER ::= { wfFddiGroup 4 }

wfApplication	OBJECT IDENTIFIER ::= { wfSwSeries7 5 }

wfDataLink	OBJECT IDENTIFIER ::= { wfApplication 1 }

wfBridgeGroup	OBJECT IDENTIFIER ::= { wfDataLink 1 }

wfBrLearning	OBJECT IDENTIFIER ::= { wfBridgeGroup 1 }

wfBrSourceRouting	OBJECT IDENTIFIER ::= { wfBridgeGroup 2 }

wfSpanningTree	OBJECT IDENTIFIER ::= { wfDataLink 2 }

wfIfGroup	OBJECT IDENTIFIER ::= { wfDataLink 3 }

wfCircuitOptsGroup	OBJECT IDENTIFIER ::= { wfDataLink 4 }

wfDlsGroup	OBJECT IDENTIFIER ::= { wfDataLink 5 }

wfLlcGroup	OBJECT IDENTIFIER ::= { wfDataLink 6 }

wfDecGroup	OBJECT IDENTIFIER ::= { wfApplication 2 }

wfInternet	OBJECT IDENTIFIER ::= { wfApplication 3 }

wfArpGroup	OBJECT IDENTIFIER ::= { wfInternet 1 }

wfIpRouting	OBJECT IDENTIFIER ::= { wfInternet 2 }

wfIpGroup	OBJECT IDENTIFIER ::= { wfIpRouting 1 }

wfRipGroup	OBJECT IDENTIFIER ::= { wfIpRouting 2 }

wfOspfGroup	OBJECT IDENTIFIER ::= { wfIpRouting 3 }

wfEgpGroup	OBJECT IDENTIFIER ::= { wfIpRouting 4 }

wfBgpGroup	OBJECT IDENTIFIER ::= { wfIpRouting 5 }

wfBgpGeneralGroup	OBJECT IDENTIFIER ::= { wfBgpGroup 1 }

wfBgp3Group	OBJECT IDENTIFIER ::= { wfBgpGroup 2 }

wfBgp4Group	OBJECT IDENTIFIER ::= { wfBgpGroup 3 }

wfTcpGroup	OBJECT IDENTIFIER ::= { wfInternet 3 }

wfUdpGroup	OBJECT IDENTIFIER ::= { wfInternet 4 }

wfSnmpGroup	OBJECT IDENTIFIER ::= { wfInternet 5 }

wfTelnetGroup	OBJECT IDENTIFIER ::= { wfInternet 7 }

wfBootpGroup	OBJECT IDENTIFIER ::= { wfInternet 8 }

wfBootpClientGroup	OBJECT IDENTIFIER ::= { wfBootpGroup 1 }

wfBootpServerGroup	OBJECT IDENTIFIER ::= { wfBootpGroup 2 }

wfBootpRelayAgentGroup	OBJECT IDENTIFIER ::= { wfBootpGroup 3 }

wfRarpGroup	OBJECT IDENTIFIER ::= { wfInternet 9 }

wfAppletalkGroup	OBJECT IDENTIFIER ::= { wfApplication 4 }

wfIpxGroup	OBJECT IDENTIFIER ::= { wfApplication 5 }

wfOsiGroup	OBJECT IDENTIFIER ::= { wfApplication 6 }

wfVinesGroup	OBJECT IDENTIFIER ::= { wfApplication 8 }

wfWanGroup	OBJECT IDENTIFIER ::= { wfApplication 9 }

wfFrameRelayGroup	OBJECT IDENTIFIER ::= { wfWanGroup 1 }

wfPppGroup	OBJECT IDENTIFIER ::= { wfWanGroup 2 }

wfX25Group	OBJECT IDENTIFIER ::= { wfWanGroup 4 }

wfAtmGroup	OBJECT IDENTIFIER ::= { wfWanGroup 5 }

wfFrameRelaySwitchGroup	OBJECT IDENTIFIER ::= { wfWanGroup 6 }

wfSmdsSwitchGroup	OBJECT IDENTIFIER ::= { wfWanGroup 7 }

wfIsdnGroup	OBJECT IDENTIFIER ::= { wfWanGroup 8 }

wfFrameRelay2Group	OBJECT IDENTIFIER ::= { wfWanGroup 9 }

wfXnsGroup	OBJECT IDENTIFIER ::= { wfApplication 10 }

wfTestGroup	OBJECT IDENTIFIER ::= { wfApplication 11 }

wfLanManagerGroup	OBJECT IDENTIFIER ::= { wfApplication 12 }

wfAppleBase	OBJECT IDENTIFIER ::= { wfAppletalkGroup 1 }

wfAppleBaseDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter for determining whether
		  or not AppleTalk is configured on this slot.
		     "
	DEFVAL	{ created }
	::= { wfAppleBase 1 }

wfAppleBaseDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for determining whether
		  or not to startup AppleTalk.
		     "
	DEFVAL	{ enabled }
	::= { wfAppleBase 2 }

wfAppleBaseState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpres(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This parameter relfects the current state of AppleTalk. "
	DEFVAL	{ down }
	::= { wfAppleBase 3 }

wfAppleBaseDebugLevel OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Appletalk has control of what debug and info messages
		  are printed.
		     "
	::= { wfAppleBase 4 }

wfAppleBaseDdpQueLen OBJECT-TYPE
	SYNTAX	INTEGER {
		default(20)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" wfAppleBaseDdpQueLen is no longer used.
		     "
	DEFVAL	{ default }
	::= { wfAppleBase 5 }

wfAppleBaseHomedPort OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The circuit number of the port on which NBP will register this
		  router.
		     "
	::= { wfAppleBase 6 }

wfAppleBaseTotalNets OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of networks from all
		  routing protocols.
		     "
	::= { wfAppleBase 7 }

wfAppleBaseTotalZones OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of zone/rtmp associations. Also
		  the total number of instances of zones in the
		  mib.
		     "
	::= { wfAppleBase 8 }

wfAppleBaseTotalZoneNames OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of unique zone names.
		     "
	::= { wfAppleBase 9 }

wfAppleBaseTotalAarpEntries OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of AARP entries.
		     "
	::= { wfAppleBase 10 }

wfAppleBaseEstimatedNets OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This parameter indicates the estimated number of networks
		  that the router will need to keep in its routing table.
		     "
	::= { wfAppleBase 11 }

wfAppleBaseEstimatedHosts OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This parameter indicates the estimated number of end stations
		  that the router will need to keep in its AARP table.  This should
		  not include end stations that are reached through another router.
		     "
	::= { wfAppleBase 12 }

wfAppleRtmpTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAppleRtmpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The table of elements of AppleTalk's routing RTMP table "
	::= { wfAppletalkGroup 2 }

wfAppleRtmpEntry OBJECT-TYPE
	SYNTAX	WfAppleRtmpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Routing table "
	INDEX	{ wfAppleRtmpNetStart,
		wfAppleRtmpNetEnd }
	::= { wfAppleRtmpTable 1 }

WfAppleRtmpEntry ::= SEQUENCE {
	wfAppleRtmpNetStart
		INTEGER,
	wfAppleRtmpNetEnd
		INTEGER,
	wfAppleRtmpPort
		INTEGER,
	wfAppleRtmpHops
		INTEGER,
	wfAppleRtmpNextHopNet
		INTEGER,
	wfAppleRtmpNextHopNode
		INTEGER,
	wfAppleRtmpState
		INTEGER
}

wfAppleRtmpNetStart OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The destinatination network range of this
		  route to which this entry pertains.  The route 
		  is considered the best route to that network. 
		  There wil only be one route to a single destination.  
		  The address will be in the form of 
		  [network min - network max].
		      "
	::= { wfAppleRtmpEntry 1 }

wfAppleRtmpNetEnd OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The network max in the destination network range
		  to which the routing entry pertains.
		      "
	::= { wfAppleRtmpEntry 2 }

wfAppleRtmpPort OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The index value which uniquely identifies the
		  local interface through which the next hop of 
		  this route should be reached.  The interface 
		  identified by a particular value of this index 
		  is the same interface as identified by the same 
		  value of ifIndex.
		      "
	::= { wfAppleRtmpEntry 3 }

wfAppleRtmpHops OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The routing metric to get to this destination
		  network.  The measurement is in terms of hops.
		      "
	::= { wfAppleRtmpEntry 4 }

wfAppleRtmpNextHopNet OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The AppleTalk net of the next hop router for this route.
		      "
	::= { wfAppleRtmpEntry 5 }

wfAppleRtmpNextHopNode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The AppleTalk node of the next hop router for this route.
		      "
	::= { wfAppleRtmpEntry 6 }

wfAppleRtmpState OBJECT-TYPE
	SYNTAX	INTEGER {
		good(1),
		suspect(2),
		goingbad(3),
		bad(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The state of this routing entry: 1 = Good,
		  2 = Suspect, 3 = GoingBad, or 4 = Bad.
		      "
	::= { wfAppleRtmpEntry 7 }

wfApplePortTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfApplePortEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The port descriptor table that describes the
		  configuration parameters for this port of 
		  the AppleTalk Router.
		  "
	::= { wfAppletalkGroup 3 }

wfApplePortEntry OBJECT-TYPE
	SYNTAX	WfApplePortEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Port Descriptor table "
	INDEX	{ wfApplePortCircuit }
	::= { wfApplePortTable 1 }

WfApplePortEntry ::= SEQUENCE {
	wfApplePortDelete
		INTEGER,
	wfApplePortDisable
		INTEGER,
	wfApplePortCircuit
		INTEGER,
	wfApplePortState
		INTEGER,
	wfApplePortType
		INTEGER,
	wfApplePortCksumDisable
		INTEGER,
	wfApplePortTrEndStation
		INTEGER,
	wfApplePortGniForever
		INTEGER,
	wfApplePortAarpFlush
		INTEGER,
	wfApplePortMacAddress
		OCTET STRING,
	wfApplePortNodeId
		INTEGER,
	wfApplePortNetwork
		INTEGER,
	wfApplePortNetStart
		INTEGER,
	wfApplePortNetEnd
		INTEGER,
	wfApplePortDfltZone
		DisplayString,
	wfApplePortCurMacAddress
		OCTET STRING,
	wfApplePortCurNodeId
		INTEGER,
	wfApplePortCurNetwork
		INTEGER,
	wfApplePortCurNetStart
		INTEGER,
	wfApplePortCurNetEnd
		INTEGER,
	wfApplePortCurDfltZone
		DisplayString,
	wfApplePortAarpProbeRxs
		Counter,
	wfApplePortAarpProbeTxs
		Counter,
	wfApplePortAarpReqRxs
		Counter,
	wfApplePortAarpReqTxs
		Counter,
	wfApplePortAarpRspRxs
		Counter,
	wfApplePortAarpRspTxs
		Counter,
	wfApplePortDdpOutRequests
		Counter,
	wfApplePortDdpInReceives
		Counter,
	wfApplePortDdpInLocalDatagrams
		Counter,
	wfApplePortDdpNoProtocolHandlers
		Counter,
	wfApplePortDdpTooShortErrors
		Counter,
	wfApplePortDdpTooLongErrors
		Counter,
	wfApplePortDdpChecksumErrors
		Counter,
	wfApplePortDdpForwRequests
		Counter,
	wfApplePortDdpOutNoRoutes
		Counter,
	wfApplePortDdpBroadcastErrors
		Counter,
	wfApplePortDdpHopCountErrors
		Counter,
	wfApplePortRtmpInDataPkts
		Counter,
	wfApplePortRtmpOutDataPkts
		Counter,
	wfApplePortRtmpInRequestPkts
		Counter,
	wfApplePortRtmpNextIREqualChanges
		Counter,
	wfApplePortRtmpNextIRLessChanges
		Counter,
	wfApplePortRtmpRouteDeletes
		Counter,
	wfApplePortRtmpNetworkMismatchErrors
		Counter,
	wfApplePortRtmpRoutingTableOverflows
		Counter,
	wfApplePortZipInZipQueries
		Counter,
	wfApplePortZipInZipReplies
		Counter,
	wfApplePortZipOutZipReplies
		Counter,
	wfApplePortZipInZipExtendedReplies
		Counter,
	wfApplePortZipOutZipExtendedReplies
		Counter,
	wfApplePortZipInGetZoneLists
		Counter,
	wfApplePortZipOutGetZoneListReplies
		Counter,
	wfApplePortZipInGetLocalZones
		Counter,
	wfApplePortZipOutGetLocalZoneReplies
		Counter,
	wfApplePortZipInGetMyZones
		Counter,
	wfApplePortZipOutGetMyZoneReplies
		Counter,
	wfApplePortZipZoneConflictErrors
		Counter,
	wfApplePortZipInGetNetInfos
		Counter,
	wfApplePortZipOutGetNetInfoReplies
		Counter,
	wfApplePortZipZoneOutInvalids
		Counter,
	wfApplePortZipAddressInvalids
		Counter,
	wfApplePortZipOutGetNetInfos
		Counter,
	wfApplePortZipInGetNetInfoReplies
		Counter,
	wfApplePortZipOutZipQueries
		Counter,
	wfApplePortZipInErrors
		Counter,
	wfApplePortNbpInLookUpRequests
		Counter,
	wfApplePortNbpInLookUpReplies
		Counter,
	wfApplePortNbpInBroadcastRequests
		Counter,
	wfApplePortNbpInForwardRequests
		Counter,
	wfApplePortNbpOutLookUpRequests
		Counter,
	wfApplePortNbpOutLookUpReplies
		Counter,
	wfApplePortNbpOutBroadcastRequests
		Counter,
	wfApplePortNbpOutForwardRequests
		Counter,
	wfApplePortNbpRegistrationFailures
		Counter,
	wfApplePortNbpInErrors
		Counter,
	wfApplePortEchoRequests
		Counter,
	wfApplePortEchoReplies
		Counter,
	wfApplePortInterfaceCost
		INTEGER,
	wfApplePortWanBroadcastAddress
		OCTET STRING,
	wfApplePortWanSplitHorizonDisable
		INTEGER,
	wfApplePortZoneFilterType
		INTEGER
}

wfApplePortDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Users perform an SNMP SET
		  operation on this object to create/delete an AppleTalk 
		  interface. The default is create.
		      "
	DEFVAL	{ created }
	::= { wfApplePortEntry 1 }

wfApplePortDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Users perforn an SNMP SET
		  operation on this object to enable/disable an AppleTalk
		  interface.  Default is enabled.
		      "
	DEFVAL	{ enabled }
	::= { wfApplePortEntry 2 }

wfApplePortCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The circuit number for this interface "
	::= { wfApplePortEntry 3 }

wfApplePortState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current state of the AppleTalk port. "
	DEFVAL	{ down }
	::= { wfApplePortEntry 4 }

wfApplePortType OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" wfApplePortType is reserved for future use "
	::= { wfApplePortEntry 5 }

wfApplePortCksumDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Flag to enable/disable the calculation of the
		  DDP checksum for packets sourced by the router
		  over this interface.  This value has no effect 
		  on incoming packets.
		      "
	DEFVAL	{ disabled }
	::= { wfApplePortEntry 6 }

wfApplePortTrEndStation OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" When an interface is running token ring this attribute
		  allows for end station source routing. If the interface
		  is not running token ring the attribute has no meaning.
		      "
	DEFVAL	{ disabled }
	::= { wfApplePortEntry 7 }

wfApplePortGniForever OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" wfApplePortGniForever is ignored. A non-seed interface will send
		  GetNetInfos every 10 seconds until it gets a response.
		      "
	::= { wfApplePortEntry 8 }

wfApplePortAarpFlush OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The maximum age (in minutes) of an aarp entry before it is deleted.
		  Defaults to 12 hours.  Minimum values is five minutes.
		      "
	::= { wfApplePortEntry 9 }

wfApplePortMacAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configured mac address "
	::= { wfApplePortEntry 10 }

wfApplePortNodeId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The AppleTalk node id configured for this port/interface.
		  If PortNodeId or PortNetwork is zero the interface will try to 
		  acquire an address dynamically.
		      "
	::= { wfApplePortEntry 11 }

wfApplePortNetwork OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The AppleTalk network number configured for this port/interface.
		  If PortNodeId or PortNetwork is zero the interface will try to 
		  acquire an address dynamically.
		      "
	::= { wfApplePortEntry 12 }

wfApplePortNetStart OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Network start value in the network range for this interface/port.
		  If this is zero, the port is considered non-seed.
		      "
	::= { wfApplePortEntry 13 }

wfApplePortNetEnd OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Network end value in the network range
		  for this interface/port.
		      "
	::= { wfApplePortEntry 14 }

wfApplePortDfltZone OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The default zone name for this network range/
		  interface. 
		      "
	::= { wfApplePortEntry 15 }

wfApplePortCurMacAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Mac Address used "
	::= { wfApplePortEntry 16 }

wfApplePortCurNodeId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The AppleTalk node id of this port "
	::= { wfApplePortEntry 17 }

wfApplePortCurNetwork OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The network number for this port.  "
	::= { wfApplePortEntry 18 }

wfApplePortCurNetStart OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Network start value in the network range
		  for this port.
		      "
	::= { wfApplePortEntry 19 }

wfApplePortCurNetEnd OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Network end value in the network range
		  for this port.
		      "
	::= { wfApplePortEntry 20 }

wfApplePortCurDfltZone OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The default zone name for this port "
	::= { wfApplePortEntry 21 }

wfApplePortAarpProbeRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of AARP Probe packets received on
		  this interface.
		      "
	::= { wfApplePortEntry 22 }

wfApplePortAarpProbeTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of AARP Probe packets transmitted on
		  this interface.
		      "
	::= { wfApplePortEntry 23 }

wfApplePortAarpReqRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of AARP Request packets received on
		  this interface.
		      "
	::= { wfApplePortEntry 24 }

wfApplePortAarpReqTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of AARP Request packets transmitted on
		  this interface.
		      "
	::= { wfApplePortEntry 25 }

wfApplePortAarpRspRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of AARP Response packets received on
		  this interface.
		      "
	::= { wfApplePortEntry 26 }

wfApplePortAarpRspTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of AARP Response packets transmitted on
		  this interface.
		      "
	::= { wfApplePortEntry 27 }

wfApplePortDdpOutRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of DDP datagrams which were supplied
		  to DDP by local DDP clients in requests for
		  transmission.  Note that this counter does not
		  include any datagrams counted in ddpForwRequests.
		      "
	::= { wfApplePortEntry 28 }

wfApplePortDdpInReceives OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of input datagrams received by DDP,
		  including those received in error.
		      "
	::= { wfApplePortEntry 29 }

wfApplePortDdpInLocalDatagrams OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of input DDP datagrams for which this
		  entity was their final DDP destination.
		      "
	::= { wfApplePortEntry 30 }

wfApplePortDdpNoProtocolHandlers OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of DDP datagrams addressed to this
		  entity that were addressed to an upper layer protocol
		  for which no protocol handler existed.
		      "
	::= { wfApplePortEntry 31 }

wfApplePortDdpTooShortErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of input DDP datagrams dropped because
		  the received data length was less than the data length
		  specified in the DDP header or the received data length
		  was less than the length of the expected DDP header.
		      "
	::= { wfApplePortEntry 32 }

wfApplePortDdpTooLongErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of input DDP datagrams dropped because
		  the received data length was greater than the data length
		  specified in the DDP header or because they exceeded the
		  maximum DDP datagram size.
		      "
	::= { wfApplePortEntry 33 }

wfApplePortDdpChecksumErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of input DDP datagrams for which this
		  DDP entity was their final destination, and which were
		  dropped because of a checksum error.
		      "
	::= { wfApplePortEntry 34 }

wfApplePortDdpForwRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of input datagrams for which this entity was
		  not their final DDP destination, as a result of which an
		  attempt was made to find a route to forward them to that
		  final destination.
		      "
	::= { wfApplePortEntry 35 }

wfApplePortDdpOutNoRoutes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of DDP datagrams dropped because a
		  route could not be found to their final destination.
		      "
	::= { wfApplePortEntry 36 }

wfApplePortDdpBroadcastErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of input DDP datagrams dropped because
		  this entity was not their final destination and they
		  were addressed to the link level broadcast.
		      "
	::= { wfApplePortEntry 37 }

wfApplePortDdpHopCountErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of input DDP datagrams dropped because
		  this entity was not their final destination and their
		  hop count would exceed 15.
		      "
	::= { wfApplePortEntry 38 }

wfApplePortRtmpInDataPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A count of the number of good RTMP data packets
		  received by this entity.
		      "
	::= { wfApplePortEntry 39 }

wfApplePortRtmpOutDataPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A count of the number of RTMP packets sent by this
		  entity.
		      "
	::= { wfApplePortEntry 40 }

wfApplePortRtmpInRequestPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A count of the number of good RTMP Request packets
		  received by this entity.
		      "
	::= { wfApplePortEntry 41 }

wfApplePortRtmpNextIREqualChanges OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A count of the number of times RTMP changes the Next
		  Internet Router in a routing entry because the hop count
		  advertised in a routing tuple was equal to the current
		  hop count for a particular network.
		      "
	::= { wfApplePortEntry 42 }

wfApplePortRtmpNextIRLessChanges OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A count of the number of times RTMP changes the Next
		  Internet Router in a routing entry because the hop count
		  advertised in a routing tuple was less than the current
		  hop count for a particular network.
		      "
	::= { wfApplePortEntry 43 }

wfApplePortRtmpRouteDeletes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A count of the number of times RTMP deletes a route because
		  it was aged out of the table.  This can help to detect
		  routing problems.
		      "
	::= { wfApplePortEntry 44 }

wfApplePortRtmpNetworkMismatchErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times RTMP receives a Data packet from a
		  router who claims to be on a different network than that
		  configured for the receiving port.  This can help to
		  detect configuration errors.
		      "
	::= { wfApplePortEntry 45 }

wfApplePortRtmpRoutingTableOverflows OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times RTMP attempted to add a route
		  to the RTMP table but failed due to overflow.
		      "
	::= { wfApplePortEntry 46 }

wfApplePortZipInZipQueries OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ZIP Queries received by this entity.
		      "
	::= { wfApplePortEntry 47 }

wfApplePortZipInZipReplies OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ZIP Replies received by this entity.
		      "
	::= { wfApplePortEntry 48 }

wfApplePortZipOutZipReplies OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ZIP Replies sent by this entity.
		      "
	::= { wfApplePortEntry 49 }

wfApplePortZipInZipExtendedReplies OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ZIP Extended Replies received by this entity.
		      "
	::= { wfApplePortEntry 50 }

wfApplePortZipOutZipExtendedReplies OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ZIP Extended Replies sent by this entity.
		      "
	::= { wfApplePortEntry 51 }

wfApplePortZipInGetZoneLists OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ZIP GetZoneList transactions received by
		  this entity.
		      "
	::= { wfApplePortEntry 52 }

wfApplePortZipOutGetZoneListReplies OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ZIP GetZoneListReply transactions sent by
		  this entity.
		      "
	::= { wfApplePortEntry 53 }

wfApplePortZipInGetLocalZones OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ZIP GetLocalZone transactions received
		  by this entity.
		      "
	::= { wfApplePortEntry 54 }

wfApplePortZipOutGetLocalZoneReplies OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ZIP GetLocalZoneReply transactions sent
		  by this entity.
		      "
	::= { wfApplePortEntry 55 }

wfApplePortZipInGetMyZones OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" The number of ZIP GetMyZone transactions received by
		  this entity.
		      "
	::= { wfApplePortEntry 56 }

wfApplePortZipOutGetMyZoneReplies OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" The number of ZIP GetMyZoneReply transactions sent by
		  this entity.
		      "
	::= { wfApplePortEntry 57 }

wfApplePortZipZoneConflictErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times a conflict has been detected between
		  this entity's zone information and another entity's
		  zone information.
		      "
	::= { wfApplePortEntry 58 }

wfApplePortZipInGetNetInfos OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ZIP GetNetInfo packets received on this
		  port by this entity.
		      "
	::= { wfApplePortEntry 59 }

wfApplePortZipOutGetNetInfoReplies OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ZIP GetNetInfoReply packets sent out this
		  port by this entity.
		      "
	::= { wfApplePortEntry 60 }

wfApplePortZipZoneOutInvalids OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times this entity has sent a ZIP GetNetInfo
		  Reply with the zone invalid bit set in response to a
		  GetNetInfo Request with an invalid zone name.
		      "
	::= { wfApplePortEntry 61 }

wfApplePortZipAddressInvalids OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times this entity had to broadcast a ZIP
		  GetNetInfo Reply because the GetNetInfo Request had an
		  invalid address.
		      "
	::= { wfApplePortEntry 62 }

wfApplePortZipOutGetNetInfos OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ZIP GetNetInfo packets sent out this port
		  by this entity.
		      "
	::= { wfApplePortEntry 63 }

wfApplePortZipInGetNetInfoReplies OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ZIP GetNetInfoReply packets received on
		  this port by this entity.
		      "
	::= { wfApplePortEntry 64 }

wfApplePortZipOutZipQueries OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ZIP Queries sent by this entity.
		      "
	::= { wfApplePortEntry 65 }

wfApplePortZipInErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ZIP packets received by this entity
		  that were rejected for any error.
		      "
	::= { wfApplePortEntry 66 }

wfApplePortNbpInLookUpRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of NBP LookUp Requests received.
		      "
	::= { wfApplePortEntry 67 }

wfApplePortNbpInLookUpReplies OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of NBP LookUp Replies received.
		      "
	::= { wfApplePortEntry 68 }

wfApplePortNbpInBroadcastRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of NBP Broadcast Requests received.
		      "
	::= { wfApplePortEntry 69 }

wfApplePortNbpInForwardRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of NBP Forward Requests received.
		      "
	::= { wfApplePortEntry 70 }

wfApplePortNbpOutLookUpRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of NBP LookUp Requests sent.
		      "
	::= { wfApplePortEntry 71 }

wfApplePortNbpOutLookUpReplies OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of NBP LookUp Replies sent.
		      "
	::= { wfApplePortEntry 72 }

wfApplePortNbpOutBroadcastRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of NBP Broadcast Requests sent.
		      "
	::= { wfApplePortEntry 73 }

wfApplePortNbpOutForwardRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of NBP Forward Requests sent.
		      "
	::= { wfApplePortEntry 74 }

wfApplePortNbpRegistrationFailures OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times this node experienced a failure in
		  attempting to register an NBP entity.
		      "
	::= { wfApplePortEntry 75 }

wfApplePortNbpInErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of NBP packets received by this entity that were
		  rejected for any error.
		      "
	::= { wfApplePortEntry 76 }

wfApplePortEchoRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of AppleTalk Echo requests received.
		      "
	::= { wfApplePortEntry 77 }

wfApplePortEchoReplies OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of AppleTalk Echo replies sent.
		      "
	::= { wfApplePortEntry 78 }

wfApplePortInterfaceCost OBJECT-TYPE
	SYNTAX	INTEGER {
		cost(15)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" RTMP Cost for this interface.
		      "
	::= { wfApplePortEntry 79 }

wfApplePortWanBroadcastAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Frame Relay, SMDS, or ATM broadcast address
		     "
	::= { wfApplePortEntry 80 }

wfApplePortWanSplitHorizonDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" WAN (Frame Relay or ATM) split horizon enabled
		     "
	DEFVAL	{ enabled }
	::= { wfApplePortEntry 81 }

wfApplePortZoneFilterType OBJECT-TYPE
	SYNTAX	INTEGER {
		allow(1),
		deny(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Controls zone filtering on this interface. An allow indicates that
		  any wfAppleZoneFilterEntry is a zone that is allowed on the
		  interface. A deny indicates that any ZoneFilterEntry is a zone that
		  should not be advertised out this interface.  No ZoneFilterEntrys
		  indicates that all nets and zones are being advertised.
		      "
	DEFVAL	{ deny }
	::= { wfApplePortEntry 82 }

wfAppleLclZoneTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAppleLclZoneEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The Local Zone table describes a list of zone names s
		  serviced by a particular AppleTalk port/interface.  
		  In other words, the list of zone names that are 
		  associated with a particular network range.
		  "
	::= { wfAppletalkGroup 4 }

wfAppleLclZoneEntry OBJECT-TYPE
	SYNTAX	WfAppleLclZoneEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Local Zone table "
	INDEX	{ wfAppleLclZonePortCircuit,
		wfAppleLclZoneIndex }
	::= { wfAppleLclZoneTable 1 }

WfAppleLclZoneEntry ::= SEQUENCE {
	wfAppleLclZoneDelete
		INTEGER,
	wfAppleLclZonePortCircuit
		INTEGER,
	wfAppleLclZoneIndex
		INTEGER,
	wfAppleLclZoneName
		DisplayString
}

wfAppleLclZoneDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter for adding/deleting a
		  zone name to the Local Zone List for a particular
		  AppleTalk network interface.
		     "
	DEFVAL	{ created }
	::= { wfAppleLclZoneEntry 1 }

wfAppleLclZonePortCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The circuit number for the corresponding AppleTalk interface
		  /port for this zone list. 
		      "
	::= { wfAppleLclZoneEntry 2 }

wfAppleLclZoneIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A unique value for this zone name. "
	::= { wfAppleLclZoneEntry 3 }

wfAppleLclZoneName OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" One of the local zone names defined for this/
		  interface. 
		      "
	::= { wfAppleLclZoneEntry 4 }

wfAppleAarpTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAppleAarpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The AppleTalk Address Translation table
		  contains a mapping of AppleTalk Network addresses
		  to its corresponding physical address.
		  "
	::= { wfAppletalkGroup 5 }

wfAppleAarpEntry OBJECT-TYPE
	SYNTAX	WfAppleAarpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Address Mapping table "
	INDEX	{ wfAppleAarpNet,
		wfAppleAarpNode,
		wfAppleAarpIfIndex }
	::= { wfAppleAarpTable 1 }

WfAppleAarpEntry ::= SEQUENCE {
	wfAppleAarpIfIndex
		INTEGER,
	wfAppleAarpNet
		INTEGER,
	wfAppleAarpNode
		INTEGER,
	wfAppleAarpPhysAddress
		OCTET STRING
}

wfAppleAarpIfIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The unique value for this interface/cct. This
		  value is the same interface as identified by 
		  the value of ifIndex.
		      "
	::= { wfAppleAarpEntry 1 }

wfAppleAarpNet OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The host's AppleTalk address (Net.Nodeid). This
		  address corresponds to the media-dependent 'physical' 
		  address for this host.
		      "
	::= { wfAppleAarpEntry 2 }

wfAppleAarpNode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The host's AppleTalk address (Net.Nodeid). This
		  address corresponds to the media-dependent 'physical' 
		  address for this host.
		      "
	::= { wfAppleAarpEntry 3 }

wfAppleAarpPhysAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The media-dependent 'physical' address. "
	::= { wfAppleAarpEntry 4 }

wfAppleZipTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAppleZipEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The Zone Information table for reachable AppleTalk
		  Networks.
		  "
	::= { wfAppletalkGroup 6 }

wfAppleZipEntry OBJECT-TYPE
	SYNTAX	WfAppleZipEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Zone Information table "
	INDEX	{ wfAppleZipZoneNetStart,
		wfAppleZipIndex }
	::= { wfAppleZipTable 1 }

WfAppleZipEntry ::= SEQUENCE {
	wfAppleZipZoneNetStart
		INTEGER,
	wfAppleZipZoneNetEnd
		INTEGER,
	wfAppleZipIndex
		INTEGER,
	wfAppleZipZoneName
		DisplayString,
	wfAppleZipZoneState
		INTEGER
}

wfAppleZipZoneNetStart OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The network that starts the range for this entry. "
	::= { wfAppleZipEntry 1 }

wfAppleZipZoneNetEnd OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The network that ends the range for this entry. "
	::= { wfAppleZipEntry 2 }

wfAppleZipIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The unique value for this zone name.  "
	::= { wfAppleZipEntry 3 }

wfAppleZipZoneName OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The ASCII xone name of this entry.  "
	::= { wfAppleZipEntry 4 }

wfAppleZipZoneState OBJECT-TYPE
	SYNTAX	INTEGER {
		valid(1),
		invalid(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The state of the ZIP entry.  "
	::= { wfAppleZipEntry 5 }

wfAppleZoneFilterTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAppleZoneFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The zone filter table describes a list of zone names
		  filtered on a given AppleTalk port/interface.
		  "
	::= { wfAppletalkGroup 7 }

wfAppleZoneFilterEntry OBJECT-TYPE
	SYNTAX	WfAppleZoneFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Zone Filter table "
	INDEX	{ wfAppleZoneFilterIndex }
	::= { wfAppleZoneFilterTable 1 }

WfAppleZoneFilterEntry ::= SEQUENCE {
	wfAppleZoneFilterDelete
		INTEGER,
	wfAppleZoneFilterCircuit
		INTEGER,
	wfAppleZoneFilterIpAddress
		IpAddress,
	wfAppleZoneFilterCircuitType
		INTEGER,
	wfAppleZoneFilterIndex
		INTEGER,
	wfAppleZoneFilterName
		DisplayString
}

wfAppleZoneFilterDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter for adding/deleting a
		  zone name to the filter list for a particular
		  AppleTalk network interface.
		      "
	DEFVAL	{ created }
	::= { wfAppleZoneFilterEntry 1 }

wfAppleZoneFilterCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The circuit number for the corresponding AppleTalk interface
		  for filtered zone entry.  This is only valid if
		  wfAppleZoneFilterCircuitType is RTMP
		      "
	::= { wfAppleZoneFilterEntry 2 }

wfAppleZoneFilterIpAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The IP address for the corresponding AURP interface for filtered
		  zone entry.  This is only valid if wfAppleZoneFilterCircuitType
		  is AURP.
		      "
	::= { wfAppleZoneFilterEntry 3 }

wfAppleZoneFilterCircuitType OBJECT-TYPE
	SYNTAX	INTEGER {
		rtmp(1),
		aurp(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The type of the circuit the filter is applied on. If RTMP, then
		  wfAppleZoneFilterCircuit is used.  If AURP, then
		  wfAppleZoneFilterIpAddress is used.
		      "
	DEFVAL	{ rtmp }
	::= { wfAppleZoneFilterEntry 4 }

wfAppleZoneFilterIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A unique value for this filtered zone name. "
	::= { wfAppleZoneFilterEntry 5 }

wfAppleZoneFilterName OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" One of the zone names filtered on this/
		  interface.
		      "
	::= { wfAppleZoneFilterEntry 6 }

wfAppleAurpBase	OBJECT IDENTIFIER ::= { wfAppletalkGroup 8 }

wfAppleAurpBaseDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter for determining whether
		  or not AURP is configured on this box.
		     "
	DEFVAL	{ created }
	::= { wfAppleAurpBase 1 }

wfAppleAurpBaseDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for determining whether
		  or not to startup AURP.
		     "
	DEFVAL	{ enabled }
	::= { wfAppleAurpBase 2 }

wfAppleAurpBaseState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpres(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This parameter relfects the current state of AURP. "
	DEFVAL	{ down }
	::= { wfAppleAurpBase 3 }

wfAppleAurpBaseDomain OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The domain identfier for the domain that this
		       router resides in. "
	::= { wfAppleAurpBase 4 }

wfAppleAurpBaseIpAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The IP address configured on this router that AURP should use
		  for all of its connections 
		     "
	::= { wfAppleAurpBase 5 }

wfAppleAurpBasePromiscuous OBJECT-TYPE
	SYNTAX	INTEGER {
		notpromisc(1),
		promisc(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" AURP Promiscuous mode not supported. "
	DEFVAL	{ notpromisc }
	::= { wfAppleAurpBase 6 }

wfAppleAurpTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAppleAurpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Each AURP connection has an entry in this table "
	::= { wfAppletalkGroup 9 }

wfAppleAurpEntry OBJECT-TYPE
	SYNTAX	WfAppleAurpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the AURP connection table. "
	INDEX	{ wfAppleAurpEntryIpAddress }
	::= { wfAppleAurpTable 1 }

WfAppleAurpEntry ::= SEQUENCE {
	wfAppleAurpEntryDelete
		INTEGER,
	wfAppleAurpEntryDisable
		INTEGER,
	wfAppleAurpEntryState
		INTEGER,
	wfAppleAurpEntryIpAddress
		IpAddress,
	wfAppleAurpEntryZoneFilterType
		INTEGER
}

wfAppleAurpEntryDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete para1meter. Users perform an SNMP SET
		  operation on this object to create/delete an AppleTalk 
		  AURP interface. The default is create.
		      "
	DEFVAL	{ created }
	::= { wfAppleAurpEntry 1 }

wfAppleAurpEntryDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Users perforn an SNMP SET
		  operation on this object to enable/disable an AppleTalk
		  AURP interface.  Default is enabled.
		      "
	DEFVAL	{ enabled }
	::= { wfAppleAurpEntry 2 }

wfAppleAurpEntryState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current state of the Aurp Entry. "
	DEFVAL	{ down }
	::= { wfAppleAurpEntry 3 }

wfAppleAurpEntryIpAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Ip address of the remote AURP router with which the connection
		  will be made "
	::= { wfAppleAurpEntry 4 }

wfAppleAurpEntryZoneFilterType OBJECT-TYPE
	SYNTAX	INTEGER {
		allow(1),
		deny(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" controls zone filtering on this interface. An allow indicates that
		  any wfAppleZoneFilterEntry is a zone that is allowed on the
		  interface. A deny indicates that any ZoneFilterEntry is a zone that
		  should not be advertised out this interface.  No ZoneFilterEntrys
		  indicates that all nets and zones are being advertised.
		      "
	DEFVAL	{ deny }
	::= { wfAppleAurpEntry 5 }

wfAtm		OBJECT IDENTIFIER ::= { wfAtmGroup 1 }

wfAtmDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indication to create or delete an ATM Base record.
		 "
	DEFVAL	{ created }
	::= { wfAtm 1 }

wfAtmInterfaceNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of ATM interfaces in the Wellfleet Router (entries
		    in the wfAtmInterfaceTable), regardless of their current state,
		    present on this system. "
	::= { wfAtm 2 }

wfAtmOverallStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		healthy(1),
		interfaceanomaly(2),
		otheranomaly(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Overall status of ATM interfaces in the Wellfleet Router(entries
		    in the wfAtmInterfaceTable) present on this system. Healthy indicates
		    each configured interfaces are in the UP state.  An interface
		    anomaly is indicative of one or more of the configured 
		    interfaces being in the DOWN State.  Other Anomaly is indicative
		    of one or more ATM interfaces being in the INIT or NOT PRESENT
		    state "
	DEFVAL	{ healthy }
	::= { wfAtm 3 }

wfAtmInterfaceTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAtmInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" ATM Interface Table - Router Resident
		  The statistical and configuration parameters for an ATM Interface. 
		  There is one MIB instance of this record per Sync or HSSI line
		  configured for ATM DXI support. The Physical ATM DXI interface 
		  is managed via this table.
		"
	::= { wfAtmGroup 2 }

wfAtminterfaceEntry OBJECT-TYPE
	SYNTAX	WfAtmInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The attributes for a particular ATM DXI Interface"
	INDEX	{ wfAtmInterfaceLineNumber,
		wfAtmInterfaceLLIndex }
	::= { wfAtmInterfaceTable 1 }

WfAtmInterfaceEntry ::= SEQUENCE {
	wfAtmInterfaceDelete
		INTEGER,
	wfAtmInterfaceDisable
		INTEGER,
	wfAtmInterfaceState
		INTEGER,
	wfAtmInterfaceCircuit
		INTEGER,
	wfAtmInterfaceMaxSupportedVCs
		INTEGER,
	wfAtmInterfaceVCsInUse
		INTEGER,
	wfAtmInterfaceDescr
		DisplayString,
	wfAtmInterfaceType
		INTEGER,
	wfAtmInterfaceLastChange
		TimeTicks,
	wfAtmInterfacePlcp
		OBJECT IDENTIFIER,
	wfAtmMpeNull
		INTEGER,
	wfAtmCsNull
		INTEGER,
	wfAtmInterfaceMulticast
		INTEGER,
	wfAtmDrops
		Counter,
	wfAtmInterfaceLmiDisable
		INTEGER,
	wfAtmInterfaceLineNumber
		INTEGER,
	wfAtmInterfaceLLIndex
		INTEGER
}

wfAtmInterfaceDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indication to create or delete an ATM DXI interface. This will
		   remove ATMNET access over this interface The ATM Interface
		   entry  instance is removed from the MIB in this case.
		"
	DEFVAL	{ created }
	::= { wfAtminterfaceEntry 1 }

wfAtmInterfaceDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates when an ATM DXI interface is to be enabled or disabled.
		   Disabling will disable ATM Access over this interface. The ATM 
		   Interface instance is NOT removed from the MIB in this case.
		"
	DEFVAL	{ enabled }
	::= { wfAtminterfaceEntry 2 }

wfAtmInterfaceState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the state for this interface.
		   The state indicates Not Present when the interface has been
		   configured but has not been initialized.  Init state indicates
		   that the interface is in the process of being initialized by the
		   system.  Up state indicates that the interface is operating 
		   normally.  Down state indicates that the ATM DXI interface is
		   physically or logically disabled.
		"
	DEFVAL	{ notpresent }
	::= { wfAtminterfaceEntry 3 }

wfAtmInterfaceCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Wellfleet circuit number of this entry "
	::= { wfAtminterfaceEntry 4 }

wfAtmInterfaceMaxSupportedVCs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Maximum number of VCs allowed on this interface. Initially set by
		configuration system for PVCs only  "
	DEFVAL	{ 512 }
	::= { wfAtminterfaceEntry 5 }

wfAtmInterfaceVCsInUse OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of VCs that are currently configured on this interface "
	::= { wfAtminterfaceEntry 6 }

wfAtmInterfaceDescr OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" A textual string describing this ATM interface. "
	::= { wfAtminterfaceEntry 7 }

wfAtmInterfaceType OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		ds1(2),
		ds3(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The transmission type used at the ATM interface.
		 "
	DEFVAL	{ other }
	::= { wfAtminterfaceEntry 8 }

wfAtmInterfaceLastChange OBJECT-TYPE
	SYNTAX	TimeTicks
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The value of sysUpTime at the time the interface
		   entered its current operational state. If the current
		   state was entered prior to the last re-initialization
		   of the local network management subsystem, then this
		   object contains a zero value.
		"
	::= { wfAtminterfaceEntry 9 }

wfAtmInterfacePlcp OBJECT-TYPE
	SYNTAX	OBJECT IDENTIFIER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Identifies the OID of the PLCP object in the MIB
		   If no additional transmission and/or media
		   specific information is available, this object has
		   the value { 0 0 }. 
		"
	::= { wfAtminterfaceEntry 10 }

wfAtmMpeNull OBJECT-TYPE
	SYNTAX	INTEGER {
		present(1),
		null(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Used to select Null or Present Multi Protocol Encapsulation
		   (RFC 1294) layer for this Interface  "
	DEFVAL	{ present }
	::= { wfAtminterfaceEntry 11 }

wfAtmCsNull OBJECT-TYPE
	SYNTAX	INTEGER {
		present(1),
		null(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Used to enable/disable CS_PDU encapsulation on a per Interface basis "
	DEFVAL	{ present }
	::= { wfAtminterfaceEntry 12 }

wfAtmInterfaceMulticast OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This indicates whether the ATM service provider offers  multicast service "
	DEFVAL	{ disabled }
	::= { wfAtminterfaceEntry 13 }

wfAtmDrops OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The cumulative count of packet drops on this ATM Interface. "
	::= { wfAtminterfaceEntry 14 }

wfAtmInterfaceLmiDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates when an LMI entry is to be enabled or disabled. Disabling
		   will temporarily disable the ability to report 
		   CSU/DSU traps and the ability to retrieve statistical information 
		   from the CSU/DSU.  The ATM LMI instance is NOT removed from the MIB 
		   in this case.
		"
	DEFVAL	{ enabled }
	::= { wfAtminterfaceEntry 15 }

wfAtmInterfaceLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the line number of the
		   Wellfleet router. "
	::= { wfAtminterfaceEntry 16 }

wfAtmInterfaceLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the port's
		   llindex number. The Lower layer index uniquely identifies the lower 
		   layer in cases where the lower layer may be something other than the
		   physical layer. "
	::= { wfAtminterfaceEntry 17 }

wfAtmLmiTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAtmLmiEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"ATM Local Management Interface Table - Router Resident
		  The statistical and configuration parameters for an ATM DXI 
		  Local Management Interface.   There is one LMI MIB instance per Sync 
		  or HSSI line configured for ATM DXI support. The LMI interface is 
		  managed via this table.
		"
	::= { wfAtmGroup 3 }

wfAtmlmiEntry OBJECT-TYPE
	SYNTAX	WfAtmLmiEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The attributes for a particular ATM Lmi"
	INDEX	{ wfAtmLmiLineNumber,
		wfAtmLmiLLIndex }
	::= { wfAtmLmiTable 1 }

WfAtmLmiEntry ::= SEQUENCE {
	wfAtmLmiState
		INTEGER,
	wfAtmLmiCircuit
		INTEGER,
	wfAtmLmiNoVCErrors
		Counter,
	wfAtmLmiProxyRequests
		Counter,
	wfAtmLmiCsuDsuResponses
		Counter,
	wfAtmLmiCsuDsuTraps
		Counter,
	wfAtmLmiOtherErrors
		Counter,
	wfAtmLmiLineNumber
		INTEGER,
	wfAtmLmiLLIndex
		INTEGER
}

wfAtmLmiState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the state of the LMI for this interface
		   The state indicates Not Present when the LMI has been
		   configured but has not been initialized.  Init state indicates
		   that the LMI is in the process of being initialized by the
		   system.  Up state indicates that the LMI is operating 
		   normally.  Down state indicates that the LMI is
		   physically or logically disabled.
		"
	DEFVAL	{ notpresent }
	::= { wfAtmlmiEntry 1 }

wfAtmLmiCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The circuit number of this entry"
	::= { wfAtmlmiEntry 2 }

wfAtmLmiNoVCErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of Frames dropped that couldn't be associated with
		the LMI VPI/VCI "
	::= { wfAtmlmiEntry 3 }

wfAtmLmiProxyRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of SNMP Proxy Requests "
	::= { wfAtmlmiEntry 4 }

wfAtmLmiCsuDsuResponses OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of CSU/DSU SNMP Responses to Proxy Requests "
	::= { wfAtmlmiEntry 5 }

wfAtmLmiCsuDsuTraps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of CSU/DSU SNMP Traps Received "
	::= { wfAtmlmiEntry 6 }

wfAtmLmiOtherErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of frames dropped to format or other errors. "
	::= { wfAtmlmiEntry 7 }

wfAtmLmiLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the line number of the
		   Wellfleet router. "
	::= { wfAtmlmiEntry 8 }

wfAtmLmiLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the port's llindex
		   number. The Lower layer index uniquely identifies the lower 
		   layer in cases where the lower layer may be something other than the
		   physical layer.  "
	::= { wfAtmlmiEntry 9 }

wfAtmPlcpTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAtmPlcpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The ATM PLCP Table - CSU/DSU Resident
		The PLCP object reflects information about either DS1 or DS3
		PLCP framing status and performance.  There is one instance of
		this object for every ATM DS1 or DS3 UNI.
		The PLCP object is separated from the other ATM objects for
		two reasons.  First, there may be ATM UNIs which use physical
		media other than DS1 or DS3, and thus the PLCP object may not
		apply to them.  Second, the PLCP object may also be applied
		towards management of SMDS Interfaces (SIPs). 
		This PLCP object is essentially a superset of the PLCP object
		described in the Internet Draft MIB for SMDS (SIPs).  It contains
		variables of interest to some ATM service providers and customers.
		"
	::= { wfAtmGroup 4 }

wfAtmPlcpEntry OBJECT-TYPE
	SYNTAX	WfAtmPlcpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per linenumber/llindex PLCP objects "
	INDEX	{ wfAtmPlcpLineNumber,
		wfAtmPlcpLLIndex }
	::= { wfAtmPlcpTable 1 }

WfAtmPlcpEntry ::= SEQUENCE {
	wfAtmPlcpCct
		INTEGER,
	wfAtmPlcpPhysical
		OBJECT IDENTIFIER,
	wfAtmPlcpLof
		INTEGER,
	wfAtmPlcpLofCFA
		INTEGER,
	wfAtmPlcpYellow
		INTEGER,
	wfAtmPlcpYellowCFA
		INTEGER,
	wfAtmPlcpStatus
		INTEGER,
	wfAtmPlcpSeconds
		Counter,
	wfAtmPlcpBipErrors
		Counter,
	wfAtmPlcpBipESecs
		Counter,
	wfAtmPlcpBipSESecs
		Counter,
	wfAtmPlcpFebes
		Counter,
	wfAtmPlcpFebeESecs
		Counter,
	wfAtmPlcpFebeSESecs
		Counter,
	wfAtmPlcpFrameErrors
		Counter,
	wfAtmPlcpSevereFrameErrors
		Counter,
	wfAtmPlcpSEFS
		Counter,
	wfAtmPlcpUAS
		Counter,
	wfAtmPlcpLineNumber
		INTEGER,
	wfAtmPlcpLLIndex
		INTEGER
}

wfAtmPlcpCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Identifies the DS1 or DS3 PLCP port for which this entry
		        contains information.  This corresponds to the Wellfleet 
		        circuit number "
	::= { wfAtmPlcpEntry 1 }

wfAtmPlcpPhysical OBJECT-TYPE
	SYNTAX	OBJECT IDENTIFIER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Identifies the OID of the first object in the standard
		        DS1 or DS3 MIB "
	::= { wfAtmPlcpEntry 2 }

wfAtmPlcpLof OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" True if Loss of Frame has been detected "
	DEFVAL	{ false }
	::= { wfAtmPlcpEntry 3 }

wfAtmPlcpLofCFA OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" True if Loss of Frame has been detected over the CFA time
		        period "
	DEFVAL	{ false }
	::= { wfAtmPlcpEntry 4 }

wfAtmPlcpYellow OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" True if PLCP Yellow (Remote Alarm Indication) has been detected "
	DEFVAL	{ false }
	::= { wfAtmPlcpEntry 5 }

wfAtmPlcpYellowCFA OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" True if PLCP Yellow (Remote Alarm Indication) has been detected
		        over the CFA time period "
	DEFVAL	{ false }
	::= { wfAtmPlcpEntry 6 }

wfAtmPlcpStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		connected(1),
		up(2),
		down(3),
		other(4),
		outofframe(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The value of this variable indicates the PLCP
		     status as indicated by the three-bit PLCP LSS
		     code received from the remote end.  Connected is
		     LSS code #0, linkUp is LSS code #6, and linkDown is
		     code #3.  OtherCode means that one of the other five
		     possible code values is being received.  OutOfFrame
		     means that the PLCP is in the out of frame state,
		     and therefore there is no code being received.
		        "
	DEFVAL	{ down }
	::= { wfAtmPlcpEntry 7 }

wfAtmPlcpSeconds OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of seconds elapsed since event counting
		     began or since the counters were last cleared.  The
		     implementation may optionally allow this variable to
		     be set.  If set, the set value is ignored, and this
		     variable and all other event counters for this
		     object are reset to zero.
		        "
	::= { wfAtmPlcpEntry 8 }

wfAtmPlcpBipErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of PLCP Bit Interleaved Parity (BIP)
		     errors detected.
		        "
	::= { wfAtmPlcpEntry 9 }

wfAtmPlcpBipESecs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" BIP Errored Seconds. The count of seconds during
		     which one or more BIP errors were detected.
		        "
	::= { wfAtmPlcpEntry 10 }

wfAtmPlcpBipSESecs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" BIP Severely Errored Seconds. The count of seconds
		     during which five (5) or more BIP errors were detected.
		        "
	::= { wfAtmPlcpEntry 11 }

wfAtmPlcpFebes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of PLCP Far End Block Errors (FEBE)
		     detected.
		        "
	::= { wfAtmPlcpEntry 12 }

wfAtmPlcpFebeESecs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" FEBE Errored Seconds. The count of seconds during
		     which one or more FEBE errors were detected.
		        "
	::= { wfAtmPlcpEntry 13 }

wfAtmPlcpFebeSESecs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" FEBE Severely Errored Seconds. The count of seconds
		     during which five (5) or more FEBE errors were detected.
		        "
	::= { wfAtmPlcpEntry 14 }

wfAtmPlcpFrameErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of PLCP Frame bit errors detected.
		        "
	::= { wfAtmPlcpEntry 15 }

wfAtmPlcpSevereFrameErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of PLCP Severe Frame errors (aka Out Of
		     Frame Events) detected.
		        "
	::= { wfAtmPlcpEntry 16 }

wfAtmPlcpSEFS OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Severely Errored Framing Seconds. The count of
		     seconds during which one or more PLCP Severe Frame
		     errors were detected.
		        "
	::= { wfAtmPlcpEntry 17 }

wfAtmPlcpUAS OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Unavailable Seconds. The count of seconds during
		     which the PLCP service was declared to be unavailable.
		        "
	::= { wfAtmPlcpEntry 18 }

wfAtmPlcpLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the line number
		 of the Wellfleet router. "
	::= { wfAtmPlcpEntry 19 }

wfAtmPlcpLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the port's
		 llindex. The Lower layer index uniquely identifies the lower 
		    layer in cases where the lower layer may be something other than the
		 physical layer."
	::= { wfAtmPlcpEntry 20 }

wfAtmUniTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAtmUniEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The ATM UNI Table - CSU/DSU Resident
		The ATM User Network Interface (UNI) object reflects information
		about a particular ATM UNI.  In particular it contains information,
		both configuration and performance, from the 'ATM' or Cell layer
		of the ATM protocol hierarchy.  It optionally keeps some information
		on a per-VPI/VCI basis.  It 'points to' its associated
		physical layer object, for example the DS1 or DS3 PLCP object.
		It also 'points to' the (one or more) higher layer object(s),
		namely the ATM Adaptation Layer (AAL) object(s) which further
		process the ATM Cells.
		It should be noted that in the ATM UNI MIB, the receive (transmit)
		direction refers to data received from (transmitted to)
		the ATM UNI interface.
		 ** For DL200 and DL3200 there is only one ATM UNI per DL unit
		 ** and only one AAL object (specifically VBR) per ATM UNI.
		"
	::= { wfAtmGroup 5 }

wfAtmUniEntry OBJECT-TYPE
	SYNTAX	WfAtmUniEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per linenumber/llindex User Network Interface (UNI) objects -
		    wfAtmUniLineNumber and wfAtmUniLLIndex corresponds to Wellfleet 
		    linenumber/llindex number "
	INDEX	{ wfAtmUniLineNumber,
		wfAtmUniLLIndex }
	::= { wfAtmUniTable 1 }

WfAtmUniEntry ::= SEQUENCE {
	wfAtmUniCct
		INTEGER,
	wfAtmUniPhysical
		OBJECT IDENTIFIER,
	wfAtmUniAal
		OBJECT IDENTIFIER,
	wfAtmUniSeconds
		Counter,
	wfAtmUniLineNumber
		INTEGER,
	wfAtmUniLLIndex
		INTEGER
}

wfAtmUniCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This corresponds to the Wellfleet circuit number "
	::= { wfAtmUniEntry 1 }

wfAtmUniPhysical OBJECT-TYPE
	SYNTAX	OBJECT IDENTIFIER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Identifies the OID of the first object in the standard
		        DS1 or DS3 MIB corresponding to this ATM UNI port "
	::= { wfAtmUniEntry 2 }

wfAtmUniAal OBJECT-TYPE
	SYNTAX	OBJECT IDENTIFIER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Identifies the AAL MIB corresponding to this ATM UNI port.
		        There is only one AAL currently for the DXI application.  "
	::= { wfAtmUniEntry 3 }

wfAtmUniSeconds OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The count of seconds elapsed since event counting
		 began or since the counters were last cleared.  The
		 implementation may optionally allow this variable to
		 be set.  If set, the set value is ignored, and this
		    variable and all other event counters for this
		 object are reset to zero.
		        "
	::= { wfAtmUniEntry 4 }

wfAtmUniLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the line number
		 of the Wellfleet router. "
	::= { wfAtmUniEntry 5 }

wfAtmUniLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the port's llindex.
		 The Lower layer index uniquely identifies the lower 
		 layer in cases where the lower layer may be something other than the
		 physical layer. "
	::= { wfAtmUniEntry 6 }

wfAtmUniAtmTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAtmUniAtmEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The ATM UNIATM Table CSU/DSU Resident
		   This list contains ATM Layer parameters, one entry
		   per ATM UNI port.  The counts maintained in this table
		   are totals for the UNI, across all VPI/VCIs.
		"
	::= { wfAtmGroup 6 }

wfAtmUniAtmEntry OBJECT-TYPE
	SYNTAX	WfAtmUniAtmEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per linenumber/llindex UNI ATM Layer objects -
		    wfAtmUniAtmLineNumber and wfAtmUniAtmLLIndex corresponds to 
		    Wellfleet  linenumber/llindex number "
	INDEX	{ wfAtmUniAtmLineNumber,
		wfAtmUniAtmLLIndex }
	::= { wfAtmUniAtmTable 1 }

WfAtmUniAtmEntry ::= SEQUENCE {
	wfAtmUniAtmCct
		INTEGER,
	wfAtmUniAtmNoBuffers
		Counter,
	wfAtmUniAtmHECs
		Counter,
	wfAtmUniAtmCHECs
		Counter,
	wfAtmUniAtmNullCells
		Counter,
	wfAtmUniAtmMisdeliveredCells
		Counter,
	wfAtmUniAtmReceives
		Counter,
	wfAtmUniAtmTransmits
		Counter,
	wfAtmUniAtmLineNumber
		INTEGER,
	wfAtmUniAtmLLIndex
		INTEGER
}

wfAtmUniAtmCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The ATM UNI port for which corresponds to the Wellfleet
		        circuit number "
	::= { wfAtmUniAtmEntry 1 }

wfAtmUniAtmNoBuffers OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Received ATM cells discarded due to the lack of
		        available cell buffers "
	::= { wfAtmUniAtmEntry 2 }

wfAtmUniAtmHECs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Received ATM cells discarded due to an uncorrected
		        HEC  "
	::= { wfAtmUniAtmEntry 3 }

wfAtmUniAtmCHECs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Received ATM cells for which a HEC error was detected
		        and corrected   "
	::= { wfAtmUniAtmEntry 4 }

wfAtmUniAtmNullCells OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Received Null (unassigned , empty) cells  "
	::= { wfAtmUniAtmEntry 5 }

wfAtmUniAtmMisdeliveredCells OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Received cells with an invalid VPI/VCI and were discarded "
	::= { wfAtmUniAtmEntry 6 }

wfAtmUniAtmReceives OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Valid (non-null) ATM Cells received at this layer and passed
		        up  "
	::= { wfAtmUniAtmEntry 7 }

wfAtmUniAtmTransmits OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Valid (non-null) ATM Cells transmitted at this layer and passed
		        down to the PLCP layer  "
	::= { wfAtmUniAtmEntry 8 }

wfAtmUniAtmLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the line number
		 of the Wellfleet router. "
	::= { wfAtmUniAtmEntry 9 }

wfAtmUniAtmLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the port's llindex.
		 The Lower layer index uniquely identifies the lower 
		 layer in cases where the lower layer may be something other than the
		 physical layer. "
	::= { wfAtmUniAtmEntry 10 }

wfAtmVbrTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAtmVbrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The ATM VBR Table - CSU/DSU Resident
		 The ATM Variable Bit Rate (VBR) object is one of several types
		 of ATM Adaptation Layer (AAL) objects.
		 The ATM VBR object reflects information about a VBR service
		 carried by an ATM UNI on behalf of a DTE interface (e.g. a DXI).
		 In particular, it contains both configuration and performance
		 information about the Segmentation and Reassembly (SAR) sublayer
		 and the Convergence Sublayer (CS).
		 Each instance of the VBR object has only one corresponding DTE
		 interface, and only one corresponding ATM UNI, although it may
		 correspond to several VPI/VCIs within a particular ATM UNI.
		 The VBR object optionally keeps some information
		 on a per-VPI/VCI basis.
		 It should be noted that in the ATM VBR MIB, the receive (transmit)
		 direction refers to data received from (transmitted to)
		 the ATM UNI interface.
		 ** For DL200 and DL3200 DSUs, there is only one ATM UNI per DSU
		 ** and only one AAL object (specifically VBR) per ATM UNI.
		 ** For these products, the DSU does not perform the
		 ** integrity checks for the VBR CS layer, and thus will not
		 ** provide all variables for the VBR CS table.  The Router/Host
		 ** is expected to perform these checks and provide these variables.
		"
	::= { wfAtmGroup 8 }

wfAtmVbrEntry OBJECT-TYPE
	SYNTAX	WfAtmVbrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per linenumber/llindex VBR AAL objects -
		    wfAtmVbrLineNumber and wfAtmVbrLLIndex corresponds to 
		    Wellfleet  linenumber/llindex number "
	INDEX	{ wfAtmVbrLineNumber,
		wfAtmVbrLLIndex }
	::= { wfAtmVbrTable 1 }

WfAtmVbrEntry ::= SEQUENCE {
	wfAtmVbrCct
		INTEGER,
	wfAtmVbrAtmUni
		OBJECT IDENTIFIER,
	wfAtmVbrDxi
		OBJECT IDENTIFIER,
	wfAtmVbrSeconds
		Counter,
	wfAtmVbrLineNumber
		INTEGER,
	wfAtmVbrLLIndex
		INTEGER
}

wfAtmVbrCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Identifies the ATM VBR object which corresponds to the
		 Wellfleet circuit number "
	::= { wfAtmVbrEntry 1 }

wfAtmVbrAtmUni OBJECT-TYPE
	SYNTAX	OBJECT IDENTIFIER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Identifies the OID of the first object in the ATM UNI
		        MIB corresponding to this ATM VBR-AAL "
	::= { wfAtmVbrEntry 2 }

wfAtmVbrDxi OBJECT-TYPE
	SYNTAX	OBJECT IDENTIFIER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Identifies the DXI MIB corresponding to this ATM VBR-AAL.
		        There is only one AAL currently for the DXI application.  "
	::= { wfAtmVbrEntry 3 }

wfAtmVbrSeconds OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 The count of seconds elapsed since event counting
		 began or since the counters were last cleared.  The
		 implementation may optionally allow this variable to
		 be set.  If set, the set value is ignored, and this
		 variable and all other event counters for this
		 object are reset to zero.
		        "
	::= { wfAtmVbrEntry 4 }

wfAtmVbrLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the line number
		 of the Wellfleet router. "
	::= { wfAtmVbrEntry 5 }

wfAtmVbrLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the port's llindex.
		 The Lower layer index uniquely identifies the lower 
		 layer in cases where the lower layer may be something other than the
		 physical layer."
	::= { wfAtmVbrEntry 6 }

wfAtmVbrSarTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAtmVbrSarEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The ATM VBR SAR Table CSU/DSU Resident
		This table contains ATM VBR-AAL, SAR Layer parameters,
		the entry per ATM VBR-AAL object. The counts maintained
		in this table are totals for the VBR, across all
		VPI/VCIs within the VBR.
		"
	::= { wfAtmGroup 9 }

wfAtmVbrSarEntry OBJECT-TYPE
	SYNTAX	WfAtmVbrSarEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per linenumber/llindex VBR AAL SAR sublayer objects -
		    wfAtmSarLineNumber and wfAtmSarLLIndex corresponds to 
		    Wellfleet  linenumber/llindex number "
	INDEX	{ wfAtmVbrSarLineNumber,
		wfAtmVbrSarLLIndex }
	::= { wfAtmVbrSarTable 1 }

WfAtmVbrSarEntry ::= SEQUENCE {
	wfAtmVbrSarCct
		INTEGER,
	wfAtmVbrSarAssemblyTimer
		INTEGER,
	wfAtmVbrSarCrc10Errors
		Counter,
	wfAtmVbrSarCellMidErrors
		Counter,
	wfAtmVbrSarCsPduSizeTooBigErrors
		Counter,
	wfAtmVbrSarNoBufferErrors
		Counter,
	wfAtmVbrSarComNoProcessErrors
		Counter,
	wfAtmVbrSarEomNoProcessErrors
		Counter,
	wfAtmVbrSarCellSequenceErrors
		Counter,
	wfAtmVbrSarCellLengthErrors
		Counter,
	wfAtmVbrSarBomBeforeEomErrors
		Counter,
	wfAtmVbrSarTimeouts
		Counter,
	wfAtmVbrSarLengthExceeds
		Counter,
	wfAtmVbrSarReceives
		Counter,
	wfAtmVbrSarTransmits
		Counter,
	wfAtmVbrSarLineNumber
		INTEGER,
	wfAtmVbrSarLLIndex
		INTEGER
}

wfAtmVbrSarCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" identifies the VBR_SAR object which corresponds to the
		        Wellfleet circuit number "
	::= { wfAtmVbrSarEntry 1 }

wfAtmVbrSarAssemblyTimer OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(65535)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The maximum time period (milliseconds) allowed for CS_PDU
		        assembly process to complete.  This is the time between 
		        receipt of a BOM and receipt of an EOM SAR_PDU. "
	::= { wfAtmVbrSarEntry 2 }

wfAtmVbrSarCrc10Errors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of received SAR_PDUs discarded due to CRC10 error "
	::= { wfAtmVbrSarEntry 3 }

wfAtmVbrSarCellMidErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of received SAR_PDUs discarded due to an invalid
		        MID field value "
	::= { wfAtmVbrSarEntry 4 }

wfAtmVbrSarCsPduSizeTooBigErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of received SAR_PDUs discarded due to CS_PDU
		        size is too big . NOTE: This attribute needs to be moved to
		        router based CS object. "
	::= { wfAtmVbrSarEntry 5 }

wfAtmVbrSarNoBufferErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" No CS_PDU assembly buffer space "
	::= { wfAtmVbrSarEntry 6 }

wfAtmVbrSarComNoProcessErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Received COM SAR_PDUs discarded due to lack of an active
		        CS_PDU assembly process "
	::= { wfAtmVbrSarEntry 7 }

wfAtmVbrSarEomNoProcessErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Received EOM SAR_PDUs discarded due to lack of an active
		        CS_PDU assembly process "
	::= { wfAtmVbrSarEntry 8 }

wfAtmVbrSarCellSequenceErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of active CS_PDU assembly processes
		 closed (aborted, accumulation discarded) due to
		 detecting a SAR sequence number error in a
		 received SAR_PDU.
		        "
	::= { wfAtmVbrSarEntry 9 }

wfAtmVbrSarCellLengthErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of active CS_PDU assembly processes
		 closed (aborted, accumulation discarded) due to
		 detecting a length field error in a
		 received SAR_PDU.
		        "
	::= { wfAtmVbrSarEntry 10 }

wfAtmVbrSarBomBeforeEomErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of active CS_PDU assembly processes
		 closed (aborted, accumulation discarded) due to
		 receiving a new BOM or SSM SAR_PDU for the
		 same VPI/VCI (and MID) before receiving the
		 EOM SAR_PDU.
		        "
	::= { wfAtmVbrSarEntry 11 }

wfAtmVbrSarTimeouts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of active CS_PDU assembly processes
		 closed (aborted, accumulation discarded) due to
		 expiration of the assembly timer.
		        "
	::= { wfAtmVbrSarEntry 12 }

wfAtmVbrSarLengthExceeds OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of active CS_PDU assembly processes
		 closed (aborted, accumulation discarded) due to
		 receiving more SAR_PDUs (and their payloads)
		 than will fit in the CS_PDU assembly buffer.
		        "
	::= { wfAtmVbrSarEntry 13 }

wfAtmVbrSarReceives OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of received SAR_PDUs (all types,
		 i.e. BOM, COM, EOM, SSM) successfully
		 accumulated into a CS_PDU assembly buffer.
		         "
	::= { wfAtmVbrSarEntry 14 }

wfAtmVbrSarTransmits OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of SAR_PDUs (all types, i.e. BOM,
		 COM, EOM, SSM) transmitted to the ATM layer
		 from a CS_PDU segmentation process.
		        "
	::= { wfAtmVbrSarEntry 15 }

wfAtmVbrSarLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the line number
		 of the Wellfleet router. "
	::= { wfAtmVbrSarEntry 16 }

wfAtmVbrSarLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the port's llindex.
		 The Lower layer index uniquely identifies the lower layer in 
		 cases where the lower layer may be something other than the
		 physical layer. "
	::= { wfAtmVbrSarEntry 17 }

wfAtmVbrCsTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAtmVbrCsEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The ATM VBR CS Table - Router Resident
		 This table contains ATM VBR-AAL, CS Layer parameters,
		 one entry per ATM VBR-AAL object.  The counts maintained
		 in this table are totals for the VBR, across all
		 VPI/VCIs within the VBR.
		"
	::= { wfAtmGroup 11 }

wfAtmVbrCsEntry OBJECT-TYPE
	SYNTAX	WfAtmVbrCsEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per linenumber/llindex VBR_CS objects -
		           wfAtmVbrCsLineNumber and wfAtmVbrCsLLIndex corresponds to
		           Wellfleet  linenumber/llindex number "
	INDEX	{ wfAtmVbrCsLineNumber,
		wfAtmVbrCsLLIndex }
	::= { wfAtmVbrCsTable 1 }

WfAtmVbrCsEntry ::= SEQUENCE {
	wfAtmVbrCsCct
		INTEGER,
	wfAtmVbrCsBETagMismatches
		Counter,
	wfAtmVbrCsLengthMismatches
		Counter,
	wfAtmVbrCsMisdeliveredPdus
		Counter,
	wfAtmVbrCsReceives
		Counter,
	wfAtmVbrCsTransmits
		Counter,
	wfAtmVbrCsLineNumber
		INTEGER,
	wfAtmVbrCsLLIndex
		INTEGER
}

wfAtmVbrCsCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Identifies the VBR_CS object which corresponds to the Wellfleet
		        circuit number "
	::= { wfAtmVbrCsEntry 1 }

wfAtmVbrCsBETagMismatches OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of received CS_PDUs discarded due to a mismatch when
		        comparing the BETag fields in the CS_PDU header and trailer. "
	::= { wfAtmVbrCsEntry 2 }

wfAtmVbrCsLengthMismatches OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of received CS_PDUs discarded due to a mismatch when
		        comparing the CS_PDU header BASize field, the CS_PDU trailer length
		        field and the actual length of the CS_PDU received. "
	::= { wfAtmVbrCsEntry 3 }

wfAtmVbrCsMisdeliveredPdus OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of received SAR_PDUs discarded due to an invalid
		        VPI/VCI detected at this layer. "
	::= { wfAtmVbrCsEntry 4 }

wfAtmVbrCsReceives OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of the valid CS_PDUs received from the SAR layer and
		        passed on to the next upper layer for further processing. "
	::= { wfAtmVbrCsEntry 5 }

wfAtmVbrCsTransmits OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of CS_PDUs received from upper layers and sent to the
		        SAR layer for segmentation and transmission "
	::= { wfAtmVbrCsEntry 6 }

wfAtmVbrCsLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the line number
		 of the Wellfleet router. "
	::= { wfAtmVbrCsEntry 7 }

wfAtmVbrCsLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the port's
		 llindex number. The Lower layer index uniquely identifies the 
		 lower layer in cases where the lower layer may be something other 
		 than the physical layer."
	::= { wfAtmVbrCsEntry 8 }

wfAtmVbrCsVciTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAtmVbrCsVciEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The ATM VBR CS_VCI Table - Router Resident
		 This table contains ATM VBR-AAL, CS Layer parameters,
		 one entry per ATM VPI/VCI for which information has been
		 recorded per ATM VBR-AAL object.
		"
	::= { wfAtmGroup 12 }

wfAtmVbrCsVciEntry OBJECT-TYPE
	SYNTAX	WfAtmVbrCsVciEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per virtual circuit VBR_CS objects "
	INDEX	{ wfAtmVbrCsVciLineNumber,
		wfAtmVbrCsVciLLIndex,
		wfAtmVbrCsVciIndex }
	::= { wfAtmVbrCsVciTable 1 }

WfAtmVbrCsVciEntry ::= SEQUENCE {
	wfAtmVbrCsVciVbrCct
		INTEGER,
	wfAtmVbrCsVciIndex
		INTEGER,
	wfAtmVbrCsVciBETagMismatches
		Counter,
	wfAtmVbrCsVciLengthMismatches
		Counter,
	wfAtmVbrCsVciMisdeliveredPdus
		Counter,
	wfAtmVbrCsVciReceives
		Counter,
	wfAtmVbrCsVciTransmits
		Counter,
	wfAtmVbrCsVciOctetReceives
		Counter,
	wfAtmVbrCsVciOctetTransmits
		Counter,
	wfAtmVbrCsVciLineNumber
		INTEGER,
	wfAtmVbrCsVciLLIndex
		INTEGER
}

wfAtmVbrCsVciVbrCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Identifies the VBR_CS object which corresponds to the Wellfleet
		        circuit number "
	::= { wfAtmVbrCsVciEntry 1 }

wfAtmVbrCsVciIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(8388608)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Identifies the VPI/VCI object for which this entry
		        contains information.  "
	::= { wfAtmVbrCsVciEntry 2 }

wfAtmVbrCsVciBETagMismatches OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of received CSVCI_PDUs discarded due to a mismatch when
		        comparing the BETag fields in the CSVCI_PDU header and trailer. "
	::= { wfAtmVbrCsVciEntry 3 }

wfAtmVbrCsVciLengthMismatches OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of received CSVCI_PDUs discarded due to a mismatch when
		        comparing the CSVCI_PDU header BASize field, the CSVCI_PDU trailer 
		        length field and the actual length of the CSVCI_PDU received. "
	::= { wfAtmVbrCsVciEntry 4 }

wfAtmVbrCsVciMisdeliveredPdus OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of received SAR_PDUs discarded due to an invalid
		        VPI/VCI detected at this layer. "
	::= { wfAtmVbrCsVciEntry 5 }

wfAtmVbrCsVciReceives OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of the valid CSVCI_PDUs received from the SAR layer and
		        passed on to the next upper layer for further processing. "
	::= { wfAtmVbrCsVciEntry 6 }

wfAtmVbrCsVciTransmits OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of CSVCI_PDUs received from upper layers and sent to the
		        SAR layer for segmentation and transmission "
	::= { wfAtmVbrCsVciEntry 7 }

wfAtmVbrCsVciOctetReceives OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The octet count of the valid CSVCI_PDUs received from the
		        SAR layer and passed on to the next upper layer for further 
		 processing. "
	::= { wfAtmVbrCsVciEntry 8 }

wfAtmVbrCsVciOctetTransmits OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of CSVCI_PDUs received from upper layers and sent to the
		        SAR layer for segmentation and transmission "
	::= { wfAtmVbrCsVciEntry 9 }

wfAtmVbrCsVciLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the line number
		 of the Wellfleet router. "
	::= { wfAtmVbrCsVciEntry 10 }

wfAtmVbrCsVciLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the port's
		 llindex number. The Lower layer index uniquely identifies the 
		 lower layer in cases where the lower layer may be something other 
		 than the physical layer."
	::= { wfAtmVbrCsVciEntry 11 }

wfAtmMpeTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAtmMpeEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The ATM MPE Table - Router Resident
		  This table contains ATM DXI MPE Layer parameters,
		 one entry per ATM Circuit.  The counts maintained
		 in this table are totals for the MPE Layer, across all
		 VPI/VCIs.
		"
	::= { wfAtmGroup 13 }

wfAtmMpeEntry OBJECT-TYPE
	SYNTAX	WfAtmMpeEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit MPE objects - wfAtmMpeIndex
		    corresponds to Wellfleet circuit number "
	INDEX	{ wfAtmMpeIndex }
	::= { wfAtmMpeTable 1 }

WfAtmMpeEntry ::= SEQUENCE {
	wfAtmMpeIndex
		INTEGER,
	wfAtmMpeInvalidNlpids
		Counter,
	wfAtmMpeInvalidPids
		Counter,
	wfAtmMpeInvalidOuis
		Counter,
	wfAtmMpeMisdeliveredPdus
		Counter,
	wfAtmMpeUnsupportedControlFields
		Counter
}

wfAtmMpeIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Identifies the MPE object for which this entry
		        contains information.  This corresponds to the Wellfleet 
		        circuit number "
	::= { wfAtmMpeEntry 1 }

wfAtmMpeInvalidNlpids OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of received MPE_PDUs discarded due to an unknown
		        or unsupported NLPID "
	::= { wfAtmMpeEntry 2 }

wfAtmMpeInvalidPids OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of received MPE_PDUs discarded due to an unknown
		        or unsupported PID "
	::= { wfAtmMpeEntry 3 }

wfAtmMpeInvalidOuis OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of received MPE_PDUs discarded due to an unknown
		        or unsupported OUI "
	::= { wfAtmMpeEntry 4 }

wfAtmMpeMisdeliveredPdus OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of received MPE_PDUs discarded due to an inactive
		        SAP. "
	::= { wfAtmMpeEntry 5 }

wfAtmMpeUnsupportedControlFields OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of received MPE_PDUs discarded due to an unknown
		        or unsupported Control field "
	::= { wfAtmMpeEntry 6 }

wfAtmPvcTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAtmPvcEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The ATM PVC Table - Router Resident
		 This table contains Virtual Circuit configuration and stats parameters,
		 one entry per ATM VPI/PVC for which information has been
		 recorded.
		"
	::= { wfAtmGroup 14 }

wfAtmPvcEntry OBJECT-TYPE
	SYNTAX	WfAtmPvcEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per virtual circuit  objects "
	INDEX	{ wfAtmPvcLineNumber,
		wfAtmPvcLLIndex,
		wfAtmPvcVpi,
		wfAtmPvcVci }
	::= { wfAtmPvcTable 1 }

WfAtmPvcEntry ::= SEQUENCE {
	wfAtmPvcDelete
		INTEGER,
	wfAtmPvcCct
		INTEGER,
	wfAtmPvcVpi
		INTEGER,
	wfAtmPvcVci
		INTEGER,
	wfAtmPvcReceives
		Counter,
	wfAtmPvcTransmits
		Counter,
	wfAtmPvcOctetReceives
		Counter,
	wfAtmPvcOctetTransmits
		Counter,
	wfAtmPvcMode
		INTEGER,
	wfAtmPvcDirectAccessCct
		INTEGER,
	wfAtmPvcState
		INTEGER,
	wfAtmPvcMpeNull
		INTEGER,
	wfAtmPvcCsNull
		INTEGER,
	wfAtmPvcDisable
		INTEGER,
	wfAtmPvcDrops
		Counter,
	wfAtmPvcMulticast
		INTEGER,
	wfAtmPvcLineNumber
		INTEGER,
	wfAtmPvcLLIndex
		INTEGER
}

wfAtmPvcDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Used to create/delete an instance of this object.
		        This action will result in a PVC being added or
		        removed from service. "
	DEFVAL	{ created }
	::= { wfAtmPvcEntry 1 }

wfAtmPvcCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Identifies the object which corresponds to the Wellfleet
		        circuit number "
	::= { wfAtmPvcEntry 2 }

wfAtmPvcVpi OBJECT-TYPE
	SYNTAX	INTEGER {
		vpimaximum(255)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The VPI associated with this PVC "
	::= { wfAtmPvcEntry 3 }

wfAtmPvcVci OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(32),
		maximum(32767)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The VCI associated with this PVC "
	::= { wfAtmPvcEntry 4 }

wfAtmPvcReceives OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of the valid PVC_PDUs received from the SAR layer and
		        passed on to the next upper layer for further processing. "
	::= { wfAtmPvcEntry 5 }

wfAtmPvcTransmits OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of PVC_PDUs received from upper layers and sent to the
		        SAR layer for segmentation and transmission "
	::= { wfAtmPvcEntry 6 }

wfAtmPvcOctetReceives OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The octet count of the valid PVC_PDUs received from the SAR
		        layer and passed on to the next upper layer for further 
		 processing. "
	::= { wfAtmPvcEntry 7 }

wfAtmPvcOctetTransmits OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The octet count of PVC_PDUs received from upper layers and
		        sent to the SAR layer for segmentation and transmission "
	::= { wfAtmPvcEntry 8 }

wfAtmPvcMode OBJECT-TYPE
	SYNTAX	INTEGER {
		groupaccess(1),
		hybridaccess(2),
		direct(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The mode of the given VC.
		 GROUP - treats the VC as one of many vc's on a circuit.
		 HYBRID - treats the VC as one of many vc's on a circuit for
		   protocol traffic, but as a separate circuit for bridging.
		 DIRECT - treats the VC as a separate circuit for all applications. "
	DEFVAL	{ groupaccess }
	::= { wfAtmPvcEntry 9 }

wfAtmPvcDirectAccessCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Circuit number to use for this VC for hybrid or direct access
		      routing "
	::= { wfAtmPvcEntry 10 }

wfAtmPvcState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the state of the PVC.
		      The state indicates Not Present when the PVC has been
		      configured but has not been initialized.  Init state indicates
		      that the PVC is in the process of being initialized by the
		      system.  Up state indicates that the PVC is operating 
		      normally.  Down state indicates that the PVC is
		      disabled.
		      "
	DEFVAL	{ notpresent }
	::= { wfAtmPvcEntry 11 }

wfAtmPvcMpeNull OBJECT-TYPE
	SYNTAX	INTEGER {
		present(1),
		null(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Used to select Null or Present  layer for this VC "
	DEFVAL	{ present }
	::= { wfAtmPvcEntry 12 }

wfAtmPvcCsNull OBJECT-TYPE
	SYNTAX	INTEGER {
		present(1),
		null(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Used to enable/disable CS_PDU encapsulation on a per VC basis "
	DEFVAL	{ present }
	::= { wfAtmPvcEntry 13 }

wfAtmPvcDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Used to enable/disable a PVC "
	DEFVAL	{ enabled }
	::= { wfAtmPvcEntry 14 }

wfAtmPvcDrops OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total count of packets  dropped on this VC"
	::= { wfAtmPvcEntry 15 }

wfAtmPvcMulticast OBJECT-TYPE
	SYNTAX	INTEGER {
		unicast(1),
		multicast(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates whether this VPI/VCI is used for multicast or
		 single destination. "
	DEFVAL	{ unicast }
	::= { wfAtmPvcEntry 16 }

wfAtmPvcLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the line number
		 of the Wellfleet router. "
	::= { wfAtmPvcEntry 17 }

wfAtmPvcLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the port's
		 llindex number. The Lower layer index uniquely identifies the 
		 lower layer in cases where the lower layer may be something other 
		 than the physical layer."
	::= { wfAtmPvcEntry 18 }

wfAtmDxiTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAtmDxiEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The ATM DXI Table - An entry in this table is either resident in
		the Wellfleet MIB or in the Digital Link MIB via the SNMP Proxy.
		The Component attribute determines local or remote residency.
		The ATM Data Exchange Interface (DXI) object reflects
		information about an ATM DXI interface between an ATM DSU
		and a Router/Host.  In particular, it contains both
		configuration and performance information specific to the DXI
		(ATM) interface.
		Each DXI instance typically corresponds to several (ATM)
		DXIADDRs.  The DXI object optionally keeps some information
		on a per-DXIADDR basis.
		Each instance of the DXI object typically has only one
		corresponding ATM -AAL object, but the MIB has been
		structured so that a DXI may have more than one.
		It should be noted that in the DXI MIB, the receive (transmit)
		direction refers to data received from (transmitted to)
		the ATM interface.
		With a 23-bit DXIADDR, the range of valid DXIADDR index values is 
		1 thru 2**23 inclusive.  Note that the 23-bit binary DXIADDR field
		(with values 0 thru 2**23-1) from the Frame Relay header must be
		incremented by one to yield the DXIADDR index for accessing the 
		tables in the MIB.  The DXIADDR consisting of all zeros (with
		corresponding MIB index value of 1) is reserved for the DXI
		Local Management Interface (LMI) with the DSU.
		DxiAddr ::= INTEGER (1..8388608)
		 ** For DL200 and DL3200 DSUs, there is only one ATM DXI per DSU
		 ** and only one AAL object (specifically VBR) per ATM DXI.
		 ** For these products, the mapping between the DXI (Frame Relay)
		 ** DXIADDR and the ATM VPI/VCI is fixed.  The LMI DXIADDR has no
		 ** corresponding VPI/VCI.  Otherwise, the eight most significant
		 ** bits of the DXIADDR map into the the VPI (the eight most
		 ** significant bits of the VPI/VCI), the fifteen least
		 ** significant bits of the DXIADDR map into the fifteen least
		 ** significant bits of the VCI, and the most significant bit of
		 ** the VCI is set to zero.
		"
	::= { wfAtmGroup 15 }

wfAtmDxiEntry OBJECT-TYPE
	SYNTAX	WfAtmDxiEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per linenumber/llindex ATM DXI objects -
		           wfAtmDxiLineNumber and wfAtmDxiLLIndex corresponds to
		           Wellfleet  linenumber/llindex number "
	INDEX	{ wfAtmDxiLineNumber,
		wfAtmDxiLLIndex,
		wfAtmDxiComponent }
	::= { wfAtmDxiTable 1 }

WfAtmDxiEntry ::= SEQUENCE {
	wfAtmDxiCct
		INTEGER,
	wfAtmDxiComponent
		INTEGER,
	wfAtmDxiMaxLmiPduLengthErrors
		Counter,
	wfAtmDxiSeconds
		Counter,
	wfAtmDxiDiscardedFrames
		Counter,
	wfAtmDxiAbortedFrames
		Counter,
	wfAtmDxiNonOctetAlignedFrames
		Counter,
	wfAtmDxiTooLongFrames
		Counter,
	wfAtmDxiTooShortFrames
		Counter,
	wfAtmDxiFrameChecksumErrors
		Counter,
	wfAtmDxiFrameHeaderErrors
		Counter,
	wfAtmDxiValidFrameReceives
		Counter,
	wfAtmDxiFrameTransmits
		Counter,
	wfAtmDxiLineNumber
		INTEGER,
	wfAtmDxiLLIndex
		INTEGER
}

wfAtmDxiCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Identifies the ATM DXI cct which corresponds to the Wellfleet
		        circuit number "
	::= { wfAtmDxiEntry 1 }

wfAtmDxiComponent OBJECT-TYPE
	SYNTAX	INTEGER {
		router(1),
		csudsu(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Identifies the component where the ATM DXI parameters are
		        resident - either the router or CSU/DSU. "
	::= { wfAtmDxiEntry 2 }

wfAtmDxiMaxLmiPduLengthErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The maximum length of an LMI PDU, measured in octets "
	::= { wfAtmDxiEntry 3 }

wfAtmDxiSeconds OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of seconds elapsed since event counting began
		 or since the counters were last cleared. The implementation
		 may optionally allow this variable to be set. If set, the set
		 value is ignored , and this variable and all other event 
		 counters for this object are reset to zero. "
	::= { wfAtmDxiEntry 4 }

wfAtmDxiDiscardedFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of received frames discarded due to lack of
		        buffer space. "
	::= { wfAtmDxiEntry 5 }

wfAtmDxiAbortedFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of the received frames aborted (and discarded) before
		        the closing flag "
	::= { wfAtmDxiEntry 6 }

wfAtmDxiNonOctetAlignedFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of the received frames discarded due to not being octet
		        aligned. "
	::= { wfAtmDxiEntry 7 }

wfAtmDxiTooLongFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of the received frames discarded due to being longer
		        than the maximum allowed frame length "
	::= { wfAtmDxiEntry 8 }

wfAtmDxiTooShortFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of the received frames discarded due to being shorter
		        than the minimum allowed frame length (less than 6 octets long) "
	::= { wfAtmDxiEntry 9 }

wfAtmDxiFrameChecksumErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of the received frames discarded due to detected checksum
		        error (CRC16) "
	::= { wfAtmDxiEntry 10 }

wfAtmDxiFrameHeaderErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of the received frames discarded due to detected frame
		        relay header errors "
	::= { wfAtmDxiEntry 11 }

wfAtmDxiValidFrameReceives OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of the valid frames received. "
	::= { wfAtmDxiEntry 12 }

wfAtmDxiFrameTransmits OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of CSVCI_PDUs received from upper layers and sent to the
		        SAR layer for segmentation and transmission "
	::= { wfAtmDxiEntry 13 }

wfAtmDxiLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the line number
		 of the Wellfleet router. "
	::= { wfAtmDxiEntry 14 }

wfAtmDxiLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the port's
		 llindex number. The Lower layer index uniquely identifies the 
		 lower layer in cases where the lower layer may be something other 
		 than the physical layer."
	::= { wfAtmDxiEntry 15 }

wfAtmDxiDxiAddrTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfAtmDxiDxiAddrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The ATM DXI DXIADDR Table - Router and CSU/DSU Resident
		 This table contains ATM DXI parameters, one entry per DXI 
		 DXIADDR for which information has been recorded per DXI 
		 DXIADDR Layer. Since the DXIADDR consisting of all zeros (with
		 corresponding MIB index value of 1) is reserved
		 for the DXI Local Management Interface (LMI) with
		 the DSU, there is always at least one entry in the
		 table. 
		"
	::= { wfAtmGroup 16 }

wfAtmDxiDxiAddrEntry OBJECT-TYPE
	SYNTAX	WfAtmDxiDxiAddrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per DXIADDR ATM DXI objects "
	INDEX	{ wfAtmDxiDxiAddrLineNumber,
		wfAtmDxiDxiAddrLLIndex,
		wfAtmDxiDxiAddrDxiComponent,
		wfAtmDxiDxiAddrIndex }
	::= { wfAtmDxiDxiAddrTable 1 }

WfAtmDxiDxiAddrEntry ::= SEQUENCE {
	wfAtmDxiDxiAddrDxiCct
		INTEGER,
	wfAtmDxiDxiAddrDxiComponent
		INTEGER,
	wfAtmDxiDxiAddrIndex
		INTEGER,
	wfAtmDxiDxiAddrAtmVbr
		OBJECT IDENTIFIER,
	wfAtmDxiDxiAddrVpiVci
		INTEGER,
	wfAtmDxiDxiAddrReceives
		Counter,
	wfAtmDxiDxiAddrTransmits
		Counter,
	wfAtmDxiDxiAddrLineNumber
		INTEGER,
	wfAtmDxiDxiAddrLLIndex
		INTEGER
}

wfAtmDxiDxiAddrDxiCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Identifies the Atm Dxi object for which this entry
		        contains information.  This attribute corresponds to the Wellfleet 
		        circuit number "
	::= { wfAtmDxiDxiAddrEntry 1 }

wfAtmDxiDxiAddrDxiComponent OBJECT-TYPE
	SYNTAX	INTEGER {
		router(1),
		csudsu(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Identifies the component where the ATM DXI parameters are
		        resident - either the router or CSU/DSU. "
	::= { wfAtmDxiDxiAddrEntry 2 }

wfAtmDxiDxiAddrIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		mini(1),
		maxi(8388608)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Identifies the DXIADDR object for which this entry
		        contains information.  "
	::= { wfAtmDxiDxiAddrEntry 3 }

wfAtmDxiDxiAddrAtmVbr OBJECT-TYPE
	SYNTAX	OBJECT IDENTIFIER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The object identifier of the first object in the
		 ATM VBR-AAL MIB which corresponds to this DXIADDR
		 of this DXI port.  If there is only one ATM VBR-AAL
		 object associated with this DXI object, then the
		 LMI DXIADDR entry in this table will have a valid
		 value for this variable, even though the
		 LMI DXIADDR has no valid VPI/VCI value.'
		         "
	::= { wfAtmDxiDxiAddrEntry 4 }

wfAtmDxiDxiAddrVpiVci OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(8388608)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The VPI/VCI of the ATM UNI of the ATM VBR-AAL
		 object which corresponds to this DXIADDR of this
		 DXI port.  For the LMI DXIADDR there is no valid
		 VPI/VCI value.
		        "
	::= { wfAtmDxiDxiAddrEntry 5 }

wfAtmDxiDxiAddrReceives OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of the valid frames received from the next lower
		        layer and passed on to the next upper layer for further 
		        processing. "
	::= { wfAtmDxiDxiAddrEntry 6 }

wfAtmDxiDxiAddrTransmits OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of frames received from upper layers and sent to the
		        next lower layer for transmission "
	::= { wfAtmDxiDxiAddrEntry 7 }

wfAtmDxiDxiAddrLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the line number
		 of the Wellfleet router. "
	::= { wfAtmDxiDxiAddrEntry 8 }

wfAtmDxiDxiAddrLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This value corresponds to the port's
		 llindex number. The Lower layer index uniquely identifies the 
		 lower layer in cases where the lower layer may be something other 
		 than the physical layer."
	::= { wfAtmDxiDxiAddrEntry 9 }

wfBackboneTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBackboneEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Table of Backbone entries, indexed by slot number "
	::= { wfGameGroup 4 }

wfBackboneEntry OBJECT-TYPE
	SYNTAX	WfBackboneEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A particular interface "
	INDEX	{ wfBackboneSlot }
	::= { wfBackboneTable 1 }

WfBackboneEntry ::= SEQUENCE {
	wfBackboneSlot
		INTEGER,
	wfTxDropCtrSlotMask0
		INTEGER,
	wfTxDropCtrNoGrant
		INTEGER,
	wfTxDropCtrFlowCtrl
		INTEGER,
	wfTxDied
		INTEGER,
	wfTxDramDied
		INTEGER,
	wfTxIdleErrors
		INTEGER,
	wfTxNoSomErrors
		INTEGER,
	wfTxPktSomErrors
		INTEGER,
	wfTxDropEomErrors
		INTEGER,
	wfTxOverflowErrors
		INTEGER,
	wfTxSofErrors
		INTEGER,
	wfTxDataptrErrors
		INTEGER,
	wfTxEndptrErrors
		INTEGER,
	wfTxBoardSpeedMask
		INTEGER,
	wfTxErrorEnableMask
		INTEGER,
	wfTxBusRequestTimeout
		INTEGER,
	wfTxDeadlockTimeout
		INTEGER,
	wfTxIgnoreFlowCtrl
		INTEGER,
	wfTxBackboneSelectMode
		INTEGER,
	wfTxEnableSlotMask0
		INTEGER,
	wfTxFifoSize
		INTEGER,
	wfTxVisControl
		INTEGER,
	wfRxPktNumErrors
		INTEGER,
	wfRxAddrOvrErrors
		INTEGER,
	wfRxSomErrors
		INTEGER,
	wfRxDied
		INTEGER,
	wfRxUnloadErrors
		INTEGER,
	wfRxDropCtr
		INTEGER,
	wfRxSofErrors
		INTEGER,
	wfRxCrcErrors
		INTEGER,
	wfRxOvrErrors
		INTEGER,
	wfRxForceEomErrors
		INTEGER,
	wfRxMaxEofErrors
		INTEGER,
	wfRxFifoSize
		INTEGER,
	wfRxReceiveMode
		INTEGER,
	wfRxIgnorePktNum
		INTEGER,
	wfRxVisControl
		INTEGER,
	wfRxErrorEnableMask
		INTEGER,
	wfRxMaxEof
		INTEGER,
	wfRxParitySense
		INTEGER,
	wfRxDeadlockTimeout
		INTEGER
}

wfBackboneSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The slot number indexes the backbone table "
	::= { wfBackboneEntry 1 }

wfTxDropCtrSlotMask0 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of packets dropped because their slot masks equals zero "
	::= { wfBackboneEntry 2 }

wfTxDropCtrNoGrant OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of packets dropped because no bus was granted for TX. "
	::= { wfBackboneEntry 3 }

wfTxDropCtrFlowCtrl OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of packets dropped because of flow control. "
	::= { wfBackboneEntry 4 }

wfTxDied OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the TX state machine has died. "
	::= { wfBackboneEntry 5 }

wfTxDramDied OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the TX DRAM state machine has died. "
	::= { wfBackboneEntry 6 }

wfTxIdleErrors OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times both pipeline state machines were active simultaneously. "
	::= { wfBackboneEntry 7 }

wfTxNoSomErrors OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the state machine left idle without start of message. "
	::= { wfBackboneEntry 8 }

wfTxPktSomErrors OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the TX packet state machine left idle without start of
		   message. "
	::= { wfBackboneEntry 9 }

wfTxDropEomErrors OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the TX detected a drop of an end of message. "
	::= { wfBackboneEntry 10 }

wfTxOverflowErrors OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the TX detected an overflow condition. "
	::= { wfBackboneEntry 11 }

wfTxSofErrors OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the TX detected a start offset error condition. "
	::= { wfBackboneEntry 12 }

wfTxDataptrErrors OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the TX detected that an increment on the data pointer
		   caused a carry-out error condition. "
	::= { wfBackboneEntry 13 }

wfTxEndptrErrors OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the TX detected that the end pointer wrapped in the
		   address space when it was formed from the buf pointer and the end offset. "
	::= { wfBackboneEntry 14 }

wfTxBoardSpeedMask OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The mask describing the speed setting of all boards in the system. "
	::= { wfBackboneEntry 15 }

wfTxErrorEnableMask OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The mask describing the set of TX errors that are enabled. "
	::= { wfBackboneEntry 16 }

wfTxBusRequestTimeout OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The timeout value for the TX bus request. "
	::= { wfBackboneEntry 17 }

wfTxDeadlockTimeout OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The timeout value for the TX bus deadlock. "
	::= { wfBackboneEntry 18 }

wfTxIgnoreFlowCtrl OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates whether TX flow control is enabled or not. "
	::= { wfBackboneEntry 19 }

wfTxBackboneSelectMode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates the TX backbone selection mode (1 = MRR8, 0 = First available). "
	::= { wfBackboneEntry 20 }

wfTxEnableSlotMask0 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates whether TX will transmit packets with slot mask 0. "
	::= { wfBackboneEntry 21 }

wfTxFifoSize OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the size of the TX FIFO. "
	::= { wfBackboneEntry 22 }

wfTxVisControl OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The read/write value of TX visibility register used for debug. "
	::= { wfBackboneEntry 23 }

wfRxPktNumErrors OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the RX detected a packet numbering error. "
	::= { wfBackboneEntry 24 }

wfRxAddrOvrErrors OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the RX detected a address overrun error. "
	::= { wfBackboneEntry 25 }

wfRxSomErrors OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the RX detected a start of message error. "
	::= { wfBackboneEntry 26 }

wfRxDied OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the RX state machine died. "
	::= { wfBackboneEntry 27 }

wfRxUnloadErrors OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the RX tried to unload an empty FIFO. "
	::= { wfBackboneEntry 28 }

wfRxDropCtr OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the RX dropped a packet. "
	::= { wfBackboneEntry 29 }

wfRxSofErrors OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the RX detected a start offset error. "
	::= { wfBackboneEntry 30 }

wfRxCrcErrors OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the RX detected a CRC error. "
	::= { wfBackboneEntry 31 }

wfRxOvrErrors OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the RX detected an overrun error. "
	::= { wfBackboneEntry 32 }

wfRxForceEomErrors OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the RX detected a force end-of-message error. "
	::= { wfBackboneEntry 33 }

wfRxMaxEofErrors OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the RX detected an end offset error. "
	::= { wfBackboneEntry 34 }

wfRxFifoSize OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the size of the RX FIFO. "
	::= { wfBackboneEntry 35 }

wfRxReceiveMode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates the receive mode of the RX. "
	::= { wfBackboneEntry 36 }

wfRxIgnorePktNum OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates whether RX will ignore packet numbering errors. "
	::= { wfBackboneEntry 37 }

wfRxVisControl OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The read/write value of RX visibility register used for debug. "
	::= { wfBackboneEntry 38 }

wfRxErrorEnableMask OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The mask describing the set of RX errors that are enabled. "
	::= { wfBackboneEntry 39 }

wfRxMaxEof OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the maximum end offset that the RX will allow. "
	::= { wfBackboneEntry 40 }

wfRxParitySense OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the parity sense that RX is expecting. "
	::= { wfBackboneEntry 41 }

wfRxDeadlockTimeout OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The timeout value for the RX bus deadlock. "
	::= { wfBackboneEntry 42 }

wfBgp		OBJECT IDENTIFIER ::= { wfBgpGeneralGroup 1 }

wfBgpDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter for determining whether or not BGP is
		    configured on this router. "
	DEFVAL	{ created }
	::= { wfBgp 1 }

wfBgpDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for determining whether or not to allow any
		    versions of BGP to start up. "
	DEFVAL	{ enabled }
	::= { wfBgp 2 }

wfBgpState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		invalid(4),
		notpresent(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the administrative state of BGP "
	DEFVAL	{ notpresent }
	::= { wfBgp 3 }

wfBgpIdentifier OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The BGP Identifier for this router. "
	::= { wfBgp 4 }

wfBgpLocalAs OBJECT-TYPE
	SYNTAX	INTEGER {
		maximum(65535)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Autonomous System (AS) that this router belongs to. "
	::= { wfBgp 5 }

wfBgpEbgpDebugSwitch OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" If this debug switch is enabled, BGP will not enforce the rule
		    that requires each EBGP peer to be on a directly attached network. "
	DEFVAL	{ disabled }
	::= { wfBgp 6 }

wfBgp3		OBJECT IDENTIFIER ::= { wfBgp3Group 1 }

wfBgp3Delete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter for determining whether or not BGP3 is
		    configured on this router. "
	DEFVAL	{ created }
	::= { wfBgp3 1 }

wfBgp3Disable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for determining whether or not to start-up
		    BGP3. "
	DEFVAL	{ enabled }
	::= { wfBgp3 2 }

wfBgp3State OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		invalid(4),
		notpresent(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the administrative state of BGP-3 "
	DEFVAL	{ notpresent }
	::= { wfBgp3 3 }

wfBgp3IntraAsIbgpRouting OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" If this switch is enabled, BGP-3 will perform
		    Intra-AS IBGP routing. "
	DEFVAL	{ enabled }
	::= { wfBgp3 4 }

wfBgp3IntAdvTimer OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(5)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the minimum time interval, in seconds, between injections
		    of EBGP routes into the IP routing table.  default is 5.
		    can't be zero "
	DEFVAL	{ default }
	::= { wfBgp3 5 }

wfBgp3RipRules OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" if enabled, IBGP routes that are also reachable via
		    a RIP route will be consider 'reachable' and will be used.
		    the use of this is highly discouraged. "
	DEFVAL	{ disabled }
	::= { wfBgp3 6 }

wfBgp3UsedRoutes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the number of received BGP-3 routes that have been submitted
		    for possible inclusion in the IP routing table. "
	::= { wfBgp3 7 }

wfBgp3TotalRoutes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the total number of BGP-3 routes currently maintained. "
	::= { wfBgp3 8 }

wfBgpPeerTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBgpPeerEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The BGP Peer table contains configuration and statistical information
		   regarding this router's BGP peers "
	::= { wfBgpGeneralGroup 2 }

wfBgpPeerEntry OBJECT-TYPE
	SYNTAX	WfBgpPeerEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the BGP-Peer table "
	INDEX	{ wfBgpPeerLocalAddr,
		wfBgpPeerRemoteAddr }
	::= { wfBgpPeerTable 1 }

WfBgpPeerEntry ::= SEQUENCE {
	wfBgpPeerDelete
		INTEGER,
	wfBgpPeerDisable
		INTEGER,
	wfBgpPeerState
		INTEGER,
	wfBgpPeerLocalAddr
		IpAddress,
	wfBgpPeerLocalPort
		INTEGER,
	wfBgpPeerRemoteAddr
		IpAddress,
	wfBgpPeerRemotePort
		INTEGER,
	wfBgpPeerMinVersion
		INTEGER,
	wfBgpPeerMaxVersion
		INTEGER,
	wfBgpPeerRemoteAs
		INTEGER,
	wfBgpPeerExtAdvTimer
		INTEGER,
	wfBgpPeerConnectRetry
		INTEGER,
	wfBgpPeerCfgHoldtime
		INTEGER,
	wfBgpPeerHoldtime
		INTEGER,
	wfBgpPeerCfgKeepAlive
		INTEGER,
	wfBgpPeerKeepAlive
		INTEGER,
	wfBgpPeerPathAttrSwitch
		INTEGER,
	wfBgpPeerIdentifier
		IpAddress,
	wfBgpPeerConnState
		INTEGER,
	wfBgpPeerNegotiatedVersion
		INTEGER,
	wfBgpPeerInUpdates
		Counter,
	wfBgpPeerOutUpdates
		Counter,
	wfBgpPeerInTotalMessages
		Counter,
	wfBgpPeerOutTotalMessages
		Counter,
	wfBgpPeerLastError
		OCTET STRING,
	wfBgpPeerTotalRoutes
		Counter
}

wfBgpPeerDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete: if set to delete, the peer connection is removed "
	DEFVAL	{ created }
	::= { wfBgpPeerEntry 1 }

wfBgpPeerDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable: controls whether the peer connection is enabled
		    or disabled "
	DEFVAL	{ enabled }
	::= { wfBgpPeerEntry 2 }

wfBgpPeerState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		invalid(4),
		notpresent(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the administrative state of the peer connection on this interface "
	DEFVAL	{ notpresent }
	::= { wfBgpPeerEntry 3 }

wfBgpPeerLocalAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the local interface address "
	::= { wfBgpPeerEntry 4 }

wfBgpPeerLocalPort OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the local TCP port number "
	::= { wfBgpPeerEntry 5 }

wfBgpPeerRemoteAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the peer's interface address "
	::= { wfBgpPeerEntry 6 }

wfBgpPeerRemotePort OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the peer's TCP port number "
	::= { wfBgpPeerEntry 7 }

wfBgpPeerMinVersion OBJECT-TYPE
	SYNTAX	INTEGER {
		bgp3(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the minimum BGP version number supported on this connection "
	DEFVAL	{ bgp3 }
	::= { wfBgpPeerEntry 8 }

wfBgpPeerMaxVersion OBJECT-TYPE
	SYNTAX	INTEGER {
		bgp3(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the maximum BGP version number supported on this connection "
	DEFVAL	{ bgp3 }
	::= { wfBgpPeerEntry 9 }

wfBgpPeerRemoteAs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the configured peer's AS number. this must be filled in.
		    the AS received in the open message must match this one. "
	::= { wfBgpPeerEntry 10 }

wfBgpPeerExtAdvTimer OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(5)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the minimum time interval, in seconds, between EBGP update
		    transmissions on this connection.  default is 5.  can't be zero "
	DEFVAL	{ default }
	::= { wfBgpPeerEntry 11 }

wfBgpPeerConnectRetry OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(120)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the ConnectRetry timer, in seconds. this is the time between
		    TCP connection attempts. "
	DEFVAL	{ default }
	::= { wfBgpPeerEntry 12 }

wfBgpPeerCfgHoldtime OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(3),
		default(90)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the configured Holdtime timer, in seconds. this is the maximum time that
		    the peer can wait without receiving a KEEPALIVE from this speaker.
		    if no hold timer is to be used (for an SVC), zero should be
		    entered.  otherwise, the value must be 3 or greater.
		    this value is sent in the OPEN message.  upon receipt of an
		    OPEN, the received hold time is compared to this value.
		    if both are zero, no hold timer will be run and periodic
		    keepalives will not be sent.  otherwise, the minimum
		    of the two timers will be used.  if this results in a
		    hold timer of less than 3, 3 will be used. "
	DEFVAL	{ default }
	::= { wfBgpPeerEntry 13 }

wfBgpPeerHoldtime OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the Holdtime timer value that was negotiated and is in use "
	::= { wfBgpPeerEntry 14 }

wfBgpPeerCfgKeepAlive OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(30)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the configured KeepAlive timer, in seconds. this is the interval between
		    sending KEEPALIVE messages.  if the hold timer was set to
		    zero, this is ignored.  otherwise, the KeepAlive timer will
		    be set to the minimum of this value and 1/3 of the hold timer. "
	DEFVAL	{ default }
	::= { wfBgpPeerEntry 15 }

wfBgpPeerKeepAlive OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the value used for the KeepAlive timer "
	::= { wfBgpPeerEntry 16 }

wfBgpPeerPathAttrSwitch OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" controls whether the wfBgp3PathAttrTable (and the
		    bgpRcvdPathAttrTable) will be maintained. "
	DEFVAL	{ enabled }
	::= { wfBgpPeerEntry 17 }

wfBgpPeerIdentifier OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the BGP ID of the Peer "
	::= { wfBgpPeerEntry 18 }

wfBgpPeerConnState OBJECT-TYPE
	SYNTAX	INTEGER {
		idle(1),
		connect(2),
		active(3),
		opensent(4),
		openconfirm(5),
		established(6)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the state of the BGP connection FSM "
	DEFVAL	{ idle }
	::= { wfBgpPeerEntry 19 }

wfBgpPeerNegotiatedVersion OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the negotiated version of BGP running between the two peers "
	::= { wfBgpPeerEntry 20 }

wfBgpPeerInUpdates OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the number of BGP UPDATE messages received on this connection.
		    This object should be initialized to zero when the connection
		    is established. "
	::= { wfBgpPeerEntry 21 }

wfBgpPeerOutUpdates OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the number of BGP UPDATE messages transmitted on this connection.
		    This object should be initialized to zero when the connection is
		    established. "
	::= { wfBgpPeerEntry 22 }

wfBgpPeerInTotalMessages OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the total number of messages received from the remote peer on this
		    connection. This object should be initialized to zero when the
		    connection is established. "
	::= { wfBgpPeerEntry 23 }

wfBgpPeerOutTotalMessages OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the total number of messages transmitted from the remote peer
		    on this connection. This object should be initialized to zero
		    when the connection is established. "
	::= { wfBgpPeerEntry 24 }

wfBgpPeerLastError OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the last error code and subcode seen by this peer on this
		    connection. If no error has occurred, this field is zero.
		    Otherwise, the first byte of this two byte OCTET STRING contains
		    the error code; the second contains the subcode. "
	::= { wfBgpPeerEntry 25 }

wfBgpPeerTotalRoutes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the total number of routes that were received from this
		    peer that we are currently maintaining. "
	::= { wfBgpPeerEntry 26 }

wfBgpAsWeightTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBgpAsWeightEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The BGP AS weight table contains weights for autonomous systems for use
		   in best-route calculations "
	::= { wfBgpGeneralGroup 3 }

wfBgpAsWeightEntry OBJECT-TYPE
	SYNTAX	WfBgpAsWeightEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the BGP AS weight table "
	INDEX	{ wfBgpAsWeightNumber }
	::= { wfBgpAsWeightTable 1 }

WfBgpAsWeightEntry ::= SEQUENCE {
	wfBgpAsWeightDelete
		INTEGER,
	wfBgpAsWeightDisable
		INTEGER,
	wfBgpAsWeightState
		INTEGER,
	wfBgpAsWeightNumber
		INTEGER,
	wfBgpAsWeightValue
		INTEGER
}

wfBgpAsWeightDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete: if set to delete, the AS entry is removed from
		    this table "
	DEFVAL	{ created }
	::= { wfBgpAsWeightEntry 1 }

wfBgpAsWeightDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable: controls whether the AS entry is enabled
		    or disabled "
	DEFVAL	{ enabled }
	::= { wfBgpAsWeightEntry 2 }

wfBgpAsWeightState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		invalid(4),
		notpresent(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the state of this AS weight entry "
	DEFVAL	{ notpresent }
	::= { wfBgpAsWeightEntry 3 }

wfBgpAsWeightNumber OBJECT-TYPE
	SYNTAX	INTEGER {
		maximum(65535)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the AS number "
	::= { wfBgpAsWeightEntry 4 }

wfBgpAsWeightValue OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(8),
		maximum(15),
		infinity(16)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the value to assign to this AS "
	DEFVAL	{ default }
	::= { wfBgpAsWeightEntry 5 }

wfBgp3PathAttrTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBgp3PathAttrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The BGP received path attribute table contains information about paths to
		   destination networks received by all peers. "
	::= { wfBgp3Group 2 }

wfBgp3PathAttrEntry OBJECT-TYPE
	SYNTAX	WfBgp3PathAttrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the BGP-3 Path Attribute Table "
	INDEX	{ wfBgp3PathAttrDestNetwork,
		wfBgp3PathAttrPeer }
	::= { wfBgp3PathAttrTable 1 }

WfBgp3PathAttrEntry ::= SEQUENCE {
	wfBgp3PathAttrPeer
		IpAddress,
	wfBgp3PathAttrDestNetwork
		IpAddress,
	wfBgp3PathAttrOrigin
		INTEGER,
	wfBgp3PathAttrASPath
		OCTET STRING,
	wfBgp3PathAttrNextHop
		IpAddress,
	wfBgp3PathAttrInterASMetric
		INTEGER,
	wfBgp3PathAttrASPathWeight
		INTEGER,
	wfBgp3PathAttrBgpPreference
		INTEGER,
	wfBgp3PathAttrBest
		INTEGER
}

wfBgp3PathAttrPeer OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the BGP identifier of the peer where the path information was
		    learned. "
	::= { wfBgp3PathAttrEntry 1 }

wfBgp3PathAttrDestNetwork OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the address of the destination network. "
	::= { wfBgp3PathAttrEntry 2 }

wfBgp3PathAttrOrigin OBJECT-TYPE
	SYNTAX	INTEGER {
		igp(1),
		egp(2),
		incomplete(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the ultimate origin of the path information:
		    igp (1) -- network is interior;
		    egp (2) -- network learned via EGP;
		    incomplete (3) -- undetermined. "
	::= { wfBgp3PathAttrEntry 3 }

wfBgp3PathAttrASPath OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the set of ASes that must be traversed to reach the network. Each AS
		    is represented as a pair of octets according to the following
		    algorithm:
		       first-byte-of-pair = ASNumber / 256;
		       second-byte-of-pair = ASNumber & 255; "
	::= { wfBgp3PathAttrEntry 4 }

wfBgp3PathAttrNextHop OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the address of the border router that should be used as the
		    next-hop for the destination network. "
	::= { wfBgp3PathAttrEntry 5 }

wfBgp3PathAttrInterASMetric OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the optional inter-AS metric. if this attribute has not been
		    provided for this route, the value for this object is 0. "
	::= { wfBgp3PathAttrEntry 6 }

wfBgp3PathAttrASPathWeight OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the calculated AS path weight "
	::= { wfBgp3PathAttrEntry 7 }

wfBgp3PathAttrBgpPreference OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the preference that is used to calculate this route with
		    other BGP routes to the same destination "
	::= { wfBgp3PathAttrEntry 8 }

wfBgp3PathAttrBest OBJECT-TYPE
	SYNTAX	INTEGER {
		false(1),
		true(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" an indication of whether or not this was chosen as the best route
		    to the destination "
	DEFVAL	{ false }
	::= { wfBgp3PathAttrEntry 9 }

wfBootpRelayIntfTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBootpRelayIntfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This table contains per-interface configuration information for BOOTP
		   relay agent operation "
	::= { wfBootpRelayAgentGroup 1 }

wfBootpRelayIntfEntry OBJECT-TYPE
	SYNTAX	WfBootpRelayIntfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" a BOOTP relay agent interface description "
	INDEX	{ wfBootpRelayIntfAddress }
	::= { wfBootpRelayIntfTable 1 }

WfBootpRelayIntfEntry ::= SEQUENCE {
	wfBootpRelayIntfDelete
		INTEGER,
	wfBootpRelayIntfDisable
		INTEGER,
	wfBootpRelayIntfState
		INTEGER,
	wfBootpRelayIntfAddress
		IpAddress,
	wfBootpRelayIntfHops
		INTEGER,
	wfBootpRelayIntfSeconds
		INTEGER,
	wfBootpRelayIntfOpDrops
		Counter,
	wfBootpRelayIntfRequests
		Counter,
	wfBootpRelayIntfTranReqs
		Counter,
	wfBootpRelayIntfHopsDrops
		Counter,
	wfBootpRelayIntfBcastDrops
		Counter,
	wfBootpRelayIntfSecDrops
		Counter,
	wfBootpRelayIntfReplies
		Counter,
	wfBootpRelayIntfGiaddrDrops
		Counter,
	wfBootpRelayIntfResrcDrops
		Counter
}

wfBootpRelayIntfDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete: if set to delete, the BOOTP relay agent is
		         removed from this network interface "
	DEFVAL	{ created }
	::= { wfBootpRelayIntfEntry 1 }

wfBootpRelayIntfDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable: controls whether the BOOTP relay agent is
		         enabled or disabled on this network interface "
	DEFVAL	{ enabled }
	::= { wfBootpRelayIntfEntry 2 }

wfBootpRelayIntfState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		invalid(4),
		notpres(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the state if the BOOTP relay agent on this interface "
	DEFVAL	{ notpres }
	::= { wfBootpRelayIntfEntry 3 }

wfBootpRelayIntfAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" network interface address "
	::= { wfBootpRelayIntfEntry 4 }

wfBootpRelayIntfHops OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(4),
		maximum(16)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" maximum hop count. BOOTREQUESTs with a larger hops field will be
		         dropped "
	DEFVAL	{ default }
	::= { wfBootpRelayIntfEntry 5 }

wfBootpRelayIntfSeconds OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(65535)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" minimum seconds. BOOTREQUESTs with a smaller seconds field will
		         be dropped "
	DEFVAL	{ minimum }
	::= { wfBootpRelayIntfEntry 6 }

wfBootpRelayIntfOpDrops OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the total number of BOOTP packets received on this interface
		         that were dropped because of an invalid operation field "
	::= { wfBootpRelayIntfEntry 7 }

wfBootpRelayIntfRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the total number of BOOTREQUEST packets received on this
		         interface "
	::= { wfBootpRelayIntfEntry 8 }

wfBootpRelayIntfTranReqs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the total number of forwarded BOOTREQUEST packets received on
		         this interface that contained a non-zero value in the gateway
		         IP address field. This interface did not act as a relay agent 
		         for these packets "
	::= { wfBootpRelayIntfEntry 9 }

wfBootpRelayIntfHopsDrops OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the total number of forwarded BOOTREQUEST packets received on
		         this interface that were dropped due to a hops field that was
		         too large "
	::= { wfBootpRelayIntfEntry 10 }

wfBootpRelayIntfBcastDrops OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the total number of forwarded BOOTREQUEST packets received on
		         this interface that were dropped due to a destination IP
		         address that was not 255.255.255.255 "
	::= { wfBootpRelayIntfEntry 11 }

wfBootpRelayIntfSecDrops OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the total number of forwarded BOOTREQUEST packets received on
		         this interface that were dropped due to a seconds field that 
		         was too small "
	::= { wfBootpRelayIntfEntry 12 }

wfBootpRelayIntfReplies OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the total number of BOOTPREPLY packets received that were
		         addressed to this interface "
	::= { wfBootpRelayIntfEntry 13 }

wfBootpRelayIntfGiaddrDrops OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the total number of BOOTPREPLY packets received that were
		         addressed to this interface and dropped because the giaddr
		         field was not the same as the interface's address "
	::= { wfBootpRelayIntfEntry 14 }

wfBootpRelayIntfResrcDrops OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the total number of BOOTPREPLY packets received that were
		         addressed to this interface and dropped because sufficient 
		         resources were not available "
	::= { wfBootpRelayIntfEntry 15 }

wfBootpRelayFwdTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBootpRelayFwdEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" for a BOOTP relay agent on a given interface, this table contains the
		   list of interfaces through which that agent will forward BOOTREQUEST
		   packets "
	::= { wfBootpRelayAgentGroup 2 }

wfBootpRelayFwdEntry OBJECT-TYPE
	SYNTAX	WfBootpRelayFwdEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" a BOOTP forwarding description "
	INDEX	{ wfBootpRelayFwdAgentIntf,
		wfBootpRelayFwdOutIntf }
	::= { wfBootpRelayFwdTable 1 }

WfBootpRelayFwdEntry ::= SEQUENCE {
	wfBootpRelayFwdDelete
		INTEGER,
	wfBootpRelayFwdDisable
		INTEGER,
	wfBootpRelayFwdAgentIntf
		IpAddress,
	wfBootpRelayFwdOutIntf
		IpAddress
}

wfBootpRelayFwdDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete: if set to delete, the forwarding entry is
		         removed from the table "
	DEFVAL	{ created }
	::= { wfBootpRelayFwdEntry 1 }

wfBootpRelayFwdDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable: controls whether the the forwarding entry is
		         active or not "
	DEFVAL	{ enabled }
	::= { wfBootpRelayFwdEntry 2 }

wfBootpRelayFwdAgentIntf OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" relay agent's network interface address "
	::= { wfBootpRelayFwdEntry 3 }

wfBootpRelayFwdOutIntf OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" outbound network interface address "
	::= { wfBootpRelayFwdEntry 4 }

wfBootpClientIntfTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBootpClientIntfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" for a BOOTP relay agent on a given interface, this table
		   contains the list of DLCI-IP address assignments. "
	::= { wfBootpClientGroup 1 }

wfBootpClientIntfEntry OBJECT-TYPE
	SYNTAX	WfBootpClientIntfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" a BOOTP client interface description "
	INDEX	{ wfBootpClientIntfAddress,
		wfBootpClientIntfDlci }
	::= { wfBootpClientIntfTable 1 }

WfBootpClientIntfEntry ::= SEQUENCE {
	wfBootpClientIntfDelete
		INTEGER,
	wfBootpClientIntfDlci
		INTEGER,
	wfBootpClientIntfAddress
		IpAddress
}

wfBootpClientIntfDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Flag to indicate BOOTP client interface instance deletion "
	DEFVAL	{ created }
	::= { wfBootpClientIntfEntry 1 }

wfBootpClientIntfDlci OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The DLCI for the virtual circuit used by this BOOTP client "
	::= { wfBootpClientIntfEntry 2 }

wfBootpClientIntfAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP address for the interface used by this BOOTP client "
	::= { wfBootpClientIntfEntry 3 }

wfBrTp		OBJECT IDENTIFIER ::= { wfBrLearning 1 }

wfBrTpBaseDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		  Users perform an SNMP SET operation on this
		  object in order to create/delete the bridge. "
	DEFVAL	{ created }
	::= { wfBrTp 1 }

wfBrTpBaseEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		  Users perform an SNMP SET operation on this
		  object in order to enable/disable the bridge. "
	DEFVAL	{ enabled }
	::= { wfBrTp 2 }

wfBrTpBaseState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		pres(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current state of the entire Bridge. "
	DEFVAL	{ down }
	::= { wfBrTp 3 }

wfBrTpBaseFDBEntries OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current number of forward table entries "
	::= { wfBrTp 4 }

wfBrTpBaseFDBSize OBJECT-TYPE
	SYNTAX	INTEGER {
		size1024(1024),
		size2048(2048),
		size4096(4096),
		size8192(8192),
		size16384(16384),
		size32768(32768),
		size65536(65536),
		size131072(131072)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Size of the bridge table - only looked at at boot time "
	DEFVAL	{ size1024 }
	::= { wfBrTp 5 }

wfBrTpBaseFDBEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Disable placing fdb entries on the mib.
		  This attribute only inspected at boot time.
		  "
	DEFVAL	{ enable }
	::= { wfBrTp 6 }

wfBrTpBaseFlushFwdTbl OBJECT-TYPE
	SYNTAX	INTEGER {
		flush(1),
		noflush(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Flush the bridge fwd tables "
	DEFVAL	{ noflush }
	::= { wfBrTp 7 }

wfBrTpFdbTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBrTpFdbEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table that contains information about unicast
		  entries for which the bridge has forwarding and/or
		  filtering information.  This information is used
		  by the transparent bridging function in
		  determining how to propagate a received frame.
		  inst = wfBrTpBaseFdbAddress "
	::= { wfBrLearning 2 }

wfBrTpFdbEntry OBJECT-TYPE
	SYNTAX	WfBrTpFdbEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the wfBrTpFdbTable. "
	INDEX	{ wfBrTpBaseFdbAddress }
	::= { wfBrTpFdbTable 1 }

WfBrTpFdbEntry ::= SEQUENCE {
	wfBrTpBaseFdbAddress
		OCTET STRING,
	wfBrTpBaseFdbPort
		INTEGER,
	wfBrTpBaseFdbStatus
		INTEGER
}

wfBrTpBaseFdbAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A unicast MAC address for which the bridge has
		  forwarding and/or filtering information. "
	::= { wfBrTpFdbEntry 1 }

wfBrTpBaseFdbPort OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The port number on which the wfBrTpBaseFdbAddress
		  was learned. "
	::= { wfBrTpFdbEntry 2 }

wfBrTpBaseFdbStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		learned(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The status of this entry. The meanings of the
		  values are:
		    learned(3) : the value of the corresponding
		                instance of wfBrTpFdbPort was
		                learned, and is being used. "
	DEFVAL	{ learned }
	::= { wfBrTpFdbEntry 3 }

wfBrTpInterface OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBrTpInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table that contains information about every
		  interface that is associated with this
		  transparent bridge.
		  inst_id[1] = wfBrTpInterfaceCircuit "
	::= { wfBridgeGroup 3 }

wfBrTpInterfaceEntry OBJECT-TYPE
	SYNTAX	WfBrTpInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in wfBrTpInterface. "
	INDEX	{ wfBrTpInterfaceCircuit }
	::= { wfBrTpInterface 1 }

WfBrTpInterfaceEntry ::= SEQUENCE {
	wfBrTpInterfaceDelete
		INTEGER,
	wfBrTpInterfaceEnable
		INTEGER,
	wfBrTpInterfaceState
		INTEGER,
	wfBrTpInterfaceCircuit
		INTEGER,
	wfBrTpInterfaceMaxInfo
		INTEGER,
	wfBrTpInterfaceInFrames
		Counter,
	wfBrTpInterfaceOutFrames
		Counter,
	wfBrTpInterfaceInDiscards
		Counter,
	wfBrTpInterfaceTranslationDisable
		INTEGER
}

wfBrTpInterfaceDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		  Users perform an SNMP SET operation on this
		  object in order to create/delete an interface. "
	DEFVAL	{ created }
	::= { wfBrTpInterfaceEntry 1 }

wfBrTpInterfaceEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2),
		circuitdump(33),
		fwdtbldump(17)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		  Users perform an SNMP SET operation on this
		  object in order to enable/disable an interface. "
	DEFVAL	{ enabled }
	::= { wfBrTpInterfaceEntry 2 }

wfBrTpInterfaceState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		pres(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current state of the interface. "
	DEFVAL	{ down }
	::= { wfBrTpInterfaceEntry 3 }

wfBrTpInterfaceCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The circuit that this interface runs over. "
	::= { wfBrTpInterfaceEntry 4 }

wfBrTpInterfaceMaxInfo OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The maximum size of the INFO (non-MAC) field that
		  this port will receive or transmit. "
	::= { wfBrTpInterfaceEntry 5 }

wfBrTpInterfaceInFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of frames that have been received by
		  this interface from its circuit. "
	::= { wfBrTpInterfaceEntry 6 }

wfBrTpInterfaceOutFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of frames that have been transmitted
		  by this interface to its circuit. "
	::= { wfBrTpInterfaceEntry 7 }

wfBrTpInterfaceInDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Count of valid frames received which were
		  received on this interface but then discarded. "
	::= { wfBrTpInterfaceEntry 8 }

wfBrTpInterfaceTranslationDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable translation bridging parameter. Default is enabled. "
	DEFVAL	{ disabled }
	::= { wfBrTpInterfaceEntry 9 }

wfBrTrafficFilterTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBrTrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Bridge Traffic Filters "
	::= { wfBridgeGroup 4 }

wfBrTrafficFilterEntry OBJECT-TYPE
	SYNTAX	WfBrTrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in WfBrTrafficFilterTable. "
	INDEX	{ wfBrTrafficFilterCircuit,
		wfBrTrafficFilterRuleNumber,
		wfBrTrafficFilterFragment }
	::= { wfBrTrafficFilterTable 1 }

WfBrTrafficFilterEntry ::= SEQUENCE {
	wfBrTrafficFilterCreate
		INTEGER,
	wfBrTrafficFilterEnable
		INTEGER,
	wfBrTrafficFilterStatus
		INTEGER,
	wfBrTrafficFilterCounter
		Counter,
	wfBrTrafficFilterDefinition
		Opaque,
	wfBrTrafficFilterReserved
		INTEGER,
	wfBrTrafficFilterCircuit
		INTEGER,
	wfBrTrafficFilterRuleNumber
		INTEGER,
	wfBrTrafficFilterFragment
		INTEGER
}

wfBrTrafficFilterCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the existence of the traffic filter rule:
		  created - traffic filter exists
		  delete - traffic filter does not exist and can be deleted. "
	DEFVAL	{ created }
	::= { wfBrTrafficFilterEntry 1 }

wfBrTrafficFilterEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines whether or not the traffic filter rule should be used:
		  enabled - activate the rule.
		  disabled - inactivate the rule. "
	DEFVAL	{ enabled }
	::= { wfBrTrafficFilterEntry 2 }

wfBrTrafficFilterStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		error(2),
		inactive(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Defines the current status of the traffic filter:
		  inactive - the rule is not in use.
		  active - the rule is being used.
		  error - the application detected an error in the rule. "
	DEFVAL	{ inactive }
	::= { wfBrTrafficFilterEntry 3 }

wfBrTrafficFilterCounter OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received packets that have
		           matched this rule. "
	::= { wfBrTrafficFilterEntry 4 }

wfBrTrafficFilterDefinition OBJECT-TYPE
	SYNTAX	Opaque
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The filter rule definition. "
	::= { wfBrTrafficFilterEntry 5 }

wfBrTrafficFilterReserved OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Reserved field. "
	::= { wfBrTrafficFilterEntry 6 }

wfBrTrafficFilterCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The ID of the Bridge Circuit to which the
		    filter is applied. "
	::= { wfBrTrafficFilterEntry 7 }

wfBrTrafficFilterRuleNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" ID for the rule. "
	::= { wfBrTrafficFilterEntry 8 }

wfBrTrafficFilterFragment OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Fragment number - for large rules. "
	::= { wfBrTrafficFilterEntry 9 }

wfCctOptsTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfCctOptsEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The table of circuit names "
	::= { wfCircuitOptsGroup 1 }

wfCctOptsEntry OBJECT-TYPE
	SYNTAX	WfCctOptsEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Entry format for the table of circuit options "
	INDEX	{ wfCctOptsCct }
	::= { wfCctOptsTable 1 }

WfCctOptsEntry ::= SEQUENCE {
	wfCctOptsDelete
		INTEGER,
	wfCctOptsPriorityQueueingDisable
		INTEGER,
	wfCctOptsCct
		INTEGER,
	wfCctOptsHighPriorityQueueLimit
		INTEGER,
	wfCctOptsNormalPriorityQueueLimit
		INTEGER,
	wfCctOptsLowPriorityQueueLimit
		INTEGER,
	wfCctOptsMaxInterruptQueueLatency
		INTEGER,
	wfCctOptsMaxHighPriorityQueueLatency
		INTEGER,
	wfCctOptsHiXmits
		Counter,
	wfCctOptsNormalXmits
		Counter,
	wfCctOptsLoXmits
		Counter,
	wfCctOptsHiClippedPkts
		Counter,
	wfCctOptsNormalClippedPkts
		Counter,
	wfCctOptsLoClippedPkts
		Counter,
	wfCctOptsIntrQHighWaterPkts
		Gauge,
	wfCctOptsHiQHighWaterPkts
		Gauge,
	wfCctOptsNormalQHighWaterPkts
		Gauge,
	wfCctOptsLoQHighWaterPkts
		Gauge,
	wfCctOptsHighWaterPktsClear
		INTEGER,
	wfCctOptsDroppedPkts
		Counter,
	wfCctOptsLargePkts
		Counter,
	wfCctOptsRxPkts
		Counter,
	wfCctOptsChooserType
		INTEGER,
	wfCctOptsPqDequeueAlgType
		INTEGER,
	wfCctOptsHiPercent
		INTEGER,
	wfCctOptsNormalPercent
		INTEGER,
	wfCctOptsLoPercent
		INTEGER,
	wfCctOptsHiTotalOctets
		Counter,
	wfCctOptsNormalTotalOctets
		Counter,
	wfCctOptsLoTotalOctets
		Counter,
	wfCctOptsCircuitType
		INTEGER,
	wfCctOptsBackupCct
		INTEGER,
	wfCctOptsPrimaryCctWanProtocolType
		INTEGER
}

wfCctOptsDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Creation and deletion flag for this record "
	DEFVAL	{ created }
	::= { wfCctOptsEntry 1 }

wfCctOptsPriorityQueueingDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Priority Queuing option "
	DEFVAL	{ enabled }
	::= { wfCctOptsEntry 2 }

wfCctOptsCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" circuit number "
	::= { wfCctOptsEntry 3 }

wfCctOptsHighPriorityQueueLimit OBJECT-TYPE
	SYNTAX	INTEGER {
		default(20)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" High Priority Queue limit
		  The minimum valid value is zero.
		  The maximum valid value is 63 (HW xmit ring size)
		  minus the sum of the Normal and Low queue limits.
		 "
	DEFVAL	{ default }
	::= { wfCctOptsEntry 4 }

wfCctOptsNormalPriorityQueueLimit OBJECT-TYPE
	SYNTAX	INTEGER {
		default(20)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Normal Priority Queue limit
		  The minimum valid value is zero.
		  The maximum valid value is 63 (HW xmit ring size) 
		  minus the sum of the High and Low queue limits.
		 "
	DEFVAL	{ default }
	::= { wfCctOptsEntry 5 }

wfCctOptsLowPriorityQueueLimit OBJECT-TYPE
	SYNTAX	INTEGER {
		default(20)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Low Priority Queue limit
		  The minimum valid value is zero.
		  The maximum valid value is 63 (HW xmit ring size)
		  minus the sum of the High and Normal queue limits.
		 "
	DEFVAL	{ default }
	::= { wfCctOptsEntry 6 }

wfCctOptsMaxInterruptQueueLatency OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(100),
		default(2500),
		maximum(5000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Interrupt Queue Latency "
	DEFVAL	{ default }
	::= { wfCctOptsEntry 7 }

wfCctOptsMaxHighPriorityQueueLatency OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(100),
		default(250),
		maximum(5000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" High Priority Queue Latency "
	DEFVAL	{ default }
	::= { wfCctOptsEntry 8 }

wfCctOptsHiXmits OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" High Priority Transmit count "
	::= { wfCctOptsEntry 9 }

wfCctOptsNormalXmits OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Normal Priority Transmit count "
	::= { wfCctOptsEntry 10 }

wfCctOptsLoXmits OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Low Priority Transmit count "
	::= { wfCctOptsEntry 11 }

wfCctOptsHiClippedPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" High Prio Transmit Clip Count "
	::= { wfCctOptsEntry 12 }

wfCctOptsNormalClippedPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Normal Prio Transmit Clip Count "
	::= { wfCctOptsEntry 13 }

wfCctOptsLoClippedPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Low Prio Transmit Clip Count "
	::= { wfCctOptsEntry 14 }

wfCctOptsIntrQHighWaterPkts OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Interrupt Queue high-water mark "
	::= { wfCctOptsEntry 15 }

wfCctOptsHiQHighWaterPkts OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" High-priority Queue high-water mark "
	::= { wfCctOptsEntry 16 }

wfCctOptsNormalQHighWaterPkts OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Normal Queue high-water mark "
	::= { wfCctOptsEntry 17 }

wfCctOptsLoQHighWaterPkts OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Low-priority Queue high-water mark "
	::= { wfCctOptsEntry 18 }

wfCctOptsHighWaterPktsClear OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Attribute to clear the high-water marks. When the MIB
		  changes, Priority Queueing (if ENABLED) checks to see
		  if HighWaterPktsClear is different than the last time the MIB
		  was modified in any way.  If it is different, 
		  all the high water marks (see above) are set to zero.
		 "
	::= { wfCctOptsEntry 19 }

wfCctOptsDroppedPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Packets which were filtered in Priority Queueing "
	::= { wfCctOptsEntry 20 }

wfCctOptsLargePkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Large Packets which became an exception to latency rules "
	::= { wfCctOptsEntry 21 }

wfCctOptsRxPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Packets received "
	::= { wfCctOptsEntry 22 }

wfCctOptsChooserType OBJECT-TYPE
	SYNTAX	INTEGER {
		random(1),
		addrbased(2),
		bod(3),
		filterbased(4)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Algorithm to choose line within a multiline circuit "
	DEFVAL	{ addrbased }
	::= { wfCctOptsEntry 23 }

wfCctOptsPqDequeueAlgType OBJECT-TYPE
	SYNTAX	INTEGER {
		prioritization(1),
		allocation(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Selection of Priority Queueing dequeueing algorithm
		  PQ_STRICT_PRIORITIZATION is 'classical' 7.50 dequeueing.
		  PQ_BANDWIDTH_ALLOCATION makes exceptions to strict
		  prioritization in order to prevent starvation of the
		  Normal and/or Low priority traffic.
		 "
	DEFVAL	{ prioritization }
	::= { wfCctOptsEntry 24 }

wfCctOptsHiPercent OBJECT-TYPE
	SYNTAX	INTEGER {
		default(70)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the percent of the SYNC line bandwidth that
		  the network manager wishes to allocate to traffic
		  which has been configured to be High Priority.
		  This parameter only has meaning when the bandwidth allocation
		  dequeueing algorithm is enabled by setting the dequeueing 
		  algorithm type appropriately.
		  With this parameter 
		  set other than 100, each time the configured percent 
		  utilization is reached, Normal and Low traffic is 
		  sent out (if any is queued up), up to their
		  configured percentages.
		 "
	DEFVAL	{ default }
	::= { wfCctOptsEntry 25 }

wfCctOptsNormalPercent OBJECT-TYPE
	SYNTAX	INTEGER {
		default(20)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The minimum percent of the SYNC line that Normal-priority
		  traffic will get (if there is any) when the Bandwidth 
		  Allocation feature is enabled.
		  See text for wfCctOptsHiPercent for more information.
		 "
	DEFVAL	{ default }
	::= { wfCctOptsEntry 26 }

wfCctOptsLoPercent OBJECT-TYPE
	SYNTAX	INTEGER {
		default(10)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The minimum percent of the SYNC line that Low-priority traffic
		  will get (if there is any) when the Bandwidth Allocation 
		  feature is enabled.
		  See text for wfCctOptsHiPercent for more information.
		 "
	DEFVAL	{ default }
	::= { wfCctOptsEntry 27 }

wfCctOptsHiTotalOctets OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Running total of High Octets transmitted when
		  using Bandwidth Allocation dequeueing algorithm
		 "
	::= { wfCctOptsEntry 28 }

wfCctOptsNormalTotalOctets OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Running total of Normal Octets transmitted when
		  using Bandwidth Allocation dequeueing algorithm
		 "
	::= { wfCctOptsEntry 29 }

wfCctOptsLoTotalOctets OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Running total of Low Octets transmitted when
		  using Bandwidth Allocation dequeueing algorithm
		 "
	::= { wfCctOptsEntry 30 }

wfCctOptsCircuitType OBJECT-TYPE
	SYNTAX	INTEGER {
		normal(1),
		primary(2),
		dialondemand(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Circuit Type Attribute  "
	DEFVAL	{ normal }
	::= { wfCctOptsEntry 31 }

wfCctOptsBackupCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" backup circuit number "
	::= { wfCctOptsEntry 32 }

wfCctOptsPrimaryCctWanProtocolType OBJECT-TYPE
	SYNTAX	INTEGER {
		unknown(1),
		ppp(2),
		relay(3),
		sync(4)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The type of WAN protocol type which is running
		  on the primary line. This attribute is only
		  read when a dial backup circuit is using this
		  mib record.
		 "
	DEFVAL	{ unknown }
	::= { wfCctOptsEntry 33 }

wfCctOptsBrFilterTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfCctOptsBrFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Bridge  Filters "
	::= { wfCircuitOptsGroup 2 }

wfCctOptsBrFilterEntry OBJECT-TYPE
	SYNTAX	WfCctOptsBrFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in WfCctOptsBrFilterTable. "
	INDEX	{ wfCctOptsBrFilterCct,
		wfCctOptsBrFilterRuleNumber,
		wfCctOptsBrFilterFragment }
	::= { wfCctOptsBrFilterTable 1 }

WfCctOptsBrFilterEntry ::= SEQUENCE {
	wfCctOptsBrFilterCreate
		INTEGER,
	wfCctOptsBrFilterEnable
		INTEGER,
	wfCctOptsBrFilterState
		INTEGER,
	wfCctOptsBrFilterCounter
		Counter,
	wfCctOptsBrFilterDefinition
		OCTET STRING,
	wfCctOptsBrFilterReserved
		INTEGER,
	wfCctOptsBrFilterCct
		INTEGER,
	wfCctOptsBrFilterRuleNumber
		INTEGER,
	wfCctOptsBrFilterFragment
		INTEGER
}

wfCctOptsBrFilterCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the existence of the traffic filter rule:
		  created - traffic filter exists
		  delete - traffic filter does not exist and can be deleted. "
	DEFVAL	{ created }
	::= { wfCctOptsBrFilterEntry 1 }

wfCctOptsBrFilterEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines whether or not the traffic filter rule should be used:
		  enabled - activate the rule.
		  disabled - inactivate the rule. "
	DEFVAL	{ enabled }
	::= { wfCctOptsBrFilterEntry 2 }

wfCctOptsBrFilterState OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		error(2),
		inactive(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Defines the current State of the traffic filter:
		  inactive - the rule is not in use.
		  active - the rule is being used.
		  error - the application detected an error in the rule. "
	DEFVAL	{ inactive }
	::= { wfCctOptsBrFilterEntry 3 }

wfCctOptsBrFilterCounter OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received packets that have
		           matched this rule. "
	::= { wfCctOptsBrFilterEntry 4 }

wfCctOptsBrFilterDefinition OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The filter rule definition. "
	::= { wfCctOptsBrFilterEntry 5 }

wfCctOptsBrFilterReserved OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Reserved field. "
	::= { wfCctOptsBrFilterEntry 6 }

wfCctOptsBrFilterCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The ID of the CctBridge Cct to which the
		    filter is applied. "
	::= { wfCctOptsBrFilterEntry 7 }

wfCctOptsBrFilterRuleNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" ID for the rule. "
	::= { wfCctOptsBrFilterEntry 8 }

wfCctOptsBrFilterFragment OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Fragment number - for large rules. "
	::= { wfCctOptsBrFilterEntry 9 }

wfCctOptsIpFilterTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfCctOptsIpFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Ip  Filters "
	::= { wfCircuitOptsGroup 3 }

wfCctOptsIpFilterEntry OBJECT-TYPE
	SYNTAX	WfCctOptsIpFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in WfCctOptsIpFilterTable. "
	INDEX	{ wfCctOptsIpFilterCct,
		wfCctOptsIpFilterRuleNumber,
		wfCctOptsIpFilterFragment }
	::= { wfCctOptsIpFilterTable 1 }

WfCctOptsIpFilterEntry ::= SEQUENCE {
	wfCctOptsIpFilterCreate
		INTEGER,
	wfCctOptsIpFilterEnable
		INTEGER,
	wfCctOptsIpFilterState
		INTEGER,
	wfCctOptsIpFilterCounter
		Counter,
	wfCctOptsIpFilterDefinition
		OCTET STRING,
	wfCctOptsIpFilterReserved
		INTEGER,
	wfCctOptsIpFilterCct
		INTEGER,
	wfCctOptsIpFilterRuleNumber
		INTEGER,
	wfCctOptsIpFilterFragment
		INTEGER
}

wfCctOptsIpFilterCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the existence of the traffic filter rule:
		  created - traffic filter exists
		  delete - traffic filter does not exist and can be deleted. "
	DEFVAL	{ created }
	::= { wfCctOptsIpFilterEntry 1 }

wfCctOptsIpFilterEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines whether or not the traffic filter rule should be used:
		  enabled - activate the rule.
		  disabled - inactivate the rule. "
	DEFVAL	{ enabled }
	::= { wfCctOptsIpFilterEntry 2 }

wfCctOptsIpFilterState OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		error(2),
		inactive(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Defines the current State of the traffic filter:
		  inactive - the rule is not in use.
		  active - the rule is being used.
		  error - the application detected an error in the rule. "
	DEFVAL	{ inactive }
	::= { wfCctOptsIpFilterEntry 3 }

wfCctOptsIpFilterCounter OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received packets that have
		           matched this rule. "
	::= { wfCctOptsIpFilterEntry 4 }

wfCctOptsIpFilterDefinition OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The filter rule definition. "
	::= { wfCctOptsIpFilterEntry 5 }

wfCctOptsIpFilterReserved OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Reserved field. "
	::= { wfCctOptsIpFilterEntry 6 }

wfCctOptsIpFilterCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The ID of the CctIp Cct to which the
		    filter is applied. "
	::= { wfCctOptsIpFilterEntry 7 }

wfCctOptsIpFilterRuleNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" ID for the rule. "
	::= { wfCctOptsIpFilterEntry 8 }

wfCctOptsIpFilterFragment OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Fragment number - for large rules. "
	::= { wfCctOptsIpFilterEntry 9 }

wfCctOptsLengthBasedTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfCctOptsLengthBasedEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Length Based Priority Table "
	::= { wfCircuitOptsGroup 4 }

wfCctOptsLengthBasedEntry OBJECT-TYPE
	SYNTAX	WfCctOptsLengthBasedEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in WfCctOptsLengthBasedTable. "
	INDEX	{ wfCctOptsLengthBasedCct,
		wfCctOptsLengthBasedMux,
		wfCctOptsLengthBasedData }
	::= { wfCctOptsLengthBasedTable 1 }

WfCctOptsLengthBasedEntry ::= SEQUENCE {
	wfCctOptsLengthBasedDelete
		INTEGER,
	wfCctOptsLengthBasedDisable
		INTEGER,
	wfCctOptsLengthBasedState
		INTEGER,
	wfCctOptsLengthBasedCct
		INTEGER,
	wfCctOptsLengthBasedMux
		INTEGER,
	wfCctOptsLengthBasedData
		OCTET STRING,
	wfCctOptsLengthBasedLength
		INTEGER,
	wfCctOptsLengthBasedLessThanQ
		INTEGER,
	wfCctOptsLengthBasedGreaterThanQ
		INTEGER
}

wfCctOptsLengthBasedDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the existence of the length based priority filter rule:
		  created - traffic filter exists
		  delete - traffic filter does not exist and can be deleted. "
	DEFVAL	{ created }
	::= { wfCctOptsLengthBasedEntry 1 }

wfCctOptsLengthBasedDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines whether or not the length based priority filter rule should be used:
		  enabled - activate the rule.
		  disabled - inactivate the rule. "
	DEFVAL	{ enabled }
	::= { wfCctOptsLengthBasedEntry 2 }

wfCctOptsLengthBasedState OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		error(2),
		inactive(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Defines the current State of the length based priority filter:
		  inactive - the rule is not in use.
		  active - the rule is being used.
		  error - the application detected an error in the rule. "
	DEFVAL	{ inactive }
	::= { wfCctOptsLengthBasedEntry 3 }

wfCctOptsLengthBasedCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The ID of the Cct to which the filter is applied "
	::= { wfCctOptsLengthBasedEntry 4 }

wfCctOptsLengthBasedMux OBJECT-TYPE
	SYNTAX	INTEGER {
		etype(1),
		lsap(2),
		snap(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" packet mux type "
	::= { wfCctOptsLengthBasedEntry 5 }

wfCctOptsLengthBasedData OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" a five byte quantity of the form
		  ethernet  - 0x6003000000 (e.g. DECnet)
		  lsap      - 0xfefe030000 (e.g. OSI)
		  snap      - 0x0000000800 (e.g. IP)
		     - 0x0800070800 (e.g. Appletalk DDP) "
	::= { wfCctOptsLengthBasedEntry 6 }

wfCctOptsLengthBasedLength OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Maximum length of a packet to be considered high priority "
	::= { wfCctOptsLengthBasedEntry 7 }

wfCctOptsLengthBasedLessThanQ OBJECT-TYPE
	SYNTAX	INTEGER {
		hi(3),
		normal(2),
		lo(1)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" queue into which packets of length less than or equal
		    wfCctOptsLengthBasedLength are placed "
	DEFVAL	{ normal }
	::= { wfCctOptsLengthBasedEntry 8 }

wfCctOptsLengthBasedGreaterThanQ OBJECT-TYPE
	SYNTAX	INTEGER {
		hi(3),
		normal(2),
		lo(1)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" queue into which packets of length greater than
		    wfCctOptsLengthBasedLength are placed "
	DEFVAL	{ lo }
	::= { wfCctOptsLengthBasedEntry 9 }

wfSwservOptsTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfSwservOptsEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The table of circuits defined  over  switched services "
	::= { wfCircuitOptsGroup 5 }

wfSwservOptsEntry OBJECT-TYPE
	SYNTAX	WfSwservOptsEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"  Entry  format for the table  of sw_serv circuit options "
	INDEX	{ wfSwservOptsCct }
	::= { wfSwservOptsTable 1 }

WfSwservOptsEntry ::= SEQUENCE {
	wfSwservOptsDelete
		INTEGER,
	wfSwservOptsCct
		INTEGER,
	wfSwservOptsCircuitType
		INTEGER,
	wfSwservOptsBackupCct
		INTEGER,
	wfSwservOptsBackupPool
		INTEGER,
	wfSwservOptsDemandPool
		INTEGER,
	wfSwservOptsBackupMode
		INTEGER,
	wfSwservOptsActiveBackupCct
		INTEGER,
	wfSwservOptsForcedDial
		INTEGER,
	wfSwservOptsMaxUpTime
		INTEGER,
	wfSwservOptsBringUpHour
		INTEGER,
	wfSwservOptsBringUpMinute
		INTEGER,
	wfSwservOptsTakeDownHour
		INTEGER,
	wfSwservOptsTakeDownMinute
		INTEGER,
	wfSwservOptsInactivityTime
		INTEGER,
	wfSwservOptsCircuitState
		INTEGER,
	wfSwservOptsPrimaryDownTime
		INTEGER,
	wfSwservOptsNumOutgoingConn
		Counter,
	wfSwservOptsNumIncomingConn
		Counter,
	wfSwservOptsActiveSlot
		INTEGER,
	wfSwservOptsActiveLine
		INTEGER,
	wfSwservOptsPacketsDropped
		Counter,
	wfSwservOptsTimeLastPktDropped
		INTEGER,
	wfSwservOptsForcedTakedown
		INTEGER
}

wfSwservOptsDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Creation and deletion flag "
	DEFVAL	{ created }
	::= { wfSwservOptsEntry 1 }

wfSwservOptsCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Circuit Number "
	::= { wfSwservOptsEntry 2 }

wfSwservOptsCircuitType OBJECT-TYPE
	SYNTAX	INTEGER {
		normal(1),
		primary(2),
		dialondemand(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Circuit Type Attribute  "
	DEFVAL	{ normal }
	::= { wfSwservOptsEntry 3 }

wfSwservOptsBackupCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Backup Circuit Number assigned by site manager "
	::= { wfSwservOptsEntry 4 }

wfSwservOptsBackupPool OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Backup Pool Id "
	::= { wfSwservOptsEntry 5 }

wfSwservOptsDemandPool OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Dial on Demand Pool Id "
	::= { wfSwservOptsEntry 6 }

wfSwservOptsBackupMode OBJECT-TYPE
	SYNTAX	INTEGER {
		master(1),
		slave(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Mode  Master ( initiate  dialing ) or Slave "
	DEFVAL	{ master }
	::= { wfSwservOptsEntry 7 }

wfSwservOptsActiveBackupCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Active Backup Indicator  "
	::= { wfSwservOptsEntry 8 }

wfSwservOptsForcedDial OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Forced Dial Indicator  "
	DEFVAL	{ disabled }
	::= { wfSwservOptsEntry 9 }

wfSwservOptsMaxUpTime OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Max amount fo time dial call can exist  "
	::= { wfSwservOptsEntry 10 }

wfSwservOptsBringUpHour OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Time of day hour to allow a line to dial "
	::= { wfSwservOptsEntry 11 }

wfSwservOptsBringUpMinute OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Time of day minute to allow a line to dial "
	::= { wfSwservOptsEntry 12 }

wfSwservOptsTakeDownHour OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Time of day hour to take down a dial line "
	::= { wfSwservOptsEntry 13 }

wfSwservOptsTakeDownMinute OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Time of day minute to take down a dial line "
	::= { wfSwservOptsEntry 14 }

wfSwservOptsInactivityTime OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(9999),
		default(10)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Value of inactivity timer for Dial on demand  type circuit "
	DEFVAL	{ default }
	::= { wfSwservOptsEntry 15 }

wfSwservOptsCircuitState OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		inactive(2),
		notpresent(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Circuit State "
	DEFVAL	{ notpresent }
	::= { wfSwservOptsEntry 16 }

wfSwservOptsPrimaryDownTime OBJECT-TYPE
	SYNTAX	INTEGER {
		default(5)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Amount of time allowed for establishment of primary before
		 the backup is invoked "
	DEFVAL	{ default }
	::= { wfSwservOptsEntry 17 }

wfSwservOptsNumOutgoingConn OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Outgoing call attempts for this circuit "
	::= { wfSwservOptsEntry 18 }

wfSwservOptsNumIncomingConn OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Incoming call attempts for this circuit "
	::= { wfSwservOptsEntry 19 }

wfSwservOptsActiveSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Slot actively in use by this call "
	::= { wfSwservOptsEntry 20 }

wfSwservOptsActiveLine OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Line actively in use by this call "
	::= { wfSwservOptsEntry 21 }

wfSwservOptsPacketsDropped OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Incoming call attempts for this circuit "
	::= { wfSwservOptsEntry 22 }

wfSwservOptsTimeLastPktDropped OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Incoming call attempts for this circuit "
	::= { wfSwservOptsEntry 23 }

wfSwservOptsForcedTakedown OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Forced Dial Indicator  "
	DEFVAL	{ disabled }
	::= { wfSwservOptsEntry 24 }

wfSwservOutPhoneNumTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfSwservOutPhoneNumEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"***************************************
		    SWSERV outgoing phone number list 
		  "
	::= { wfCircuitOptsGroup 6 }

wfSwservOutPhoneNumEntry OBJECT-TYPE
	SYNTAX	WfSwservOutPhoneNumEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the SWSERV_SYNC table "
	INDEX	{ wfSwservOutPhoneNumCct,
		wfSwservOutPhoneNumIndex }
	::= { wfSwservOutPhoneNumTable 1 }

WfSwservOutPhoneNumEntry ::= SEQUENCE {
	wfSwservOutPhoneNumDelete
		INTEGER,
	wfSwservOutPhoneNumCct
		INTEGER,
	wfSwservOutPhoneNumIndex
		INTEGER,
	wfSwservOutPhoneNumRmtStationNum
		DisplayString,
	wfSwservOutPhoneNumSubAddr
		DisplayString
}

wfSwservOutPhoneNumDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Delete this phone number from the list "
	DEFVAL	{ create }
	::= { wfSwservOutPhoneNumEntry 1 }

wfSwservOutPhoneNumCct OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1023)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" CCT number for this phone list instance "
	::= { wfSwservOutPhoneNumEntry 2 }

wfSwservOutPhoneNumIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		outnummin(1),
		outnummax(255)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" a unique one up type number to create a list "
	::= { wfSwservOutPhoneNumEntry 3 }

wfSwservOutPhoneNumRmtStationNum OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the station address (phone number) of the remote system "
	::= { wfSwservOutPhoneNumEntry 4 }

wfSwservOutPhoneNumSubAddr OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" for Swserv phone numbers, the sub address portion "
	::= { wfSwservOutPhoneNumEntry 5 }

wfSwservInPhoneNumTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfSwservInPhoneNumEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		    SWSERV Ingoing phone number list 
		  "
	::= { wfCircuitOptsGroup 7 }

wfSwservInPhoneNumEntry OBJECT-TYPE
	SYNTAX	WfSwservInPhoneNumEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Swserv_SYNC table "
	INDEX	{ wfSwservInPhoneNumCct,
		wfSwservInPhoneNumIndex }
	::= { wfSwservInPhoneNumTable 1 }

WfSwservInPhoneNumEntry ::= SEQUENCE {
	wfSwservInPhoneNumDelete
		INTEGER,
	wfSwservInPhoneNumCct
		INTEGER,
	wfSwservInPhoneNumIndex
		INTEGER,
	wfSwservInPhoneNumRmtStationNum
		DisplayString,
	wfSwservInPhoneNumSubAddr
		DisplayString
}

wfSwservInPhoneNumDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Delete this phone number from the list "
	DEFVAL	{ create }
	::= { wfSwservInPhoneNumEntry 1 }

wfSwservInPhoneNumCct OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1023)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" CCT number for this phone list instance "
	::= { wfSwservInPhoneNumEntry 2 }

wfSwservInPhoneNumIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		innummin(1),
		innummax(255)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" a unique one up type number to create a list "
	::= { wfSwservInPhoneNumEntry 3 }

wfSwservInPhoneNumRmtStationNum OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the station address (phone number) of the remote system "
	::= { wfSwservInPhoneNumEntry 4 }

wfSwservInPhoneNumSubAddr OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" for Swserv phone numbers, the sub address portion "
	::= { wfSwservInPhoneNumEntry 5 }

wfCctOptsBrBuPppFilterTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfCctOptsBrBuPppFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Dial Backup PPP Datalink filter table "
	::= { wfCircuitOptsGroup 8 }

wfCctOptsBrBuPppFilterEntry OBJECT-TYPE
	SYNTAX	WfCctOptsBrBuPppFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in WfCctOptsBrBuPppFilterTable. "
	INDEX	{ wfCctOptsBrBuPppFilterCct,
		wfCctOptsBrBuPppFilterRuleNumber,
		wfCctOptsBrBuPppFilterFragment }
	::= { wfCctOptsBrBuPppFilterTable 1 }

WfCctOptsBrBuPppFilterEntry ::= SEQUENCE {
	wfCctOptsBrBuPppFilterCreate
		INTEGER,
	wfCctOptsBrBuPppFilterEnable
		INTEGER,
	wfCctOptsBrBuPppFilterState
		INTEGER,
	wfCctOptsBrBuPppFilterCounter
		Counter,
	wfCctOptsBrBuPppFilterDefinition
		OCTET STRING,
	wfCctOptsBrBuPppFilterReserved
		INTEGER,
	wfCctOptsBrBuPppFilterCct
		INTEGER,
	wfCctOptsBrBuPppFilterRuleNumber
		INTEGER,
	wfCctOptsBrBuPppFilterFragment
		INTEGER
}

wfCctOptsBrBuPppFilterCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the existence of the traffic filter rule:
		  created - traffic filter exists
		  delete - traffic filter does not exist and can be deleted. "
	DEFVAL	{ created }
	::= { wfCctOptsBrBuPppFilterEntry 1 }

wfCctOptsBrBuPppFilterEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines whether or not the traffic filter rule should be used:
		  enabled - activate the rule.
		  disabled - inactivate the rule. "
	DEFVAL	{ enabled }
	::= { wfCctOptsBrBuPppFilterEntry 2 }

wfCctOptsBrBuPppFilterState OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		error(2),
		inactive(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Defines the current State of the traffic filter:
		  inactive - the rule is not in use.
		  active - the rule is being used.
		  error - the application detected an error in the rule. "
	DEFVAL	{ inactive }
	::= { wfCctOptsBrBuPppFilterEntry 3 }

wfCctOptsBrBuPppFilterCounter OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received packets that have
		           matched this rule. "
	::= { wfCctOptsBrBuPppFilterEntry 4 }

wfCctOptsBrBuPppFilterDefinition OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The filter rule definition. "
	::= { wfCctOptsBrBuPppFilterEntry 5 }

wfCctOptsBrBuPppFilterReserved OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Reserved field. "
	::= { wfCctOptsBrBuPppFilterEntry 6 }

wfCctOptsBrBuPppFilterCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The ID of the CctBridge Cct to which the
		    filter is applied. "
	::= { wfCctOptsBrBuPppFilterEntry 7 }

wfCctOptsBrBuPppFilterRuleNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" ID for the rule. "
	::= { wfCctOptsBrBuPppFilterEntry 8 }

wfCctOptsBrBuPppFilterFragment OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Fragment number - for large rules. "
	::= { wfCctOptsBrBuPppFilterEntry 9 }

wfCctOptsIpBuPppFilterTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfCctOptsIpBuPppFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" IP Filter Table for Backup Lines "
	::= { wfCircuitOptsGroup 9 }

wfCctOptsIpBuPppFilterEntry OBJECT-TYPE
	SYNTAX	WfCctOptsIpBuPppFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in WfCctOptsIpBuPppFilterTable. "
	INDEX	{ wfCctOptsIpBuPppFilterCct,
		wfCctOptsIpBuPppFilterRuleNumber,
		wfCctOptsIpBuPppFilterFragment }
	::= { wfCctOptsIpBuPppFilterTable 1 }

WfCctOptsIpBuPppFilterEntry ::= SEQUENCE {
	wfCctOptsIpBuPppFilterCreate
		INTEGER,
	wfCctOptsIpBuPppFilterEnable
		INTEGER,
	wfCctOptsIpBuPppFilterState
		INTEGER,
	wfCctOptsIpBuPppFilterCounter
		Counter,
	wfCctOptsIpBuPppFilterDefinition
		OCTET STRING,
	wfCctOptsIpBuPppFilterReserved
		INTEGER,
	wfCctOptsIpBuPppFilterCct
		INTEGER,
	wfCctOptsIpBuPppFilterRuleNumber
		INTEGER,
	wfCctOptsIpBuPppFilterFragment
		INTEGER
}

wfCctOptsIpBuPppFilterCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the existence of the traffic filter rule:
		  created - traffic filter exists
		  delete - traffic filter does not exist and can be deleted. "
	DEFVAL	{ created }
	::= { wfCctOptsIpBuPppFilterEntry 1 }

wfCctOptsIpBuPppFilterEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines whether or not the traffic filter rule should be used:
		  enabled - activate the rule.
		  disabled - inactivate the rule. "
	DEFVAL	{ enabled }
	::= { wfCctOptsIpBuPppFilterEntry 2 }

wfCctOptsIpBuPppFilterState OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		error(2),
		inactive(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Defines the current State of the traffic filter:
		  inactive - the rule is not in use.
		  active - the rule is being used.
		  error - the application detected an error in the rule. "
	DEFVAL	{ inactive }
	::= { wfCctOptsIpBuPppFilterEntry 3 }

wfCctOptsIpBuPppFilterCounter OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received packets that have
		           matched this rule. "
	::= { wfCctOptsIpBuPppFilterEntry 4 }

wfCctOptsIpBuPppFilterDefinition OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The filter rule definition. "
	::= { wfCctOptsIpBuPppFilterEntry 5 }

wfCctOptsIpBuPppFilterReserved OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Reserved field. "
	::= { wfCctOptsIpBuPppFilterEntry 6 }

wfCctOptsIpBuPppFilterCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The ID of the CctBridge Cct to which the
		    filter is applied. "
	::= { wfCctOptsIpBuPppFilterEntry 7 }

wfCctOptsIpBuPppFilterRuleNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" ID for the rule. "
	::= { wfCctOptsIpBuPppFilterEntry 8 }

wfCctOptsIpBuPppFilterFragment OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Fragment number - for large rules. "
	::= { wfCctOptsIpBuPppFilterEntry 9 }

wfCircuitNameTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfCircuitNameEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The table of circuit names "
	::= { wfServices 3 }

wfCircuitNameEntry OBJECT-TYPE
	SYNTAX	WfCircuitNameEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Entry format for the table of circuit names "
	INDEX	{ wfCircuitNumber }
	::= { wfCircuitNameTable 1 }

WfCircuitNameEntry ::= SEQUENCE {
	wfCircuitNameDelete
		INTEGER,
	wfCircuitNumber
		INTEGER,
	wfCircuitName
		DisplayString,
	wfCircuitIfType
		INTEGER,
	wfCircuitProtoMap
		OCTET STRING,
	wfCircuitType
		INTEGER,
	wfCircuitRelCctList
		OCTET STRING,
	wfCircuitLineList
		OCTET STRING
}

wfCircuitNameDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Creation and deletion flag for this record "
	DEFVAL	{ create }
	::= { wfCircuitNameEntry 1 }

wfCircuitNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" circuit number "
	::= { wfCircuitNameEntry 2 }

wfCircuitName OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" circuit name "
	::= { wfCircuitNameEntry 3 }

wfCircuitIfType OBJECT-TYPE
	SYNTAX	INTEGER {
		csmacd(10),
		sync(20),
		t1(30),
		e1(40),
		token(50),
		fddi(60),
		hssi(70)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" circuit interface type "
	::= { wfCircuitNameEntry 4 }

wfCircuitProtoMap OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"CIRCUIT_PROTO_BRIDGE 1
		CIRCUIT_PROTO_SPANTREE  2
		CIRCUIT_PROTO_IP  3
		CIRCUIT_PROTO_RIP  4
		CIRCUIT_PROTO_EGP  5
		CIRCUIT_PROTO_OSPF  6
		CIRCUIT_PROTO_SNMP  7
		CIRCUIT_PROTO_TFTP  8
		CIRCUIT_PROTO_TCP  9
		CIRCUIT_PROTO_DECNET4  10
		CIRCUIT_PROTO_VINES  11
		CIRCUIT_PROTO_SMDS  12
		CIRCUIT_PROTO_FR  13
		CIRCUIT_PROTO_IPX  14
		CIRCUIT_PROTO_IPX_RIP  15
		CIRCUIT_PROTO_XNS  16
		CIRCUIT_PROTO_XNS_RIP  17
		CIRCUIT_PROTO_AT         18
		CIRCUIT_PROTO_SR  19
		CIRCUIT_PROTO_FR_VC  20
		CIRCUIT_PROTO_PRI_Q  21
		CIRCUIT_PROTO_PPP  22
		CIRCUIT_PROTO_OSI               23
		CIRCUIT_PROTO_LLC2  24
		CIRCUIT_PROTO_LNM  25
		CIRCUIT_PROTO_X25  26
		CIRCUIT_PROTO_ATM               27
		CIRCUIT_PROTO_ATM_VC            28
		CIRCUIT_PROTO_TELNET  29
		CIRCUIT_PROTO_STA  30
		CIRCUIT_PROTO_BGP  31
		CIRCUIT_PROTO_DLS  32
		CIRCUIT_PROTO_RARP  33
		CIRCUIT_PROTO_BOOTP  34
		CIRCUIT_PROTO_LLC2_VC  35
		CIRCUIT_PROTO_AURP  36
		CIRCUIT_PROTO_X25_VC  37
		CIRCUIT_PROTO_DEMAND  38
		CIRCUIT_PROTO_CL_IP  39
		CIRCUIT_PROTO_PROXY  40 
		NUMBER_OF_PROTOCOLS  40 "
	::= { wfCircuitNameEntry 5 }

wfCircuitType OBJECT-TYPE
	SYNTAX	INTEGER {
		normal(1),
		virtual(2),
		master(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The circuit type "
	DEFVAL	{ normal }
	::= { wfCircuitNameEntry 6 }

wfCircuitRelCctList OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The related circuit list for this circuit: only valid if
		  wfCircuitType is either CIRCUIT_REL_VIRTUAL or CIRCUIT_REL_MASTER "
	::= { wfCircuitNameEntry 7 }

wfCircuitLineList OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The line info list for this circuit "
	::= { wfCircuitNameEntry 8 }

wfLineMappingTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfLineMappingEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The table of line mappings "
	::= { wfCircuitNameExtension 1 }

wfLineMappingEntry OBJECT-TYPE
	SYNTAX	WfLineMappingEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Entry format for the table of lines "
	INDEX	{ wfLineMappingNumber }
	::= { wfLineMappingTable 1 }

WfLineMappingEntry ::= SEQUENCE {
	wfLineMappingDelete
		INTEGER,
	wfLineMappingNumber
		INTEGER,
	wfLineMappingCct
		INTEGER,
	wfLineMappingDef
		OCTET STRING
}

wfLineMappingDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Creation and deletion flag for this record "
	DEFVAL	{ created }
	::= { wfLineMappingEntry 1 }

wfLineMappingNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Unique line number. This number is stored in the physical line entries. "
	::= { wfLineMappingEntry 2 }

wfLineMappingCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Circuit number stored in the physical line entry. "
	::= { wfLineMappingEntry 3 }

wfLineMappingDef OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Identifies which physical line this line maps to.  "
	::= { wfLineMappingEntry 4 }

wfNode		OBJECT IDENTIFIER ::= { wfCircuitNameExtension 2 }

wfNodeDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Create/Delete parameter. Default is created.
		     SM performs a set operation on this
		     object in order to create/delete Node base record."
	DEFVAL	{ created }
	::= { wfNode 1 }

wfNodeProtoMap OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Node-Protocol mask, indicates what protocols are configured
		 on the router , for bit numbers see wfCircuitProtomap"
	::= { wfNode 2 }

wfConsole	OBJECT IDENTIFIER ::= { wfServices 1 }

wfBaudRate OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" Baud rate configured on the Technician Interface console "
	DEFVAL	{ 9600 }
	::= { wfConsole 1 }

wfDataBits OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" Number of data bits configured on the Technician Interface console "
	DEFVAL	{ 8 }
	::= { wfConsole 2 }

wfParity OBJECT-TYPE
	SYNTAX	INTEGER {
		none(1),
		odd(2),
		even(3)
	}
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" Type of parity configured on the Technician Interface console "
	DEFVAL	{ none }
	::= { wfConsole 3 }

wfStopBits OBJECT-TYPE
	SYNTAX	INTEGER {
		s1bit(1),
		s15bit(2),
		s2bit(3)
	}
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" Number of stop bits configured on the Technician Interface console "
	DEFVAL	{ s1bit }
	::= { wfConsole 4 }

wfModemEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" Enable the Technician Interface console to run over a modem "
	DEFVAL	{ disabled }
	::= { wfConsole 5 }

wfLinesPerScreen OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" Number of lines which can be displayed in one screen on the Technician
		   Interface console "
	DEFVAL	{ 24 }
	::= { wfConsole 6 }

wfMoreEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" Enable the 'more' feature on the Technician Interface console "
	DEFVAL	{ enabled }
	::= { wfConsole 7 }

wfPrompt OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" Character string which will be used as the system prompt on
		   the Technician Interface console "
	::= { wfConsole 8 }

wfLoginTimeOut OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(99)
	}
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" IF MODEM_ENABLED then time out in minutes to HUP when at the login prompt "
	DEFVAL	{ minimum }
	::= { wfConsole 9 }

wfPasswordTimeOut OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(99)
	}
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" Timout on Password entry "
	DEFVAL	{ minimum }
	::= { wfConsole 10 }

wfCommandTimeOut OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(99),
		default(15)
	}
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" IF MODEM_ENABLED then time out in minutes to HUP when at the command prompt "
	DEFVAL	{ default }
	::= { wfConsole 11 }

wfLoginRetries OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(99),
		default(3)
	}
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" IF MODEM_ENABLED then limit # of login attempts then HUP "
	DEFVAL	{ default }
	::= { wfConsole 12 }

wfTotalLogins OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" Total number of TI login attempts "
	::= { wfConsole 13 }

wfUserLoginErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" Total number of FAILED User login attempts "
	::= { wfConsole 14 }

wfManagerLoginErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" Total number of FAILED Manager login attempts "
	::= { wfConsole 15 }

wfOtherLoginErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" Total number of FAILED Other login attempts "
	::= { wfConsole 16 }

wfTtyFrameErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" Count of TTY Frame errors "
	::= { wfConsole 17 }

wfTtyOverrunErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" Count of TTY Overrun errors "
	::= { wfConsole 18 }

wfTtyParityErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" Count of TTY Parity errors "
	::= { wfConsole 19 }

wfTtyInfifoErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" Count of TTY Input Fifo errors "
	::= { wfConsole 20 }

wfCSMACDTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfCSMACDEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		   CSMA/CD line record
		 "
	::= { wfLine 1 }

wfCSMACDEntry OBJECT-TYPE
	SYNTAX	WfCSMACDEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the csmacd table "
	INDEX	{ wfCSMACDSlot,
		wfCSMACDConnector }
	::= { wfCSMACDTable 1 }

WfCSMACDEntry ::= SEQUENCE {
	wfCSMACDDelete
		INTEGER,
	wfCSMACDEnable
		INTEGER,
	wfCSMACDState
		INTEGER,
	wfCSMACDSlot
		INTEGER,
	wfCSMACDConnector
		INTEGER,
	wfCSMACDCct
		INTEGER,
	wfCSMACDBofl
		INTEGER,
	wfCSMACDBoflTmo
		INTEGER,
	wfCSMACDMtu
		INTEGER,
	wfCSMACDMadr
		OCTET STRING,
	wfCSMACDOctetsRxOk
		Counter,
	wfCSMACDFramesRxOk
		Counter,
	wfCSMACDOctetsTxOk
		Counter,
	wfCSMACDFramesTxOk
		Counter,
	wfCSMACDDeferredTx
		Counter,
	wfCSMACDLateCollnTx
		Counter,
	wfCSMACDExcessvCollnTx
		Counter,
	wfCSMACDBablErrorTx
		Counter,
	wfCSMACDBufErrorTx
		Counter,
	wfCSMACDLcarTx
		Counter,
	wfCSMACDUfloTx
		Counter,
	wfCSMACDFcsErrorRx
		Counter,
	wfCSMACDAlignErrorRx
		Counter,
	wfCSMACDLackRescErrorRx
		Counter,
	wfCSMACDTooLongErrorRx
		Counter,
	wfCSMACDOfloRx
		Counter,
	wfCSMACDMerr
		Counter,
	wfCSMACDCerr
		Counter,
	wfCSMACDHardwareFilter
		INTEGER,
	wfCSMACDTxQueueLength
		INTEGER,
	wfCSMACDRxQueueLength
		INTEGER,
	wfCSMACDTxClipFrames
		Counter,
	wfCSMACDRxReplenMisses
		Counter,
	wfCSMACDCfgTxQueueLength
		INTEGER,
	wfCSMACDCfgRxQueueLength
		INTEGER,
	wfCSMACDAlignmentMode
		INTEGER,
	wfCSMACDUnAlignedFrames
		Counter,
	wfCSMACDLineNumber
		INTEGER,
	wfCSMACDLateCollnRx
		Counter
}

wfCSMACDDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" create/delete parameter, dflt = created "
	DEFVAL	{ create }
	::= { wfCSMACDEntry 1 }

wfCSMACDEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" enable/disable parameter, dflt = enabled "
	DEFVAL	{ enable }
	::= { wfCSMACDEntry 2 }

wfCSMACDState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" line driver state variable, Not Present, Init, Down, Up "
	DEFVAL	{ notpresent }
	::= { wfCSMACDEntry 3 }

wfCSMACDSlot OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(14)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" instance ID Slot, filled in by driver "
	::= { wfCSMACDEntry 4 }

wfCSMACDConnector OBJECT-TYPE
	SYNTAX	INTEGER {
		one(1),
		two(2),
		three(3),
		four(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" instance ID Connector, filled in by driver "
	::= { wfCSMACDEntry 5 }

wfCSMACDCct OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1023)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" cct number for this line instance "
	::= { wfCSMACDEntry 6 }

wfCSMACDBofl OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" bofl parameter, dflt = enabled "
	DEFVAL	{ enable }
	::= { wfCSMACDEntry 7 }

wfCSMACDBoflTmo OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(60),
		default(5)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" bofl parameter, dflt = 5 "
	DEFVAL	{ default }
	::= { wfCSMACDEntry 8 }

wfCSMACDMtu OBJECT-TYPE
	SYNTAX	INTEGER {
		default(1518)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" mtu parameter, fixed "
	DEFVAL	{ default }
	::= { wfCSMACDEntry 9 }

wfCSMACDMadr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" line MAC address, fixed - line driver fills in "
	::= { wfCSMACDEntry 10 }

wfCSMACDOctetsRxOk OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of octets received without error "
	::= { wfCSMACDEntry 11 }

wfCSMACDFramesRxOk OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames received without error "
	::= { wfCSMACDEntry 12 }

wfCSMACDOctetsTxOk OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of octets transmitted without error "
	::= { wfCSMACDEntry 13 }

wfCSMACDFramesTxOk OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames transmitted without error "
	::= { wfCSMACDEntry 14 }

wfCSMACDDeferredTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of deferred transmissions "
	::= { wfCSMACDEntry 15 }

wfCSMACDLateCollnTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of late collisions "
	::= { wfCSMACDEntry 16 }

wfCSMACDExcessvCollnTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of excessive collisions "
	::= { wfCSMACDEntry 17 }

wfCSMACDBablErrorTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames transmitted larger than 1518 octets "
	::= { wfCSMACDEntry 18 }

wfCSMACDBufErrorTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of internal buffer errors "
	::= { wfCSMACDEntry 19 }

wfCSMACDLcarTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of loss of carrier errors "
	::= { wfCSMACDEntry 20 }

wfCSMACDUfloTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of transmitter underflow errors "
	::= { wfCSMACDEntry 21 }

wfCSMACDFcsErrorRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of receiver checksum errors "
	::= { wfCSMACDEntry 22 }

wfCSMACDAlignErrorRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of receiver alignment errors "
	::= { wfCSMACDEntry 23 }

wfCSMACDLackRescErrorRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of receiver lack of resource errors "
	::= { wfCSMACDEntry 24 }

wfCSMACDTooLongErrorRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames received exceeding 1518 octets "
	::= { wfCSMACDEntry 25 }

wfCSMACDOfloRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of receiver overflow errors "
	::= { wfCSMACDEntry 26 }

wfCSMACDMerr OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of internal memory errors "
	::= { wfCSMACDEntry 27 }

wfCSMACDCerr OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of collision errors "
	::= { wfCSMACDEntry 28 }

wfCSMACDHardwareFilter OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Hardware filtering parameter. "
	DEFVAL	{ disable }
	::= { wfCSMACDEntry 29 }

wfCSMACDTxQueueLength OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Current Transmit Queue Length "
	::= { wfCSMACDEntry 30 }

wfCSMACDRxQueueLength OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Current Receive Queue Length "
	::= { wfCSMACDEntry 31 }

wfCSMACDTxClipFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames clipped in driver's transmit routine due to transmit
		   congestion.
		"
	::= { wfCSMACDEntry 32 }

wfCSMACDRxReplenMisses OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of packet buffer misses while attempting to replenish driver
		   receive ring.
		"
	::= { wfCSMACDEntry 33 }

wfCSMACDCfgTxQueueLength OBJECT-TYPE
	SYNTAX	INTEGER {
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configured Transmit Queue Length. Values other than zero over-ride
		   the router selected values. A value of zero has a special meaning.
		   Zero causes router based default values to be used. Values larger 
		   than the compiled ring size are truncated to the compiled ring 
		   size.
		"
	::= { wfCSMACDEntry 34 }

wfCSMACDCfgRxQueueLength OBJECT-TYPE
	SYNTAX	INTEGER {
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configured Receive Queue Length. Values other than zero over-ride
		   the router selected values. A value of zero has a special meaning.
		   Zero causes router based default values to be used. Values larger 
		   than the compiled ring size are truncated to the compiled ring 
		   size.
		"
	::= { wfCSMACDEntry 35 }

wfCSMACDAlignmentMode OBJECT-TYPE
	SYNTAX	INTEGER {
		all(1),
		bytes(2),
		disabled(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enables special frame re-alignment in the Line Driver. Only needed when
		   4 ethernet interfaces are configured on a single slot.  Only needed if
		   experiencing transmit underflow errors (wfCSMACDUfloTx).  When this
		   attribute is set to DISABLED,  non-optimally aligned frames are transmitted
		   as is.  When this attribute is set to ALIGN_ALL,  all non-optimally aligned
		   frames are re-aligned before transmission.  When this attribute is set to
		   ALIGN_OVER_128_BYTES,  all non-optimally aligned frames over 128 bytes in
		   length are re-aligned before transmission and frames up to and including
		   128 bytes in length are transmitted as is.
		"
	DEFVAL	{ disabled }
	::= { wfCSMACDEntry 36 }

wfCSMACDUnAlignedFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of non-optimally aligned frames queued to the driver for transmit.
		   Depending on the value of wfCSMACDAlignmentMode,  these frames may have
		   have been transmitted as is or may have been re-aligned before transmission.
		"
	::= { wfCSMACDEntry 37 }

wfCSMACDLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Logical line number associated with this driver entity. "
	::= { wfCSMACDEntry 38 }

wfCSMACDLateCollnRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of late collisions - found in QUICC Ethernet Rx Buffer Descriptors "
	::= { wfCSMACDEntry 39 }

wfivRouteGroup	OBJECT IDENTIFIER ::= { wfDecGroup 1 }

wfivRouteCreateDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value determines whether DECnet is configured on this slot.'
		 "
	DEFVAL	{ create }
	::= { wfivRouteGroup 1 }

wfivRouteEnableDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  'This value determines whether DECnet is to startup.'
		 "
	DEFVAL	{ enable }
	::= { wfivRouteGroup 2 }

wfivRouteState OBJECT-TYPE
	SYNTAX	INTEGER {
		notpresent(4),
		initializing(3),
		down(2),
		up(1)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  'This value determines whether DECnet is to startup.'
		 "
	DEFVAL	{ notpresent }
	::= { wfivRouteGroup 3 }

wfivRouteBroadcastRouteTimer OBJECT-TYPE
	SYNTAX	INTEGER {
		routetimermin(1),
		routetimerdflt(180),
		routetimermax(65535)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  'This value determines the maximum time allowed between
		  Routing updates on Ethernet circuits. When this timer expires
		  before a routing update occurs, a routing update is forced.
		  With a standard calculation, Routing also uses this timer to
		  enforce a minimum delay between routing updates. Seconds is a
		  decimal integer in the range 1-65535.'
		 "
	DEFVAL	{ routetimerdflt }
	::= { wfivRouteGroup 4 }

wfivRouteRoutingVers OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  'This read-only parameter identifies the executor node's
		  Routing version number. The format is the same as for the
		  Network Management version number.'
		  "
	::= { wfivRouteGroup 5 }

wfivRouteMaxAddr OBJECT-TYPE
	SYNTAX	INTEGER {
		minaddr(1),
		maxaddr(1023)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value represents the largest node number and,
		 therefore, number of nodes that can be known about
		 by the executor node's home area. The number is an integer
		 in the range 1-1023.'
		 "
	DEFVAL	{ maxaddr }
	::= { wfivRouteGroup 6 }

wfivRouteMaxBdcastNonRouters OBJECT-TYPE
	SYNTAX	INTEGER {
		nonroutersdflt(64),
		nonroutersmax(1023)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value represents the maximum total number of nonrouters
		 the executor node can have on its broadcast circuits for one slot. 
		 The number is an integer in the range 0-1023.'
		 "
	DEFVAL	{ nonroutersdflt }
	::= { wfivRouteGroup 7 }

wfivRouteMaxBdcastRouters OBJECT-TYPE
	SYNTAX	INTEGER {
		routersdflt(32),
		routersdmax(1023)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value represents the maximum total number of routers the
		 executor node can have on its broadcast circuits for one slot.
		 The number is an integer in the range 0-1023.'
		 "
	DEFVAL	{ routersdflt }
	::= { wfivRouteGroup 8 }

wfivRouteMaxCircuits OBJECT-TYPE
	SYNTAX	INTEGER {
		circuitsmin(1),
		circuitsdflt(16),
		circuitswfmax(1024),
		circuitsmax(65535)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value represents the maximum number of Routing circuits
		 that the executor node can know about. The number is decimal
		 in the range 1-65535. Wellfleet limits this to 1024'
		 "
	DEFVAL	{ circuitswfmax }
	::= { wfivRouteGroup 9 }

wfivRouteMaxCost OBJECT-TYPE
	SYNTAX	INTEGER {
		mincost(1),
		maxcost(1022)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value represents the maximum total path cost allowed
		 from the executor to any node within an area. The path cost is
		 the sum of the circuit costs along a path between two nodes.
		 This parameter defines the point where the executor node's
		 Routing decision algorithm declares another node
		 unreachable because the cost of the least costly path to the
		 other node is excessive. For correct operation, this parameter
		 must not be less than the maximum path cost of the network.
		 The MAXIMUM COST number is decimal in the range
		 1-1022.'
		 "
	DEFVAL	{ maxcost }
	::= { wfivRouteGroup 10 }

wfivRouteMaxHops OBJECT-TYPE
	SYNTAX	INTEGER {
		minhops(1),
		maxhops(30)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value represents the maximum number of routing hops
		 allowable from the executor to any other reachable node within
		 an area. (A hop is the logical distance over a circuit between
		 two adjacent nodes.) This parameter defines the point where
		 the executor node's Routing decision algorithm
		 declares another node unreachable because the length of the
		 shortest path between the two nodes is too long. For correct
		 operation, this parameter must not be less than the network
		 diameter. (The network diameter is the reachability distance
		 between the two nodes of the network having the greatest
		 reachability distance, where reachability distance is the
		 length the shortest path between a given pair of nodes.) The
		 MAXIMUM HOPS number is decimal in the range 1-30.'
		 "
	DEFVAL	{ maxhops }
	::= { wfivRouteGroup 11 }

wfivRouteMaxVisits OBJECT-TYPE
	SYNTAX	INTEGER {
		maxvisits(63)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value represents the maximum number of nodes a message
		 coming into the executor node can have visited. If the message
		 is not for this node and the MAXIMUM VISITS number is exceeded,
		 the message is discarded. The MAXIMUM VISITS parameter defines
		 the point where the packet lifetime control algorithm discards
		 a packet that has traversed too many nodes. For correct
		 operation, this parameter must not be less than the maximum
		 path length of the network. (The maximum path length is the
		 routing distance between the two nodes of the network having
		 the greatest routing distance, where routing distance is the
		 length of the least costly path between a given pair of nodes.)
		 The MAXIMUM VISITS number is decimal in the range MAXIMUM HOPS
		 to 63.'
		 "
	DEFVAL	{ maxvisits }
	::= { wfivRouteGroup 12 }

wfivRouteAreaMaxCost OBJECT-TYPE
	SYNTAX	INTEGER {
		amincost(1),
		amaxcost(1022)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value represents the maximum total path cost allowed
		 from the executor to any other level 2 routing node. The AREA
		 MAXIMUM COST number is decimal in the range
		 1-1022. This parameter is only applicable if the executor
		 node is of type AREA.'
		 "
	DEFVAL	{ amaxcost }
	::= { wfivRouteGroup 13 }

wfivRouteAreaMaxHops OBJECT-TYPE
	SYNTAX	INTEGER {
		aminhops(1),
		amaxhops(30)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value represents the maximum number of routing hops
		 allowable from the executor to any other level 2 routing node.
		 The AREA MAXIMUM HOPS number is decimal in the range
		 1-30.This parameter is only applicable if the executor node
		 is of type AREA.'
		 "
	DEFVAL	{ amaxhops }
	::= { wfivRouteGroup 14 }

wfivRouteMaxArea OBJECT-TYPE
	SYNTAX	INTEGER {
		minarea(1),
		maxarea(63)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value represents the largest area number and, therefore,
		 number of areas that can be known about by the executor node's
		 Routing. This parameter is only applicable if the executor
		 node is of type AREA. The number is an integer in the range
		 1-63.'
		 "
	DEFVAL	{ maxarea }
	::= { wfivRouteGroup 15 }

wfivRouteType OBJECT-TYPE
	SYNTAX	INTEGER {
		area(3),
		routingiv(4),
		nonroutingiv(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'This parameter indicates the type of the executor node. The
		 node-type is one of the following:
		 ROUTING III
		 NONROUTING III
		 ROUTING IV
		 NONROUTING IV
		 AREA
		 A routing node has full routing capability. A nonrouting node
		 contains a subset of the Routing modules. The III and
		 IV indicate the DNA phase of the node. Nonrouting nodes can
		 deliver and receive packets to and from any node, but cannot
		 route packets from other nodes through to other nodes. An
		 area node routes between areas. Refer to the Routing
		 specification for details.
		 For adjacent nodes, this is a read-only parameter that
		 indicates the type of the reachable adjacent node.
		 NOTE: The ROUTING III and NONROUTING III values are
		 incremented by one compared to the standard DECnet values in
		 order to maintain compliance with RFC 1155)'
		 "
	DEFVAL	{ area }
	::= { wfivRouteGroup 16 }

wfivRouteNumAdjs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This value represents the total number of adjacencies learned by
		       the router.
		     "
	::= { wfivRouteGroup 17 }

wfivRouteNumLvl1Rts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This value represents the total number of Level 1 Routes learned by
		       the router.
		     "
	::= { wfivRouteGroup 18 }

wfivRouteNumAreas OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This value represents the total number of Areas learned by
		       the router.
		     "
	::= { wfivRouteGroup 19 }

wfivCircuitTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfivCircuitEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		' Table of DECnet Circuit Configuration and Counter Records'
		"
	::= { wfDecGroup 2 }

wfivCircuitEntry OBJECT-TYPE
	SYNTAX	WfivCircuitEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		 'Parameters information about all circuits currently known.
		 NOTE: depending on the type of object being querried (e.g., a
		 level 1 vs. a level 2 router or end system) some variables may
		 not be present.'
		 "
	INDEX	{ wfivCircuitID }
	::= { wfivCircuitTable 1 }

WfivCircuitEntry ::= SEQUENCE {
	wfivCircuitCreateDelete
		INTEGER,
	wfivCircuitEnableDisable
		INTEGER,
	wfivCircuitCommonState
		INTEGER,
	wfivCircuitArea
		INTEGER,
	wfivCircuitNodeid
		INTEGER,
	wfivCircuitNodeAddr
		DisplayString,
	wfivCircuitID
		INTEGER,
	wfivCircuitCommonType
		INTEGER,
	wfivCircuitExecCost
		INTEGER,
	wfivCircuitExecHelloTimer
		INTEGER,
	wfivCircuitDesigRouterNodeAddr
		DisplayString,
	wfivCircuitMaxRouters
		INTEGER,
	wfivCircuitRouterPri
		INTEGER,
	wfivCircuitCountAgedPktLoss
		Counter,
	wfivCircuitCountNodeUnrPktLoss
		Counter,
	wfivCircuitCountOutRngePktLoss
		Counter,
	wfivCircuitCountOverSzePktLoss
		Counter,
	wfivCircuitCountPacketFmtErr
		Counter,
	wfivCircuitCountPtlRteUpdtLoss
		Counter,
	wfivCircuitCountTransitPksRecd
		Counter,
	wfivCircuitCountTransitPkSent
		Counter,
	wfivCircuitCountRtHelloSent
		Counter,
	wfivCircuitCountRtHelloRcvd
		Counter,
	wfivCircuitCountHelloSent
		Counter,
	wfivCircuitCountHelloRcvd
		Counter,
	wfivCircuitCountL1UpdSent
		Counter,
	wfivCircuitCountL1UpdRcvd
		Counter,
	wfivCircuitCountAreaUpdSent
		Counter,
	wfivCircuitCountAreaUpdRcvd
		Counter,
	wfivCircuitCountDropped
		Counter,
	wfivCircuitAllEndnodesMac
		OCTET STRING,
	wfivCircuitAllRoutersMac
		OCTET STRING,
	wfivCircuitAllAreaRoutersMac
		OCTET STRING,
	wfivCircuitHelloEnableDisable
		INTEGER,
	wfivCircuitRtHelloEnableDisable
		INTEGER,
	wfivCircuitL1UpdateEnableDisable
		INTEGER,
	wfivCircuitAllEndnodesMacInUse
		OCTET STRING,
	wfivCircuitAllRoutersMacInUse
		OCTET STRING,
	wfivCircuitAllAreaRoutersMacInUse
		OCTET STRING
}

wfivCircuitCreateDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value determines whether the circuit is configured'
		 "
	DEFVAL	{ create }
	::= { wfivCircuitEntry 1 }

wfivCircuitEnableDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value represents the circuit's Network Management
		 operational state. NOTE: These values are incremented by one
		 compared to the standard DECnet values in order to maintain
		 compliance with RFC 1155.'
		 "
	DEFVAL	{ enable }
	::= { wfivCircuitEntry 2 }

wfivCircuitCommonState OBJECT-TYPE
	SYNTAX	INTEGER {
		notpresent(4),
		initializing(3),
		down(2),
		up(1)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value represents the circuit's operational state.'
		 "
	DEFVAL	{ down }
	::= { wfivCircuitEntry 3 }

wfivCircuitArea OBJECT-TYPE
	SYNTAX	INTEGER {
		minarea(1),
		maxarea(63)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'DECnet Phase IV area number for this circuit.'
		 "
	DEFVAL	{ minarea }
	::= { wfivCircuitEntry 4 }

wfivCircuitNodeid OBJECT-TYPE
	SYNTAX	INTEGER {
		minnodeid(1),
		maxnodeid(1023)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'DECnet Phase IV node address for this circuit.'
		 "
	DEFVAL	{ minnodeid }
	::= { wfivCircuitEntry 5 }

wfivCircuitNodeAddr OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'The address of the adjacent node.'
		 "
	::= { wfivCircuitEntry 6 }

wfivCircuitID OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'A unique value for each known circuit.'
		 "
	::= { wfivCircuitEntry 7 }

wfivCircuitCommonType OBJECT-TYPE
	SYNTAX	INTEGER {
		sync(1),
		x25(4),
		ethernet(6),
		fddi(15),
		smds(100),
		fr(101),
		atm(102)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'Represents the type of the circuit. For X.25 circuits, the
		 value must be set to X25. For DDCMP and Ethernet circuits it
		 is read only and is the same value as the protocol of
		 the associated line.
		 NOTE: Values 1 - 5 are incremented by one compared to the
		 standard DECnet values in order to maintain compliance with
		 RFC 1155.'
		 "
	::= { wfivCircuitEntry 8 }

wfivCircuitExecCost OBJECT-TYPE
	SYNTAX	INTEGER {
		mincost(1),
		defcost(10),
		maxcost(63)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value represents the Routing cost of the circuit.
		 Routing routes messages along the path between two nodes having
		 the smallest cost. The cost is a decimal integer in the range
		 1-63.'
		 "
	DEFVAL	{ defcost }
	::= { wfivCircuitEntry 9 }

wfivCircuitExecHelloTimer OBJECT-TYPE
	SYNTAX	INTEGER {
		hellomin(1),
		hellodef(15),
		hellomax(8191)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value determines the frequency of Routing Hello (T3) messages
		 sent to the adjacent node on the circuit. Seconds is a decimal
		 integer in the range 1-8191.'
		 "
	DEFVAL	{ hellodef }
	::= { wfivCircuitEntry 10 }

wfivCircuitDesigRouterNodeAddr OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value is the address of the designated router.'
		 "
	::= { wfivCircuitEntry 11 }

wfivCircuitMaxRouters OBJECT-TYPE
	SYNTAX	INTEGER {
		maxroutersmax(33)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'NR -This parameter is the maximum number of routers (including
		 the executor itself) allowed on the circuit by Routing for
		 circuits that are owned by the executor node. Number is a
		 decimal integer in the range 1-33.'
		 "
	DEFVAL	{ maxroutersmax }
	::= { wfivCircuitEntry 12 }

wfivCircuitRouterPri OBJECT-TYPE
	SYNTAX	INTEGER {
		routerpridef(64),
		routerprimax(127)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'This parameter is the priority that this router is to have in
		 the selection of designated router for the circuit on circuits
		 that are owned by the executor node. Number is a decimal
		 integer in the range 0-127. The default value is 64.'
		 "
	DEFVAL	{ routerpridef }
	::= { wfivCircuitEntry 13 }

wfivCircuitCountAgedPktLoss OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'Aged packet loss.'
		 "
	::= { wfivCircuitEntry 14 }

wfivCircuitCountNodeUnrPktLoss OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'Node unreachable packet loss.'
		 "
	::= { wfivCircuitEntry 15 }

wfivCircuitCountOutRngePktLoss OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'Node out-of-range packet loss.'
		 "
	::= { wfivCircuitEntry 16 }

wfivCircuitCountOverSzePktLoss OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'Oversized packet loss.'
		 "
	::= { wfivCircuitEntry 17 }

wfivCircuitCountPacketFmtErr OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'Packet format errors.'
		 "
	::= { wfivCircuitEntry 18 }

wfivCircuitCountPtlRteUpdtLoss OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'Partial routing update loss.'
		 "
	::= { wfivCircuitEntry 19 }

wfivCircuitCountTransitPksRecd OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'Transit packets Received. This value is stored internally as
		 a 32 bit value.'
		 "
	::= { wfivCircuitEntry 20 }

wfivCircuitCountTransitPkSent OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'Transit packets sent. This value is stored internally as
		 a 32 bit value.'
		 "
	::= { wfivCircuitEntry 21 }

wfivCircuitCountRtHelloSent OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 ' Router Hellos Sent'
		 "
	::= { wfivCircuitEntry 22 }

wfivCircuitCountRtHelloRcvd OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 ' Router Hellos Received'
		 "
	::= { wfivCircuitEntry 23 }

wfivCircuitCountHelloSent OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 ' Endnode Hellos Sent'
		 "
	::= { wfivCircuitEntry 24 }

wfivCircuitCountHelloRcvd OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 ' Endnode Hellos Received'
		 "
	::= { wfivCircuitEntry 25 }

wfivCircuitCountL1UpdSent OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 ' Level 1 Routing Updates Sent'
		 "
	::= { wfivCircuitEntry 26 }

wfivCircuitCountL1UpdRcvd OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 ' Level 1 Routing Updates Received'
		 "
	::= { wfivCircuitEntry 27 }

wfivCircuitCountAreaUpdSent OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 ' Area Routing Updates Sent'
		 "
	::= { wfivCircuitEntry 28 }

wfivCircuitCountAreaUpdRcvd OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 ' Area Routing Updates Received'
		 "
	::= { wfivCircuitEntry 29 }

wfivCircuitCountDropped OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 ' Dropped Packets '
		 "
	::= { wfivCircuitEntry 30 }

wfivCircuitAllEndnodesMac OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		        'This parameter can be used to assign the AllEndnodes multicast
		        MAC address value for use over WAN media (e.g. Frame Relay).'
		        "
	::= { wfivCircuitEntry 31 }

wfivCircuitAllRoutersMac OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		        'This parameter can be used to assign the AllRouters multicast
		        MAC address value for use over WAN media (e.g. Frame Relay).'
		        "
	::= { wfivCircuitEntry 32 }

wfivCircuitAllAreaRoutersMac OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		        'This parameter can be used to assign the AllAreaRouters multicast
		        MAC address value for use over WAN media (e.g. Frame Relay).'
		        "
	::= { wfivCircuitEntry 33 }

wfivCircuitHelloEnableDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 ' This parameter is used to disable to sending of Hellos
		 to Endnodes. It would be used in conjunction with Static
		 Adjacencies to limit the amount of data passed over a WAN
		 link (e.g. Frame Relay).'
		 "
	DEFVAL	{ enable }
	::= { wfivCircuitEntry 34 }

wfivCircuitRtHelloEnableDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 ' This parameter is used to disable to sending of Hellos
		 to Routers. It would be used in conjunction with Static
		 Adjacencies to limit the amount of data passed over a WAN
		 link (e.g. Frame Relay).'
		 "
	DEFVAL	{ enable }
	::= { wfivCircuitEntry 35 }

wfivCircuitL1UpdateEnableDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 ' This parameter is used to disable to sending of Level 1
		 topology updates. It would be used in conjunction with Static
		 Adjacencies to limit the amount of data passed over a WAN
		 link (e.g. Frame Relay).'
		 "
	DEFVAL	{ enable }
	::= { wfivCircuitEntry 36 }

wfivCircuitAllEndnodesMacInUse OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		        'This parameter displays the AllEndnodes multicast
		        MAC address value in use over WAN media (e.g. Frame Relay).'
		        "
	::= { wfivCircuitEntry 37 }

wfivCircuitAllRoutersMacInUse OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		        'This parameter displays the AllRouters multicast
		        MAC address value in use over WAN media (e.g. Frame Relay).'
		        "
	::= { wfivCircuitEntry 38 }

wfivCircuitAllAreaRoutersMacInUse OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		        'This parameter displays the AllAreaRouters multicast
		        MAC address value for use over WAN media (e.g. Frame Relay).'
		        "
	::= { wfivCircuitEntry 39 }

wfivLevel1RouteTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfivLevel1RouteEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		' Table of Level 1 Routing Table Entries'
		"
	::= { wfDecGroup 3 }

wfivLevel1RouteEntry OBJECT-TYPE
	SYNTAX	WfivLevel1RouteEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		 'A Record in the Level 1 Routing Table'
		 "
	INDEX	{ wfivLevel1AreaId,
		wfivLevel1NodeId }
	::= { wfivLevel1RouteTable 1 }

WfivLevel1RouteEntry ::= SEQUENCE {
	wfivLevel1AreaId
		INTEGER,
	wfivLevel1NodeId
		INTEGER,
	wfivLevel1RouteNodeAddr
		DisplayString,
	wfivLevel1RouteCircuitID
		INTEGER,
	wfivLevel1RouteCost
		INTEGER,
	wfivLevel1RouteHops
		INTEGER,
	wfivLevel1RouteNextNode
		DisplayString
}

wfivLevel1AreaId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'Area Id for this node'
		 "
	::= { wfivLevel1RouteEntry 1 }

wfivLevel1NodeId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'Area Id for this node'
		 "
	::= { wfivLevel1RouteEntry 2 }

wfivLevel1RouteNodeAddr OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value is the address of the node about which routing
		 information is contained in this level 1 routing table.'
		 "
	::= { wfivLevel1RouteEntry 3 }

wfivLevel1RouteCircuitID OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'This READ_ONLY parameter identifies the circuit used to get
		 to a remote node. Circuit-id is an id-string. This parameter
		 can be used when displaying a list of nodes to indicate that
		 the display is to be restricted to those nodes adjacent on the
		 specified circuit.'
		 "
	::= { wfivLevel1RouteEntry 4 }

wfivLevel1RouteCost OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'This READ_ONLY parameter represents the total cost over the
		 current path to the destination node. Cost is a positive
		 integer value associated with using a circuit. Routing routes
		 messages (data) along the path between two nodes with the
		 smallest cost. COST is kept on a remote node basis.'
		 "
	::= { wfivLevel1RouteEntry 5 }

wfivLevel1RouteHops OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'This READ_ONLY parameter represents the number of hops over
		 to a destination node. A hop is Routing value representing
		 the logical distance between two nodes in a network. HOPS is
		 kept on a remote node basis.'
		 "
	::= { wfivLevel1RouteEntry 6 }

wfivLevel1RouteNextNode OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'This READ_ONLY value indicates the next node on the circuit
		 used to get to the node under scrutiny (next hop).'
		 "
	::= { wfivLevel1RouteEntry 7 }

wfivAreaTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfivAreaEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		'Table of Area Routing Table Entries'
		"
	::= { wfDecGroup 4 }

wfivAreaEntry OBJECT-TYPE
	SYNTAX	WfivAreaEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		 'The area routing information.'
		 "
	INDEX	{ wfivAreaNum }
	::= { wfivAreaTable 1 }

WfivAreaEntry ::= SEQUENCE {
	wfivAreaNum
		INTEGER,
	wfivAreaState
		INTEGER,
	wfivAreaCost
		INTEGER,
	wfivAreaHops
		INTEGER,
	wfivAreaCircuitID
		INTEGER,
	wfivAreaNextNode
		DisplayString
}

wfivAreaNum OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value indicates the area number of this entry.'
		 "
	::= { wfivAreaEntry 1 }

wfivAreaState OBJECT-TYPE
	SYNTAX	INTEGER {
		reachable(4),
		unreachable(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value indicates the state of the area'
		 "
	::= { wfivAreaEntry 2 }

wfivAreaCost OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'The total cost over the current path to the
		 destination area. Cost is a value associated with
		 using a circuit. Routing routes messages (data)
		 along the path between 2 areas with the smallest
		 cost.'
		 "
	::= { wfivAreaEntry 3 }

wfivAreaHops OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'The number of hops to a destination area. A hop is
		 the routing value representing the logical distance
		 between two areas in network.'
		 "
	::= { wfivAreaEntry 4 }

wfivAreaCircuitID OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'The circuit used to get to the remote area'
		 "
	::= { wfivAreaEntry 5 }

wfivAreaNextNode OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'The next node on the circuit used to get to the
		 area under scrutiny.'
		 "
	::= { wfivAreaEntry 6 }

wfivAdjTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfivAdjEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		  Adjacency Table
		"
	::= { wfDecGroup 5 }

wfivAdjEntry OBJECT-TYPE
	SYNTAX	WfivAdjEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		 ' Adjacency Table - the real index is the adjacency index'
		 "
	INDEX	{ wfivAdjIndex }
	::= { wfivAdjTable 1 }

WfivAdjEntry ::= SEQUENCE {
	wfivAdjIndex
		INTEGER,
	wfivAdjNodeAddr
		DisplayString,
	wfivAdjBlockSize
		INTEGER,
	wfivAdjListenTimer
		INTEGER,
	wfivAdjCircuitID
		INTEGER,
	wfivAdjType
		INTEGER,
	wfivAdjState
		INTEGER,
	wfivAdjPriority
		INTEGER,
	wfivAdjClass
		INTEGER
}

wfivAdjIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'Index in the Adjacency Table'
		 "
	::= { wfivAdjEntry 1 }

wfivAdjNodeAddr OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'The address of the adjacent node.'
		 "
	::= { wfivAdjEntry 2 }

wfivAdjBlockSize OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'This READ_ONLY parameter is the block size that was
		 negotiated with the adjacent Routing layer during Routing
		 initialization over a particular circuit. It includes the
		 routing header, but excludes the data link header. This
		 parameter is qualified by ADJACENT NODE.'
		 "
	::= { wfivAdjEntry 3 }

wfivAdjListenTimer OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'This READ_ONLY value determines the maximum time allowed to
		 elapse before Routing receives some message (either a Hello
		 message or a user message) from the adjacent node on the
		 circuit. It was agreed during Routing initialization with the
		 adjacent Routing layer. Seconds is a decimal integer in the
		 range 1-65535. This parameter is qualified by ADJACENT NODE.'
		 "
	::= { wfivAdjEntry 4 }

wfivAdjCircuitID OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'A unique value for each known circuit.'
		 "
	::= { wfivAdjEntry 5 }

wfivAdjType OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'This parameter indicates the type of adjacency.
		 For adjacent nodes, this is a READ_ONLY parameter that
		 indicates the type of the reachable adjacent node.
		 NOTE: The ROUTING III and NONROUTING III values are
		 incremented by one compared to the standard DECnet values in
		 order to maintain compliance with RFC 1155)
		 ROUTING III (1),
		 NONROUTING III (2),
		 AREA (3),
		 ROUTING IV (4),
		 NONROUTING IV (5)'
		 "
	::= { wfivAdjEntry 6 }

wfivAdjState OBJECT-TYPE
	SYNTAX	INTEGER {
		init(1),
		up(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value indicates the state of a router adjacency.
		 On adjacencies over a circuit of type (wfivCircuitCommonType)
		 Ethernet, CI, or FDDI, with an adjacent node of type
		 (wfivAdjType) ROUTING IV or AREA, this variable is the state
		 of the Ethernet Initialization Layer for this adjacency, and
		 can have values INITIALIZING or UP. (See Section 9.1.1 of
		 DECnet Phase IV Routing Layer Functional Specification.)
		 On adjacencies over a circuit of type (wfivCircuitCommonType)
		 Ethernet, CI, or FDDI, with an adjacent node of type
		 (wfivAdjType) NONROUTING IV, this varaible will always take on
		 the value UP.
		 On adjacencies over a circuit of type (wfivCircuitCommonType)
		 DDCMP POINT, DDCMP CONTROL, DDCMP TRIBUTARY, DDCMP DMC, or
		 X.25, this variable is the state of the Routing Layer
		 Initialization Circuit State. (See section 7.3, ibid.) It can
		 have values between RUN and HALT.
		 On adjacencies over a circuit of type (wfivCircuitCommonType)
		 OTHER, this variable may be used in a manner consistent with
		 the Initialization Layer used on that circuit.
		 INITIALIZING (1), -- Ethernet one-way
		 UP (2), -- Ethernet two-way
		 RUN (3), -- The eight DDCMP/X.25 states
		 CIRCUIT REJECTED (4),
		 DATA LINK START (5),
		 ROUTING LAYER INITIALIZE (6),
		 ROUTING LAYER VERIFY (7),
		 ROUTING LAYER COMPLETE (8),
		 OFF (9),
		 HALT (10)'
		 "
	::= { wfivAdjEntry 7 }

wfivAdjPriority OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'Priority assigned by the adjacent node for this circuit.'
		 "
	::= { wfivAdjEntry 8 }

wfivAdjClass OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'Specifies whether this adjacency is Static or Dynamic'
		 "
	::= { wfivAdjEntry 9 }

wfivTrafficFilterTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfivTrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" DECNET Traffic Filters "
	::= { wfDecGroup 6 }

wfivTrafficFilterEntry OBJECT-TYPE
	SYNTAX	WfivTrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in WfivTrafficFilterTable. "
	INDEX	{ wfivTrafficFilterCircuit,
		wfivTrafficFilterRuleNumber,
		wfivTrafficFilterFragment }
	::= { wfivTrafficFilterTable 1 }

WfivTrafficFilterEntry ::= SEQUENCE {
	wfivTrafficFilterCreate
		INTEGER,
	wfivTrafficFilterEnable
		INTEGER,
	wfivTrafficFilterStatus
		INTEGER,
	wfivTrafficFilterCounter
		Counter,
	wfivTrafficFilterDefinition
		Opaque,
	wfivTrafficFilterReserved
		INTEGER,
	wfivTrafficFilterCircuit
		INTEGER,
	wfivTrafficFilterRuleNumber
		INTEGER,
	wfivTrafficFilterFragment
		INTEGER
}

wfivTrafficFilterCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the existence of the traffic filter rule:
		  created - traffic filter exists
		  delete - traffic filter does not exist and can be deleted. "
	DEFVAL	{ created }
	::= { wfivTrafficFilterEntry 1 }

wfivTrafficFilterEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines whether or not the traffic filter rule should be used:
		  enabled - activate the rule.
		  disabled - inactivate the rule. "
	DEFVAL	{ enabled }
	::= { wfivTrafficFilterEntry 2 }

wfivTrafficFilterStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		error(2),
		inactive(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Defines the current status of the traffic filter:
		  inactive - the rule is not in use.
		  active - the rule is being used.
		  error - the application detected an error in the rule. "
	DEFVAL	{ inactive }
	::= { wfivTrafficFilterEntry 3 }

wfivTrafficFilterCounter OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received packets that have
		           matched this rule. "
	::= { wfivTrafficFilterEntry 4 }

wfivTrafficFilterDefinition OBJECT-TYPE
	SYNTAX	Opaque
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The filter rule definition. "
	::= { wfivTrafficFilterEntry 5 }

wfivTrafficFilterReserved OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Reserved field. "
	::= { wfivTrafficFilterEntry 6 }

wfivTrafficFilterCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The ID of the Circuit to which the
		    filter is applied. "
	::= { wfivTrafficFilterEntry 7 }

wfivTrafficFilterRuleNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" ID for the rule. "
	::= { wfivTrafficFilterEntry 8 }

wfivTrafficFilterFragment OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Fragment number - for large rules. "
	::= { wfivTrafficFilterEntry 9 }

wfivStaticAdjTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfivStaticAdjEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		  Static Adjacency Table
		"
	::= { wfDecGroup 7 }

wfivStaticAdjEntry OBJECT-TYPE
	SYNTAX	WfivStaticAdjEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		 ' Static Adjacency Table '
		 "
	INDEX	{ wfivStaticAdjCircuitID,
		wfivStaticAdjArea,
		wfivStaticAdjNodeid }
	::= { wfivStaticAdjTable 1 }

WfivStaticAdjEntry ::= SEQUENCE {
	wfivStaticAdjCreateDelete
		INTEGER,
	wfivStaticAdjEnableDisable
		INTEGER,
	wfivStaticAdjArea
		INTEGER,
	wfivStaticAdjNodeid
		INTEGER,
	wfivStaticAdjCircuitID
		INTEGER,
	wfivStaticAdjNodeAddr
		DisplayString,
	wfivStaticAdjType
		INTEGER,
	wfivStaticAdjPriority
		INTEGER,
	wfivStaticAdjDestMACAddr
		OCTET STRING
}

wfivStaticAdjCreateDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value determines whether the static adjacency is configured'
		 "
	DEFVAL	{ create }
	::= { wfivStaticAdjEntry 1 }

wfivStaticAdjEnableDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 'This value determines whether the static adjacency is active '
		 "
	DEFVAL	{ enable }
	::= { wfivStaticAdjEntry 2 }

wfivStaticAdjArea OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'DECnet Phase IV area number for this static Adjacency.'
		 "
	::= { wfivStaticAdjEntry 3 }

wfivStaticAdjNodeid OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'DECnet Phase IV node address for this static adjacency.'
		 "
	::= { wfivStaticAdjEntry 4 }

wfivStaticAdjCircuitID OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'The circuit used for this static adjacency.'
		 "
	::= { wfivStaticAdjEntry 5 }

wfivStaticAdjNodeAddr OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		 'The address of the adjacent node in display format.'
		 "
	::= { wfivStaticAdjEntry 6 }

wfivStaticAdjType OBJECT-TYPE
	SYNTAX	INTEGER {
		area(3),
		routingiv(4),
		nonroutingiv(5)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 ' Specifies whether the static adjacency is to a router or end
		 station.'
		 "
	DEFVAL	{ area }
	::= { wfivStaticAdjEntry 7 }

wfivStaticAdjPriority OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 ' Specifies the priority of the static adjacency if it's a
		 router.'
		 "
	::= { wfivStaticAdjEntry 8 }

wfivStaticAdjDestMACAddr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 ' Specifies the destination MAC address of the Static Adjacency
		 if the circuit type is ATM, Frame Relay or SMDS.'
		 "
	::= { wfivStaticAdjEntry 9 }

wfDls		OBJECT IDENTIFIER ::= { wfDlsGroup 1 }

wfDlsDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		  Users perform an SNMP SET operation on this
		  object in order to create/delete DLS. "
	DEFVAL	{ created }
	::= { wfDls 1 }

wfDlsDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		  Users perform an SNMP SET operation on this
		  object in order to enable/disable DLS. "
	DEFVAL	{ enabled }
	::= { wfDls 2 }

wfDlsState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current state of DLS. "
	DEFVAL	{ down }
	::= { wfDls 3 }

wfDlsTcpWindowSize OBJECT-TYPE
	SYNTAX	INTEGER {
		min(5000),
		def(16000),
		max(64000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The size in bytes of the windows used for
		  the DLS TCP connections. "
	DEFVAL	{ def }
	::= { wfDls 4 }

wfDlsVirtualRing OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The virtual ring number for the TCP/IP
		  cloud. Valid values (1-4095) "
	::= { wfDls 5 }

wfDlsInternalLanId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The source routing internal lan id.
		  Valid Values (1-4095) "
	::= { wfDls 6 }

wfDlsBridgeId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The source routing base bridge number.
		  Valid Values (1-15) "
	::= { wfDls 7 }

wfDlsMaxSlotSessions OBJECT-TYPE
	SYNTAX	INTEGER {
		min(1),
		def(200),
		max(10000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The maximum number of LLC2 sessions to support
		  per slot "
	DEFVAL	{ def }
	::= { wfDls 8 }

wfDlsTotalCircuits OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A current count of the total number of DLS
		  circuits established "
	::= { wfDls 9 }

wfDlsVirtualRingMtu OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The MTU to use in explorers generated by this
		    DLS.  It should reflect the minimum MTU size of
		    the entire network including the remote LANs. 
		    Valid values (> 0) "
	DEFVAL	{ 2052 }
	::= { wfDls 10 }

wfDlsMacAgeTime OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The time in seconds before inactive mac addresses
		  will be aged out of the cache. Valid values (> 20) "
	DEFVAL	{ 300 }
	::= { wfDls 11 }

wfDlsNbAgeTime OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The time in seconds before inactive NetBIOS names
		  will be aged out of the cache. Valid values (> 20) "
	DEFVAL	{ 300 }
	::= { wfDls 12 }

wfDlsUnconfPeerReject OBJECT-TYPE
	SYNTAX	INTEGER {
		accepted(1),
		rejected(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Allow establishment of TCP connections from
		  peers not in the Peer Table "
	DEFVAL	{ accepted }
	::= { wfDls 13 }

wfDlsInterfaceTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDlsInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table that contains information about every
		  interface that is associated with DLS
		  inst_id[1] = wfDlsInterfaceCircuit "
	::= { wfDlsGroup 2 }

wfDlsInterfaceEntry OBJECT-TYPE
	SYNTAX	WfDlsInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in wfDlsInterface. "
	INDEX	{ wfDlsInterfaceCircuit }
	::= { wfDlsInterfaceTable 1 }

WfDlsInterfaceEntry ::= SEQUENCE {
	wfDlsInterfaceDelete
		INTEGER,
	wfDlsInterfaceDisable
		INTEGER,
	wfDlsInterfaceState
		INTEGER,
	wfDlsInterfaceCircuit
		INTEGER,
	wfDlsInterfaceBridgeId
		INTEGER,
	wfDlsInterfaceLanId
		INTEGER
}

wfDlsInterfaceDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		  Users perform an SNMP SET operation on this
		  object in order to create/delete an interface. "
	DEFVAL	{ created }
	::= { wfDlsInterfaceEntry 1 }

wfDlsInterfaceDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		  Users perform an SNMP SET operation on this
		  object in order to enable/disable an interface. "
	DEFVAL	{ enabled }
	::= { wfDlsInterfaceEntry 2 }

wfDlsInterfaceState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current state of the interface. "
	DEFVAL	{ down }
	::= { wfDlsInterfaceEntry 3 }

wfDlsInterfaceCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The circuit that this interface runs over. "
	::= { wfDlsInterfaceEntry 4 }

wfDlsInterfaceBridgeId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Bridge Id of the 'bridge' from the internal
		    Lan to the TCP/IP ring. This must be a non-
		    Wellfleet bridge number. Valid Values (1-15) "
	::= { wfDlsInterfaceEntry 5 }

wfDlsInterfaceLanId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Lan Id of the interface.
		  Valid Values (1-4095) "
	::= { wfDlsInterfaceEntry 6 }

wfDlsSlotTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDlsSlotEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table that contains the IP interfaces
		  each slot must use for the TCP connections
		  to non-Wellfleet switches.  The IP 
		  interface may exist anywhere on the box. 
		  inst_id[1] = wfDlsSlotNumber "
	::= { wfDlsGroup 3 }

wfDlsSlotEntry OBJECT-TYPE
	SYNTAX	WfDlsSlotEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in wfDlsSlot. "
	INDEX	{ wfDlsSlotNumber }
	::= { wfDlsSlotTable 1 }

WfDlsSlotEntry ::= SEQUENCE {
	wfDlsSlotDelete
		INTEGER,
	wfDlsSlotNumber
		INTEGER,
	wfDlsSlotIpAddr
		IpAddress
}

wfDlsSlotDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		  Users perform an SNMP SET operation on this object in
		  order to create/delete a DLS slot IP record. "
	DEFVAL	{ created }
	::= { wfDlsSlotEntry 1 }

wfDlsSlotNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The slot that uses this IP interface. "
	::= { wfDlsSlotEntry 2 }

wfDlsSlotIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The IP interface to use for TCP connections
		  based on this slot. "
	::= { wfDlsSlotEntry 3 }

wfDlsSapTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDlsSapEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table that contains the SAPS to be
		  terminated by DLS.
		  inst_id[1] = wfDlsSapAddr "
	::= { wfDlsGroup 4 }

wfDlsSapEntry OBJECT-TYPE
	SYNTAX	WfDlsSapEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in wfDlsSap. "
	INDEX	{ wfDlsSapAddr }
	::= { wfDlsSapTable 1 }

WfDlsSapEntry ::= SEQUENCE {
	wfDlsSapDelete
		INTEGER,
	wfDlsSapAddr
		INTEGER,
	wfDlsSapCredit
		INTEGER
}

wfDlsSapDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		  Users perform an SNMP SET operation on this object in
		  order to create/delete a DLS SAP record. "
	DEFVAL	{ created }
	::= { wfDlsSapEntry 1 }

wfDlsSapAddr OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The SAP to be terminated by DLS. "
	::= { wfDlsSapEntry 2 }

wfDlsSapCredit OBJECT-TYPE
	SYNTAX	INTEGER {
		min(6),
		def(10),
		max(20)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The LLC2 flow control credit size for this sap.
		  Flow control procedures will be invoked based
		  on this parameter. "
	DEFVAL	{ def }
	::= { wfDlsSapEntry 3 }

wfDlsPeerTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDlsPeerEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table that contains the IP addresses of
		  the DLS peers with which we will establish
		  TCP connections.
		  inst_id[4] = wfDlsPeerAddr "
	::= { wfDlsGroup 5 }

wfDlsPeerEntry OBJECT-TYPE
	SYNTAX	WfDlsPeerEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in wfDlsPeer. "
	INDEX	{ wfDlsPeerIpAddr }
	::= { wfDlsPeerTable 1 }

WfDlsPeerEntry ::= SEQUENCE {
	wfDlsPeerDelete
		INTEGER,
	wfDlsPeerState
		INTEGER,
	wfDlsPeerIpAddr
		IpAddress,
	wfDlsPeerDefinedBy
		INTEGER
}

wfDlsPeerDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		  Users perform an SNMP SET operation on this object in
		  order to create/delete a DLS peer record. "
	DEFVAL	{ created }
	::= { wfDlsPeerEntry 1 }

wfDlsPeerState OBJECT-TYPE
	SYNTAX	INTEGER {
		connect(1),
		notconn(2),
		invalid(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current state of the TCP connection
		    with this DLS peer. "
	DEFVAL	{ notconn }
	::= { wfDlsPeerEntry 2 }

wfDlsPeerIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP address of the DLS peer. "
	::= { wfDlsPeerEntry 3 }

wfDlsPeerDefinedBy OBJECT-TYPE
	SYNTAX	INTEGER {
		configured(1),
		learned(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The method by which this peer was defined "
	DEFVAL	{ configured }
	::= { wfDlsPeerEntry 4 }

wfDlsConnectionTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDlsConnectionEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table that contains the information about the
		  current DLS connections in progress.
		  inst_id[15] = wfDlsConnectionCct wfDlsConnectionSrcMac 
		    wfDlsConnectionDstMac wfDlsConnectionSaps "
	::= { wfDlsGroup 6 }

wfDlsConnectionEntry OBJECT-TYPE
	SYNTAX	WfDlsConnectionEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in wfDlsConnection. "
	INDEX	{ wfDlsConnectionCct,
		wfDlsConnectionDstMac,
		wfDlsConnectionSrcMac,
		wfDlsConnectionSaps }
	::= { wfDlsConnectionTable 1 }

WfDlsConnectionEntry ::= SEQUENCE {
	wfDlsConnectionCct
		INTEGER,
	wfDlsConnectionDstMac
		OCTET STRING,
	wfDlsConnectionSrcMac
		OCTET STRING,
	wfDlsConnectionSaps
		OCTET STRING,
	wfDlsConnectionState
		INTEGER,
	wfDlsConnectionRemoteIpAddr
		IpAddress,
	wfDlsConnectionRemoteRxPort
		INTEGER,
	wfDlsConnectionLocalIpAddr
		IpAddress,
	wfDlsConnectionLocalTxPort
		INTEGER,
	wfDlsConnectionTxIFrames
		Counter,
	wfDlsConnectionRxIFrames
		Counter,
	wfDlsConnectionTxRnrs
		Counter,
	wfDlsConnectionRxRnrs
		Counter
}

wfDlsConnectionCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The circuit this from which this connection
		  originated. "
	::= { wfDlsConnectionEntry 1 }

wfDlsConnectionDstMac OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Destination Mac address (the LLC session target) "
	::= { wfDlsConnectionEntry 2 }

wfDlsConnectionSrcMac OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Source Mac address (the LLC session originator) "
	::= { wfDlsConnectionEntry 3 }

wfDlsConnectionSaps OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The SAPs for this connection (DSAP, SSAP) "
	::= { wfDlsConnectionEntry 4 }

wfDlsConnectionState OBJECT-TYPE
	SYNTAX	INTEGER {
		connect(1),
		ccestab(2),
		notconn(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The DLS state of this connection. These are the steady
		    states of the DLS state machine.  Transition states
		    are not reflected. "
	DEFVAL	{ notconn }
	::= { wfDlsConnectionEntry 5 }

wfDlsConnectionRemoteIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP address of the remote DLS peer over
		    which this connection is established. "
	::= { wfDlsConnectionEntry 6 }

wfDlsConnectionRemoteRxPort OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The TCP receive port number of the remote DLS
		    peer over which this connection is established. "
	::= { wfDlsConnectionEntry 7 }

wfDlsConnectionLocalIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP address of the local DLS peer over
		    which this connection is established. "
	::= { wfDlsConnectionEntry 8 }

wfDlsConnectionLocalTxPort OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The TCP transmit port number of the local DLS
		    peer over which this connection is established. "
	::= { wfDlsConnectionEntry 9 }

wfDlsConnectionTxIFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of Information frames transmitted
		    from this switch to the remote DLS switch. "
	::= { wfDlsConnectionEntry 10 }

wfDlsConnectionRxIFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of Information frames received
		    at this switch from the remote DLS switch. "
	::= { wfDlsConnectionEntry 11 }

wfDlsConnectionTxRnrs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of RNR frames transmitted
		    from this switch to the remote DLS switch. "
	::= { wfDlsConnectionEntry 12 }

wfDlsConnectionRxRnrs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of RNR frames received
		    at this switch from the remote DLS switch. "
	::= { wfDlsConnectionEntry 13 }

wfDlsNbTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDlsNbEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The DLS NetBIOS name cache table.
		  inst_id[16] = wfDlsNbName. "
	::= { wfDlsGroup 7 }

wfDlsNbEntry OBJECT-TYPE
	SYNTAX	WfDlsNbEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in wfDlsNb. "
	INDEX	{ wfDlsNbName }
	::= { wfDlsNbTable 1 }

WfDlsNbEntry ::= SEQUENCE {
	wfDlsNbName
		OCTET STRING,
	wfDlsNbPeerIpAddr
		IpAddress,
	wfDlsNbCapablePeerIpAddr
		IpAddress,
	wfDlsNbQueries
		Counter
}

wfDlsNbName OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" padded with ASCII spaces (0x20) "
	::= { wfDlsNbEntry 1 }

wfDlsNbPeerIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP address of the DLS peer for this
		    NetBIOS name. "
	::= { wfDlsNbEntry 2 }

wfDlsNbCapablePeerIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP address of the DLS peer for a
		    capable NetBIOS name. "
	::= { wfDlsNbEntry 3 }

wfDlsNbQueries OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of NETBIOS_NQ queries sent for
		    this name. "
	::= { wfDlsNbEntry 4 }

wfDlsMacTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDlsMacEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The DLS mac address cache table.
		  inst_id[6] = wfDlsMacAddr. "
	::= { wfDlsGroup 8 }

wfDlsMacEntry OBJECT-TYPE
	SYNTAX	WfDlsMacEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in wfDlsMac. "
	INDEX	{ wfDlsMacAddr }
	::= { wfDlsMacTable 1 }

WfDlsMacEntry ::= SEQUENCE {
	wfDlsMacAddr
		OCTET STRING,
	wfDlsMacPeerIpAddr
		IpAddress,
	wfDlsMacCapablePeerIpAddr
		IpAddress,
	wfDlsMacQueries
		Counter
}

wfDlsMacAddr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The mac address of the remote station. "
	::= { wfDlsMacEntry 1 }

wfDlsMacPeerIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP address of the DLS peer for this
		    mac address. "
	::= { wfDlsMacEntry 2 }

wfDlsMacCapablePeerIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP address of the DLS peer for a
		    capable mac address. "
	::= { wfDlsMacEntry 3 }

wfDlsMacQueries OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of CANUREACH queries sent for
		    this name. "
	::= { wfDlsMacEntry 4 }

wfDlsTrafficFilterTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDlsTrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" DLS Traffic Filters "
	::= { wfDlsGroup 9 }

wfDlsTrafficFilterEntry OBJECT-TYPE
	SYNTAX	WfDlsTrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in WfDlsTrafficFilterTable. "
	INDEX	{ wfDlsTrafficFilterCircuit,
		wfDlsTrafficFilterRuleNumber,
		wfDlsTrafficFilterFragment }
	::= { wfDlsTrafficFilterTable 1 }

WfDlsTrafficFilterEntry ::= SEQUENCE {
	wfDlsTrafficFilterCreate
		INTEGER,
	wfDlsTrafficFilterEnable
		INTEGER,
	wfDlsTrafficFilterStatus
		INTEGER,
	wfDlsTrafficFilterCounter
		Counter,
	wfDlsTrafficFilterDefinition
		OCTET STRING,
	wfDlsTrafficFilterReserved
		INTEGER,
	wfDlsTrafficFilterCircuit
		INTEGER,
	wfDlsTrafficFilterRuleNumber
		INTEGER,
	wfDlsTrafficFilterFragment
		INTEGER
}

wfDlsTrafficFilterCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the existence of the traffic filter rule:
		                created - traffic filter exists
		                delete - traffic filter does not exist and can be deleted. "
	DEFVAL	{ created }
	::= { wfDlsTrafficFilterEntry 1 }

wfDlsTrafficFilterEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines whether or not the traffic filter rule should be used:
		                enabled - activate the rule.
		                disabled - inactivate the rule. "
	DEFVAL	{ enabled }
	::= { wfDlsTrafficFilterEntry 2 }

wfDlsTrafficFilterStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		error(2),
		inactive(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Defines the current status of the traffic filter:
		                inactive - the rule is not in use.
		                active - the rule is being used.
		                error - the application detected an error in the rule. "
	DEFVAL	{ inactive }
	::= { wfDlsTrafficFilterEntry 3 }

wfDlsTrafficFilterCounter OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received packets that have
		           matched this rule. "
	::= { wfDlsTrafficFilterEntry 4 }

wfDlsTrafficFilterDefinition OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The filter rule definition. "
	::= { wfDlsTrafficFilterEntry 5 }

wfDlsTrafficFilterReserved OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Reserved field. "
	::= { wfDlsTrafficFilterEntry 6 }

wfDlsTrafficFilterCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The ID of the Bridge Circuit to which the
		           filter is applied. "
	::= { wfDlsTrafficFilterEntry 7 }

wfDlsTrafficFilterRuleNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" ID for the rule. "
	::= { wfDlsTrafficFilterEntry 8 }

wfDlsTrafficFilterFragment OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Fragment number - for large rules. "
	::= { wfDlsTrafficFilterEntry 9 }

wfDlsDefaultMacTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDlsDefaultMacEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table that contains DLS Peer IP addresses
		  for statically defined remote Mac addresses.
		  The IP address in this table will always be
		  used for CANUREACH messages to the remote
		  Mac address. 
		  inst_id[6] = wfDlsDefaultMacAddr"
	::= { wfDlsGroup 10 }

wfDlsDefaultMacEntry OBJECT-TYPE
	SYNTAX	WfDlsDefaultMacEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in wfDlsNbName. "
	INDEX	{ wfDlsDefaultMacAddr }
	::= { wfDlsDefaultMacTable 1 }

WfDlsDefaultMacEntry ::= SEQUENCE {
	wfDlsDefaultMacDelete
		INTEGER,
	wfDlsDefaultMacAddr
		OCTET STRING,
	wfDlsDefaultMacPeerIp
		IpAddress
}

wfDlsDefaultMacDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		  Users perform an SNMP SET operation on this object in
		  order to create/delete a DLS Default Mac record. "
	DEFVAL	{ created }
	::= { wfDlsDefaultMacEntry 1 }

wfDlsDefaultMacAddr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The mac address of the destination station "
	::= { wfDlsDefaultMacEntry 2 }

wfDlsDefaultMacPeerIp OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The peer IP address to use for this mac address "
	::= { wfDlsDefaultMacEntry 3 }

wfDlsDefaultNbTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDlsDefaultNbEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table that contains DLS Peer IP addresses
		  for statically defined remote NetBIOS names.
		  The IP address in this table will always be
		  used for CANUREACH messages to the remote 
		  NetBIOS name. 
		  inst_id[16] = wfDlsDefaultNbName"
	::= { wfDlsGroup 11 }

wfDlsDefaultNbEntry OBJECT-TYPE
	SYNTAX	WfDlsDefaultNbEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in wfDlsDefaultNb. "
	INDEX	{ wfDlsDefaultNbName }
	::= { wfDlsDefaultNbTable 1 }

WfDlsDefaultNbEntry ::= SEQUENCE {
	wfDlsDefaultNbDelete
		INTEGER,
	wfDlsDefaultNbName
		OCTET STRING,
	wfDlsDefaultNbPeerIp
		IpAddress
}

wfDlsDefaultNbDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		  Users perform an SNMP SET operation on this object in
		  order to create/delete a DLS Default NetBIOS record. "
	DEFVAL	{ created }
	::= { wfDlsDefaultNbEntry 1 }

wfDlsDefaultNbName OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The NetBIOS name of the destination station "
	::= { wfDlsDefaultNbEntry 2 }

wfDlsDefaultNbPeerIp OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The peer IP address to use for this NetBIOS name "
	::= { wfDlsDefaultNbEntry 3 }

wfDs1Config OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDs1ConfigEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The DS1 Configuration table "
	::= { wfDs1Group 1 }

wfDs1ConfigEntry OBJECT-TYPE
	SYNTAX	WfDs1ConfigEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit DS1 configuration objects; wfDs1LineIndex
		    corresponds to Wellfleet circuit number "
	INDEX	{ wfDs1LineIndex }
	::= { wfDs1Config 1 }

WfDs1ConfigEntry ::= SEQUENCE {
	wfDs1LineIndex
		INTEGER,
	wfDs1TimeElapsed
		INTEGER,
	wfDs1ValidIntervals
		INTEGER,
	wfDs1LineType
		INTEGER,
	wfDs1ZeroCoding
		INTEGER,
	wfDs1SendCode
		INTEGER,
	wfDs1CircuitIdentifier
		DisplayString,
	wfDs1LoopbackConfig
		INTEGER,
	wfDs1LineStatus
		INTEGER
}

wfDs1LineIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this corresponds to the Wellfleet circuit number "
	::= { wfDs1ConfigEntry 1 }

wfDs1TimeElapsed OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" 1..900 seconds within the current 15-minute interval "
	::= { wfDs1ConfigEntry 2 }

wfDs1ValidIntervals OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" 0..96 previous intervals that valid data
		    were collected. This is 96 unless the CSU
		    device was brought on line within the last 24
		    hours. "
	::= { wfDs1ConfigEntry 3 }

wfDs1LineType OBJECT-TYPE
	SYNTAX	INTEGER {
		ds1ansi-esf(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the variety of DS1 implementing this circuit "
	::= { wfDs1ConfigEntry 4 }

wfDs1ZeroCoding OBJECT-TYPE
	SYNTAX	INTEGER {
		ds1b8zs(2),
		ds1zbtsi(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the variety of Zero Code Suppression used on the link "
	::= { wfDs1ConfigEntry 5 }

wfDs1SendCode OBJECT-TYPE
	SYNTAX	INTEGER {
		ds1sendnocode(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the type of code being sent across the DS1 circuit by
		    the CSU "
	::= { wfDs1ConfigEntry 6 }

wfDs1CircuitIdentifier OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the transmission vendor's circuit identifier "
	::= { wfDs1ConfigEntry 7 }

wfDs1LoopbackConfig OBJECT-TYPE
	SYNTAX	INTEGER {
		ds1noloop(1),
		ds1mgrpayloadloop(2),
		ds1mgrlineloop(3),
		ds1netreqpayloadloop(4),
		ds1netreqlineloop(5),
		ds1otherloop(6)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the loopback state of the CSU "
	::= { wfDs1ConfigEntry 8 }

wfDs1LineStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		ds1noalarm(1),
		ds1farendalarm(2),
		ds1alarmindicationsignal(4),
		ds1lossofframe(8),
		ds1lossofsignal(16),
		ds1loopbackstate(32)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the state of the DS1 line "
	::= { wfDs1ConfigEntry 9 }

wfDs1Current OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDs1CurrentEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The DS1 Current table "
	::= { wfDs1Group 2 }

wfDs1CurrentEntry OBJECT-TYPE
	SYNTAX	WfDs1CurrentEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit DS1 current objects - wfDs1CurrentIndex
		    corresponds to Wellfleet circuit number "
	INDEX	{ wfDs1CurrentIndex }
	::= { wfDs1Current 1 }

WfDs1CurrentEntry ::= SEQUENCE {
	wfDs1CurrentIndex
		INTEGER,
	wfDs1CurrentESs
		Counter,
	wfDs1CurrentSESs
		Counter,
	wfDs1CurrentSEFs
		Counter,
	wfDs1CurrentUASs
		Counter,
	wfDs1CurrentBPVs
		Counter,
	wfDs1CurrentCVs
		Counter
}

wfDs1CurrentIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this corresponds to the Wellfleet circuit number "
	::= { wfDs1CurrentEntry 1 }

wfDs1CurrentESs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of errored seconds in the current interval "
	::= { wfDs1CurrentEntry 2 }

wfDs1CurrentSESs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of severely errored seconds in the
		    current interval "
	::= { wfDs1CurrentEntry 3 }

wfDs1CurrentSEFs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of severely errored framing seconds in the current
		    interval "
	::= { wfDs1CurrentEntry 4 }

wfDs1CurrentUASs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the number of unavailable seconds in the current interval "
	::= { wfDs1CurrentEntry 5 }

wfDs1CurrentBPVs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of bipolar violations in the current interval "
	::= { wfDs1CurrentEntry 6 }

wfDs1CurrentCVs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of code violation error events in the
		    current interval "
	::= { wfDs1CurrentEntry 7 }

wfDs1Interval OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDs1IntervalEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The DS1 Interval table "
	::= { wfDs1Group 3 }

wfDs1IntervalEntry OBJECT-TYPE
	SYNTAX	WfDs1IntervalEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit DS1 interval objects - wfDs1IntervalIndex
		    corresponds to Wellfleet circuit number, 
		    wfDs1IntervalNumber is the numbered previous
		    15-minute interval "
	INDEX	{ wfDs1IntervalIndex,
		wfDs1IntervalNumber }
	::= { wfDs1Interval 1 }

WfDs1IntervalEntry ::= SEQUENCE {
	wfDs1IntervalIndex
		INTEGER,
	wfDs1IntervalNumber
		INTEGER,
	wfDs1IntervalESs
		Gauge,
	wfDs1IntervalSESs
		Gauge,
	wfDs1IntervalSEFs
		Gauge,
	wfDs1IntervalUASs
		Gauge,
	wfDs1IntervalBPVs
		Gauge,
	wfDs1IntervalCVs
		Gauge
}

wfDs1IntervalIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this corresponds to the Wellfleet circuit number "
	::= { wfDs1IntervalEntry 1 }

wfDs1IntervalNumber OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(96)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" 1..96 where 1 is the most recent 15-minute interval and 96 is
		    the least "
	::= { wfDs1IntervalEntry 2 }

wfDs1IntervalESs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of errored seconds in the specified interval "
	::= { wfDs1IntervalEntry 3 }

wfDs1IntervalSESs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of severely errored seconds in the specified
		    interval "
	::= { wfDs1IntervalEntry 4 }

wfDs1IntervalSEFs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of severely errored framing seconds in the specified
		    interval "
	::= { wfDs1IntervalEntry 5 }

wfDs1IntervalUASs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the number of unavailable seconds in the specified interval "
	::= { wfDs1IntervalEntry 6 }

wfDs1IntervalBPVs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of bipolar violations in the specified interval "
	::= { wfDs1IntervalEntry 7 }

wfDs1IntervalCVs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of code violation error events in the
		    specified interval "
	::= { wfDs1IntervalEntry 8 }

wfDs1Total OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDs1TotalEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The DS1 Total table "
	::= { wfDs1Group 4 }

wfDs1TotalEntry OBJECT-TYPE
	SYNTAX	WfDs1TotalEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit DS1 total objects - wfDs1TotalIndex
		    corresponds to Wellfleet circuit number "
	INDEX	{ wfDs1TotalIndex }
	::= { wfDs1Total 1 }

WfDs1TotalEntry ::= SEQUENCE {
	wfDs1TotalIndex
		INTEGER,
	wfDs1TotalESs
		Gauge,
	wfDs1TotalSESs
		Gauge,
	wfDs1TotalSEFs
		Gauge,
	wfDs1TotalUASs
		Gauge,
	wfDs1TotalBPVs
		Gauge,
	wfDs1TotalCVs
		Gauge
}

wfDs1TotalIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this corresponds to the Wellfleet circuit number "
	::= { wfDs1TotalEntry 1 }

wfDs1TotalESs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total count of errored seconds "
	::= { wfDs1TotalEntry 2 }

wfDs1TotalSESs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total count of severely errored seconds "
	::= { wfDs1TotalEntry 3 }

wfDs1TotalSEFs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total count of severely errored framing seconds "
	::= { wfDs1TotalEntry 4 }

wfDs1TotalUASs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total number of unavailable seconds "
	::= { wfDs1TotalEntry 5 }

wfDs1TotalBPVs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total count of bipolar violations "
	::= { wfDs1TotalEntry 6 }

wfDs1TotalCVs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total count of code violation error events "
	::= { wfDs1TotalEntry 7 }

wfDs1FeCurrent OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDs1FeCurrentEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The DS1 Far End Current table "
	::= { wfDs1Group 5 }

wfDs1FeCurrentEntry OBJECT-TYPE
	SYNTAX	WfDs1FeCurrentEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit DS1 far end current objects
		    wfDs1CurrentIndex corresponds to Wellfleet circuit
		    number "
	INDEX	{ wfDs1FeCurrentIndex }
	::= { wfDs1FeCurrent 1 }

WfDs1FeCurrentEntry ::= SEQUENCE {
	wfDs1FeCurrentIndex
		INTEGER,
	wfDs1FeCurrentESs
		Counter,
	wfDs1FeCurrentSESs
		Counter,
	wfDs1FeCurrentSEFs
		Counter,
	wfDs1FeCurrentBPVs
		Counter,
	wfDs1FeCurrentCVs
		Counter
}

wfDs1FeCurrentIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this corresponds to the Wellfleet circuit number "
	::= { wfDs1FeCurrentEntry 1 }

wfDs1FeCurrentESs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of errored seconds in the current interval "
	::= { wfDs1FeCurrentEntry 2 }

wfDs1FeCurrentSESs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of severely errored seconds in the
		    current interval "
	::= { wfDs1FeCurrentEntry 3 }

wfDs1FeCurrentSEFs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of severely errored framing seconds in the current
		    interval "
	::= { wfDs1FeCurrentEntry 4 }

wfDs1FeCurrentBPVs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of bipolar violations in the current interval "
	::= { wfDs1FeCurrentEntry 5 }

wfDs1FeCurrentCVs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of code violation error events in the
		    current interval "
	::= { wfDs1FeCurrentEntry 6 }

wfDs1FeInterval OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDs1FeIntervalEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The DS1 Far End Interval table "
	::= { wfDs1Group 6 }

wfDs1FeIntervalEntry OBJECT-TYPE
	SYNTAX	WfDs1FeIntervalEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit DS1 far end interval objects -
		    wfDs1FeIntervalIndex corresponds to Wellfleet circuit
		    number, wfDs1FeIntervalNumber is the numbered
		    previous 15-minute interval "
	INDEX	{ wfDs1FeIntervalIndex,
		wfDs1FeIntervalNumber }
	::= { wfDs1FeInterval 1 }

WfDs1FeIntervalEntry ::= SEQUENCE {
	wfDs1FeIntervalIndex
		INTEGER,
	wfDs1FeIntervalNumber
		INTEGER,
	wfDs1FeIntervalESs
		Gauge,
	wfDs1FeIntervalSESs
		Gauge,
	wfDs1FeIntervalSEFs
		Gauge,
	wfDs1FeIntervalBPVs
		Gauge,
	wfDs1FeIntervalCVs
		Gauge
}

wfDs1FeIntervalIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this corresponds to the Wellfleet circuit number "
	::= { wfDs1FeIntervalEntry 1 }

wfDs1FeIntervalNumber OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(96)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" 1..96 where 1 is the most recent 15-minute interval and 96 is
		    the least "
	::= { wfDs1FeIntervalEntry 2 }

wfDs1FeIntervalESs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of errored seconds in the specified interval "
	::= { wfDs1FeIntervalEntry 3 }

wfDs1FeIntervalSESs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of severely errored seconds in the specified
		    interval "
	::= { wfDs1FeIntervalEntry 4 }

wfDs1FeIntervalSEFs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of severely errored framing seconds in the specified
		    interval "
	::= { wfDs1FeIntervalEntry 5 }

wfDs1FeIntervalBPVs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of bipolar violations in the specified interval "
	::= { wfDs1FeIntervalEntry 6 }

wfDs1FeIntervalCVs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of code violation error events in the
		    specified interval "
	::= { wfDs1FeIntervalEntry 7 }

wfDs1FeTotal OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDs1FeTotalEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The DS1 Far End Total table "
	::= { wfDs1Group 7 }

wfDs1FeTotalEntry OBJECT-TYPE
	SYNTAX	WfDs1FeTotalEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit DS1 far end total objects - wfDs1FeTotalIndex
		    corresponds to Wellfleet circuit number "
	INDEX	{ wfDs1FeTotalIndex }
	::= { wfDs1FeTotal 1 }

WfDs1FeTotalEntry ::= SEQUENCE {
	wfDs1FeTotalIndex
		INTEGER,
	wfDs1FeTotalESs
		Gauge,
	wfDs1FeTotalSESs
		Gauge,
	wfDs1FeTotalSEFs
		Gauge,
	wfDs1FeTotalBPVs
		Gauge,
	wfDs1FeTotalCVs
		Gauge
}

wfDs1FeTotalIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this corresponds to the Wellfleet circuit number "
	::= { wfDs1FeTotalEntry 1 }

wfDs1FeTotalESs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total count of errored seconds "
	::= { wfDs1FeTotalEntry 2 }

wfDs1FeTotalSESs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total count of severely errored seconds "
	::= { wfDs1FeTotalEntry 3 }

wfDs1FeTotalSEFs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total count of severely errored framing seconds "
	::= { wfDs1FeTotalEntry 4 }

wfDs1FeTotalBPVs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total count of bipolar violations "
	::= { wfDs1FeTotalEntry 5 }

wfDs1FeTotalCVs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total count of code violation error events "
	::= { wfDs1FeTotalEntry 6 }

wfDs3Config OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDs3ConfigEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The DS3 Configuration table "
	::= { wfDs3Group 1 }

wfDs3ConfigEntry OBJECT-TYPE
	SYNTAX	WfDs3ConfigEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit DS3 configuration objects; wfDs3LineIndex
		    corresponds to Wellfleet circuit number "
	INDEX	{ wfDs3LineIndex }
	::= { wfDs3Config 1 }

WfDs3ConfigEntry ::= SEQUENCE {
	wfDs3LineIndex
		INTEGER,
	wfDs3TimeElapsed
		INTEGER,
	wfDs3ValidIntervals
		INTEGER,
	wfDs3LineType
		INTEGER,
	wfDs3ZeroCoding
		INTEGER,
	wfDs3SendCode
		INTEGER,
	wfDs3CircuitIdentifier
		DisplayString,
	wfDs3LoopbackConfig
		INTEGER,
	wfDs3LineStatus
		INTEGER
}

wfDs3LineIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this corresponds to the Wellfleet circuit number "
	::= { wfDs3ConfigEntry 1 }

wfDs3TimeElapsed OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" 1..900 seconds within the current 15-minute interval "
	::= { wfDs3ConfigEntry 2 }

wfDs3ValidIntervals OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" 0..96 previous intervals that valid data
		    were collected. This is 96 unless the CSU
		    device was brought on line within the last 24
		    hours. "
	::= { wfDs3ConfigEntry 3 }

wfDs3LineType OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		ds3cbitparity(4),
		ds3clearchannel(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the variety of DS3 implementing this circuit "
	::= { wfDs3ConfigEntry 4 }

wfDs3ZeroCoding OBJECT-TYPE
	SYNTAX	INTEGER {
		ds3b3zs(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the variety of Zero Code Suppression used on the link "
	::= { wfDs3ConfigEntry 5 }

wfDs3SendCode OBJECT-TYPE
	SYNTAX	INTEGER {
		ds3sendnocode(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the type of code being sent across the DS3 circuit by
		    the CSU "
	::= { wfDs3ConfigEntry 6 }

wfDs3CircuitIdentifier OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the transmission vendor's circuit identifier "
	::= { wfDs3ConfigEntry 7 }

wfDs3LoopbackConfig OBJECT-TYPE
	SYNTAX	INTEGER {
		ds3noloop(1),
		ds3mgrpayloadloop(2),
		ds3mgrlineloop(3),
		ds3netreqpayloadloop(4),
		ds3netreqlineloop(5),
		ds3otherloop(6)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the loopback state of the CSU "
	::= { wfDs3ConfigEntry 8 }

wfDs3LineStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		ds3noalarm(1),
		ds3farendalarm(2),
		ds3alarmindicationsignal(4),
		ds3lossofframe(8),
		ds3lossofsignal(16),
		ds3loopbackstate(32)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the state of the DS3 line "
	::= { wfDs3ConfigEntry 9 }

wfDs3Current OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDs3CurrentEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The DS3 Current table "
	::= { wfDs3Group 2 }

wfDs3CurrentEntry OBJECT-TYPE
	SYNTAX	WfDs3CurrentEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit DS3 current objects - wfDs3CurrentIndex
		    corresponds to Wellfleet circuit number "
	INDEX	{ wfDs3CurrentIndex }
	::= { wfDs3Current 1 }

WfDs3CurrentEntry ::= SEQUENCE {
	wfDs3CurrentIndex
		INTEGER,
	wfDs3CurrentESs
		Counter,
	wfDs3CurrentSESs
		Counter,
	wfDs3CurrentSEFs
		Counter,
	wfDs3CurrentUASs
		Counter,
	wfDs3CurrentBPVs
		Counter,
	wfDs3CurrentCVs
		Counter
}

wfDs3CurrentIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this corresponds to the Wellfleet circuit number "
	::= { wfDs3CurrentEntry 1 }

wfDs3CurrentESs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of errored seconds in the current interval "
	::= { wfDs3CurrentEntry 2 }

wfDs3CurrentSESs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of severely errored seconds in the
		    current interval "
	::= { wfDs3CurrentEntry 3 }

wfDs3CurrentSEFs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of severely errored framing seconds in the current
		    interval "
	::= { wfDs3CurrentEntry 4 }

wfDs3CurrentUASs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the number of unavailable seconds in the current interval "
	::= { wfDs3CurrentEntry 5 }

wfDs3CurrentBPVs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of bipolar violations in the current interval "
	::= { wfDs3CurrentEntry 6 }

wfDs3CurrentCVs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of code violation error events in the
		    current interval "
	::= { wfDs3CurrentEntry 7 }

wfDs3Interval OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDs3IntervalEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The DS3 Interval table "
	::= { wfDs3Group 3 }

wfDs3IntervalEntry OBJECT-TYPE
	SYNTAX	WfDs3IntervalEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit DS3 interval objects - wfDs3IntervalIndex
		    corresponds to Wellfleet circuit number, 
		    wfDs3IntervalNumber is the numbered previous
		    15-minute interval "
	INDEX	{ wfDs3IntervalIndex,
		wfDs3IntervalNumber }
	::= { wfDs3Interval 1 }

WfDs3IntervalEntry ::= SEQUENCE {
	wfDs3IntervalIndex
		INTEGER,
	wfDs3IntervalNumber
		INTEGER,
	wfDs3IntervalESs
		Gauge,
	wfDs3IntervalSESs
		Gauge,
	wfDs3IntervalSEFs
		Gauge,
	wfDs3IntervalUASs
		Gauge,
	wfDs3IntervalBPVs
		Gauge,
	wfDs3IntervalCVs
		Gauge
}

wfDs3IntervalIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this corresponds to the Wellfleet circuit number "
	::= { wfDs3IntervalEntry 1 }

wfDs3IntervalNumber OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(96)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" 1..96 where 1 is the most recent 15-minute interval and 96 is
		    the least "
	::= { wfDs3IntervalEntry 2 }

wfDs3IntervalESs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of errored seconds in the specified interval "
	::= { wfDs3IntervalEntry 3 }

wfDs3IntervalSESs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of severely errored seconds in the specified
		    interval "
	::= { wfDs3IntervalEntry 4 }

wfDs3IntervalSEFs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of severely errored framing seconds in the specified
		    interval "
	::= { wfDs3IntervalEntry 5 }

wfDs3IntervalUASs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the number of unavailable seconds in the specified interval "
	::= { wfDs3IntervalEntry 6 }

wfDs3IntervalBPVs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of bipolar violations in the specified interval "
	::= { wfDs3IntervalEntry 7 }

wfDs3IntervalCVs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of code violation error events in the
		    specified interval "
	::= { wfDs3IntervalEntry 8 }

wfDs3Total OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDs3TotalEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The DS3 Total table "
	::= { wfDs3Group 4 }

wfDs3TotalEntry OBJECT-TYPE
	SYNTAX	WfDs3TotalEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit DS3 total objects - wfDs3TotalIndex
		    corresponds to Wellfleet circuit number "
	INDEX	{ wfDs3TotalIndex }
	::= { wfDs3Total 1 }

WfDs3TotalEntry ::= SEQUENCE {
	wfDs3TotalIndex
		INTEGER,
	wfDs3TotalESs
		Gauge,
	wfDs3TotalSESs
		Gauge,
	wfDs3TotalSEFs
		Gauge,
	wfDs3TotalUASs
		Gauge,
	wfDs3TotalBPVs
		Gauge,
	wfDs3TotalCVs
		Gauge
}

wfDs3TotalIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this corresponds to the Wellfleet circuit number "
	::= { wfDs3TotalEntry 1 }

wfDs3TotalESs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total count of errored seconds "
	::= { wfDs3TotalEntry 2 }

wfDs3TotalSESs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total count of severely errored seconds "
	::= { wfDs3TotalEntry 3 }

wfDs3TotalSEFs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total count of severely errored framing seconds "
	::= { wfDs3TotalEntry 4 }

wfDs3TotalUASs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total number of unavailable seconds "
	::= { wfDs3TotalEntry 5 }

wfDs3TotalBPVs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total count of bipolar violations "
	::= { wfDs3TotalEntry 6 }

wfDs3TotalCVs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total count of code violation error events "
	::= { wfDs3TotalEntry 7 }

wfDs3FeConfig OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDs3FeConfigEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The DS3 Far End Configuration table "
	::= { wfDs3Group 5 }

wfDs3FeConfigEntry OBJECT-TYPE
	SYNTAX	WfDs3FeConfigEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit DS3 far end config objects -
		    wfDs3FeIntervalIndex corresponds to Wellfleet circuit
		    number "
	INDEX	{ wfDs3FeConfigIndex }
	::= { wfDs3FeConfig 1 }

WfDs3FeConfigEntry ::= SEQUENCE {
	wfDs3FeConfigIndex
		INTEGER,
	wfDs3FarEndEquipCode
		DisplayString,
	wfDs3FarEndLocationIDCode
		DisplayString,
	wfDs3FarEndFrameIDCode
		DisplayString,
	wfDs3FarEndUnitCode
		DisplayString,
	wfDs3FarEndFacilityIDCode
		DisplayString
}

wfDs3FeConfigIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this corresponds to the Wellfleet circuit number "
	::= { wfDs3FeConfigEntry 1 }

wfDs3FarEndEquipCode OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" equipment description code - C-bit parity only "
	::= { wfDs3FeConfigEntry 2 }

wfDs3FarEndLocationIDCode OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" equipment location code - C-bit parity only "
	::= { wfDs3FeConfigEntry 3 }

wfDs3FarEndFrameIDCode OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" code for the equipment location within a building "
	::= { wfDs3FeConfigEntry 4 }

wfDs3FarEndUnitCode OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" code for the equipment location within a bay "
	::= { wfDs3FeConfigEntry 5 }

wfDs3FarEndFacilityIDCode OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" path identification code "
	::= { wfDs3FeConfigEntry 6 }

wfDs3FeCurrent OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDs3FeCurrentEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The DS3 Far End Current table "
	::= { wfDs3Group 6 }

wfDs3FeCurrentEntry OBJECT-TYPE
	SYNTAX	WfDs3FeCurrentEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit DS3 far end current objects
		    wfDs3FeCurrentIndex corresponds to Wellfleet circuit
		    number "
	INDEX	{ wfDs3FeCurrentIndex }
	::= { wfDs3FeCurrent 1 }

WfDs3FeCurrentEntry ::= SEQUENCE {
	wfDs3FeCurrentIndex
		INTEGER,
	wfDs3FeCurrentESs
		Counter,
	wfDs3FeCurrentSESs
		Counter,
	wfDs3FeCurrentCVs
		Counter
}

wfDs3FeCurrentIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this corresponds to the Wellfleet circuit number "
	::= { wfDs3FeCurrentEntry 1 }

wfDs3FeCurrentESs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of errored seconds in the current interval "
	::= { wfDs3FeCurrentEntry 2 }

wfDs3FeCurrentSESs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of severely errored seconds in the
		    current interval "
	::= { wfDs3FeCurrentEntry 3 }

wfDs3FeCurrentCVs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of code violation error events in the
		    current interval "
	::= { wfDs3FeCurrentEntry 4 }

wfDs3FeInterval OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDs3FeIntervalEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The DS3 Far End Interval table "
	::= { wfDs3Group 7 }

wfDs3FeIntervalEntry OBJECT-TYPE
	SYNTAX	WfDs3FeIntervalEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit DS3 far end interval objects -
		    wfDs3FeIntervalIndex corresponds to Wellfleet circuit
		    number, wfDs3FeIntervalNumber is the numbered previous
		    15-minute interval "
	INDEX	{ wfDs3FeIntervalIndex,
		wfDs3FeIntervalNumber }
	::= { wfDs3FeInterval 1 }

WfDs3FeIntervalEntry ::= SEQUENCE {
	wfDs3FeIntervalIndex
		INTEGER,
	wfDs3FeIntervalNumber
		INTEGER,
	wfDs3FeIntervalESs
		Gauge,
	wfDs3FeIntervalSESs
		Gauge,
	wfDs3FeIntervalCVs
		Gauge
}

wfDs3FeIntervalIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this corresponds to the Wellfleet circuit number "
	::= { wfDs3FeIntervalEntry 1 }

wfDs3FeIntervalNumber OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(96)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" 1..96 where 1 is the most recent 15-minute interval and 96 is
		    the least "
	::= { wfDs3FeIntervalEntry 2 }

wfDs3FeIntervalESs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of errored seconds in the specified interval "
	::= { wfDs3FeIntervalEntry 3 }

wfDs3FeIntervalSESs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of severely errored seconds in the
		    specified interval "
	::= { wfDs3FeIntervalEntry 4 }

wfDs3FeIntervalCVs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the count of code violation error events in the
		    specified interval "
	::= { wfDs3FeIntervalEntry 5 }

wfDs3FeTotal OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfDs3FeTotalEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The DS3 Far End Total table "
	::= { wfDs3Group 8 }

wfDs3FeTotalEntry OBJECT-TYPE
	SYNTAX	WfDs3FeTotalEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit far end DS3 total objects - wfDs3FeTotalIndex
		    corresponds to Wellfleet circuit number "
	INDEX	{ wfDs3FeTotalIndex }
	::= { wfDs3FeTotal 1 }

WfDs3FeTotalEntry ::= SEQUENCE {
	wfDs3FeTotalIndex
		INTEGER,
	wfDs3FeTotalESs
		Gauge,
	wfDs3FeTotalSESs
		Gauge,
	wfDs3FeTotalCVs
		Gauge
}

wfDs3FeTotalIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this corresponds to the Wellfleet circuit number "
	::= { wfDs3FeTotalEntry 1 }

wfDs3FeTotalESs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total count of errored seconds "
	::= { wfDs3FeTotalEntry 2 }

wfDs3FeTotalSESs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total count of severely errored seconds "
	::= { wfDs3FeTotalEntry 3 }

wfDs3FeTotalCVs OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total count of code violation error events "
	::= { wfDs3FeTotalEntry 4 }

wfE1Table OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfE1Entry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		   E1 line record
		 "
	::= { wfLine 11 }

wfE1Entry OBJECT-TYPE
	SYNTAX	WfE1Entry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the E1 table "
	INDEX	{ wfE1Slot,
		wfE1Connector }
	::= { wfE1Table 1 }

WfE1Entry ::= SEQUENCE {
	wfE1Delete
		INTEGER,
	wfE1Disable
		INTEGER,
	wfE1State
		INTEGER,
	wfE1Slot
		INTEGER,
	wfE1Connector
		INTEGER,
	wfE1Madr
		OCTET STRING,
	wfE1HDB3Support
		INTEGER,
	wfE1ClockMode
		INTEGER,
	wfE1MiniDacs
		DisplayString,
	wfE1BipolarVios
		Counter,
	wfE1FrameErrs
		Counter,
	wfE1RcvRemAlms
		Counter,
	wfE1RcvMfmAlms
		Counter,
	wfE1MfsErrs
		Counter,
	wfE1SyncLoss
		Counter,
	wfE1RcvSig1s
		Counter,
	wfE1RcvUnfrm1s
		Counter
}

wfE1Delete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" create/delete parameter, dflt = created "
	DEFVAL	{ created }
	::= { wfE1Entry 1 }

wfE1Disable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" enable/disable parameter, dflt = enabled "
	DEFVAL	{ enabled }
	::= { wfE1Entry 2 }

wfE1State OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" line driver state variable, Not Present, Init, Up "
	DEFVAL	{ notpresent }
	::= { wfE1Entry 3 }

wfE1Slot OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(14)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" instance ID Slot, filled in by driver "
	::= { wfE1Entry 4 }

wfE1Connector OBJECT-TYPE
	SYNTAX	INTEGER {
		one(1),
		two(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" instance ID Connector, filled in by driver "
	::= { wfE1Entry 5 }

wfE1Madr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Line mac address, filled in by driver "
	::= { wfE1Entry 6 }

wfE1HDB3Support OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" HDB3 Support - Enables or disables high density bipolar coding "
	DEFVAL	{ disabled }
	::= { wfE1Entry 7 }

wfE1ClockMode OBJECT-TYPE
	SYNTAX	INTEGER {
		internal(1),
		slave(2),
		manual(4)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Clock Mode - Specifies the source of the E1 transmit clock "
	DEFVAL	{ internal }
	::= { wfE1Entry 8 }

wfE1MiniDacs OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" MiniDacs Configuration - assigns each E1 channel to a specific
		   function                                                       "
	::= { wfE1Entry 9 }

wfE1BipolarVios OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Bipolar Violations "
	::= { wfE1Entry 10 }

wfE1FrameErrs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Frame errors "
	::= { wfE1Entry 11 }

wfE1RcvRemAlms OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of remote alarms received "
	::= { wfE1Entry 12 }

wfE1RcvMfmAlms OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Multiframe Alarms Received "
	::= { wfE1Entry 13 }

wfE1MfsErrs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of instances of CAS Multiframe resync criteria met "
	::= { wfE1Entry 14 }

wfE1SyncLoss OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of instances of sync loss  "
	::= { wfE1Entry 15 }

wfE1RcvSig1s OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of instances of receive signalling all 1's  "
	::= { wfE1Entry 16 }

wfE1RcvUnfrm1s OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of instances of Receive unframed all 1's  "
	::= { wfE1Entry 17 }

wfEgp		OBJECT IDENTIFIER ::= { wfEgpGroup 1 }

wfEgpDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter for determining whether
		  or not EGP is configured on this slot.
		     "
	DEFVAL	{ created }
	::= { wfEgp 1 }

wfEgpDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for determining whether
		  or not to startup EGP.
		     "
	DEFVAL	{ enabled }
	::= { wfEgp 2 }

wfEgpInMsgs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The aggregate number of EGP messages received in the box
		  without error. This is part of the EGP group in Mib2. 
		     "
	::= { wfEgp 3 }

wfEgpInErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of all EGP messages received in the box
		  that had errors. This is part of the EGP group in Mib2. 
		     "
	::= { wfEgp 4 }

wfEgpOutMsgs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of EGP locally generated messages from
		  the box. This is part of the EGP group in Mib2. 
		     "
	::= { wfEgp 5 }

wfEgpOutErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of locally generated EGP messages from
		  the box that had errors. This is part of the EGP group in 
		  Mib2. 
		     "
	::= { wfEgp 6 }

wfEgpLocalAs OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(65535)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The NIC-assigned decimal number that identifies the local
		  autonomous system.
		     "
	::= { wfEgp 7 }

wfEgpNeighTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfEgpNeighEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		  The EGP Neighbor table contains information regarding this EGP
		  router's EGP neighbors on a particular interface. This table 
		  follows the egpNeighTable exactly as specified in he EGP group 
		  in Mib 2."
	::= { wfEgpGroup 2 }

wfEgpNeighEntry OBJECT-TYPE
	SYNTAX	WfEgpNeighEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the EGP Neighbor table "
	INDEX	{ wfEgpNeighAddr }
	::= { wfEgpNeighTable 1 }

WfEgpNeighEntry ::= SEQUENCE {
	wfEgpNeighState
		INTEGER,
	wfEgpNeighAddr
		IpAddress,
	wfEgpNeighAs
		INTEGER,
	wfEgpNeighInMsgs
		Counter,
	wfEgpNeighInErrs
		Counter,
	wfEgpNeighOutMsgs
		Counter,
	wfEgpNeighOutErrs
		Counter,
	wfEgpNeighInErrMsgs
		Counter,
	wfEgpNeighOutErrMsgs
		Counter,
	wfEgpNeighStateUps
		Counter,
	wfEgpNeighStateDowns
		Counter,
	wfEgpNeighIntervalHello
		INTEGER,
	wfEgpNeighIntervalPoll
		INTEGER,
	wfEgpNeighMode
		INTEGER,
	wfEgpNeighEvent
		INTEGER,
	wfEgpNeighBadAsns
		Counter,
	wfEgpNeighBadCodes
		Counter,
	wfEgpNeighBadHellos
		Counter,
	wfEgpNeighBadIHUs
		Counter,
	wfEgpNeighBadStatuses
		Counter,
	wfEgpNeighBadChecksums
		Counter,
	wfEgpNeighBadTypes
		Counter,
	wfEgpNeighBadVersions
		Counter,
	wfEgpNeighCmdOutOfSeqs
		Counter,
	wfEgpNeighCmdRejects
		Counter
}

wfEgpNeighState OBJECT-TYPE
	SYNTAX	INTEGER {
		idle(1),
		acquisition(2),
		down(3),
		up(4),
		cease(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The EGP state of the local system with respect to this
		  entry's EGP neighbor.  Each EGP state is represented by a 
		  value that is one greater than the numerical value associated
		  with said state in RFC 904.
		      "
	::= { wfEgpNeighEntry 1 }

wfEgpNeighAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP address of this entry's EGP neighbor. "
	::= { wfEgpNeighEntry 2 }

wfEgpNeighAs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The NIC-assigned decimal number that identifies the remote
		  autonomous system (AS) of this EGP peer. Zero should be 
		  specified if the AS number of the neighbor is not yet known.
		      "
	::= { wfEgpNeighEntry 3 }

wfEgpNeighInMsgs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of EGP messages received without error from
		  this EGP peer. 
		      "
	::= { wfEgpNeighEntry 4 }

wfEgpNeighInErrs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of EGP messages received from this EGP peer
		  that proved to be in error (e.g., bad EGP checksum).
		      "
	::= { wfEgpNeighEntry 5 }

wfEgpNeighOutMsgs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of locally generated EGP messages to this
		  EGP peer.
		      "
	::= { wfEgpNeighEntry 6 }

wfEgpNeighOutErrs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of locally generated EGP messages not sent
		  to this EGP peer due to resource limitations within
		  an EGP entity.
		      "
	::= { wfEgpNeighEntry 7 }

wfEgpNeighInErrMsgs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of EGP-defined error messages received
		  from this EGP peer.
		      "
	::= { wfEgpNeighEntry 8 }

wfEgpNeighOutErrMsgs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of EGP-defined error messages sent to
		  this EGP peer.
		      "
	::= { wfEgpNeighEntry 9 }

wfEgpNeighStateUps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of EGP state transitions to the UP state
		  with this EGP peer.
		       "
	::= { wfEgpNeighEntry 10 }

wfEgpNeighStateDowns OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of EGP state transitions from the UP state
		  to any other state with this EGP peer.
		      "
	::= { wfEgpNeighEntry 11 }

wfEgpNeighIntervalHello OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The interval between EGP Hello command retransmissions (in
		  seconds).  This represents the t1 timer as defined in RFC 904.
		      "
	::= { wfEgpNeighEntry 12 }

wfEgpNeighIntervalPoll OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The interval between EGP poll command retransmissions (in
		  seconds).  This represents the t3 timer as defined in RFC 904.
		      "
	::= { wfEgpNeighEntry 13 }

wfEgpNeighMode OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		passive(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The polling mode of this EGP entity, either passive
		  or active.
		      "
	::= { wfEgpNeighEntry 14 }

wfEgpNeighEvent OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The EGP event that occurred on the local interface with respect
		  to this entry's EGP neighbor.  
		      "
	::= { wfEgpNeighEntry 15 }

wfEgpNeighBadAsns OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received EGP messages that contained an
		  unrecognized AS number in the EGP header.
		      "
	::= { wfEgpNeighEntry 16 }

wfEgpNeighBadCodes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received EGP messages that contained an
		  unrecognized value in the Code field in the EGP header.
		      "
	::= { wfEgpNeighEntry 17 }

wfEgpNeighBadHellos OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of unexpected Hello neighbor reachability
		  messages received by EGP.  A Hello message is unexpected
		  when received from a passive peer.
		      "
	::= { wfEgpNeighEntry 18 }

wfEgpNeighBadIHUs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of unexpected I Hear You neighbor reachability
		  messages received by EGP.  A I Hear You message is unexpected
		  when received in the absence of a prior Hello message.
		      "
	::= { wfEgpNeighEntry 19 }

wfEgpNeighBadStatuses OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received EGP messages that contained an
		  unrecognized value in the Status field in the EGP header.
		      "
	::= { wfEgpNeighEntry 20 }

wfEgpNeighBadChecksums OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received EGP messages that contained a
		  faulty checksum in the EGP header.
		      "
	::= { wfEgpNeighEntry 21 }

wfEgpNeighBadTypes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received EGP messages that contained an
		  unrecognized value in the Type field in the EGP header.
		      "
	::= { wfEgpNeighEntry 22 }

wfEgpNeighBadVersions OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received EGP messages that contained an
		  invalid EGP Version number in the EGP header. This EGP
		  implementation supports EGP Version 2.
		      "
	::= { wfEgpNeighEntry 23 }

wfEgpNeighCmdOutOfSeqs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times EGP received an out-of-sequence command
		  message.  An out-of-sequence message indicates that a prior
		  message, issued by an EGP peer, has been missed.
		      "
	::= { wfEgpNeighEntry 24 }

wfEgpNeighCmdRejects OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times EGP refused to respond to a received
		  command. Such refusal could be generated by receipt of a
		  neighbor acquisition message from an unknown AS, or by 
		  receipt of a faulty EGP message (for example, one with a
		  bad checksum) from a known neighbor.
		      "
	::= { wfEgpNeighEntry 25 }

wfEgpCfgNeighTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfEgpCfgNeighEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This table is used to configure the parameters for a relationship
		  with a particular local EGP neighbor. This table is proprietary 
		  and not part of the standard EGP MIB. 
		 "
	::= { wfEgpGroup 3 }

wfEgpCfgNeighEntry OBJECT-TYPE
	SYNTAX	WfEgpCfgNeighEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the EGP Cfg Neighbor table "
	INDEX	{ wfEgpCfgNeighRemoteAddr }
	::= { wfEgpCfgNeighTable 1 }

WfEgpCfgNeighEntry ::= SEQUENCE {
	wfEgpCfgNeighDelete
		INTEGER,
	wfEgpCfgNeighDisable
		INTEGER,
	wfEgpCfgNeighState
		INTEGER,
	wfEgpCfgNeighLocalAddr
		IpAddress,
	wfEgpCfgNeighRemoteAddr
		IpAddress,
	wfEgpCfgNeighGatewayMode
		INTEGER,
	wfEgpCfgNeighAcqMode
		INTEGER,
	wfEgpCfgNeighPollMode
		INTEGER,
	wfEgpCfgNeighHelloTimer
		INTEGER,
	wfEgpCfgNeighPollTimer
		INTEGER
}

wfEgpCfgNeighDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Users perform an SNMP SET
		  operation on this object to create/delete an EGP
		  neighbor relationship with the specified local IP 
		  address. 
		     "
	DEFVAL	{ created }
	::= { wfEgpCfgNeighEntry 1 }

wfEgpCfgNeighDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Users perforn an SNMP SET
		  operation on this object to enable/disable an EGP
		  Neighbor relationship with the specified local IP address.
		  Default is enabled.
		  This variable is also used to trigger operator-initiated 
		  Start and Stop events in the EGP FSM.  It takes the place 
		  of the egpNeighEventTrigger variable. When set, this variable
		  causes a Start or Stop event on the specified neighbor, as 
		  specified on pages 8-10 of RFC 904. Briefly, a Start event 
		  causes an Idle peer to begin neighbor acquisition and a 
		  non-Idle peer to reinitiate neighbor acquisition.  A stop 
		  event causes a non-Idle peer to return to the Idle state 
		  until a Start event occurs, either via egpNeighEventTrigger
		  or otherwise. This parameter is part of MIB 2. 
		  NOTE: The FSM is only affected if EGP is Enabled on the 
		  slot.
		      "
	DEFVAL	{ enabled }
	::= { wfEgpCfgNeighEntry 2 }

wfEgpCfgNeighState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This parameter relfects the current state of the specified
		  EGP neighbor relationship with specfied local IP address. 
		     "
	DEFVAL	{ notpresent }
	::= { wfEgpCfgNeighEntry 3 }

wfEgpCfgNeighLocalAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP address of the local interface that provides the
		  EGP connection to the remote autonomous system.
		     "
	::= { wfEgpCfgNeighEntry 4 }

wfEgpCfgNeighRemoteAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP address of the remote interface that provides the
		  EGP connection to the remote autonomous system.
		     "
	::= { wfEgpCfgNeighEntry 5 }

wfEgpCfgNeighGatewayMode OBJECT-TYPE
	SYNTAX	INTEGER {
		noncore(1),
		core(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This parameter specifies the EGP gateway mode of this IP
		  interface. The two modes are core and non-core. When the 
		  interface is configured in non-core mode, it will advertise 
		  and forward only traffic that originated or is destined 
		  for a local network within its AS. When configured for 
		  this mode, certain EGP Export Route Filters are auto-
		  matically configured for this interface. When the interface 
		  is configured in Core mode, it can advertise and forward 
		  traffic to networks interior or exterior to its local AS. 
		  The default is Core mode.
		     "
	DEFVAL	{ core }
	::= { wfEgpCfgNeighEntry 6 }

wfEgpCfgNeighAcqMode OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		passive(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This parameter specifies which of the two neighbors will
		  initiate EGP connections. This configures the mode for the
		  local EGP neighbor.  Note: At least one neighbor must be
		  in the Active mode.
		     "
	DEFVAL	{ passive }
	::= { wfEgpCfgNeighEntry 7 }

wfEgpCfgNeighPollMode OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		passive(2),
		both(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This parameter specifies the type of neighbor reachability
		  algorithm this local EGP neighbor will execute.  
		     "
	DEFVAL	{ both }
	::= { wfEgpCfgNeighEntry 8 }

wfEgpCfgNeighHelloTimer OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(30),
		maximum(120),
		default(60)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This parameter specifies the interval between EGP Hello
		  command retransmissions (in seconds) by the local EGP neighbor.  
		  This represents the t1 timer as defined in RFC 904.
		     "
	DEFVAL	{ default }
	::= { wfEgpCfgNeighEntry 9 }

wfEgpCfgNeighPollTimer OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(120),
		maximum(480),
		default(180)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This parameter specifies the interval between EGP poll
		  command retransmissions (in hundredths of a second) by the
		  local EGP neighbor. This represents the t3 timer as defined 
		  in RFC 904.
		     "
	DEFVAL	{ default }
	::= { wfEgpCfgNeighEntry 10 }

wfFakeEvent	OBJECT IDENTIFIER ::= { wfSnmpGroup 4 }

wfFakeEventString OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A dummy display string. While no string will actually be kept here, the
		  full identifier (object id + attribute id + instance ID ) will be used to
		  wrap event strings passed from the system logger into an SNMP Trap message.
		 "
	::= { wfFakeEvent 1 }

wfLogTrapSeverity OBJECT-TYPE
	SYNTAX	INTEGER {
		fault(1),
		warning(2),
		informational(3),
		trace(4),
		debug(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This object is used for wrapping log event severity information
		  in a log event specific trap.  The severity information is the thrid 
		  variable binding in a log event specific trap. "
	::= { wfFakeEvent 2 }

wfFddiTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFddiEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" FDDI line record "
	::= { wfLine 4 }

wfFddiEntry OBJECT-TYPE
	SYNTAX	WfFddiEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the FDDI table "
	INDEX	{ wfFDDISlot,
		wfFDDINode }
	::= { wfFddiTable 1 }

WfFddiEntry ::= SEQUENCE {
	wfFDDIDelete
		INTEGER,
	wfFDDIEnable
		INTEGER,
	wfFDDIState
		INTEGER,
	wfFDDISlot
		INTEGER,
	wfFDDINode
		INTEGER,
	wfFDDICct
		INTEGER,
	wfFDDIBofl
		INTEGER,
	wfFDDIBoflTmo
		INTEGER,
	wfFDDIMtu
		INTEGER,
	wfFDDIMadr
		OCTET STRING,
	wfFDDIOctetsRxOk
		Counter,
	wfFDDIFramesRxOk
		Counter,
	wfFDDIOctetsTxOk
		Counter,
	wfFDDIFramesTxOk
		Counter,
	wfFDDICrcErrRx
		Counter,
	wfFDDIOverrunRx
		Counter,
	wfFDDIParityErrRx
		Counter,
	wfFDDIMacErrRx
		Counter,
	wfFDDIRingErrRx
		Counter,
	wfFDDISmtRingErrRx
		Counter,
	wfFDDIRingOverrunRx
		Counter,
	wfFDDISmtRingOverrunRx
		Counter,
	wfFDDIAbortTx
		Counter,
	wfFDDIUnderrunTx
		Counter,
	wfFDDIParityErrTx
		Counter,
	wfFDDIRingErrTx
		Counter,
	wfFDDIPortOpErr
		Counter,
	wfFDDIInternOpErr
		Counter,
	wfFDDIHostErr
		Counter,
	wfFDDISmtConnectionPolicy
		INTEGER,
	wfFDDISmtTNotify
		INTEGER,
	wfFDDIMacTReq
		INTEGER,
	wfFDDIMacTMax
		INTEGER,
	wfFDDIMacTvxValue
		INTEGER,
	wfFDDIMacTMin
		INTEGER,
	wfFDDIHardwareFilter
		INTEGER,
	wfFDDISmtEnable
		INTEGER,
	wfFDDITxQueueLength
		INTEGER,
	wfFDDIRxQueueLength
		INTEGER,
	wfFDDITxClipFrames
		Counter,
	wfFDDIRxReplenMisses
		Counter,
	wfFDDICfgTxQueueLength
		INTEGER,
	wfFDDICfgRxQueueLength
		INTEGER,
	wfFDDILineNumber
		INTEGER,
	wfFDDIForcePeerTree
		INTEGER,
	wfFDDIInvalidFrameStatusRx
		Counter,
	wfFDDIRxOversizedFrames
		Counter
}

wfFDDIDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/delete parameter, default = create. "
	DEFVAL	{ create }
	::= { wfFddiEntry 1 }

wfFDDIEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/disable parameter, default = enable. "
	DEFVAL	{ enable }
	::= { wfFddiEntry 2 }

wfFDDIState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Line driver state variable, not present, init, down, up. "
	DEFVAL	{ notpresent }
	::= { wfFddiEntry 3 }

wfFDDISlot OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(14)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance ID slot - filled in by driver. "
	::= { wfFddiEntry 4 }

wfFDDINode OBJECT-TYPE
	SYNTAX	INTEGER {
		one(1),
		two(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance ID node - filled in by driver. "
	::= { wfFddiEntry 5 }

wfFDDICct OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1023)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Cct number for this line instance. "
	::= { wfFddiEntry 6 }

wfFDDIBofl OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Breath-Of-Life (BOFL) function, when enabled, will disable
		   the LLC interface when the FDDI becomes non-operational 
		   (i.e., link unavailable) and the following conditions are true:
		   1. The wfFddiMacMaUnitDataEnable attribute is enabled.
		   2. The BOFL timer expired (specified by wfFDDIBoflTmo).
		   If this attribute is disabled, the LLC interface will be
		   terminated immediately after the link becomes unavailable. 
		"
	DEFVAL	{ enable }
	::= { wfFddiEntry 7 }

wfFDDIBoflTmo OBJECT-TYPE
	SYNTAX	INTEGER {
		default(3),
		maximum(3600)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Specifies the time value (in seconds) of the BOFL timer. The BOFL
		   timer will be set to the value of this attribute when the following 
		   conditions are true:
		   1. The wfFDDIBofl attribute is enabled.
		   2. The link becomes unavailable.
		   Upon expiration of the BOFL timer, the LLC interface will be 
		   disabled. 
		   Note also that the BOFL timer will be disabled if the link becomes
		   operational (available) before the timer expires..
		"
	DEFVAL	{ default }
	::= { wfFddiEntry 8 }

wfFDDIMtu OBJECT-TYPE
	SYNTAX	INTEGER {
		default(4495)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The MTU is the maximum allowed frame length on the wire, excluding
		   frame delimiters (i.e. preamble, ending delimiter).
		   The MTU of an FDDI frame includes:
		      FC (1 octet) + DA (6 octets) + SA (6 octets) + 
		      INFO (<= 4478 octets) +
		      FCS (4 octets)  = 4495 octets
		"
	DEFVAL	{ default }
	::= { wfFddiEntry 9 }

wfFDDIMadr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" PROM-based MAC address, fixed - line driver fills in. "
	::= { wfFddiEntry 10 }

wfFDDIOctetsRxOk OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of bytes received without error. This byte count
		   only includes LLC and SMT frames (i.e. no MAC frames).
		"
	::= { wfFddiEntry 11 }

wfFDDIFramesRxOk OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames received without error. This frame count
		   only includes LLC and SMT frames (i.e. no MAC frames).
		"
	::= { wfFddiEntry 12 }

wfFDDIOctetsTxOk OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of bytes transmitted without error. This byte count
		   only includes LLC and SMT frames (i.e. no MAC frames).
		"
	::= { wfFddiEntry 13 }

wfFDDIFramesTxOk OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames transmitted without error. This frame count
		   only includes LLC and SMT frames (i.e. no MAC frames ).
		"
	::= { wfFddiEntry 14 }

wfFDDICrcErrRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames received with CRC errors. "
	::= { wfFddiEntry 15 }

wfFDDIOverrunRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames received with internal overrun errors. "
	::= { wfFddiEntry 16 }

wfFDDIParityErrRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames received with parity errors. "
	::= { wfFddiEntry 17 }

wfFDDIMacErrRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames received with MAC errors. "
	::= { wfFddiEntry 18 }

wfFDDIRingErrRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of receive ring error events. "
	::= { wfFddiEntry 19 }

wfFDDISmtRingErrRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of SMT receive ring error events. "
	::= { wfFddiEntry 20 }

wfFDDIRingOverrunRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of LLC receive ring overrun events. "
	::= { wfFddiEntry 21 }

wfFDDISmtRingOverrunRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of SMT receive ring overrun events. "
	::= { wfFddiEntry 22 }

wfFDDIAbortTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of transmit frames with internal abort errors. "
	::= { wfFddiEntry 23 }

wfFDDIUnderrunTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of transmit frames aborted with underrun errors. "
	::= { wfFddiEntry 24 }

wfFDDIParityErrTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of transmit frames aborted with parity errors. "
	::= { wfFddiEntry 25 }

wfFDDIRingErrTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of LLC/SMT transmit ring error events. "
	::= { wfFddiEntry 26 }

wfFDDIPortOpErr OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of port operation error events. "
	::= { wfFddiEntry 27 }

wfFDDIInternOpErr OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of internal operation error events. "
	::= { wfFddiEntry 28 }

wfFDDIHostErr OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of host error events. "
	::= { wfFddiEntry 29 }

wfFDDISmtConnectionPolicy OBJECT-TYPE
	SYNTAX	INTEGER {
		default(65381)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" A value that indicates the connection policies
		   enforced at the station. A station sets the
		   corresponding policy for each of the connection
		   types that it rejects. The letter designations, X
		   and Y, in the 'rejectX-Y' names have the following
		   significance: X represents the PC-Type of the
		   local PORT and Y represents a PC-Neighbor in the
		   evaluation of Connection-Policy (PC-Type, PC-
		   Neighbor) that is done to determine the setting of
		   T-Val(3) in the PC-Signaling sequence.
		   The value is a sum. This value initially takes
		   the value zero, then for each of the connection
		   policies currently enforced on the node, 2 raised
		   to a power is added to the sum. The powers are
		   according to the following table:
		          Policy   Power
		       rejectA-A   0
		       rejectA-B   1
		       rejectA-S   2
		       rejectA-M   3
		       rejectB-A   4
		       rejectB-B   5
		       rejectB-S   6
		       rejectB-M   7
		       rejectS-A   8
		       rejectS-B   9
		       rejectS-S   10
		       rejectS-M   11
		       rejectM-A   12
		       rejectM-B   13
		       rejectM-S   14
		       rejectM-M   15
		"
	DEFVAL	{ default }
	::= { wfFddiEntry 30 }

wfFDDISmtTNotify OBJECT-TYPE
	SYNTAX	INTEGER {
		min(2),
		default(22),
		max(30)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The timer used in the Neighbor Notification protocol, reported
		   in seconds and ranging from 2 to 30 seconds.
		"
	DEFVAL	{ default }
	::= { wfFddiEntry 31 }

wfFDDIMacTReq OBJECT-TYPE
	SYNTAX	INTEGER {
		default(2062500)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Specifies the maximum time value of 'wfFddiPathMaxTReq' that
		   shall be used by any MAC that is configured in this path. The
		   operational value of 'wfFddiPathMaxTReq' is managed by setting
		   this attribute. This attribute has the time value range of:
		        wfFddiPathTvxLowerBound < wfFddiMacTReq <=
		        wfFddiPathTMaxLowerBound.
		   Time specified in octet units. The default value of this attribute
		   is 165 msec. The name of this attribute in the IETF MIB is
		   FddiMibPATHMaxTReq.
		   To convert 165 milliseconds to octet units of 80 nanaseconds:
		   T_Req Nanaoseconds = 
		            ((165 * 1000 * 1000) / 80) = 2062500
		   To convert 2062500 octet units of 80 nanoseconds to milliseconds:
		   T_Req Milliseconds = 
		            ((2062500 / 12.5) / 1000)  = 165
		"
	DEFVAL	{ default }
	::= { wfFddiEntry 32 }

wfFDDIMacTMax OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The requested maximum TTRT to be supported by a MAC represented
		   in unsigned integer specifying time in octet units (80 nanoseconds).
		"
	::= { wfFddiEntry 33 }

wfFDDIMacTvxValue OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The requested value of TvxValue represented in unsigned integer
		   specifying time in octet units (80 nanoseconds).
		"
	::= { wfFddiEntry 34 }

wfFDDIMacTMin OBJECT-TYPE
	SYNTAX	INTEGER {
		default(50000)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The requested minimum TTRT to be requested by a MAC represented
		   in unsigned integer specifying time in octet units (80 nanoseconds).
		"
	DEFVAL	{ default }
	::= { wfFddiEntry 35 }

wfFDDIHardwareFilter OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Hardware filter (CAM) parameter. "
	DEFVAL	{ disable }
	::= { wfFddiEntry 36 }

wfFDDISmtEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable Station Management periodic timer and NIF protocol. "
	DEFVAL	{ enable }
	::= { wfFddiEntry 37 }

wfFDDITxQueueLength OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Current Transmit Queue Length "
	::= { wfFddiEntry 38 }

wfFDDIRxQueueLength OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Current Receive Queue Length "
	::= { wfFddiEntry 39 }

wfFDDITxClipFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames clipped in driver's transmit routine due to transmit
		   congestion.
		"
	::= { wfFddiEntry 40 }

wfFDDIRxReplenMisses OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of packet buffer misses while attempting to replenish driver
		   receive ring.
		"
	::= { wfFddiEntry 41 }

wfFDDICfgTxQueueLength OBJECT-TYPE
	SYNTAX	INTEGER {
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configured Transmit Queue Length. Values other than zero over-ride
		   the router selected values. A value of zero has a special meaning.
		   Zero causes router based default values to be used. Values larger
		   than the compiled ring size are truncated to the compiled ring
		   size.
		"
	::= { wfFddiEntry 42 }

wfFDDICfgRxQueueLength OBJECT-TYPE
	SYNTAX	INTEGER {
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configured Receive Queue Length. Values other than zero over-ride
		   the router selected values. A value of zero has a special meaning.
		   Zero cuases router based default values to be used. Values larger
		   than the compiled ring size are truncated to the compiled ring
		   size.
		"
	::= { wfFddiEntry 43 }

wfFDDILineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Logical line number associated with this driver entity. "
	::= { wfFddiEntry 44 }

wfFDDIForcePeerTree OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This attribute allows all FDDI Peer/Tree connections
		   to reach the 'Thru' state. This is done to give the 
		   user some flexibility and allow them to Daisy Chain 
		   their Phy connections, mixing Tree & Peer connections. 
		   This type of daisy chaining DOES NOT conform to the
		   SMT standard and is NOT recommended as it may result in 
		   a less than optimum token path. Normally when we have a
		   Peer/Tree connection mix, we will wrap the connection, 
		   favoring PHY B. "
	DEFVAL	{ disable }
	::= { wfFddiEntry 45 }

wfFDDIInvalidFrameStatusRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A count of the number of badly formed frames received off
		    of the FDDI ring. These are frames which do not contain a
		    valid Frame Status field of at least 3 control indicator
		    symbols (i.e. E, A, C, flags). "
	::= { wfFddiEntry 46 }

wfFDDIRxOversizedFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames received in excess of 4500 bytes in length. "
	::= { wfFddiEntry 47 }

wfFddiSmtTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFddiSmtEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A list of SMT entries. "
	::= { wfFddiSmtGroup 2 }

wfFddiSmtEntry OBJECT-TYPE
	SYNTAX	WfFddiSmtEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A SMT entry containing information common to a given SMT. "
	INDEX	{ wfFddiSmtSlot,
		wfFddiSmtNode }
	::= { wfFddiSmtTable 1 }

WfFddiSmtEntry ::= SEQUENCE {
	wfFddiSmtSlot
		INTEGER,
	wfFddiSmtNode
		INTEGER,
	wfFddiSmtCct
		INTEGER,
	wfFddiSmtStationId
		OCTET STRING,
	wfFddiSmtOpVersionId
		INTEGER,
	wfFddiSmtMacCt
		INTEGER,
	wfFddiSmtNonMasterCt
		INTEGER,
	wfFddiSmtEcmState
		INTEGER,
	wfFddiSmtCfState
		INTEGER,
	wfFddiSmtBypassPresent
		INTEGER,
	wfFddiSmtRemoteDisconnectFlag
		INTEGER,
	wfFddiSmtStationStatus
		INTEGER,
	wfFddiSmtPeerWrapFlag
		INTEGER
}

wfFddiSmtSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Slot number associated with an SMT entity. "
	::= { wfFddiSmtEntry 1 }

wfFddiSmtNode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Node/connector number associated with an SMT entity. "
	::= { wfFddiSmtEntry 2 }

wfFddiSmtCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Circuit number associated with an SMT entity. "
	::= { wfFddiSmtEntry 3 }

wfFddiSmtStationId OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Unique identifier of an FDDI station. "
	::= { wfFddiSmtEntry 4 }

wfFddiSmtOpVersionId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The version that this station is using for its operation. "
	::= { wfFddiSmtEntry 5 }

wfFddiSmtMacCt OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of MACs in a station. "
	::= { wfFddiSmtEntry 6 }

wfFddiSmtNonMasterCt OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of non master ports (A, B, or S PORTs) in a station. "
	::= { wfFddiSmtEntry 7 }

wfFddiSmtEcmState OBJECT-TYPE
	SYNTAX	INTEGER {
		out(1),
		in(2),
		trace(3),
		leave(4),
		pathtest(5),
		insert(6),
		check(7),
		deinsert(8)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the current state of the ECM state machine. "
	::= { wfFddiSmtEntry 8 }

wfFddiSmtCfState OBJECT-TYPE
	SYNTAX	INTEGER {
		isolated(1),
		wraps(2),
		wrapa(3),
		wrapb(4),
		wrapab(5),
		thru(6),
		locala(7),
		localb(8),
		localab(9),
		locals(10),
		cwrapa(11),
		cwrapb(12),
		cwraps(13)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The attachment configuration for a station. "
	::= { wfFddiSmtEntry 9 }

wfFddiSmtBypassPresent OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A flag indicating if the station has an optical bypass on its
		   A/B port pair.
		"
	::= { wfFddiSmtEntry 10 }

wfFddiSmtRemoteDisconnectFlag OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A flag indicating that the station was remotely disconnected
		   from the network as a result of receiving an 'wfFddiSmtStationAction'
		   disconnect in a Parameter Management Frame. A station requires 
		   a Connect Action to rejoin & clear the flag.
		"
	::= { wfFddiSmtEntry 11 }

wfFddiSmtStationStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		concatenated(1),
		seperated(2),
		thru(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This variable indicates the current state of the primary and
		   secondary paths within this station.
		"
	::= { wfFddiSmtEntry 12 }

wfFddiSmtPeerWrapFlag OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This variable assumes the value of the 'PeerWrapFlag' in CFM. "
	::= { wfFddiSmtEntry 13 }

wfFddiSmtExtTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFddiSmtExtEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A list of SMT extension entries. "
	::= { wfFddiSmtGroup 3 }

wfFddiSmtExtEntry OBJECT-TYPE
	SYNTAX	WfFddiSmtExtEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A SMT entry containing information common to a given SMT. "
	INDEX	{ wfFddiSmtExtSlot,
		wfFddiSmtExtNode }
	::= { wfFddiSmtExtTable 1 }

WfFddiSmtExtEntry ::= SEQUENCE {
	wfFddiSmtDelete
		INTEGER,
	wfFddiSmtExtSlot
		INTEGER,
	wfFddiSmtExtNode
		INTEGER,
	wfFddiSmtExtCct
		INTEGER,
	wfFddiSmtHiVersionId
		INTEGER,
	wfFddiSmtLoVersionId
		INTEGER,
	wfFddiSmtManufacturerData
		OCTET STRING,
	wfFddiSmtUserData
		DisplayString,
	wfFddiSmtMibVersionId
		INTEGER,
	wfFddiSmtMasterCts
		INTEGER,
	wfFddiSmtAvailablePaths
		INTEGER,
	wfFddiSmtConfigCapabilities
		INTEGER,
	wfFddiSmtConfigPolicy
		INTEGER,
	wfFddiSmtStatRptPolicy
		INTEGER,
	wfFddiSmtTraceMaxExpiration
		INTEGER,
	wfFddiSmtTimeStamp
		OCTET STRING,
	wfFddiSmtTransitionTimeStamp
		OCTET STRING,
	wfFddiSmtDatProtocol
		INTEGER
}

wfFddiSmtDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/delete parameter, default = create. "
	DEFVAL	{ created }
	::= { wfFddiSmtExtEntry 1 }

wfFddiSmtExtSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Slot number associated with an SMT entity. "
	::= { wfFddiSmtExtEntry 2 }

wfFddiSmtExtNode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Node/connector number associated with an SMT entity. "
	::= { wfFddiSmtExtEntry 3 }

wfFddiSmtExtCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Circuit number associated with an SMT entity. "
	::= { wfFddiSmtExtEntry 4 }

wfFddiSmtHiVersionId OBJECT-TYPE
	SYNTAX	INTEGER {
		id(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The highest version of SMT that this station supports. "
	DEFVAL	{ id }
	::= { wfFddiSmtExtEntry 5 }

wfFddiSmtLoVersionId OBJECT-TYPE
	SYNTAX	INTEGER {
		id(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The lowest version of SMT that this station supports. "
	DEFVAL	{ id }
	::= { wfFddiSmtExtEntry 6 }

wfFddiSmtManufacturerData OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Contains 32 Octets of manufacturer data. The first component,
		   manufacturing OUI, is the 3 octet Organizationally Unique
		   Identifier (OUI) assigned by IEEE. The second component,
		   ManufacturerData, is the manufacturers data (29 octets).
		"
	::= { wfFddiSmtExtEntry 7 }

wfFddiSmtUserData OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Contains 32 Octets of user defined information in ascii format. "
	::= { wfFddiSmtExtEntry 8 }

wfFddiSmtMibVersionId OBJECT-TYPE
	SYNTAX	INTEGER {
		id(1)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The version of the FDDI MIB of this station. "
	DEFVAL	{ id }
	::= { wfFddiSmtExtEntry 9 }

wfFddiSmtMasterCts OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of M ports in a node. "
	::= { wfFddiSmtExtEntry 10 }

wfFddiSmtAvailablePaths OBJECT-TYPE
	SYNTAX	INTEGER {
		p(1),
		s(2),
		l(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A bit string that indicates the path types that are available
		   in the station. 
		   The value initially takes the value 0, then for each type of
		   path that this node has available, 2 raised to a power is added
		   to the sum. The powers are according to the following table:
		        Path    Power
		        ----    -----
		        Primary   0
		        Secondary 1
		        Local     2
		   For example, a station having Primary and Local paths available
		   would have a value of 5 (2**0 + 2**2).
		"
	DEFVAL	{ p }
	::= { wfFddiSmtExtEntry 11 }

wfFddiSmtConfigCapabilities OBJECT-TYPE
	SYNTAX	INTEGER {
		avail(1),
		ab(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A bit string which indicates the configuration capabilities of
		   a node. 
		   The 'Hold Available' bit indicates the support of the optional
		   Hold function, which is controlled by 'wfFddiSmtConfigPolicy'.
		   The 'CF-Wrap-AB' bit indicates that the station has the capability
		   of performing a wrab_ab. 
		   The value is a sum. This value initially takes the value 0, then
		   for each of the configuration policies currently enforced on the
		   node, 2 raised to a power is added to the sum. The powers are
		   according to the following table:
		   Policy          Power
		   ------          -----
		   HoldAvailable     0
		   CF_Wrap-AB        1
		"
	::= { wfFddiSmtExtEntry 12 }

wfFddiSmtConfigPolicy OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A bit string representing the configuration policies currently
		   desired in a node. 'Hold' is one of the terms used for the
		   'Hold' flag.
		"
	::= { wfFddiSmtExtEntry 13 }

wfFddiSmtStatRptPolicy OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" If ENABLED, indicates that the node will generate Status Report Frames
		   (SRF) for its implemented events.
		"
	DEFVAL	{ enable }
	::= { wfFddiSmtExtEntry 14 }

wfFddiSmtTraceMaxExpiration OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(6001),
		default(7000),
		maximum(256000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Maximum propogation time for a Trace on an FDDI topology. The
		   value is stored in milliseconds.
		"
	DEFVAL	{ default }
	::= { wfFddiSmtExtEntry 15 }

wfFddiSmtTimeStamp OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Holds the time of creation of the last Status Report Frame (SRF). "
	::= { wfFddiSmtExtEntry 16 }

wfFddiSmtTransitionTimeStamp OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Holds the time of occurrence of the last condition or event. "
	::= { wfFddiSmtExtEntry 17 }

wfFddiSmtDatProtocol OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" SMT will implement an optional ANSI duplicate address test
		   involving periodic transmission of NSA NIF frames addressed
		   to itself if enabled by this attribute.
		"
	DEFVAL	{ enable }
	::= { wfFddiSmtExtEntry 18 }

wfFddiSmtActionTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFddiSmtActionEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A list of SMT action entries. "
	::= { wfFddiSmtGroup 4 }

wfFddiSmtActionEntry OBJECT-TYPE
	SYNTAX	WfFddiSmtActionEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An SMT entry containing actions common to a given SMT. "
	INDEX	{ wfFddiSmtActionSlot,
		wfFddiSmtActionNode }
	::= { wfFddiSmtActionTable 1 }

WfFddiSmtActionEntry ::= SEQUENCE {
	wfFddiSmtActionDelete
		INTEGER,
	wfFddiSmtActionSlot
		INTEGER,
	wfFddiSmtActionNode
		INTEGER,
	wfFddiSmtActionCct
		INTEGER,
	wfFddiSmtStationAction
		INTEGER
}

wfFddiSmtActionDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/delete parameter, default = create. "
	DEFVAL	{ created }
	::= { wfFddiSmtActionEntry 1 }

wfFddiSmtActionSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Slot number associated with an SMT action entity. "
	::= { wfFddiSmtActionEntry 2 }

wfFddiSmtActionNode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Node/connector number associated with an SMT action entity. "
	::= { wfFddiSmtActionEntry 3 }

wfFddiSmtActionCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Circuit number associated with an SMT action entity. "
	::= { wfFddiSmtActionEntry 4 }

wfFddiSmtStationAction OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		connect(2),
		disconnect(3),
		pathtest(4),
		selftest(5),
		disablea(6),
		disableb(7),
		disablem(8)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This object when read, always returns a value of other(1).
		   The behavior of setting this variable to each of the acceptable
		   values is as follows:
		   Other:       Results in a BadValue error
		   Connect:     Generates a connect signal to ECM
		                to begin a connection sequence. The
		                'wfFddiSmtRemoteDisconnectFlag' is
		                cleared on the setting of this
		                variable to 1.
		   Disconnect:  Generates a disconnect signal to 
		                ECM and sets the 
		                'wfFddiSmtRemoteDisconnectFlag' 
		                to TRUE.
		   Path_Test:   Initiates a station path test.
		                The 'PathTest' variable is set 
		                to 'Testing'. The results of
		                this action are not specified
		                in the standard.
		   Self_test:   Initiates a station self test.
		                The results of this action are
		                not specified in the standard.
		   Disable_A:   Disable_A causes a PC_Disable on the
		                A port if the A port mode is peer.
		   Disable_B:   Disable_B causes a PC_Disable on the
		                B port if the B port mode is peer.
		   Disable_M:   Disable_M causes a PC_Disable on all
		                M ports.
		   Attempts to set this object to all other values results in a
		   BadValue error. Agents may elect to return a BadValue error on
		   attempts to set this variable to PathTest or SelfTest.
		"
	::= { wfFddiSmtActionEntry 5 }

wfFddiMacTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFddiMacEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A list of MAC entries. "
	::= { wfFddiMacGroup 2 }

wfFddiMacEntry OBJECT-TYPE
	SYNTAX	WfFddiMacEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A MAC entry containing information common to a given MAC. "
	INDEX	{ wfFddiMacSlot,
		wfFddiMacNode }
	::= { wfFddiMacTable 1 }

WfFddiMacEntry ::= SEQUENCE {
	wfFddiMacSlot
		INTEGER,
	wfFddiMacNode
		INTEGER,
	wfFddiMacCct
		INTEGER,
	wfFddiMacUpstreamNbr
		OCTET STRING,
	wfFddiMacDownstreamNbr
		OCTET STRING,
	wfFddiMacSmtAddress
		OCTET STRING,
	wfFddiMacTNeg
		INTEGER,
	wfFddiMacRmtState
		INTEGER,
	wfFddiMacOldUpstreamNbr
		OCTET STRING,
	wfFddiMacOldDownstreamNbr
		OCTET STRING,
	wfFddiMacTokenCts
		OCTET STRING,
	wfFddiMacErrorCts
		OCTET STRING,
	wfFddiMacLostCts
		OCTET STRING,
	wfFddiMacDaFlag
		INTEGER,
	wfFddiMacUnaDaFlag
		INTEGER,
	wfFddiMacFrameErrorFlag
		INTEGER,
	wfFddiMacMaUnitDataAvailable
		INTEGER,
	wfFddiMacDownstreamPortType
		INTEGER
}

wfFddiMacSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Slot number associated with a MAC entity. "
	::= { wfFddiMacEntry 1 }

wfFddiMacNode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Node/connector number associated with a MAC entity. "
	::= { wfFddiMacEntry 2 }

wfFddiMacCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Circuit number associated with a MAC entity. "
	::= { wfFddiMacEntry 3 }

wfFddiMacUpstreamNbr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The MAC's upstream neighbor's long individual MAC address. It
		   may be determined by the Neighbor Information Frame protocol.
		   The value shall be reported as '00 00 00 00 00 00' if it is
		   unknown. SMT uses the MSB form for representation of 48-bit
		   addresses.
		"
	::= { wfFddiMacEntry 4 }

wfFddiMacDownstreamNbr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The MAC's downstream neighbor's long individual MAC address. It
		   may be determined by the Neighbor Information Frame protocol.
		   The value shall be reported as '00 00 00 00 00 00' if it is
		   unknown. SMT uses the MSB form for representation of 48-bit
		   addresses.
		"
	::= { wfFddiMacEntry 5 }

wfFddiMacSmtAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The 48 bit individual address of the MAC used for SMT frames.
		   SMT uses the MSB form for representation of 48-bit addresses.
		"
	::= { wfFddiMacEntry 6 }

wfFddiMacTNeg OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The negotiated TTRT during the claim process represented as an
		   unsigned integer specifying time in nanoseconds.
		"
	::= { wfFddiMacEntry 7 }

wfFddiMacRmtState OBJECT-TYPE
	SYNTAX	INTEGER {
		isolated(1),
		nonop(2),
		ringop(4),
		detect(8),
		nonopdup(16),
		ringopdup(32),
		directed(64),
		trace(128)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the current state of the Ring Management state machine. "
	::= { wfFddiMacEntry 8 }

wfFddiMacOldUpstreamNbr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The previous value of the MAC's upstream neighbor's long
		   individual MAC address. It has an initial value of the
		   SMT-Unknown-MAC Address and is only modified as specified by
		   the Neighbor Information Frame protocol. SMT uses the MSB
		   form for representation of 48-bit addresses.
		"
	::= { wfFddiMacEntry 9 }

wfFddiMacOldDownstreamNbr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The previous value of the MAC's downstream neighbor's long
		   individual MAC address. It has an initial value of the
		   SMT-Unknown-MAC Address and is only modified as specified by
		   the Neighbor Information Frame protocol. SMT uses the MSB
		   form for representation of 48-bit addresses.
		"
	::= { wfFddiMacEntry 10 }

wfFddiMacTokenCts OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A count that should as closely as possible match the number
		   of times the station has received a token (total of
		   non-restricted and restricted) on this MAC. This count is
		   valuable for determination of network load.
		"
	::= { wfFddiMacEntry 11 }

wfFddiMacErrorCts OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A count of the number of frames that were detected in error by
		   this MAC that had not been detected in error by another MAC.
		"
	::= { wfFddiMacEntry 12 }

wfFddiMacLostCts OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A count of the number of instances that this MAC detected a
		   format error during frame reception such that the frame was
		   stripped.
		"
	::= { wfFddiMacEntry 13 }

wfFddiMacDaFlag OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Duplicate Address Flag. An RMT flag used to indicate that the
		   MAC under control has the same address as another MAC on the FDDI.
		"
	::= { wfFddiMacEntry 14 }

wfFddiMacUnaDaFlag OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A flag, UNDA_Flag, set when the upstream neighbor reports a
		   duplicate address condition. Cleared once the condition clears.
		"
	::= { wfFddiMacEntry 15 }

wfFddiMacFrameErrorFlag OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the MAC Frame Error Condition is present when set.
		   Cleared when the condition clears and on station initialization.
		"
	::= { wfFddiMacEntry 16 }

wfFddiMacMaUnitDataAvailable OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A flag indicating that the MAC is available for the transmission
		   and reception of Protocol Data Units (PDUs). The MAC and LLC 
		   interface will be established when the wfFddiMacMaUnitDataEnable 
		   attribute is enabled.
		"
	::= { wfFddiMacEntry 17 }

wfFddiMacDownstreamPortType OBJECT-TYPE
	SYNTAX	INTEGER {
		typea(1),
		typeb(2),
		types(3),
		typem(4),
		typenone(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the PC-Type of the first port that is downstream of
		   this MAC (the exit port).
		"
	::= { wfFddiMacEntry 18 }

wfFddiMacExtTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFddiMacExtEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A list of MAC extension entries. "
	::= { wfFddiMacGroup 3 }

wfFddiMacExtEntry OBJECT-TYPE
	SYNTAX	WfFddiMacExtEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A MAC entry containing information common to a given MAC. "
	INDEX	{ wfFddiMacExtSlot,
		wfFddiMacExtNode }
	::= { wfFddiMacExtTable 1 }

WfFddiMacExtEntry ::= SEQUENCE {
	wfFddiMacDelete
		INTEGER,
	wfFddiMacExtSlot
		INTEGER,
	wfFddiMacExtNode
		INTEGER,
	wfFddiMacExtCct
		INTEGER,
	wfFddiMacFrameStatusFunctions
		INTEGER,
	wfFddiMacBridgeFunctions
		INTEGER,
	wfFddiMacTMaxCapability
		INTEGER,
	wfFddiMacTvxCapability
		INTEGER,
	wfFddiMacAvailablePaths
		INTEGER,
	wfFddiMacCurrentPath
		INTEGER,
	wfFddiMacDupAddrTest
		INTEGER,
	wfFddiMacRequestedPaths
		INTEGER,
	wfFddiMacCopiedCts
		Counter,
	wfFddiMacFrameErrorThreshold
		INTEGER,
	wfFddiMacFrameErrorRatio
		INTEGER,
	wfFddiMacHardwarePresent
		INTEGER,
	wfFddiMacMaUnitDataEnable
		INTEGER,
	wfFddiMacTvxExpiredCts
		Counter,
	wfFddiMacLateCts
		Counter,
	wfFddiMacRingOpCts
		Counter,
	wfFddiMacDuplicateTokenCts
		Counter
}

wfFddiMacDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/delete parameter, default = create. "
	DEFVAL	{ created }
	::= { wfFddiMacExtEntry 1 }

wfFddiMacExtSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Slot number associated with a MAC entity. "
	::= { wfFddiMacExtEntry 2 }

wfFddiMacExtNode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Node/connector number associated with a MAC entity. "
	::= { wfFddiMacExtEntry 3 }

wfFddiMacExtCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Circuit number associated with a MAC entity. "
	::= { wfFddiMacExtEntry 4 }

wfFddiMacFrameStatusFunctions OBJECT-TYPE
	SYNTAX	INTEGER {
		repeat(1),
		set(2),
		clear(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the MAC's optional Frame Status processing functions.
		   The value is a sum. This value initially takes the value 0,
		   then for each function present, 2 raised to a power is added
		   to the sum. The powers are according to the following table:
		   function        power
		   --------        -----
		   fs-repeating      0
		   fs-setting        1
		   fs-clearing       2
		"
	::= { wfFddiMacExtEntry 5 }

wfFddiMacBridgeFunctions OBJECT-TYPE
	SYNTAX	INTEGER {
		transparent(1),
		srcroute(2),
		srt(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the MAC's optional bridging functions.
		   The value is a sum. This value initially takes the value zero,
		   then for each function present, 2 raised to a power is added to
		   the sum. The powers are according to the following table:
		        Function        Power
		        --------        ----
		           tb             0 -- Transparent bridging active
		           sr             1 -- Src routing active
		          srt             2 -- Src routing transparent active
		"
	::= { wfFddiMacExtEntry 6 }

wfFddiMacTMaxCapability OBJECT-TYPE
	SYNTAX	INTEGER {
		default(1336934400)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the maximum time value (in nanoseconds) of 'wfFddiMacTMax'
		   that this MAC can support.
		"
	DEFVAL	{ default }
	::= { wfFddiMacExtEntry 7 }

wfFddiMacTvxCapability OBJECT-TYPE
	SYNTAX	INTEGER {
		default(5222400)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the maximum time value (in nanoseconds) of 'wfFddiMacTvxValue'
		   that this MAC can support.
		"
	DEFVAL	{ default }
	::= { wfFddiMacExtEntry 8 }

wfFddiMacAvailablePaths OBJECT-TYPE
	SYNTAX	INTEGER {
		p(1),
		s(2),
		l(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the paths available for this MAC.
		   The value is a sum. This value initially takes the value 0, then
		   for each type of PATH that this MAC has available, 2 raised to a
		   power is added to the sum. The powers are according to the
		   following table:
		   Path        Power
		   ----        -----
		   Primary       0
		   Secondary     1
		   Local         2
		"
	DEFVAL	{ p }
	::= { wfFddiMacExtEntry 9 }

wfFddiMacCurrentPath OBJECT-TYPE
	SYNTAX	INTEGER {
		isolated(1),
		local(2),
		secondary(3),
		primary(4),
		concatenated(5),
		thru(6)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the Path into which this MAC is currently inserted. "
	DEFVAL	{ isolated }
	::= { wfFddiMacExtEntry 10 }

wfFddiMacDupAddrTest OBJECT-TYPE
	SYNTAX	INTEGER {
		none(1),
		pass(2),
		fail(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Duplicate Address test flag. "
	DEFVAL	{ none }
	::= { wfFddiMacExtEntry 11 }

wfFddiMacRequestedPaths OBJECT-TYPE
	SYNTAX	INTEGER {
		local(1),
		salt(2),
		palt(4),
		calt(8),
		spref(16),
		ppref(32),
		cpref(64),
		thru(128)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Contains a list of Permitted Paths which specifies the Path(s)
		   into which the MAC may be inserted.
		   The value is a sum which represents the individual paths that
		   are desired. This value initially takes the value zero, then
		   for each type of PATH that this node is, 2 raised to a power is
		   added to the sum. The powers are according to the following table:
		                          Path  Power
		                          ----  -----
		                         local    0
		           secondary-alternate    1
		             primary-alternate    2
		        concatenated-alternate    3
		           secondary-preferred    4
		             primary-preferred    5
		        concatenated-preferred    6
		                          thru    7
		"
	DEFVAL	{ palt }
	::= { wfFddiMacExtEntry 12 }

wfFddiMacCopiedCts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A count that should as closely as possible match the number of
		   frames addressed to (A bit set) and successfully copied into
		   the station's receive buffers (C bit set) by this MAC.
		"
	::= { wfFddiMacExtEntry 13 }

wfFddiMacFrameErrorThreshold OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A threshold for determining when a MAC Condition report shall
		   be generated. Stations not supporting variable thresholds shall
		   have a value of 0 and a range of (0..0).
		"
	::= { wfFddiMacExtEntry 14 }

wfFddiMacFrameErrorRatio OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This variable is the value of the ratio:
		   ((delta wfFddiMacLostCts + delta wfFddiMacErrorCts) /
		    (delta wfFddiMacFrameCts + delta wfFddiMacLostCts))
		  2**16)
		"
	::= { wfFddiMacExtEntry 15 }

wfFddiMacHardwarePresent OBJECT-TYPE
	SYNTAX	INTEGER {
		notpresent(1),
		present(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This variable indicates the presence of underlying hardware
		   support for this MAC object.
		"
	DEFVAL	{ present }
	::= { wfFddiMacExtEntry 16 }

wfFddiMacMaUnitDataEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" A configurable attribute that specifies whether the MAC will be
		   available for the transmission and reception of Protocol Data Units 
		   (PDUs). If enabled, the interface to the MAC entity will be available 
		   for the exchange of PDUs between the MAC and the local LLC entity 
		   when the ring becomes operational (i.e., LLC interface is established). 
		   Setting this attribute has no effect on the transfer and reception of 
		   MAC or SMT frames.
		"
	DEFVAL	{ enable }
	::= { wfFddiMacExtEntry 17 }

wfFddiMacTvxExpiredCts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A count that should as closely as possible match the number
		   of times that TVX has expired.
		"
	::= { wfFddiMacExtEntry 18 }

wfFddiMacLateCts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A count that should as closely as possible match the number of
		   TRT expirations since this MAC was reset or a token was received.
		"
	::= { wfFddiMacExtEntry 19 }

wfFddiMacRingOpCts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of the number of times the ring has entered the
		   'Ring Operational' state from the `Ring Not Operational' state.
		   This count is updated when a SM_MA_STATUS Indication of a change
		   in the Ring_Operational state occurs. Because of implementatio
		   considerations, this count may be less than the actual RingOp_Ct.
		   It is not a requirement that this count be exact.
		"
	::= { wfFddiMacExtEntry 20 }

wfFddiMacDuplicateTokenCts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of the number of times a Duplicate Token has been detected. "
	::= { wfFddiMacExtEntry 21 }

wfFddiPathTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFddiPathEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A list of PATH entries. "
	::= { wfFddiPathGroup 2 }

wfFddiPathEntry OBJECT-TYPE
	SYNTAX	WfFddiPathEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A PATH entry containing information common to a given PATH. "
	INDEX	{ wfFddiPathSlot,
		wfFddiPathNode }
	::= { wfFddiPathTable 1 }

WfFddiPathEntry ::= SEQUENCE {
	wfFddiPathSlot
		INTEGER,
	wfFddiPathNode
		INTEGER,
	wfFddiPathCct
		INTEGER,
	wfFddiPathConfiguration
		OCTET STRING
}

wfFddiPathSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Slot number associated with a PATH entity. "
	::= { wfFddiPathEntry 1 }

wfFddiPathNode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Node/connector number associated with a PATH entity. "
	::= { wfFddiPathEntry 2 }

wfFddiPathCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Circuit number associated with a PATH entity. "
	::= { wfFddiPathEntry 3 }

wfFddiPathConfiguration OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A circular list of resources on the path where each entry
		   in the list consists of a resource type identifier (MAC
		   or PORT), an index, and its CurrentPath. If the path is
		   available to a resource in the node (as indicated by 
		   'wfFddiPortAvailablePaths' or 'wfFddiMacAvailablePaths')
		   then that resource shall be included in the list. If the
		   path is not available to a resource or the underlying
		   hardware is not present, then that resource shall not be
		   included in the list. Resources currently inserted in the
		   Path shall appear in the list once in token order. Resources
		   not currently inserted in the Path shall appear once in any
		   position supported by the implementation.
		"
	::= { wfFddiPathEntry 4 }

wfFddiPathExtTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFddiPathExtEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A list of PATH extension entries. "
	::= { wfFddiPathGroup 3 }

wfFddiPathExtEntry OBJECT-TYPE
	SYNTAX	WfFddiPathExtEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A PATH entry containing information common to a given PATH. "
	INDEX	{ wfFddiPathExtSlot,
		wfFddiPathExtNode }
	::= { wfFddiPathExtTable 1 }

WfFddiPathExtEntry ::= SEQUENCE {
	wfFddiPathDelete
		INTEGER,
	wfFddiPathExtSlot
		INTEGER,
	wfFddiPathExtNode
		INTEGER,
	wfFddiPathExtCct
		INTEGER,
	wfFddiPathTvxLowerBound
		INTEGER,
	wfFddiPathTMaxLowerBound
		INTEGER,
	wfFddiPathMaxTReq
		INTEGER
}

wfFddiPathDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/delete parameter, default = create. "
	DEFVAL	{ created }
	::= { wfFddiPathExtEntry 1 }

wfFddiPathExtSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Slot number associated with a Path entity. "
	::= { wfFddiPathExtEntry 2 }

wfFddiPathExtNode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Node/connector number associated with a Path entity. "
	::= { wfFddiPathExtEntry 3 }

wfFddiPathExtCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Circuit number associated with a Path entity. "
	::= { wfFddiPathExtEntry 4 }

wfFddiPathTvxLowerBound OBJECT-TYPE
	SYNTAX	INTEGER {
		default(2500000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Specifies the minimum time value of 'wfFddiMacTvxValue'
		   that shall be used  by any MAC that is configured in this 
		   path. The operational value of 'wfFddiMacTvxValue' is 
		   managed by setting this variable. This variable has the 
		   time value range of:
		        0 < wfFddiPathTvxLowerBound < wfFddiPathMaxTReq
		   Changes to this attribute shall either satisfy the time
		   value relationship:
		        wfFddiPathTvxLowerBound <= wfFddiMacTvxCapability
		   of each of the MACS currently on the path, or be
		   considered out of range. Time specified in nanoseconds.
		   The initial value of wfFddiPathTvxLowerBound shall be 
		   2.500 msec.
		"
	DEFVAL	{ default }
	::= { wfFddiPathExtEntry 5 }

wfFddiPathTMaxLowerBound OBJECT-TYPE
	SYNTAX	INTEGER {
		default(165000000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Specifies the minimum time value of 'wfFddiMACTMax' that
		   shall be used by any MAC that is configured in this path. 
		   The operational value of 'wfFddiMacTMax' is managed by setting
		   this attribute. This attribute has the time value range of:
		        wfFddiPathMaxTReq <= wfFddiPathTMaxLowerBound
		   and an absolute time value range of
		        10msec <= wfFddiPathTMaxLowerBound.
		   Changes to this aattribute shall either satisfy the time
		   value relationship:
		        wfFddiPathTMaxLowerBound < wfFddiMacTMaxCapability
		   of each of the MACs currently on the path, or be
		   considered out of range. Time specified in nanoseconds.
		   The initial value of wfFddiPathTMaxLowerBound shall be 
		   165 msec.
		"
	DEFVAL	{ default }
	::= { wfFddiPathExtEntry 6 }

wfFddiPathMaxTReq OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This variable is the T_Req_value passed to the MAC. Without
		   having detected a duplicate, the time value of this variable
		   shall assume the maximum supported time value which is less
		   than or equal to the time value of wfFDDIMacTReq. When a MAC
		   has an address detected as a duplicate, it may use a time
		   value for this variable greater than the time value of
		   wfFddiPathTMaxLowerBound. A station shall cause claim when the
		   new T_Req may cause the value of T_Neg to change in the claim
		   process (i.e., time value new T_Req < T_Neg, or old T_Req =
		   T_Neg). This value is encoded in nanoseconds. The name of
		   this attribute in the IETF MIB is FddiMibMACTReq.
		"
	::= { wfFddiPathExtEntry 7 }

wfFddiPortTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFddiPortEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A list of PORT entries. "
	::= { wfFddiPortGroup 2 }

wfFddiPortEntry OBJECT-TYPE
	SYNTAX	WfFddiPortEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A PORT entry containing information common to a given PORT. "
	INDEX	{ wfFddiPortSlot,
		wfFddiPortNode,
		wfFddiPortIndex }
	::= { wfFddiPortTable 1 }

WfFddiPortEntry ::= SEQUENCE {
	wfFddiPortSlot
		INTEGER,
	wfFddiPortNode
		INTEGER,
	wfFddiPortCct
		INTEGER,
	wfFddiPortIndex
		INTEGER,
	wfFddiPortPcType
		INTEGER,
	wfFddiPortPcNeighbor
		INTEGER,
	wfFddiPortPcmState
		INTEGER,
	wfFddiPortRequestedPaths
		INTEGER,
	wfFddiPortBsFlag
		INTEGER,
	wfFddiPortLerFlag
		INTEGER,
	wfFddiPortConnectState
		INTEGER,
	wfFddiPortMacIndicated
		INTEGER
}

wfFddiPortSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Slot number associated with a PORT entity. "
	::= { wfFddiPortEntry 1 }

wfFddiPortNode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Node/connector number associated with a PORT entity. "
	::= { wfFddiPortEntry 2 }

wfFddiPortCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Circuit number associated with a PORT entity. "
	::= { wfFddiPortEntry 3 }

wfFddiPortIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A unique value for each PORT associated with each
		   slot/connector pair.
		"
	::= { wfFddiPortEntry 4 }

wfFddiPortPcType OBJECT-TYPE
	SYNTAX	INTEGER {
		a(1),
		b(2),
		s(3),
		m(4),
		none(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The physical connector type of the local PORT. "
	::= { wfFddiPortEntry 5 }

wfFddiPortPcNeighbor OBJECT-TYPE
	SYNTAX	INTEGER {
		a(1),
		b(2),
		s(3),
		m(4),
		unknown(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The physical connector type of the remote PORT. "
	::= { wfFddiPortEntry 6 }

wfFddiPortPcmState OBJECT-TYPE
	SYNTAX	INTEGER {
		off(1),
		break(2),
		trace(3),
		connect(4),
		next(5),
		signal(6),
		join(7),
		verify(8),
		active(9),
		maint(10)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" State of Physical State Machine. "
	::= { wfFddiPortEntry 7 }

wfFddiPortRequestedPaths OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This variable is a list of permitted paths where each list
		   element defines the Port's permitted paths. The first octet
		   corresponds to 'none', the second octet to 'tree' and the
		   third octet to 'peer'.
		"
	::= { wfFddiPortEntry 8 }

wfFddiPortBsFlag OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Break State Flag - A PCM flag used to indicate that the PCM
		   state Machine is not leaving the Break State in an expected
		   time interval & a problem is suspected.
		"
	::= { wfFddiPortEntry 9 }

wfFddiPortLerFlag OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The condition becomes active when the value of
		  'wfFddiPortLerEstimate' is <= 'wfFddiPortLerAlarm'. This will
		   be reported with Status Report Frames (SRF).
		"
	::= { wfFddiPortEntry 10 }

wfFddiPortConnectState OBJECT-TYPE
	SYNTAX	INTEGER {
		disabled(1),
		connecting(2),
		standby(3),
		active(4),
		unknown(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A variable from PCM to other management entities indicating
		   the state of the connection.
		"
	::= { wfFddiPortEntry 11 }

wfFddiPortMacIndicated OBJECT-TYPE
	SYNTAX	INTEGER {
		ff(1),
		ft(2),
		tf(3),
		tt(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The indications (T_Val(9), R_Val(9)) in PC-Signalling, of the
		   intent to place a MAC in the output token path to a PORT.
		"
	::= { wfFddiPortEntry 12 }

wfFddiPortExtTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFddiPortExtEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A list of PORT extension entries. "
	::= { wfFddiPortGroup 3 }

wfFddiPortExtEntry OBJECT-TYPE
	SYNTAX	WfFddiPortExtEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A PORT entry containing information common to a given PORT. "
	INDEX	{ wfFddiPortExtSlot,
		wfFddiPortExtNode,
		wfFddiPortExtIndex }
	::= { wfFddiPortExtTable 1 }

WfFddiPortExtEntry ::= SEQUENCE {
	wfFddiPortDelete
		INTEGER,
	wfFddiPortExtSlot
		INTEGER,
	wfFddiPortExtNode
		INTEGER,
	wfFddiPortExtCct
		INTEGER,
	wfFddiPortExtIndex
		INTEGER,
	wfFddiPortConnectionPolicies
		INTEGER,
	wfFddiPortCurrentPath
		INTEGER,
	wfFddiPortMacPlacement
		INTEGER,
	wfFddiPortAvailablePaths
		INTEGER,
	wfFddiPortPmdClass
		INTEGER,
	wfFddiPortConnectionCapabilities
		INTEGER,
	wfFddiPortEbErrorCts
		INTEGER,
	wfFddiPortLctFailCts
		Counter,
	wfFddiPortLerEstimate
		INTEGER,
	wfFddiPortLemRejectCts
		Counter,
	wfFddiPortLemCts
		Counter,
	wfFddiPortLerCutOff
		INTEGER,
	wfFddiPortLerAlarm
		INTEGER,
	wfFddiPortPcWithhold
		INTEGER,
	wfFddiPortHardwarePresent
		INTEGER
}

wfFddiPortDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/delete parameter, default = create. "
	DEFVAL	{ created }
	::= { wfFddiPortExtEntry 1 }

wfFddiPortExtSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Slot number associated with a Port entity. "
	::= { wfFddiPortExtEntry 2 }

wfFddiPortExtNode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Node/connector number associated with a Port entity. "
	::= { wfFddiPortExtEntry 3 }

wfFddiPortExtCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Circuit number associated with a Port entity. "
	::= { wfFddiPortExtEntry 4 }

wfFddiPortExtIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A unique value for each PORT associated with each
		   slot/connector pair.
		"
	::= { wfFddiPortExtEntry 5 }

wfFddiPortConnectionPolicies OBJECT-TYPE
	SYNTAX	INTEGER {
		maclct(1),
		macloop(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A value representing the PORT's connection policies desired in
		   the node. The value of 'pc-mac-lct' (i.e. PCM MAC LinkConfidence
		   Test) is a term used in the PC_MAC_LCT Flag. The value of
		   'pc-mac-loop' is a term used in the PC_MAC_LOOP flag.
		   The value is a sum. This value initially takes the value zero,
		   then for each PORT policy, 2 raised to a power is added to the
		   sum. The powers are according to the following table:
		                Policy  Power
		                ------  -----
		            pc-mac-lct    0
		           pc-mac-loop    1
		"
	DEFVAL	{ maclct }
	::= { wfFddiPortExtEntry 6 }

wfFddiPortCurrentPath OBJECT-TYPE
	SYNTAX	INTEGER {
		isolated(1),
		local(2),
		secondary(3),
		primary(4),
		concatenated(5),
		thru(6)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the Path(s) into which this PORT is currently inserted. "
	DEFVAL	{ isolated }
	::= { wfFddiPortExtEntry 7 }

wfFddiPortMacPlacement OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the MAC, if any, whose transmit path exits the station
		   via this PORT. The value shall be zero if there is no MAC associated
		   with the PORT.
		"
	::= { wfFddiPortExtEntry 8 }

wfFddiPortAvailablePaths OBJECT-TYPE
	SYNTAX	INTEGER {
		p(1),
		s(2),
		l(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the Paths which are available to this Port. In the
		   absence of faults, the A & B ports will always have both the
		   Primary & Secondary paths available.
		   The value is a sum. This value initially takes the value 0,
		   then for each type of PATH that this port has available, 2
		   raised to a power is added to the sum. The powers are according
		   to the following table:
		         Path           Power
		         ----           -----
		        Primary           0
		      Secondary           1
		          Local           2
		"
	::= { wfFddiPortExtEntry 9 }

wfFddiPortPmdClass OBJECT-TYPE
	SYNTAX	INTEGER {
		multimode(1),
		mode1(2),
		mode2(3),
		sonet(4),
		fiber(5),
		twistedpair(6),
		unknown(7),
		unspecified(8)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the Path(s) into which this PORT is currently inserted. "
	::= { wfFddiPortExtEntry 10 }

wfFddiPortConnectionCapabilities OBJECT-TYPE
	SYNTAX	INTEGER {
		maclct(1),
		macloop(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A value that indicates the connection capabilities of the port.
		   The 'pc-mac-lct' bit indicates that the station has the capability
		   of setting the PC_MAC_LCT Flag. The 'pc-mac-loop' bit indicates
		   that the station has the capability of setting the PC_MAC_LOOP Flag. 
		   The value is a sum. This value initially takes the value zero,
		   then for each PORT policy, 2 raised to a power is added to the
		   sum. The powers are according to the following table:
		            Capability  Power
		            ----------  -----
		            pc-mac-lct    0
		           pc-mac-loop    1
		"
	DEFVAL	{ maclct }
	::= { wfFddiPortExtEntry 11 }

wfFddiPortEbErrorCts OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of the number of elasticity buffer errors for a
		   particular PHY. The elasticity buffer is used to account for
		   clock tolerances between stations
		"
	::= { wfFddiPortExtEntry 12 }

wfFddiPortLctFailCts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The count of the consecutive times the link confidence test
		   (LCT) has failed during Connection Management.
		"
	::= { wfFddiPortExtEntry 13 }

wfFddiPortLerEstimate OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(4),
		maximum(15)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A long term average of the link error rate. It ranges from
		   10**-4 to 10**-15 and is reported as the absolute value of the
		   base 10 logarithm.
		"
	DEFVAL	{ maximum }
	::= { wfFddiPortExtEntry 14 }

wfFddiPortLemRejectCts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A link error monitoring count of the times that a link has
		   been rejected.
		"
	::= { wfFddiPortExtEntry 15 }

wfFddiPortLemCts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The aggregate link error moniitor error count, set to 0 only
		   on station initialization.
		"
	::= { wfFddiPortExtEntry 16 }

wfFddiPortLerCutOff OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(4),
		default(8),
		maximum(15)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The link err rate estimate at which a link connection will be
		   broken. It ranges from 10**-4 to 10**-15 and is reported as the
		   absolute value of the base 10 logarithm.
		"
	DEFVAL	{ default }
	::= { wfFddiPortExtEntry 17 }

wfFddiPortLerAlarm OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(4),
		default(8),
		maximum(15)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The link err rate estimate at which a link connection will
		   generate an alarm. It ranges from 10**-4 to 10**-15 and is
		   reported as the absolute value of the base 10 logarithm of
		   the estimate.
		"
	DEFVAL	{ default }
	::= { wfFddiPortExtEntry 18 }

wfFddiPortPcWithhold OBJECT-TYPE
	SYNTAX	INTEGER {
		none(1),
		mtom(2),
		otherincompatible(3),
		pathnotavailable(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A variable from PCM to other management entities containing
		   the reason for withholding a connection.
		"
	DEFVAL	{ none }
	::= { wfFddiPortExtEntry 19 }

wfFddiPortHardwarePresent OBJECT-TYPE
	SYNTAX	INTEGER {
		notpresent(1),
		present(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This variable indicates the presence of underlying hardware
		   support for this port object.
		"
	DEFVAL	{ present }
	::= { wfFddiPortExtEntry 20 }

wfFddiPortActionTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFddiPortActionEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A list of Port Action entries. "
	::= { wfFddiPortGroup 4 }

wfFddiPortActionEntry OBJECT-TYPE
	SYNTAX	WfFddiPortActionEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A PORT entry containing actions common to a given PORT. "
	INDEX	{ wfFddiPortActionSlot,
		wfFddiPortActionNode,
		wfFddiPortActionIndex }
	::= { wfFddiPortActionTable 1 }

WfFddiPortActionEntry ::= SEQUENCE {
	wfFddiPortActionDelete
		INTEGER,
	wfFddiPortActionSlot
		INTEGER,
	wfFddiPortActionNode
		INTEGER,
	wfFddiPortActionCct
		INTEGER,
	wfFddiPortActionIndex
		INTEGER,
	wfFddiPortAction
		INTEGER
}

wfFddiPortActionDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/delete parameter, default = create. "
	DEFVAL	{ created }
	::= { wfFddiPortActionEntry 1 }

wfFddiPortActionSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Slot number associated with a PORT action entity. "
	::= { wfFddiPortActionEntry 2 }

wfFddiPortActionNode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Node/connector number associated with a PORT action entity. "
	::= { wfFddiPortActionEntry 3 }

wfFddiPortActionCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Circuit number associated with a PORT action entity. "
	::= { wfFddiPortActionEntry 4 }

wfFddiPortActionIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A unique value for each PORT associated with each
		   slot/connector pair.
		"
	::= { wfFddiPortActionEntry 5 }

wfFddiPortAction OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		maint(2),
		enable(3),
		disable(4),
		start(5),
		stop(6)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Causes a control signal to be generated with a control_action
		   of 'Signal' and the 'variable' parameter set with the
		   appropriate value (i.e. PC_Maint, PC_Enable, PC_Disable, PC_Start,
		   or PC_Stop). These signals are used to initiate a state change
		   within Connection Management
		"
	::= { wfFddiPortActionEntry 6 }

wfFrDlcmiTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFrDlcmiEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The Parameters for the Data Link Connection Management Interface "
	::= { wfFrameRelayGroup 1 }

wfFrDlcmiEntry OBJECT-TYPE
	SYNTAX	WfFrDlcmiEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The parameters for a particular Data Link Connection Management Interface"
	INDEX	{ wfFr1DlcmiCircuit }
	::= { wfFrDlcmiTable 1 }

WfFrDlcmiEntry ::= SEQUENCE {
	wfFr1DlcmiDelete
		INTEGER,
	wfFr1DlcmiDisable
		INTEGER,
	wfFr1DlcmiState
		INTEGER,
	wfFr1DlcmiCircuit
		INTEGER,
	wfFr1DlcmiManagementType
		INTEGER,
	wfFr1DlcmiStatus
		INTEGER,
	wfFr1DlcmiAddress
		INTEGER,
	wfFr1DlcmiAddressLen
		INTEGER,
	wfFr1DlcmiPollingInterval
		INTEGER,
	wfFr1DlcmiFullEnquiryInterval
		INTEGER,
	wfFr1DlcmiErrorThreshold
		INTEGER,
	wfFr1DlcmiMonitoredEvents
		INTEGER,
	wfFr1DlcmiMaxSupportedVCs
		INTEGER,
	wfFr1DlcmiMulticast
		INTEGER,
	wfFr1DlcmiSeqCount
		INTEGER,
	wfFr1DlcmiLastReceived
		INTEGER,
	wfFr1DlcmiPassiveSeqCount
		INTEGER,
	wfFr1DlcmiPassiveReceived
		INTEGER,
	wfFr1DlcmiPolls
		INTEGER,
	wfFr1DlcmiAlarmTimer
		INTEGER,
	wfFr1ErrType
		INTEGER,
	wfFr1ErrData
		OCTET STRING,
	wfFr1ErrTime
		TimeTicks,
	wfFr1ErrDiscards
		Counter,
	wfFr1ErrDrops
		Counter
}

wfFr1DlcmiDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indication to delete this frame relay interface "
	DEFVAL	{ created }
	::= { wfFrDlcmiEntry 1 }

wfFr1DlcmiDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates when a dlcmi entry is to be enabled or disabled. "
	DEFVAL	{ enabled }
	::= { wfFrDlcmiEntry 2 }

wfFr1DlcmiState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current state of Frame Relay. The not present state is not actually
		   valid except when the record is first added.  It is included for 
		   consistency. "
	DEFVAL	{ notpresent }
	::= { wfFrDlcmiEntry 3 }

wfFr1DlcmiCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier.  The circuit number of this entry"
	::= { wfFrDlcmiEntry 4 }

wfFr1DlcmiManagementType OBJECT-TYPE
	SYNTAX	INTEGER {
		none(1),
		lmi(2),
		t1617d(3),
		t1617b(4),
		annexa(5),
		lmiswitch(6),
		annexdswitch(7),
		annexaswitch(8)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This variable indicates which Data Link Connection Management
		   scheme is active (and by implication, what DLCI it uses).  "
	DEFVAL	{ t1617d }
	::= { wfFrDlcmiEntry 5 }

wfFr1DlcmiStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		start(1),
		running(2),
		fault(3),
		recovered(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the status of the interface.
		 FR1_STATUS_START is the state during rebooting or initial 
		  start of circuit
		 FR1_STATUS_RUNNING1 is the sate after the circuit is up (either LMI 
		  successful or there is no DLCMI and the system just comes up).
		 FR1_STATUS_FAULT is a transient state indicating that errors have 
		  caused the circuit to be disabled until DLCMI recovery.
		 FR1_STATUS_RECOVERED indicates that an the system has been in the 
		  FR_STATUS_FAULT mode before, but has since recovered.
		"
	DEFVAL	{ start }
	::= { wfFrDlcmiEntry 6 }

wfFr1DlcmiAddress OBJECT-TYPE
	SYNTAX	INTEGER {
		q921(1),
		q922march90(2),
		q922november90(3),
		q922(4)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This states which address format is in use on the FR interface.
		   The default is Q922 "
	DEFVAL	{ q922 }
	::= { wfFrDlcmiEntry 7 }

wfFr1DlcmiAddressLen OBJECT-TYPE
	SYNTAX	INTEGER {
		twobyte(2),
		threebyte(3),
		fourbyte(4)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This variable states the address length in octets. In the case
		   of Q922 format, the length indicates the entire length of the 
		   address includeding the control portion. "
	DEFVAL	{ twobyte }
	::= { wfFrDlcmiEntry 8 }

wfFr1DlcmiPollingInterval OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(5),
		default(10),
		maximum(30)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The number of seconds between successive status enquiry messages "
	DEFVAL	{ default }
	::= { wfFrDlcmiEntry 9 }

wfFr1DlcmiFullEnquiryInterval OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(6),
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The number of status enquiry intervals that pass before issuance
		   of a full status enquiry message. "
	DEFVAL	{ default }
	::= { wfFrDlcmiEntry 10 }

wfFr1DlcmiErrorThreshold OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This is the maximum number of unanswered Status Enquiries the
		  equipment shall accept before declaring the interface down. "
	DEFVAL	{ 3 }
	::= { wfFrDlcmiEntry 11 }

wfFr1DlcmiMonitoredEvents OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the number of status polling intervals over
		   which the error threshold is counted.  For example, if 
		   within 'MonitoredEvents' number of events the station
		   receives 'ErrorThreshold' number of errors, the 
		   interface is marked as down. "
	DEFVAL	{ 4 }
	::= { wfFrDlcmiEntry 12 }

wfFr1DlcmiMaxSupportedVCs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The maximum number of Virtual Circuits allowed for
		   this interface.  Usually dictated by the Frame Relay
		   network. The system sets this initially. "
	::= { wfFrDlcmiEntry 13 }

wfFr1DlcmiMulticast OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This indicates whether the frame relay provider offers a multicast "
	DEFVAL	{ disabled }
	::= { wfFrDlcmiEntry 14 }

wfFr1DlcmiSeqCount OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(255)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This station's sequence counter. It represents the next
		   value to send. "
	DEFVAL	{ minimum }
	::= { wfFrDlcmiEntry 15 }

wfFr1DlcmiLastReceived OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(255)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The sequence number just received from the switch. "
	DEFVAL	{ minimum }
	::= { wfFrDlcmiEntry 16 }

wfFr1DlcmiPassiveSeqCount OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(255)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This station's sequence counter for answering status enquiry. "
	DEFVAL	{ minimum }
	::= { wfFrDlcmiEntry 17 }

wfFr1DlcmiPassiveReceived OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(255)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The sequence number just received from the enquring station. "
	DEFVAL	{ minimum }
	::= { wfFrDlcmiEntry 18 }

wfFr1DlcmiPolls OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the counter of where we are in the polling cycle. "
	::= { wfFrDlcmiEntry 19 }

wfFr1DlcmiAlarmTimer OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is a counter of 1/2 second timeouts. When it reaches
		   2 x the polling interval, an enquiry message is sent. "
	::= { wfFrDlcmiEntry 20 }

wfFr1ErrType OBJECT-TYPE
	SYNTAX	INTEGER {
		unknown(1),
		short(2),
		long(3),
		illegaldlci(4),
		unknowndlci(5),
		protoerr(6),
		unknownie(7),
		sequenceerr(8),
		unknownrpt(9),
		reset(10),
		cntrl(11)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicate the type of the last specific monitored error. "
	::= { wfFrDlcmiEntry 21 }

wfFr1ErrData OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Contains as much of the error packet as possible. "
	::= { wfFrDlcmiEntry 22 }

wfFr1ErrTime OBJECT-TYPE
	SYNTAX	TimeTicks
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The time the last error occurred. "
	::= { wfFrDlcmiEntry 23 }

wfFr1ErrDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of inbound frames dropped because of format or other
		   errors or because the VC was not known. "
	::= { wfFrDlcmiEntry 24 }

wfFr1ErrDrops OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of outbound frames dropped. Usually this is due the
		   specified DLCI being unknown or a broadcast packet is too long  "
	::= { wfFrDlcmiEntry 25 }

wfFrCircuitTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFrCircuitEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Frame Relay Circuit table gives information about a virtual circuits. "
	::= { wfFrameRelayGroup 2 }

wfFrCircuitEntry OBJECT-TYPE
	SYNTAX	WfFrCircuitEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Frame Relay Circuit table. "
	INDEX	{ wfFr1CircuitNumber,
		wfFr1CircuitDlci }
	::= { wfFrCircuitTable 1 }

WfFrCircuitEntry ::= SEQUENCE {
	wfFr1CircuitDelete
		INTEGER,
	wfFr1CircuitNumber
		INTEGER,
	wfFr1CircuitDlci
		INTEGER,
	wfFr1CircuitState
		INTEGER,
	wfFr1CircuitStateSet
		INTEGER,
	wfFr1CircuitReceivedFECNs
		Counter,
	wfFr1CircuitReceivedBECNs
		Counter,
	wfFr1CircuitSentFrames
		Counter,
	wfFr1CircuitSentOctets
		Counter,
	wfFr1CircuitReceivedFrames
		Counter,
	wfFr1CircuitReceivedOctets
		Counter,
	wfFr1CircuitCreationTime
		TimeTicks,
	wfFr1CircuitLastTimeChange
		TimeTicks,
	wfFr1CircuitCommittedBurst
		INTEGER,
	wfFr1CircuitExcessBurst
		INTEGER,
	wfFr1CircuitThroughput
		INTEGER,
	wfFr1CircuitMulticast
		INTEGER,
	wfFr1CircuitDiscards
		Counter,
	wfFr1CircuitDrops
		Counter,
	wfFr1CircuitSubCct
		INTEGER,
	wfFr1CircuitMode
		INTEGER
}

wfFr1CircuitDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2),
		system(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indication to delete this frame relay interface. "
	DEFVAL	{ created }
	::= { wfFrCircuitEntry 1 }

wfFr1CircuitNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier.  The circuit number of this interface. "
	::= { wfFrCircuitEntry 2 }

wfFr1CircuitDlci OBJECT-TYPE
	SYNTAX	INTEGER {
		twobyteminimum(16),
		twobytemaximum(1007),
		threebyteminimum(1024),
		threebytemaximum(64511),
		fourbyteminimum(131072),
		fourbytemaximum(8257535)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier.  This indicates which virtual circuit. "
	::= { wfFrCircuitEntry 3 }

wfFr1CircuitState OBJECT-TYPE
	SYNTAX	INTEGER {
		invalid(1),
		active(2),
		inactive(3),
		xoff(4),
		control(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the state of the particular virtual circuit. "
	DEFVAL	{ invalid }
	::= { wfFrCircuitEntry 4 }

wfFr1CircuitStateSet OBJECT-TYPE
	SYNTAX	INTEGER {
		invalid(1),
		active(2),
		inactive(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" User access for setting the state of a virtual circuit "
	DEFVAL	{ invalid }
	::= { wfFrCircuitEntry 5 }

wfFr1CircuitReceivedFECNs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames received indicating forward congestion. "
	::= { wfFrCircuitEntry 6 }

wfFr1CircuitReceivedBECNs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames received indicating backward congestion. "
	::= { wfFrCircuitEntry 7 }

wfFr1CircuitSentFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of frames sent from this virtual circuit. "
	::= { wfFrCircuitEntry 8 }

wfFr1CircuitSentOctets OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of octets sent from this virtual circuit. "
	::= { wfFrCircuitEntry 9 }

wfFr1CircuitReceivedFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of frames received from this virtual circuit.  "
	::= { wfFrCircuitEntry 10 }

wfFr1CircuitReceivedOctets OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of octets received from this virtual circuit. "
	::= { wfFrCircuitEntry 11 }

wfFr1CircuitCreationTime OBJECT-TYPE
	SYNTAX	TimeTicks
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The value of sysUpTime when the vc was created. "
	::= { wfFrCircuitEntry 12 }

wfFr1CircuitLastTimeChange OBJECT-TYPE
	SYNTAX	TimeTicks
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The value of sysUpTime when last there was a change in vc state. "
	::= { wfFrCircuitEntry 13 }

wfFr1CircuitCommittedBurst OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates the maximum amount of data, in bits, that the network
		   agrees to transfer under normal conditions, during the measurement
		   interval.  Wellfleet does not presently support this. "
	::= { wfFrCircuitEntry 14 }

wfFr1CircuitExcessBurst OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates teh maximum amount of uncommitted data bits that the network
		   will attempt to deliver over the measurement interval.  Wellfleet
		   does not presently support this.  "
	::= { wfFrCircuitEntry 15 }

wfFr1CircuitThroughput OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the average number of 'Frame Relay Information Field'
		   bits transferred per second across a user network interface in one
		   direction, measured over the measurement interval.  Wellfleet
		   does not presently support this.  "
	::= { wfFrCircuitEntry 16 }

wfFr1CircuitMulticast OBJECT-TYPE
	SYNTAX	INTEGER {
		multicast(1),
		unicast(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates whether this DLCI is used for multicast or single destination. "
	DEFVAL	{ unicast }
	::= { wfFrCircuitEntry 17 }

wfFr1CircuitDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of inbound frames discarded because of format errors,
		   because the VC is inactive or because the protocol was not registered
		   for this circuit.  "
	::= { wfFrCircuitEntry 18 }

wfFr1CircuitDrops OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates how many outbound frames were dropped. Usually these are
		   dropped because the VC is not active.  "
	::= { wfFrCircuitEntry 19 }

wfFr1CircuitSubCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Circuit number to use for this VC when configured in hybrid
		   (for bridging) or direct access (VC as a circuit) mode. "
	::= { wfFrCircuitEntry 20 }

wfFr1CircuitMode OBJECT-TYPE
	SYNTAX	INTEGER {
		group(1),
		hybrid(2),
		direct(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The mode of the given VC.
		 GROUP - treats the VC as one of many vc's on a circuit.
		 HYBRID - treats the VC as one of many vc's on a circuit for
		   protocol traffic, but as a separate circuit for bridging.
		 DIRECT - treats the VC as a separate circuit for all applications. "
	DEFVAL	{ group }
	::= { wfFrCircuitEntry 21 }

wfFrIfDlcmiTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFrIfDlcmiEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The Parameters for the Data Link Connection Management Interface "
	::= { wfFrameRelay2Group 1 }

wfFrIfDlcmiEntry OBJECT-TYPE
	SYNTAX	WfFrIfDlcmiEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The parameters for a particular Data Link Connection Management Interface"
	INDEX	{ wfFrDlcmiLineNumber,
		wfFrDlcmiLLIndex }
	::= { wfFrIfDlcmiTable 1 }

WfFrIfDlcmiEntry ::= SEQUENCE {
	wfFrDlcmiDelete
		INTEGER,
	wfFrDlcmiDisable
		INTEGER,
	wfFrDlcmiLineNumber
		INTEGER,
	wfFrDlcmiLLIndex
		INTEGER,
	wfFrDlcmiCircuit
		INTEGER,
	wfFrDlcmiManagementType
		INTEGER,
	wfFrDlcmiStatus
		INTEGER,
	wfFrDlcmiAddress
		INTEGER,
	wfFrDlcmiAddressLen
		INTEGER,
	wfFrDlcmiPollingInterval
		INTEGER,
	wfFrDlcmiFullEnquiryInterval
		INTEGER,
	wfFrDlcmiErrorThreshold
		INTEGER,
	wfFrDlcmiMonitoredEvents
		INTEGER,
	wfFrDlcmiMaxSupportedVCs
		INTEGER,
	wfFrDlcmiVCsConfigured
		INTEGER,
	wfFrDlcmiMulticast
		INTEGER,
	wfFrDlcmiSeqCount
		INTEGER,
	wfFrDlcmiLastReceived
		INTEGER,
	wfFrDlcmiPassiveSeqCount
		INTEGER,
	wfFrDlcmiPassiveReceived
		INTEGER,
	wfFrDlcmiPolls
		INTEGER,
	wfFrDlcmiCongestionDisable
		INTEGER,
	wfFrDlcmiCongestionTmr
		INTEGER,
	wfFrDlcmiCongestionCtr
		INTEGER,
	wfFrErrType
		INTEGER,
	wfFrErrData
		OCTET STRING,
	wfFrErrTime
		TimeTicks,
	wfFrErrDiscards
		Counter,
	wfFrErrDrops
		Counter,
	wfFrErrFaults
		Counter,
	wfFrErrFaultTime
		TimeTicks
}

wfFrDlcmiDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indication to delete this frame relay interface "
	DEFVAL	{ created }
	::= { wfFrIfDlcmiEntry 1 }

wfFrDlcmiDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates when a dlcmi entry is to be enabled or disabled. "
	DEFVAL	{ enabled }
	::= { wfFrIfDlcmiEntry 2 }

wfFrDlcmiLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The line number on which this frame relay interface resides.
		   This is the first of two instance identifiers. "
	::= { wfFrIfDlcmiEntry 3 }

wfFrDlcmiLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Lower layer index uniquely identifies the lower layer in
		   cases where the lower layer may be something other than the
		   physical layer.  For example if Frame Relay is running over
		   an ATM VC, the LLIndex identifies the ATM VC. "
	::= { wfFrIfDlcmiEntry 4 }

wfFrDlcmiCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The circuit number of this entry"
	::= { wfFrIfDlcmiEntry 5 }

wfFrDlcmiManagementType OBJECT-TYPE
	SYNTAX	INTEGER {
		none(1),
		lmi(2),
		t1617d(3),
		t1617b(4),
		annexa(5),
		lmiswitch(6),
		annexdswitch(7),
		annexaswitch(8)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This variable indicates which Data Link Connection Management
		   scheme is active (and by implication, what DLCI it uses).  "
	DEFVAL	{ t1617d }
	::= { wfFrIfDlcmiEntry 6 }

wfFrDlcmiStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		running(1),
		fault(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the state of the interface. It is called status
		   because this is what it was called in the rfc.
		 FR_STATUS_RUNNING is the sate after the circuit is up (either LMI 
		  successful or there is no DLCMI and the system just comes up).
		 FR_STATUS_FAULT is a transient state indicating that errors have 
		  caused the circuit to be disabled until DLCMI recovery.
		 FR_STATUS_INITIALIZING is a transient state indicating that
		  the interface is trying to come up.
		 FR_STATUS_NOTPRESENT indicates that the interface is not present.
		  Likely this will never be seen except upon initial
		  configuration.
		"
	DEFVAL	{ notpresent }
	::= { wfFrIfDlcmiEntry 7 }

wfFrDlcmiAddress OBJECT-TYPE
	SYNTAX	INTEGER {
		q921(1),
		q922march90(2),
		q922november90(3),
		q922(4)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This states which address format is in use on the FR interface.
		   The default is Q922 "
	DEFVAL	{ q922 }
	::= { wfFrIfDlcmiEntry 8 }

wfFrDlcmiAddressLen OBJECT-TYPE
	SYNTAX	INTEGER {
		twobyte(2),
		threebyte(3),
		fourbyte(4)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This variable states the address length in octets. In the case
		   of Q922 format, the length indicates the entire length of the 
		   address includeding the control portion. "
	DEFVAL	{ twobyte }
	::= { wfFrIfDlcmiEntry 9 }

wfFrDlcmiPollingInterval OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(5),
		default(10),
		maximum(30)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The number of seconds between successive status enquiry messages "
	DEFVAL	{ default }
	::= { wfFrIfDlcmiEntry 10 }

wfFrDlcmiFullEnquiryInterval OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(6),
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The number of status enquiry intervals that pass before issuance
		   of a full status enquiry message. "
	DEFVAL	{ default }
	::= { wfFrIfDlcmiEntry 11 }

wfFrDlcmiErrorThreshold OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This is the maximum number of unanswered Status Enquiries the
		  equipment shall accept before declaring the interface down. "
	DEFVAL	{ 3 }
	::= { wfFrIfDlcmiEntry 12 }

wfFrDlcmiMonitoredEvents OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the number of status polling intervals over
		   which the error threshold is counted.  For example, if 
		   within 'MonitoredEvents' number of events the station
		   receives 'ErrorThreshold' number of errors, the 
		   interface is marked as down. "
	DEFVAL	{ 4 }
	::= { wfFrIfDlcmiEntry 13 }

wfFrDlcmiMaxSupportedVCs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The maximum number of Virtual Circuits allowed for
		   this interface.  Usually dictated by the Frame Relay
		   network. The system sets this initially. "
	::= { wfFrIfDlcmiEntry 14 }

wfFrDlcmiVCsConfigured OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of VCs that are presently configured on the
		   interface.  "
	::= { wfFrIfDlcmiEntry 15 }

wfFrDlcmiMulticast OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This indicates whether the frame relay provider offers a multicast "
	DEFVAL	{ disabled }
	::= { wfFrIfDlcmiEntry 16 }

wfFrDlcmiSeqCount OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(255)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This station's sequence counter. It represents the next
		   value to send. "
	DEFVAL	{ minimum }
	::= { wfFrIfDlcmiEntry 17 }

wfFrDlcmiLastReceived OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(255)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The sequence number just received from the switch. "
	DEFVAL	{ minimum }
	::= { wfFrIfDlcmiEntry 18 }

wfFrDlcmiPassiveSeqCount OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(255)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This station's sequence counter for answering status enquiry. "
	DEFVAL	{ minimum }
	::= { wfFrIfDlcmiEntry 19 }

wfFrDlcmiPassiveReceived OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(255)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The sequence number just received from the enquring station. "
	DEFVAL	{ minimum }
	::= { wfFrIfDlcmiEntry 20 }

wfFrDlcmiPolls OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the counter of where we are in the polling cycle. "
	::= { wfFrIfDlcmiEntry 21 }

wfFrDlcmiCongestionDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This indicates whether the VCs should use the congestion algorithm or
		   not.  Each VC may be configured to run the algorithm to override this
		   setting.  Those VCs which are configured via the DLCMI interface, will
		   use this setting as their default. "
	DEFVAL	{ disabled }
	::= { wfFrIfDlcmiEntry 22 }

wfFrDlcmiCongestionTmr OBJECT-TYPE
	SYNTAX	INTEGER {
		half(1),
		one(2),
		oneandhalf(3),
		two(4),
		twoandhalf(5),
		three(6),
		threeandhalf(7),
		four(8),
		fourandhalf(9),
		five(10)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the time period over which congestion notifications are counted.
		   It is also the period during which the VC will cease sending information
		   before resuming transmission if no congestion notifications are received. 
		   The timer is kept in 1/2 second intervals."
	DEFVAL	{ one }
	::= { wfFrIfDlcmiEntry 23 }

wfFrDlcmiCongestionCtr OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(20),
		maximum(500)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This represents the number of congestion notifications, when received
		   within wfFrDlcmiCongestionTmr time, will result in the VC ceasing
		   transmissions. "
	DEFVAL	{ default }
	::= { wfFrIfDlcmiEntry 24 }

wfFrErrType OBJECT-TYPE
	SYNTAX	INTEGER {
		unknown(1),
		short(2),
		long(3),
		illegaldlci(4),
		unknowndlci(5),
		protoerr(6),
		unknownie(7),
		sequenceerr(8),
		unknownrpt(9),
		reset(10),
		cntrl(11)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicate the type of the last specific monitored error. "
	::= { wfFrIfDlcmiEntry 25 }

wfFrErrData OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Contains as much of the error packet as possible. "
	::= { wfFrIfDlcmiEntry 26 }

wfFrErrTime OBJECT-TYPE
	SYNTAX	TimeTicks
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The time the last error occurred. "
	::= { wfFrIfDlcmiEntry 27 }

wfFrErrDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of inbound frames dropped because of format or other
		   errors or because the VC was not known. "
	::= { wfFrIfDlcmiEntry 28 }

wfFrErrDrops OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of outbound frames dropped. Usually this is due the
		   specified DLCI being unknown or a broadcast packet is too long  "
	::= { wfFrIfDlcmiEntry 29 }

wfFrErrFaults OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times that the Interface has come down due
		   to errors since the system started.  The value is reset when
		   a restart parameter is modified. "
	::= { wfFrIfDlcmiEntry 30 }

wfFrErrFaultTime OBJECT-TYPE
	SYNTAX	TimeTicks
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The time at which the interface last went down. "
	::= { wfFrIfDlcmiEntry 31 }

wfFrVCircuitTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFrVCircuitEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Frame Relay Circuit table gives information about a virtual circuits. "
	::= { wfFrameRelay2Group 2 }

wfFrVCircuitEntry OBJECT-TYPE
	SYNTAX	WfFrVCircuitEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Frame Relay Circuit table. "
	INDEX	{ wfFrCircuitLineNumber,
		wfFrCircuitLLIndex,
		wfFrCircuitDlci }
	::= { wfFrVCircuitTable 1 }

WfFrVCircuitEntry ::= SEQUENCE {
	wfFrCircuitDelete
		INTEGER,
	wfFrCircuitLineNumber
		INTEGER,
	wfFrCircuitLLIndex
		INTEGER,
	wfFrCircuitNumber
		INTEGER,
	wfFrCircuitDlci
		INTEGER,
	wfFrCircuitState
		INTEGER,
	wfFrCircuitStateSet
		INTEGER,
	wfFrCircuitReceivedFECNs
		Counter,
	wfFrCircuitReceivedBECNs
		Counter,
	wfFrCircuitSentFrames
		Counter,
	wfFrCircuitSentOctets
		Counter,
	wfFrCircuitReceivedFrames
		Counter,
	wfFrCircuitReceivedOctets
		Counter,
	wfFrCircuitCreationTime
		TimeTicks,
	wfFrCircuitLastTimeChange
		TimeTicks,
	wfFrCircuitCommittedBurst
		INTEGER,
	wfFrCircuitExcessBurst
		INTEGER,
	wfFrCircuitThroughput
		INTEGER,
	wfFrCircuitMulticast
		INTEGER,
	wfFrCircuitType
		INTEGER,
	wfFrCircuitDiscards
		Counter,
	wfFrCircuitDrops
		Counter,
	wfFrCircuitSubCct
		INTEGER,
	wfFrCircuitMode
		INTEGER,
	wfFrCircuitCongestionDisable
		INTEGER,
	wfFrCircuitCongestionState
		INTEGER,
	wfFrCircuitCongestionTmr
		INTEGER,
	wfFrCircuitCongestionCtr
		INTEGER
}

wfFrCircuitDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indication to delete this frame relay interface. "
	DEFVAL	{ created }
	::= { wfFrVCircuitEntry 1 }

wfFrCircuitLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This is the line number on which the associated Frame
		   Relay interface resides. "
	::= { wfFrVCircuitEntry 2 }

wfFrCircuitLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Lower layer index uniquely identifies the lower layer in
		   cases where the lower layer may be something other than the
		   physical layer.  For example if Frame Relay is running over
		   an ATM VC, the LLIndex identifies the ATM VC. "
	::= { wfFrVCircuitEntry 3 }

wfFrCircuitNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The circuit number of this interface. "
	::= { wfFrVCircuitEntry 4 }

wfFrCircuitDlci OBJECT-TYPE
	SYNTAX	INTEGER {
		twobyteminimum(16),
		twobytemaximum(1007),
		threebyteminimum(1024),
		threebytemaximum(64511),
		fourbyteminimum(131072),
		fourbytemaximum(8257535)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" One of three instance identifier. This is the Frame Relay 'address'
		   of the virtual circuit. "
	::= { wfFrVCircuitEntry 5 }

wfFrCircuitState OBJECT-TYPE
	SYNTAX	INTEGER {
		invalid(1),
		active(2),
		inactive(3),
		xoff(4),
		control(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the state of the particular virtual circuit. "
	DEFVAL	{ invalid }
	::= { wfFrVCircuitEntry 6 }

wfFrCircuitStateSet OBJECT-TYPE
	SYNTAX	INTEGER {
		invalid(1),
		active(2),
		inactive(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" User access for setting the state of a virtual circuit "
	DEFVAL	{ invalid }
	::= { wfFrVCircuitEntry 7 }

wfFrCircuitReceivedFECNs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames received indicating forward congestion. "
	::= { wfFrVCircuitEntry 8 }

wfFrCircuitReceivedBECNs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames received indicating backward congestion. "
	::= { wfFrVCircuitEntry 9 }

wfFrCircuitSentFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of frames sent from this virtual circuit. "
	::= { wfFrVCircuitEntry 10 }

wfFrCircuitSentOctets OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of octets sent from this virtual circuit. "
	::= { wfFrVCircuitEntry 11 }

wfFrCircuitReceivedFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of frames received from this virtual circuit.  "
	::= { wfFrVCircuitEntry 12 }

wfFrCircuitReceivedOctets OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of octets received from this virtual circuit. "
	::= { wfFrVCircuitEntry 13 }

wfFrCircuitCreationTime OBJECT-TYPE
	SYNTAX	TimeTicks
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The value of sysUpTime when the vc was created. "
	::= { wfFrVCircuitEntry 14 }

wfFrCircuitLastTimeChange OBJECT-TYPE
	SYNTAX	TimeTicks
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The value of sysUpTime when last there was a change in vc state. "
	::= { wfFrVCircuitEntry 15 }

wfFrCircuitCommittedBurst OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates the maximum amount of data, in bits, that the network
		   agrees to transfer under normal conditions, during the measurement
		   interval.  Wellfleet does not presently support this. "
	::= { wfFrVCircuitEntry 16 }

wfFrCircuitExcessBurst OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates teh maximum amount of uncommitted data bits that the network
		   will attempt to deliver over the measurement interval.  Wellfleet
		   does not presently support this.  "
	::= { wfFrVCircuitEntry 17 }

wfFrCircuitThroughput OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the average number of 'Frame Relay Information Field'
		   bits transferred per second across a user network interface in one
		   direction, measured over the measurement interval.  Wellfleet
		   does not presently support this.  "
	::= { wfFrVCircuitEntry 18 }

wfFrCircuitMulticast OBJECT-TYPE
	SYNTAX	INTEGER {
		unicast(1),
		multicast(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates whether this DLCI is used for multicast or single destination. "
	DEFVAL	{ unicast }
	::= { wfFrVCircuitEntry 19 }

wfFrCircuitType OBJECT-TYPE
	SYNTAX	INTEGER {
		static(1),
		dynamic(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indication of whether the VC was manually created (static),
		   or dynamically created (dynamic) via the data link control
		   management interface. "
	DEFVAL	{ static }
	::= { wfFrVCircuitEntry 20 }

wfFrCircuitDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of inbound frames discarded because of format errors,
		   because the VC is inactive or because the protocol was not registered
		   for this circuit.  "
	::= { wfFrVCircuitEntry 21 }

wfFrCircuitDrops OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates how many outbound frames were dropped. Usually these are
		   dropped because the VC is not active.  "
	::= { wfFrVCircuitEntry 22 }

wfFrCircuitSubCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Circuit number to use for this VC when configured in hybrid
		   (for bridging) or direct access (VC as a circuit) mode. "
	::= { wfFrVCircuitEntry 23 }

wfFrCircuitMode OBJECT-TYPE
	SYNTAX	INTEGER {
		group(1),
		hybrid(2),
		direct(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The mode of the given VC.
		 GROUP - treats the VC as one of many vc's on a circuit.
		 HYBRID - treats the VC as one of many vc's on a circuit for
		   protocol traffic, but as a separate circuit for bridging.
		 DIRECT - treats the VC as a separate circuit for all applications. "
	DEFVAL	{ group }
	::= { wfFrVCircuitEntry 24 }

wfFrCircuitCongestionDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2),
		inherit(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This indicates whether the congestion algorithm should be used
		   for this VC.  If this is not set, the value is inherited from the
		   DLCMI record. "
	DEFVAL	{ inherit }
	::= { wfFrVCircuitEntry 25 }

wfFrCircuitCongestionState OBJECT-TYPE
	SYNTAX	INTEGER {
		forwarding(1),
		congested(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is used to indicate whether or not the VC is in a congested
		   state.  If it is, no traffic will be sent on this VC. "
	DEFVAL	{ forwarding }
	::= { wfFrVCircuitEntry 26 }

wfFrCircuitCongestionTmr OBJECT-TYPE
	SYNTAX	INTEGER {
		half(1),
		one(2),
		oneandhalf(3),
		two(4),
		twoandhalf(5),
		three(6),
		threeandhalf(7),
		four(8),
		fourandhalf(9),
		five(10)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the time period over which congestion notifications are
		   counted.  It is also the period during which the VC will cease
		   sending information before resuming transmission if no 
		   congestion notifications are received. "
	DEFVAL	{ one }
	::= { wfFrVCircuitEntry 27 }

wfFrCircuitCongestionCtr OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(20),
		maximum(500)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This represents the number of congestion notifications, when
		   received within wfFrCircuitCongestionTmr time, that will result 
		   in the VC ceasing transmissions. "
	DEFVAL	{ default }
	::= { wfFrVCircuitEntry 28 }

wfFrCircuitErrorTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFrCctErrorEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Frame Relay error by circuit (true circuit) table contains
		   count of dropped and discarded frames on a per circuit
		   basis. "
	::= { wfFrameRelay2Group 4 }

wfFrCctErrorEntry OBJECT-TYPE
	SYNTAX	WfFrCctErrorEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Frame Relay Circuit Error table. "
	INDEX	{ wfFrCctErrorCct }
	::= { wfFrCircuitErrorTable 1 }

WfFrCctErrorEntry ::= SEQUENCE {
	wfFrCctErrorCct
		INTEGER,
	wfFrCctErrorDrops
		Counter,
	wfFrCctErrorDiscards
		Counter
}

wfFrCctErrorCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance Identifier - indicates the frame relay circuit number "
	::= { wfFrCctErrorEntry 1 }

wfFrCctErrorDrops OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the number of frames that were dropped at the
		   circuit level.  Generally this is because the particular
		   protocol (within the inbound frame) was not registered
		   for this circuit. "
	::= { wfFrCctErrorEntry 2 }

wfFrCctErrorDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the number of frames that were discarded at the
		   circuit level.  Generally this is because the outbound
		   frame was too long, or too short. "
	::= { wfFrCctErrorEntry 3 }

wfKernelTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfKernelEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Table of kernel statistics, indexed by slot number "
	::= { wfGameGroup 1 }

wfKernelEntry OBJECT-TYPE
	SYNTAX	WfKernelEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A particular interface "
	INDEX	{ wfKernelSlot }
	::= { wfKernelTable 1 }

WfKernelEntry ::= SEQUENCE {
	wfKernelSlot
		INTEGER,
	wfKernelMemorySize
		INTEGER,
	wfKernelMemoryFree
		INTEGER,
	wfKernelMemorySegsTotal
		INTEGER,
	wfKernelMemorySegsFree
		INTEGER,
	wfKernelMemoryMaxSegFree
		INTEGER,
	wfKernelBuffersTotal
		INTEGER,
	wfKernelBuffersFree
		INTEGER,
	wfKernelTasksTotal
		INTEGER,
	wfKernelTasksInQueue
		INTEGER,
	wfKernelTimersTotal
		INTEGER,
	wfKernelTimersActive
		INTEGER,
	wfKernelBufOwnerTask1
		DisplayString,
	wfKernelBufOwnerTask1Bufs
		INTEGER,
	wfKernelBufOwnerTask2
		DisplayString,
	wfKernelBufOwnerTask2Bufs
		INTEGER,
	wfKernelBufOwnerTask3
		DisplayString,
	wfKernelBufOwnerTask3Bufs
		INTEGER,
	wfKernelBufOwnerTask4
		DisplayString,
	wfKernelBufOwnerTask4Bufs
		INTEGER,
	wfKernelBufOwnerTask5
		DisplayString,
	wfKernelBufOwnerTask5Bufs
		INTEGER,
	wfKernelBufOwnerTask6
		DisplayString,
	wfKernelBufOwnerTask6Bufs
		INTEGER,
	wfKernelBufOwnerTask7
		DisplayString,
	wfKernelBufOwnerTask7Bufs
		INTEGER,
	wfKernelBufOwnerTask8
		DisplayString,
	wfKernelBufOwnerTask8Bufs
		INTEGER,
	wfKernelBufOwnerTask9
		DisplayString,
	wfKernelBufOwnerTask9Bufs
		INTEGER,
	wfKernelBufOwnerTask10
		DisplayString,
	wfKernelBufOwnerTask10Bufs
		INTEGER,
	wfKernelMemOwnerTask1
		DisplayString,
	wfKernelMemOwnerTask1Size
		INTEGER,
	wfKernelMemOwnerTask2
		DisplayString,
	wfKernelMemOwnerTask2Size
		INTEGER,
	wfKernelMemOwnerTask3
		DisplayString,
	wfKernelMemOwnerTask3Size
		INTEGER,
	wfKernelMemOwnerTask4
		DisplayString,
	wfKernelMemOwnerTask4Size
		INTEGER,
	wfKernelMemOwnerTask5
		DisplayString,
	wfKernelMemOwnerTask5Size
		INTEGER,
	wfKernelMemOwnerTask6
		DisplayString,
	wfKernelMemOwnerTask6Size
		INTEGER,
	wfKernelMemOwnerTask7
		DisplayString,
	wfKernelMemOwnerTask7Size
		INTEGER,
	wfKernelMemOwnerTask8
		DisplayString,
	wfKernelMemOwnerTask8Size
		INTEGER,
	wfKernelMemOwnerTask9
		DisplayString,
	wfKernelMemOwnerTask9Size
		INTEGER,
	wfKernelMemOwnerTask10
		DisplayString,
	wfKernelMemOwnerTask10Size
		INTEGER
}

wfKernelSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The slot number indexes the kernel statistics table "
	::= { wfKernelEntry 1 }

wfKernelMemorySize OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total size of allocatable memory, in bytes "
	::= { wfKernelEntry 2 }

wfKernelMemoryFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The amount of memory which hasn't been allocated yet, in bytes "
	::= { wfKernelEntry 3 }

wfKernelMemorySegsTotal OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of memory segments in the kernel "
	::= { wfKernelEntry 4 }

wfKernelMemorySegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated memory segments in the kernel "
	::= { wfKernelEntry 5 }

wfKernelMemoryMaxSegFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size of the largest unallocated memory segment "
	::= { wfKernelEntry 6 }

wfKernelBuffersTotal OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of packet buffers "
	::= { wfKernelEntry 7 }

wfKernelBuffersFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of packet buffers in the free pool "
	::= { wfKernelEntry 8 }

wfKernelTasksTotal OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of tasks running "
	::= { wfKernelEntry 9 }

wfKernelTasksInQueue OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of tasks awaiting scheduling "
	::= { wfKernelEntry 10 }

wfKernelTimersTotal OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of timers available "
	::= { wfKernelEntry 11 }

wfKernelTimersActive OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of timers in use by tasks "
	::= { wfKernelEntry 12 }

wfKernelBufOwnerTask1 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns many buffers "
	::= { wfKernelEntry 13 }

wfKernelBufOwnerTask1Bufs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of buffers owned by the task "
	::= { wfKernelEntry 14 }

wfKernelBufOwnerTask2 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns many buffers "
	::= { wfKernelEntry 15 }

wfKernelBufOwnerTask2Bufs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of buffers owned by the task "
	::= { wfKernelEntry 16 }

wfKernelBufOwnerTask3 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns many buffers "
	::= { wfKernelEntry 17 }

wfKernelBufOwnerTask3Bufs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of buffers owned by the task "
	::= { wfKernelEntry 18 }

wfKernelBufOwnerTask4 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns many buffers "
	::= { wfKernelEntry 19 }

wfKernelBufOwnerTask4Bufs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of buffers owned by the task "
	::= { wfKernelEntry 20 }

wfKernelBufOwnerTask5 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns many buffers "
	::= { wfKernelEntry 21 }

wfKernelBufOwnerTask5Bufs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of buffers owned by the task "
	::= { wfKernelEntry 22 }

wfKernelBufOwnerTask6 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns many buffers "
	::= { wfKernelEntry 23 }

wfKernelBufOwnerTask6Bufs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of buffers owned by the task "
	::= { wfKernelEntry 24 }

wfKernelBufOwnerTask7 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns many buffers "
	::= { wfKernelEntry 25 }

wfKernelBufOwnerTask7Bufs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of buffers owned by the task "
	::= { wfKernelEntry 26 }

wfKernelBufOwnerTask8 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns many buffers "
	::= { wfKernelEntry 27 }

wfKernelBufOwnerTask8Bufs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of buffers owned by the task "
	::= { wfKernelEntry 28 }

wfKernelBufOwnerTask9 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns many buffers "
	::= { wfKernelEntry 29 }

wfKernelBufOwnerTask9Bufs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of buffers owned by the task "
	::= { wfKernelEntry 30 }

wfKernelBufOwnerTask10 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns many buffers "
	::= { wfKernelEntry 31 }

wfKernelBufOwnerTask10Bufs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of buffers owned by the task "
	::= { wfKernelEntry 32 }

wfKernelMemOwnerTask1 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns a sizable amount of memory "
	::= { wfKernelEntry 33 }

wfKernelMemOwnerTask1Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Amount of memory owned by the task "
	::= { wfKernelEntry 34 }

wfKernelMemOwnerTask2 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns a sizable amount of memory "
	::= { wfKernelEntry 35 }

wfKernelMemOwnerTask2Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Amount of memory owned by the task "
	::= { wfKernelEntry 36 }

wfKernelMemOwnerTask3 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns a sizable amount of memory "
	::= { wfKernelEntry 37 }

wfKernelMemOwnerTask3Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Amount of memory owned by the task "
	::= { wfKernelEntry 38 }

wfKernelMemOwnerTask4 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns a sizable amount of memory "
	::= { wfKernelEntry 39 }

wfKernelMemOwnerTask4Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Amount of memory owned by the task "
	::= { wfKernelEntry 40 }

wfKernelMemOwnerTask5 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns a sizable amount of memory "
	::= { wfKernelEntry 41 }

wfKernelMemOwnerTask5Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Amount of memory owned by the task "
	::= { wfKernelEntry 42 }

wfKernelMemOwnerTask6 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns a sizable amount of memory "
	::= { wfKernelEntry 43 }

wfKernelMemOwnerTask6Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Amount of memory owned by the task "
	::= { wfKernelEntry 44 }

wfKernelMemOwnerTask7 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns a sizable amount of memory "
	::= { wfKernelEntry 45 }

wfKernelMemOwnerTask7Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Amount of memory owned by the task "
	::= { wfKernelEntry 46 }

wfKernelMemOwnerTask8 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns a sizable amount of memory "
	::= { wfKernelEntry 47 }

wfKernelMemOwnerTask8Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Amount of memory owned by the task "
	::= { wfKernelEntry 48 }

wfKernelMemOwnerTask9 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns a sizable amount of memory "
	::= { wfKernelEntry 49 }

wfKernelMemOwnerTask9Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Amount of memory owned by the task "
	::= { wfKernelEntry 50 }

wfKernelMemOwnerTask10 OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Activation address of task which owns a sizable amount of memory "
	::= { wfKernelEntry 51 }

wfKernelMemOwnerTask10Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Amount of memory owned by the task "
	::= { wfKernelEntry 52 }

wfKernParamTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfKernParamEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Table of kernel parameter records, indexed by slot number "
	::= { wfGameGroup 2 }

wfKernParamEntry OBJECT-TYPE
	SYNTAX	WfKernParamEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A particular interface "
	INDEX	{ wfKernParamSlot }
	::= { wfKernParamTable 1 }

WfKernParamEntry ::= SEQUENCE {
	wfKernParamSlot
		INTEGER,
	wfKernParamTotMem
		INTEGER,
	wfKernParamLocMem
		INTEGER,
	wfKernParamGlobMem
		INTEGER
}

wfKernParamSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The slot number indexes the kernel parameter table "
	::= { wfKernParamEntry 1 }

wfKernParamTotMem OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The size of total Physical memory in Kbytes "
	::= { wfKernParamEntry 2 }

wfKernParamLocMem OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The size of Local memory in Kbytes "
	::= { wfKernParamEntry 3 }

wfKernParamGlobMem OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The size of Global memory in Kbytes "
	::= { wfKernParamEntry 4 }

wfKernCfgParamTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfKernCfgParamEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Table of kernel configurable parameter records, indexed by slot number "
	::= { wfGameGroup 3 }

wfKernCfgParamEntry OBJECT-TYPE
	SYNTAX	WfKernCfgParamEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A particular interface "
	INDEX	{ wfKernCfgParamSlot }
	::= { wfKernCfgParamTable 1 }

WfKernCfgParamEntry ::= SEQUENCE {
	wfKernCfgParamDelete
		INTEGER,
	wfKernCfgParamSlot
		INTEGER,
	wfKernCfgParamStatus
		INTEGER,
	wfKernCfgParamLocMem
		INTEGER,
	wfKernCfgParamGlobMem
		INTEGER,
	wfKernCfgParamGlobMemReset
		INTEGER
}

wfKernCfgParamDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete a kernel configurable parameter record. "
	DEFVAL	{ created }
	::= { wfKernCfgParamEntry 1 }

wfKernCfgParamSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The slot number indexes the kernel configurable parameters record "
	::= { wfKernCfgParamEntry 2 }

wfKernCfgParamStatus OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Status of last kernel configurable parameter change request. "
	::= { wfKernCfgParamEntry 3 }

wfKernCfgParamLocMem OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The amount of configured local memory in Kbytes "
	::= { wfKernCfgParamEntry 4 }

wfKernCfgParamGlobMem OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The amount of configured global memory in kbytes "
	::= { wfKernCfgParamEntry 5 }

wfKernCfgParamGlobMemReset OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  Reset the slot back to the software default global memory size.
		  The software default value for global memory allocation will 
		  now be used on this slot for all memory configurations.
		"
	DEFVAL	{ off }
	::= { wfKernCfgParamEntry 6 }

wfHwBase	OBJECT IDENTIFIER ::= { wfHardwareConfig 1 }

wfHwBpIdOpt OBJECT-TYPE
	SYNTAX	INTEGER {
		acefn(1),
		aceln(2),
		acecn(3),
		afn(4),
		in(5),
		an(16),
		freln(16640),
		frecn(16896),
		frerbln(17152)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The BackPlane identification number.
		  "
	::= { wfHwBase 1 }

wfHwBpRev OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The revision level of the BackPlane. High byte is in upper 2 bytes.
		  "
	::= { wfHwBase 2 }

wfHwBpSerialNumber OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The serial number of the BackPlane.
		  "
	::= { wfHwBase 3 }

wfBCNPwrSupply1 OBJECT-TYPE
	SYNTAX	INTEGER {
		ok(1),
		fail(2),
		notpresent(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Status of BCN Hot-Swappable Power Supply 1
		  "
	DEFVAL	{ notpresent }
	::= { wfHwBase 4 }

wfBCNPwrSupply2 OBJECT-TYPE
	SYNTAX	INTEGER {
		ok(1),
		fail(2),
		notpresent(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Status of BCN Hot-Swappable Power Supply 2
		  "
	DEFVAL	{ notpresent }
	::= { wfHwBase 5 }

wfBCNPwrSupply3 OBJECT-TYPE
	SYNTAX	INTEGER {
		ok(1),
		fail(2),
		notpresent(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Status of BCN Hot-Swappable Power Supply 3
		  "
	DEFVAL	{ notpresent }
	::= { wfHwBase 6 }

wfBCNPwrSupply4 OBJECT-TYPE
	SYNTAX	INTEGER {
		ok(1),
		fail(2),
		notpresent(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Status of BCN Hot-Swappable Power Supply 4
		  "
	DEFVAL	{ notpresent }
	::= { wfHwBase 7 }

wfBCNFanStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		ok(1),
		fail(2),
		notpresent(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Status of BCN Fan Tray
		  "
	DEFVAL	{ notpresent }
	::= { wfHwBase 8 }

wfBCNTemperature OBJECT-TYPE
	SYNTAX	INTEGER {
		ok(1),
		caution(2),
		notpresent(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Status of BCN Temperature sensor
		  "
	DEFVAL	{ notpresent }
	::= { wfHwBase 9 }

wfHwTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfHwEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Hardware Table  - indexed by slot number "
	::= { wfHardwareConfig 2 }

wfHwEntry OBJECT-TYPE
	SYNTAX	WfHwEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Hardware specific information about a slot. "
	INDEX	{ wfHwSlot }
	::= { wfHwTable 1 }

WfHwEntry ::= SEQUENCE {
	wfHwSlot
		INTEGER,
	wfHwModIdOpt
		INTEGER,
	wfHwModRev
		OCTET STRING,
	wfHwModSerialNumber
		OCTET STRING,
	wfHwMotherBdIdOpt
		INTEGER,
	wfHwMotherBdRev
		OCTET STRING,
	wfHwMotherBdSerialNumber
		OCTET STRING,
	wfHwDaughterBdIdOpt
		INTEGER,
	wfHwDaughterBdRev
		OCTET STRING,
	wfHwDaughterBdSerialNumber
		OCTET STRING,
	wfHwBabyBdIdOpt
		INTEGER,
	wfHwBabyBdRev
		OCTET STRING,
	wfHwBabyBdSerialNumber
		OCTET STRING,
	wfHwDiagPromRev
		OCTET STRING,
	wfHwDiagPromDate
		DisplayString,
	wfHwDiagPromSource
		DisplayString,
	wfHwBootPromRev
		OCTET STRING,
	wfHwBootPromDate
		DisplayString,
	wfHwBootPromSource
		DisplayString,
	wfHwSparePromRev
		OCTET STRING,
	wfHwSparePromDate
		DisplayString,
	wfHwSparePromSource
		DisplayString,
	wfHwFileSysPresent
		INTEGER,
	wfHwFileSysPresent2
		INTEGER,
	wfHwConfigServer
		INTEGER,
	wfHwConfigFile
		DisplayString,
	wfHwConfigDateAndTime
		OCTET STRING
}

wfHwSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A unique value for each slot.
		  Its value ranges between 1 and 14.
		  There are products in this family that contain 1, 5, and 14 slots.
		  "
	::= { wfHwEntry 1 }

wfHwModIdOpt OBJECT-TYPE
	SYNTAX	INTEGER {
		enet1(1),
		enet2(8),
		sync1(16),
		sync1a(17),
		t11(24),
		dse1(32),
		dse1a(33),
		dst416(40),
		sst416a(41),
		dst4(42),
		sst4a(43),
		sst416(44),
		stok416(45),
		sst4(46),
		stok4(47),
		floppy(48),
		t12(56),
		t12a(57),
		st1(58),
		t156k(60),
		e1(61),
		st156k(62),
		se1(63),
		t12n(64),
		st1n(65),
		t156kn(66),
		st156kn(67),
		e1n(68),
		se1n(69),
		sync(80),
		sync2a(81),
		cmcfddi(88),
		iphfddi(89),
		dt(104),
		dsde1(112),
		dsde1a(113),
		enet(114),
		dse2(116),
		dse2a(117),
		sse(118),
		ssea(119),
		dsde10bt(120),
		enet3(132),
		dsde2(156),
		oldqenf(160),
		denf(161),
		qenf(162),
		qef(164),
		def(165),
		mct1(168),
		dtok(176),
		mce1(184),
		wffddi2m(192),
		wffddi1m(193),
		wffddi2s(194),
		wffddi1s(195),
		wffddi2mf(196),
		wffddi1mf(197),
		wffddi2sf(198),
		wffddi1sf(199),
		fmdset(200),
		fmdst(201),
		fmdse(202),
		fmsst(203),
		fmsse(204),
		fnsdse(208),
		fnsdsdt(216),
		fnsdst(217),
		dhssi(224),
		shssi(225),
		esafnf(232),
		esafdsenf(233),
		esafssenf(234),
		esafdenf(235),
		esaf(236),
		esafdse(237),
		esafsse(238),
		esafde(239),
		anseds(1024),
		ansedst(1025),
		ansedsh(1026),
		ansedsi(1027),
		ansedsti(1028),
		ansedshi(1029),
		ansets(1030),
		ansetst(1031),
		ansetsh(1032),
		andeds(1033),
		andedst(1034),
		andedsh(1035),
		ands(1036),
		andst(1037),
		andsti(1038),
		antst(1039),
		ansdseds(1040),
		ansdsedst(1041),
		ansdsedsh(1042),
		srml(8448)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The module identification number.
		 
		      Port Configurations
		  HWStat Name  Enet Sync Async Token Framer Fiber
		  ------ ------------ ------ ---- ----- ----- ------ -----
		     1 ENET-1  2 0 0 0 0 0
		     8 ENET-2  2 0 0 0 0 0
		 
		    16 SYNC-1  0 4 1 0 0 0
		    17 SYNC-1 [1] 0 4 1 0 0 0
		 
		    24 T1-1  0 2 1 0 2 0
		 
		    32 DSE-1  1 2 1 0 0 0
		    33 DSE-1  [1] 1 2 1 0 0 0
		 
		    40 DST-4/16 0 2 1 1 0 0
		    41 SST-4/16  [1] 0 1 1 1 0 0
		    42 DST-4  0 2 1 1 0 0
		    43 SST-4   [1] 0 1 1 1 0 0
		    44 SST-4/16 0 1 1 1 0 0
		    45 STOK-4/16 [3] 0 0 0 1 0 0
		    46 SST-4  0 1 1 1 0 0
		    47 STOK-4   [3] 0 0 0 1 0 0
		 
		    48 FLOPPY    0 0 0 0 0 0
		 
		    56 T1-2  0 2 1 0 2 0
		    57 T1-2  0 2 1 0 2 0
		    58 ST1  0 1 1 0 1 0
		    60 T1-56K  0 1 1 0 1 0
		    61 E1 [3] 0 2 0 0 2 0
		    62 ST1-56K  0 1 1 0 1 0
		    63 SE1 [3] 0 1 0 0 1 0
		 
		    64 T1-2n  0 2 1 0 2 0
		    65 ST1n  0 1 1 0 1 0
		    66 T1-56Kn  0 1 1 0 1 0
		    67 ST1-56Kn 0 1 1 0 1 0
		    68 E1n [3] 0 2 0 0 2 0
		    69 SE1n [3] 0 1 0 0 1 0
		    80 SYNC-2  0 4 1 0 0 0
		    81 SYNC-2  [1] 0 4 1 0 0 0
		 
		    88 CMC-FDDI    [6] 0 0 0 0 0 1
		    89 IPHASE-FDDI [6] 0 0 0 0 0 1
		 
		   104 DT  0 0 0 2 0 0
		 
		   112 DSDE-1  2 2 1 0 0 0
		   113 DSDE-1  [1] 2 2 1 0 0 0
		   114 ENET  2 0 0 0 0 0
		   116 DSE-2  1 2 1 0 0 0
		   117 DSE-2   [1] 1 2 1 0 0 0
		   118 SSE  1 1 1 0 0 0
		   119 SSE     [1] 1 1 1 0 0 0
		 
		       120    DSDE10BT        2       2       0       0       0       0
		 
		   132 ENET-3 [2] 2 0 0 0 0 0
		 
		   156 DSDE-2 [2] 2 2 1 0 0 0
		 
		   160 QE/NF  4 0 0 0 0 0
		   161 DE/NF [5] 2 0 0 0 0 0
		   162 QE/NF  4 0 0 0 0 0
		   164 QE/F [4] 4 0 0 0 0 0
		   165 DE/F [4,5] 2 0 0 0 0 0
		 
		       168    MCT1            0    2 Munich   0       0       2       0
		 
		   176 DTOK  0 0 0 2 0 0
		 
		       168    MCE1            0    2 Munich   0       0       2       0
		 
		   192 WF_FDDI_2M 0 0 0 0 0 1
		   193 WF_FDDI_1M 0 0 0 0 0 1
		   194 WF_FDDI_2S 0 0 0 0 0 1
		   195 WF_FDDI_1S 0 0 0 0 0 1
		   196 WF_FDDI_2MF 0 0 0 0 0 1
		   197 WF_FDDI_1MF 0 0 0 0 0 1
		   198 WF_FDDI_2SF 0 0 0 0 0 1
		   199 WF_FDDI_1SF 0 0 0 0 0 1
		 
		   200 HW_MODULE_FMDSET  [7] 1 2 0 1 0 0
		   201 HW_MODULE_FMDST   [7] 0 2 0 1 0 0
		   202 HW_MODULE_FMDSE   [7] 1 2 0 0 0 0
		   203 HW_MODULE_FMSST   [7] 0 1 0 1 0 0
		   204 HW_MODULE_FMSSE   [7] 1 1 0 0 0 0
		 
		   208 FNSDSE   [7] 1 2 0 0 0 0
		   216 FNSDSDT  [7] 0 2 0 2 0 0
		   217 FNSDST   [7] 0 2 0 1 0 0
		 
		       224    DHSSI           0    2 hssi     0       0       0       0
		       225    SHSSI           0    1 hssi     0       0       0       0
		 
		       232    ESAF_NF         2       2       0       0       0       0
		       233    ESAF_DSE_NF     1       2       0       0       0       0
		       234    ESAF_SSE_NF     1       1       0       0       0       0
		       235    ESAF_DE_NF      2       0       0       0       0       0
		       236    ESAF [2]        2       2       0       0       0       0        
		       237    ESAF_DSE [2]    1       2       0       0       0       0
		       238    ESAF_SSE [2]    1       1       0       0       0       0
		       239    ESAF_DE [2]     2       0       0       0       0       0
		 
		  AN (AccessNode - Piranha)
		 
		      1024    ANSEDS          1       2       0       0       0       0
		 
		      1025    ANSEDST         1       2       0       1       0       0
		 
		      1026    ANSEDSH         1       2       0       0       0       0
		 
		      1027    ANSEDSI         1       2       0       0       0       0
		 
		      1028    ANSEDSTI        1       2       0       1       0       0
		 
		      1029    ANSEDSHI        1       2       0       0       0       0
		 
		      1030    ANSETS          1       2       0       0       0       0
		 
		      1031    ANSETST         1       2       0       1       0       0
		 
		      1032    ANSETSH         1       2       0       0       0       0
		 
		      1033    ANDEDS          2       2       0       0       0       0
		 
		      1034    ANDEDST         2       2       0       1       0       0
		 
		      1035    ANDEDSH         2       2       0       0       0       0
		 
		      1036    ANDS            0       2       0       0       0       0
		 
		      1037    ANDST           0       2       0       1       0       0
		 
		      1038    ANDSTI          0       2       0       1       0       0
		 
		      1039    ANTST           0       3       0       1       0       0
		 
		      1040    ANSDSEDS        1       2       0       0       0       0
		 
		      1041    ANSDSEDST       1       2       0       1       0       0
		 
		      1042    ANSDSEDSH       1       2       0       0       0       0
		 
		 
		  8448 SRML  0 0 0 0 0 0
		 
		 
		  NOTES:
		   [1] Indicates Module has COM Port 1 configured for ASYNC.
		    The AM8530's port B is configured for COM1.
		  
		   [2] This Module contains the DEFA - Hardware Filtering.  CAMS
		    must be programmed (can contain 2 - 6 CAMS onboard).
		  
		   [3] The AM8530 has been removed (depopulated) from this module.
		    Programming this device should not be performed.
		  
		   [4] Contains Dual Defa hardware. (Can be depopulated)
		  
		   [5] Depop'd two ports of hardware to make Dual Ethernet module.
		  
		   [6] These are FDDI modules.  The ID cannot be read from the Link
		    module I/O space.
		 
		      [7] These are AFN Platform Integrated 'Modules' - Cannot be detached
		              or be used by any other platform.
		 
		  "
	::= { wfHwEntry 2 }

wfHwModRev OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The revision level of the module. High byte is in upper 2 bytes.
		  "
	::= { wfHwEntry 3 }

wfHwModSerialNumber OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The serial number of the module.
		  "
	::= { wfHwEntry 4 }

wfHwMotherBdIdOpt OBJECT-TYPE
	SYNTAX	INTEGER {
		sysctrl(1),
		ace12(2),
		ace25(3),
		ace32(4),
		afn(5),
		in(6),
		sysctrl2(7),
		an(16),
		fre(256),
		fre2(768),
		srmf(8704)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The mother board identification number.
		  "
	::= { wfHwEntry 5 }

wfHwMotherBdRev OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The revision level of the mother board. High byte is in upper 2 bytes.
		  "
	::= { wfHwEntry 6 }

wfHwMotherBdSerialNumber OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The serial number of the mother board.
		  "
	::= { wfHwEntry 7 }

wfHwDaughterBdIdOpt OBJECT-TYPE
	SYNTAX	INTEGER {
		sysctrl(1),
		ace68020mhz12(2),
		ace68020mhz25(3),
		ace68030mhz32(4),
		fre68040mhz25(4352),
		fre68040mhz33(4608)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The daughter board identification number.
		  "
	::= { wfHwEntry 8 }

wfHwDaughterBdRev OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The revision level of the daughter board. High byte is in upper 2 bytes.
		  "
	::= { wfHwEntry 9 }

wfHwDaughterBdSerialNumber OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The serial number of the daughter board.
		  "
	::= { wfHwEntry 10 }

wfHwBabyBdIdOpt OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The baby board identification number.
		  "
	::= { wfHwEntry 11 }

wfHwBabyBdRev OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The revision level of the baby board. High byte is in upper 2 bytes.
		  "
	::= { wfHwEntry 12 }

wfHwBabyBdSerialNumber OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The serial number of the baby board.
		  "
	::= { wfHwEntry 13 }

wfHwDiagPromRev OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The revision level of the Diagnostic PROM. Major revision level
		  is in the upper 2 bytes, minor revision level in the lower 2 bytes. "
	::= { wfHwEntry 14 }

wfHwDiagPromDate OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The creation date of the Diagnostic PROM "
	::= { wfHwEntry 15 }

wfHwDiagPromSource OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The origin of the Diagnostic PROM contents "
	::= { wfHwEntry 16 }

wfHwBootPromRev OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The revision level of the BOOT PROM. Major revision level
		  is in the upper 2 bytes, minor revision level in the lower 2 bytes. "
	::= { wfHwEntry 17 }

wfHwBootPromDate OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The creation date of the Boot PROM "
	::= { wfHwEntry 18 }

wfHwBootPromSource OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The origin of the Boot PROM contents "
	::= { wfHwEntry 19 }

wfHwSparePromRev OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The revision level of the BOOT PROM. Major revision level
		  is in the upper 2 bytes, minor revision level in the lower 2 bytes. "
	::= { wfHwEntry 20 }

wfHwSparePromDate OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The creation date of the Spare PROM "
	::= { wfHwEntry 21 }

wfHwSparePromSource OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The origin of the Spare PROM contents "
	::= { wfHwEntry 22 }

wfHwFileSysPresent OBJECT-TYPE
	SYNTAX	INTEGER {
		filesys(1),
		nofilesys(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Flag indicating presence of File System on this slot.
		  "
	DEFVAL	{ nofilesys }
	::= { wfHwEntry 23 }

wfHwFileSysPresent2 OBJECT-TYPE
	SYNTAX	INTEGER {
		filesys(1),
		nofilesys(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Flag indicating presence of File System (Syscon2 volume#2) on this slot.
		  "
	DEFVAL	{ nofilesys }
	::= { wfHwEntry 24 }

wfHwConfigServer OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The slot number from which this slot was served its
		  configuration.  If the value for this attribute is 0, this
		  slot obtained its configuration from a file system resource
		  (not necessarily local); If the value for this attribute is
		  -1, this slot does not participate in the boot process (e.g.
		  SRM). A positive value indicates that the configuration was
		  obtained from memory from the slot indicated by the value of
		  this attribute. "
	::= { wfHwEntry 25 }

wfHwConfigFile OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The name of the config file the active configuration was
		  derived from.  This does NOT necessarily reflect the
		  current configuration! "
	::= { wfHwEntry 26 }

wfHwConfigDateAndTime OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The 11 octet date and time that a configuration was
		  loaded on/served to this slot. Octet map: 1-2 Year,
		  3 Month, 4 Day, 5 Hour, 6 Minutes, 7 Seconds,
		  8 Deci-seconds, 9 Direction from GMT ('+'|`-'), 10 GMT Hour
		  Offset, 11 GMT Minute Offset. "
	::= { wfHwEntry 27 }

wfHssiTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfHssiEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		    HSSI line record
		 "
	::= { wfLine 7 }

wfHssiEntry OBJECT-TYPE
	SYNTAX	WfHssiEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the HSSI table "
	INDEX	{ wfHssiSlot,
		wfHssiConnector }
	::= { wfHssiTable 1 }

WfHssiEntry ::= SEQUENCE {
	wfHssiDelete
		INTEGER,
	wfHssiDisable
		INTEGER,
	wfHssiState
		INTEGER,
	wfHssiSlot
		INTEGER,
	wfHssiConnector
		INTEGER,
	wfHssiCct
		INTEGER,
	wfHssiBofl
		INTEGER,
	wfHssiBoflTmo
		INTEGER,
	wfHssiMtu
		INTEGER,
	wfHssiMadr
		OCTET STRING,
	wfHssiService
		INTEGER,
	wfHssiWanProtocol
		INTEGER,
	wfHssiTransmissionInterface
		INTEGER,
	wfHssiExternalClkSpeed
		INTEGER,
	wfHssiCrcSize
		INTEGER,
	wfHssiInternalClkTestMode
		INTEGER,
	wfHssiRxOctets
		Counter,
	wfHssiRxFrames
		Counter,
	wfHssiTxOctets
		Counter,
	wfHssiTxFrames
		Counter,
	wfHssiInDiscards
		Counter,
	wfHssiInErrors
		Counter,
	wfHssiOutDiscards
		Counter,
	wfHssiOutErrors
		Counter,
	wfHssiRxLongFrames
		Counter,
	wfHssiTxClipFrames
		Counter,
	wfHssiRxReplenMisses
		Counter,
	wfHssiLastRxErrorCtrl
		INTEGER,
	wfHssiRxCrcErrors
		Counter,
	wfHssiRxOverruns
		Counter,
	wfHssiRxAborts
		Counter,
	wfHssiLastTxErrorCtrl
		INTEGER,
	wfHssiTxAborts
		Counter,
	wfHssiTxUnderruns
		Counter,
	wfHssiRxRingErrors
		Counter,
	wfHssiLastRxRingState
		INTEGER,
	wfHssiRxRingOverruns
		Counter,
	wfHssiTxRingErrors
		Counter,
	wfHssiLastTxRingState
		INTEGER,
	wfHssiPortOpErrors
		Counter,
	wfHssiInternOpErrors
		Counter,
	wfHssiHostErrors
		Counter,
	wfHssiRxProcessings
		Counter,
	wfHssiTxProcessings
		Counter,
	wfHssiTxCmplProcessings
		Counter,
	wfHssiIntrProcessings
		Counter,
	wfHssiBoflNum
		INTEGER,
	wfHssiBoflLen
		INTEGER,
	wfHssiRxBufferLength
		INTEGER,
	wfHssiMemPageLength
		INTEGER,
	wfHssiRxRingLength
		INTEGER,
	wfHssiTxRingLength
		INTEGER,
	wfHssiRxFifoWatermark
		INTEGER,
	wfHssiTxFifoWatermark
		INTEGER,
	wfHssiMaxRxMemory
		INTEGER,
	wfHssiLinkInterface
		INTEGER,
	wfHssiTurboBofl
		INTEGER,
	wfHssiCfgRxQueueLength
		INTEGER,
	wfHssiCfgTxQueueLength
		INTEGER,
	wfHssiLineNumber
		INTEGER
}

wfHssiDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter "
	DEFVAL	{ created }
	::= { wfHssiEntry 1 }

wfHssiDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter "
	DEFVAL	{ enabled }
	::= { wfHssiEntry 2 }

wfHssiState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		lmiwait(2),
		boflwait(3),
		cawait(4),
		init(5),
		notpresent(6)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Line Driver state variable, Not Present, Init, Down, Up "
	DEFVAL	{ notpresent }
	::= { wfHssiEntry 3 }

wfHssiSlot OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(14)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance ID Slot, filled in by driver "
	::= { wfHssiEntry 4 }

wfHssiConnector OBJECT-TYPE
	SYNTAX	INTEGER {
		one(1),
		two(2),
		three(3),
		four(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance ID Connector, filled in by driver "
	::= { wfHssiEntry 5 }

wfHssiCct OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1023)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" CCT number for this line instance "
	::= { wfHssiEntry 6 }

wfHssiBofl OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" breath of life parameter "
	DEFVAL	{ enabled }
	::= { wfHssiEntry 7 }

wfHssiBoflTmo OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(60)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" breath of life frequency in seconds "
	DEFVAL	{ minimum }
	::= { wfHssiEntry 8 }

wfHssiMtu OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(3),
		maximum(4500),
		default(4495)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" MTU parameter, this is buffer size for HSSI media, fixed "
	DEFVAL	{ default }
	::= { wfHssiEntry 9 }

wfHssiMadr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Line MAC address, fixed - line driver fills in from the 48 bit
		   address stored in the serial number prom for this connector.   "
	::= { wfHssiEntry 10 }

wfHssiService OBJECT-TYPE
	SYNTAX	INTEGER {
		transparent(1),
		undefined(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Service type for this circuit. Transparent is raw HDLC mode, and is the
		   only service provided on the current HSSI product "
	DEFVAL	{ transparent }
	::= { wfHssiEntry 11 }

wfHssiWanProtocol OBJECT-TYPE
	SYNTAX	INTEGER {
		standard(1),
		passthru(2),
		ppp(3),
		smds(4),
		framerelay(5),
		atm(6)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" WAN protocol selection is provided via this parameter. The
		   supported protocols can be selected per interface. "
	DEFVAL	{ standard }
	::= { wfHssiEntry 12 }

wfHssiTransmissionInterface OBJECT-TYPE
	SYNTAX	INTEGER {
		dsone(1),
		dsthree(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" T1 or T3,  in the future OC1, OC3 and OC12.  Used for MIB selection "
	DEFVAL	{ dsthree }
	::= { wfHssiEntry 13 }

wfHssiExternalClkSpeed OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(307200),
		maximum(52638515),
		default(46359642)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" External Clock Speed, Used in the future for route selection "
	DEFVAL	{ default }
	::= { wfHssiEntry 14 }

wfHssiCrcSize OBJECT-TYPE
	SYNTAX	INTEGER {
		crc16bit(1),
		crc32bit(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" CRC size parameter, 16 bit standard CCITT or extended 32 bit CRC "
	DEFVAL	{ crc32bit }
	::= { wfHssiEntry 15 }

wfHssiInternalClkTestMode OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enables internal transmit clock generation. Should NEVER be enabled for
		   normal operation. "
	DEFVAL	{ disabled }
	::= { wfHssiEntry 16 }

wfHssiRxOctets OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of bytes received without error "
	::= { wfHssiEntry 17 }

wfHssiRxFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames received without error "
	::= { wfHssiEntry 18 }

wfHssiTxOctets OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of bytes transmitted without error "
	::= { wfHssiEntry 19 }

wfHssiTxFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames transmitted without error "
	::= { wfHssiEntry 20 }

wfHssiInDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of error-free inbound packets discarded. Usually due to lack of
		   memory resources. "
	::= { wfHssiEntry 21 }

wfHssiInErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of inbound packets not delivered to higher-layer protocol because
		   of errors. "
	::= { wfHssiEntry 22 }

wfHssiOutDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of error-free outbound packets discarded. Usually due to lack of
		   transmission bandwidth. "
	::= { wfHssiEntry 23 }

wfHssiOutErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of outbound packets that could not be transmitted because of
		   errors. "
	::= { wfHssiEntry 24 }

wfHssiRxLongFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Long frames dropped on receive because of length "
	::= { wfHssiEntry 25 }

wfHssiTxClipFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames clipped in the transmit routine "
	::= { wfHssiEntry 26 }

wfHssiRxReplenMisses OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of failed attempts by the line driver to aquire a packet buffer "
	::= { wfHssiEntry 27 }

wfHssiLastRxErrorCtrl OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Last errored receive descriptor's control field "
	::= { wfHssiEntry 28 }

wfHssiRxCrcErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames received with CRC errors "
	::= { wfHssiEntry 29 }

wfHssiRxOverruns OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames received with fifo overrun errors "
	::= { wfHssiEntry 30 }

wfHssiRxAborts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames received with abort status "
	::= { wfHssiEntry 31 }

wfHssiLastTxErrorCtrl OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Last errored transmit descriptor's control field "
	::= { wfHssiEntry 32 }

wfHssiTxAborts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of transmit frames with internal abort errors "
	::= { wfHssiEntry 33 }

wfHssiTxUnderruns OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of transmit frames aborted with underrun errors "
	::= { wfHssiEntry 34 }

wfHssiRxRingErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of receive ring error events "
	::= { wfHssiEntry 35 }

wfHssiLastRxRingState OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Last 8 bit value from the recv ring state register "
	::= { wfHssiEntry 36 }

wfHssiRxRingOverruns OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of receive ring overrun events "
	::= { wfHssiEntry 37 }

wfHssiTxRingErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of transmit ring error events "
	::= { wfHssiEntry 38 }

wfHssiLastTxRingState OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Last 8 bit value from the transmit ring state register "
	::= { wfHssiEntry 39 }

wfHssiPortOpErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of port operation error events "
	::= { wfHssiEntry 40 }

wfHssiInternOpErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of internal operation error events "
	::= { wfHssiEntry 41 }

wfHssiHostErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of parity errs on host accesses to directly accessable registers. "
	::= { wfHssiEntry 42 }

wfHssiRxProcessings OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of receive frame processings (RINT) "
	::= { wfHssiEntry 43 }

wfHssiTxProcessings OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of transmit processings, invokations of transmit routine "
	::= { wfHssiEntry 44 }

wfHssiTxCmplProcessings OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of transmit complete processings (TINT) "
	::= { wfHssiEntry 45 }

wfHssiIntrProcessings OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Interrupt processings,  invokations of intr routine "
	::= { wfHssiEntry 46 }

wfHssiBoflNum OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(127),
		default(5)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Number of breath of life packets per breath of life "
	DEFVAL	{ default }
	::= { wfHssiEntry 47 }

wfHssiBoflLen OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(22),
		maximum(4450),
		default(100)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" breath of life packet length "
	DEFVAL	{ default }
	::= { wfHssiEntry 48 }

wfHssiRxBufferLength OBJECT-TYPE
	SYNTAX	INTEGER {
		length4k(64),
		length8k(128)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Performance tunning parameter controls Receive buffer size. "
	DEFVAL	{ length4k }
	::= { wfHssiEntry 49 }

wfHssiMemPageLength OBJECT-TYPE
	SYNTAX	INTEGER {
		length32(1),
		length256(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Performance tunning parameter controls device memory access burst length. "
	DEFVAL	{ length32 }
	::= { wfHssiEntry 50 }

wfHssiRxRingLength OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Current Receive Queue Length. "
	::= { wfHssiEntry 51 }

wfHssiTxRingLength OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Current Transmit Queue Length. "
	::= { wfHssiEntry 52 }

wfHssiRxFifoWatermark OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(2),
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Performance tunning parameter controls the receive watermark. "
	DEFVAL	{ minimum }
	::= { wfHssiEntry 53 }

wfHssiTxFifoWatermark OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(2),
		maximum(255),
		default(16)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Performance tunning parameter controls the transmit watermark. "
	DEFVAL	{ default }
	::= { wfHssiEntry 54 }

wfHssiMaxRxMemory OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Performance tunning parameter controls fifo area allowed for receive. "
	DEFVAL	{ minimum }
	::= { wfHssiEntry 55 }

wfHssiLinkInterface OBJECT-TYPE
	SYNTAX	INTEGER {
		default(1),
		ace25(2),
		ace32(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Only for DEBUG. "
	DEFVAL	{ default }
	::= { wfHssiEntry 56 }

wfHssiTurboBofl OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Only for DEBUG, Turbo breath of life parameter "
	DEFVAL	{ disabled }
	::= { wfHssiEntry 57 }

wfHssiCfgRxQueueLength OBJECT-TYPE
	SYNTAX	INTEGER {
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configured Receive Queue Length. Values other than zero over-ride the
		   router selected values.  A value of zero has a special meaning.  Zero
		   causes router based default values to be used.  Values larger than the
		   compiled ring size are truncated to the compiled ring size. 
		"
	::= { wfHssiEntry 58 }

wfHssiCfgTxQueueLength OBJECT-TYPE
	SYNTAX	INTEGER {
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configured Transmit Queue Length. Values other than zero over-ride the
		   router selected values.  A value of zero has a special meaning.  Zero
		   causes router based default values to be used.  Values larger than the
		   compiled ring size are truncated to the compiled ring size. 
		"
	::= { wfHssiEntry 59 }

wfHssiLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" line number for this line instance "
	::= { wfHssiEntry 60 }

wfHwfTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfHwfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The following table will contain information about a collection of
		   Hardware Filter (HWF) driver records.
		   Only one HWF driver may be spawned, by the loader, on a given slot.
		   Hence, only the slot number is used as the instance identifier into
		   the table. "
	::= { wfHwFGroup 1 }

wfHwfEntry OBJECT-TYPE
	SYNTAX	WfHwfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Slot number used as instance identifier. "
	INDEX	{ wfHwfSlot }
	::= { wfHwfTable 1 }

WfHwfEntry ::= SEQUENCE {
	wfHwfDelete
		INTEGER,
	wfHwfEnable
		INTEGER,
	wfHwfState
		INTEGER,
	wfHwfSlot
		INTEGER,
	wfHwfAvailableLines
		INTEGER
}

wfHwfDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/delete parameter. "
	DEFVAL	{ created }
	::= { wfHwfEntry 1 }

wfHwfEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/disable parameter. "
	DEFVAL	{ enabled }
	::= { wfHwfEntry 2 }

wfHwfState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Driver state variable. "
	DEFVAL	{ notpresent }
	::= { wfHwfEntry 3 }

wfHwfSlot OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(14)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Slot number -- instance ID. "
	::= { wfHwfEntry 4 }

wfHwfAvailableLines OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of available lines on module. "
	::= { wfHwfEntry 5 }

wfHwfLineTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfHwfLineEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The following table will contain information about a collection of
		   Hardware Filter (HWF) line records. "
	::= { wfHwFGroup 2 }

wfHwfLineEntry OBJECT-TYPE
	SYNTAX	WfHwfLineEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Slot number and line number used as instance identifier. "
	INDEX	{ wfHwfLineSlot,
		wfHwfLineNumber }
	::= { wfHwfLineTable 1 }

WfHwfLineEntry ::= SEQUENCE {
	wfHwfLineState
		INTEGER,
	wfHwfLineSlot
		INTEGER,
	wfHwfLineNumber
		INTEGER,
	wfHwfLineCct
		INTEGER,
	wfHwfLineCapableMaxTblSize
		INTEGER,
	wfHwfLineCurrentTblSize
		INTEGER,
	wfHwfLineCurrentUsedEntries
		INTEGER,
	wfHwfLineDroppedFrames
		INTEGER
}

wfHwfLineState OBJECT-TYPE
	SYNTAX	INTEGER {
		operational(1),
		disabled(2),
		full(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" State of filtering hardware on a per line basis. "
	DEFVAL	{ disabled }
	::= { wfHwfLineEntry 1 }

wfHwfLineSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Slot number -- instance ID. "
	::= { wfHwfLineEntry 2 }

wfHwfLineNumber OBJECT-TYPE
	SYNTAX	INTEGER {
		one(1),
		two(2),
		three(3),
		four(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Line number -- instance ID. "
	::= { wfHwfLineEntry 3 }

wfHwfLineCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Circuit number associated with a line. "
	::= { wfHwfLineEntry 4 }

wfHwfLineCapableMaxTblSize OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This attribute specifies the maximum number of table entries
		   capable of being used by a line based upon actual hardware
		   filter devices present and available. "
	::= { wfHwfLineEntry 5 }

wfHwfLineCurrentTblSize OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Current capacity of the hardware filter table. Hardware filter
		   table resources are dynamically allocated (in increments of 256)
		   on an as-needed basis up to the available table size. "
	::= { wfHwfLineEntry 6 }

wfHwfLineCurrentUsedEntries OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of hardware filter table entries used. "
	::= { wfHwfLineEntry 7 }

wfHwfLineDroppedFrames OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames dropped because of hardware filter match. "
	::= { wfHwfLineEntry 8 }

wfIf		OBJECT IDENTIFIER ::= { wfIfGroup 1 }

wfIfNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of possible active interfaces "
	::= { wfIf 1 }

wfIfTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table containing active interfaces "
	::= { wfIfGroup 2 }

wfIfEntry OBJECT-TYPE
	SYNTAX	WfIfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A particular interface "
	INDEX	{ wfIfIndex }
	::= { wfIfTable 1 }

WfIfEntry ::= SEQUENCE {
	wfIfIndex
		INTEGER,
	wfIfDescr
		DisplayString,
	wfIfType
		INTEGER,
	wfIfMtu
		INTEGER,
	wfIfSpeed
		Gauge,
	wfIfPhysAddress
		OCTET STRING,
	wfIfAdminStatus
		INTEGER,
	wfIfOperStatus
		INTEGER,
	wfIfLastChange
		TimeTicks,
	wfIfInOctets
		Counter,
	wfIfInUcastPkts
		Counter,
	wfIfInNUCastPkts
		Counter,
	wfIfInDiscards
		Counter,
	wfIfInErrors
		Counter,
	wfIfInUnknownProtos
		Counter,
	wfIfOutOctets
		Counter,
	wfIfOutUcastPkts
		Counter,
	wfIfOutNUcastPkts
		Counter,
	wfIfOutDiscards
		Counter,
	wfIfOutErrors
		Counter,
	wfIfOutQLen
		Gauge,
	wfIfSpecific
		OBJECT IDENTIFIER
}

wfIfIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 1 }

wfIfDescr OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 2 }

wfIfType OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 3 }

wfIfMtu OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 4 }

wfIfSpeed OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 5 }

wfIfPhysAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 6 }

wfIfAdminStatus OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 7 }

wfIfOperStatus OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 8 }

wfIfLastChange OBJECT-TYPE
	SYNTAX	TimeTicks
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 9 }

wfIfInOctets OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 10 }

wfIfInUcastPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 11 }

wfIfInNUCastPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 12 }

wfIfInDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 13 }

wfIfInErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 14 }

wfIfInUnknownProtos OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 15 }

wfIfOutOctets OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 16 }

wfIfOutUcastPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 17 }

wfIfOutNUcastPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 18 }

wfIfOutDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 19 }

wfIfOutErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 20 }

wfIfOutQLen OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 21 }

wfIfSpecific OBJECT-TYPE
	SYNTAX	OBJECT IDENTIFIER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Corresponds to same attribute of MIB-II's ifTable "
	::= { wfIfEntry 22 }

wfIpBase	OBJECT IDENTIFIER ::= { wfIpGroup 1 }

wfIpBaseCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Create/Delete parameter. Default is created.
		     Users perform a set operation on this
		     object in order to create/delete IP."
	DEFVAL	{ created }
	::= { wfIpBase 1 }

wfIpBaseEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Enable/Disable parameter. Default is enabled.
		     Users perform a set operation on this
		     object in order to enable/disable IP."
	DEFVAL	{ enabled }
	::= { wfIpBase 2 }

wfIpBaseState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpres(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The current state of the entire IP."
	DEFVAL	{ notpres }
	::= { wfIpBase 3 }

wfIpBaseForwarding OBJECT-TYPE
	SYNTAX	INTEGER {
		forwarding(1),
		notforwarding(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The indication of whether this entity is acting
		     as an IP gateway in respect to the forwarding of
		     datagrams received by, but not addressed to, this
		     entity.  IP gateways forward datagrams.  IP hosts
		     do not (except those source-routed via the host).
		     Note that for some managed nodes, this object may
		     take on only a subset of the values possible.
		     Accordingly, it is appropriate for an agent to
		     return a `badValue' response if a management
		     station attempts to change this object to an
		     inappropriate value."
	DEFVAL	{ forwarding }
	::= { wfIpBase 4 }

wfIpBaseDefaultTTL OBJECT-TYPE
	SYNTAX	INTEGER {
		default(30),
		ttlmax(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The default value inserted into the Time-To-Live
		     field of the IP header of datagrams originated at
		     this entity, whenever a TTL value is not supplied
		     by the transport layer protocol. "
	DEFVAL	{ default }
	::= { wfIpBase 5 }

wfIpBaseRipDiameter OBJECT-TYPE
	SYNTAX	INTEGER {
		maximum(15)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Diameter of the RIP network.  1 less than 'infinity' "
	DEFVAL	{ maximum }
	::= { wfIpBase 6 }

wfIpBaseRouteCache OBJECT-TYPE
	SYNTAX	INTEGER {
		dflt(60)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The interval at which routing entries are flushed from the
		       forwarding tables. "
	DEFVAL	{ dflt }
	::= { wfIpBase 7 }

wfIpBaseMibTables OBJECT-TYPE
	SYNTAX	INTEGER {
		none(1),
		route(2),
		fwd(3),
		both(4)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configures which routing MIB tables are maintained by
		       IP.  Previously, only the wfIpBaseRtTable was maintained.
		       In order to support variable length subnets, the wfIpForwardTable
		       was implemented.  Supporting both these tables requires
		       memory usage.  The user can now configure which tables to
		       maintain to reduce memory usage if needed.  In the absence
		       of variable length subnetting, these tables would maintain
		       identical information.
		     "
	DEFVAL	{ route }
	::= { wfIpBase 8 }

wfIpBaseNetworks OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of networks (including subnets) in the routing table "
	::= { wfIpBase 9 }

wfIpBaseZeroSubnetEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This parameter indicates whether or not 0 subnets are allowed.
		       If they are not allowed, interfaces configured with a 0
		       subnet will not be allowed. "
	DEFVAL	{ disabled }
	::= { wfIpBase 10 }

wfIpBaseEstimatedNetworks OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This parameter indicates the estimated number of networks
		    that the router will need to keep in its routing table. "
	::= { wfIpBase 11 }

wfIpBaseHosts OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This parameter indicates the number of hosts known by IP "
	::= { wfIpBase 12 }

wfIpBaseEstimatedHosts OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This parameter indicates the estimated number of hosts
		    that the router will need to keep in its hosts table. "
	::= { wfIpBase 13 }

wfIpBaseRtEntryTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpBaseRtEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of elements in IP's routing table "
	::= { wfIpGroup 2 }

wfIpBaseRtEntry OBJECT-TYPE
	SYNTAX	WfIpBaseRtEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A description of a route "
	INDEX	{ wfIpBaseRouteDest }
	::= { wfIpBaseRtEntryTable 1 }

WfIpBaseRtEntry ::= SEQUENCE {
	wfIpBaseRouteDest
		IpAddress,
	wfIpBaseRouteIfIndex
		INTEGER,
	wfIpBaseRouteMetric1
		INTEGER,
	wfIpBaseRouteMetric2
		INTEGER,
	wfIpBaseRouteMetric3
		INTEGER,
	wfIpBaseRouteMetric4
		INTEGER,
	wfIpBaseRouteNextHop
		IpAddress,
	wfIpBaseRouteType
		INTEGER,
	wfIpBaseRouteProto
		INTEGER,
	wfIpBaseRouteAge
		INTEGER,
	wfIpBaseRouteMask
		IpAddress,
	wfIpBaseRouteMetric5
		INTEGER,
	wfIpBaseRouteInfo
		OBJECT IDENTIFIER
}

wfIpBaseRouteDest OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The destination IP address of this route. An
		     entry with a value of 0.0.0.0 is considered a
		     default route.  Multiple routes to a single
		     destination can appear in the table, but access to
		     such multiple entries is dependent on the table-
		     access mechanisms defined by the network
		     management protocol in use."
	::= { wfIpBaseRtEntry 1 }

wfIpBaseRouteIfIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The index value which uniquely identifies the
		     local interface through which the next hop of this
		     route should be reached.  The interface identified
		     by a particular value of this index is the same
		     interface as identified by the same value of
		     ifIndex."
	::= { wfIpBaseRtEntry 2 }

wfIpBaseRouteMetric1 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The primary routing metric for this route. The
		     semantics of this metric are determined by the
		     routing-protocol specified in the route's
		     ipRouteProto value.  If this metric is not used,
		     its value should be set to -1."
	::= { wfIpBaseRtEntry 3 }

wfIpBaseRouteMetric2 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"An alternate routing metric for this route. The
		     semantics of this metric are determined by the
		     routing-protocol specified in the route's
		     ipRouteProto value.  If this metric is not used,
		     its value should be set to -1."
	::= { wfIpBaseRtEntry 4 }

wfIpBaseRouteMetric3 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"An alternate routing metric for this route. The
		     semantics of this metric are determined by the
		     routing-protocol specified in the route's
		     ipRouteProto value.  If this metric is not used,
		     its value should be set to -1."
	::= { wfIpBaseRtEntry 5 }

wfIpBaseRouteMetric4 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"An alternate routing metric for this route. The
		     semantics of this metric are determined by the
		     routing-protocol specified in the route's
		     ipRouteProto value.  If this metric is not used,
		     its value should be set to -1."
	::= { wfIpBaseRtEntry 6 }

wfIpBaseRouteNextHop OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The IP address of the next hop of this route.
		     (In the case of a route bound to an interface
		     which is realized via a broadcast media, the value
		     of this field is the agent's IP address on that
		     interface.)"
	::= { wfIpBaseRtEntry 7 }

wfIpBaseRouteType OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		invalid(2),
		direct(3),
		indirect(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The type of route. Note that the values
		     direct(3) and indirect(4) refer to the notion of
		     direct and indirect routing in the IP
		     architecture.
		     Setting this object to the value invalid(2) has
		     the effect of invalidating the corresponding entry
		     in the ipRouteTable object.  That is, it
		     effectively dissasociates the destination
		     identified with said entry from the route
		     identified with said entry.  It is an
		     implementation-specific matter as to whether the
		     agent removes an invalidated entry from the table.
		     nagement stations must be prepared
		     to receive tabular information from agents that
		     corresponds to entries not currently in use.
		     Proper interpretation of such entries requires
		     examination of the relevant ipRouteType object."
	::= { wfIpBaseRtEntry 8 }

wfIpBaseRouteProto OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		local(2),
		netmgmt(3),
		icmp(4),
		egp(5),
		ggp(6),
		hello(7),
		rip(8),
		is(9),
		ospf(13),
		bgp(14)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The routing mechanism via which this route was
		     learned.  Inclusion of values for gateway routing
		     protocols is not intended to imply that hosts
		     should support those protocols."
	::= { wfIpBaseRtEntry 9 }

wfIpBaseRouteAge OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of seconds since this route was last
		     updated or otherwise determined to be correct.
		     Note that no semantics of `too old' can be implied
		     except through knowledge of the routing protocol
		     by which the route was learned."
	::= { wfIpBaseRtEntry 10 }

wfIpBaseRouteMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Indicate the mask to be logical-ANDed with the
		     destination address before being compared to the
		     value in the ipRouteDest field.  For those systems
		     that do not support arbitrary subnet masks, an
		     agent constructs the value of the ipRouteMask by
		     determining whether the value of the correspondent
		     ipRouteDest field belong to a class-A, B, or C
		     network, and then using one of:
		          mask           network
		          255.0.0.0      class-A
		          255.255.0.0    class-B
		          255.255.255.0  class-C
		     If the value of the ipRouteDest is 0.0.0.0 (a
		     default route), then the mask value is also
		     0.0.0.0.  It should be noted that all IP routing
		     subsystems implicitly use this mechanism."
	::= { wfIpBaseRtEntry 11 }

wfIpBaseRouteMetric5 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"An alternate routing metric for this route. The
		     semantics of this metric are determined by the
		     routing-protocol specified in the route's
		     ipRouteProto value.  If this metric is not used,
		     its value should be set to -1."
	::= { wfIpBaseRtEntry 12 }

wfIpBaseRouteInfo OBJECT-TYPE
	SYNTAX	OBJECT IDENTIFIER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A user-defined string which describes this Route entry "
	::= { wfIpBaseRtEntry 13 }

wfIpBaseHostEntryTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpBaseHostEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of elements in IP's host table "
	::= { wfIpGroup 3 }

wfIpBaseHostEntry OBJECT-TYPE
	SYNTAX	WfIpBaseHostEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A description of a resolved host "
	INDEX	{ wfIpBaseNetToMediaNetAddress }
	::= { wfIpBaseHostEntryTable 1 }

WfIpBaseHostEntry ::= SEQUENCE {
	wfIpBaseNetToMediaIfIndex
		INTEGER,
	wfIpBaseNetToMediaPhysAddress
		OCTET STRING,
	wfIpBaseNetToMediaNetAddress
		IpAddress,
	wfIpBaseNetToMediaType
		INTEGER
}

wfIpBaseNetToMediaIfIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The interface on which this entry's equivalence
		     is effective.  The interface identified by a
		     particular value of this index is the same
		     interface as identified by the same value of
		     ifIndex."
	::= { wfIpBaseHostEntry 1 }

wfIpBaseNetToMediaPhysAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The media-dependent `physical' address."
	::= { wfIpBaseHostEntry 2 }

wfIpBaseNetToMediaNetAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The IpAddress corresponding to the media-dependent `physical' address."
	::= { wfIpBaseHostEntry 3 }

wfIpBaseNetToMediaType OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		invalid(2),
		dynamic(3),
		static(4)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The type of mapping.
		     Setting this object to the value invalid(2) has
		     the effect of invalidating the corresponding entry
		     in the ipNetToMediaTable.  That is, it effectively
		     dissasociates the interface identified with said
		     entry from the mapping identified with said entry.
		     It is an implementation-specific matter as to
		     whether the agent removes an invalidated entry
		     from the table.  Accordingly, management stations
		     must be prepared to receive tabular information
		     from agents that corresponds to entries not
		     currently in use.  Proper interpretation of such
		     entries requires examination of the relevant
		     ipNetToMediaType object. "
	::= { wfIpBaseHostEntry 4 }

wfIpInterfaceTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of configured IP interface "
	::= { wfIpGroup 4 }

wfIpInterfaceEntry OBJECT-TYPE
	SYNTAX	WfIpInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An IP interface description "
	INDEX	{ wfIpInterfaceAddr,
		wfIpInterfaceCircuit }
	::= { wfIpInterfaceTable 1 }

WfIpInterfaceEntry ::= SEQUENCE {
	wfIpInterfaceCreate
		INTEGER,
	wfIpInterfaceEnable
		INTEGER,
	wfIpInterfaceState
		INTEGER,
	wfIpInterfaceAddr
		IpAddress,
	wfIpInterfaceCircuit
		INTEGER,
	wfIpInterfaceMask
		IpAddress,
	wfIpInterfaceCost
		INTEGER,
	wfIpInterfaceCfgBcastAddr
		IpAddress,
	wfIpInterfaceBcastAddr
		IpAddress,
	wfIpInterfaceMTUDiscovery
		INTEGER,
	wfIpInterfaceAMR
		INTEGER,
	wfIpInterfaceASB
		INTEGER,
	wfIpInterfaceAddressResolutionType
		INTEGER,
	wfIpInterfaceProxy
		INTEGER,
	wfIpInterfaceHostCache
		INTEGER,
	wfIpInterfaceUdpXsumOn
		INTEGER,
	wfIpInterfaceCfgMacAddress
		OCTET STRING,
	wfIpInterfaceMacAddress
		OCTET STRING,
	wfIpInterfaceReasmMaxSize
		INTEGER,
	wfIpInterfaceMaxInfo
		INTEGER,
	wfIpInterfaceInReceives
		Counter,
	wfIpInterfaceInHdrErrors
		Counter,
	wfIpInterfaceInAddrErrors
		Counter,
	wfIpInterfaceForwDatagrams
		Counter,
	wfIpInterfaceInUnknownProtos
		Counter,
	wfIpInterfaceInDiscards
		Counter,
	wfIpInterfaceInDelivers
		Counter,
	wfIpInterfaceOutRequests
		Counter,
	wfIpInterfaceOutDiscards
		Counter,
	wfIpInterfaceOutNoRoutes
		Counter,
	wfIpInterfaceReasmTimeout
		INTEGER,
	wfIpInterfaceReasmReqds
		Counter,
	wfIpInterfaceReasmOKs
		Counter,
	wfIpInterfaceReasmFails
		Counter,
	wfIpInterfaceFragOKs
		Counter,
	wfIpInterfaceFragFails
		Counter,
	wfIpInterfaceFragCreates
		Counter,
	wfIpInterfaceIcmpInMsgs
		Counter,
	wfIpInterfaceIcmpInErrors
		Counter,
	wfIpInterfaceIcmpInDestUnreachs
		Counter,
	wfIpInterfaceIcmpInTimeExcds
		Counter,
	wfIpInterfaceIcmpInParmProbs
		Counter,
	wfIpInterfaceIcmpInSrcQuenchs
		Counter,
	wfIpInterfaceIcmpInRedirects
		Counter,
	wfIpInterfaceIcmpInEchos
		Counter,
	wfIpInterfaceIcmpInEchoReps
		Counter,
	wfIpInterfaceIcmpInTimestamps
		Counter,
	wfIpInterfaceIcmpInTimestampReps
		Counter,
	wfIpInterfaceIcmpInAddrMasks
		Counter,
	wfIpInterfaceIcmpInAddrMaskReps
		Counter,
	wfIpInterfaceIcmpOutMsgs
		Counter,
	wfIpInterfaceIcmpOutErrors
		Counter,
	wfIpInterfaceIcmpOutDestUnreachs
		Counter,
	wfIpInterfaceIcmpOutTimeExcds
		Counter,
	wfIpInterfaceIcmpOutParmProbs
		Counter,
	wfIpInterfaceIcmpOutSrcQuenchs
		Counter,
	wfIpInterfaceIcmpOutRedirects
		Counter,
	wfIpInterfaceIcmpOutEchos
		Counter,
	wfIpInterfaceIcmpOutEchoReps
		Counter,
	wfIpInterfaceIcmpOutTimestamps
		Counter,
	wfIpInterfaceIcmpOutTimestampReps
		Counter,
	wfIpInterfaceIcmpOutAddrMasks
		Counter,
	wfIpInterfaceIcmpOutAddrMaskReps
		Counter,
	wfIpInterfaceTrEndStation
		INTEGER,
	wfIpInterfaceSMDSGroupAddress
		OCTET STRING,
	wfIpInterfaceSMDSArpReqAddress
		OCTET STRING,
	wfIpInterfaceFRBcastDlci
		INTEGER,
	wfIpInterfaceFRMcast1Dlci
		INTEGER,
	wfIpInterfaceFRMcast2Dlci
		INTEGER,
	wfIpInterfaceRedirect
		INTEGER,
	wfIpInterfaceEnetArpEncaps
		INTEGER,
	wfIpInterfaceCacheMisses
		Counter,
	wfIpInterfaceCacheNetworks
		Counter,
	wfIpInterfaceCacheRemoves
		Counter,
	wfIpInterfaceSlotMask
		INTEGER,
	wfIpInterfaceEnableSecurity
		INTEGER,
	wfIpInterfaceStripSecurity
		INTEGER,
	wfIpInterfaceRequireOutSecurity
		INTEGER,
	wfIpInterfaceRequireInSecurity
		INTEGER,
	wfIpInterfaceMinLevel
		INTEGER,
	wfIpInterfaceMaxLevel
		INTEGER,
	wfIpInterfaceMustOutAuthority
		OCTET STRING,
	wfIpInterfaceMayOutAuthority
		OCTET STRING,
	wfIpInterfaceMustInAuthority
		OCTET STRING,
	wfIpInterfaceMayInAuthority
		OCTET STRING,
	wfIpInterfaceImplicitLabelEnabled
		INTEGER,
	wfIpInterfaceImplicitAuth
		OCTET STRING,
	wfIpInterfaceImplicitLevel
		INTEGER,
	wfIpInterfaceDefaultLabelEnabled
		INTEGER,
	wfIpInterfaceDefaultAuth
		OCTET STRING,
	wfIpInterfaceDefaultLevel
		INTEGER,
	wfIpInterfaceErrorLabelEnabled
		INTEGER,
	wfIpInterfaceErrorAuth
		OCTET STRING,
	wfIpInterfaceDropRxAuths
		Counter,
	wfIpInterfaceDropRxFormats
		Counter,
	wfIpInterfaceDropRxLevels
		Counter,
	wfIpInterfaceDropRxNoIpsos
		Counter,
	wfIpInterfaceDropTxAuths
		Counter,
	wfIpInterfaceDropTxLevels
		Counter,
	wfIpInterfaceDropTxNoIpsos
		Counter,
	wfIpInterfaceDropTxNoIpsoRooms
		Counter,
	wfIpInterfaceICMPInAdminProhib
		Counter,
	wfIpInterfaceICMPOutAdminProhib
		Counter
}

wfIpInterfaceCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Create/Delete parameter. Default is created.
		     Users perform a set operation on this
		     object in order to create/delete an IP interface."
	DEFVAL	{ create }
	::= { wfIpInterfaceEntry 1 }

wfIpInterfaceEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Enable/Disable parameter. Default is enabled.
		     Users perform a set operation on this
		     object in order to enable/disable an IP interface."
	DEFVAL	{ enable }
	::= { wfIpInterfaceEntry 2 }

wfIpInterfaceState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		invalid(4),
		notpres(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" INvalid indicates an error in processing the cfg record "
	DEFVAL	{ notpres }
	::= { wfIpInterfaceEntry 3 }

wfIpInterfaceAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP Address to which this entry's addressing information
		       pertains "
	::= { wfIpInterfaceEntry 4 }

wfIpInterfaceCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Circuit Number that this interface runs over"
	::= { wfIpInterfaceEntry 5 }

wfIpInterfaceMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The subnet mask associated with the IP address of
		     this entry.  The value of the mask is an IP
		     address with all the network bits set to 1 and all
		     the hosts bits set to 0."
	::= { wfIpInterfaceEntry 6 }

wfIpInterfaceCost OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Cost metric associated with the IP Address of this entry "
	DEFVAL	{ 1 }
	::= { wfIpInterfaceEntry 7 }

wfIpInterfaceCfgBcastAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The user can specifcy a broadcast address for a NWIF "
	::= { wfIpInterfaceEntry 8 }

wfIpInterfaceBcastAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The value of the broadcast address used for sending datagrams on
		     the (logical) interface associated with the IP
		     address of this entry. This value applies to
		     both the subnet and network broadcasts addresses
		     used by the entity on this (logical) interface.
		     This is value used by the software "
	::= { wfIpInterfaceEntry 9 }

wfIpInterfaceMTUDiscovery OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Whether MTU discovery option is on/off "
	DEFVAL	{ off }
	::= { wfIpInterfaceEntry 10 }

wfIpInterfaceAMR OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Whether Address Mask Reply is ON/OFF "
	DEFVAL	{ off }
	::= { wfIpInterfaceEntry 11 }

wfIpInterfaceASB OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Whether All-Subnet Broadcasts Are excepted and Sent out this NWIF "
	DEFVAL	{ off }
	::= { wfIpInterfaceEntry 12 }

wfIpInterfaceAddressResolutionType OBJECT-TYPE
	SYNTAX	INTEGER {
		arp(1),
		ddn(3),
		pdn(4),
		inarp(5),
		arpinarp(6),
		none(7),
		bfeddn(8)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates which Address Resolution Type to use "
	DEFVAL	{ arp }
	::= { wfIpInterfaceEntry 13 }

wfIpInterfaceProxy OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates Whether Proxy is on this Interface or not "
	DEFVAL	{ off }
	::= { wfIpInterfaceEntry 14 }

wfIpInterfaceHostCache OBJECT-TYPE
	SYNTAX	INTEGER {
		cacheoff(1),
		cache120(120),
		cache180(180),
		cache240(240),
		cache300(300),
		cache600(600),
		cache900(900),
		cache1200(1200)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Whether the Host Cache (Address Aging) is on or not.
		       A Range of discrete values is specified as well as a
		       value meaning  don't age "
	DEFVAL	{ cacheoff }
	::= { wfIpInterfaceEntry 15 }

wfIpInterfaceUdpXsumOn OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Whether to turn UDP checksum verification on
		       for UDP packets recieved and transmitted by
		       this router "
	DEFVAL	{ on }
	::= { wfIpInterfaceEntry 16 }

wfIpInterfaceCfgMacAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The desired mac set by the user "
	::= { wfIpInterfaceEntry 17 }

wfIpInterfaceMacAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The MAC Address for this Interface- actual one used "
	::= { wfIpInterfaceEntry 18 }

wfIpInterfaceReasmMaxSize OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The size of the largest IP datagram which this
		     entity can re-assemble from incoming IP fragmented
		     datagrams received on this interface."
	::= { wfIpInterfaceEntry 19 }

wfIpInterfaceMaxInfo OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The maximum size of the INFO (non-MAC) field that
		     this port will receive or transmit."
	::= { wfIpInterfaceEntry 20 }

wfIpInterfaceInReceives OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The total number of input datagrams received from interfaces,
		      including those received in error."
	::= { wfIpInterfaceEntry 21 }

wfIpInterfaceInHdrErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of input datagrams discarded due to
		     errors in their IP headers, including bad
		     checksums, version number mismatch, other format
		     errors, time-to-live exceeded, errors discovered
		     in processing their IP options, etc."
	::= { wfIpInterfaceEntry 22 }

wfIpInterfaceInAddrErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of input datagrams discarded because
		     the IP address in their IP header's destination
		     field was not a valid address to be received at
		     this entity.  This count includes invalid
		     addresses (e.g., 0.0.0.0) and addresses of
		     unsupported Classes (e.g., Class E).  For entities
		     which are not IP Gateways and therefore do not
		     forward datagrams, this counter includes datagrams
		     discarded because the destination address was not
		     a local address."
	::= { wfIpInterfaceEntry 23 }

wfIpInterfaceForwDatagrams OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of input datagrams for which this
		     entity was not their final IP destination, as a
		     result of which an attempt was made to find a
		     route to forward them to that final destination.
		     In entities which do not act as IP Gateways, this
		     counter will include only those packets which were
		     Source-Routed via this entity, and the Source-
		     Route option processing was successful."
	::= { wfIpInterfaceEntry 24 }

wfIpInterfaceInUnknownProtos OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of locally-addressed datagrams
		     received successfully but discarded because of an
		     unknown or unsupported protocol."
	::= { wfIpInterfaceEntry 25 }

wfIpInterfaceInDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of input IP datagrams for which no
		     problems were encountered to prevent their
		     continued processing, but which were discarded
		     (e.g., for lack of buffer space).  Note that this
		     counter does not include any datagrams discarded
		     while awaiting re-assembly."
	::= { wfIpInterfaceEntry 26 }

wfIpInterfaceInDelivers OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The total number of input datagrams successfully
		     delivered to IP user-protocols (including ICMP)."
	::= { wfIpInterfaceEntry 27 }

wfIpInterfaceOutRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The total number of IP datagrams which local IP
		     user-protocols (including ICMP) supplied to IP in
		     requests for transmission.  Note that this counter
		     does not include any datagrams counted in
		     ipForwDatagrams."
	::= { wfIpInterfaceEntry 28 }

wfIpInterfaceOutDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of output IP datagrams for which no
		     problem was encountered to prevent their
		     transmission to their destination, but which were
		     discarded (e.g., for lack of buffer space).  Note
		     that this counter would include datagrams counted
		     in ipForwDatagrams if any such packets met this
		     (discretionary) discard criterion."
	::= { wfIpInterfaceEntry 29 }

wfIpInterfaceOutNoRoutes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of IP datagrams discarded because no
		     route could be found to transmit them to their
		     destination.  Note that this counter includes any
		     packets counted in ipForwDatagrams which meet this
		     `no-route' criterion.  Note that this includes any
		     datagarms which a host cannot route because all of
		     its default gateways are down."
	::= { wfIpInterfaceEntry 30 }

wfIpInterfaceReasmTimeout OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The maximum number of seconds which received
		     fragments are held while they are awaiting
		     reassembly at this entity."
	::= { wfIpInterfaceEntry 31 }

wfIpInterfaceReasmReqds OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of IP fragments received which needed
		     to be reassembled at this entity."
	::= { wfIpInterfaceEntry 32 }

wfIpInterfaceReasmOKs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of IP datagrams successfully reassembled."
	::= { wfIpInterfaceEntry 33 }

wfIpInterfaceReasmFails OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of failures detected by the IP re-
		     assembly algorithm (for whatever reason: timed
		     out, errors, etc).  Note that this is not
		     necessarily a count of discarded IP fragments
		     since some algorithms (notably the algorithm in
		     RFC 815) can lose track of the number of fragments
		     by combining them as they are received."
	::= { wfIpInterfaceEntry 34 }

wfIpInterfaceFragOKs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of IP datagrams that have been
		      successfully fragmented at this entity."
	::= { wfIpInterfaceEntry 35 }

wfIpInterfaceFragFails OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of IP datagrams that have been
		     discarded because they needed to be fragmented at
		     this entity but could not be, e.g., because their
		     Don't Fragment flag was set."
	::= { wfIpInterfaceEntry 36 }

wfIpInterfaceFragCreates OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of IP datagram fragments that have
		     been generated as a result of fragmentation at
		     this entity."
	::= { wfIpInterfaceEntry 37 }

wfIpInterfaceIcmpInMsgs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The total number of ICMP messages which includes
		      all those counted by wfIpInterfaceIcmpInErrors."
	::= { wfIpInterfaceEntry 38 }

wfIpInterfaceIcmpInErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP messages which the entity
		     received but determined as having ICMP-specific
		     errors (bad ICMP checksums, bad length, etc.)."
	::= { wfIpInterfaceEntry 39 }

wfIpInterfaceIcmpInDestUnreachs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Destination Unreachable messages received."
	::= { wfIpInterfaceEntry 40 }

wfIpInterfaceIcmpInTimeExcds OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Time Exceeded messages received."
	::= { wfIpInterfaceEntry 41 }

wfIpInterfaceIcmpInParmProbs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Parameter Problem messages received."
	::= { wfIpInterfaceEntry 42 }

wfIpInterfaceIcmpInSrcQuenchs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Source Quench messages received."
	::= { wfIpInterfaceEntry 43 }

wfIpInterfaceIcmpInRedirects OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Redirect messages received."
	::= { wfIpInterfaceEntry 44 }

wfIpInterfaceIcmpInEchos OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Echo (request) messages received."
	::= { wfIpInterfaceEntry 45 }

wfIpInterfaceIcmpInEchoReps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Echo Reply messages received."
	::= { wfIpInterfaceEntry 46 }

wfIpInterfaceIcmpInTimestamps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Timestamp (request) messages received."
	::= { wfIpInterfaceEntry 47 }

wfIpInterfaceIcmpInTimestampReps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Timestamp Reply messages received."
	::= { wfIpInterfaceEntry 48 }

wfIpInterfaceIcmpInAddrMasks OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Address Mask Request messages received."
	::= { wfIpInterfaceEntry 49 }

wfIpInterfaceIcmpInAddrMaskReps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Address Mask Reply messages received."
	::= { wfIpInterfaceEntry 50 }

wfIpInterfaceIcmpOutMsgs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The total number of ICMP messages which this
		     entity attempted to send.  Note that this counter
		     includes all those counted by icmpOutErrors."
	::= { wfIpInterfaceEntry 51 }

wfIpInterfaceIcmpOutErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP messages which this entity did
		     not send due to problems discovered within ICMP
		     such as a lack of buffers.  This value should not
		     include errors discovered outside the ICMP layer
		     such as the inability of IP to route the resultant
		     datagram.  In some implementations there may be no
		     types of error which contribute to this counter's
		     value."
	::= { wfIpInterfaceEntry 52 }

wfIpInterfaceIcmpOutDestUnreachs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Destination Unreachable messages sent."
	::= { wfIpInterfaceEntry 53 }

wfIpInterfaceIcmpOutTimeExcds OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Time Exceeded messages sent."
	::= { wfIpInterfaceEntry 54 }

wfIpInterfaceIcmpOutParmProbs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Parameter Problem messages sent."
	::= { wfIpInterfaceEntry 55 }

wfIpInterfaceIcmpOutSrcQuenchs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Source Quench messages sent."
	::= { wfIpInterfaceEntry 56 }

wfIpInterfaceIcmpOutRedirects OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Redirect messages sent. For a
		     host, this object will always be zero, since hosts
		     do not send redirects."
	::= { wfIpInterfaceEntry 57 }

wfIpInterfaceIcmpOutEchos OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Echo (request) messages sent."
	::= { wfIpInterfaceEntry 58 }

wfIpInterfaceIcmpOutEchoReps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Echo Reply messages sent."
	::= { wfIpInterfaceEntry 59 }

wfIpInterfaceIcmpOutTimestamps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Timestamp (request) messages sent."
	::= { wfIpInterfaceEntry 60 }

wfIpInterfaceIcmpOutTimestampReps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Timestamp Reply messages sent."
	::= { wfIpInterfaceEntry 61 }

wfIpInterfaceIcmpOutAddrMasks OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Address Mask Request messages sent."
	::= { wfIpInterfaceEntry 62 }

wfIpInterfaceIcmpOutAddrMaskReps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ICMP Address Mask Reply messages sent."
	::= { wfIpInterfaceEntry 63 }

wfIpInterfaceTrEndStation OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Use Source Routing over token ring selection. Only applies
		       if pam type is TRING. "
	DEFVAL	{ off }
	::= { wfIpInterfaceEntry 64 }

wfIpInterfaceSMDSGroupAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The SMDS group address "
	::= { wfIpInterfaceEntry 65 }

wfIpInterfaceSMDSArpReqAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The SMDS arp req address "
	::= { wfIpInterfaceEntry 66 }

wfIpInterfaceFRBcastDlci OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Frame Relay broadcast dlci "
	::= { wfIpInterfaceEntry 67 }

wfIpInterfaceFRMcast1Dlci OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Frame Relay multicast dlci #1 "
	::= { wfIpInterfaceEntry 68 }

wfIpInterfaceFRMcast2Dlci OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Frame Relay multicast dlci #2 "
	::= { wfIpInterfaceEntry 69 }

wfIpInterfaceRedirect OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates Whether we're sending out redirects on this Interface or not "
	DEFVAL	{ on }
	::= { wfIpInterfaceEntry 70 }

wfIpInterfaceEnetArpEncaps OBJECT-TYPE
	SYNTAX	INTEGER {
		enet(1),
		snap(2),
		both(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The data link encapsulation type to use for ARP packets
		       if the the media is ethernet. "
	DEFVAL	{ enet }
	::= { wfIpInterfaceEntry 71 }

wfIpInterfaceCacheMisses OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of FFT cache misses (i.e how many times did the
		       cache gate have to do a look up in the RNP because the FFT
		       didn't have the destination network "
	::= { wfIpInterfaceEntry 72 }

wfIpInterfaceCacheNetworks OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of network entries in the FFT "
	::= { wfIpInterfaceEntry 73 }

wfIpInterfaceCacheRemoves OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of networks which have been flushed from the FFT
		       because of aging "
	::= { wfIpInterfaceEntry 74 }

wfIpInterfaceSlotMask OBJECT-TYPE
	SYNTAX	INTEGER {
		default(4261150720)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Slot mask for which slots a circuit-less interface is eligible
		       to run on.  The most significant bit represents slot 1, the
		       next most significant bit represents slot 2, and so on...
		       Slots can be 1-14.  This is only valid if wfIpInterfaceCircuit
		       is 0.
		    "
	DEFVAL	{ default }
	::= { wfIpInterfaceEntry 75 }

wfIpInterfaceEnableSecurity OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enables RIPSO on this interface "
	DEFVAL	{ disable }
	::= { wfIpInterfaceEntry 76 }

wfIpInterfaceStripSecurity OBJECT-TYPE
	SYNTAX	INTEGER {
		incoming(1),
		outgoing(2),
		all(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines which packets will have security option removed.
		       This is a bit mask. "
	::= { wfIpInterfaceEntry 77 }

wfIpInterfaceRequireOutSecurity OBJECT-TYPE
	SYNTAX	INTEGER {
		forwarded(1),
		originated(2),
		all(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines which types of outbound packets are required to have a
		       security option. This is a bit mask. "
	DEFVAL	{ all }
	::= { wfIpInterfaceEntry 78 }

wfIpInterfaceRequireInSecurity OBJECT-TYPE
	SYNTAX	INTEGER {
		yes(1)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines whether or not incoming packets must have security
		       option. This is a bit mask. "
	::= { wfIpInterfaceEntry 79 }

wfIpInterfaceMinLevel OBJECT-TYPE
	SYNTAX	INTEGER {
		unclassified(171),
		confidential(150),
		secret(90),
		topsecret(61)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the minimum level allowed for packets transmitted or
		       received via this interface. 
		         IP_NWIF_LEVEL_UNCLASSIFIED 171 0x000000AB
		          IP_NWIF_LEVEL_CONFIDENTIAL 150 0x00000096
		          IP_NWIF_LEVEL_SECRET 90        0x0000005A
		         IP_NWIF_LEVEL_TOPSECRET 61     0x0000003D
		   "
	DEFVAL	{ unclassified }
	::= { wfIpInterfaceEntry 80 }

wfIpInterfaceMaxLevel OBJECT-TYPE
	SYNTAX	INTEGER {
		unclassified(171),
		confidential(150),
		secret(90),
		topsecret(61)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the maximum level allowed for packets transmitted or
		       received via this interface.
		         IP_NWIF_LEVEL_UNCLASSIFIED 171 0x000000AB
		          IP_NWIF_LEVEL_CONFIDENTIAL 150 0x00000096
		          IP_NWIF_LEVEL_SECRET 90        0x0000005A
		         IP_NWIF_LEVEL_TOPSECRET 61     0x0000003D
		   "
	DEFVAL	{ topsecret }
	::= { wfIpInterfaceEntry 81 }

wfIpInterfaceMustOutAuthority OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the authority bits that must be set in packets
		         transmitted via this interface. This is a bit map. Zero is
		         valid.  Authorities have been defined for the first octet. This is
		         represented by the following 'bit mask' values.
		                IP_NWIF_AUTH_NONE      0  (0x00)
		                IP_NWIF_AUTH_GENSER  128  (0x80)
		                IP_NWIF_AUTH_SIOPESI  64  (0x40)
		                IP_NWIF_AUTH_SCI      32  (0x20)
		                IP_NWIF_AUTH_NSA      16  (0x10)
		                IP_NWIF_AUTH_DOE       8  (0x08)
		                IP_NWIF_AUTH_ALL     248  (0xF8)
		         If no value is specified, the software will default to IP_NWIF_AUTH_NONE.
		    "
	::= { wfIpInterfaceEntry 82 }

wfIpInterfaceMayOutAuthority OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the authority bits that may be set in packets
		         transmitted via this interface. This is a bit map. Zero is
		         valid.  Authorities have been defined for the first octet. This is
		         represented by the following 'bit mask' values.
		                IP_NWIF_AUTH_NONE      0  (0x00)
		                IP_NWIF_AUTH_GENSER  128  (0x80)
		                IP_NWIF_AUTH_SIOPESI  64  (0x40)
		                IP_NWIF_AUTH_SCI      32  (0x20)
		                IP_NWIF_AUTH_NSA      16  (0x10)
		                IP_NWIF_AUTH_DOE       8  (0x08)
		                IP_NWIF_AUTH_ALL     248  (0xF8)
		         If no value is specified, the software will default to IP_NWIF_AUTH_ALL.
		    "
	::= { wfIpInterfaceEntry 83 }

wfIpInterfaceMustInAuthority OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the authority bits that must be set in packets
		         received via this interface. This is a bit map. Zero is
		         valid.  Authorities have been defined for the first octet. This is
		         represented by the following 'bit mask' values.
		                IP_NWIF_AUTH_NONE      0  (0x00)
		                IP_NWIF_AUTH_GENSER  128  (0x80)
		                IP_NWIF_AUTH_SIOPESI  64  (0x40)
		                IP_NWIF_AUTH_SCI      32  (0x20)
		                IP_NWIF_AUTH_NSA      16  (0x10)
		                IP_NWIF_AUTH_DOE       8  (0x08)
		                IP_NWIF_AUTH_ALL     248  (0xF8)
		         If no value is specified, the software will default to IP_NWIF_AUTH_NONE.
		    "
	::= { wfIpInterfaceEntry 84 }

wfIpInterfaceMayInAuthority OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the authority bits that may be set in packets
		         received via this interface. This is a bit map. Zero is
		         valid.  Authorities have been defined for the first octet. This is
		         represented by the following 'bit mask' values.
		                IP_NWIF_AUTH_NONE      0  (0x00)
		                IP_NWIF_AUTH_GENSER  128  (0x80)
		                IP_NWIF_AUTH_SIOPESI  64  (0x40)
		                IP_NWIF_AUTH_SCI      32  (0x20)
		                IP_NWIF_AUTH_NSA      16  (0x10)
		                IP_NWIF_AUTH_DOE       8  (0x08)
		                IP_NWIF_AUTH_ALL     248  (0xF8)
		         If no value is specified, the software will default to IP_NWIF_AUTH_ALL.
		    "
	::= { wfIpInterfaceEntry 85 }

wfIpInterfaceImplicitLabelEnabled OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Should an implicit label be associated with any inbound unlabelled datagrams? "
	DEFVAL	{ enabled }
	::= { wfIpInterfaceEntry 86 }

wfIpInterfaceImplicitAuth OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the authority bits in the implicit label associated with
		       an unlabelled inbound datagram. This is a bit map. 'NONE' means
		       that a 3-byte option label (no authority byte) is used. This field only
		       has meaning if implicit labelling is enabled (wfIpInterfaceImplicitLabelEnabled =
		       IP_NWIF_LABEL_ENABLED).
		       The octets indicate auth values. Authorities have been defined 
		       for the first octet. This is represented by the following 'bit mask' 
		       values:
		                IP_NWIF_AUTH_NONE         0   (0x00)
		                IP_NWIF_AUTH_GENSER     128   (0x80)
		                IP_NWIF_AUTH_SIOPESI     64   (0x40)
		                IP_NWIF_AUTH_SCI         32   (0x20)
		                IP_NWIF_AUTH_NSA         16   (0x10)
		                IP_NWIF_AUTH_DOE          8   (0x08)
		                IP_NWIF_AUTH_ALL        248   (0xF8)
		       If no value is specified and implicit labelling is enabled,
		       the software defaults to IP_NWIF_AUTH_NONE.
		    "
	::= { wfIpInterfaceEntry 87 }

wfIpInterfaceImplicitLevel OBJECT-TYPE
	SYNTAX	INTEGER {
		unclassified(171),
		confidential(150),
		secret(90),
		topsecret(61)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the classification level byte in the implicit label
		        associated with an unlabelled inbound datagram. 
		         IP_NWIF_LEVEL_UNCLASSIFIED 171 0x000000AB
		          IP_NWIF_LEVEL_CONFIDENTIAL 150 0x00000096
		          IP_NWIF_LEVEL_SECRET 90        0x0000005A
		         IP_NWIF_LEVEL_TOPSECRET 61     0x0000003D
		   "
	DEFVAL	{ unclassified }
	::= { wfIpInterfaceEntry 88 }

wfIpInterfaceDefaultLabelEnabled OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Should a default label be associated with any not-yet-labelled oubound datagrams? "
	DEFVAL	{ enabled }
	::= { wfIpInterfaceEntry 89 }

wfIpInterfaceDefaultAuth OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the authority bits in the default label associated with
		       a not-yet-labelled outbound datagram. This is a bit map. 'NONE' means
		       that a 3-byte option label (no authority byte) is used. This field only
		       has meaning if default labelling is enabled (wfIpInterfaceDefaultLabelEnabled =
		       IP_NWIF_LABEL_ENABLED).
		       The octets indicate auth values. Authorities have been defined 
		       for the first octet. This is represented by the following 'bit mask' 
		       values:
		                IP_NWIF_AUTH_NONE         0   (0x00)
		                IP_NWIF_AUTH_GENSER     128   (0x80)
		                IP_NWIF_AUTH_SIOPESI     64   (0x40)
		                IP_NWIF_AUTH_SCI         32   (0x20)
		                IP_NWIF_AUTH_NSA         16   (0x10)
		                IP_NWIF_AUTH_DOE          8   (0x08)
		                IP_NWIF_AUTH_ALL        248   (0xF8)
		       If no value is specified and default labelling is enabled,
		       the software defaults to IP_NWIF_AUTH_NONE.
		    "
	::= { wfIpInterfaceEntry 90 }

wfIpInterfaceDefaultLevel OBJECT-TYPE
	SYNTAX	INTEGER {
		unclassified(171),
		confidential(150),
		secret(90),
		topsecret(61)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the classification level byte to use in the default label
		        associated with a not-yet-labelled outbound datagram. 
		         IP_NWIF_LEVEL_UNCLASSIFIED 171 0x000000AB
		          IP_NWIF_LEVEL_CONFIDENTIAL 150 0x00000096
		          IP_NWIF_LEVEL_SECRET 90        0x0000005A
		         IP_NWIF_LEVEL_TOPSECRET 61     0x0000003D
		   "
	DEFVAL	{ unclassified }
	::= { wfIpInterfaceEntry 91 }

wfIpInterfaceErrorLabelEnabled OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Should an error label be associated with any outbound ICMP error packets?  "
	DEFVAL	{ enabled }
	::= { wfIpInterfaceEntry 92 }

wfIpInterfaceErrorAuth OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the authority bits in the error label associated with
		       any outbount ICMP error packets. This is a bit map. 'NONE' means
		       that a 3-byte option label (no authority byte) is used. This field only
		       has meaning if error labelling is enabled (wfIpInterfaceErrorLabelEnabled =
		       IP_NWIF_LABEL_ENABLED).
		       The octets indicate auth values. Authorities have been defined 
		       for the first octet. This is represented by the following 'bit mask' 
		       values:
		                IP_NWIF_AUTH_NONE         0   (0x00)
		                IP_NWIF_AUTH_GENSER     128   (0x80)
		                IP_NWIF_AUTH_SIOPESI     64   (0x40)
		                IP_NWIF_AUTH_SCI         32   (0x20)
		                IP_NWIF_AUTH_NSA         16   (0x10)
		                IP_NWIF_AUTH_DOE          8   (0x08)
		                IP_NWIF_AUTH_ALL        248   (0xF8)
		       If no value is specified and error labelling is enabled,
		       the software defaults to IP_NWIF_AUTH_NONE
		    "
	::= { wfIpInterfaceEntry 93 }

wfIpInterfaceDropRxAuths OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of received packets dropped because the authority flag(s) were not
		       sufficient. This could mean that the 'must' flags were not all there, or
		       that the flags other than the 'may' flags were specified. "
	::= { wfIpInterfaceEntry 94 }

wfIpInterfaceDropRxFormats OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of received packets dropped because the security option format
		       was invalid. "
	::= { wfIpInterfaceEntry 95 }

wfIpInterfaceDropRxLevels OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of received packets dropped because the classification level was
		       out of range. "
	::= { wfIpInterfaceEntry 96 }

wfIpInterfaceDropRxNoIpsos OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of received packets dropped because no IP security label was present. "
	::= { wfIpInterfaceEntry 97 }

wfIpInterfaceDropTxAuths OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of transmitted packets dropped because the authority flag(s) were not
		      sufficient. This could mean that the 'must' flags were not all there, or
		      that the flags other than the 'may' flags were specified. "
	::= { wfIpInterfaceEntry 98 }

wfIpInterfaceDropTxLevels OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of transmitted packets dropped because the classification level was
		       out of range. "
	::= { wfIpInterfaceEntry 99 }

wfIpInterfaceDropTxNoIpsos OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of packets not transmitted because no IP security label was present. "
	::= { wfIpInterfaceEntry 100 }

wfIpInterfaceDropTxNoIpsoRooms OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of packets not transmitted because there was not enough space left
		       in the IP header to insert an IP security option. "
	::= { wfIpInterfaceEntry 101 }

wfIpInterfaceICMPInAdminProhib OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of ICMP dest unreachable/communication administratively prohibited
		       messages received. Note: may be sent by BFE or another system "
	::= { wfIpInterfaceEntry 102 }

wfIpInterfaceICMPOutAdminProhib OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of ICMP dest unreachable/communication administratively prohibited
		       messages sent. "
	::= { wfIpInterfaceEntry 103 }

wfIpStaticRouteTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpStaticRouteEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of static routes "
	::= { wfIpGroup 5 }

wfIpStaticRouteEntry OBJECT-TYPE
	SYNTAX	WfIpStaticRouteEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A static route definition "
	INDEX	{ wfIpSrIpAddress,
		wfIpSrIpNetMask,
		wfIpSrIpAddressRt }
	::= { wfIpStaticRouteTable 1 }

WfIpStaticRouteEntry ::= SEQUENCE {
	wfIpSrCreate
		INTEGER,
	wfIpSrEnable
		INTEGER,
	wfIpSrIpAddress
		IpAddress,
	wfIpSrIpNetMask
		IpAddress,
	wfIpSrCost
		INTEGER,
	wfIpSrNextHopAddr
		IpAddress,
	wfIpSrNextHopMask
		IpAddress,
	wfIpSrPreference
		INTEGER,
	wfIpSrIpAddressRt
		INTEGER,
	wfIpSrValid
		INTEGER
}

wfIpSrCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Create/Delete parameter. Default is created.
		         Users perform a set operation on this
		         object in order to create/delete the IP
		         Static Route."
	DEFVAL	{ create }
	::= { wfIpStaticRouteEntry 1 }

wfIpSrEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Enable/Disable parameter. Default is enabled.
		          Users perform a set operation on this
		        object in order to enable/disable this IP
		        Static Route."
	DEFVAL	{ enable }
	::= { wfIpStaticRouteEntry 2 }

wfIpSrIpAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Address of this static route "
	::= { wfIpStaticRouteEntry 3 }

wfIpSrIpNetMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP Network Mask for this Static Route "
	::= { wfIpStaticRouteEntry 4 }

wfIpSrCost OBJECT-TYPE
	SYNTAX	INTEGER {
		cost(1)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Cost of this Static Route "
	DEFVAL	{ cost }
	::= { wfIpStaticRouteEntry 5 }

wfIpSrNextHopAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Next Hop IP Address "
	::= { wfIpStaticRouteEntry 6 }

wfIpSrNextHopMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Next Hop IP Netmask "
	::= { wfIpStaticRouteEntry 7 }

wfIpSrPreference OBJECT-TYPE
	SYNTAX	INTEGER {
		pref(16)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This Routes Preference "
	DEFVAL	{ pref }
	::= { wfIpStaticRouteEntry 8 }

wfIpSrIpAddressRt OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Route Identifier Which numbered route this is to be"
	::= { wfIpStaticRouteEntry 9 }

wfIpSrValid OBJECT-TYPE
	SYNTAX	INTEGER {
		valid(1),
		invalid(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Whether this Static Route is valid or not "
	DEFVAL	{ valid }
	::= { wfIpStaticRouteEntry 10 }

wfIpAdjacentHostTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpAdjacentHostEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of Adjacent Hosts (static IP-Mac resolutions) "
	::= { wfIpGroup 6 }

wfIpAdjacentHostEntry OBJECT-TYPE
	SYNTAX	WfIpAdjacentHostEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A description of an adjacent host "
	INDEX	{ wfIpAdjHostIpAddress }
	::= { wfIpAdjacentHostTable 1 }

WfIpAdjacentHostEntry ::= SEQUENCE {
	wfIpAdjHostCreate
		INTEGER,
	wfIpAdjHostEnable
		INTEGER,
	wfIpAdjHostIpAddress
		IpAddress,
	wfIpAdjHostIntf
		IpAddress,
	wfIpAdjHostIntfMask
		IpAddress,
	wfIpAdjHostMacAddr
		OCTET STRING,
	wfIpAdjHostEncaps
		INTEGER,
	wfIpAdjHostValid
		INTEGER,
	wfIpAdjHostX121Addr
		DisplayString
}

wfIpAdjHostCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Whether to Delete this Adjacent Host "
	DEFVAL	{ create }
	::= { wfIpAdjacentHostEntry 1 }

wfIpAdjHostEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Whether to Disable this Host "
	DEFVAL	{ enable }
	::= { wfIpAdjacentHostEntry 2 }

wfIpAdjHostIpAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP address of this Adjacent Host "
	::= { wfIpAdjacentHostEntry 3 }

wfIpAdjHostIntf OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Interface for this Adjacent Host "
	::= { wfIpAdjacentHostEntry 4 }

wfIpAdjHostIntfMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Network Mask of this Intf"
	::= { wfIpAdjacentHostEntry 5 }

wfIpAdjHostMacAddr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The LAN Address for this HOST "
	::= { wfIpAdjacentHostEntry 6 }

wfIpAdjHostEncaps OBJECT-TYPE
	SYNTAX	INTEGER {
		enet(1),
		snap(2),
		pdn(3),
		ddn(4)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The encapsulation type of this entry "
	DEFVAL	{ enet }
	::= { wfIpAdjacentHostEntry 7 }

wfIpAdjHostValid OBJECT-TYPE
	SYNTAX	INTEGER {
		valid(1),
		invalid(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Whether the record passed validation or not "
	DEFVAL	{ valid }
	::= { wfIpAdjacentHostEntry 8 }

wfIpAdjHostX121Addr OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" X.121 address of the Adjacent host, used for PDN/X.25, DDN/X.25 and
		   BFE/X.25 connections. This field is not used for any other X.25
		   connections. "
	::= { wfIpAdjacentHostEntry 9 }

wfIpTrafficFilterTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpTrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" IP Traffic Filters "
	::= { wfIpGroup 7 }

wfIpTrafficFilterEntry OBJECT-TYPE
	SYNTAX	WfIpTrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A traffic filter definition "
	INDEX	{ wfIpTrafficFilterInterface,
		wfIpTrafficFilterCircuit,
		wfIpTrafficFilterRuleNumber,
		wfIpTrafficFilterFragment }
	::= { wfIpTrafficFilterTable 1 }

WfIpTrafficFilterEntry ::= SEQUENCE {
	wfIpTrafficFilterCreate
		INTEGER,
	wfIpTrafficFilterEnable
		INTEGER,
	wfIpTrafficFilterStatus
		INTEGER,
	wfIpTrafficFilterCounter
		Counter,
	wfIpTrafficFilterDefinition
		Opaque,
	wfIpTrafficFilterReserved
		INTEGER,
	wfIpTrafficFilterInterface
		IpAddress,
	wfIpTrafficFilterCircuit
		INTEGER,
	wfIpTrafficFilterRuleNumber
		INTEGER,
	wfIpTrafficFilterFragment
		INTEGER
}

wfIpTrafficFilterCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the existence of the traffic filter rule:
		               created - traffic filter exists
		        delete - traffic filter does not exist and can be deleted. "
	DEFVAL	{ created }
	::= { wfIpTrafficFilterEntry 1 }

wfIpTrafficFilterEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines whether or not the traffic filter rule should be used:
		  enabled - activate the rule.
		  disabled - inactivate the rule. "
	DEFVAL	{ enabled }
	::= { wfIpTrafficFilterEntry 2 }

wfIpTrafficFilterStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		error(2),
		inactive(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Defines the current status of the traffic filter:
		  inactive - the rule is not in use.
		  active - the rule is being used.
		  error - the application detected an error in the rule. "
	DEFVAL	{ inactive }
	::= { wfIpTrafficFilterEntry 3 }

wfIpTrafficFilterCounter OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received packets that have
		           matched this rule. "
	::= { wfIpTrafficFilterEntry 4 }

wfIpTrafficFilterDefinition OBJECT-TYPE
	SYNTAX	Opaque
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The filter rule definition. "
	::= { wfIpTrafficFilterEntry 5 }

wfIpTrafficFilterReserved OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Reserved field. "
	::= { wfIpTrafficFilterEntry 6 }

wfIpTrafficFilterInterface OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The network address of the IP
		    interface to which this filter is applied. "
	::= { wfIpTrafficFilterEntry 7 }

wfIpTrafficFilterCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The ID of the Circuit to which the
		    filter is applied. "
	::= { wfIpTrafficFilterEntry 8 }

wfIpTrafficFilterRuleNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" ID for the rule. "
	::= { wfIpTrafficFilterEntry 9 }

wfIpTrafficFilterFragment OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Fragment number - for large rules. "
	::= { wfIpTrafficFilterEntry 10 }

wfIpForwardTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpForwardEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" IP Forwarding table
		    The IP Forwarding Table obsoletes and replaces the wfIpBaseRt
		    Table  It adds knowledge of the autonomous system of the next hop,
		    multiple next hop support, policy routing support, and supernetting.
		    This is based on the IP Forwarding MIB presented in RFC 1354.  It
		    adds the network mask to the index.
		 "
	::= { wfIpGroup 16 }

wfIpForwardEntry OBJECT-TYPE
	SYNTAX	WfIpForwardEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A forwarding entry "
	INDEX	{ wfIpForwardDest,
		wfIpForwardMask,
		wfIpForwardProto,
		wfIpForwardPolicy,
		wfIpForwardNextHop }
	::= { wfIpForwardTable 1 }

WfIpForwardEntry ::= SEQUENCE {
	wfIpForwardDest
		IpAddress,
	wfIpForwardMask
		IpAddress,
	wfIpForwardPolicy
		INTEGER,
	wfIpForwardNextHop
		IpAddress,
	wfIpForwardIfIndex
		INTEGER,
	wfIpForwardType
		INTEGER,
	wfIpForwardProto
		INTEGER,
	wfIpForwardAge
		INTEGER,
	wfIpForwardInfo
		OBJECT IDENTIFIER,
	wfIpForwardNextHopAS
		INTEGER,
	wfIpForwardMetric1
		INTEGER,
	wfIpForwardMetric2
		INTEGER,
	wfIpForwardMetric3
		INTEGER,
	wfIpForwardMetric4
		INTEGER,
	wfIpForwardMetric5
		INTEGER
}

wfIpForwardDest OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The destination IP address of this route. An
		        entry  with  a value of 0.0.0.0 is considered a
		        default route.
		        This object may not take a Multicast (Class  D)
		        address value.
		        Any assignment (implicit or  otherwise)  of  an
		        instance  of  this  object to a value x must be
		        rejected if the bitwise logical-AND of  x  with
		        the  value of the corresponding instance of the
		        wfIpForwardMask object is not equal to x.  "
	::= { wfIpForwardEntry 1 }

wfIpForwardMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the mask to be logical-ANDed with the
		        destination  address  before  being compared to
		        the value  in  the  wfIpForwardDest  field.   For
		        those  systems  that  do  not support arbitrary
		        subnet masks, an agent constructs the value  of
		        the  ipForwardMask  by  reference to the IP
		        Address Class.
		        Any assignment (implicit or  otherwise)  of  an
		        instance  of  this  object to a value x must be
		        rejected if the bitwise logical-AND of  x  with
		        the  value of the corresponding instance of the
		        wfIpForwardDest object is not equal to wfIpForwardDest.  "
	::= { wfIpForwardEntry 2 }

wfIpForwardPolicy OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The general set of conditions that would cause the
		       selection of one multipath route (set of next hops for
		       a given destination) is referred to as 'policy'.
		       Unless the mechanism indicated by wfIpForwardProtocol
		       specified otherwise, the policy specifier is the IP
		       TOS field.  The encoding of IP TOS is ans specified by the
		       following convention.  Zero indicated the default path if
		       no more specific policy applies.
		                +-----+-----+-----+-----+-----+-----+-----+-----+
		                |                 |                       |     |
		                |   PRECEDENCE    |    TYPE OF SERVICE    |  0  |
		                |                 |                       |     |
		                +-----+-----+-----+-----+-----+-----+-----+-----+
		                         IP TOS                IP TOS
		                    Field     Policy      Field     Policy
		                    Contents    Code      Contents    Code
		                    0 0 0 0  ==>   0      0 0 0 1  ==>   2
		                    0 0 1 0  ==>   4      0 0 1 1  ==>   6
		                    0 1 0 0  ==>   8      0 1 0 1  ==>  10
		                    0 1 1 0  ==>  12      0 1 1 1  ==>  14
		                    1 0 0 0  ==>  16      1 0 0 1  ==>  18
		                    1 0 1 0  ==>  20      1 0 1 1  ==>  22
		                    1 1 0 0  ==>  24      1 1 0 1  ==>  26
		                    1 1 1 0  ==>  28      1 1 1 1  ==>  30
		                Protocols defining 'policy' otherwise must  ei-
		                ther define a set of values which are valid for
		                this  object  or  must  implement  an  integer-
		                instanced  policy table for which this object's
		                value acts as an index. "
	::= { wfIpForwardEntry 3 }

wfIpForwardNextHop OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" On remote routes, the address of the next system
		        en route;  Otherwise, 0.0.0.0  "
	::= { wfIpForwardEntry 4 }

wfIpForwardIfIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The ifIndex value which uniquely identifies the
		        local interface through which the next hop of this
		        route should be reached.  "
	::= { wfIpForwardEntry 5 }

wfIpForwardType OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		invalid(2),
		direct(3),
		indirect(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The type of route. Note that local(3) refers
		        to  a route for which the next hop is the final
		        destination; remote(4) refers to  a  route  for
		        which  the  next  hop is not the final destination. "
	::= { wfIpForwardEntry 6 }

wfIpForwardProto OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		local(2),
		netmgmt(3),
		icmp(4),
		egp(5),
		ggp(6),
		hello(7),
		rip(8),
		isis(9),
		esis(10),
		ospf(13),
		bgp(14),
		idpr(15)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The routing mechanism via which this route was
		        learned.  Inclusion of values for gateway routing
		        protocols is not intended to imply that hosts
		        should support those protocols."
	::= { wfIpForwardEntry 7 }

wfIpForwardAge OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of seconds since this route was last
		        updated or otherwise determined to be correct.
		        Note that no semantics of `too old' can be implied
		        except through knowledge of the routing protocol
		        by which the route was learned.  "
	::= { wfIpForwardEntry 8 }

wfIpForwardInfo OBJECT-TYPE
	SYNTAX	OBJECT IDENTIFIER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A reference to MIB definitions specific to the
		        particular  routing protocol which is responsible
		        for this route, as determined by the  value
		        specified  in the route's wfIpForwardProto value.
		        If this information is not present,  its  value
		        should be set to the OBJECT IDENTIFIER { 0 0 },
		        which is a syntactically valid object  identifier,
		        and any implementation conforming to ASN.1
		        and the Basic Encoding Rules must  be  able  to
		        generate and recognize this value.  "
	::= { wfIpForwardEntry 9 }

wfIpForwardNextHopAS OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Autonomous System Number of the Next Hop.
		        When  this  is  unknown  or not relevant to the
		        protocol indicated by ipForwardProto, zero.  "
	::= { wfIpForwardEntry 10 }

wfIpForwardMetric1 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The primary routing metric for this route. The
		        semantics of this metric are determined by the
		        routing-protocol specified in the route's
		        wfIpRouteProto value.  If this metric is not used,
		        its value should be set to -1."
	::= { wfIpForwardEntry 11 }

wfIpForwardMetric2 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" An alternate routing metric for this route. The
		        semantics of this metric are determined by the
		        routing-protocol specified in the route's
		        wfIpRouteProto value.  If this metric is not used,
		        its value should be set to -1."
	::= { wfIpForwardEntry 12 }

wfIpForwardMetric3 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" An alternate routing metric for this route. The
		        semantics of this metric are determined by the
		        routing-protocol specified in the route's
		        wfIpRouteProto value.  If this metric is not used,
		        its value should be set to -1."
	::= { wfIpForwardEntry 13 }

wfIpForwardMetric4 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" An alternate routing metric for this route. The
		        semantics of this metric are determined by the
		        routing-protocol specified in the route's
		        wfIpRouteProto value.  If this metric is not used,
		        its value should be set to -1."
	::= { wfIpForwardEntry 14 }

wfIpForwardMetric5 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" An alternate routing metric for this route. The
		        semantics of this metric are determined by the
		        routing-protocol specified in the route's
		        wfIpRouteProto value.  If this metric is not used,
		        its value should be set to -1."
	::= { wfIpForwardEntry 15 }

wfRipIntfTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfRipIntfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of configured RIP interfaces "
	::= { wfRipGroup 1 }

wfRipIntfEntry OBJECT-TYPE
	SYNTAX	WfRipIntfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A description of a RIP interface "
	INDEX	{ wfRipInterfaceIndex }
	::= { wfRipIntfTable 1 }

WfRipIntfEntry ::= SEQUENCE {
	wfRipInterfaceCreate
		INTEGER,
	wfRipInterfaceEnable
		INTEGER,
	wfRipInterfaceState
		INTEGER,
	wfRipInterfaceIndex
		IpAddress,
	wfRipInterfaceSupply
		INTEGER,
	wfRipInterfaceListen
		INTEGER,
	wfRipInterfaceDefaultRouteSupply
		INTEGER,
	wfRipInterfaceDefaultRouteListen
		INTEGER,
	wfRipInterfacePoisonedReversed
		INTEGER
}

wfRipInterfaceCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Create/Delete parameter. Default is created.
		         Users perform a set operation on this
		         object in order to create/delete an RIP Interface instance."
	DEFVAL	{ create }
	::= { wfRipIntfEntry 1 }

wfRipInterfaceEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Enable/Disable parameter. Default is enabled.
		         Users perform a set operation on this
		         object in order to enable/disable a RIP interface."
	DEFVAL	{ enable }
	::= { wfRipIntfEntry 2 }

wfRipInterfaceState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpres(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The current state of RIP on this interface."
	DEFVAL	{ notpres }
	::= { wfRipIntfEntry 3 }

wfRipInterfaceIndex OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The IP interface to run RIP on."
	::= { wfRipIntfEntry 4 }

wfRipInterfaceSupply OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Transmit RIP packets."
	DEFVAL	{ enable }
	::= { wfRipIntfEntry 5 }

wfRipInterfaceListen OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Whether to listen to RIP packets "
	DEFVAL	{ enable }
	::= { wfRipIntfEntry 6 }

wfRipInterfaceDefaultRouteSupply OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Transmit the default route, 0.0.0.0, in RIP packets."
	DEFVAL	{ disable }
	::= { wfRipIntfEntry 7 }

wfRipInterfaceDefaultRouteListen OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Receive the default route, 0.0.0.0, in RIP packets."
	DEFVAL	{ disable }
	::= { wfRipIntfEntry 8 }

wfRipInterfacePoisonedReversed OBJECT-TYPE
	SYNTAX	INTEGER {
		poisoned(1),
		actual(2),
		split(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Specifies how the router advertises routes
		          it has learned from a neighboring router in 
		          periodic updates subsequently sent to the 
		          neighbor. If 'Poisoned', the node implements
		          poisoned reverse. The router now advertises
		          routes learned from a neighbor in RIP updates
		          subsequently sent to that neighbor with a 
		          hop count of wfRipBaseRipNetworkDiameter
		          plus 1, (thus declaring the destination
		          unreachable). If 'Split', the router
		          implements a split-horizon, and omits routes
		          learned from a neighbor in RIP updates
		          subsequently sent to that neighbor.  If
		          'Actual', the learned cost of the route
		          is advertised. "
	DEFVAL	{ poisoned }
	::= { wfRipIntfEntry 9 }

wfArpBase	OBJECT IDENTIFIER ::= { wfArpGroup 1 }

wfArpBaseCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Create/Delete parameter. Default is created.
		     Users perform a set operation on this
		     object in order to create/delete ARP."
	DEFVAL	{ created }
	::= { wfArpBase 1 }

wfArpBaseEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable Parameter indicates whether
		       this ARP record is enabled or disabled. "
	DEFVAL	{ enabled }
	::= { wfArpBase 2 }

wfArpBaseForwarding OBJECT-TYPE
	SYNTAX	INTEGER {
		forwarding(1),
		notforwarding(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Equivalent to IP Host Only. This attribute
		       says that ARP should send unknown addresses to the 
		       bridge for further handling "
	DEFVAL	{ forwarding }
	::= { wfArpBase 3 }

wfArpIntfTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfArpIntfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" List of configured ARP interfaces "
	::= { wfArpGroup 2 }

wfArpIntfEntry OBJECT-TYPE
	SYNTAX	WfArpIntfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A description of an ARP interface "
	INDEX	{ wfArpCctno }
	::= { wfArpIntfTable 1 }

WfArpIntfEntry ::= SEQUENCE {
	wfArpCreate
		INTEGER,
	wfArpEnable
		INTEGER,
	wfArpCctno
		INTEGER
}

wfArpCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates whether this ARP intf record is to be deleted or created "
	DEFVAL	{ created }
	::= { wfArpIntfEntry 1 }

wfArpEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates whether this ARP intf record is to be enabled or disabled "
	DEFVAL	{ enabled }
	::= { wfArpIntfEntry 2 }

wfArpCctno OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Which Circuit arp should run on "
	::= { wfArpIntfEntry 3 }

wfIpxBase	OBJECT IDENTIFIER ::= { wfIpxGroup 1 }

wfIpxBaseDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		   Users perform an SNMP SET operation on this
		   object in order to create/delete IPX. "
	DEFVAL	{ created }
	::= { wfIpxBase 1 }

wfIpxBaseDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		   Users perform an SNMP SET operation on this
		   object in order to enable/disable IPX. "
	DEFVAL	{ enabled }
	::= { wfIpxBase 2 }

wfIpxBaseState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		in(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current state of the entire IPX. "
	DEFVAL	{ notpresent }
	::= { wfIpxBase 3 }

wfIpxBaseCfgHostNumber OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Host Number of Router and potential MAC address of box.
		   This host number will be used to overide the default
		   box generated hostnumber. "
	::= { wfIpxBase 4 }

wfIpxBaseActiveHostNumber OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Host Number of Router and potential MAC address of box.
		   This is not a restart variable because this will be
		   filled in from the IPX code after reading it from
		   either the configurable host number or from a box
		   generated variable. "
	::= { wfIpxBase 5 }

wfIpxBaseNetCount OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Count the total number of nets in the box. "
	::= { wfIpxBase 6 }

wfIpxBaseServiceCount OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Count the total number of saps in the box. "
	::= { wfIpxBase 7 }

wfIpxBaseLogFilter OBJECT-TYPE
	SYNTAX	INTEGER {
		debug(1),
		info(2),
		trace(16),
		debuginfo(3),
		debugtrace(17),
		infotrace(18),
		debuginfotrace(19)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Filter out some log messages, Default filters out
		   debugs, info, and trace messages. "
	DEFVAL	{ trace }
	::= { wfIpxBase 8 }

wfIpxBaseNetTblSize OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Tell me how much space to set aside when creating the
		   forwarding and network tables. "
	::= { wfIpxBase 9 }

wfIpxBaseRouterName OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Name of the Router, used for IPXWAN "
	::= { wfIpxBase 10 }

wfIpxBasePrimaryNetNumber OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The 'interfernal' network number, used for IPXWAN "
	::= { wfIpxBase 11 }

wfIpxBaseRipMethod OBJECT-TYPE
	SYNTAX	INTEGER {
		metric(1),
		tick(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Choose either Metric/Hops based or Tick based routing "
	DEFVAL	{ tick }
	::= { wfIpxBase 12 }

wfIpxBaseMaximumPath OBJECT-TYPE
	SYNTAX	INTEGER {
		maxpath(1)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Declare Maximum number equal costs paths allowed for a given destination network "
	DEFVAL	{ maxpath }
	::= { wfIpxBase 13 }

wfIpxBaseHostCount OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Count the total number of hosts in the box. "
	::= { wfIpxBase 14 }

wfIpxBaseMultipleHostAddrs OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Allow the user to configure one host/mac addr for the whole box (default)
		   where, if configured, the CfgHostNumber is used (becomes ActiveHostNubmer)
		   otherwise if left unconfigured the ActiveHostNumber is discerned from the
		   backplane serial number.  If Multiple host is Enabled and the host number is
		   configured in the interface record the configured value is used as the
		   hostid/mac addr of the interface (except Token Ring which can't go into
		   promiscous mode, uses Token Ring Mac as hostid/mac of interface). If the
		   host number in left unconfigured then the hostid/mac is gotten from the
		   mac of the circuit. "
	DEFVAL	{ enabled }
	::= { wfIpxBase 15 }

wfIpxBaseRtEntryTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpxBaseRtEntry
	ACCESS	not-accessible
	STATUS	deprecated
	DESCRIPTION
		" The table of Elements in IPX's routing table "
	::= { wfIpxGroup 2 }

wfIpxBaseRtEntry OBJECT-TYPE
	SYNTAX	WfIpxBaseRtEntry
	ACCESS	not-accessible
	STATUS	deprecated
	DESCRIPTION
		" An entry in the Routing Table "
	INDEX	{ wfIpxBaseRouteDest }
	::= { wfIpxBaseRtEntryTable 1 }

WfIpxBaseRtEntry ::= SEQUENCE {
	wfIpxBaseRouteDest
		OCTET STRING,
	wfIpxBaseRouteIfIndex
		INTEGER,
	wfIpxBaseRouteMetric
		INTEGER,
	wfIpxBaseRouteNextHopNetwork
		OCTET STRING,
	wfIpxBaseRouteNextHopHost
		OCTET STRING,
	wfIpxBaseRouteType
		INTEGER,
	wfIpxBaseRouteProto
		INTEGER,
	wfIpxBaseRouteAge
		INTEGER,
	wfIpxBaseRouteInfo
		OCTET STRING
}

wfIpxBaseRouteDest OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" Multiple routes to a single
		   destination can appear in the table, but access to
		   such multiple entries is dependent on the table-
		   access mechanisms defined by the network
		   management protocol in use. "
	::= { wfIpxBaseRtEntry 1 }

wfIpxBaseRouteIfIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" The index value which uniquely identifies the
		   local interface through which the next hop of this
		   route should be reached.  The interface identified
		   by a particular value of this index is the same
		   interface as identified by the same value of
		   ifIndex. "
	::= { wfIpxBaseRtEntry 2 }

wfIpxBaseRouteMetric OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" The primary routing metric for this route. The
		     semantics of this metric are determined by the
		     routing-protocol specified in the route's
		     ipRouteProto value.  If this metric is not used,
		     its value should be set to -1. "
	::= { wfIpxBaseRtEntry 3 }

wfIpxBaseRouteNextHopNetwork OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" In the case of a route bound to an interface
		   which is realized via a broadcast media, the value
		   of this field is the agent's IPX address on that
		   interface. "
	::= { wfIpxBaseRtEntry 4 }

wfIpxBaseRouteNextHopHost OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" Full network.host_id address of nexthop host for
		   this network. "
	::= { wfIpxBaseRtEntry 5 }

wfIpxBaseRouteType OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		invalid(2),
		direct(3),
		indirect(4),
		static(5)
	}
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" The type of route. Note that the values
		   direct(3) and indirect(4) refer to the notion of
		   direct and indirect routing in the IPX
		   architecture.
		   Setting this object to the value invalid(2) has
		   the effect of invalidating the corresponding entry
		   in the ipRouteTable object.  That is, it
		   effectively dissasociates the destination
		   identified with said entry from the route
		   identified with said entry.  It is an
		   implementation-specific matter as to whether the
		   agent removes an invalidated entry from the table.
		   nagement stations must be prepared
		   to receive tabular information from agents that
		   corresponds to entries not currently in use.
		   Proper interpretation of such entries requires
		   examination of the relevant ipRouteType object. "
	::= { wfIpxBaseRtEntry 6 }

wfIpxBaseRouteProto OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		local(2),
		netmgmt(3),
		rip(4)
	}
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" The routing mechanism via which this route was
		   learned.  Inclusion of values for gateway routing
		   protocols is not intended to imply that hosts
		   should support those protocols. "
	::= { wfIpxBaseRtEntry 7 }

wfIpxBaseRouteAge OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" The number of seconds since this route was last
		   updated or otherwise determined to be correct.
		   Note that no semantics of `too old' can be implied
		   except through knowledge of the routing protocol
		   by which the route was learned. "
	::= { wfIpxBaseRtEntry 8 }

wfIpxBaseRouteInfo OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" A user-defined string which describes this Route entry "
	::= { wfIpxBaseRtEntry 9 }

wfIpxBaseRt2EntryTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpxBaseRt2Entry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The table of Elements in IPX's routing table "
	::= { wfIpxGroup 13 }

wfIpxBaseRt2Entry OBJECT-TYPE
	SYNTAX	WfIpxBaseRt2Entry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Routing Table "
	INDEX	{ wfIpxBaseRoute2Proto,
		wfIpxBaseRoute2Dest,
		wfIpxBaseRoute2NextHopNetwork,
		wfIpxBaseRoute2NextHopHost }
	::= { wfIpxBaseRt2EntryTable 1 }

WfIpxBaseRt2Entry ::= SEQUENCE {
	wfIpxBaseRoute2Dest
		OCTET STRING,
	wfIpxBaseRoute2IfIndex
		INTEGER,
	wfIpxBaseRoute2Ticks
		INTEGER,
	wfIpxBaseRoute2Hops
		INTEGER,
	wfIpxBaseRoute2NextHopNetwork
		OCTET STRING,
	wfIpxBaseRoute2NextHopHost
		OCTET STRING,
	wfIpxBaseRoute2Type
		INTEGER,
	wfIpxBaseRoute2Proto
		INTEGER,
	wfIpxBaseRoute2Age
		INTEGER,
	wfIpxBaseRoute2Info
		OCTET STRING
}

wfIpxBaseRoute2Dest OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Multiple routes to a single
		   destination can appear in the table, but access to
		   such multiple entries is dependent on the table-
		   access mechanisms defined by the network
		   management protocol in use. "
	::= { wfIpxBaseRt2Entry 1 }

wfIpxBaseRoute2IfIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The index value which uniquely identifies the
		   local interface through which the next hop of this
		   route should be reached.  The interface identified
		   by a particular value of this index is the same
		   interface as identified by the same value of
		   ifIndex. "
	::= { wfIpxBaseRt2Entry 2 }

wfIpxBaseRoute2Ticks OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The primary routing metric (in ticks) for this route. The
		     semantics of this metric are determined by the
		     routing-protocol specified in the route's
		     ipRouteProto value.  If this metric is not used,
		     its value should be set to -1. "
	::= { wfIpxBaseRt2Entry 3 }

wfIpxBaseRoute2Hops OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The primary routing metric (in hops) for this route. The
		     semantics of this metric are determined by the
		     routing-protocol specified in the route's
		     ipRouteProto value.  If this metric is not used,
		     its value should be set to -1. "
	::= { wfIpxBaseRt2Entry 4 }

wfIpxBaseRoute2NextHopNetwork OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" In the case of a route bound to an interface
		     which is realized via a broadcast media, the value
		     of this field is the agent's IPX address on that
		     interface. "
	::= { wfIpxBaseRt2Entry 5 }

wfIpxBaseRoute2NextHopHost OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Full network.host_id address of nexthop host for
		   this network. "
	::= { wfIpxBaseRt2Entry 6 }

wfIpxBaseRoute2Type OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		invalid(2),
		direct(3),
		indirect(4),
		static(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The type of route. Note that the values
		   direct(3) and indirect(4) refer to the notion of
		   direct and indirect routing in the IPX
		   architecture.
		   Setting this object to the value invalid(2) has
		   the effect of invalidating the corresponding entry
		   in the ipRouteTable object.  That is, it
		   effectively dissasociates the destination
		   identified with said entry from the route
		   identified with said entry.  It is an
		   implementation-specific matter as to whether the
		   agent removes an invalidated entry from the table.
		   nagement stations must be prepared
		   to receive tabular information from agents that
		   corresponds to entries not currently in use.
		   Proper interpretation of such entries requires
		   examination of the relevant ipRouteType object. "
	::= { wfIpxBaseRt2Entry 7 }

wfIpxBaseRoute2Proto OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		local(2),
		netmgmt(3),
		rip(4),
		nlsp(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The routing mechanism via which this route was
		   learned.  Inclusion of values for gateway routing
		   protocols is not intended to imply that hosts
		   should support those protocols. "
	::= { wfIpxBaseRt2Entry 8 }

wfIpxBaseRoute2Age OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of seconds since this route was last
		   updated or otherwise determined to be correct.
		   Note that no semantics of `too old' can be implied
		   except through knowledge of the routing protocol
		   by which the route was learned. "
	::= { wfIpxBaseRt2Entry 9 }

wfIpxBaseRoute2Info OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A user-defined string which describes this Route entry "
	::= { wfIpxBaseRt2Entry 10 }

wfIpxBaseSapEntryTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpxBaseSapEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The table of Elements in IPX's SAP table "
	::= { wfIpxGroup 3 }

wfIpxBaseSapEntry OBJECT-TYPE
	SYNTAX	WfIpxBaseSapEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Routing Table "
	INDEX	{ wfIpxBaseSapIndex }
	::= { wfIpxBaseSapEntryTable 1 }

WfIpxBaseSapEntry ::= SEQUENCE {
	wfIpxBaseSapType
		OCTET STRING,
	wfIpxBaseSapNetwork
		OCTET STRING,
	wfIpxBaseSapHost
		OCTET STRING,
	wfIpxBaseSapSocket
		OCTET STRING,
	wfIpxBaseSapName
		DisplayString,
	wfIpxBaseSapAge
		INTEGER,
	wfIpxBaseSapHops
		INTEGER,
	wfIpxBaseSapIndex
		OCTET STRING,
	wfIpxBaseSapIntf
		OCTET STRING
}

wfIpxBaseSapType OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Multiple routes to a single
		   destination can appear in the table, but access to
		   such multiple entries is dependent on the table-
		   access mechanisms defined by the network
		   management protocol in use. "
	::= { wfIpxBaseSapEntry 1 }

wfIpxBaseSapNetwork OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The network address of this service. "
	::= { wfIpxBaseSapEntry 2 }

wfIpxBaseSapHost OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The host address for this service. "
	::= { wfIpxBaseSapEntry 3 }

wfIpxBaseSapSocket OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The socket for this particular service "
	::= { wfIpxBaseSapEntry 4 }

wfIpxBaseSapName OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The server name. "
	::= { wfIpxBaseSapEntry 5 }

wfIpxBaseSapAge OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of seconds  since  SAP entry has been updated. "
	::= { wfIpxBaseSapEntry 6 }

wfIpxBaseSapHops OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of Hops away service is from router. "
	::= { wfIpxBaseSapEntry 7 }

wfIpxBaseSapIndex OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Index string comprised of type.network.hostid.socket
		   used to uniquely index this server. "
	::= { wfIpxBaseSapEntry 8 }

wfIpxBaseSapIntf OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Network Address of Nexthop Interface. "
	::= { wfIpxBaseSapEntry 9 }

wfIpxInterfaceTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpxInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The network interface record "
	::= { wfIpxGroup 4 }

wfIpxInterfaceEntry OBJECT-TYPE
	SYNTAX	WfIpxInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Routing Table "
	INDEX	{ wfIpxInterfaceNetworkNumber,
		wfIpxInterfaceCircuit }
	::= { wfIpxInterfaceTable 1 }

WfIpxInterfaceEntry ::= SEQUENCE {
	wfIpxInterfaceIndex
		INTEGER,
	wfIpxInterfaceDelete
		INTEGER,
	wfIpxInterfaceDisable
		INTEGER,
	wfIpxInterfaceState
		INTEGER,
	wfIpxInterfaceCircuit
		INTEGER,
	wfIpxInterfaceNetworkNumber
		OCTET STRING,
	wfIpxInterfaceCost
		INTEGER,
	wfIpxInterfaceXsumOn
		INTEGER,
	wfIpxInterfaceCfgEncaps
		INTEGER,
	wfIpxInterfaceMacAddress
		OCTET STRING,
	wfIpxInterfaceSMDSGroupAddress
		OCTET STRING,
	wfIpxInterfaceMaxInfo
		INTEGER,
	wfIpxInterfaceInReceives
		Counter,
	wfIpxInterfaceInHdrErrors
		Counter,
	wfIpxInterfaceInAddrErrors
		Counter,
	wfIpxInterfaceForwDatagrams
		Counter,
	wfIpxInterfaceInUnknownProtos
		Counter,
	wfIpxInterfaceInDiscards
		Counter,
	wfIpxInterfaceInDelivers
		Counter,
	wfIpxInterfaceOutRequests
		Counter,
	wfIpxInterfaceOutDiscards
		Counter,
	wfIpxInterfaceOutNoRoutes
		Counter,
	wfIpxInterfaceTrEndStation
		INTEGER,
	wfIpxInterfaceNetbiosAccept
		INTEGER,
	wfIpxInterfaceNetbiosDeliver
		INTEGER,
	wfIpxInterfaceWanSapPeriod
		INTEGER,
	wfIpxInterfaceFRBcast
		OCTET STRING,
	wfIpxInterfaceFRMcast
		OCTET STRING,
	wfIpxInterfaceEncaps
		INTEGER,
	wfIpxInterfaceSplit
		INTEGER,
	wfIpxInterfaceCacheHit
		Counter,
	wfIpxInterfaceIpxWanDisable
		INTEGER,
	wfIpxInterfaceIpxWanCommonNet
		OCTET STRING,
	wfIpxInterfaceIpxWanTimeOut
		INTEGER,
	wfIpxInterfaceIpxWanLinkRetry
		INTEGER,
	wfIpxInterfaceWanRipPeriod
		INTEGER,
	wfIpxInterfaceCfgHostNumber
		OCTET STRING,
	wfIpxInterfaceActiveHostNumber
		OCTET STRING
}

wfIpxInterfaceIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A unique value for each IPX interface. Its value
		   ranges between 1 and the value of MAXCIRCUITS. "
	::= { wfIpxInterfaceEntry 1 }

wfIpxInterfaceDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		   Users perform an SNMP SET operation on this
		   object in order to create/delete an IPX interface. "
	DEFVAL	{ created }
	::= { wfIpxInterfaceEntry 2 }

wfIpxInterfaceDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		   Users perform an SNMP SET operation on this
		   object in order to enable/disable an IPX interface. "
	DEFVAL	{ enabled }
	::= { wfIpxInterfaceEntry 3 }

wfIpxInterfaceState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current state of the IPX interface "
	DEFVAL	{ notpresent }
	::= { wfIpxInterfaceEntry 4 }

wfIpxInterfaceCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Circuit Number that this interface runs over "
	::= { wfIpxInterfaceEntry 5 }

wfIpxInterfaceNetworkNumber OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IPX Address to which this entry's
		   addressing information pertains "
	::= { wfIpxInterfaceEntry 6 }

wfIpxInterfaceCost OBJECT-TYPE
	SYNTAX	INTEGER {
		cost(1)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Cost associated with the IPX Address of this entry "
	DEFVAL	{ cost }
	::= { wfIpxInterfaceEntry 7 }

wfIpxInterfaceXsumOn OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Flag for checksums "
	DEFVAL	{ enabled }
	::= { wfIpxInterfaceEntry 8 }

wfIpxInterfaceCfgEncaps OBJECT-TYPE
	SYNTAX	INTEGER {
		ethernet(1),
		lsap(2),
		novell(3),
		snap(4),
		ppp(5)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The encapsulation method associated with this interface
		   chosen by the user but not necessarily the one used.
		   (See wfIpxInterfaceEncaps) "
	DEFVAL	{ ethernet }
	::= { wfIpxInterfaceEntry 9 }

wfIpxInterfaceMacAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The MacAddress of this interface
		   this port will receive or transmit. "
	::= { wfIpxInterfaceEntry 10 }

wfIpxInterfaceSMDSGroupAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The SMDS group address "
	::= { wfIpxInterfaceEntry 11 }

wfIpxInterfaceMaxInfo OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The maximum size of the INFO (non-MAC) field
		   that this port will receive or transmit. "
	::= { wfIpxInterfaceEntry 12 }

wfIpxInterfaceInReceives OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of input datagrams received from
		   interfaces, including those received in error. "
	::= { wfIpxInterfaceEntry 13 }

wfIpxInterfaceInHdrErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of input datagrams discarded due to
		   errors in their IPX headers, including bad
		   checksums, version number mismatch, other format
		   errors, time-to-live exceeded, errors discovered
		   in processing their IPX options, etc. "
	::= { wfIpxInterfaceEntry 14 }

wfIpxInterfaceInAddrErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of input datagrams discarded because
		   the IPX address in their IPX header's destination
		   field was not a valid address to be received at
		   this entity. "
	::= { wfIpxInterfaceEntry 15 }

wfIpxInterfaceForwDatagrams OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of input datagrams for which this
		   entity was not their final IPX destination, as a
		   result of which an attempt was made to find a
		   route to forward them to that final destination.
		   In entities which do not act as IPX Gateways, this
		   counter will include only those packets which were
		   Source-Routed via this entity, and the Source-
		   Route option processing was successful. "
	::= { wfIpxInterfaceEntry 16 }

wfIpxInterfaceInUnknownProtos OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of locally-addressed datagrams
		   received successfully but discarded because of an
		   unknown or unsupported protocol. "
	::= { wfIpxInterfaceEntry 17 }

wfIpxInterfaceInDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of input IPX datagrams for which no
		   problems were encountered to prevent their
		   continued processing, but which were discarded
		   (e.g., for lack of buffer space).  Note that this
		   counter does not include any datagrams discarded
		   while awaiting re-assembly. "
	::= { wfIpxInterfaceEntry 18 }

wfIpxInterfaceInDelivers OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of input datagrams successfully
		   delivered to IPX user-protocols. "
	::= { wfIpxInterfaceEntry 19 }

wfIpxInterfaceOutRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of IPX datagrams which local IPX
		   user-protocols supplied to IPX in
		   requests for transmission.  Note that this counter
		   does not include any datagrams counted in
		   ipxForwDatagrams. "
	::= { wfIpxInterfaceEntry 20 }

wfIpxInterfaceOutDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of output IPX datagrams for which no
		   problem was encountered to prevent their
		   transmission to their destination, but which were
		   discarded (e.g., for lack of buffer space).  Note
		   that this counter would include datagrams counted
		   in ipForwDatagrams if any such packets met this
		   (discretionary) discard criterion. "
	::= { wfIpxInterfaceEntry 21 }

wfIpxInterfaceOutNoRoutes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of IPX datagrams discarded because no
		   route could be found to transmit them to their
		   destination.  Note that this counter includes any
		   packets counted in ipForwDatagrams which meet this
		   `no-route' criterion.  Note that this includes any
		   datagarms which a host cannot route because all of
		   its default gateways are down. "
	::= { wfIpxInterfaceEntry 22 }

wfIpxInterfaceTrEndStation OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Source Routing flag "
	DEFVAL	{ disabled }
	::= { wfIpxInterfaceEntry 23 }

wfIpxInterfaceNetbiosAccept OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Accept NetBios All Networks Broadcast Packets "
	DEFVAL	{ enabled }
	::= { wfIpxInterfaceEntry 24 }

wfIpxInterfaceNetbiosDeliver OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Deliver NetBios All Networks Broadcast Packets "
	DEFVAL	{ enabled }
	::= { wfIpxInterfaceEntry 25 }

wfIpxInterfaceWanSapPeriod OBJECT-TYPE
	SYNTAX	INTEGER {
		default(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configurable timer for SAP updates over LAN-WAN "
	DEFVAL	{ default }
	::= { wfIpxInterfaceEntry 26 }

wfIpxInterfaceFRBcast OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configurable Frame Relay broadcast address "
	::= { wfIpxInterfaceEntry 27 }

wfIpxInterfaceFRMcast OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configurable Frame Relay multicast address "
	::= { wfIpxInterfaceEntry 28 }

wfIpxInterfaceEncaps OBJECT-TYPE
	SYNTAX	INTEGER {
		ethernet(1),
		lsap(2),
		novell(3),
		snap(4),
		ppp(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Active or final encapsulation method associated with
		   this interface as determined by the router's implementation
		   of encapsulation algorithms (rules, restrictions) based on media type. "
	DEFVAL	{ ethernet }
	::= { wfIpxInterfaceEntry 29 }

wfIpxInterfaceSplit OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable or Disable Split Horizon algorithm for this interface
		   Comes into to play for non full-meshed WAN networks (Frame Relay) "
	DEFVAL	{ enabled }
	::= { wfIpxInterfaceEntry 30 }

wfIpxInterfaceCacheHit OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This counter was added for performance investigation under the same
		   category as the number of Nets and number SAP counters.  THis counter
		   Will provide information that will determine the usefullness of caching. "
	::= { wfIpxInterfaceEntry 31 }

wfIpxInterfaceIpxWanDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable IPXWAN negotiations "
	DEFVAL	{ disabled }
	::= { wfIpxInterfaceEntry 32 }

wfIpxInterfaceIpxWanCommonNet OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Common network number for IPXWAN link "
	::= { wfIpxInterfaceEntry 33 }

wfIpxInterfaceIpxWanTimeOut OBJECT-TYPE
	SYNTAX	INTEGER {
		default(60)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" IPXWAN timer out period for negotiation "
	DEFVAL	{ default }
	::= { wfIpxInterfaceEntry 34 }

wfIpxInterfaceIpxWanLinkRetry OBJECT-TYPE
	SYNTAX	INTEGER {
		default(5)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" IPXWAN number of times to retry negotiation "
	DEFVAL	{ default }
	::= { wfIpxInterfaceEntry 35 }

wfIpxInterfaceWanRipPeriod OBJECT-TYPE
	SYNTAX	INTEGER {
		default(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configurable timer for routing updates LAN-WAN "
	DEFVAL	{ default }
	::= { wfIpxInterfaceEntry 36 }

wfIpxInterfaceCfgHostNumber OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Host Number and possible MAC address of interface.
		   This host number will be used to overide the default
		   cct generated hostnumber (if Multiple Host enabled).
		   This field is not valid/used if the IpxBaseMultipleHost is
		   not enabled, if the media is non-promiscuous (Token Ring)
		   or if the field length is not 6 bytes. "
	::= { wfIpxInterfaceEntry 37 }

wfIpxInterfaceActiveHostNumber OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Host Number and possible MAC address of interface.
		   This field will always be filled in by the router and
		   lists the HostNumber of each Interface. "
	::= { wfIpxInterfaceEntry 38 }

wfIpxRipIntfTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpxRipIntfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of RIP interfaces "
	::= { wfIpxGroup 5 }

wfIpxRipIntfEntry OBJECT-TYPE
	SYNTAX	WfIpxRipIntfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Routing Table "
	INDEX	{ wfIpxRipInterfaceIndex }
	::= { wfIpxRipIntfTable 1 }

WfIpxRipIntfEntry ::= SEQUENCE {
	wfIpxRipInterfaceDelete
		INTEGER,
	wfIpxRipInterfaceDisable
		INTEGER,
	wfIpxRipInterfaceState
		INTEGER,
	wfIpxRipInterfaceIndex
		OCTET STRING,
	wfIpxRipInterfaceSupply
		INTEGER,
	wfIpxRipInterfaceListen
		INTEGER
}

wfIpxRipInterfaceDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		   Users perform an SNMP SET operation on this
		   object in order to create/delete an RIP Interface instance. "
	DEFVAL	{ created }
	::= { wfIpxRipIntfEntry 1 }

wfIpxRipInterfaceDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		   Users perform an SNMP SET operation on this
		   object in order to enable/disable an RIP instance. "
	DEFVAL	{ enabled }
	::= { wfIpxRipIntfEntry 2 }

wfIpxRipInterfaceState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current state of RIP on this interface. "
	DEFVAL	{ notpresent }
	::= { wfIpxRipIntfEntry 3 }

wfIpxRipInterfaceIndex OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IPX interface to run RIP on (instance id ). "
	::= { wfIpxRipIntfEntry 4 }

wfIpxRipInterfaceSupply OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Transmit RIP packets. "
	DEFVAL	{ enabled }
	::= { wfIpxRipIntfEntry 5 }

wfIpxRipInterfaceListen OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Receive RIP packets. "
	DEFVAL	{ enabled }
	::= { wfIpxRipIntfEntry 6 }

wfIpxAdjacentHostTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpxAdjacentHostEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Table of configured Static Hosts
		   This is implemented for hosts that are accessible over
		   Frame Relay, SMDS etc.  where a corresponding DLCI address
		   must be configured for a nexthop host. "
	::= { wfIpxGroup 6 }

wfIpxAdjacentHostEntry OBJECT-TYPE
	SYNTAX	WfIpxAdjacentHostEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Adjacent Host Table "
	INDEX	{ wfIpxAhTargHostNetwork,
		wfIpxAhTargHostId }
	::= { wfIpxAdjacentHostTable 1 }

WfIpxAdjacentHostEntry ::= SEQUENCE {
	wfIpxAhDelete
		INTEGER,
	wfIpxAhDisable
		INTEGER,
	wfIpxAhTargHostNetwork
		OCTET STRING,
	wfIpxAhTargHostId
		OCTET STRING,
	wfIpxAhNextHopIntf
		OCTET STRING,
	wfIpxAhDlci
		OCTET STRING
}

wfIpxAhDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		   Users perform an SNMP SET operation on this
		   object in order to create/delete the IPX
		   Static Host. "
	DEFVAL	{ created }
	::= { wfIpxAdjacentHostEntry 1 }

wfIpxAhDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		   Users perform an SNMP SET operation on this
		   object in order to enable/disable this IPX
		   Static Route. "
	DEFVAL	{ enabled }
	::= { wfIpxAdjacentHostEntry 2 }

wfIpxAhTargHostNetwork OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The network address of the static host. "
	::= { wfIpxAdjacentHostEntry 3 }

wfIpxAhTargHostId OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Address of this static host. "
	::= { wfIpxAdjacentHostEntry 4 }

wfIpxAhNextHopIntf OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Next Hop Interface Network Address "
	::= { wfIpxAdjacentHostEntry 5 }

wfIpxAhDlci OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The next Hop Host address "
	::= { wfIpxAdjacentHostEntry 6 }

wfIpxStaticRouteTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpxStaticRouteEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of static routes used for Configuring IPX "
	::= { wfIpxGroup 7 }

wfIpxStaticRouteEntry OBJECT-TYPE
	SYNTAX	WfIpxStaticRouteEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Routing Table "
	INDEX	{ wfIpxSrTargNetwork,
		wfIpxSrNextHopNetwork }
	::= { wfIpxStaticRouteTable 1 }

WfIpxStaticRouteEntry ::= SEQUENCE {
	wfIpxSrDelete
		INTEGER,
	wfIpxSrDisable
		INTEGER,
	wfIpxSrTargNetwork
		OCTET STRING,
	wfIpxSrCost
		INTEGER,
	wfIpxSrNextHopNetwork
		OCTET STRING,
	wfIpxSrNextHopHost
		OCTET STRING,
	wfIpxSrTargNetworkRt
		INTEGER,
	wfIpxSrTickCost
		OCTET STRING
}

wfIpxSrDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		   Users perform an SNMP SET operation on this
		   object in order to create/delete the IPX
		   Static Route. "
	DEFVAL	{ created }
	::= { wfIpxStaticRouteEntry 1 }

wfIpxSrDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		   Users perform an SNMP SET operation on this
		   object in order to enable/disable this IPX
		   Static Route. "
	DEFVAL	{ enabled }
	::= { wfIpxStaticRouteEntry 2 }

wfIpxSrTargNetwork OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Address of this static route "
	::= { wfIpxStaticRouteEntry 3 }

wfIpxSrCost OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Cost of this Static Route in Hops "
	::= { wfIpxStaticRouteEntry 4 }

wfIpxSrNextHopNetwork OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Next Hop IPX Address "
	::= { wfIpxStaticRouteEntry 5 }

wfIpxSrNextHopHost OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The next Hop Host address "
	::= { wfIpxStaticRouteEntry 6 }

wfIpxSrTargNetworkRt OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Route Identifier Which numbered route this is to be "
	::= { wfIpxStaticRouteEntry 7 }

wfIpxSrTickCost OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Cost of this Static Route in Ticks "
	::= { wfIpxStaticRouteEntry 8 }

wfIpxNetBiosStaticRouteTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpxNetBiosStaticRouteEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of static routes used for Configuring IPX "
	::= { wfIpxGroup 8 }

wfIpxNetBiosStaticRouteEntry OBJECT-TYPE
	SYNTAX	WfIpxNetBiosStaticRouteEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Routing Table "
	INDEX	{ wfIpxNetBiosSrTargNetwork,
		wfIpxNetBiosSrIntf }
	::= { wfIpxNetBiosStaticRouteTable 1 }

WfIpxNetBiosStaticRouteEntry ::= SEQUENCE {
	wfIpxNetBiosSrDelete
		INTEGER,
	wfIpxNetBiosSrDisable
		INTEGER,
	wfIpxNetBiosSrTargNetwork
		OCTET STRING,
	wfIpxNetBiosSrName
		DisplayString,
	wfIpxNetBiosSrIntf
		OCTET STRING,
	wfIpxNetBiosSrIndex
		INTEGER
}

wfIpxNetBiosSrDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		   Users perform an SNMP SET operation on this
		   object in order to create/delete the IPX NETBIOS
		   Static Route. "
	DEFVAL	{ created }
	::= { wfIpxNetBiosStaticRouteEntry 1 }

wfIpxNetBiosSrDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		   Users perform an SNMP SET operation on this
		   object in order to enable/disable this IPX NETBIOS
		   Static Route. "
	DEFVAL	{ enabled }
	::= { wfIpxNetBiosStaticRouteEntry 2 }

wfIpxNetBiosSrTargNetwork OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Address of this static route "
	::= { wfIpxNetBiosStaticRouteEntry 3 }

wfIpxNetBiosSrName OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Name of the Target Server "
	::= { wfIpxNetBiosStaticRouteEntry 4 }

wfIpxNetBiosSrIntf OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Interface Identifier for this static entry "
	::= { wfIpxNetBiosStaticRouteEntry 5 }

wfIpxNetBiosSrIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Entry Index Which identifies this is entry "
	::= { wfIpxNetBiosStaticRouteEntry 6 }

wfIpxStaticSapTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpxStaticSapEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The table of Static Services "
	::= { wfIpxGroup 12 }

wfIpxStaticSapEntry OBJECT-TYPE
	SYNTAX	WfIpxStaticSapEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Routing Table "
	INDEX	{ wfIpxStaticSapIntf,
		wfIpxStaticSapCircuit,
		wfIpxStaticSapType,
		wfIpxStaticSapNetwork,
		wfIpxStaticSapSocket }
	::= { wfIpxStaticSapTable 1 }

WfIpxStaticSapEntry ::= SEQUENCE {
	wfIpxStaticSapDelete
		INTEGER,
	wfIpxStaticSapDisable
		INTEGER,
	wfIpxStaticSapType
		OCTET STRING,
	wfIpxStaticSapNetwork
		OCTET STRING,
	wfIpxStaticSapHost
		OCTET STRING,
	wfIpxStaticSapSocket
		OCTET STRING,
	wfIpxStaticSapName
		DisplayString,
	wfIpxStaticSapHops
		INTEGER,
	wfIpxStaticSapIndex
		OCTET STRING,
	wfIpxStaticSapIntf
		OCTET STRING,
	wfIpxStaticSapCircuit
		INTEGER
}

wfIpxStaticSapDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		   Users perform an SNMP SET operation on this
		   object in order to create/delete the IPX
		   Static SAP. "
	DEFVAL	{ created }
	::= { wfIpxStaticSapEntry 1 }

wfIpxStaticSapDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		   Users perform an SNMP SET operation on this
		   object in order to enable/disable this IPX
		   Static Route. "
	DEFVAL	{ enabled }
	::= { wfIpxStaticSapEntry 2 }

wfIpxStaticSapType OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Multiple routes to a single
		   destination can appear in the table, but access to
		   such multiple entries is dependent on the table-
		   access mechanisms defined by the network
		   management protocol in use. "
	::= { wfIpxStaticSapEntry 3 }

wfIpxStaticSapNetwork OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The network address of this service. "
	::= { wfIpxStaticSapEntry 4 }

wfIpxStaticSapHost OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The host address for this service. "
	::= { wfIpxStaticSapEntry 5 }

wfIpxStaticSapSocket OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The socket for this particular service "
	::= { wfIpxStaticSapEntry 6 }

wfIpxStaticSapName OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The server name. "
	::= { wfIpxStaticSapEntry 7 }

wfIpxStaticSapHops OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The number of Hops away service is from router. "
	::= { wfIpxStaticSapEntry 8 }

wfIpxStaticSapIndex OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Index string comprised of intf1.type.network.hostid.socket.
		   Makes sorting easier and its a ah work around. "
	::= { wfIpxStaticSapEntry 9 }

wfIpxStaticSapIntf OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Network Address of Nexthop Interface. "
	::= { wfIpxStaticSapEntry 10 }

wfIpxStaticSapCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Circuit of Nexthop Interface. "
	::= { wfIpxStaticSapEntry 11 }

wfIpxSapNetLvlFilterTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpxSapNetLvlFilter
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of Network Level SAP Filters "
	::= { wfIpxGroup 9 }

wfIpxSapNetLvlFilter OBJECT-TYPE
	SYNTAX	WfIpxSapNetLvlFilter
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Filter Table "
	INDEX	{ wfIpxSapNetLvlIntf,
		wfIpxSapNetLvlIndex }
	::= { wfIpxSapNetLvlFilterTable 1 }

WfIpxSapNetLvlFilter ::= SEQUENCE {
	wfIpxSapNetLvlDelete
		INTEGER,
	wfIpxSapNetLvlDisable
		INTEGER,
	wfIpxSapNetLvlTargNetwork
		OCTET STRING,
	wfIpxSapNetLvlType
		OCTET STRING,
	wfIpxSapNetLvlAction
		INTEGER,
	wfIpxSapNetLvlIntf
		OCTET STRING,
	wfIpxSapNetLvlIndex
		INTEGER
}

wfIpxSapNetLvlDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		   Users perform an SNMP SET operation on this
		   object in order to create/delete the IPX
		   Sap network level filter. "
	DEFVAL	{ created }
	::= { wfIpxSapNetLvlFilter 1 }

wfIpxSapNetLvlDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		   Users perform an SNMP SET operation on this
		   object in order to enable/disable this IPX
		   network level SAP filter. "
	DEFVAL	{ enabled }
	::= { wfIpxSapNetLvlFilter 2 }

wfIpxSapNetLvlTargNetwork OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Target Network address to monitor "
	::= { wfIpxSapNetLvlFilter 3 }

wfIpxSapNetLvlType OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Type of service to monitor "
	::= { wfIpxSapNetLvlFilter 4 }

wfIpxSapNetLvlAction OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		inactive(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Action to take Advertise or not Advertise "
	DEFVAL	{ active }
	::= { wfIpxSapNetLvlFilter 5 }

wfIpxSapNetLvlIntf OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Interface identifier for this filter "
	::= { wfIpxSapNetLvlFilter 6 }

wfIpxSapNetLvlIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Filter Index . "
	::= { wfIpxSapNetLvlFilter 7 }

wfIpxSapServtLvlFilterTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpxSapServLvlFilter
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of Server Level SAP Filters "
	::= { wfIpxGroup 10 }

wfIpxSapServLvlFilter OBJECT-TYPE
	SYNTAX	WfIpxSapServLvlFilter
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Filter Table "
	INDEX	{ wfIpxSapServLvlIntf,
		wfIpxSapServLvlIndex }
	::= { wfIpxSapServtLvlFilterTable 1 }

WfIpxSapServLvlFilter ::= SEQUENCE {
	wfIpxSapServLvlDelete
		INTEGER,
	wfIpxSapServLvlDisable
		INTEGER,
	wfIpxSapServLvlTargServer
		DisplayString,
	wfIpxSapServLvlType
		OCTET STRING,
	wfIpxSapServLvlAction
		INTEGER,
	wfIpxSapServLvlIntf
		OCTET STRING,
	wfIpxSapServLvlIndex
		INTEGER
}

wfIpxSapServLvlDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		   Users perform an SNMP SET operation on this
		   object in order to create/delete the IPX
		   server-level SAP filter. "
	DEFVAL	{ created }
	::= { wfIpxSapServLvlFilter 1 }

wfIpxSapServLvlDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		   Users perform an SNMP SET operation on this
		   object in order to enable/disable this IPX
		   server-level SAP filter. "
	DEFVAL	{ enabled }
	::= { wfIpxSapServLvlFilter 2 }

wfIpxSapServLvlTargServer OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Server Name to monitor. "
	::= { wfIpxSapServLvlFilter 3 }

wfIpxSapServLvlType OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Type of service File server, Printer, etc... "
	::= { wfIpxSapServLvlFilter 4 }

wfIpxSapServLvlAction OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		inactive(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Associated Action (advertise or ignore ) "
	DEFVAL	{ active }
	::= { wfIpxSapServLvlFilter 5 }

wfIpxSapServLvlIntf OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Interface identifier for this filter "
	::= { wfIpxSapServLvlFilter 6 }

wfIpxSapServLvlIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Filter Index . "
	::= { wfIpxSapServLvlFilter 7 }

wfIpxTrafficFilterTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpxTrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" IPX Traffic Filters "
	::= { wfIpxGroup 11 }

wfIpxTrafficFilterEntry OBJECT-TYPE
	SYNTAX	WfIpxTrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A traffic filter definition "
	INDEX	{ wfIpxTrafficFilterInterface,
		wfIpxTrafficFilterCircuit,
		wfIpxTrafficFilterRuleNumber,
		wfIpxTrafficFilterFragment }
	::= { wfIpxTrafficFilterTable 1 }

WfIpxTrafficFilterEntry ::= SEQUENCE {
	wfIpxTrafficFilterCreate
		INTEGER,
	wfIpxTrafficFilterEnable
		INTEGER,
	wfIpxTrafficFilterStatus
		INTEGER,
	wfIpxTrafficFilterCounter
		Counter,
	wfIpxTrafficFilterDefinition
		Opaque,
	wfIpxTrafficFilterReserved
		INTEGER,
	wfIpxTrafficFilterInterface
		OCTET STRING,
	wfIpxTrafficFilterCircuit
		INTEGER,
	wfIpxTrafficFilterRuleNumber
		INTEGER,
	wfIpxTrafficFilterFragment
		INTEGER
}

wfIpxTrafficFilterCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the existence of the traffic filter rule:
		     created - traffic filter exists
		     delete - traffic filter does not exist and can be deleted. "
	DEFVAL	{ created }
	::= { wfIpxTrafficFilterEntry 1 }

wfIpxTrafficFilterEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines whether or not the traffic filter rule should be used:
		     enabled - activate the rule.
		     disabled - inactivate the rule. "
	DEFVAL	{ enabled }
	::= { wfIpxTrafficFilterEntry 2 }

wfIpxTrafficFilterStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		error(2),
		inactive(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Defines the current status of the traffic filter:
		     inactive - the rule is not in use.
		     active - the rule is being used.
		     error - the application detected an error in the rule. "
	DEFVAL	{ inactive }
	::= { wfIpxTrafficFilterEntry 3 }

wfIpxTrafficFilterCounter OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received packets that have
		   matched this rule. "
	::= { wfIpxTrafficFilterEntry 4 }

wfIpxTrafficFilterDefinition OBJECT-TYPE
	SYNTAX	Opaque
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The filter rule definition. "
	::= { wfIpxTrafficFilterEntry 5 }

wfIpxTrafficFilterReserved OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Reserved field. "
	::= { wfIpxTrafficFilterEntry 6 }

wfIpxTrafficFilterInterface OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The network address of the IPX
		   interface to which this filter is applied. "
	::= { wfIpxTrafficFilterEntry 7 }

wfIpxTrafficFilterCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The ID of the Circuit to which the
		   filter is applied. "
	::= { wfIpxTrafficFilterEntry 8 }

wfIpxTrafficFilterRuleNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" ID for the rule. "
	::= { wfIpxTrafficFilterEntry 9 }

wfIpxTrafficFilterFragment OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Fragment number - for large rules. "
	::= { wfIpxTrafficFilterEntry 10 }

wfModemIfTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfModemIfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		    ISDN SYNC  line record
		 "
	::= { wfIsdnGroup 1 }

wfModemIfEntry OBJECT-TYPE
	SYNTAX	WfModemIfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the MODEM_IF table "
	INDEX	{ wfModemIfSlot,
		wfModemIfConnector }
	::= { wfModemIfTable 1 }

WfModemIfEntry ::= SEQUENCE {
	wfModemIfDelete
		INTEGER,
	wfModemIfSlot
		INTEGER,
	wfModemIfConnectStatus
		INTEGER,
	wfModemIfConnector
		INTEGER,
	wfModemIfCct
		INTEGER,
	wfModemIfConnectWhen
		INTEGER,
	wfModemIfConnectionTime
		INTEGER,
	wfModemIfMinDurationTime
		INTEGER,
	wfModemIfInactivityTime
		INTEGER,
	wfModemIfRetryDelayTime
		INTEGER,
	wfModemIfLineBandwidth
		INTEGER,
	wfModemIfChanAggrMax
		INTEGER,
	wfModemIfChanAggrMin
		INTEGER,
	wfModemIfChanMgmt
		INTEGER,
	wfModemIfRestrictType
		INTEGER,
	wfModemIfDialRetryCount
		INTEGER,
	wfModemIfRetries
		Counter,
	wfModemIfForceDial
		INTEGER,
	wfModemIfForceHangup
		INTEGER,
	wfModemIfBringUpHour
		INTEGER,
	wfModemIfBringUpMinute
		INTEGER,
	wfModemIfTakeDownHour
		INTEGER,
	wfModemIfTakeDownMinute
		INTEGER,
	wfModemIfConnectRmtStationNum
		DisplayString,
	wfModemIfConnectSubAddr
		DisplayString,
	wfModemIfMediaType
		INTEGER,
	wfModemIfUpperLayerTimeOut
		INTEGER,
	wfModemIfRingIndicator
		INTEGER
}

wfModemIfDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter "
	DEFVAL	{ created }
	::= { wfModemIfEntry 1 }

wfModemIfSlot OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(14)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance ID Slot, filled in by driver "
	::= { wfModemIfEntry 2 }

wfModemIfConnectStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		connected(1),
		disconnected(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Dial up connection status "
	::= { wfModemIfEntry 3 }

wfModemIfConnector OBJECT-TYPE
	SYNTAX	INTEGER {
		one(1),
		two(2),
		three(3),
		four(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance ID Connector, filled in by driver "
	::= { wfModemIfEntry 4 }

wfModemIfCct OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1023)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" CCT number for this line instance "
	::= { wfModemIfEntry 5 }

wfModemIfConnectWhen OBJECT-TYPE
	SYNTAX	INTEGER {
		data(1),
		enable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" when to connect line "
	DEFVAL	{ data }
	::= { wfModemIfEntry 6 }

wfModemIfConnectionTime OBJECT-TYPE
	SYNTAX	INTEGER {
		connectiontimemin(1),
		connectiontimedef(60)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" connection wait timer interval (Seconds) "
	DEFVAL	{ connectiontimedef }
	::= { wfModemIfEntry 7 }

wfModemIfMinDurationTime OBJECT-TYPE
	SYNTAX	INTEGER {
		durationmin(1),
		durationdef(180)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" min duration time for the call (Seconds) "
	DEFVAL	{ durationdef }
	::= { wfModemIfEntry 8 }

wfModemIfInactivityTime OBJECT-TYPE
	SYNTAX	INTEGER {
		tmomin(1),
		tmodefault(5),
		tmomax(720)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" In the absence of data traffic, the timeout period
		   before a dial line is disconnected.
		   Value is in MINUTES (max 12 hours) "
	DEFVAL	{ tmodefault }
	::= { wfModemIfEntry 9 }

wfModemIfRetryDelayTime OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" delay to wait after retrys fails. NUL_VAL = dont try again "
	::= { wfModemIfEntry 10 }

wfModemIfLineBandwidth OBJECT-TYPE
	SYNTAX	INTEGER {
		bw56k(56),
		bw64k(64),
		bw484k(384),
		bw1536k(1536)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" requested bandwidth.  NULL_VAL = Default not to set bandwidth "
	::= { wfModemIfEntry 11 }

wfModemIfChanAggrMax OBJECT-TYPE
	SYNTAX	INTEGER {
		chanaggrmin(1),
		chanaggrmax(24)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" max number of chans to aggregate. NULL_VAL = Default not to used value.   "
	::= { wfModemIfEntry 12 }

wfModemIfChanAggrMin OBJECT-TYPE
	SYNTAX	INTEGER {
		chanaggrmin(1),
		chanaggrmax(24)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" min number of chans to aggregate. NULL_VAL = Default not to used value.   "
	::= { wfModemIfEntry 13 }

wfModemIfChanMgmt OBJECT-TYPE
	SYNTAX	INTEGER {
		disablemgmt(1),
		minmgmt(2),
		deltamgmt(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" channel mgmt type. NULL_VAL = no management "
	::= { wfModemIfEntry 14 }

wfModemIfRestrictType OBJECT-TYPE
	SYNTAX	INTEGER {
		calls(1)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" call restriction type.
		 NULL_VAL = Default not to restrict calls,
		 1        = Allow defined inbound call numbers only "
	::= { wfModemIfEntry 15 }

wfModemIfDialRetryCount OBJECT-TYPE
	SYNTAX	INTEGER {
		retrymin(1),
		retrydefault(3),
		retrymax(10)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Redial count "
	DEFVAL	{ retrydefault }
	::= { wfModemIfEntry 16 }

wfModemIfRetries OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of retries attempted to connect a dialup line "
	::= { wfModemIfEntry 17 }

wfModemIfForceDial OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Force the modem to dial "
	DEFVAL	{ false }
	::= { wfModemIfEntry 18 }

wfModemIfForceHangup OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Force the modem to disconnect "
	DEFVAL	{ false }
	::= { wfModemIfEntry 19 }

wfModemIfBringUpHour OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Time of day hour to allow a line to dial "
	::= { wfModemIfEntry 20 }

wfModemIfBringUpMinute OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Time of day minute to allow a line to dial "
	::= { wfModemIfEntry 21 }

wfModemIfTakeDownHour OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Time of day hour to take down a dial line "
	::= { wfModemIfEntry 22 }

wfModemIfTakeDownMinute OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Time of day minute to take down a dial line "
	::= { wfModemIfEntry 23 }

wfModemIfConnectRmtStationNum OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Phone number connected to (V.25bis mode only) "
	::= { wfModemIfEntry 24 }

wfModemIfConnectSubAddr OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Phone number sub address for isdn numbers "
	::= { wfModemIfEntry 25 }

wfModemIfMediaType OBJECT-TYPE
	SYNTAX	INTEGER {
		raisedtr(1),
		v25bis(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" modem type "
	::= { wfModemIfEntry 26 }

wfModemIfUpperLayerTimeOut OBJECT-TYPE
	SYNTAX	INTEGER {
		timeoutmin(1),
		timeoutdef(40),
		timeoutmax(60)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" time out value for upper layer protocol initialization (seconds) "
	DEFVAL	{ timeoutdef }
	::= { wfModemIfEntry 27 }

wfModemIfRingIndicator OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Ring Indicator enable/disable  parameter "
	DEFVAL	{ enabled }
	::= { wfModemIfEntry 28 }

wfIsdnOutPhoneNumTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIsdnOutPhoneNumEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		    ISDN outgoing phone number list 
		 "
	::= { wfIsdnGroup 2 }

wfIsdnOutPhoneNumEntry OBJECT-TYPE
	SYNTAX	WfIsdnOutPhoneNumEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the ISDN_SYNC table "
	INDEX	{ wfIsdnOutPhoneNumSlot,
		wfIsdnOutPhoneNumConnector,
		wfIsdnOutPhoneNumIndex }
	::= { wfIsdnOutPhoneNumTable 1 }

WfIsdnOutPhoneNumEntry ::= SEQUENCE {
	wfIsdnOutPhoneNumDelete
		INTEGER,
	wfIsdnOutPhoneNumSlot
		INTEGER,
	wfIsdnOutPhoneNumConnector
		INTEGER,
	wfIsdnOutPhoneNumIndex
		INTEGER,
	wfIsdnOutPhoneNumRmtStationNum
		DisplayString,
	wfIsdnOutPhoneNumSubAddr
		DisplayString
}

wfIsdnOutPhoneNumDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Delete this phone number from the list "
	DEFVAL	{ create }
	::= { wfIsdnOutPhoneNumEntry 1 }

wfIsdnOutPhoneNumSlot OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(14)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" slot of line which uses this number "
	::= { wfIsdnOutPhoneNumEntry 2 }

wfIsdnOutPhoneNumConnector OBJECT-TYPE
	SYNTAX	INTEGER {
		one(1),
		two(2),
		three(3),
		four(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" connector of line which uses this number "
	::= { wfIsdnOutPhoneNumEntry 3 }

wfIsdnOutPhoneNumIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		outnummin(1),
		outnummax(255)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" a unique one up type number to create a list "
	::= { wfIsdnOutPhoneNumEntry 4 }

wfIsdnOutPhoneNumRmtStationNum OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the station address (phone number) of the remote system "
	::= { wfIsdnOutPhoneNumEntry 5 }

wfIsdnOutPhoneNumSubAddr OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" for isdn phone numbers, the sub address portion "
	::= { wfIsdnOutPhoneNumEntry 6 }

wfIsdnInPhoneNumTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIsdnInPhoneNumEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		    ISDN Ingoing phone number list 
		 "
	::= { wfIsdnGroup 3 }

wfIsdnInPhoneNumEntry OBJECT-TYPE
	SYNTAX	WfIsdnInPhoneNumEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the ISDN_SYNC table "
	INDEX	{ wfIsdnInPhoneNumSlot,
		wfIsdnInPhoneNumConnector,
		wfIsdnInPhoneNumIndex }
	::= { wfIsdnInPhoneNumTable 1 }

WfIsdnInPhoneNumEntry ::= SEQUENCE {
	wfIsdnInPhoneNumDelete
		INTEGER,
	wfIsdnInPhoneNumSlot
		INTEGER,
	wfIsdnInPhoneNumConnector
		INTEGER,
	wfIsdnInPhoneNumIndex
		INTEGER,
	wfIsdnInPhoneNumRmtStationNum
		DisplayString,
	wfIsdnInPhoneNumSubAddr
		DisplayString
}

wfIsdnInPhoneNumDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Delete this phone number from the list "
	DEFVAL	{ create }
	::= { wfIsdnInPhoneNumEntry 1 }

wfIsdnInPhoneNumSlot OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(14)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" slot of line which uses this number "
	::= { wfIsdnInPhoneNumEntry 2 }

wfIsdnInPhoneNumConnector OBJECT-TYPE
	SYNTAX	INTEGER {
		one(1),
		two(2),
		three(3),
		four(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" connector of line which uses this number "
	::= { wfIsdnInPhoneNumEntry 3 }

wfIsdnInPhoneNumIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		innummin(1),
		innummax(255)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" a unique one up type number to create a list "
	::= { wfIsdnInPhoneNumEntry 4 }

wfIsdnInPhoneNumRmtStationNum OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the station address (phone number) of the remote system "
	::= { wfIsdnInPhoneNumEntry 5 }

wfIsdnInPhoneNumSubAddr OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" for isdn phone numbers, the sub address portion "
	::= { wfIsdnInPhoneNumEntry 6 }

wfLlc		OBJECT IDENTIFIER ::= { wfLlcGroup 1 }

wfLlcBaseDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - Create/Delete parameter. Default is created.
		     - Users perform an SNMP SET operation on this
		     - object in order to create/delete LLC. 
		     "
	DEFVAL	{ created }
	::= { wfLlc 1 }

wfLlcBaseDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - Enable/Disable parameter. Default is disabled.
		     - Users perform an SNMP SET operation on this
		     - object in order to enable/disable LLC. 
		     "
	DEFVAL	{ enabled }
	::= { wfLlc 2 }

wfLlcBaseState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - The current state of LLC service
		    "
	DEFVAL	{ down }
	::= { wfLlc 3 }

wfLlcInterfaceTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfLlcInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table that contains information about every
		  interface that is associated with this
		  LLC
		 "
	::= { wfLlcGroup 2 }

wfLlcInterfaceEntry OBJECT-TYPE
	SYNTAX	WfLlcInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in wfLlcInterface. "
	INDEX	{ wfLlcInterfaceCircuit }
	::= { wfLlcInterfaceTable 1 }

WfLlcInterfaceEntry ::= SEQUENCE {
	wfLlcInterfaceDelete
		INTEGER,
	wfLlcInterfaceDisable
		INTEGER,
	wfLlcInterfaceState
		INTEGER,
	wfLlcInterfaceCircuit
		INTEGER,
	wfLlcInterfaceLlc2CctId
		INTEGER,
	wfLlc1InterfaceMaxUinfoSize
		INTEGER,
	wfLlc1InterfaceMaxRetry
		INTEGER,
	wfLlc1InterfaceTAckWait
		INTEGER,
	wfLlc2InterfaceMaxInfoSize
		INTEGER,
	wfLlc2InterfaceK
		INTEGER,
	wfLlc2InterfaceN2
		INTEGER,
	wfLlc2InterfaceN3
		INTEGER,
	wfLlc2InterfaceTAckWait
		INTEGER,
	wfLlc2InterfaceTReject
		INTEGER,
	wfLlc2InterfaceTRemoteBusy
		INTEGER,
	wfLlc2InterfaceTRspAck
		INTEGER,
	wfLlc2InterfaceTIdle
		INTEGER,
	wfLlc2InterfaceTPollCycle
		INTEGER,
	wfLlcInterfaceMaxNumOfSap
		INTEGER,
	wfLlcInterfaceMaxNumOfLink
		INTEGER,
	wfLlcInterfaceDupAddrCheck
		INTEGER
}

wfLlcInterfaceDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - Create/Delete parameter. Default is created.
		     - Users perform an SNMP SET operation on this
		     - object in order to create/delete an interface. 
		     "
	DEFVAL	{ created }
	::= { wfLlcInterfaceEntry 1 }

wfLlcInterfaceDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - 
		     - Enable/Disable parameter. Default is enabled.
		     - Users perform an SNMP SET operation on this
		     - object in order to enable/disable an interface.
		     "
	DEFVAL	{ enabled }
	::= { wfLlcInterfaceEntry 2 }

wfLlcInterfaceState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current state of the interface. "
	DEFVAL	{ down }
	::= { wfLlcInterfaceEntry 3 }

wfLlcInterfaceCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The llc1 circuit of this interface. "
	::= { wfLlcInterfaceEntry 4 }

wfLlcInterfaceLlc2CctId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The llc2 circuit number assigned for this slot, line, and llc1 cct. "
	::= { wfLlcInterfaceEntry 5 }

wfLlc1InterfaceMaxUinfoSize OBJECT-TYPE
	SYNTAX	INTEGER {
		min(1),
		max(5128)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - Maximum number of octets in UI PDU. 
		     "
	DEFVAL	{ max }
	::= { wfLlcInterfaceEntry 6 }

wfLlc1InterfaceMaxRetry OBJECT-TYPE
	SYNTAX	INTEGER {
		min(1),
		max(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - Maximum retry limit. Specifeis the 
		     - maximum number of times that an XID
		     - or TEST command PDU is sent following
		     - the running out of the response timer
		     - TResponse
		     "
	DEFVAL	{ max }
	::= { wfLlcInterfaceEntry 7 }

wfLlc1InterfaceTAckWait OBJECT-TYPE
	SYNTAX	INTEGER {
		min(1),
		max(30)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - The amount of time during which the 
		     - LLC shall expect to receive an 
		     - an acknowledgment to a sent unnumbered
		     - XID or TEST command PDU
		     - time in seconds
		     "
	DEFVAL	{ max }
	::= { wfLlcInterfaceEntry 8 }

wfLlc2InterfaceMaxInfoSize OBJECT-TYPE
	SYNTAX	INTEGER {
		min(1),
		max(5128)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - Max number of octets in an I Pdu 
		     "
	DEFVAL	{ max }
	::= { wfLlcInterfaceEntry 9 }

wfLlc2InterfaceK OBJECT-TYPE
	SYNTAX	INTEGER {
		min(1),
		max(7)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - Maximum number of outstanding ( = unacknowledged)
		     - I PDUs. This cannot exceed 127. This value acts
		     - as a default RX window size, when no other 
		     - RX window size gas been agreed upon through
		     - an XID exchange procedure.
		     "
	DEFVAL	{ max }
	::= { wfLlcInterfaceEntry 10 }

wfLlc2InterfaceN2 OBJECT-TYPE
	SYNTAX	INTEGER {
		min(1),
		max(10)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - Maximum number of transmissions. This specifies the 
		     - max number of times that a PDU is sent following the
		     - elapse of the ..
		     - acknowledgment timer
		     - poll timer
		     - reject timer
		     "
	DEFVAL	{ max }
	::= { wfLlcInterfaceEntry 11 }

wfLlc2InterfaceN3 OBJECT-TYPE
	SYNTAX	INTEGER {
		min(1),
		max(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - Maximum number of received I PDUs before 
		     - sending a local acknowledgment to the
		     - transmitter
		     "
	DEFVAL	{ max }
	::= { wfLlcInterfaceEntry 12 }

wfLlc2InterfaceTAckWait OBJECT-TYPE
	SYNTAX	INTEGER {
		min(1),
		max(15)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - Acknowledment timer for  TX window
		     - rotation
		     - time in seconds
		     "
	DEFVAL	{ max }
	::= { wfLlcInterfaceEntry 13 }

wfLlc2InterfaceTReject OBJECT-TYPE
	SYNTAX	INTEGER {
		min(1),
		max(30)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - Reject Timer
		     - time in seconds
		     "
	DEFVAL	{ max }
	::= { wfLlcInterfaceEntry 14 }

wfLlc2InterfaceTRemoteBusy OBJECT-TYPE
	SYNTAX	INTEGER {
		min(1),
		max(60)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - busy state timer 
		     - time in seconds
		     "
	DEFVAL	{ max }
	::= { wfLlcInterfaceEntry 15 }

wfLlc2InterfaceTRspAck OBJECT-TYPE
	SYNTAX	INTEGER {
		min(1),
		max(10)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - Local response timer for remote TX
		     - window rotation
		     - response in seconds
		     "
	DEFVAL	{ max }
	::= { wfLlcInterfaceEntry 16 }

wfLlc2InterfaceTIdle OBJECT-TYPE
	SYNTAX	INTEGER {
		min(1),
		max(120)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - Idle timer
		     - in seconds
		     "
	DEFVAL	{ max }
	::= { wfLlcInterfaceEntry 17 }

wfLlc2InterfaceTPollCycle OBJECT-TYPE
	SYNTAX	INTEGER {
		min(1),
		max(30)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - P/F bit cycle timer (link activity)
		     - time in secs
		     "
	DEFVAL	{ max }
	::= { wfLlcInterfaceEntry 18 }

wfLlcInterfaceMaxNumOfSap OBJECT-TYPE
	SYNTAX	INTEGER {
		min(4),
		max(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		    - maximum number of saps per LLC service
		    - Max = 255 and Min = 4
		    "
	DEFVAL	{ max }
	::= { wfLlcInterfaceEntry 19 }

wfLlcInterfaceMaxNumOfLink OBJECT-TYPE
	SYNTAX	INTEGER {
		min(4),
		max(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - Maximum number of end to end connections
		     - per LLC service
		     - Max = 255 and Min = 4
		     "
	DEFVAL	{ max }
	::= { wfLlcInterfaceEntry 20 }

wfLlcInterfaceDupAddrCheck OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     - Flag to force duplicate address check
		     - Default is DISABLED
		     "
	DEFVAL	{ disabled }
	::= { wfLlcInterfaceEntry 21 }

wfLlcSapTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfLlcSapEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		 - llc sap table
		 "
	::= { wfLlcGroup 3 }

wfLlcSapEntry OBJECT-TYPE
	SYNTAX	WfLlcSapEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in wfLlcSapTable. "
	INDEX	{ wfLlcSapCircuit,
		wfLlcSapValue }
	::= { wfLlcSapTable 1 }

WfLlcSapEntry ::= SEQUENCE {
	wfLlcSapCircuit
		INTEGER,
	wfLlcSapValue
		INTEGER
}

wfLlcSapCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - The llc1  circuit  that this sap is on
		     "
	::= { wfLlcSapEntry 1 }

wfLlcSapValue OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Sap Value
		     "
	::= { wfLlcSapEntry 2 }

wfLlcLinkTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfLlcLinkEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		 - Link table, indexed by slot, circuit, da, sa, dsap, ssap
		 "
	::= { wfLlcGroup 4 }

wfLlcLinkEntry OBJECT-TYPE
	SYNTAX	WfLlcLinkEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in wfLlcLinkTable. "
	INDEX	{ wfLlcLinkCircuit,
		wfLlcLinkDestMadr,
		wfLlcLinkSrcMadr,
		wfLlcLinkDsap,
		wfLlcLinkSsap }
	::= { wfLlcLinkTable 1 }

WfLlcLinkEntry ::= SEQUENCE {
	wfLlcLinkCircuit
		INTEGER,
	wfLlcLinkDestMadr
		OCTET STRING,
	wfLlcLinkSrcMadr
		OCTET STRING,
	wfLlcLinkDsap
		INTEGER,
	wfLlcLinkSsap
		INTEGER,
	wfLlcInfoRxCnt
		Counter,
	wfLlcInfoTxCnt
		Counter,
	wfLlcInfoReXmitCnt
		Counter,
	wfLlcByteInfoRxCnt
		Counter,
	wfLlcByteInfoTxCnt
		Counter,
	wfLlcRrRxCnt
		Counter,
	wfLlcRrTxCnt
		Counter,
	wfLlcRnrRxCnt
		Counter,
	wfLlcRnrTxCnt
		Counter,
	wfLlcRejRxCnt
		Counter,
	wfLlcRejTxCnt
		Counter,
	wfLlcFrmrRxCnt
		Counter,
	wfLlcFrmrTxCnt
		Counter,
	wfLlcFlowDefersCnt
		Counter,
	wfLlcWaitAckTimeouts
		Counter,
	wfLlcRejectTimeouts
		Counter,
	wfLlcPollCycleTimeouts
		Counter,
	wfLlcStateChangeCnt
		Counter,
	wfLlcLastChangeReason
		Counter,
	wfLlcCurrentState
		Counter
}

wfLlcLinkCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - The llc1 circuit that this  da/sa/dsap/ssap pair is on.
		     "
	::= { wfLlcLinkEntry 1 }

wfLlcLinkDestMadr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Destination and source Mac addresses
		     "
	::= { wfLlcLinkEntry 2 }

wfLlcLinkSrcMadr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - source Mac address
		     "
	::= { wfLlcLinkEntry 3 }

wfLlcLinkDsap OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Destination and source sap's
		     "
	::= { wfLlcLinkEntry 4 }

wfLlcLinkSsap OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Source Sap 
		     "
	::= { wfLlcLinkEntry 5 }

wfLlcInfoRxCnt OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for I Pdus rcvd 
		     "
	::= { wfLlcLinkEntry 6 }

wfLlcInfoTxCnt OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for I Pdus sent 
		     "
	::= { wfLlcLinkEntry 7 }

wfLlcInfoReXmitCnt OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for I Pdus re-xmitted
		     "
	::= { wfLlcLinkEntry 8 }

wfLlcByteInfoRxCnt OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for unnnumbered information
		     - Bytes rcvd
		     "
	::= { wfLlcLinkEntry 9 }

wfLlcByteInfoTxCnt OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for unnnumbered information
		     - Bytes sent
		     "
	::= { wfLlcLinkEntry 10 }

wfLlcRrRxCnt OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for RR Pdus rcvd 
		     "
	::= { wfLlcLinkEntry 11 }

wfLlcRrTxCnt OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for RR Pdus Xmted
		     "
	::= { wfLlcLinkEntry 12 }

wfLlcRnrRxCnt OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for RNR Pdus rcvd 
		     "
	::= { wfLlcLinkEntry 13 }

wfLlcRnrTxCnt OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for RNR Pdus sent 
		     "
	::= { wfLlcLinkEntry 14 }

wfLlcRejRxCnt OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for REJ pdus rcvd
		     "
	::= { wfLlcLinkEntry 15 }

wfLlcRejTxCnt OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for REJ pdus xmted
		     "
	::= { wfLlcLinkEntry 16 }

wfLlcFrmrRxCnt OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for frame reject rcvd
		     "
	::= { wfLlcLinkEntry 17 }

wfLlcFrmrTxCnt OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for frame reject sent
		     "
	::= { wfLlcLinkEntry 18 }

wfLlcFlowDefersCnt OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for the number of times LLC is unable
		     - to xmit due to a percieved remote busy condition
		     - or to lack of RX window space
		     "
	::= { wfLlcLinkEntry 19 }

wfLlcWaitAckTimeouts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for expiration of acknowledgment 
		     - timers
		     "
	::= { wfLlcLinkEntry 20 }

wfLlcRejectTimeouts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for the expiration of reject
		     - timeouts
		     "
	::= { wfLlcLinkEntry 21 }

wfLlcPollCycleTimeouts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for the expiration of P/F cycle timer
		     "
	::= { wfLlcLinkEntry 22 }

wfLlcStateChangeCnt OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for number of LLC flow state changes
		     "
	::= { wfLlcLinkEntry 23 }

wfLlcLastChangeReason OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Counter for the most recent incrementing of the
		     - flow state change counter 
		     "
	::= { wfLlcLinkEntry 24 }

wfLlcCurrentState OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     - Current flow state of the LLC link station
		     "
	::= { wfLlcLinkEntry 25 }

wfLlc2TrafficFilterTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfLlc2TrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" LLC2 Traffic Filters "
	::= { wfLlcGroup 8 }

wfLlc2TrafficFilterEntry OBJECT-TYPE
	SYNTAX	WfLlc2TrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in WfLLC2TrafficFilterTable. "
	INDEX	{ wfLlc2TrafficFilterCircuit,
		wfLlc2TrafficFilterRuleNumber,
		wfLlc2TrafficFilterFragment }
	::= { wfLlc2TrafficFilterTable 1 }

WfLlc2TrafficFilterEntry ::= SEQUENCE {
	wfLlc2TrafficFilterCreate
		INTEGER,
	wfLlc2TrafficFilterEnable
		INTEGER,
	wfLlc2TrafficFilterStatus
		INTEGER,
	wfLlc2TrafficFilterCounter
		Counter,
	wfLlc2TrafficFilterDefinition
		OCTET STRING,
	wfLlc2TrafficFilterReserved
		INTEGER,
	wfLlc2TrafficFilterCircuit
		INTEGER,
	wfLlc2TrafficFilterRuleNumber
		INTEGER,
	wfLlc2TrafficFilterFragment
		INTEGER
}

wfLlc2TrafficFilterCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the existence of the traffic filter rule:
		                created - traffic filter exists
		                delete - traffic filter does not exist and can be deleted. "
	DEFVAL	{ created }
	::= { wfLlc2TrafficFilterEntry 1 }

wfLlc2TrafficFilterEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines whether or not the traffic filter rule should be used:
		                enabled - activate the rule.
		                disabled - inactivate the rule. "
	DEFVAL	{ enabled }
	::= { wfLlc2TrafficFilterEntry 2 }

wfLlc2TrafficFilterStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		error(2),
		inactive(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Defines the current status of the traffic filter:
		                inactive - the rule is not in use.
		                active - the rule is being used.
		                error - the application detected an error in the rule. "
	DEFVAL	{ inactive }
	::= { wfLlc2TrafficFilterEntry 3 }

wfLlc2TrafficFilterCounter OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received packets that have
		           matched this rule. "
	::= { wfLlc2TrafficFilterEntry 4 }

wfLlc2TrafficFilterDefinition OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The filter rule definition. "
	::= { wfLlc2TrafficFilterEntry 5 }

wfLlc2TrafficFilterReserved OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Reserved field. "
	::= { wfLlc2TrafficFilterEntry 6 }

wfLlc2TrafficFilterCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The ID of the Bridge Circuit to which the
		           filter is applied. "
	::= { wfLlc2TrafficFilterEntry 7 }

wfLlc2TrafficFilterRuleNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" ID for the rule. "
	::= { wfLlc2TrafficFilterEntry 8 }

wfLlc2TrafficFilterFragment OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Fragment number - for large rules. "
	::= { wfLlc2TrafficFilterEntry 9 }

wfProtocols	OBJECT IDENTIFIER ::= { wfSoftwareConfig 1 }

wfIPROTOLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the IP components on
		   slots 1-14.  The MSBit represents slot 1, the next most
		   significant bit represents slot 2, and so forth. "
	::= { wfProtocols 1 }

wfDECNETLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the DECNet router on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents
		   slot 2, and so forth. "
	::= { wfProtocols 2 }

wfATLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the AppleTalk router on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents
		   slot 2, and so forth. "
	::= { wfProtocols 3 }

wfXNSLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the XNS router on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents
		   slot 2, and so forth. "
	::= { wfProtocols 4 }

wfIPXLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the IPX router on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents
		   slot 2, and so forth. "
	::= { wfProtocols 5 }

wfOSILoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the ISO router on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents
		   slot 2, and so forth. "
	::= { wfProtocols 6 }

wfX25DTELoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the X.25 DTE protocol on slots 1-14. The
		   MSBit represents slot 1, the next most significant bit
		   represents slot 2, and so forth. "
	::= { wfProtocols 7 }

wfX25DCELoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the X.25 DCE protocol on slots 1-14. The
		   MSBit represents slot 1, the next most significant bit
		   represents slot 2, and so forth. "
	::= { wfProtocols 8 }

wfVINESLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the VINES router on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents
		   slot 2, and so forth. "
	::= { wfProtocols 9 }

wfFRLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the Frame Relay master on slots 1-14. The
		   MSBit represents slot 1, and so forth. "
	::= { wfProtocols 10 }

wfRARPLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading Reverse ARP master on slots 1-14. The
		   MSBit represents slot 1, and so forth. "
	::= { wfProtocols 11 }

wfATMLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the ATM master on slots 1-14. The
		   MSBit represents slot 1, and so forth. "
	::= { wfProtocols 12 }

wfDLSLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the DLS master on slots 1-14. The
		   MSBit represents slot 1, and so forth. "
	::= { wfProtocols 13 }

wfLNMLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the LNM master on slots 1-14. The
		   MSBit represents slot 1, and so forth. "
	::= { wfProtocols 14 }

wfTelnetLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the Telnet protocol on slots 1-14. The
		   MSBit represents slot 1, and so forth. "
	::= { wfProtocols 15 }

wfTFTPLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the TFTP protocol on slots 1-14. The
		   MSBit represents slot 1, and so forth. "
	::= { wfProtocols 16 }

wfSNMPLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the SNMP protocol on slots 1-14. The
		   MSBit represents slot 1, and so forth. "
	::= { wfProtocols 17 }

wfTCPLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the TCP protocol on slots 1-14. The
		   MSBit represents slot 1, and so forth. "
	::= { wfProtocols 18 }

wfBGPLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the BGP protocol on slots 1-14. The
		   MSBit represents slot 1, and so forth. "
	::= { wfProtocols 19 }

wfEGPLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the EGP protocol on slots 1-14. The
		   MSBit represents slot 1, and so forth. "
	::= { wfProtocols 20 }

wfOSPFLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the OSPF protocol on slots 1-14. The
		   MSBit represents slot 1, and so forth. "
	::= { wfProtocols 21 }

wfWPROXYLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the WPROXY protocols on slots 1-14. The
		   MSBit represents slot 1, and so forth. "
	::= { wfProtocols 22 }

wfLLC2Load OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the LLC2 master on slots 1-14. The
		   MSBit represents slot 1, and so forth. "
	::= { wfProtocols 23 }

wfSMDSLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the SMDS protocol on slots 1-14. The MSBit
		   represents slot 1, and so forth. "
	::= { wfProtocols 24 }

wfPPPLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading PPP on slots 1-14. The MSBit
		   represents slot2, and so forth. "
	::= { wfProtocols 25 }

wfLinkModules	OBJECT IDENTIFIER ::= { wfSoftwareConfig 2 }

wfENETIILoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the Ethernet II driver on slots 1-14. The
		   MSBit represents slot 1, the next most significant bit
		   represents slot 2, and so forth. "
	::= { wfLinkModules 1 }

wfQENETLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the Quad Ethernet driver on slots 1-14. The
		   MSBit represents slot 1, the next most significant bit
		   represents slot 2, and so forth. "
	::= { wfLinkModules 2 }

wfFDDILoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the FDDI driver on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents slot 2
		   and so forth. "
	::= { wfLinkModules 3 }

wfDSDELoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the Dual Sync - Dual Enet driver on slots 1-14.
		   The MSBit represents slot 1, the next most significant bit
		   represents slot 2, and so forth. "
	::= { wfLinkModules 4 }

wfDSDEIILoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the Dual Sync - Dual Enet II driver on slots
		   1-14.  The MSBit represents slot 1, the next most significant
		   bit represents slot 2, and so forth. "
	::= { wfLinkModules 5 }

wfQSYNCLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the Quad Sync driver on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents
		   slot 2, and so forth. "
	::= { wfLinkModules 6 }

wfDTLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the Dual Token driver on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents slot 2
		   and so forth. "
	::= { wfLinkModules 7 }

wfDSTLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the DST driver on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents slot 2
		   and so forth. "
	::= { wfLinkModules 8 }

wfT1IILoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the T1 II driver on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents slot 2
		   and so forth. "
	::= { wfLinkModules 9 }

wfE1IILoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the E1 II driver on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents slot 2
		   and so forth. "
	::= { wfLinkModules 10 }

wfHSSILoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the HSSI driver on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents slot 2
		   and so forth. "
	::= { wfLinkModules 11 }

wfFNSDSELoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the FNSDSE driver on slot 2 (FNES Only). The MSBit
		   represents slot 1, the next most significant bit represents slot 2
		   and so forth. "
	::= { wfLinkModules 12 }

wfFNSDSDTLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the FNSDSDT driver on slot 2 (FNTS Only). The MSBit
		   represents slot 1, the next most significant bit represents slot 2
		   and so forth. "
	::= { wfLinkModules 13 }

wfMCT1Load OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the MCT1 driver on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents slot 2
		   and so forth. "
	::= { wfLinkModules 14 }

wfANLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the AN (AccessNode) driver. The MSBit represents slot 1,
		   the next most significant bit represents slot 2 and so forth. "
	::= { wfLinkModules 15 }

wfFNSDSETLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the FNSDSET (ie. Fibermux IN Special) driver on
		   slot 2 (IN Only). The MSBit represents slot 1, the next most 
		   significant bit represents slot 2 and so forth. "
	::= { wfLinkModules 16 }

wfDrivers	OBJECT IDENTIFIER ::= { wfSoftwareConfig 3 }

wfLANCELoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the LANCE chip driver on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents slot 2
		   and so forth. "
	::= { wfDrivers 1 }

wfILACCLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the ILACC chip driver on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents slot 2
		   and so forth. "
	::= { wfDrivers 2 }

wfFSILoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the FDDI System Interface (FSI) chip driver on
		   slots 1-14. The MSBit represents slot 1, the next most significant
		   bit represents slot 2 and so forth. This attribute shall be used to
		   configure the FSI chip driver on the appropriate slots for FDDI only
		   (see wfHSSIFSILoad for other usage). "
	::= { wfDrivers 3 }

wfTMS380Load OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the TMS380 chip driver on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents slot 2
		   and so forth. "
	::= { wfDrivers 4 }

wfMK5025Load OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the MK5025 chip driver on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents slot 2
		   and so forth. "
	::= { wfDrivers 5 }

wfDS2180Load OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the DS2180 chip driver on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents slot 2
		   and so forth. "
	::= { wfDrivers 6 }

wfDS2181Load OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the DS2181 chip driver on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents slot 2
		   and so forth. "
	::= { wfDrivers 7 }

wfDEFALoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the AM99C10 chip driver on slots 1-14. The MSBit
		   represents slot 1, the next most significant bit represents slot 2
		   and so forth. The AM99C10 chip is Content Addressable Memory (CAM)
		   and the driver to control it is represented by this attribute. The
		   generic name of this attribute shall be the Hardware Filter Driver
		   which will also provide control of the Dual Ethernet Filter
		   Accelerator (DEFA) chip. "
	::= { wfDrivers 8 }

wfAMZ8530Load OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the AMZ8530 chip driver on slots 1-14. The
		   MSBit represents slot 1, the next most significant bit represents
		   slot 2, and so forth. "
	::= { wfDrivers 9 }

wfHSSIFSILoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the HSSI FSI chip driver on slots 1-14. The
		   MSBit represents slot 1, the next most significant bit represents
		   slot 2, and so forth. "
	::= { wfDrivers 10 }

wfMUNICHT1Load OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the MUNICH chip driver on slots 1-14. The
		    MSBit represents slot 1, the next most significant bit represents
		    slot 2, and so forth. The MUNICH chip is used on the MCT1 and
		    MCE1 link modules"
	::= { wfDrivers 11 }

wfQsccSyncLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the Sync QUICC chip driver on slots 1-14. The
		   MSBit represents slot 1, the next most significant bit represents
		   slot 2, and so forth. "
	::= { wfDrivers 12 }

wfQsccEnetLoad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit mask for loading the Ethernet QUICC chip driver on slots 1-14. The
		   MSBit represents slot 1, the next most significant bit represents
		   slot 2, and so forth. "
	::= { wfDrivers 13 }

wfLnm		OBJECT IDENTIFIER ::= { wfLanManagerGroup 1 }

wfLnmDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		  Users perform an SNMP SET operation on this
		  object in order to create/delete the LNM Servers subsystem. "
	DEFVAL	{ created }
	::= { wfLnm 1 }

wfLnmDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		  Users perform an SNMP SET operation on this
		  object in order to enable/disable the LNM Servers subsystem. "
	DEFVAL	{ enabled }
	::= { wfLnm 2 }

wfLnmState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current state of the LNM Servers subsystem. "
	DEFVAL	{ down }
	::= { wfLnm 3 }

wfLnmLnmSetsDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Allow or disallow Lan Manager to SET MIB values "
	DEFVAL	{ disabled }
	::= { wfLnm 4 }

wfLnmInternalLanId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The internal LAN id matches exactly wfBrSrBaseInternalLanId
		  in the source routing mib.  It is written here, but not 
		  displayed. "
	::= { wfLnm 5 }

wfLnmBridgeId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The bridge id matches exactly wfBrSrBaseBridgeId
		  in the source routing mib.  It is written here, but not 
		  displayed. "
	::= { wfLnm 6 }

wfLnmInterfaceTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfLnmInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" table of instances "
	::= { wfLanManagerGroup 2 }

wfLnmInterfaceEntry OBJECT-TYPE
	SYNTAX	WfLnmInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the LNM table "
	INDEX	{ wfLnmInterfaceMacCircuit }
	::= { wfLnmInterfaceTable 1 }

WfLnmInterfaceEntry ::= SEQUENCE {
	wfLnmInterfaceDelete
		INTEGER,
	wfLnmInterfaceDisable
		INTEGER,
	wfLnmInterfaceCircuit
		INTEGER,
	wfLnmInterfaceMacCircuit
		INTEGER,
	wfLnmInterfaceRemoteMac
		OCTET STRING,
	wfLnmInterfaceLrmDisable
		INTEGER,
	wfLnmInterfaceLrmState
		INTEGER,
	wfLnmInterfaceLbsState
		INTEGER,
	wfLnmInterfaceRemDisable
		INTEGER,
	wfLnmInterfaceRemState
		INTEGER,
	wfLnmInterfaceRpsDisable
		INTEGER,
	wfLnmInterfaceRpsState
		INTEGER,
	wfLnmInterfaceCrsDisable
		INTEGER,
	wfLnmInterfaceCrsState
		INTEGER,
	wfLnmInterfaceCtrlMgrPswd
		DisplayString,
	wfLnmInterfaceOb1MgrPswd
		DisplayString,
	wfLnmInterfaceOb2MgrPswd
		DisplayString,
	wfLnmInterfaceOb3MgrPswd
		DisplayString,
	wfLnmInterfaceCtrlMgrMac
		OCTET STRING,
	wfLnmInterfaceOb1MgrMac
		OCTET STRING,
	wfLnmInterfaceOb2MgrMac
		OCTET STRING,
	wfLnmInterfaceOb3MgrMac
		OCTET STRING,
	wfLnmInterfaceWghtTrshld
		INTEGER,
	wfLnmInterfaceLrmCngstnErrs
		Counter,
	wfLnmInterfaceLrmRxErrors
		Counter,
	wfLnmInterfaceRemRxErrors
		Counter,
	wfLnmInterfaceRpsRxErrors
		Counter,
	wfLnmInterfaceCrsRxErrors
		Counter,
	wfLnmInterfaceLbsRxErrors
		Counter
}

wfLnmInterfaceDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" A flag to allow an entire row to be deleted "
	DEFVAL	{ created }
	::= { wfLnmInterfaceEntry 1 }

wfLnmInterfaceDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 - Enable/Disable parameter. Default is enabled.
		 - Users perform an SNMP SET operation on this
		 - object in order to enable/disable an interface.
		 "
	DEFVAL	{ enabled }
	::= { wfLnmInterfaceEntry 2 }

wfLnmInterfaceCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" circuit number for LLC2 - filled in by Site Man "
	::= { wfLnmInterfaceEntry 3 }

wfLnmInterfaceMacCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" circuit number for MAC "
	::= { wfLnmInterfaceEntry 4 }

wfLnmInterfaceRemoteMac OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Site Man will suggest a value, but the user can override. "
	::= { wfLnmInterfaceEntry 5 }

wfLnmInterfaceLrmDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" LRM server can be turned on/off "
	DEFVAL	{ enabled }
	::= { wfLnmInterfaceEntry 6 }

wfLnmInterfaceLrmState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" There is only a state - enabling LNM Servers automatically enables LRM "
	DEFVAL	{ notpresent }
	::= { wfLnmInterfaceEntry 7 }

wfLnmInterfaceLbsState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" There is no corresponding enable for LBS "
	DEFVAL	{ up }
	::= { wfLnmInterfaceEntry 8 }

wfLnmInterfaceRemDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" REM server can be turned on/off "
	DEFVAL	{ enabled }
	::= { wfLnmInterfaceEntry 9 }

wfLnmInterfaceRemState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" REM state parameter - can be active or not "
	DEFVAL	{ up }
	::= { wfLnmInterfaceEntry 10 }

wfLnmInterfaceRpsDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" RPS server can be turned on/off "
	DEFVAL	{ enabled }
	::= { wfLnmInterfaceEntry 11 }

wfLnmInterfaceRpsState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" RPS state - actively forwarding to LAN Manager, or only collecting stats "
	DEFVAL	{ up }
	::= { wfLnmInterfaceEntry 12 }

wfLnmInterfaceCrsDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" CRS server can be turned on/off "
	DEFVAL	{ enabled }
	::= { wfLnmInterfaceEntry 13 }

wfLnmInterfaceCrsState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" CRS state - actively forwarding to LAN Manager, or only collecting stats "
	DEFVAL	{ up }
	::= { wfLnmInterfaceEntry 14 }

wfLnmInterfaceCtrlMgrPswd OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Controlling LAN Manager Password; default = all 0s "
	::= { wfLnmInterfaceEntry 15 }

wfLnmInterfaceOb1MgrPswd OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Observing LAN Manager Password; default = all 0s "
	::= { wfLnmInterfaceEntry 16 }

wfLnmInterfaceOb2MgrPswd OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Observing LAN Manager Password; default = all 0s "
	::= { wfLnmInterfaceEntry 17 }

wfLnmInterfaceOb3MgrPswd OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Observing LAN Manager Password; default = all 0s "
	::= { wfLnmInterfaceEntry 18 }

wfLnmInterfaceCtrlMgrMac OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Controlling LAN Manager Location; default = all 0s "
	::= { wfLnmInterfaceEntry 19 }

wfLnmInterfaceOb1MgrMac OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Observing LAN Manager Location; default = all 0s "
	::= { wfLnmInterfaceEntry 20 }

wfLnmInterfaceOb2MgrMac OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Observing LAN Manager Location; default = all 0s "
	::= { wfLnmInterfaceEntry 21 }

wfLnmInterfaceOb3MgrMac OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Observing LAN Manager Location; default = all 0s "
	::= { wfLnmInterfaceEntry 22 }

wfLnmInterfaceWghtTrshld OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(10),
		defval(128),
		maximum(256)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Error rate threshold - defaults to 128 "
	DEFVAL	{ defval }
	::= { wfLnmInterfaceEntry 23 }

wfLnmInterfaceLrmCngstnErrs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Measure the number of packets LRM drops "
	::= { wfLnmInterfaceEntry 24 }

wfLnmInterfaceLrmRxErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Measure the number of packets LRM can't parse "
	::= { wfLnmInterfaceEntry 25 }

wfLnmInterfaceRemRxErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Measure the number of packets REM can't parse "
	::= { wfLnmInterfaceEntry 26 }

wfLnmInterfaceRpsRxErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Measure the number of packets RPS can't parse "
	::= { wfLnmInterfaceEntry 27 }

wfLnmInterfaceCrsRxErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Measure the number of packets CRS can't parse "
	::= { wfLnmInterfaceEntry 28 }

wfLnmInterfaceLbsRxErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Measure the number of packets LBS can't parse "
	::= { wfLnmInterfaceEntry 29 }

wfMibHeapTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfMibHeapEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Table of MIB Heap Manager Stats, indexed by slot number "
	::= { wfMibHeapGroup 1 }

wfMibHeapEntry OBJECT-TYPE
	SYNTAX	WfMibHeapEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A particular interface "
	INDEX	{ wfMibHeapSlot }
	::= { wfMibHeapTable 1 }

WfMibHeapEntry ::= SEQUENCE {
	wfMibHeapSlot
		INTEGER,
	wfMibHeapMemorySize
		INTEGER,
	wfMibHeapBoundrySize
		INTEGER,
	wfMibHeapPageSize
		INTEGER,
	wfMibHeapTotalPages
		INTEGER,
	wfMibHeapTotalSegs
		INTEGER,
	wfMibHeapSegsFree
		INTEGER,
	wfMibHeapSmlstSeg
		INTEGER,
	wfMibHeapLrgstSeg
		INTEGER,
	wfMibHeapStartSize
		INTEGER,
	wfMibHeapSize1
		INTEGER,
	wfMibHeapSize1SegsFree
		INTEGER,
	wfMibHeapSize1SegsTotal
		INTEGER,
	wfMibHeapSize1Pages
		INTEGER,
	wfMibHeapSize2
		INTEGER,
	wfMibHeapSize2SegsFree
		INTEGER,
	wfMibHeapSize2SegsTotal
		INTEGER,
	wfMibHeapSize2Pages
		INTEGER,
	wfMibHeapSize3
		INTEGER,
	wfMibHeapSize3SegsFree
		INTEGER,
	wfMibHeapSize3SegsTotal
		INTEGER,
	wfMibHeapSize3Pages
		INTEGER,
	wfMibHeapSize4
		INTEGER,
	wfMibHeapSize4SegsFree
		INTEGER,
	wfMibHeapSize4SegsTotal
		INTEGER,
	wfMibHeapSize4Pages
		INTEGER,
	wfMibHeapSize5
		INTEGER,
	wfMibHeapSize5SegsFree
		INTEGER,
	wfMibHeapSize5SegsTotal
		INTEGER,
	wfMibHeapSize5Pages
		INTEGER,
	wfMibHeapSize6
		INTEGER,
	wfMibHeapSize6SegsFree
		INTEGER,
	wfMibHeapSize6SegsTotal
		INTEGER,
	wfMibHeapSize6Pages
		INTEGER,
	wfMibHeapSize7
		INTEGER,
	wfMibHeapSize7SegsFree
		INTEGER,
	wfMibHeapSize7SegsTotal
		INTEGER,
	wfMibHeapSize7Pages
		INTEGER,
	wfMibHeapSize8
		INTEGER,
	wfMibHeapSize8SegsFree
		INTEGER,
	wfMibHeapSize8SegsTotal
		INTEGER,
	wfMibHeapSize8Pages
		INTEGER,
	wfMibHeapSize9
		INTEGER,
	wfMibHeapSize9SegsFree
		INTEGER,
	wfMibHeapSize9SegsTotal
		INTEGER,
	wfMibHeapSize9Pages
		INTEGER,
	wfMibHeapSize10
		INTEGER,
	wfMibHeapSize10SegsFree
		INTEGER,
	wfMibHeapSize10SegsTotal
		INTEGER,
	wfMibHeapSize10Pages
		INTEGER
}

wfMibHeapSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The slot number indexes the mib heap statistics table "
	::= { wfMibHeapEntry 1 }

wfMibHeapMemorySize OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total amount of memory allocated by the mib heap manager in bytes "
	::= { wfMibHeapEntry 2 }

wfMibHeapBoundrySize OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(128),
		maximum(512),
		default(256)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The boundry size reflects the largest segment which will be
		   allocated on a page basis. Allocations requests larger than
		   the boundry size are allocated one to a page. "
	DEFVAL	{ default }
	::= { wfMibHeapEntry 3 }

wfMibHeapPageSize OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(512),
		maximum(16384),
		default(1024)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The page size allocated by the mib heap manager in bytes "
	DEFVAL	{ default }
	::= { wfMibHeapEntry 4 }

wfMibHeapTotalPages OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of pages currently allocated by the mib heap manager "
	::= { wfMibHeapEntry 5 }

wfMibHeapTotalSegs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total amount of allocatable segments within the mib heap manager "
	::= { wfMibHeapEntry 6 }

wfMibHeapSegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total amount of unallocated segments within the mib heap manager "
	::= { wfMibHeapEntry 7 }

wfMibHeapSmlstSeg OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Smallest memory segment allocated by the mib in bytes "
	::= { wfMibHeapEntry 8 }

wfMibHeapLrgstSeg OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Largest memory segment allocated by the mib in bytes "
	::= { wfMibHeapEntry 9 }

wfMibHeapStartSize OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(4),
		maximum(4096),
		default(12)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Segment size to start displaying in the mib heap stats "
	DEFVAL	{ default }
	::= { wfMibHeapEntry 10 }

wfMibHeapSize1 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size of memory segment in the mib heap page table "
	::= { wfMibHeapEntry 11 }

wfMibHeapSize1SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments of a given memory segment size "
	::= { wfMibHeapEntry 12 }

wfMibHeapSize1SegsTotal OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of allocatable segments of a given memory segment size "
	::= { wfMibHeapEntry 13 }

wfMibHeapSize1Pages OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of pages allocated for a given memory segment size "
	::= { wfMibHeapEntry 14 }

wfMibHeapSize2 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size of memory segment in the mib heap page table "
	::= { wfMibHeapEntry 15 }

wfMibHeapSize2SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments of a given memory segment size "
	::= { wfMibHeapEntry 16 }

wfMibHeapSize2SegsTotal OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of allocatable segments of a given memory segment size "
	::= { wfMibHeapEntry 17 }

wfMibHeapSize2Pages OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of pages allocated for a given memory segment size "
	::= { wfMibHeapEntry 18 }

wfMibHeapSize3 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size of memory segment in the mib heap page table "
	::= { wfMibHeapEntry 19 }

wfMibHeapSize3SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments of a given memory segment size "
	::= { wfMibHeapEntry 20 }

wfMibHeapSize3SegsTotal OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of allocatable segments of a given memory segment size "
	::= { wfMibHeapEntry 21 }

wfMibHeapSize3Pages OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of pages allocated for a given memory segment size "
	::= { wfMibHeapEntry 22 }

wfMibHeapSize4 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size of memory segment in the mib heap page table "
	::= { wfMibHeapEntry 23 }

wfMibHeapSize4SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments of a given memory segment size "
	::= { wfMibHeapEntry 24 }

wfMibHeapSize4SegsTotal OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of allocatable segments of a given memory segment size "
	::= { wfMibHeapEntry 25 }

wfMibHeapSize4Pages OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of pages allocated for a given memory segment size "
	::= { wfMibHeapEntry 26 }

wfMibHeapSize5 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size of memory segment in the mib heap page table "
	::= { wfMibHeapEntry 27 }

wfMibHeapSize5SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments of a given memory segment size "
	::= { wfMibHeapEntry 28 }

wfMibHeapSize5SegsTotal OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of allocatable segments of a given memory segment size "
	::= { wfMibHeapEntry 29 }

wfMibHeapSize5Pages OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of pages allocated for a given memory segment size "
	::= { wfMibHeapEntry 30 }

wfMibHeapSize6 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size of memory segment in the mib heap page table "
	::= { wfMibHeapEntry 31 }

wfMibHeapSize6SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments of a given memory segment size "
	::= { wfMibHeapEntry 32 }

wfMibHeapSize6SegsTotal OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of allocatable segments of a given memory segment size "
	::= { wfMibHeapEntry 33 }

wfMibHeapSize6Pages OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of pages allocated for a given memory segment size "
	::= { wfMibHeapEntry 34 }

wfMibHeapSize7 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size of memory segment in the mib heap page table "
	::= { wfMibHeapEntry 35 }

wfMibHeapSize7SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments of a given memory segment size "
	::= { wfMibHeapEntry 36 }

wfMibHeapSize7SegsTotal OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of allocatable segments of a given memory segment size "
	::= { wfMibHeapEntry 37 }

wfMibHeapSize7Pages OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of pages allocated for a given memory segment size "
	::= { wfMibHeapEntry 38 }

wfMibHeapSize8 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size of memory segment in the mib heap page table "
	::= { wfMibHeapEntry 39 }

wfMibHeapSize8SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments of a given memory segment size "
	::= { wfMibHeapEntry 40 }

wfMibHeapSize8SegsTotal OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of allocatable segments of a given memory segment size "
	::= { wfMibHeapEntry 41 }

wfMibHeapSize8Pages OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of pages allocated for a given memory segment size "
	::= { wfMibHeapEntry 42 }

wfMibHeapSize9 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size of memory segment in the mib heap page table "
	::= { wfMibHeapEntry 43 }

wfMibHeapSize9SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments of a given memory segment size "
	::= { wfMibHeapEntry 44 }

wfMibHeapSize9SegsTotal OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of allocatable segments of a given memory segment size "
	::= { wfMibHeapEntry 45 }

wfMibHeapSize9Pages OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of allocatable segments of a given memory segment size "
	::= { wfMibHeapEntry 46 }

wfMibHeapSize10 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size of memory segment in the mib heap page table "
	::= { wfMibHeapEntry 47 }

wfMibHeapSize10SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments of a given memory segment size "
	::= { wfMibHeapEntry 48 }

wfMibHeapSize10SegsTotal OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of allocatable segments of a given memory segment size "
	::= { wfMibHeapEntry 49 }

wfMibHeapSize10Pages OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of allocatable segments of a given memory segment size "
	::= { wfMibHeapEntry 50 }

wfMibHeapPageTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfMibHeapPageEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Table of MIB Heap Manager Page Table Stats, indexed by slot number "
	::= { wfMibHeapGroup 2 }

wfMibHeapPageEntry OBJECT-TYPE
	SYNTAX	WfMibHeapPageEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A particular interface "
	INDEX	{ wfMibHeapPageSlot }
	::= { wfMibHeapPageTable 1 }

WfMibHeapPageEntry ::= SEQUENCE {
	wfMibHeapPageSlot
		INTEGER,
	wfMibHeapPageListOffset
		INTEGER,
	wfMibHeapPageSegSize
		INTEGER,
	wfMibHeapPageTotal
		INTEGER,
	wfMibHeapPageMemoryTotal
		INTEGER,
	wfMibHeapPageSegsTotal
		INTEGER,
	wfMibHeapPageSegsAllocd
		INTEGER,
	wfMibHeapPageSegsFree
		INTEGER,
	wfMibHeapPage1Size
		INTEGER,
	wfMibHeapPage1SegsFree
		INTEGER,
	wfMibHeapPage1SegsMax
		INTEGER,
	wfMibHeapPage2Size
		INTEGER,
	wfMibHeapPage2SegsFree
		INTEGER,
	wfMibHeapPage2SegsMax
		INTEGER,
	wfMibHeapPage3Size
		INTEGER,
	wfMibHeapPage3SegsFree
		INTEGER,
	wfMibHeapPage3SegsMax
		INTEGER,
	wfMibHeapPage4Size
		INTEGER,
	wfMibHeapPage4SegsFree
		INTEGER,
	wfMibHeapPage4SegsMax
		INTEGER,
	wfMibHeapPage5Size
		INTEGER,
	wfMibHeapPage5SegsFree
		INTEGER,
	wfMibHeapPage5SegsMax
		INTEGER,
	wfMibHeapPage6PageSize
		INTEGER,
	wfMibHeapPage6SegsFree
		INTEGER,
	wfMibHeapPage6SegsMax
		INTEGER,
	wfMibHeapPage7Size
		INTEGER,
	wfMibHeapPage7SegsFree
		INTEGER,
	wfMibHeapPage7SegsMax
		INTEGER,
	wfMibHeapPage8Size
		INTEGER,
	wfMibHeapPage8SegsFree
		INTEGER,
	wfMibHeapPage8SegsMax
		INTEGER,
	wfMibHeapPage9Size
		INTEGER,
	wfMibHeapPage9SegsFree
		INTEGER,
	wfMibHeapPage9SegsMax
		INTEGER,
	wfMibHeapPage10Size
		INTEGER,
	wfMibHeapPage10SegsFree
		INTEGER,
	wfMibHeapPage10SegsMax
		INTEGER
}

wfMibHeapPageSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The slot number indexes the mib heap statistics table "
	::= { wfMibHeapPageEntry 1 }

wfMibHeapPageListOffset OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The offset into the page list to start displaying "
	::= { wfMibHeapPageEntry 2 }

wfMibHeapPageSegSize OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(2),
		maximum(4096),
		default(12)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Segment size can be set from 4 to 4096 and the
		   page statstics then gathered for that segment size  "
	DEFVAL	{ default }
	::= { wfMibHeapPageEntry 3 }

wfMibHeapPageTotal OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of pages allocated for the given memory segment size "
	::= { wfMibHeapPageEntry 4 }

wfMibHeapPageMemoryTotal OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total amount of memory allocated of a given segment size in bytes "
	::= { wfMibHeapPageEntry 5 }

wfMibHeapPageSegsTotal OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total amount of allocable segments for a given segment size "
	::= { wfMibHeapPageEntry 6 }

wfMibHeapPageSegsAllocd OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total amount of segments allocated for a given segment size "
	::= { wfMibHeapPageEntry 7 }

wfMibHeapPageSegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total amount of unallocated segments for a given segment size "
	::= { wfMibHeapPageEntry 8 }

wfMibHeapPage1Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size in bytes of a given page "
	::= { wfMibHeapPageEntry 9 }

wfMibHeapPage1SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments for the given page "
	::= { wfMibHeapPageEntry 10 }

wfMibHeapPage1SegsMax OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Maximum amount of allocable segments for the given page "
	::= { wfMibHeapPageEntry 11 }

wfMibHeapPage2Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size in bytes of a given page "
	::= { wfMibHeapPageEntry 12 }

wfMibHeapPage2SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments for the given page "
	::= { wfMibHeapPageEntry 13 }

wfMibHeapPage2SegsMax OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Maximum number of allocable segments for the given page "
	::= { wfMibHeapPageEntry 14 }

wfMibHeapPage3Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size in bytes of a given page "
	::= { wfMibHeapPageEntry 15 }

wfMibHeapPage3SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments for the given page "
	::= { wfMibHeapPageEntry 16 }

wfMibHeapPage3SegsMax OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Maximum number of allocable segments for the given page "
	::= { wfMibHeapPageEntry 17 }

wfMibHeapPage4Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size in bytes of a given page "
	::= { wfMibHeapPageEntry 18 }

wfMibHeapPage4SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments for the given page "
	::= { wfMibHeapPageEntry 19 }

wfMibHeapPage4SegsMax OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Maximum number of allocable segments for the given page "
	::= { wfMibHeapPageEntry 20 }

wfMibHeapPage5Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size in bytes of a given page "
	::= { wfMibHeapPageEntry 21 }

wfMibHeapPage5SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments for the given page "
	::= { wfMibHeapPageEntry 22 }

wfMibHeapPage5SegsMax OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Maximum number of allocable segments for the given page "
	::= { wfMibHeapPageEntry 23 }

wfMibHeapPage6PageSize OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size in bytes of a given page "
	::= { wfMibHeapPageEntry 24 }

wfMibHeapPage6SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments for the given page "
	::= { wfMibHeapPageEntry 25 }

wfMibHeapPage6SegsMax OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Maximum number of allocable segments for the given page "
	::= { wfMibHeapPageEntry 26 }

wfMibHeapPage7Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size in bytes of a given page "
	::= { wfMibHeapPageEntry 27 }

wfMibHeapPage7SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments for the given page "
	::= { wfMibHeapPageEntry 28 }

wfMibHeapPage7SegsMax OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Maximum number of allocable segments for the given page "
	::= { wfMibHeapPageEntry 29 }

wfMibHeapPage8Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size in bytes of a given page "
	::= { wfMibHeapPageEntry 30 }

wfMibHeapPage8SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments for the given page "
	::= { wfMibHeapPageEntry 31 }

wfMibHeapPage8SegsMax OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Maximum number of allocable segments for the given page "
	::= { wfMibHeapPageEntry 32 }

wfMibHeapPage9Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size in bytes of a given page "
	::= { wfMibHeapPageEntry 33 }

wfMibHeapPage9SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments for the given page "
	::= { wfMibHeapPageEntry 34 }

wfMibHeapPage9SegsMax OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Maximum number of allocable segments for the given page "
	::= { wfMibHeapPageEntry 35 }

wfMibHeapPage10Size OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Size in bytes of a given page "
	::= { wfMibHeapPageEntry 36 }

wfMibHeapPage10SegsFree OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of unallocated segments for the given page "
	::= { wfMibHeapPageEntry 37 }

wfMibHeapPage10SegsMax OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Maximum number of allocable segments for the given page "
	::= { wfMibHeapPageEntry 38 }

wfOsi		OBJECT IDENTIFIER ::= { wfOsiGroup 1 }

wfOsiDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This value determines whether OSI is configured on this slot.
		 "
	DEFVAL	{ created }
	::= { wfOsi 1 }

wfOsiDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This value determines whether OSI is to startup.
		 "
	DEFVAL	{ enabled }
	::= { wfOsi 2 }

wfOsiState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This value determines whether OSI is to startup.
		 "
	DEFVAL	{ notpresent }
	::= { wfOsi 3 }

wfOsiIsisVersion OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This read-only parameter identifies the version number of the
		   IS-IS protocol to which this node conforms to.          
		 "
	::= { wfOsi 4 }

wfOsiRouterType OBJECT-TYPE
	SYNTAX	INTEGER {
		l1only(1),
		l1l2(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This value determines whether this system is an L1-only router or
		  L1-L2  IS.
		 "
	DEFVAL	{ l1l2 }
	::= { wfOsi 5 }

wfOsiRouterId OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This value contains the system ID of this Intermediate System.
		  If no value is entered by the user, Site Manager should
		  supply a 6-byte value that will be unique (a MAC address
		  would work).
		 "
	::= { wfOsi 6 }

wfOsiLoadBal OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This Boolean defines whether or not we are doing load balancing
		   over multiple paths.
		 "
	DEFVAL	{ disabled }
	::= { wfOsi 7 }

wfOsiMaxAreas OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(63),
		maximum(1000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This value defines the maximum allowable number of areas addresses
		  for the domain that this router exists in.
		 "
	DEFVAL	{ default }
	::= { wfOsi 8 }

wfOsiMaxEs OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(512),
		maximum(4000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This value defines the maximum allowable number of End Systems
		  for the area that this router exists in.
		 "
	DEFVAL	{ default }
	::= { wfOsi 9 }

wfOsiMaxL1Is OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(15),
		maximum(1000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This value defines the maximum allowable number of L1 Intermediate
		  Systems for the area that this router exists in.
		 "
	DEFVAL	{ default }
	::= { wfOsi 10 }

wfOsiMaxL2Is OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(63),
		maximum(1000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This value defines the maximum allowable number of L2 Intermediate
		  Systems for the domain that this router exists in.
		 "
	DEFVAL	{ default }
	::= { wfOsi 11 }

wfOsiMaxExtAddr OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(500)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This value defines the maximum allowable number of External Addresses
		        for the domain that this router exists in.
		 The default value of this field is 0.
		       "
	DEFVAL	{ minimum }
	::= { wfOsi 12 }

wfOsiCksumIsPdus OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This value indicates whether ISIS PDUs will carry a checksum.
		       "
	DEFVAL	{ enabled }
	::= { wfOsi 13 }

wfOsiL1LspPassword OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This assigns a password such that only L1 Lsps with the matching
		   password will be accepted.  All L1 Lsps generated 
		 by this system will contain this string in the password option.
		       "
	::= { wfOsi 14 }

wfOsiL2LspPassword OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This assigns a password such that only L2 Lsps with the matching
		   password will be accepted.  All L2 Lsps generated 
		 by this system will contain this string in the password option.
		       "
	::= { wfOsi 15 }

wfOsiAreaAddr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This Assigns the area address for this router.
		 This field must be filled in.
		        If the user doesn't enter a value, then assign 490040.
		        Site Manager must force the user to enter at least a 3-byte
		 value for this field.
		       "
	::= { wfOsi 16 }

wfOsiAreaAddrAlias1 OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This Assigns the first area address alias for this router.
		 This field does no have to be filled in, but if the user
		 tries to enter a value, Site Manager must make sure that 
		 it is at least 3-bytes in length.
		       "
	::= { wfOsi 17 }

wfOsiAreaAddrAlias2 OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This Assigns the second area address alias for this router.
		 This field does no have to be filled in, but if the user
		 tries to enter a value, Site Manager must make sure that 
		 it is at least 3-bytes in length.
		       "
	::= { wfOsi 18 }

wfOsiCorruptedLsps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Corrupted Lsps Detected.
		       "
	::= { wfOsi 19 }

wfOsiL1LspDbOverloads OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of times the L1 Lsp Database Overload event has
		 been generated. 
		       "
	::= { wfOsi 20 }

wfOsiL2LspDbOverloads OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of times the L2 Lsp Database Overload event has
		 been generated. 
		       "
	::= { wfOsi 21 }

wfOsiManAddrDroppedAreas OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of times the Manual Address Dropped from Area event
		 has been generated. 
		       "
	::= { wfOsi 22 }

wfOsiSeqNumberSkips OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of times the Sequence Number Skipped event has
		 been generated. 
		       "
	::= { wfOsi 23 }

wfOsiOwnLspPurges OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of times the Own Lsp Purged event has
		 been generated. 
		       "
	::= { wfOsi 24 }

wfOsiOthLspPurges OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of times the Other Lsp Purged event has
		 been generated. 
		       "
	::= { wfOsi 25 }

wfOsiExceedMaxSeqNums OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of times the Attempt tp Exceed Maximum Sequence Number
		 event has been generated. 
		       "
	::= { wfOsi 26 }

wfOsiNearestL2Is OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the ID of the Nearest L2 system in this area.
		 "
	::= { wfOsi 27 }

wfOsiMaxDynEs OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(1024),
		maximum(4000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the maximum number of dynamically learned (via Hello)
		 End Systems allowed per slot.
		 "
	DEFVAL	{ default }
	::= { wfOsi 28 }

wfOsiMaxDynL1Is OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(64),
		maximum(1000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the maximum number of dynamically learned (via Hello)
		  Level 1 Intermediate Systems allowed per slot.
		 "
	DEFVAL	{ default }
	::= { wfOsi 29 }

wfOsiMaxDynL2Is OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(64),
		maximum(1000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the maximum number of dynamically learned (via Hello)
		 Level 2 Intermediate Systems allowed per slot.
		 "
	DEFVAL	{ default }
	::= { wfOsi 30 }

wfOsiNumDynEsAdjs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Dynamic ES adjs the osi master gate
		 receives from the cct gate. 
		       "
	::= { wfOsi 31 }

wfOsiNumDynL1Adjs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Dynamic L1 adjs the osi master gate
		 receives from the cct gate. 
		       "
	::= { wfOsi 32 }

wfOsiNumDynL2Adjs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Dynamic L2 adjs the osi master gate
		 receives from the cct gate. 
		       "
	::= { wfOsi 33 }

wfOsiNumL1Routes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of L1 Routes. WL 2.27.93
		       "
	::= { wfOsi 34 }

wfOsiNumL2Routes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of L2 Routes. WL 2.27.93
		       "
	::= { wfOsi 35 }

wfOsiNumDynPtpEsAdjs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Dynamic Point-to-Point ES adjs the osi master gate
		        receives on .
		       "
	::= { wfOsi 36 }

wfOsiNumDynPtpIsAdjs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Dynamic Point-to-Point IS adjs the osi master gate
		        receives on .
		       "
	::= { wfOsi 37 }

wfOsiClnpSrcRtOptionDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable processing of Source Route options in CLNP PDUs.
		 This is required for GOSIP v2 support. GOSIP prohibits processing
		 Source Routing options. 
		       "
	DEFVAL	{ enabled }
	::= { wfOsi 38 }

wfOsiNumL1Lsps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of L1 LSPs stored in database.
		       "
	::= { wfOsi 39 }

wfOsiNumL2Lsps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of L2 LSPs stored in database.
		       "
	::= { wfOsi 40 }

wfOsiStaticRouteTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfOsiStaticRouteEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This table contains all the static routes for this system.
		"
	::= { wfOsiGroup 2 }

wfOsiStaticRouteEntry OBJECT-TYPE
	SYNTAX	WfOsiStaticRouteEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This is the Static Route Entry for the Static Route Table.
		 "
	INDEX	{ wfOsiStaticRouteAddr }
	::= { wfOsiStaticRouteTable 1 }

WfOsiStaticRouteEntry ::= SEQUENCE {
	wfOsiStaticRouteDelete
		INTEGER,
	wfOsiStaticRouteDisable
		INTEGER,
	wfOsiStaticRouteAddr
		OCTET STRING,
	wfOsiStaticRouteNibbleLength
		INTEGER,
	wfOsiStaticRouteNextHopIs
		OCTET STRING,
	wfOsiStaticRouteType
		INTEGER,
	wfOsiStaticRouteCost
		INTEGER
}

wfOsiStaticRouteDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter for Osi Static Route Record.
		 "
	DEFVAL	{ created }
	::= { wfOsiStaticRouteEntry 1 }

wfOsiStaticRouteDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for this Static Route.
		 "
	DEFVAL	{ enabled }
	::= { wfOsiStaticRouteEntry 2 }

wfOsiStaticRouteAddr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This specifies the address of the static route. It is also
		   the inst_id.
		 "
	::= { wfOsiStaticRouteEntry 3 }

wfOsiStaticRouteNibbleLength OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the length in nibbles of the static route address.
		   It is necessary to specify it in nibbles since the static route
		   may be an external address which can be specified in nibbles.
		 "
	::= { wfOsiStaticRouteEntry 4 }

wfOsiStaticRouteNextHopIs OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the 6-octet ID of the next Hop IS that all
		   data destined to wfOsiStaticRouteAddr will be forwarded to.
		  "
	::= { wfOsiStaticRouteEntry 5 }

wfOsiStaticRouteType OBJECT-TYPE
	SYNTAX	INTEGER {
		es(9),
		areaaddr(11),
		extaddr(13)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This specifies whether the destination is an End System,
		   an area, or an external Domain.
		  "
	DEFVAL	{ es }
	::= { wfOsiStaticRouteEntry 6 }

wfOsiStaticRouteCost OBJECT-TYPE
	SYNTAX	INTEGER {
		min(1),
		default(20),
		max(1023)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This value is the cost to get to this address.
		 "
	DEFVAL	{ default }
	::= { wfOsiStaticRouteEntry 7 }

wfOsiCircuitTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfOsiCircuitEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This Table contains all circuit configuration info
		 counters available on a per circuit basis.
		 "
	::= { wfOsiGroup 3 }

wfOsiCircuitEntry OBJECT-TYPE
	SYNTAX	WfOsiCircuitEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This is the circuit entry record that appears in the
		 Circuit Table.
		 "
	INDEX	{ wfOsiCircuitId }
	::= { wfOsiCircuitTable 1 }

WfOsiCircuitEntry ::= SEQUENCE {
	wfOsiCircuitDelete
		INTEGER,
	wfOsiCircuitDisable
		INTEGER,
	wfOsiCircuitState
		INTEGER,
	wfOsiCircuitId
		INTEGER,
	wfOsiCircuitRouterLevel
		INTEGER,
	wfOsiCircuitL1DefaultMetric
		INTEGER,
	wfOsiCircuitL2DefaultMetric
		INTEGER,
	wfOsiCircuitL1DrPriority
		INTEGER,
	wfOsiCircuitL2DrPriority
		INTEGER,
	wfOsiCircuitIsisHelloTimer
		INTEGER,
	wfOsiCircuitEsisHelloTimer
		INTEGER,
	wfOsiCircuitEshConfigTime
		INTEGER,
	wfOsiCircuitPassword
		DisplayString,
	wfOsiCircuitReceivedPkts
		Counter,
	wfOsiCircuitSentPkts
		Counter,
	wfOsiCircuitDroppedPkts
		Counter,
	wfOsiCircuitFragmentedPdus
		Counter,
	wfOsiCircuitCongestionDiscards
		Counter,
	wfOsiCircuitAddrUnreachDiscards
		Counter,
	wfOsiCircuitAgedPduDiscards
		Counter,
	wfOsiCircuitPduFormatErrDiscards
		Counter,
	wfOsiCircuitUnsuppOptsDiscards
		Counter,
	wfOsiCircuitSentErrorReports
		Counter,
	wfOsiCircuitReceivedControlPdus
		Counter,
	wfOsiCircuitSentControlPdus
		Counter,
	wfOsiCircuitStateChanges
		Counter,
	wfOsiCircuitAdjStateChanges
		Counter,
	wfOsiCircuitInitFailures
		Counter,
	wfOsiCircuitRejectedAdjs
		Counter,
	wfOsiCircuitReceivedBadLsps
		Counter,
	wfOsiCircuitReceivedBadSnps
		Counter,
	wfOsiCircuitReceivedBadEshs
		Counter,
	wfOsiCircuitReceivedBadL1Iihs
		Counter,
	wfOsiCircuitReceivedBadL2Iihs
		Counter,
	wfOsiCircuitL1DrChanges
		Counter,
	wfOsiCircuitL2DrChanges
		Counter,
	wfOsiCircuitClnpForwarding
		Counter,
	wfOsiCircuitClnpDefaultLifeTime
		Counter,
	wfOsiCircuitClnpInReceives
		Counter,
	wfOsiCircuitClnpInAddrErrors
		Counter,
	wfOsiCircuitClnpForwPdus
		Counter,
	wfOsiCircuitClnpInUnknownNlps
		Counter,
	wfOsiCircuitClnpInDelivers
		Counter,
	wfOsiCircuitClnpInUnknownUlps
		Counter,
	wfOsiCircuitClnpSegCreates
		Counter,
	wfOsiCircuitClnpInOpts
		Counter,
	wfOsiCircuitClnpOutOpts
		Counter,
	wfOsiCircuitEsisEshIns
		Counter,
	wfOsiCircuitEsisIshOuts
		Counter,
	wfOsiCircuitEsisRduOuts
		Counter,
	wfOsiCircuitL1DesignatedRouter
		OCTET STRING,
	wfOsiCircuitL2DesignatedRouter
		OCTET STRING,
	wfOsiCircuitClnpOutEchoReplies
		Counter,
	wfOsiCircuitClnpOutEchoRequests
		Counter,
	wfOsiCircuitClnpInEchoReplies
		Counter,
	wfOsiCircuitClnpInEchoRequests
		Counter,
	wfOsiCircuitNumDynEsAdjs
		Counter,
	wfOsiCircuitNumDynL1Adjs
		Counter,
	wfOsiCircuitNumDynL2Adjs
		Counter,
	wfOsiCircuitNumDynPtpIsAdjs
		Counter,
	wfOsiCircuitNumDynPtpEsAdjs
		Counter,
	wfOsiCircuitBadIshReceived
		Counter,
	wfOsiCircuitEsisIshIns
		Counter,
	wfOsiCircuitIihHoldMultiplier
		INTEGER,
	wfOsiCircuitIshHoldMultiplier
		INTEGER
}

wfOsiCircuitDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This value determines whether this circuit is configured.
		 "
	DEFVAL	{ created }
	::= { wfOsiCircuitEntry 1 }

wfOsiCircuitDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for this circuit.
		 "
	DEFVAL	{ enabled }
	::= { wfOsiCircuitEntry 2 }

wfOsiCircuitState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This indicates whether the circuit state is up or down.
		 "
	DEFVAL	{ down }
	::= { wfOsiCircuitEntry 3 }

wfOsiCircuitId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A unique value for each known circuit.
		 "
	::= { wfOsiCircuitEntry 4 }

wfOsiCircuitRouterLevel OBJECT-TYPE
	SYNTAX	INTEGER {
		l1(1),
		l2(2),
		l1l2(3),
		ext(4),
		l2ext(6),
		l1l2ext(7),
		esisonly(8)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the level protocol that the circuit runs.
		 Its a bit mask to allow for some combination of 
		 L1, L2, External, ES-IS-only.
		 "
	DEFVAL	{ l1l2 }
	::= { wfOsiCircuitEntry 5 }

wfOsiCircuitL1DefaultMetric OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(20),
		maximum(63)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the default cost of using this circuit for L1 traffic.
		 "
	DEFVAL	{ default }
	::= { wfOsiCircuitEntry 6 }

wfOsiCircuitL2DefaultMetric OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(20),
		maximum(63)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the default cost of using this circuit for L2 traffic.
		 "
	DEFVAL	{ default }
	::= { wfOsiCircuitEntry 7 }

wfOsiCircuitL1DrPriority OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(64),
		maximum(127)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the priority for this system to become L1 designated
		 router on this LAN circuit.
		 "
	DEFVAL	{ default }
	::= { wfOsiCircuitEntry 8 }

wfOsiCircuitL2DrPriority OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(64),
		maximum(127)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the priority for this system to become L2 designated
		 router on this LAN circuit.
		 "
	DEFVAL	{ default }
	::= { wfOsiCircuitEntry 9 }

wfOsiCircuitIsisHelloTimer OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(8),
		maximum(3600)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the period (secs) between IIH hello transmissions.
		 "
	DEFVAL	{ default }
	::= { wfOsiCircuitEntry 10 }

wfOsiCircuitEsisHelloTimer OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(30),
		maximum(3600)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the period (secs) between ISH hello transmissions.
		 "
	DEFVAL	{ default }
	::= { wfOsiCircuitEntry 11 }

wfOsiCircuitEshConfigTime OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(600),
		maximum(3600)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the suggested time between ESH transmissions from an
		 ES went in ISHs (ESCT).
		 "
	DEFVAL	{ default }
	::= { wfOsiCircuitEntry 12 }

wfOsiCircuitPassword OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is Circuit Password for this circuit. Used to filter
		 out Hellos from systems without the correct password.
		 "
	::= { wfOsiCircuitEntry 13 }

wfOsiCircuitReceivedPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of pkts that have been received on this
		         circuit.
		 "
	::= { wfOsiCircuitEntry 14 }

wfOsiCircuitSentPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of pkts sent out this circuit.
		 "
	::= { wfOsiCircuitEntry 15 }

wfOsiCircuitDroppedPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of pkts dropped on this circuit.
		 "
	::= { wfOsiCircuitEntry 16 }

wfOsiCircuitFragmentedPdus OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of pdus that had to be fragmented
		  when forwarded out this circuit.
		 "
	::= { wfOsiCircuitEntry 17 }

wfOsiCircuitCongestionDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of PDUs dropped because of congestion.
		 "
	::= { wfOsiCircuitEntry 18 }

wfOsiCircuitAddrUnreachDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of PDUs dropped because the destination
		  is unreachable.
		 "
	::= { wfOsiCircuitEntry 19 }

wfOsiCircuitAgedPduDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of PDUs dropped because of aging.
		 "
	::= { wfOsiCircuitEntry 20 }

wfOsiCircuitPduFormatErrDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of PDUs dropped because of Format Error.
		 "
	::= { wfOsiCircuitEntry 21 }

wfOsiCircuitUnsuppOptsDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of PDUs dropped because they contain
		  unsupported options.
		 "
	::= { wfOsiCircuitEntry 22 }

wfOsiCircuitSentErrorReports OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of error reports sent out this circuit.
		 "
	::= { wfOsiCircuitEntry 23 }

wfOsiCircuitReceivedControlPdus OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of ESIS or ISIS PDUs received on this circuit.
		 "
	::= { wfOsiCircuitEntry 24 }

wfOsiCircuitSentControlPdus OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of ESIS or ISIS PDUs sent out this circuit.
		 "
	::= { wfOsiCircuitEntry 25 }

wfOsiCircuitStateChanges OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of times the circuit goes from down to up
		  or from up to down.
		 "
	::= { wfOsiCircuitEntry 26 }

wfOsiCircuitAdjStateChanges OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of times an adjacency off of this circuit
		  goes from down to up or from up to down state.
		 "
	::= { wfOsiCircuitEntry 27 }

wfOsiCircuitInitFailures OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of times this circuit fails to initialize.
		 "
	::= { wfOsiCircuitEntry 28 }

wfOsiCircuitRejectedAdjs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of Adjacencies that were rejected on
		 this circuit.
		 "
	::= { wfOsiCircuitEntry 29 }

wfOsiCircuitReceivedBadLsps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of bad Lsps received on this circuit.
		 "
	::= { wfOsiCircuitEntry 30 }

wfOsiCircuitReceivedBadSnps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of BAD Sequence Number Pdus received on
		  this circuit.
		 "
	::= { wfOsiCircuitEntry 31 }

wfOsiCircuitReceivedBadEshs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of bad ESHs received on this circuit.
		 "
	::= { wfOsiCircuitEntry 32 }

wfOsiCircuitReceivedBadL1Iihs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of bad L1 IIHs received on this circuit.
		 "
	::= { wfOsiCircuitEntry 33 }

wfOsiCircuitReceivedBadL2Iihs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of bad L2 IIHs received on this circuit.
		 "
	::= { wfOsiCircuitEntry 34 }

wfOsiCircuitL1DrChanges OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of times the L1 Designated Router has been
		  elected on this circuit.
		 "
	::= { wfOsiCircuitEntry 35 }

wfOsiCircuitL2DrChanges OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of times the L2 Designated Router has been
		  elected on this circuit.
		 "
	::= { wfOsiCircuitEntry 36 }

wfOsiCircuitClnpForwarding OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This shows whether forwarding is enabled over this circuit.
		 "
	::= { wfOsiCircuitEntry 37 }

wfOsiCircuitClnpDefaultLifeTime OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the lifetime included in clnp pdus generated by this
		  router (i.e. echo and echo reply pdus, error report pdus).
		 "
	::= { wfOsiCircuitEntry 38 }

wfOsiCircuitClnpInReceives OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of CLNP pdus received from this circuit.
		 "
	::= { wfOsiCircuitEntry 39 }

wfOsiCircuitClnpInAddrErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of CLNP pdus recived from this circuit
		  with Address format errors.
		 "
	::= { wfOsiCircuitEntry 40 }

wfOsiCircuitClnpForwPdus OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of Clnp PDUs received on this circuit
		  that are forwarded.
		 "
	::= { wfOsiCircuitEntry 41 }

wfOsiCircuitClnpInUnknownNlps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of Clnp PDUs received on this circuit
		  where the network layer addressed is unknown (Bad NLPID).
		 "
	::= { wfOsiCircuitEntry 42 }

wfOsiCircuitClnpInDelivers OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of Clnp PDUs received on this circuit
		  whose destination is this router.
		 "
	::= { wfOsiCircuitEntry 43 }

wfOsiCircuitClnpInUnknownUlps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is number of Clnp PDUs received on this circuit addressed
		  to this router where the upper layer is unknown.
		 "
	::= { wfOsiCircuitEntry 44 }

wfOsiCircuitClnpSegCreates OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of CLNP segments created from
		  pdus received on this circuit.
		 "
	::= { wfOsiCircuitEntry 45 }

wfOsiCircuitClnpInOpts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of CLNP pdus received with an options
		  portion.
		 "
	::= { wfOsiCircuitEntry 46 }

wfOsiCircuitClnpOutOpts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of CLNP pdus sent with an options
		  portion.
		 "
	::= { wfOsiCircuitEntry 47 }

wfOsiCircuitEsisEshIns OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of ESHs received from this circuit.
		 "
	::= { wfOsiCircuitEntry 48 }

wfOsiCircuitEsisIshOuts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of ISHs sent out this circuit.
		 "
	::= { wfOsiCircuitEntry 49 }

wfOsiCircuitEsisRduOuts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of Redirects sent out this circuit.
		 "
	::= { wfOsiCircuitEntry 50 }

wfOsiCircuitL1DesignatedRouter OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the ID of the L1 Designated Router on this
		  circuit.
		 "
	::= { wfOsiCircuitEntry 51 }

wfOsiCircuitL2DesignatedRouter OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the ID of the L2 Designated Router on this
		  circuit.
		 "
	::= { wfOsiCircuitEntry 52 }

wfOsiCircuitClnpOutEchoReplies OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of CLNP Echo Replies sent out this circuit.
		 "
	::= { wfOsiCircuitEntry 53 }

wfOsiCircuitClnpOutEchoRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of Clnp Echo Requests sent out this circuit.
		 "
	::= { wfOsiCircuitEntry 54 }

wfOsiCircuitClnpInEchoReplies OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of CLNP Echo Replies received on this circuit.
		 "
	::= { wfOsiCircuitEntry 55 }

wfOsiCircuitClnpInEchoRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of CLNP Echo Requests recived on this circuit.
		 "
	::= { wfOsiCircuitEntry 56 }

wfOsiCircuitNumDynEsAdjs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of Dynamic End System Adjacencies formed on
		  this circuit.
		 "
	::= { wfOsiCircuitEntry 57 }

wfOsiCircuitNumDynL1Adjs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of Dynamic Level 1 Intermediate System
		  Adjacencies formed on this circuit. 
		 "
	::= { wfOsiCircuitEntry 58 }

wfOsiCircuitNumDynL2Adjs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of Dynamic Level 2 Intermediate System
		  Adjacencies formed on this circuit.
		 "
	::= { wfOsiCircuitEntry 59 }

wfOsiCircuitNumDynPtpIsAdjs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of Dynamic Intermediate System Point-to-Point
		        Adjacencies formed on this circuit.
		        "
	::= { wfOsiCircuitEntry 60 }

wfOsiCircuitNumDynPtpEsAdjs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of Dynamic End System Point-to-Point
		        Adjaciences formed on this circuit.
		        "
	::= { wfOsiCircuitEntry 61 }

wfOsiCircuitBadIshReceived OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of bad Intermediate System Hellos
		         received on this circuit. These will only be received on
		         Point-to-Point circuits.
		        "
	::= { wfOsiCircuitEntry 62 }

wfOsiCircuitEsisIshIns OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of good Intermediate System Hellos
		         received on this circuit. These will only be received on
		         Point-to-Point circuits.
		        "
	::= { wfOsiCircuitEntry 63 }

wfOsiCircuitIihHoldMultiplier OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(3),
		maximum(5)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the multiplier value used to compute the hold time
		 set in the IIH PDUs transmitted from this router. Hold time
		 equals IIH Timer times IIH Hold Multiplier.
		 "
	DEFVAL	{ default }
	::= { wfOsiCircuitEntry 64 }

wfOsiCircuitIshHoldMultiplier OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(3),
		maximum(5)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the multiplier value used to compute the hold time
		 set in the ISH PDUs transmitted from this router. Hold time
		 equals IIH Timer times IIH Hold Multiplier.
		 "
	DEFVAL	{ default }
	::= { wfOsiCircuitEntry 65 }

wfOsiExternalAddressTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfOsiExternalAddressEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This is the table of External Addresses for this Router.
		"
	::= { wfOsiGroup 4 }

wfOsiExternalAddressEntry OBJECT-TYPE
	SYNTAX	WfOsiExternalAddressEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"This is the External Address Record for this Router.
		 "
	INDEX	{ wfOsiExtAddrCircuit,
		wfOsiExtAddr }
	::= { wfOsiExternalAddressTable 1 }

WfOsiExternalAddressEntry ::= SEQUENCE {
	wfOsiExtAddrDelete
		INTEGER,
	wfOsiExtAddrDisable
		INTEGER,
	wfOsiExtAddr
		OCTET STRING,
	wfOsiExtAddrCircuit
		INTEGER,
	wfOsiExtAddrNibbleLength
		INTEGER,
	wfOsiExtAddrSnpa
		OCTET STRING,
	wfOsiExtAddrCost
		INTEGER
}

wfOsiExtAddrDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the Create/Delete parameter for this ExtAddr entry.
		 "
	DEFVAL	{ created }
	::= { wfOsiExternalAddressEntry 1 }

wfOsiExtAddrDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for this ExtAddr.
		 "
	DEFVAL	{ enabled }
	::= { wfOsiExternalAddressEntry 2 }

wfOsiExtAddr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the prefix external address. It is also the inst_id.
		 "
	::= { wfOsiExternalAddressEntry 3 }

wfOsiExtAddrCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the circuit to go out for this adj.
		 "
	::= { wfOsiExternalAddressEntry 4 }

wfOsiExtAddrNibbleLength OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the length in nibbles of the external address.
		 "
	::= { wfOsiExternalAddressEntry 5 }

wfOsiExtAddrSnpa OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the SNPA of the neighbor on this circuit.
		 "
	::= { wfOsiExternalAddressEntry 6 }

wfOsiExtAddrCost OBJECT-TYPE
	SYNTAX	INTEGER {
		min(1),
		default(20),
		max(63)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the external metric cost to this address.
		 "
	DEFVAL	{ default }
	::= { wfOsiExternalAddressEntry 7 }

wfOsiStaticEsTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfOsiStaticEsEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This is the Static ES Table for this router.
		"
	::= { wfOsiGroup 5 }

wfOsiStaticEsEntry OBJECT-TYPE
	SYNTAX	WfOsiStaticEsEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This is the Static ES entry for the Static ES Table.
		 "
	INDEX	{ wfOsiStaticEsCircuit,
		wfOsiStaticEsId }
	::= { wfOsiStaticEsTable 1 }

WfOsiStaticEsEntry ::= SEQUENCE {
	wfOsiStaticEsDelete
		INTEGER,
	wfOsiStaticEsDisable
		INTEGER,
	wfOsiStaticEsId
		OCTET STRING,
	wfOsiStaticEsCircuit
		INTEGER,
	wfOsiStaticEsSnpa
		OCTET STRING
}

wfOsiStaticEsDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the Create/Delete parameter for this Static ES entry.
		 "
	DEFVAL	{ created }
	::= { wfOsiStaticEsEntry 1 }

wfOsiStaticEsDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for this Static ES.
		 "
	DEFVAL	{ enabled }
	::= { wfOsiStaticEsEntry 2 }

wfOsiStaticEsId OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the ESID of the neighbor.
		 "
	::= { wfOsiStaticEsEntry 3 }

wfOsiStaticEsCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the circuit to go out for this adj.
		 "
	::= { wfOsiStaticEsEntry 4 }

wfOsiStaticEsSnpa OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the SNPA of the neighbor on this circuit.
		 "
	::= { wfOsiStaticEsEntry 5 }

wfOsiTrafficFilterTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfOsiTrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" OSI Traffic Filters "
	::= { wfOsiGroup 6 }

wfOsiTrafficFilterEntry OBJECT-TYPE
	SYNTAX	WfOsiTrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A traffic filter definition "
	INDEX	{ wfOsiTrafficFilterCircuit,
		wfOsiTrafficFilterRuleNumber,
		wfOsiTrafficFilterFragment }
	::= { wfOsiTrafficFilterTable 1 }

WfOsiTrafficFilterEntry ::= SEQUENCE {
	wfOsiTrafficFilterDelete
		INTEGER,
	wfOsiTrafficFilterDisable
		INTEGER,
	wfOsiTrafficFilterStatus
		INTEGER,
	wfOsiTrafficFilterCounter
		Counter,
	wfOsiTrafficFilterDefinition
		Opaque,
	wfOsiTrafficFilterReserved
		INTEGER,
	wfOsiTrafficFilterCircuit
		INTEGER,
	wfOsiTrafficFilterRuleNumber
		INTEGER,
	wfOsiTrafficFilterFragment
		INTEGER
}

wfOsiTrafficFilterDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the existence of the traffic filter rule:
		               created - traffic filter exists
		               delete - traffic filter does not exist and can be deleted. "
	DEFVAL	{ created }
	::= { wfOsiTrafficFilterEntry 1 }

wfOsiTrafficFilterDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines whether or not the traffic filter rule should be used:
		                enabled - activate the rule.
		                disabled - inactivate the rule. "
	DEFVAL	{ enabled }
	::= { wfOsiTrafficFilterEntry 2 }

wfOsiTrafficFilterStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		error(2),
		inactive(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Defines the current status of the traffic filter:
		                inactive - the rule is not in use.
		                active - the rule is being used.
		                error - the application detected an error in the rule. "
	DEFVAL	{ inactive }
	::= { wfOsiTrafficFilterEntry 3 }

wfOsiTrafficFilterCounter OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received packets that have
		           matched this rule. "
	::= { wfOsiTrafficFilterEntry 4 }

wfOsiTrafficFilterDefinition OBJECT-TYPE
	SYNTAX	Opaque
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The filter rule definition. "
	::= { wfOsiTrafficFilterEntry 5 }

wfOsiTrafficFilterReserved OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Reserved field. "
	::= { wfOsiTrafficFilterEntry 6 }

wfOsiTrafficFilterCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The ID of the Circuit to which the
		           filter is applied. "
	::= { wfOsiTrafficFilterEntry 7 }

wfOsiTrafficFilterRuleNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" ID for the rule. "
	::= { wfOsiTrafficFilterEntry 8 }

wfOsiTrafficFilterFragment OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Fragment number - for large rules. "
	::= { wfOsiTrafficFilterEntry 9 }

wfOsiL1LspHdrTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfOsiL1LspHdrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"       2 u_int32's so the inst_id len is 2.                           "
	::= { wfOsiGroup 7 }

wfOsiL1LspHdrEntry OBJECT-TYPE
	SYNTAX	WfOsiL1LspHdrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A Record in the Level 1 Lsp Header Table
		 "
	INDEX	{ wfOsiL1LspHdrLspId }
	::= { wfOsiL1LspHdrTable 1 }

WfOsiL1LspHdrEntry ::= SEQUENCE {
	wfOsiL1LspHdrLspId
		OCTET STRING,
	wfOsiL1LspHdrLifetime
		INTEGER,
	wfOsiL1LspHdrSeqnum
		INTEGER,
	wfOsiL1LspHdrFlags
		OCTET STRING,
	wfOsiL1LspHdrCksum
		OCTET STRING
}

wfOsiL1LspHdrLspId OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" LSPID = Source ID + Pseudo-node ID + LSP number
		 "
	::= { wfOsiL1LspHdrEntry 1 }

wfOsiL1LspHdrLifetime OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Lsp Lifetime
		 "
	::= { wfOsiL1LspHdrEntry 2 }

wfOsiL1LspHdrSeqnum OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Lsp sequence number
		 "
	::= { wfOsiL1LspHdrEntry 3 }

wfOsiL1LspHdrFlags OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Flags: P/ATT/LSPDBOL/IS type
		 "
	::= { wfOsiL1LspHdrEntry 4 }

wfOsiL1LspHdrCksum OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Checksum
		 "
	::= { wfOsiL1LspHdrEntry 5 }

wfOsiL2LspHdrTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfOsiL2LspHdrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"       2 u_int32's so the inst_id len is 2.                           "
	::= { wfOsiGroup 8 }

wfOsiL2LspHdrEntry OBJECT-TYPE
	SYNTAX	WfOsiL2LspHdrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A Record in the Lsp Header Table
		 "
	INDEX	{ wfOsiL2LspHdrLspId }
	::= { wfOsiL2LspHdrTable 1 }

WfOsiL2LspHdrEntry ::= SEQUENCE {
	wfOsiL2LspHdrLspId
		OCTET STRING,
	wfOsiL2LspHdrLifetime
		INTEGER,
	wfOsiL2LspHdrSeqnum
		INTEGER,
	wfOsiL2LspHdrFlags
		OCTET STRING,
	wfOsiL2LspHdrCksum
		OCTET STRING
}

wfOsiL2LspHdrLspId OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" LSPID = Source ID + Pseudo-node ID + LSP number
		 "
	::= { wfOsiL2LspHdrEntry 1 }

wfOsiL2LspHdrLifetime OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Lsp Lifetime
		 "
	::= { wfOsiL2LspHdrEntry 2 }

wfOsiL2LspHdrSeqnum OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Lsp sequence number
		 "
	::= { wfOsiL2LspHdrEntry 3 }

wfOsiL2LspHdrFlags OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Flags: P/ATT/LSPDBOL/IS type
		 "
	::= { wfOsiL2LspHdrEntry 4 }

wfOsiL2LspHdrCksum OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Checksum
		 "
	::= { wfOsiL2LspHdrEntry 5 }

wfOsiDynAdjTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfOsiDynAdjEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Dynamic Adjacency Table
		"
	::= { wfOsiGroup 9 }

wfOsiDynAdjEntry OBJECT-TYPE
	SYNTAX	WfOsiDynAdjEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Adjacency Table - the real index is the adjacency id
		 "
	INDEX	{ wfOsiDynAdjId }
	::= { wfOsiDynAdjTable 1 }

WfOsiDynAdjEntry ::= SEQUENCE {
	wfOsiDynAdjId
		INTEGER,
	wfOsiDynAdjDatabase
		INTEGER,
	wfOsiDynAdjType
		INTEGER,
	wfOsiDynAdjState
		INTEGER,
	wfOsiDynAdjCircuitId
		INTEGER,
	wfOsiDynAdjHoldTime
		INTEGER,
	wfOsiDynAdjPriority
		INTEGER,
	wfOsiDynAdjSnpaAddr
		OCTET STRING,
	wfOsiDynAdjNsapAddr
		OCTET STRING,
	wfOsiDynAdjLanId
		OCTET STRING
}

wfOsiDynAdjId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Index in the Adjacency Table
		 "
	::= { wfOsiDynAdjEntry 1 }

wfOsiDynAdjDatabase OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Database into which the Adjacency is stored,
		  1=ES, 2=Level 1 IS, 3=Level 2 IS.
		 "
	::= { wfOsiDynAdjEntry 2 }

wfOsiDynAdjType OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The type of adjacency. (see Osi_const.h)
		 "
	::= { wfOsiDynAdjEntry 3 }

wfOsiDynAdjState OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The state of the adjacency. INITIALIZING, UP or FAILED
		 "
	::= { wfOsiDynAdjEntry 4 }

wfOsiDynAdjCircuitId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A unique value for each known circuit.
		 "
	::= { wfOsiDynAdjEntry 5 }

wfOsiDynAdjHoldTime OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Hold Time received from neighbor.
		 "
	::= { wfOsiDynAdjEntry 6 }

wfOsiDynAdjPriority OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Priority to become designated router. IS only.
		 "
	::= { wfOsiDynAdjEntry 7 }

wfOsiDynAdjSnpaAddr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" SNAP address for neighbor.
		 "
	::= { wfOsiDynAdjEntry 8 }

wfOsiDynAdjNsapAddr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Neighbor address (NSAP).
		 "
	::= { wfOsiDynAdjEntry 9 }

wfOsiDynAdjLanId OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" LAN ID from Designated Router. IS only.
		 "
	::= { wfOsiDynAdjEntry 10 }

wfOsiL1RoutesTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfOsiL1RouteEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This is the L1 Routes Table for this router.
		"
	::= { wfOsiGroup 10 }

wfOsiL1RouteEntry OBJECT-TYPE
	SYNTAX	WfOsiL1RouteEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This is the L1 Route entry for the Routes Table.
		 "
	INDEX	{ wfOsiL1RouteType,
		wfOsiL1RoutePathSplit,
		wfOsiL1RouteId }
	::= { wfOsiL1RoutesTable 1 }

WfOsiL1RouteEntry ::= SEQUENCE {
	wfOsiL1RouteId
		OCTET STRING,
	wfOsiL1RoutePathSplit
		INTEGER,
	wfOsiL1RouteType
		INTEGER,
	wfOsiL1RouteNextHopSnpa
		OCTET STRING,
	wfOsiL1RouteNextHopId
		OCTET STRING,
	wfOsiL1RouteNextHopType
		INTEGER,
	wfOsiL1RouteNextHopCircuit
		INTEGER,
	wfOsiL1RouteDefaultMetricCost
		INTEGER
}

wfOsiL1RouteId OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the SysID of the L1 Destination.
		 "
	::= { wfOsiL1RouteEntry 1 }

wfOsiL1RoutePathSplit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This assigns a number to each equal cost path to the
		  destination.  There can be up to 2 equal cost paths
		  to a destination.
		 "
	::= { wfOsiL1RouteEntry 2 }

wfOsiL1RouteType OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This tells what kind of a route this entry is.
		 "
	::= { wfOsiL1RouteEntry 3 }

wfOsiL1RouteNextHopSnpa OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the SNPA of the next hop adj for this route.
		 "
	::= { wfOsiL1RouteEntry 4 }

wfOsiL1RouteNextHopId OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the ID of the next hop adjacency to this route.
		  If its just an ES then it is the 6byte System ID.
		  If the next HOP is an IS then it is the NET. 
		 "
	::= { wfOsiL1RouteEntry 5 }

wfOsiL1RouteNextHopType OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the adj type of the next hop for this route.
		 "
	::= { wfOsiL1RouteEntry 6 }

wfOsiL1RouteNextHopCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the circuit to forward out for this route.
		 "
	::= { wfOsiL1RouteEntry 7 }

wfOsiL1RouteDefaultMetricCost OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the cost to from this system to this destination.
		 "
	::= { wfOsiL1RouteEntry 8 }

wfOsiL2RoutesTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfOsiL2RouteEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This is the L2 Routes Table for this router.
		"
	::= { wfOsiGroup 11 }

wfOsiL2RouteEntry OBJECT-TYPE
	SYNTAX	WfOsiL2RouteEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This is the L2 Route entry for the Routes Table.
		 "
	INDEX	{ wfOsiL2RouteType,
		wfOsiL2RoutePathSplit,
		wfOsiL2RouteId }
	::= { wfOsiL2RoutesTable 1 }

WfOsiL2RouteEntry ::= SEQUENCE {
	wfOsiL2RouteId
		OCTET STRING,
	wfOsiL2RoutePathSplit
		INTEGER,
	wfOsiL2RouteType
		INTEGER,
	wfOsiL2RouteNextHopSnpa
		OCTET STRING,
	wfOsiL2RouteNextHopId
		OCTET STRING,
	wfOsiL2RouteNextHopType
		INTEGER,
	wfOsiL2RouteNextHopCircuit
		INTEGER,
	wfOsiL2RouteDefaultMetricCost
		INTEGER
}

wfOsiL2RouteId OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the SysID of the L2 Destination.
		 "
	::= { wfOsiL2RouteEntry 1 }

wfOsiL2RoutePathSplit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This assigns a number to each equal cost path to the
		  destination.  There can be up to 2 equal cost paths
		  to a destination.
		 "
	::= { wfOsiL2RouteEntry 2 }

wfOsiL2RouteType OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This tells what kind of a route this entry is.
		 "
	::= { wfOsiL2RouteEntry 3 }

wfOsiL2RouteNextHopSnpa OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the SNPA of the neighbor on this circuit.
		 "
	::= { wfOsiL2RouteEntry 4 }

wfOsiL2RouteNextHopId OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the ID of the next hop adjacency to this route.
		  If its just an ES then it is the 6byte System ID.
		  If the next HOP is an IS then it is the NET. 
		 "
	::= { wfOsiL2RouteEntry 5 }

wfOsiL2RouteNextHopType OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the adj type of the next hop for this route.
		 "
	::= { wfOsiL2RouteEntry 6 }

wfOsiL2RouteNextHopCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the circuit to go out for this adj.
		 "
	::= { wfOsiL2RouteEntry 7 }

wfOsiL2RouteDefaultMetricCost OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the cost to from this system to this destination.
		 "
	::= { wfOsiL2RouteEntry 8 }

wfOspfGeneralGroup	OBJECT IDENTIFIER ::= { wfOspfGroup 1 }

wfOspfGeneralDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     'This value determines whether OSPF is configured'
		 "
	DEFVAL	{ created }
	::= { wfOspfGeneralGroup 1 }

wfOspfGeneralDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The administrative status of OSPF in the router.  The
		            value 'enabled' denotes that the OSPF Process is active
		            on at least one interface; 'disabled' disables it on
		            all interfaces.'
		 "
	DEFVAL	{ enabled }
	::= { wfOspfGeneralGroup 2 }

wfOspfGeneralState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		    'The state of OSPF'
		 "
	DEFVAL	{ down }
	::= { wfOspfGeneralGroup 3 }

wfOspfRouterId OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'A 32-bit integer uniquely identifying the router in
		            the Autonomous System.
		            By convention, to ensure uniqueness, this should
		            default to the value of one of the router's IP
		            interface addresses.'
		         REFERENCE
		            'OSPF Version 2, C.1 Global parameters'
		 "
	::= { wfOspfGeneralGroup 4 }

wfOspfVersionNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The current version number of the OSPF protocol is 2.'
		         REFERENCE
		            'OSPF Version 2, Title'
		 "
	::= { wfOspfGeneralGroup 5 }

wfOspfAreaBdrRtrStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'A flag to note whether this router is an area border
		            router.'
		         REFERENCE
		            'OSPF Version 2, Section 3 Splitting the AS into Areas'
		 "
	DEFVAL	{ false }
	::= { wfOspfGeneralGroup 6 }

wfOspfASBdrRtrStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'A flag to note whether this router is an Autonomous
		            System border router.'
		         REFERENCE
		            'OSPF Version 2, Section 3.3 Classification of routers'
		 "
	DEFVAL	{ false }
	::= { wfOspfGeneralGroup 7 }

wfOspfTOSSupport OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The router's support for type-of-service routing.'
		         REFERENCE
		            'OSPF Version 2, Appendix F.1.2 Optional TOS support'
		 "
	DEFVAL	{ false }
	::= { wfOspfGeneralGroup 8 }

wfOspfSpfHoldDown OBJECT-TYPE
	SYNTAX	INTEGER {
		defval(1),
		maximum(10)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		       Hold Down Timer for the SPF.  The SPF will run at most
		       once per hold down timer value.  A value of 0 means no
		       hold down.
		 "
	DEFVAL	{ defval }
	::= { wfOspfGeneralGroup 9 }

wfOspfSlotMask OBJECT-TYPE
	SYNTAX	INTEGER {
		slotmask(4261150720)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		       Slot mask for which slots OSPF is eligible
		       to run on.  The MSBit represents slot 1, the
		       next most significant bit represents slot 2,
		       and so on...  Slots can be 1-14.
		       Default is all slots on a BCN.
		 "
	DEFVAL	{ slotmask }
	::= { wfOspfGeneralGroup 10 }

wfOspfAreaTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfOspfAreaEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		     --      The OSPF Area Data Structure contains information
		     --      regarding the various areas. The interfaces and
		     --      virtual links are configured as part of these areas.
		     --      Area 0.0.0.0, by definition, is the Backbone Area
		            'Information describing the configured parameters and
		            cumulative statistics of the router's attached areas.'
		         REFERENCE
		            'OSPF Version 2, Section 6  The Area Data Structure'
		 "
	::= { wfOspfGroup 2 }

wfOspfAreaEntry OBJECT-TYPE
	SYNTAX	WfOspfAreaEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		            'Information describing the configured parameters and
		            cumulative statistics of one of the router's attached
		            areas.'
		 "
	INDEX	{ wfOspfAreaId }
	::= { wfOspfAreaTable 1 }

WfOspfAreaEntry ::= SEQUENCE {
	wfOspfAreaDelete
		INTEGER,
	wfOspfAreaDisable
		INTEGER,
	wfOspfAreaState
		INTEGER,
	wfOspfAreaId
		IpAddress,
	wfOspfAuthType
		INTEGER,
	wfOspfImportASExtern
		INTEGER,
	wfOspfStubMetric
		INTEGER,
	wfOspfImportSum
		INTEGER,
	wfOspfSpfCnt
		Counter
}

wfOspfAreaDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            This value determines if the OSPF router is configured with
		     this area.
		 "
	DEFVAL	{ created }
	::= { wfOspfAreaEntry 1 }

wfOspfAreaDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     This value indicates the state of this area on the OSPF
		     router.
		 "
	DEFVAL	{ enabled }
	::= { wfOspfAreaEntry 2 }

wfOspfAreaState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            This value indicates the state of the OSPF Area.
		 "
	DEFVAL	{ down }
	::= { wfOspfAreaEntry 3 }

wfOspfAreaId OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'A 32-bit integer uniquely identifying an area.  Area
		            ID 0.0.0.0 is used for the OSPF backbone.'
		         REFERENCE
		            'OSPF Version 2, Appendix C.2 Area parameters'
		 "
	::= { wfOspfAreaEntry 4 }

wfOspfAuthType OBJECT-TYPE
	SYNTAX	INTEGER {
		nopassword(1),
		simplepassword(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The authentication type specified for an area.
		            Additional authentication types may be assigned locally
		            on a per Area basis.'
		         REFERENCE
		            'OSPF Version 2, Appendix E Authentication'
		                     -- none (0),
		                     -- simplePassword (1)
		                     -- reserved for future specification (2..255)
		                     -- reserved for AS specific values (> 255)
		 "
	DEFVAL	{ nopassword }
	::= { wfOspfAreaEntry 5 }

wfOspfImportASExtern OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The area's support for importing AS external link-
		            state advertisements.'
		         REFERENCE
		            'OSPF Version 2, Appendix C.2 Area parameters'
		 "
	DEFVAL	{ true }
	::= { wfOspfAreaEntry 6 }

wfOspfStubMetric OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(16777215)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The metric value applied at the indicated type of
		            service.  By default, this equals the least metric at
		            the type of service among the interfaces to other
		            areas.'
		 "
	DEFVAL	{ minimum }
	::= { wfOspfAreaEntry 7 }

wfOspfImportSum OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The area's support for importing Summary 
		            advertisements into a stub area.  This variable
		   should not be set unless wfOspfImportASExtern is
		   set to FALSE'
		 "
	DEFVAL	{ true }
	::= { wfOspfAreaEntry 8 }

wfOspfSpfCnt OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     The number of times the OSPF SPF algorithm
		     has been run for this area.
		 "
	::= { wfOspfAreaEntry 9 }

wfOspfLsdbTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfOspfLsdbEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		     --  OSPF Link State Database
		     --      The Link State Database contains the Link State
		     --      Advertisements from throughout the areas that the
		     --      device is attached to.
		            'The OSPF Process's Links State Database.'
		         REFERENCE
		            'OSPF Version 2, Section 12 Link State Advertisements'
		"
	::= { wfOspfGroup 3 }

wfOspfLsdbEntry OBJECT-TYPE
	SYNTAX	WfOspfLsdbEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		            'A single Link State Advertisement.'
		 "
	INDEX	{ wfOspfLsdbAreaId,
		wfOspfLsdbType,
		wfOspfLsdbLSID,
		wfOspfLsdbRouterId }
	::= { wfOspfLsdbTable 1 }

WfOspfLsdbEntry ::= SEQUENCE {
	wfOspfLsdbAreaId
		IpAddress,
	wfOspfLsdbType
		INTEGER,
	wfOspfLsdbLSID
		IpAddress,
	wfOspfLsdbRouterId
		IpAddress,
	wfOspfLsdbSequence
		INTEGER,
	wfOspfLsdbAge
		INTEGER,
	wfOspfLsdbChecksum
		INTEGER,
	wfOspfLsdbAdvLen
		INTEGER
}

wfOspfLsdbAreaId OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The 32 bit identifier of the Area from which the LSA
		            was received.'
		         REFERENCE
		            'OSPF Version 2, Appendix C.2 Area parameters'
		 "
	::= { wfOspfLsdbEntry 1 }

wfOspfLsdbType OBJECT-TYPE
	SYNTAX	INTEGER {
		routerlink(1),
		networklink(2),
		summarylink(3),
		assummarylink(4),
		asexternallink(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The type of the link state advertisement.  Each link
		            state type has a separate advertisement format.'
		         REFERENCE
		            'OSPF Version 2, Appendix A.4.1 The Link State
		            Advertisement header'
		       stubLink   (0),
		                     routerLink (1),
		                     networkLink (2),
		                     summaryLink (3),
		                     asSummaryLink (4),
		                     asExternalLink (5)
		 "
	::= { wfOspfLsdbEntry 2 }

wfOspfLsdbLSID OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The Link State ID is an LS Type Specific field
		            containing either a Router ID or an IP Address; it
		            identifies the piece of the routing domain that is
		            being described by the advertisement.'
		         REFERENCE
		            'OSPF Version 2, Section 12.1.4 Link State ID'
		 "
	::= { wfOspfLsdbEntry 3 }

wfOspfLsdbRouterId OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The 32 bit number that uniquely identifies the
		            originating router in the Autonomous System.'
		         REFERENCE
		            'OSPF Version 2, Appendix C.1 Global parameters'
		 "
	::= { wfOspfLsdbEntry 4 }

wfOspfLsdbSequence OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     --  Note that the OSPF Sequence Number is a 32 bit signed
		     --  integer.  It starts with the value '80000001'h,
		     --  or -'7FFFFFFF'h, and increments until '7FFFFFFF'h
		     --  Thus, a typical sequence number will be very negative.
		            'The sequence number field is a signed 32-bit integer.
		            It is used to detect old and duplicate link state
		            advertisements.  The space of sequence numbers is
		            linearly ordered.  The larger the sequence number the
		            more recent the advertisement.'
		         REFERENCE
		            'OSPF Version 2, Section 12.1.6 LS sequence number'
		 "
	::= { wfOspfLsdbEntry 5 }

wfOspfLsdbAge OBJECT-TYPE
	SYNTAX	INTEGER {
		lsdbmaxage(3600)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'This field is the age of the link state advertisement
		            in seconds.'
		      (OSPF_LSDBMINAGE = 0)
		         REFERENCE
		            'OSPF Version 2, Section 12.1.1 LS age'
		 "
	::= { wfOspfLsdbEntry 6 }

wfOspfLsdbChecksum OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'This field is the checksum of the complete contents of
		            the advertisement, excepting the age field.  The age
		            field is excepted so that an advertisement's age can be
		            incremented without updating the checksum.  The
		            checksum used is the same that is used for ISO
		            connectionless datagrams; it is commonly referred to as
		            the Fletcher checksum.'
		         REFERENCE
		            'OSPF Version 2, Section 12.1.7 LS checksum'
		 "
	::= { wfOspfLsdbEntry 7 }

wfOspfLsdbAdvLen OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The length of entire Link State Advertisement, including its
		            header.'
		         REFERENCE
		            'OSPF Version 2, Section 12 Link State Advertisements'
		 "
	::= { wfOspfLsdbEntry 8 }

wfOspfAreaRangeTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfOspfAreaRangeEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		            'A range if IP addresses specified by an IP address/IP
		            network mask pair.  For example, class B address range
		            of X.X.X.X with a network mask of 255.255.0.0 includes
		            all IP addresses from X.X.0.0 to X.X.255.255'
		         REFERENCE
		            'OSPF Version 2, Appendix C.2  Area parameters'
		 "
	::= { wfOspfGroup 4 }

wfOspfAreaRangeEntry OBJECT-TYPE
	SYNTAX	WfOspfAreaRangeEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		 "
	INDEX	{ wfOspfAreaRangeAreaID,
		wfOspfAreaRangeNet }
	::= { wfOspfAreaRangeTable 1 }

WfOspfAreaRangeEntry ::= SEQUENCE {
	wfOspfAreaRangeDelete
		INTEGER,
	wfOspfAreaRangeDisable
		INTEGER,
	wfOspfAreaRangeState
		INTEGER,
	wfOspfAreaRangeAreaID
		IpAddress,
	wfOspfAreaRangeNet
		IpAddress,
	wfOspfAreaRangeMask
		IpAddress
}

wfOspfAreaRangeDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     This value determines if an Area Range has been 
		     configured for the OSPF router.
		 "
	DEFVAL	{ created }
	::= { wfOspfAreaRangeEntry 1 }

wfOspfAreaRangeDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'This variable displays the status of
		            the entry.  Setting it to 'DISBALED' has the effect of
		            rendering it inoperative.  The internal effect (row
		            removal) is implementation dependent.'
		 "
	DEFVAL	{ enabled }
	::= { wfOspfAreaRangeEntry 2 }

wfOspfAreaRangeState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     The state of the OSPF Area Range.
		 "
	DEFVAL	{ down }
	::= { wfOspfAreaRangeEntry 3 }

wfOspfAreaRangeAreaID OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The Area the Address Range is to be found within.'
		         REFERENCE
		            'OSPF Version 2, Appendix C.2 Area parameters'
		 "
	::= { wfOspfAreaRangeEntry 4 }

wfOspfAreaRangeNet OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The IP Address of the Net or Subnet indicated by the
		            range.'
		         REFERENCE
		            'OSPF Version 2, Appendix C.2 Area parameters'
		 "
	::= { wfOspfAreaRangeEntry 5 }

wfOspfAreaRangeMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The Subnet Mask that pertains to the Net or Subnet.'
		         REFERENCE
		            'OSPF Version 2, Appendix C.2 Area parameters'
		 "
	::= { wfOspfAreaRangeEntry 6 }

wfOspfIfTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfOspfIfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		     --  OSPF Interface Table
		     --      The OSPF Interface Table augments the ifTable with OSPF
		     --      specific information.
		            'The OSPF Interface Table describes the interfaces from
		            the viewpoint of OSPF.'
		         REFERENCE
		            'OSPF Version 2, Appendix C.3  Router interface
		            parameters'
		 "
	::= { wfOspfGroup 5 }

wfOspfIfEntry OBJECT-TYPE
	SYNTAX	WfOspfIfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		            'The OSPF Interface Entry describes one interface from
		            the viewpoint of OSPF.'
		 "
	INDEX	{ wfOspfIfIpAddress,
		wfOspfAddressLessIf }
	::= { wfOspfIfTable 1 }

WfOspfIfEntry ::= SEQUENCE {
	wfOspfIfDelete
		INTEGER,
	wfOspfIfDisable
		INTEGER,
	wfOspfIfState
		INTEGER,
	wfOspfIfIpAddress
		IpAddress,
	wfOspfAddressLessIf
		INTEGER,
	wfOspfIfAreaId
		IpAddress,
	wfOspfIfType
		INTEGER,
	wfOspfIfRtrPriority
		INTEGER,
	wfOspfIfTransitDelay
		INTEGER,
	wfOspfIfRetransInterval
		INTEGER,
	wfOspfIfHelloInterval
		INTEGER,
	wfOspfIfRtrDeadInterval
		INTEGER,
	wfOspfIfPollInterval
		INTEGER,
	wfOspfIfDesignatedRouter
		IpAddress,
	wfOspfIfBackupDesignatedRouter
		IpAddress,
	wfOspfIfMetricCost
		INTEGER,
	wfOspfIfAuthKey
		OCTET STRING,
	wfOspfIfTxHellos
		Counter,
	wfOspfIfTxDBDescripts
		Counter,
	wfOspfIfTxLinkStateReqs
		Counter,
	wfOspfIfTxLinkStateUpds
		Counter,
	wfOspfIfTxLinkStateAcks
		Counter,
	wfOspfIfRxHellos
		Counter,
	wfOspfIfRxDBDescripts
		Counter,
	wfOspfIfRxLinkStateReqs
		Counter,
	wfOspfIfRxLinkStateUpds
		Counter,
	wfOspfIfRxLinkStateAcks
		Counter,
	wfOspfIfDrops
		Counter
}

wfOspfIfDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     This variable determines in an OSPF Interface has been
		     configured on the router.
		 "
	DEFVAL	{ created }
	::= { wfOspfIfEntry 1 }

wfOspfIfDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The OSPF interface's administrative status.  The value
		            'enabled' denotes that neighbor relationships may be
		            formed on the interface, and the interface will be
		            advertised as an internal route to some area.  The
		            value 'disabled' denotes that the interface is external
		            to OSPF.'
		 "
	DEFVAL	{ enabled }
	::= { wfOspfIfEntry 2 }

wfOspfIfState OBJECT-TYPE
	SYNTAX	INTEGER {
		down(1),
		loopback(2),
		waiting(3),
		pointtopoint(4),
		designatedrouter(5),
		backupdesignatedrouter(6),
		otherdesignatedrouter(7)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The OSPF Interface State.'
		                     down (1),
		                     loopback (2),
		                     waiting (3),
		                     pointToPoint (4),
		                     designatedRouter (5),
		                     backupDesignatedRouter (6),
		                     otherDesignatedRouter (7)
		 "
	DEFVAL	{ down }
	::= { wfOspfIfEntry 3 }

wfOspfIfIpAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The IP address of this OSPF interface.'
		 "
	::= { wfOspfIfEntry 4 }

wfOspfAddressLessIf OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'For the purpose of easing the instancing of addressed
		            and addressless interfaces; This variable takes the
		            value 0 on interfaces with IP Addresses, and the
		            corresponding value of ifIndex for interfaces having no
		            IP Address.'
		 "
	::= { wfOspfIfEntry 5 }

wfOspfIfAreaId OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'A 32-bit integer uniquely identifying the area to
		            which the interface connects.  Area ID 0.0.0.0 is used
		            for the OSPF backbone.'
		            default { '00000000'H }    -- 0.0.0.0
		 "
	::= { wfOspfIfEntry 6 }

wfOspfIfType OBJECT-TYPE
	SYNTAX	INTEGER {
		broadcast(1),
		nbma(2),
		pointtopoint(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The OSPF interface type.
		            By way of a default, this field may be intuited from
		            the corresponding value of ifType.  Broadcast LANs,
		            such as Ethernet and IEEE 802.5, take the value
		            'broadcast', X.25, Frame Relay, and similar
		            technologies take the value 'nbma', and links that are
		            definitively point to point take the value
		            'pointToPoint'.'
		                     broadcast (1),
		                     nbma (2),
		                     pointToPoint (3)
		 "
	::= { wfOspfIfEntry 7 }

wfOspfIfRtrPriority OBJECT-TYPE
	SYNTAX	INTEGER {
		defval(1),
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The priority of this interface.  Used in multi-access
		            networks, this field is used in the designated router
		            election algorithm.  The value 0 signifies that the
		            router is not eligible to become the designated router
		            on this particular network.  In the event of a tie in
		            this value, routers will use their router id as a tie
		            breaker.'
		 "
	DEFVAL	{ defval }
	::= { wfOspfIfEntry 8 }

wfOspfIfTransitDelay OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(3600)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The estimated number of seconds it takes to transmit a
		            link- state update packet over this interface.'
		 "
	DEFVAL	{ minimum }
	::= { wfOspfIfEntry 9 }

wfOspfIfRetransInterval OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		defval(5),
		maximum(3600)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The number of seconds between link-state advertisement
		            retransmissions, for adjacencies belonging to this
		            interface.  This value is also used when retransmitting
		            database description and link-state request packets.'
		 "
	DEFVAL	{ defval }
	::= { wfOspfIfEntry 10 }

wfOspfIfHelloInterval OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		defval(10),
		maximum(65535)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The length of time, in seconds, between the Hello
		            packets that the router sends on the interface.  This
		            value must be the same for all routers attached to a
		            common network.'
		 "
	DEFVAL	{ defval }
	::= { wfOspfIfEntry 11 }

wfOspfIfRtrDeadInterval OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		defval(40),
		maximum(2147483647)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The number of seconds that a router's Hello packets
		            have not been seen before it's neighbors declare the
		            router down.  This should be some multiple of the Hello
		            interval.  This value must be the same for all routers
		            attached to a common network.'
		 "
	DEFVAL	{ defval }
	::= { wfOspfIfEntry 12 }

wfOspfIfPollInterval OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		defval(120),
		maximum(2147483647)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The larger time interval, in seconds, between the
		            Hello packets sent to an inactive non-broadcast multi-
		            access neighbor.'
		 "
	DEFVAL	{ defval }
	::= { wfOspfIfEntry 13 }

wfOspfIfDesignatedRouter OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The IP Address of the Designated Router.'
		            default { '00000000'H }    -- 0.0.0.0
		 "
	::= { wfOspfIfEntry 14 }

wfOspfIfBackupDesignatedRouter OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The IP Address of the Backup Designated Router.'
		            default { '00000000'H }    -- 0.0.0.0
		 "
	::= { wfOspfIfEntry 15 }

wfOspfIfMetricCost OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(65535)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The cost of using this type of service on this
		            interface.  The default value of the TOS 0 Metric is
		            10^8 / ifSpeed.
		            The value FFFF is distinguished to mean 'no route via
		            this TOS'.'
		 "
	DEFVAL	{ minimum }
	::= { wfOspfIfEntry 16 }

wfOspfIfAuthKey OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The Authentication Key.  If the Area's Authorization
		            Type is simplePassword, and the key length is shorter
		            than 8 octets, the agent will left adjust and zero fill
		            to 8 octets.
		            When read, ospfIfAuthKey always returns an Octet String
		            of length zero.'
		            default  { '0000000000000000'H }    -- 0.0.0.0.0.0.0.0
		         REFERENCE
		            'OSPF Version 2, Section 9 The Interface Data
		            Structure'
		 "
	::= { wfOspfIfEntry 17 }

wfOspfIfTxHellos OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF Hello packets transmitted.
		 "
	::= { wfOspfIfEntry 18 }

wfOspfIfTxDBDescripts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF DataBase Description packets transmitted.
		 "
	::= { wfOspfIfEntry 19 }

wfOspfIfTxLinkStateReqs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF Link State Request packets transmitted.
		 "
	::= { wfOspfIfEntry 20 }

wfOspfIfTxLinkStateUpds OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF Link State Update packets transmitted.
		 "
	::= { wfOspfIfEntry 21 }

wfOspfIfTxLinkStateAcks OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF Link States Acknowledgements transmitted.
		 "
	::= { wfOspfIfEntry 22 }

wfOspfIfRxHellos OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF Hello packets received.
		 "
	::= { wfOspfIfEntry 23 }

wfOspfIfRxDBDescripts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF DataBase Description packets received.
		 "
	::= { wfOspfIfEntry 24 }

wfOspfIfRxLinkStateReqs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF Link State Requests received.
		 "
	::= { wfOspfIfEntry 25 }

wfOspfIfRxLinkStateUpds OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF Link State Updates received.
		 "
	::= { wfOspfIfEntry 26 }

wfOspfIfRxLinkStateAcks OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF Link State Acknowledgements received.
		 "
	::= { wfOspfIfEntry 27 }

wfOspfIfDrops OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF packets dropped because of invalid information
		     in the packet.
		 "
	::= { wfOspfIfEntry 28 }

wfOspfVirtIfTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfOspfVirtIfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		     --  OSPF Virtual Interface Table
		     --      The Virtual Interface Table describes the virtual
		     --      links that the OSPF Process is configured to
		     --      carry on.
		            'Information about this router's virtual interfaces.'
		         REFERENCE
		            'OSPF Version 2, Appendix C.4  Virtual link parameters'
		 "
	::= { wfOspfGroup 6 }

wfOspfVirtIfEntry OBJECT-TYPE
	SYNTAX	WfOspfVirtIfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		            'Information about a single Virtual Interface.'
		 "
	INDEX	{ wfOspfVirtIfAreaID,
		wfOspfVirtIfNeighbor }
	::= { wfOspfVirtIfTable 1 }

WfOspfVirtIfEntry ::= SEQUENCE {
	wfOspfVirtIfDelete
		INTEGER,
	wfOspfVirtIfDisable
		INTEGER,
	wfOspfVirtIfState
		INTEGER,
	wfOspfVirtIfAreaID
		IpAddress,
	wfOspfVirtIfNeighbor
		IpAddress,
	wfOspfVirtIfTransitDelay
		INTEGER,
	wfOspfVirtIfRetransInterval
		INTEGER,
	wfOspfVirtIfHelloInterval
		INTEGER,
	wfOspfVirtIfRtrDeadInterval
		INTEGER,
	wfOspfVirtIfAuthKey
		OCTET STRING,
	wfOspfVirtIfTxHellos
		Counter,
	wfOspfVirtIfTxDBDescripts
		Counter,
	wfOspfVirtIfTxLinkStateReqs
		Counter,
	wfOspfVirtIfTxLinkStateUpds
		Counter,
	wfOspfVirtIfTxLinkStateAcks
		Counter,
	wfOspfVirtIfRxHellos
		Counter,
	wfOspfVirtIfRxDBDescripts
		Counter,
	wfOspfVirtIfRxLinkStateReqs
		Counter,
	wfOspfVirtIfRxLinkStateUpds
		Counter,
	wfOspfVirtIfRxLinkStateAcks
		Counter,
	wfOspfVirtIfDrops
		Counter
}

wfOspfVirtIfDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		 "
	DEFVAL	{ created }
	::= { wfOspfVirtIfEntry 1 }

wfOspfVirtIfDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'This variable displays the validity or invalidity of
		            the entry.  Setting it to 'invalid' has the effect of
		            rendering it inoperative.  The internal effect (row
		            removal) is implementation dependent.'
		 "
	DEFVAL	{ enabled }
	::= { wfOspfVirtIfEntry 2 }

wfOspfVirtIfState OBJECT-TYPE
	SYNTAX	INTEGER {
		down(1),
		pointtopoint(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'OSPF virtual interface states.'
		                     down (1),               -- these use the same encoding
		                     pointToPoint (4)        -- as the ospfIfTable
		 "
	DEFVAL	{ down }
	::= { wfOspfVirtIfEntry 3 }

wfOspfVirtIfAreaID OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The Transit Area that the Virtual Link traverses.  By
		            definition, this is not 0.0.0.0'
		 "
	::= { wfOspfVirtIfEntry 4 }

wfOspfVirtIfNeighbor OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The Router ID of the Virtual Neighbor.'
		 "
	::= { wfOspfVirtIfEntry 5 }

wfOspfVirtIfTransitDelay OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(3600)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The estimated number of seconds it takes to transmit a
		            link- state update packet over this interface.'
		 "
	DEFVAL	{ minimum }
	::= { wfOspfVirtIfEntry 6 }

wfOspfVirtIfRetransInterval OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		defval(5),
		maximum(3600)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The number of seconds between link-state advertisement
		            retransmissions, for adjacencies belonging to this
		            interface.  This value is also used when retransmitting
		            database description and link-state request packets.
		            This value should be well over the expected round-trip
		            time.'
		 "
	DEFVAL	{ defval }
	::= { wfOspfVirtIfEntry 7 }

wfOspfVirtIfHelloInterval OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		defval(15),
		maximum(65535)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The length of time, in seconds, between the Hello
		            packets that the router sends on the interface.  This
		            value must be the same for the virtual neighbor.'
		 "
	DEFVAL	{ defval }
	::= { wfOspfVirtIfEntry 8 }

wfOspfVirtIfRtrDeadInterval OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		defval(60),
		maximum(2147483647)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The number of seconds that a router's Hello packets
		            have not been seen before it's neighbors declare the
		            router down.  This should be some multiple of the Hello
		            interval.  This value must be the same for the virtual
		            neighbor.'
		 "
	DEFVAL	{ defval }
	::= { wfOspfVirtIfEntry 9 }

wfOspfVirtIfAuthKey OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'If Authentication Type is simplePassword, the device
		            will left adjust and zero fill to 8 octets.
		            When read, ospfVifAuthKey always returns a string of
		            length zero.'
		         REFERENCE
		            'OSPF Version 2, Section 9 The Interface Data
		            Structure'
		 "
	::= { wfOspfVirtIfEntry 10 }

wfOspfVirtIfTxHellos OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF Hello packets transmitted on
		     Virtual Interfaces.
		 "
	::= { wfOspfVirtIfEntry 11 }

wfOspfVirtIfTxDBDescripts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF DataBase Description packets transmitted
		     on Virtual Interfaces.
		 "
	::= { wfOspfVirtIfEntry 12 }

wfOspfVirtIfTxLinkStateReqs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF Link State Request packets transmitted
		     on Virtual Interfaces.
		 "
	::= { wfOspfVirtIfEntry 13 }

wfOspfVirtIfTxLinkStateUpds OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF Link State Update packets transmitted
		     on Virtual Interfaces.
		 "
	::= { wfOspfVirtIfEntry 14 }

wfOspfVirtIfTxLinkStateAcks OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF Link State Acknowledgement packets
		     transmitted on Virtual Interfaces.
		 "
	::= { wfOspfVirtIfEntry 15 }

wfOspfVirtIfRxHellos OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF Hello packets received on
		     Virtual Interfaces.
		 "
	::= { wfOspfVirtIfEntry 16 }

wfOspfVirtIfRxDBDescripts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF DataBase Description packets received
		     on Virtual Interfaces.
		 "
	::= { wfOspfVirtIfEntry 17 }

wfOspfVirtIfRxLinkStateReqs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF Link State Request packets recieved
		     on Virtual Interfaces.
		 "
	::= { wfOspfVirtIfEntry 18 }

wfOspfVirtIfRxLinkStateUpds OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF Link State Update packets received
		     on Virtual Interfaces.
		 "
	::= { wfOspfVirtIfEntry 19 }

wfOspfVirtIfRxLinkStateAcks OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF Link State Acknowledgement packets
		     received on Virtual Interfaces.
		 "
	::= { wfOspfVirtIfEntry 20 }

wfOspfVirtIfDrops OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     Number of OSPF packets dropped on
		     Virtual Interfaces.
		 "
	::= { wfOspfVirtIfEntry 21 }

wfOspfNbrTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfOspfNbrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		     --  OSPF Neighbor Table
		     --      The OSPF Neighbor Table describes all neighbors in
		     --      the locality of the subject router.
		            'A table of non-virtual neighbor information.'
		         REFERENCE
		            'OSPF Version 2, Section 10 The Neighbor Data
		            Structure'
		 "
	::= { wfOspfGroup 7 }

wfOspfNbrEntry OBJECT-TYPE
	SYNTAX	WfOspfNbrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		            'The information regarding a single neighbor.'
		         REFERENCE
		            'OSPF Version 2, Section 10 The Neighbor Data
		            Structure'
		 "
	INDEX	{ wfOspfNbrIpAddr,
		wfOspfNbrAddressLessIndex }
	::= { wfOspfNbrTable 1 }

WfOspfNbrEntry ::= SEQUENCE {
	wfOspfNbrDelete
		INTEGER,
	wfOspfNbrDisable
		INTEGER,
	wfOspfNbrState
		INTEGER,
	wfOspfNbrIpAddr
		IpAddress,
	wfOspfNbrIfAddr
		IpAddress,
	wfOspfNbrAddressLessIndex
		INTEGER,
	wfOspfNbrRtrId
		IpAddress,
	wfOspfNbrOptions
		INTEGER,
	wfOspfNbrPriority
		INTEGER,
	wfOspfNbrEvents
		Counter,
	wfOspfNbrLSRetransQLen
		Gauge
}

wfOspfNbrDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     This variable indicates the existence of a static
		     OSPF neighbor.
		 "
	DEFVAL	{ created }
	::= { wfOspfNbrEntry 1 }

wfOspfNbrDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'This variable displays the status of
		            the entry.  Setting it to 'DISABLED' has the effect of
		            rendering it inoperative.  The internal effect (row
		            removal) is implementation dependent.'
		 "
	DEFVAL	{ enabled }
	::= { wfOspfNbrEntry 2 }

wfOspfNbrState OBJECT-TYPE
	SYNTAX	INTEGER {
		down(1),
		attempt(2),
		init(3),
		twoway(4),
		exchangstart(5),
		exchange(6),
		loading(7),
		full(8)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The State of the relationship with this Neighbor.'
		         REFERENCE
		            'OSPF Version 2, Section 10.1 Neighbor States'
		                     down (1),
		                     attempt (2),
		                     init (3),
		                     twoWay (4),
		                     exchangeStart (5),
		                     exchange (6),
		                     loading (7),
		                     full (8)
		 "
	DEFVAL	{ down }
	::= { wfOspfNbrEntry 3 }

wfOspfNbrIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The IP address of this neighbor.'
		 "
	::= { wfOspfNbrEntry 4 }

wfOspfNbrIfAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The Interface IP address for this neighbor.'
		 "
	::= { wfOspfNbrEntry 5 }

wfOspfNbrAddressLessIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            ' On an interface having an IP Address, zero.  On
		            addressless interfaces, the corresponding value of
		            ifIndex in the Internet Standard MIB.  On row creation,
		            this can be derived from the instance.'
		 "
	::= { wfOspfNbrEntry 6 }

wfOspfNbrRtrId OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'A 32-bit integer (represented as a type IpAddress)
		            uniquely identifying the neighboring router in the
		            Autonomous System.'
		            default { '00000000'H }    -- 0.0.0.0
		 "
	::= { wfOspfNbrEntry 7 }

wfOspfNbrOptions OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'A Bit Mask corresponding to the neighbor's options
		            field.
		            Bit 0, if set, indicates that the area accepts and
		            operates on external information; if zero, it is a stub
		            area.
		            Bit 1, if set, indicates that the system will operate
		            on Type of Service metrics other than TOS 0.  If zero,
		            the neighbor will ignore all metrics except the TOS 0
		            metric.'
		         REFERENCE
		            'OSPF Version 2, Section 12.1.2 Options'
		 "
	::= { wfOspfNbrEntry 8 }

wfOspfNbrPriority OBJECT-TYPE
	SYNTAX	INTEGER {
		defval(1),
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		            'The priority of this neighbor in the designated router
		            election algorithm.  The value 0 signifies that the
		            neighbor is not eligible to become the designated
		            router on this particular network.'
		 "
	DEFVAL	{ defval }
	::= { wfOspfNbrEntry 9 }

wfOspfNbrEvents OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The number of times this neighbor relationship has
		            changed state, or an error has occurred.'
		 "
	::= { wfOspfNbrEntry 10 }

wfOspfNbrLSRetransQLen OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The current length of the retransmission queue.'
		 "
	::= { wfOspfNbrEntry 11 }

wfOspfVirtNbrTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfOspfVirtNbrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		     --  WFOSPF Virtual Neighbor Table
		     --      This table describes all virtual neighbors.
		     --      Since Virtual Links are configured in the
		     --      virtual interface table, this table is read-only.
		            'A table of virtual neighbor information.'
		         REFERENCE
		            'OSPF Version 2, '
		 "
	::= { wfOspfGroup 8 }

wfOspfVirtNbrEntry OBJECT-TYPE
	SYNTAX	WfOspfVirtNbrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		            'Virtual neighbor information.'
		         REFERENCE
		            'OSPF Version 2, '
		 "
	INDEX	{ wfOspfVirtNbrArea,
		wfOspfVirtNbrRtrId }
	::= { wfOspfVirtNbrTable 1 }

WfOspfVirtNbrEntry ::= SEQUENCE {
	wfOspfVirtNbrArea
		IpAddress,
	wfOspfVirtNbrRtrId
		IpAddress,
	wfOspfVirtNbrIpAddr
		IpAddress,
	wfOspfVirtNbrOptions
		INTEGER,
	wfOspfVirtNbrState
		INTEGER,
	wfOspfVirtNbrEvents
		Counter,
	wfOspfVirtNbrLSRetransQLen
		Gauge
}

wfOspfVirtNbrArea OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The Transit Area Identifier.'
		 "
	::= { wfOspfVirtNbrEntry 1 }

wfOspfVirtNbrRtrId OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'A 32-bit integer uniquely identifying the neighboring
		            router in the Autonomous System.'
		 "
	::= { wfOspfVirtNbrEntry 2 }

wfOspfVirtNbrIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The IP address this Virtual Neighbor is using.'
		 "
	::= { wfOspfVirtNbrEntry 3 }

wfOspfVirtNbrOptions OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'A bit map corresponding to the neighbor's options
		            field.  Thus, Bit 1, if set, indicates that the
		            neighbor supports Type of Service Routing; if zero, no
		            metrics other than TOS 0 are in use by the neighbor.'
		 "
	::= { wfOspfVirtNbrEntry 4 }

wfOspfVirtNbrState OBJECT-TYPE
	SYNTAX	INTEGER {
		down(1),
		attempt(2),
		init(3),
		twoway(4),
		exchangstart(5),
		exchange(6),
		loading(7),
		full(8)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The state of the Virtual Neighbor Relationship.'
		                     down (1),
		                     attempt (2),
		                     init (3),
		                     twoWay (4),
		                     exchangeStart (5),
		                     exchange (6),
		                     loading (7),
		                     full (8)
		 "
	DEFVAL	{ down }
	::= { wfOspfVirtNbrEntry 5 }

wfOspfVirtNbrEvents OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The number of times this virtual link has changed its
		            state, or an error has occurred.'
		 "
	::= { wfOspfVirtNbrEntry 6 }

wfOspfVirtNbrLSRetransQLen OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The current length of the retransmission queue.'
		 "
	::= { wfOspfVirtNbrEntry 7 }

wfOspfDynNbrTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfOspfDynNbrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		     --  OSPF Dynamic Neighbor Table
		     --      The OSPF Dynamic Neighbor Table describes all neighbors in
		     --      the locality of the subject router learned during operation.
		            'A table of non-virtual neighbor information.'
		         REFERENCE
		            'OSPF Version 2, Section 10 The Neighbor Data
		            Structure'
		 "
	::= { wfOspfGroup 9 }

wfOspfDynNbrEntry OBJECT-TYPE
	SYNTAX	WfOspfDynNbrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		            'The information regarding a single neighbor.'
		         REFERENCE
		            'OSPF Version 2, Section 10 The Neighbor Data
		            Structure'
		 "
	INDEX	{ wfOspfDynNbrIpAddr,
		wfOspfDynNbrAddressLessIndex }
	::= { wfOspfDynNbrTable 1 }

WfOspfDynNbrEntry ::= SEQUENCE {
	wfOspfDynNbrState
		INTEGER,
	wfOspfDynNbrIpAddr
		IpAddress,
	wfOspfDynNbrIfAddr
		IpAddress,
	wfOspfDynNbrAddressLessIndex
		INTEGER,
	wfOspfDynNbrRtrId
		IpAddress,
	wfOspfDynNbrOptions
		INTEGER,
	wfOspfDynNbrPriority
		INTEGER,
	wfOspfDynNbrEvents
		Counter,
	wfOspfDynNbrLSRetransQLen
		Gauge
}

wfOspfDynNbrState OBJECT-TYPE
	SYNTAX	INTEGER {
		down(1),
		attempt(2),
		init(3),
		twoway(4),
		exchangstart(5),
		exchange(6),
		loading(7),
		full(8)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The State of the relationship with this Neighbor.'
		         REFERENCE
		            'OSPF Version 2, Section 10.1 Neighbor States'
		                     down (1),
		                     attempt (2),
		                     init (3),
		                     twoWay (4),
		                     exchangeStart (5),
		                     exchange (6),
		                     loading (7),
		                     full (8)
		 "
	DEFVAL	{ down }
	::= { wfOspfDynNbrEntry 1 }

wfOspfDynNbrIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The IP address of this neighbor.'
		 "
	::= { wfOspfDynNbrEntry 2 }

wfOspfDynNbrIfAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The Interface IP address for this neighbor.'
		 "
	::= { wfOspfDynNbrEntry 3 }

wfOspfDynNbrAddressLessIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            ' On an interface having an IP Address, zero.  On
		            addressless interfaces, the corresponding value of
		            ifIndex in the Internet Standard MIB.  On row creation,
		            this can be derived from the instance.'
		 "
	::= { wfOspfDynNbrEntry 4 }

wfOspfDynNbrRtrId OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'A 32-bit integer (represented as a type IpAddress)
		            uniquely identifying the neighboring router in the
		            Autonomous System.'
		            default { '00000000'H }    -- 0.0.0.0
		 "
	::= { wfOspfDynNbrEntry 5 }

wfOspfDynNbrOptions OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'A Bit Mask corresponding to the neighbor's options
		            field.
		            Bit 0, if set, indicates that the area accepts and
		            operates on external information; if zero, it is a stub
		            area.
		            Bit 1, if set, indicates that the system will operate
		            on Type of Service metrics other than TOS 0.  If zero,
		            the neighbor will ignore all metrics except the TOS 0
		            metric.'
		         REFERENCE
		            'OSPF Version 2, Section 12.1.2 Options'
		 "
	::= { wfOspfDynNbrEntry 6 }

wfOspfDynNbrPriority OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The priority of this neighbor in the designated router
		            election algorithm.  The value 0 signifies that the
		            neighbor is not eligible to become the designated
		            router on this particular network.'
		 "
	::= { wfOspfDynNbrEntry 7 }

wfOspfDynNbrEvents OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The number of times this neighbor relationship has
		            changed state, or an error has occurred.'
		 "
	::= { wfOspfDynNbrEntry 8 }

wfOspfDynNbrLSRetransQLen OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		            'The current length of the retransmission queue.'
		 "
	::= { wfOspfDynNbrEntry 9 }

wfPppLineTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfPppLineEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The Wellfleet PPP Line Configuration Table containing
		   attributes dealing with the link layer and the Link Control
		   Protocol (LCP) "
	::= { wfPppGroup 1 }

wfPppLineEntry OBJECT-TYPE
	SYNTAX	WfPppLineEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per Wellfleet PPP line configuration parameters
		    and counters "
	INDEX	{ wfPppLineLineNumber,
		wfPppLineLLIndex }
	::= { wfPppLineTable 1 }

WfPppLineEntry ::= SEQUENCE {
	wfPppLineDelete
		INTEGER,
	wfPppLineDisable
		INTEGER,
	wfPppLineState
		INTEGER,
	wfPppLineLineNumber
		INTEGER,
	wfPppLineLLIndex
		INTEGER,
	wfPppLineLcpCurrentState
		INTEGER,
	wfPppLineRestartTimer
		INTEGER,
	wfPppLineEchoRequestFreq
		INTEGER,
	wfPppLineEchoReplyLoss
		INTEGER,
	wfPppLineMaxConfReq
		INTEGER,
	wfPppLineMaxTermReq
		INTEGER,
	wfPppLineMaxConfFail
		INTEGER,
	wfPppLineMagicNumber
		Counter,
	wfPppLineMru
		INTEGER,
	wfPppLineLocalAuthProtocol
		INTEGER,
	wfPppLineRemoteAuthProtocol
		INTEGER,
	wfPppLineLocalPapId
		DisplayString,
	wfPppLineLocalPapPassword
		DisplayString,
	wfPppLineRemotePapId
		DisplayString,
	wfPppLineRemotePapPassword
		DisplayString,
	wfPppLineLQProtocol
		INTEGER,
	wfPppLineDisableRemoteLQRTimer
		INTEGER,
	wfPppLineCfgLQRRptPrd
		INTEGER,
	wfPppLineLQRRptPrd
		INTEGER,
	wfPppLineCfgInboundQuality
		INTEGER,
	wfPppLineInboundQuality
		INTEGER,
	wfPppLineCfgOutboundQuality
		INTEGER,
	wfPppLineOutboundQuality
		INTEGER,
	wfPppLineOutLQRs
		Counter,
	wfPppLineInLQRs
		Counter
}

wfPppLineDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter "
	DEFVAL	{ created }
	::= { wfPppLineEntry 1 }

wfPppLineDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter -- Generates
		  Open/Close events to the LCP FSM
		  "
	DEFVAL	{ enabled }
	::= { wfPppLineEntry 2 }

wfPppLineState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" PPP state variable, Not Present, Init, Down, Up "
	DEFVAL	{ notpresent }
	::= { wfPppLineEntry 3 }

wfPppLineLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This is the line number assigned
		    to the driver PPP is running on top of "
	::= { wfPppLineEntry 4 }

wfPppLineLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This is the lower layer index
		    presented to PPP by the layer immediately below it
		    on the protocol stack. If the lower layer is a driver,
		    the index will be 0. "
	::= { wfPppLineEntry 5 }

wfPppLineLcpCurrentState OBJECT-TYPE
	SYNTAX	INTEGER {
		starting(1),
		closed(2),
		stopped(3),
		closing(4),
		stopping(5),
		reqsent(6),
		ackrcvd(7),
		acksent(8),
		opened(9)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the current state of the LCP Finite State Machine "
	::= { wfPppLineEntry 6 }

wfPppLineRestartTimer OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1000),
		default(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" value for Restart timer in seconds "
	DEFVAL	{ default }
	::= { wfPppLineEntry 7 }

wfPppLineEchoRequestFreq OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" value for Echo-Request frequency - number of seconds
		    between transmission of Echo-Request packets "
	::= { wfPppLineEntry 8 }

wfPppLineEchoReplyLoss OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(100),
		default(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" value for Echo-Reply acceptable loss - number of
		    unacknowledged Echo-Reply packets counted before
		    declaring the link down "
	DEFVAL	{ default }
	::= { wfPppLineEntry 9 }

wfPppLineMaxConfReq OBJECT-TYPE
	SYNTAX	INTEGER {
		mimimum(1),
		maximum(100000),
		default(1000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" value for maximum Configure-Requests - number of
		    Configure-Request packets sent without receiving a
		    valid Configure-Ack, Configure-Nak or Configure-Reject
		    before assuming peer is unable to respond "
	DEFVAL	{ default }
	::= { wfPppLineEntry 10 }

wfPppLineMaxTermReq OBJECT-TYPE
	SYNTAX	INTEGER {
		mimimum(1),
		maximum(100),
		default(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" value for maximum Terminate-Requests - number of
		    Terminate-Request packets sent without receiving a
		    Terminate-Ack before assuming peer is unable to respond "
	DEFVAL	{ default }
	::= { wfPppLineEntry 11 }

wfPppLineMaxConfFail OBJECT-TYPE
	SYNTAX	INTEGER {
		mimimum(1),
		maximum(100),
		default(10)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" value for maximum configuration failure count - number of
		    Configure-Nak packets sent without sending a 
		    Configure-Ack before assuming configuration is unable to 
		    converge "
	DEFVAL	{ default }
	::= { wfPppLineEntry 12 }

wfPppLineMagicNumber OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the Magic Number being used on this line "
	::= { wfPppLineEntry 13 }

wfPppLineMru OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this is the MRU being used on the line (in both
		    directions) "
	::= { wfPppLineEntry 14 }

wfPppLineLocalAuthProtocol OBJECT-TYPE
	SYNTAX	INTEGER {
		passauth(49187),
		none(1)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" this is the authorization protocol we require our peer
		    to use on our side of the link "
	DEFVAL	{ none }
	::= { wfPppLineEntry 15 }

wfPppLineRemoteAuthProtocol OBJECT-TYPE
	SYNTAX	INTEGER {
		passauth(49187),
		none(1)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this is the authorization protocol our peer requires us
		    to use on its side of the link "
	DEFVAL	{ none }
	::= { wfPppLineEntry 16 }

wfPppLineLocalPapId OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" our PAP id - our peer sends this to us in an
		    Authenticate-Request message "
	::= { wfPppLineEntry 17 }

wfPppLineLocalPapPassword OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" our PAP password - our peer sends this to us in an
		    Authenticate-Request message "
	::= { wfPppLineEntry 18 }

wfPppLineRemotePapId OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" our peer's PAP id - we send this to our
		    peer in an Authenticate-Request message "
	::= { wfPppLineEntry 19 }

wfPppLineRemotePapPassword OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" our peer's PAP password - we send this to our
		    peer in an Authenticate-Request message "
	::= { wfPppLineEntry 20 }

wfPppLineLQProtocol OBJECT-TYPE
	SYNTAX	INTEGER {
		linkqr(49189),
		none(1)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the Link Quality protocol we want to use "
	DEFVAL	{ none }
	::= { wfPppLineEntry 21 }

wfPppLineDisableRemoteLQRTimer OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" enable/disable our peer's LQR timer - this allows
		    for one side to maintain the timer while the
		    other just responds to LQR packets "
	DEFVAL	{ enabled }
	::= { wfPppLineEntry 22 }

wfPppLineCfgLQRRptPrd OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(3),
		maximum(120)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" this is the value in seconds between transmission
		    of LQR packets (Reporting-Period) - it will be the
		    same on both sides "
	DEFVAL	{ default }
	::= { wfPppLineEntry 23 }

wfPppLineLQRRptPrd OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this is the Reporting-Period, in seconds, agreed upon
		    during negotiation - we allow the peer to negotiate
		    down from our configured period, our maximum, but not
		    below 1 second "
	::= { wfPppLineEntry 24 }

wfPppLineCfgInboundQuality OBJECT-TYPE
	SYNTAX	INTEGER {
		default(90),
		maximum(100)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the percentage of packets sent by our peer that
		    we've successfully received (over the last 5 LQR
		    Reporting-Periods) - 100 indicates we won't tolerate
		    any loss "
	DEFVAL	{ default }
	::= { wfPppLineEntry 25 }

wfPppLineInboundQuality OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the current inbound quality "
	::= { wfPppLineEntry 26 }

wfPppLineCfgOutboundQuality OBJECT-TYPE
	SYNTAX	INTEGER {
		default(90),
		maximum(100)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the percentage of packets sent by us that our
		    peer successfully received (over the last 5 LQR
		    Reporting-Periods) - 100 indicates we won't tolerate
		    any loss "
	DEFVAL	{ default }
	::= { wfPppLineEntry 27 }

wfPppLineOutboundQuality OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the current inbound quality "
	::= { wfPppLineEntry 28 }

wfPppLineOutLQRs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the number of Link-Quality-Report packets we've
		    transmitted "
	::= { wfPppLineEntry 29 }

wfPppLineInLQRs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the number of Link-Quality-Report packets we've
		    received "
	::= { wfPppLineEntry 30 }

wfPppCircuitTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfPppCircuitEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The Wellfleet PPP Circuit Configuration Table containing
		   attributes dealing with the network layer and each
		   Network Control Protocol (NCP) "
	::= { wfPppGroup 2 }

wfPppCircuitEntry OBJECT-TYPE
	SYNTAX	WfPppCircuitEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per Wellfleet circuit PPP configuration parameters and
		    counters "
	INDEX	{ wfPppCircuitID }
	::= { wfPppCircuitTable 1 }

WfPppCircuitEntry ::= SEQUENCE {
	wfPppCircuitDelete
		INTEGER,
	wfPppCircuitState
		INTEGER,
	wfPppCircuitIpcpCurrentState
		INTEGER,
	wfPppCircuitOsinlcpCurrentState
		INTEGER,
	wfPppCircuitXnscpCurrentState
		INTEGER,
	wfPppCircuitDncpCurrentState
		INTEGER,
	wfPppCircuitAtcpCurrentState
		INTEGER,
	wfPppCircuitIpxcpCurrentState
		INTEGER,
	wfPppCircuitBncpCurrentState
		INTEGER,
	wfPppCircuitVncpCurrentState
		INTEGER,
	wfPppCircuitID
		INTEGER,
	wfPppCircuitIpDisable
		INTEGER,
	wfPppCircuitOsinlDisable
		INTEGER,
	wfPppCircuitXnsDisable
		INTEGER,
	wfPppCircuitDecnetDisable
		INTEGER,
	wfPppCircuitAppletalkDisable
		INTEGER,
	wfPppCircuitIpxDisable
		INTEGER,
	wfPppCircuitBridgeDisable
		INTEGER,
	wfPppCircuitVinesDisable
		INTEGER,
	wfPppCircuitCfgLocalIpAddr
		IpAddress,
	wfPppCircuitLocalIpAddr
		IpAddress,
	wfPppCircuitCfgRemoteIpAddr
		IpAddress,
	wfPppCircuitRemoteIpAddr
		IpAddress,
	wfPppCircuitCfgIpxNetworkNumber
		OCTET STRING,
	wfPppCircuitIpxNetworkNumber
		OCTET STRING,
	wfPppCircuitIpxRemoteNodeNumber
		OCTET STRING,
	wfPppCircuitCfgIpxRoutingProtocol
		INTEGER,
	wfPppCircuitIpxRoutingProtocol
		INTEGER,
	wfPppCircuitLocalIpxRouterName
		DisplayString,
	wfPppCircuitRemoteIpxRouterName
		DisplayString,
	wfPppCircuitIpxConfigComplete
		INTEGER,
	wfPppCircuitCfgAtNetwork
		INTEGER,
	wfPppCircuitAtNetwork
		INTEGER,
	wfPppCircuitCfgLocalAtNode
		INTEGER,
	wfPppCircuitLocalAtNode
		INTEGER,
	wfPppCircuitCfgRemoteAtNode
		INTEGER,
	wfPppCircuitRemoteAtNode
		INTEGER,
	wfPppCircuitCfgAtRoutingProtocol
		INTEGER,
	wfPppCircuitAtRoutingProtocol
		INTEGER,
	wfPppCircuitCfgBridgeEnet
		INTEGER,
	wfPppCircuitBridgeEnet
		INTEGER,
	wfPppCircuitCfgBridgeFddi
		INTEGER,
	wfPppCircuitBridgeFddi
		INTEGER,
	wfPppCircuitCfgBridgeTokenRing
		INTEGER,
	wfPppCircuitBridgeTokenRing
		INTEGER,
	wfPppCircuitBadPackets
		Counter,
	wfPppCircuitLastBadPacket
		OCTET STRING
}

wfPppCircuitDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter "
	DEFVAL	{ created }
	::= { wfPppCircuitEntry 1 }

wfPppCircuitState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" PPP state variable, Not Present, Init, Down, Up "
	DEFVAL	{ notpresent }
	::= { wfPppCircuitEntry 2 }

wfPppCircuitIpcpCurrentState OBJECT-TYPE
	SYNTAX	INTEGER {
		starting(1),
		closed(2),
		stopped(3),
		closing(4),
		stopping(5),
		reqsent(6),
		ackrcvd(7),
		acksent(8),
		opened(9)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the current state of the IPCP Finite State Machine "
	::= { wfPppCircuitEntry 3 }

wfPppCircuitOsinlcpCurrentState OBJECT-TYPE
	SYNTAX	INTEGER {
		starting(1),
		closed(2),
		stopped(3),
		closing(4),
		stopping(5),
		reqsent(6),
		ackrcvd(7),
		acksent(8),
		opened(9)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the current state of the OSINLCP Finite State Machine "
	::= { wfPppCircuitEntry 4 }

wfPppCircuitXnscpCurrentState OBJECT-TYPE
	SYNTAX	INTEGER {
		starting(1),
		closed(2),
		stopped(3),
		closing(4),
		stopping(5),
		reqsent(6),
		ackrcvd(7),
		acksent(8),
		opened(9)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the current state of the XNSCP Finite State Machine "
	::= { wfPppCircuitEntry 5 }

wfPppCircuitDncpCurrentState OBJECT-TYPE
	SYNTAX	INTEGER {
		starting(1),
		closed(2),
		stopped(3),
		closing(4),
		stopping(5),
		reqsent(6),
		ackrcvd(7),
		acksent(8),
		opened(9)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the current state of the DNCP Finite State Machine "
	::= { wfPppCircuitEntry 6 }

wfPppCircuitAtcpCurrentState OBJECT-TYPE
	SYNTAX	INTEGER {
		starting(1),
		closed(2),
		stopped(3),
		closing(4),
		stopping(5),
		reqsent(6),
		ackrcvd(7),
		acksent(8),
		opened(9)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the current state of the ATCP Finite State Machine "
	::= { wfPppCircuitEntry 7 }

wfPppCircuitIpxcpCurrentState OBJECT-TYPE
	SYNTAX	INTEGER {
		starting(1),
		closed(2),
		stopped(3),
		closing(4),
		stopping(5),
		reqsent(6),
		ackrcvd(7),
		acksent(8),
		opened(9)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the current state of the IPXCP Finite State Machine "
	::= { wfPppCircuitEntry 8 }

wfPppCircuitBncpCurrentState OBJECT-TYPE
	SYNTAX	INTEGER {
		starting(1),
		closed(2),
		stopped(3),
		closing(4),
		stopping(5),
		reqsent(6),
		ackrcvd(7),
		acksent(8),
		opened(9)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the current state of the BNCP Finite State Machine "
	::= { wfPppCircuitEntry 9 }

wfPppCircuitVncpCurrentState OBJECT-TYPE
	SYNTAX	INTEGER {
		starting(1),
		closed(2),
		stopped(3),
		closing(4),
		stopping(5),
		reqsent(6),
		ackrcvd(7),
		acksent(8),
		opened(9)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the current state of the VNCP Finite State Machine "
	::= { wfPppCircuitEntry 10 }

wfPppCircuitID OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1023)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" cct number for this instance "
	::= { wfPppCircuitEntry 11 }

wfPppCircuitIpDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" enable/disable IP Protocol - disabling generates
		    a Close event to the IPCP FSM and consequently disallows
		    IP traffic on this circuit "
	DEFVAL	{ disabled }
	::= { wfPppCircuitEntry 12 }

wfPppCircuitOsinlDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" enable/disable OSI Network Layer Protocol -
		    disabling generates a Close event to the OSINLCP FSM
		    and consequently disallows OSI traffic on this circuit "
	DEFVAL	{ disabled }
	::= { wfPppCircuitEntry 13 }

wfPppCircuitXnsDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" enable/disable XNS Protocol - disabling generates
		    a Close event to the XNSCP FSM and consequently
		    disallows XNS traffic on this circuit "
	DEFVAL	{ disabled }
	::= { wfPppCircuitEntry 14 }

wfPppCircuitDecnetDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" enable/disable DECnet Protocol - disabling generates
		    a Close event to the DNCP FSM and consequently
		    disallows DECnet traffic on this circuit "
	DEFVAL	{ disabled }
	::= { wfPppCircuitEntry 15 }

wfPppCircuitAppletalkDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" enable/disable AppleTalk Protocol - disabling generates
		    a Close event to the ATCP FSM and consequently
		    disallows AppleTalk traffic on this circuit "
	DEFVAL	{ disabled }
	::= { wfPppCircuitEntry 16 }

wfPppCircuitIpxDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" enable/disable IPX Protocol - disabling generates
		    a Close event to the IPXCP FSM and consequently
		    disallows IPX traffic on this circuit "
	DEFVAL	{ disabled }
	::= { wfPppCircuitEntry 17 }

wfPppCircuitBridgeDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" enable/disable the Bridge - disabling generates
		    a Close event to the BNCP FSM and consequently
		    disallows bridge traffic on this circuit "
	DEFVAL	{ disabled }
	::= { wfPppCircuitEntry 18 }

wfPppCircuitVinesDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" enable/disable Vines Protocol - disabling generates
		    a Close event to the VNCP FSM and consequently
		    disallows Vines traffic on this circuit "
	DEFVAL	{ disabled }
	::= { wfPppCircuitEntry 19 }

wfPppCircuitCfgLocalIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the IP address we're going to use "
	::= { wfPppCircuitEntry 20 }

wfPppCircuitLocalIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the IP address our peer wants us to use "
	::= { wfPppCircuitEntry 21 }

wfPppCircuitCfgRemoteIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the IP address we want our peer to use "
	::= { wfPppCircuitEntry 22 }

wfPppCircuitRemoteIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the IP address our peer wants to use "
	::= { wfPppCircuitEntry 23 }

wfPppCircuitCfgIpxNetworkNumber OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the configured IPX Network Number to be used by
		    both us and our peer "
	::= { wfPppCircuitEntry 24 }

wfPppCircuitIpxNetworkNumber OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the result of IPX Network Number negotiation "
	::= { wfPppCircuitEntry 25 }

wfPppCircuitIpxRemoteNodeNumber OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" this is what we'll tell our peer to use for node
		    number if it sends us a 0 "
	::= { wfPppCircuitEntry 26 }

wfPppCircuitCfgIpxRoutingProtocol OBJECT-TYPE
	SYNTAX	INTEGER {
		ripsap(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the desired IPX Routing Protocol to be used on
		    the link "
	DEFVAL	{ ripsap }
	::= { wfPppCircuitEntry 27 }

wfPppCircuitIpxRoutingProtocol OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the negotiated IPX Routing Protocol to be used on
		    the link "
	::= { wfPppCircuitEntry 28 }

wfPppCircuitLocalIpxRouterName OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" our IPX Router Name "
	::= { wfPppCircuitEntry 29 }

wfPppCircuitRemoteIpxRouterName OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" our peer's IPX Router Name "
	::= { wfPppCircuitEntry 30 }

wfPppCircuitIpxConfigComplete OBJECT-TYPE
	SYNTAX	INTEGER {
		true(1),
		false(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" indicates whether or not IPXCP converged on all
		    required options "
	::= { wfPppCircuitEntry 31 }

wfPppCircuitCfgAtNetwork OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the configured AppleTalk network number - our
		    peer must use the same number "
	::= { wfPppCircuitEntry 32 }

wfPppCircuitAtNetwork OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the AppleTalk network number we agreed to use "
	::= { wfPppCircuitEntry 33 }

wfPppCircuitCfgLocalAtNode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the AppleTalk node number we're configured to use "
	::= { wfPppCircuitEntry 34 }

wfPppCircuitLocalAtNode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" our AppleTalk node number after negotiation "
	::= { wfPppCircuitEntry 35 }

wfPppCircuitCfgRemoteAtNode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the AppleTalk node number we want our peer to use "
	::= { wfPppCircuitEntry 36 }

wfPppCircuitRemoteAtNode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" our peer's AppleTalk node number after negotiation "
	::= { wfPppCircuitEntry 37 }

wfPppCircuitCfgAtRoutingProtocol OBJECT-TYPE
	SYNTAX	INTEGER {
		rtmp(1),
		aurp(2),
		abgp(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" the desired AppleTalk Routing Protocol to be used on
		    the link "
	DEFVAL	{ rtmp }
	::= { wfPppCircuitEntry 38 }

wfPppCircuitAtRoutingProtocol OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" the negotiated AppleTalk Routing Protocol to be used on
		    the link "
	::= { wfPppCircuitEntry 39 }

wfPppCircuitCfgBridgeEnet OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" allow/disallow Ethernet bridged frames "
	DEFVAL	{ enabled }
	::= { wfPppCircuitEntry 40 }

wfPppCircuitBridgeEnet OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" result of bridge MAC type negotiation for
		    Ethernet "
	::= { wfPppCircuitEntry 41 }

wfPppCircuitCfgBridgeFddi OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" allow/disallow FDDI bridged frames "
	DEFVAL	{ enabled }
	::= { wfPppCircuitEntry 42 }

wfPppCircuitBridgeFddi OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" result of bridge MAC type negotiation for
		    FDDI "
	::= { wfPppCircuitEntry 43 }

wfPppCircuitCfgBridgeTokenRing OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" allow/disallow Token Ring bridged frames "
	DEFVAL	{ enabled }
	::= { wfPppCircuitEntry 44 }

wfPppCircuitBridgeTokenRing OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" result of bridge MAC type negotiation for
		    Token Ring "
	::= { wfPppCircuitEntry 45 }

wfPppCircuitBadPackets OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" these are packets not in correct PPP format "
	::= { wfPppCircuitEntry 46 }

wfPppCircuitLastBadPacket OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this is the first 16 bytes of the last bad packet
		    we received "
	::= { wfPppCircuitEntry 47 }

wfRarp		OBJECT IDENTIFIER ::= { wfRarpGroup 1 }

wfRarpDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Create/Delete parameter. Default is created.
		 Users perform a set operation on this
		 object in order to create/delete RARP."
	DEFVAL	{ created }
	::= { wfRarp 1 }

wfRarpDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable Parameter indicates whether
		 this RARP record is enabled or disabled. "
	DEFVAL	{ enabled }
	::= { wfRarp 2 }

wfRarpNumNoMatches OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of RARP Requests dropped that failed Table Look UP "
	::= { wfRarp 3 }

wfRarpMapTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfRarpMapEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" List of configured RARP MAP Table entries "
	::= { wfRarpGroup 2 }

wfRarpMapEntry OBJECT-TYPE
	SYNTAX	WfRarpMapEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A description of an RARP map "
	INDEX	{ wfRarpMapMadr }
	::= { wfRarpMapTable 1 }

WfRarpMapEntry ::= SEQUENCE {
	wfRarpMapDelete
		INTEGER,
	wfRarpMapMadr
		OCTET STRING,
	wfRarpMapIpAddr
		IpAddress
}

wfRarpMapDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates whether this RARP Map record is to be deleted or created "
	DEFVAL	{ created }
	::= { wfRarpMapEntry 1 }

wfRarpMapMadr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Mac Address in RARP Request pkts "
	::= { wfRarpMapEntry 2 }

wfRarpMapIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" IP Address of Requesting Station "
	::= { wfRarpMapEntry 3 }

wfRarpIntfTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfRarpIntfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" List of configured RARP interfaces "
	::= { wfRarpGroup 3 }

wfRarpIntfEntry OBJECT-TYPE
	SYNTAX	WfRarpIntfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A description of an RARP interface "
	INDEX	{ wfRarpIntfCctno }
	::= { wfRarpIntfTable 1 }

WfRarpIntfEntry ::= SEQUENCE {
	wfRarpIntfDelete
		INTEGER,
	wfRarpIntfDisable
		INTEGER,
	wfRarpIntfCctno
		INTEGER,
	wfRarpIntfIpAddr
		IpAddress
}

wfRarpIntfDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates whether this RARP intf record is to be deleted or created "
	DEFVAL	{ created }
	::= { wfRarpIntfEntry 1 }

wfRarpIntfDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indicates whether this RARP intf record is to be enabled or disabled "
	DEFVAL	{ enabled }
	::= { wfRarpIntfEntry 2 }

wfRarpIntfCctno OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Which Circuit rarp should run on "
	::= { wfRarpIntfEntry 3 }

wfRarpIntfIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" RARP Server's IP Address on this circuit "
	::= { wfRarpIntfEntry 4 }

wfIpRfRipImportTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpRfRipImportEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of Rip Import Route Filter Rules in IP "
	::= { wfIpGroup 8 }

wfIpRfRipImportEntry OBJECT-TYPE
	SYNTAX	WfIpRfRipImportEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Rip Import Rule Table "
	INDEX	{ wfIpRfRipImportAddress,
		wfIpRfRipImportMask,
		wfIpRfRipImportRipGateway,
		wfIpRfRipImportRipInterface }
	::= { wfIpRfRipImportTable 1 }

WfIpRfRipImportEntry ::= SEQUENCE {
	wfIpRfRipImportCreate
		INTEGER,
	wfIpRfRipImportEnable
		INTEGER,
	wfIpRfRipImportAddress
		IpAddress,
	wfIpRfRipImportMask
		IpAddress,
	wfIpRfRipImportAction
		INTEGER,
	wfIpRfRipImportPreference
		INTEGER,
	wfIpRfRipImportRipGateway
		IpAddress,
	wfIpRfRipImportRipInterface
		IpAddress,
	wfIpRfRipImportApplyMask
		IpAddress
}

wfIpRfRipImportCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Create/Delete parameter. Default is created.
		     Users perform an SNMP SET operation on this
		     object in order to create/delete this Rule."
	DEFVAL	{ create }
	::= { wfIpRfRipImportEntry 1 }

wfIpRfRipImportEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Enable/Disable parameter. Default is enabled.
		     Users perform an SNMP SET operation on this
		     object in order to enable/disable this Rule."
	DEFVAL	{ enable }
	::= { wfIpRfRipImportEntry 2 }

wfIpRfRipImportAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP address to which this filter applies "
	::= { wfIpRfRipImportEntry 3 }

wfIpRfRipImportMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Mask to which this filter applies. When combined
		       with the Address, a range is specified for application
		       of this rule "
	::= { wfIpRfRipImportEntry 4 }

wfIpRfRipImportAction OBJECT-TYPE
	SYNTAX	INTEGER {
		accept(1),
		ignore(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Action of this Filter "
	DEFVAL	{ accept }
	::= { wfIpRfRipImportEntry 5 }

wfIpRfRipImportPreference OBJECT-TYPE
	SYNTAX	INTEGER {
		dflt(1),
		maximum(16)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Preference associated with this filter - only valid if accept "
	DEFVAL	{ dflt }
	::= { wfIpRfRipImportEntry 6 }

wfIpRfRipImportRipGateway OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The RIP Gateway to be concerned with "
	::= { wfIpRfRipImportEntry 7 }

wfIpRfRipImportRipInterface OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP Network Interface to be concerned with "
	::= { wfIpRfRipImportEntry 8 }

wfIpRfRipImportApplyMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Mask to apply to this route learned instead of the default.
		       NULL means to apply the normal filter "
	::= { wfIpRfRipImportEntry 9 }

wfIpRfRipExportTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpRfRipExportEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of Rip Export Route Filter Rules in IP "
	::= { wfIpGroup 9 }

wfIpRfRipExportEntry OBJECT-TYPE
	SYNTAX	WfIpRfRipExportEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Rip Export Rule Table "
	INDEX	{ wfIpRfRipExportAddress,
		wfIpRfRipExportMask,
		wfIpRfRipExportFromProtocol,
		wfIpRfRipExportInterface }
	::= { wfIpRfRipExportTable 1 }

WfIpRfRipExportEntry ::= SEQUENCE {
	wfIpRfRipExportCreate
		INTEGER,
	wfIpRfRipExportEnable
		INTEGER,
	wfIpRfRipExportAddress
		IpAddress,
	wfIpRfRipExportMask
		IpAddress,
	wfIpRfRipExportFromProtocol
		INTEGER,
	wfIpRfRipExportAction
		INTEGER,
	wfIpRfRipExportInterface
		IpAddress,
	wfIpRfRipExportRipMetric
		INTEGER
}

wfIpRfRipExportCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Create/Delete parameter. Default is created.
		     Users perform an SNMP SET operation on this
		     object in order to create/delete this Rule."
	DEFVAL	{ create }
	::= { wfIpRfRipExportEntry 1 }

wfIpRfRipExportEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Enable/Disable parameter. Default is enabled.
		     Users perform an SNMP SET operation on this
		     object in order to enable/disable this Rule."
	DEFVAL	{ enable }
	::= { wfIpRfRipExportEntry 2 }

wfIpRfRipExportAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP address to which this filter applies "
	::= { wfIpRfRipExportEntry 3 }

wfIpRfRipExportMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Mask for the Address Above. When combined
		       with the Address, a range is specified for application
		       of this filter rule "
	::= { wfIpRfRipExportEntry 4 }

wfIpRfRipExportFromProtocol OBJECT-TYPE
	SYNTAX	INTEGER {
		rip(1),
		egp(2),
		ospf(3),
		direct(4),
		static(5),
		bgp3(6)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The protocol from which this Information is derived "
	::= { wfIpRfRipExportEntry 5 }

wfIpRfRipExportAction OBJECT-TYPE
	SYNTAX	INTEGER {
		propa(2),
		ignore(3),
		aggregate(4)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The action of this export filter;
		       if IP_RF_RIP_EXP_ACTION_AGGREGATE action, the default
		       route, 0.0.0.0, is advertised instead networks that match
		       this filter "
	DEFVAL	{ propa }
	::= { wfIpRfRipExportEntry 6 }

wfIpRfRipExportInterface OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The optional outbound interface on which to apply this filter "
	::= { wfIpRfRipExportEntry 7 }

wfIpRfRipExportRipMetric OBJECT-TYPE
	SYNTAX	INTEGER {
		maximum(15)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The optional export RIP metric to apply to this filter.
		       Zero means: use the route's actual cost. Only valid for propagate "
	::= { wfIpRfRipExportEntry 8 }

wfIpRfOspfImportTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpRfOspfImportEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of OSPF Import Route Filter Rules in IP "
	::= { wfIpGroup 10 }

wfIpRfOspfImportEntry OBJECT-TYPE
	SYNTAX	WfIpRfOspfImportEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the OSPF Import Route Filter Table "
	INDEX	{ wfIpRfOspfImportAddress,
		wfIpRfOspfImportMask,
		wfIpRfOspfImportType,
		wfIpRfOspfImportTag }
	::= { wfIpRfOspfImportTable 1 }

WfIpRfOspfImportEntry ::= SEQUENCE {
	wfIpRfOspfImportCreate
		INTEGER,
	wfIpRfOspfImportEnable
		INTEGER,
	wfIpRfOspfImportAddress
		IpAddress,
	wfIpRfOspfImportMask
		IpAddress,
	wfIpRfOspfImportAction
		INTEGER,
	wfIpRfOspfImportPreference
		INTEGER,
	wfIpRfOspfImportType
		INTEGER,
	wfIpRfOspfImportTag
		INTEGER
}

wfIpRfOspfImportCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Create/Delete parameter. Default is created.
		     Users perform an SNMP SET operation on this
		     object in order to create/delete this Rule."
	DEFVAL	{ create }
	::= { wfIpRfOspfImportEntry 1 }

wfIpRfOspfImportEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Enable/Disable parameter. Default is enabled.
		     Users perform an SNMP SET operation on this
		     object in order to enable/disable this Rule."
	DEFVAL	{ enable }
	::= { wfIpRfOspfImportEntry 2 }

wfIpRfOspfImportAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP Address to which this filter applies "
	::= { wfIpRfOspfImportEntry 3 }

wfIpRfOspfImportMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Mask to which this filter applies. When combined
		       with the Address, a range is specified for application
		       of this rule "
	::= { wfIpRfOspfImportEntry 4 }

wfIpRfOspfImportAction OBJECT-TYPE
	SYNTAX	INTEGER {
		accept(1),
		ignore(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Action of this Filter "
	DEFVAL	{ accept }
	::= { wfIpRfOspfImportEntry 5 }

wfIpRfOspfImportPreference OBJECT-TYPE
	SYNTAX	INTEGER {
		dflt(1),
		maximum(16)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Preference associated with this filter - only valid if accept "
	DEFVAL	{ dflt }
	::= { wfIpRfOspfImportEntry 6 }

wfIpRfOspfImportType OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The OSPF route Type to be concerned with. The valid values are null
		       (any route type), 1 (OSPF external type 1), and 2 (OSPF external
		       type 2).  "
	::= { wfIpRfOspfImportEntry 7 }

wfIpRfOspfImportTag OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The OSPF Tag to be concerned with "
	::= { wfIpRfOspfImportEntry 8 }

wfIpRfOspfExportTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpRfOspfExportEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of OSPF Export Route Filter Rules in IP "
	::= { wfIpGroup 11 }

wfIpRfOspfExportEntry OBJECT-TYPE
	SYNTAX	WfIpRfOspfExportEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the OSPF Export Route Filter Table "
	INDEX	{ wfIpRfOspfExportAddress,
		wfIpRfOspfExportMask,
		wfIpRfOspfExportFromProtocol }
	::= { wfIpRfOspfExportTable 1 }

WfIpRfOspfExportEntry ::= SEQUENCE {
	wfIpRfOspfExportCreate
		INTEGER,
	wfIpRfOspfExportEnable
		INTEGER,
	wfIpRfOspfExportAddress
		IpAddress,
	wfIpRfOspfExportMask
		IpAddress,
	wfIpRfOspfExportFromProtocol
		INTEGER,
	wfIpRfOspfExportAction
		INTEGER,
	wfIpRfOspfExportType
		INTEGER,
	wfIpRfOspfExportTag
		INTEGER,
	wfIpRfOspfExportAutoTag
		INTEGER
}

wfIpRfOspfExportCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Create/Delete parameter. Default is created.
		     Users perform an SNMP SET operation on this
		     object in order to create/delete this Rule."
	DEFVAL	{ create }
	::= { wfIpRfOspfExportEntry 1 }

wfIpRfOspfExportEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Enable/Disable parameter. Default is enabled.
		     Users perform an SNMP SET operation on this
		     object in order to enable/disable this Rule."
	DEFVAL	{ enable }
	::= { wfIpRfOspfExportEntry 2 }

wfIpRfOspfExportAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP address to which this filter applies "
	::= { wfIpRfOspfExportEntry 3 }

wfIpRfOspfExportMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Mask for the Address Above. When combined
		       with the Address, a range is specified for application
		       of this filter rule "
	::= { wfIpRfOspfExportEntry 4 }

wfIpRfOspfExportFromProtocol OBJECT-TYPE
	SYNTAX	INTEGER {
		rip(1),
		egp(2),
		ospf(3),
		direct(4),
		static(5),
		bgp3(6)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The protocol from which this Information is derived "
	::= { wfIpRfOspfExportEntry 5 }

wfIpRfOspfExportAction OBJECT-TYPE
	SYNTAX	INTEGER {
		propa(2),
		ignore(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The action of this export filter "
	DEFVAL	{ propa }
	::= { wfIpRfOspfExportEntry 6 }

wfIpRfOspfExportType OBJECT-TYPE
	SYNTAX	INTEGER {
		type1(1),
		type2(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The ospf type to use when this filter matches "
	DEFVAL	{ type1 }
	::= { wfIpRfOspfExportEntry 7 }

wfIpRfOspfExportTag OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The ospf tag to use when this filter matches "
	::= { wfIpRfOspfExportEntry 8 }

wfIpRfOspfExportAutoTag OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" BGP/OSPF automatic tag generation: if enabled, a tag will be
		       generated according to the criteria in RFC 1364.  Only valid if
		       wfIpRfOspfExportType is set.  If enabled, wfIpRfOspfExportTag 
		       is ignored.  "
	DEFVAL	{ disable }
	::= { wfIpRfOspfExportEntry 9 }

wfIpRfEgpImportTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpRfEgpImportEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of Egp Import Route Filter Rules in IP "
	::= { wfIpGroup 12 }

wfIpRfEgpImportEntry OBJECT-TYPE
	SYNTAX	WfIpRfEgpImportEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Egp Import Rule Table "
	INDEX	{ wfIpRfEgpImportAddress,
		wfIpRfEgpImportPeer,
		wfIpRfEgpImportAs,
		wfIpRfEgpImportGateway }
	::= { wfIpRfEgpImportTable 1 }

WfIpRfEgpImportEntry ::= SEQUENCE {
	wfIpRfEgpImportCreate
		INTEGER,
	wfIpRfEgpImportEnable
		INTEGER,
	wfIpRfEgpImportAddress
		IpAddress,
	wfIpRfEgpImportMask
		IpAddress,
	wfIpRfEgpImportAction
		INTEGER,
	wfIpRfEgpImportPreference
		INTEGER,
	wfIpRfEgpImportPeer
		IpAddress,
	wfIpRfEgpImportAs
		INTEGER,
	wfIpRfEgpImportGateway
		IpAddress
}

wfIpRfEgpImportCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created. Users perform an SNMP
		  SET operation on this object in order to create/delete this Rule.
		     "
	DEFVAL	{ create }
	::= { wfIpRfEgpImportEntry 1 }

wfIpRfEgpImportEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled. Users perform an SNMP
		  SET operation on this object in order to enable/disable this Rule.
		     "
	DEFVAL	{ enable }
	::= { wfIpRfEgpImportEntry 2 }

wfIpRfEgpImportAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The advertised network to which this filter applies "
	::= { wfIpRfEgpImportEntry 3 }

wfIpRfEgpImportMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Mask of the Address to which this filter applies. "
	::= { wfIpRfEgpImportEntry 4 }

wfIpRfEgpImportAction OBJECT-TYPE
	SYNTAX	INTEGER {
		accept(1),
		ignore(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Action of this Filter "
	DEFVAL	{ accept }
	::= { wfIpRfEgpImportEntry 5 }

wfIpRfEgpImportPreference OBJECT-TYPE
	SYNTAX	INTEGER {
		dflt(1),
		maximum(16)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Preference associated with this filter - only valid if accept "
	DEFVAL	{ dflt }
	::= { wfIpRfEgpImportEntry 6 }

wfIpRfEgpImportPeer OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Egp Peer to be to be concerned with "
	::= { wfIpRfEgpImportEntry 7 }

wfIpRfEgpImportAs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Autonomous System number to be concerned with "
	::= { wfIpRfEgpImportEntry 8 }

wfIpRfEgpImportGateway OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The EGP gateway to be concerned with "
	::= { wfIpRfEgpImportEntry 9 }

wfIpRfEgpExportTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpRfEgpExportEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of Egp Export Route Filter Rules in IP "
	::= { wfIpGroup 13 }

wfIpRfEgpExportEntry OBJECT-TYPE
	SYNTAX	WfIpRfEgpExportEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Egp Export Rule Table "
	INDEX	{ wfIpRfEgpExportAddress,
		wfIpRfEgpExportMask,
		wfIpRfEgpExportFromProtocol,
		wfIpRfEgpExportPeer,
		wfIpRfEgpExportOspfType,
		wfIpRfEgpExportOspfTag }
	::= { wfIpRfEgpExportTable 1 }

WfIpRfEgpExportEntry ::= SEQUENCE {
	wfIpRfEgpExportCreate
		INTEGER,
	wfIpRfEgpExportEnable
		INTEGER,
	wfIpRfEgpExportAddress
		IpAddress,
	wfIpRfEgpExportMask
		IpAddress,
	wfIpRfEgpExportFromProtocol
		INTEGER,
	wfIpRfEgpExportAction
		INTEGER,
	wfIpRfEgpExportPeer
		IpAddress,
	wfIpRfEgpExportOspfType
		INTEGER,
	wfIpRfEgpExportOspfTag
		INTEGER,
	wfIpRfEgpExportInterface
		IpAddress,
	wfIpRfEgpExportMetric
		INTEGER
}

wfIpRfEgpExportCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created. Users perform an SNMP
		   SET operation on this object in order to create/delete this Rule.
		     "
	DEFVAL	{ create }
	::= { wfIpRfEgpExportEntry 1 }

wfIpRfEgpExportEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled. Users perform an SNMP
		  SET operation on this object in order to enable/disable this Rule.
		      "
	DEFVAL	{ enable }
	::= { wfIpRfEgpExportEntry 2 }

wfIpRfEgpExportAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The advertised network to which this filter applies "
	::= { wfIpRfEgpExportEntry 3 }

wfIpRfEgpExportMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Mask of the Address to which this filter applies. "
	::= { wfIpRfEgpExportEntry 4 }

wfIpRfEgpExportFromProtocol OBJECT-TYPE
	SYNTAX	INTEGER {
		rip(1),
		egp(2),
		ospf(3),
		direct(4),
		static(5),
		bgp3(6)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The protocol from which this Information is derived "
	::= { wfIpRfEgpExportEntry 5 }

wfIpRfEgpExportAction OBJECT-TYPE
	SYNTAX	INTEGER {
		propa(2),
		ignore(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The action of this export filter "
	DEFVAL	{ propa }
	::= { wfIpRfEgpExportEntry 6 }

wfIpRfEgpExportPeer OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Egp Peer to be to be concerned with "
	::= { wfIpRfEgpExportEntry 7 }

wfIpRfEgpExportOspfType OBJECT-TYPE
	SYNTAX	INTEGER {
		ospfexttype1(1),
		ospfexttype2(2),
		ospfinttype(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The type of route being filtered. This field is only valid if the
		  wfIpRfEgpExportFromProtocol is OSPF. Otherwise, the field is 0.
		       "
	::= { wfIpRfEgpExportEntry 8 }

wfIpRfEgpExportOspfTag OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The tag of the route being filtered. This field is only valid if
		  the wfIpRfEgpExportFromProtocol is OSPF. Otherwise, this field is 0.
		       "
	::= { wfIpRfEgpExportEntry 9 }

wfIpRfEgpExportInterface OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The optional outbound interface on which to apply this filter "
	::= { wfIpRfEgpExportEntry 10 }

wfIpRfEgpExportMetric OBJECT-TYPE
	SYNTAX	INTEGER {
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The optional export Egp metric to apply to this filter. Zero means:
		  use the route's actual cost. Only valid for propagate 
		       "
	::= { wfIpRfEgpExportEntry 11 }

wfIpRfBgp3ImportTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpRfBgp3ImportEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The table of BGP-3 Import Route Filter Rules "
	::= { wfIpGroup 14 }

wfIpRfBgp3ImportEntry OBJECT-TYPE
	SYNTAX	WfIpRfBgp3ImportEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the BGP-3 Import Rule Table "
	INDEX	{ wfIpRfBgp3ImportAddress,
		wfIpRfBgp3ImportMask,
		wfIpRfBgp3ImportPeerAs,
		wfIpRfBgp3ImportPeerAddress,
		wfIpRfBgp3ImportOrigAs,
		wfIpRfBgp3ImportRouteOrigin }
	::= { wfIpRfBgp3ImportTable 1 }

WfIpRfBgp3ImportEntry ::= SEQUENCE {
	wfIpRfBgp3ImportCreate
		INTEGER,
	wfIpRfBgp3ImportEnable
		INTEGER,
	wfIpRfBgp3ImportAddress
		IpAddress,
	wfIpRfBgp3ImportMask
		IpAddress,
	wfIpRfBgp3ImportAction
		INTEGER,
	wfIpRfBgp3ImportPreference
		INTEGER,
	wfIpRfBgp3ImportPeerAs
		INTEGER,
	wfIpRfBgp3ImportPeerAddress
		IpAddress,
	wfIpRfBgp3ImportOrigAs
		INTEGER,
	wfIpRfBgp3ImportRouteOrigin
		INTEGER,
	wfIpRfBgp3ImportBgp3Preference
		INTEGER
}

wfIpRfBgp3ImportCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. if set to delete, the rule is removed. "
	DEFVAL	{ create }
	::= { wfIpRfBgp3ImportEntry 1 }

wfIpRfBgp3ImportEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. controls whether the rule is enabled
		    or disabled."
	DEFVAL	{ enable }
	::= { wfIpRfBgp3ImportEntry 2 }

wfIpRfBgp3ImportAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The advertised network to which this filter applies. Zero implies
		    `all networks' or the default route, based on
		    wfIpRfBgp3ImportMask. "
	::= { wfIpRfBgp3ImportEntry 3 }

wfIpRfBgp3ImportMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The mask applied to wfIpRfBgp3ImportAddress. If zero, this filter
		    applies to all networks. If the address is zero and this parameter
		    is 255.255.255.255, this filter applies to the default route. "
	::= { wfIpRfBgp3ImportEntry 4 }

wfIpRfBgp3ImportAction OBJECT-TYPE
	SYNTAX	INTEGER {
		accept(1),
		ignore(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Action of this Filter "
	DEFVAL	{ ignore }
	::= { wfIpRfBgp3ImportEntry 5 }

wfIpRfBgp3ImportPreference OBJECT-TYPE
	SYNTAX	INTEGER {
		dflt(1),
		maximum(16)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Preference associated with this filter - only valid if accept "
	DEFVAL	{ dflt }
	::= { wfIpRfBgp3ImportEntry 6 }

wfIpRfBgp3ImportPeerAs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The BGP-3 Peer's AS number (or zero if `any AS') "
	::= { wfIpRfBgp3ImportEntry 7 }

wfIpRfBgp3ImportPeerAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP address (not the peer ID) of the peer that this advertisement
		    was received from (zero if `any peer') "
	::= { wfIpRfBgp3ImportEntry 8 }

wfIpRfBgp3ImportOrigAs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The AS number of the BGP-3 gateway that originated the route
		    (or zero for `any AS') "
	::= { wfIpRfBgp3ImportEntry 9 }

wfIpRfBgp3ImportRouteOrigin OBJECT-TYPE
	SYNTAX	INTEGER {
		igp(1),
		egp(2),
		incomplete(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A value for the ORIGIN path attribute (or zero if not applicable) "
	::= { wfIpRfBgp3ImportEntry 10 }

wfIpRfBgp3ImportBgp3Preference OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(4294967295)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Preference associated with this filter for comparison to
		    other BGP routes only - only valid if accept "
	DEFVAL	{ minimum }
	::= { wfIpRfBgp3ImportEntry 11 }

wfIpRfBgp3ExportTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfIpRfBgp3ExportEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The table of BGP-3 Export Route Filter Rules "
	::= { wfIpGroup 15 }

wfIpRfBgp3ExportEntry OBJECT-TYPE
	SYNTAX	WfIpRfBgp3ExportEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the BGP-3 Export Rule Table "
	INDEX	{ wfIpRfBgp3ExportAddress,
		wfIpRfBgp3ExportMask,
		wfIpRfBgp3ExportFromProtocol,
		wfIpRfBgp3ExportPeerAs,
		wfIpRfBgp3ExportPeerAddress,
		wfIpRfBgp3ExportOspfType,
		wfIpRfBgp3ExportOspfTag }
	::= { wfIpRfBgp3ExportTable 1 }

WfIpRfBgp3ExportEntry ::= SEQUENCE {
	wfIpRfBgp3ExportCreate
		INTEGER,
	wfIpRfBgp3ExportEnable
		INTEGER,
	wfIpRfBgp3ExportAddress
		IpAddress,
	wfIpRfBgp3ExportMask
		IpAddress,
	wfIpRfBgp3ExportFromProtocol
		INTEGER,
	wfIpRfBgp3ExportAction
		INTEGER,
	wfIpRfBgp3ExportPeerAs
		INTEGER,
	wfIpRfBgp3ExportPeerAddress
		IpAddress,
	wfIpRfBgp3ExportOspfType
		INTEGER,
	wfIpRfBgp3ExportOspfTag
		INTEGER,
	wfIpRfBgp3ExportUseMetric
		INTEGER,
	wfIpRfBgp3ExportInterAsMetric
		INTEGER,
	wfIpRfBgp3ExportOrigin
		INTEGER,
	wfIpRfBgp3ExportNeighAs
		INTEGER
}

wfIpRfBgp3ExportCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete: if set to delete, the rule is removed "
	DEFVAL	{ create }
	::= { wfIpRfBgp3ExportEntry 1 }

wfIpRfBgp3ExportEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable: controls whether the rule is enabled or disabled "
	DEFVAL	{ enable }
	::= { wfIpRfBgp3ExportEntry 2 }

wfIpRfBgp3ExportAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The advertised network to which this filter applies. Zero implies
		    `all networks' or the default route, based on
		     wfIpRfBgp3ExportMask. "
	::= { wfIpRfBgp3ExportEntry 3 }

wfIpRfBgp3ExportMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The mask applied to wfIpRfBgp3ExportAddress. If zero, this filter
		    applies to all networks. If the address is zero and this parameter
		    is 255.255.255.255, this filter applies to the default route. "
	::= { wfIpRfBgp3ExportEntry 4 }

wfIpRfBgp3ExportFromProtocol OBJECT-TYPE
	SYNTAX	INTEGER {
		rip(1),
		egp(2),
		ospf(3),
		direct(4),
		static(5),
		bgp3(6)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The protocol from which this Information is derived "
	::= { wfIpRfBgp3ExportEntry 5 }

wfIpRfBgp3ExportAction OBJECT-TYPE
	SYNTAX	INTEGER {
		propa(2),
		ignore(3),
		aggregate(4)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The action of this export filter;
		    if IP_RF_BGP3_EXP_ACTION_AGGREGATE action, the default
		    route, 0.0.0.0, is advertised instead networks that match
		    this filter "
	DEFVAL	{ ignore }
	::= { wfIpRfBgp3ExportEntry 6 }

wfIpRfBgp3ExportPeerAs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The AS number to which the network advertisement is going (zero
		    if `any AS') "
	::= { wfIpRfBgp3ExportEntry 7 }

wfIpRfBgp3ExportPeerAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP address (not the peer ID) of the peer that this advertisement
		    is going to (zero if `any peer') "
	::= { wfIpRfBgp3ExportEntry 8 }

wfIpRfBgp3ExportOspfType OBJECT-TYPE
	SYNTAX	INTEGER {
		ospfexttype1(1),
		ospfexttype2(2),
		ospfinttype(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The type of route being filtered. This field is only valid if the
		     wfIpRfEgpExportFromProtocol is OSPF. Otherwise, the field is 0. "
	::= { wfIpRfBgp3ExportEntry 9 }

wfIpRfBgp3ExportOspfTag OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The OSPF tag of the route being filtered. This field is only valid
		    if the wfIpRfBgp3ExportFromProtocol is OSPF and
		    wfIpRfBgp3ExportOspfType is external type 1 or 2. Otherwise,
		    this field is 0. "
	::= { wfIpRfBgp3ExportEntry 10 }

wfIpRfBgp3ExportUseMetric OBJECT-TYPE
	SYNTAX	INTEGER {
		none(1),
		specified(2),
		originating(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Determines whether or not an INTER_AS_METRIC will be advertised
		    for the associated network(s).  none (1) indicates that no
		    metric will be advertised.  specified (2) indicates that the
		    value in wfIpRfBgp3ExportInterAsMetric will be used.
		    originating (3) indicates that the metric from the originating
		    protocol will be used.  Only valid for propagate. "
	DEFVAL	{ none }
	::= { wfIpRfBgp3ExportEntry 11 }

wfIpRfBgp3ExportInterAsMetric OBJECT-TYPE
	SYNTAX	INTEGER {
		maximum(65535)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" If wfIpRfBgp3ExportUseMetric is set to specified (2),
		    this is the value that will be used for the INTER_AS_METRIC.
		    Only valid for propagate. "
	::= { wfIpRfBgp3ExportEntry 12 }

wfIpRfBgp3ExportOrigin OBJECT-TYPE
	SYNTAX	INTEGER {
		igp(1),
		egp(2),
		incomplete(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The value to use for the ORIGIN path attribute when advertising
		    this route (zero means `do according to default'). Only valid for
		    propagate action. Only valid if route origin is RIP or STATIC
		    (ignored otherwise). "
	::= { wfIpRfBgp3ExportEntry 13 }

wfIpRfBgp3ExportNeighAs OBJECT-TYPE
	SYNTAX	INTEGER {
		maximum(65535)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" If action is propagate, route origin is RIP or STATIC, and
		    ExportOrigin is EGP, this AS number is used as the EGP neighbor
		    AS number when constructing the AS-PATH (ignored otherwise). "
	::= { wfIpRfBgp3ExportEntry 14 }

wfSipL2 OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfSipL2Entry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The SIP L2 Table "
	::= { wfSipGroup 1 }

wfSipL2Entry OBJECT-TYPE
	SYNTAX	WfSipL2Entry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit SIP Level 2 objects - wfSipL2Index
		    corresponds to Wellfleet circuit number "
	INDEX	{ wfSipL2Index }
	::= { wfSipL2 1 }

WfSipL2Entry ::= SEQUENCE {
	wfSipL2Index
		INTEGER,
	wfSipL2ReceivedCounts
		Counter,
	wfSipL2SentCounts
		Counter,
	wfSipHcsOrCRCErrors
		Counter,
	wfSipL2PayloadLengthErrors
		Counter,
	wfSipL2SequenceNumberErrors
		Counter,
	wfSipL2MidCurrentlyActiveErrors
		Counter,
	wfSipL2BomOrSSMsMIDErrors
		Counter,
	wfSipL2EomsMIDErrors
		Counter
}

wfSipL2Index OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this corresponds to the Wellfleet circuit number "
	::= { wfSipL2Entry 1 }

wfSipL2ReceivedCounts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total of unerrored received SIP L2 PDUs "
	::= { wfSipL2Entry 2 }

wfSipL2SentCounts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total of unerrored SIP L2 PDU's sent across the SNI "
	::= { wfSipL2Entry 3 }

wfSipHcsOrCRCErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total SIP L2 PDUs with HCS or CRC errors "
	::= { wfSipL2Entry 4 }

wfSipL2PayloadLengthErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total SIP L2 PDUs with length errors "
	::= { wfSipL2Entry 5 }

wfSipL2SequenceNumberErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" total SIP L2 PDUs with unexpected sequence numbers "
	::= { wfSipL2Entry 6 }

wfSipL2MidCurrentlyActiveErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" number of SIP L2 PDUs with BOMs previously started "
	::= { wfSipL2Entry 7 }

wfSipL2BomOrSSMsMIDErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" number of SIP L2 PDUs with zero BOMs or SSMs not zero "
	::= { wfSipL2Entry 8 }

wfSipL2EomsMIDErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" number of SIP L2 PDUs with zero EOMs or EOMs without BOMs "
	::= { wfSipL2Entry 9 }

wfSipDs1Plcp OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfSipDs1PlcpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The SIP DS1 PLCP Table "
	::= { wfSipPlcpGroup 1 }

wfSipDs1PlcpEntry OBJECT-TYPE
	SYNTAX	WfSipDs1PlcpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit DS1 PLCP objects - wfSipDs1PlcpIndex
		    corresponds to Wellfleet circuit number "
	INDEX	{ wfSipDs1PlcpIndex }
	::= { wfSipDs1Plcp 1 }

WfSipDs1PlcpEntry ::= SEQUENCE {
	wfSipDs1PlcpIndex
		INTEGER,
	wfSipDs1PlcpSEFs
		Counter,
	wfSipDs1PlcpAlarmState
		INTEGER,
	wfSipDs1PlcpUASs
		Counter
}

wfSipDs1PlcpIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this corresponds to the Wellfleet circuit number "
	::= { wfSipDs1PlcpEntry 1 }

wfSipDs1PlcpSEFs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" number of second intervals containing one or more
		    severely errored seconds "
	::= { wfSipDs1PlcpEntry 2 }

wfSipDs1PlcpAlarmState OBJECT-TYPE
	SYNTAX	INTEGER {
		noalarm(1),
		receivedfarendalarm(2),
		incominglof(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" alarm state "
	::= { wfSipDs1PlcpEntry 3 }

wfSipDs1PlcpUASs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" number of second intervals containing one or more unavailable
		    seconds "
	::= { wfSipDs1PlcpEntry 4 }

wfSipDs3Plcp OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfSipDs3PlcpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The SIP DS3 PLCP Table "
	::= { wfSipPlcpGroup 2 }

wfSipDs3PlcpEntry OBJECT-TYPE
	SYNTAX	WfSipDs3PlcpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per circuit DS3 PLCP objects - wfSipDs3PlcpIndex
		    corresponds to Wellfleet circuit number "
	INDEX	{ wfSipDs3PlcpIndex }
	::= { wfSipDs3Plcp 1 }

WfSipDs3PlcpEntry ::= SEQUENCE {
	wfSipDs3PlcpIndex
		INTEGER,
	wfSipDs3PlcpSEFs
		Counter,
	wfSipDs3PlcpAlarmState
		INTEGER,
	wfSipDs3PlcpUASs
		Counter
}

wfSipDs3PlcpIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" this corresponds to the Wellfleet circuit number "
	::= { wfSipDs3PlcpEntry 1 }

wfSipDs3PlcpSEFs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" number of second intervals containing one or more
		    severely errored seconds "
	::= { wfSipDs3PlcpEntry 2 }

wfSipDs3PlcpAlarmState OBJECT-TYPE
	SYNTAX	INTEGER {
		noalarm(1),
		receivedfarendalarm(2),
		incominglof(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" alarm state "
	::= { wfSipDs3PlcpEntry 3 }

wfSipDs3PlcpUASs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" number of second intervals containing one or more unavailable
		    seconds "
	::= { wfSipDs3PlcpEntry 4 }

wfSmdsCircuitTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfSmdsCircuitEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The Wellfleet SMDS Circuit Record "
	::= { wfWanGroup 3 }

wfSmdsCircuitEntry OBJECT-TYPE
	SYNTAX	WfSmdsCircuitEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" per Wellfleet circuit SMDS configuration parameters and
		    counters "
	INDEX	{ wfSmdsCircuitID }
	::= { wfSmdsCircuitTable 1 }

WfSmdsCircuitEntry ::= SEQUENCE {
	wfSmdsCircuitDelete
		INTEGER,
	wfSmdsCircuitDisable
		INTEGER,
	wfSmdsCircuitState
		INTEGER,
	wfSmdsCircuitID
		INTEGER,
	wfSmdsCircuitIndivAddr
		OCTET STRING,
	wfSmdsCircuitGroupAddr
		OCTET STRING,
	wfSmdsCircuitArpAddr
		OCTET STRING,
	wfSmdsCircuitDisableHrtbtPoll
		INTEGER,
	wfSmdsCircuitHrtbtPollInterval
		INTEGER,
	wfSmdsCircuitHrtbtPollDownCount
		INTEGER,
	wfSmdsCircuitDisableNetMgmt
		INTEGER,
	wfSmdsCircuitSipL3ReceivedIndividualDAs
		Counter,
	wfSmdsCircuitSipL3ReceivedGAs
		Counter,
	wfSmdsCircuitSipL3SentIndividualDAs
		Counter,
	wfSmdsCircuitSipL3SentGAs
		Counter,
	wfSmdsCircuitSipL3VersionSupport
		INTEGER
}

wfSmdsCircuitDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" create/delete parameter, dflt = created "
	DEFVAL	{ created }
	::= { wfSmdsCircuitEntry 1 }

wfSmdsCircuitDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" enable/disable parameter, dflt = enabled"
	DEFVAL	{ enabled }
	::= { wfSmdsCircuitEntry 2 }

wfSmdsCircuitState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" SMDS state variable, Up, Down Init, Not Present "
	DEFVAL	{ notpresent }
	::= { wfSmdsCircuitEntry 3 }

wfSmdsCircuitID OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1023)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" cct number for this instance "
	::= { wfSmdsCircuitEntry 4 }

wfSmdsCircuitIndivAddr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" SMDS E.164 Individual address for this Wellfleet
		    circuit - must be 8 octets long "
	::= { wfSmdsCircuitEntry 5 }

wfSmdsCircuitGroupAddr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" SMDS E.164 Group address for this Wellfleet
		    circuit - must be 8 octets long "
	::= { wfSmdsCircuitEntry 6 }

wfSmdsCircuitArpAddr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" SMDS E.164 ARP address for this Wellfleet
		    circuit - must be 8 octets long "
	::= { wfSmdsCircuitEntry 7 }

wfSmdsCircuitDisableHrtbtPoll OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" determine use of DXI heartbeat poll "
	DEFVAL	{ disabled }
	::= { wfSmdsCircuitEntry 8 }

wfSmdsCircuitHrtbtPollInterval OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(6),
		default(10)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" heartbeat polling messages get sent every this many
		    seconds - we don't want the polling interval to be
		    less than or equal to the unacknowledgment timer, which
		    is 5 seconds "
	DEFVAL	{ default }
	::= { wfSmdsCircuitEntry 9 }

wfSmdsCircuitHrtbtPollDownCount OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" if this many consecutive heartbeat polling messages
		    go unacknowledged, log an event declaring the line
		    down "
	DEFVAL	{ default }
	::= { wfSmdsCircuitEntry 10 }

wfSmdsCircuitDisableNetMgmt OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" determine use of LMI network management "
	DEFVAL	{ disabled }
	::= { wfSmdsCircuitEntry 11 }

wfSmdsCircuitSipL3ReceivedIndividualDAs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of individually addressed SIP Level 3 PDUs
		    received from the remote system across the SNI. The total
		    includes only unerrored L3PDUs. "
	::= { wfSmdsCircuitEntry 12 }

wfSmdsCircuitSipL3ReceivedGAs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of group addressed SIP Level 3 PDUs
		    received from the remote system across the SNI.  The 
		    total includes only unerrored L3PDUs. "
	::= { wfSmdsCircuitEntry 13 }

wfSmdsCircuitSipL3SentIndividualDAs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of individually addressed SIP Level 3 PDUs
		    that have been sent by this system across the SNI. "
	::= { wfSmdsCircuitEntry 14 }

wfSmdsCircuitSipL3SentGAs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of group addressed SIP L3PDUs that have been
		    sent by this system across the SNI. "
	::= { wfSmdsCircuitEntry 15 }

wfSmdsCircuitSipL3VersionSupport OBJECT-TYPE
	SYNTAX	INTEGER {
		version(1)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A value which indicates the version(s) of SIP
		    that this interface supports.  The value is a sum.
		    This sum initially takes the value zero.  For each
		    version, V, that this interface supports, 2 raised
		    to (V - 1) is added to the sum. For example, a
		    port supporting versions 1 and 2 would have a
		    value of (2^(1-1)+2^(2-1))=3.  The
		    SipL3VersionSupport is effectively a bit mask with
		    Version 1 equal to the least significant bit (LSB). "
	DEFVAL	{ version }
	::= { wfSmdsCircuitEntry 16 }

wfSnmp		OBJECT IDENTIFIER ::= { wfSnmpGroup 1 }

wfSnmpDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enables or disables the SNMP subsystem "
	DEFVAL	{ enabled }
	::= { wfSnmp 1 }

wfSnmpUseLock OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Flag to indicate whether set locking mechanism is enabled or
		  disabled. Set locking permits only one manager to perform
		  SNMP sets to the system at any given time.  A genErr will
		  be returned to managers that are locked out. "
	DEFVAL	{ enabled }
	::= { wfSnmp 2 }

wfSnmpLockAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Address of remote manager that is enforcing the lock. This
		  value is set by the SNMP agent.  Remote managers are only 
		  allowed to clear it.  "
	::= { wfSnmp 3 }

wfSnmpLockTimeOut OBJECT-TYPE
	SYNTAX	INTEGER {
		default(2),
		minimum(1),
		maximum(60)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The maximum time (in minutes) a lock can be idle before it is
		  cleared.  An idle period is a time interval with no sets from
		  the locking manager. "
	DEFVAL	{ default }
	::= { wfSnmp 4 }

wfSnmpAuth OBJECT-TYPE
	SYNTAX	INTEGER {
		trivial(1),
		party(2),
		proprietary(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The type of authentication used by the agent (set through
		  console interface). "
	DEFVAL	{ trivial }
	::= { wfSnmp 5 }

wfSnmpInPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of PDUs received by SNMP from transport entity "
	::= { wfSnmp 6 }

wfSnmpOutPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of PDUs sent by SNMP to transport entity "
	::= { wfSnmp 7 }

wfSnmpInBadVersions OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of PDUs requesting unsupported versions "
	::= { wfSnmp 8 }

wfSnmpInBadCommunityNames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of PDUs which had an invalid community string "
	::= { wfSnmp 9 }

wfSnmpInBadCommunityUses OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of PDUs requesting an operation unsupported by
		  the community "
	::= { wfSnmp 10 }

wfSnmpInASNParseErrs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of ASN.1 parsing errors during decoding "
	::= { wfSnmp 11 }

wfSnmpInBadTypes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of PDUs having an unknown PDU type "
	::= { wfSnmp 12 }

wfSnmpInTooBigs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of PDUs delivered with ErrorStatus='tooBig' "
	::= { wfSnmp 13 }

wfSnmpInNoSuchNames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of PDUs delivered with ErrorStatus='noSuchName' "
	::= { wfSnmp 14 }

wfSnmpInBadValues OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of PDUs delivered with ErrorStatus='badValue' "
	::= { wfSnmp 15 }

wfSnmpInReadOnlys OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of PDUs delivered with ErrorStatus='readOnly' "
	::= { wfSnmp 16 }

wfSnmpInGenErrs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of PDUs delivered with ErrorStatus='genErr' "
	::= { wfSnmp 17 }

wfSnmpInTotalReqVars OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of MIB objects retrieved successfully by the
		  agent "
	::= { wfSnmp 18 }

wfSnmpInTotalSetVars OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of MIB objects which have been SET successfully "
	::= { wfSnmp 19 }

wfSnmpInGetRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of Get-Request PDUS accepted and processed"
	::= { wfSnmp 20 }

wfSnmpInGetNexts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of GetNext-Request PDUS accepted and processed"
	::= { wfSnmp 21 }

wfSnmpInSetRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of Set-Request PDUS accepted and processed"
	::= { wfSnmp 22 }

wfSnmpInGetResponses OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of GetResponse PDUs accepted and processed"
	::= { wfSnmp 23 }

wfSnmpInTraps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of Trap PDUs accepted and processed"
	::= { wfSnmp 24 }

wfSnmpOutTooBigs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of PDUs generated by the agent with ErrorStatus=
		  'tooBig' "
	::= { wfSnmp 25 }

wfSnmpOutNoSuchNames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of PDUs generated by the agent with ErrorStatus=
		  'noSuchName' "
	::= { wfSnmp 26 }

wfSnmpOutBadValues OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of PDUs generated by the agent with ErrorStatus=
		  'badValue' "
	::= { wfSnmp 27 }

wfSnmpOutReadOnlys OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of PDUs generated by the agent with ErrorStatus=
		  'readOnly' "
	::= { wfSnmp 28 }

wfSnmpOutGenErrs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of PDUs generated by the agent with ErrorStatus=
		  'genErr' "
	::= { wfSnmp 29 }

wfSnmpOutGetRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of Get-Request PDUs generated by the agent "
	::= { wfSnmp 30 }

wfSnmpOutGetNexts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of Get-Next-Request PDUs generated by the agent "
	::= { wfSnmp 31 }

wfSnmpOutSetRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of Set-Request PDUs generated by the agent "
	::= { wfSnmp 32 }

wfSnmpOutGetResponses OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of Get-Response PDUs generated by the agent "
	::= { wfSnmp 33 }

wfSnmpOutTraps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of Trap PDUs generated by the agent "
	::= { wfSnmp 34 }

wfSnmpEnableAuthTraps OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Idicates whether agent can generate Authentication Failure
		  Traps "
	DEFVAL	{ enabled }
	::= { wfSnmp 35 }

wfSnmpTrapDebug OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" This attribute controls the specific trap filter for debug
		  messages "
	DEFVAL	{ on }
	::= { wfSnmp 36 }

wfSnmpTrapTrace OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" This attribute controls the specific trap filter for trace
		  messages "
	DEFVAL	{ on }
	::= { wfSnmp 37 }

wfSnmpTrapInfo OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" This attribute controls the specific trap filter for
		  informational messages "
	DEFVAL	{ off }
	::= { wfSnmp 38 }

wfSnmpTrapWarn OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" This attribute controls the specific trap filter for warning
		  messages "
	DEFVAL	{ off }
	::= { wfSnmp 39 }

wfSnmpTrapFault OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" This attribute controls the specific trap filter for fault
		  messages "
	DEFVAL	{ off }
	::= { wfSnmp 40 }

wfSnmpPropEncryption OBJECT-TYPE
	SYNTAX	INTEGER {
		wflt(1),
		others(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The encryption algorithm to use in proprietary security "
	DEFVAL	{ wflt }
	::= { wfSnmp 41 }

wfSnmpCommTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfSnmpCommEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table containing valid management communities "
	::= { wfSnmpGroup 2 }

wfSnmpCommEntry OBJECT-TYPE
	SYNTAX	WfSnmpCommEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Information about a particular community "
	INDEX	{ wfSnmpCommIndex }
	::= { wfSnmpCommTable 1 }

WfSnmpCommEntry ::= SEQUENCE {
	wfSnmpCommDelete
		INTEGER,
	wfSnmpCommIndex
		INTEGER,
	wfSnmpCommName
		DisplayString,
	wfSnmpCommAccess
		INTEGER
}

wfSnmpCommDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" A flag to indicate community instance deletion "
	DEFVAL	{ created }
	::= { wfSnmpCommEntry 1 }

wfSnmpCommIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A unique numeric value that has a one to one correspondence
		  with the community name "
	::= { wfSnmpCommEntry 2 }

wfSnmpCommName OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Community name "
	::= { wfSnmpCommEntry 3 }

wfSnmpCommAccess OBJECT-TYPE
	SYNTAX	INTEGER {
		readonly(1),
		readwrite(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Community access mode "
	DEFVAL	{ readonly }
	::= { wfSnmpCommEntry 4 }

wfSnmpMgrTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfSnmpMgrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table containing managers and their respective communities "
	::= { wfSnmpGroup 3 }

wfSnmpMgrEntry OBJECT-TYPE
	SYNTAX	WfSnmpMgrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Information about a manager of a community "
	INDEX	{ wfSnmpMgrCommIndex,
		wfSnmpMgrAddress }
	::= { wfSnmpMgrTable 1 }

WfSnmpMgrEntry ::= SEQUENCE {
	wfSnmpMgrDelete
		INTEGER,
	wfSnmpMgrCommIndex
		INTEGER,
	wfSnmpMgrAddress
		IpAddress,
	wfSnmpMgrName
		DisplayString,
	wfSnmpMgrTrapPort
		INTEGER,
	wfSnmpMgrTraps
		INTEGER,
	wfSnmpMgrEncrSeed1
		INTEGER,
	wfSnmpMgrEncrSeed2
		INTEGER,
	wfSnmpMgrEncrSeed3
		INTEGER,
	wfSnmpMgrEncrSeed4
		INTEGER,
	wfSnmpMgrEncrSeed5
		INTEGER
}

wfSnmpMgrDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" A flag to indicate manager instance deletion "
	DEFVAL	{ created }
	::= { wfSnmpMgrEntry 1 }

wfSnmpMgrCommIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Associates this manager with a community in the community
		  table "
	::= { wfSnmpMgrEntry 2 }

wfSnmpMgrAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" IP Address of this manager "
	::= { wfSnmpMgrEntry 3 }

wfSnmpMgrName OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" A name for this manager "
	::= { wfSnmpMgrEntry 4 }

wfSnmpMgrTrapPort OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The UDP Port on which this manager is listening for traps "
	DEFVAL	{ 162 }
	::= { wfSnmpMgrEntry 5 }

wfSnmpMgrTraps OBJECT-TYPE
	SYNTAX	INTEGER {
		none(1),
		generic(2),
		specific(4),
		all(7)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Allowable trap types to be sent to Manager "
	DEFVAL	{ generic }
	::= { wfSnmpMgrEntry 6 }

wfSnmpMgrEncrSeed1 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The encrypted value of the seed counter for application 1 of
		  this manager "
	::= { wfSnmpMgrEntry 7 }

wfSnmpMgrEncrSeed2 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The encrypted value of the seed counter for application 2 of
		  this manager "
	::= { wfSnmpMgrEntry 8 }

wfSnmpMgrEncrSeed3 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The encrypted value of the seed counter for application 3 of
		  this manager "
	::= { wfSnmpMgrEntry 9 }

wfSnmpMgrEncrSeed4 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The encrypted value of the seed counter for application 4 of
		  this manager "
	::= { wfSnmpMgrEntry 10 }

wfSnmpMgrEncrSeed5 OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The encrypted value of the seed counter for application 5 of
		  this manager "
	::= { wfSnmpMgrEntry 11 }

wfSnmpTrapEntityTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfSnmpTrapEntityEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table of Entity Trap switches ; indexed by entity number
		  and slot "
	::= { wfSnmpGroup 5 }

wfSnmpTrapEntityEntry OBJECT-TYPE
	SYNTAX	WfSnmpTrapEntityEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An Entity Trap Switch Entry "
	INDEX	{ wfSnmpTrapEntityNumber,
		wfSnmpTrapEntitySlot }
	::= { wfSnmpTrapEntityTable 1 }

WfSnmpTrapEntityEntry ::= SEQUENCE {
	wfSnmpTrapEntityDelete
		INTEGER,
	wfSnmpTrapEntityDisable
		INTEGER,
	wfSnmpTrapEntityNumber
		INTEGER,
	wfSnmpTrapEntitySlot
		INTEGER,
	wfSnmpTrapEntityName
		DisplayString,
	wfSnmpTrapEntityFault
		INTEGER,
	wfSnmpTrapEntityWarn
		INTEGER,
	wfSnmpTrapEntityInfo
		INTEGER,
	wfSnmpTrapEntityTrace
		INTEGER,
	wfSnmpTrapEntityDebug
		INTEGER
}

wfSnmpTrapEntityDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"  A flag to indicate entity instance deletion "
	DEFVAL	{ created }
	::= { wfSnmpTrapEntityEntry 1 }

wfSnmpTrapEntityDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable an entity's traps. "
	DEFVAL	{ enabled }
	::= { wfSnmpTrapEntityEntry 2 }

wfSnmpTrapEntityNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Entity number "
	::= { wfSnmpTrapEntityEntry 3 }

wfSnmpTrapEntitySlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Slot number "
	::= { wfSnmpTrapEntityEntry 4 }

wfSnmpTrapEntityName OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Entity Name "
	::= { wfSnmpTrapEntityEntry 5 }

wfSnmpTrapEntityFault OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  This attribute controls the entity's fault messages. 
		  A trap will be generated when this is turned ON.
		"
	DEFVAL	{ off }
	::= { wfSnmpTrapEntityEntry 6 }

wfSnmpTrapEntityWarn OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  This attribute controls the entity's warning messages.
		  A trap will be generated when this is turned ON.
		"
	DEFVAL	{ off }
	::= { wfSnmpTrapEntityEntry 7 }

wfSnmpTrapEntityInfo OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  This attribute controls the entity's info messages.
		  A trap will be generated when this is turned ON.
		"
	DEFVAL	{ off }
	::= { wfSnmpTrapEntityEntry 8 }

wfSnmpTrapEntityTrace OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  This attribute controls the entity's info messages.
		  A trap will be generated when this is turned ON.
		"
	DEFVAL	{ off }
	::= { wfSnmpTrapEntityEntry 9 }

wfSnmpTrapEntityDebug OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  This attribute controls the entity's debug messages.
		  A trap will be generated when this is turned ON. 
		"
	DEFVAL	{ off }
	::= { wfSnmpTrapEntityEntry 10 }

wfSnmpTrapEventTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfSnmpTrapEventEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table of Event Trap switches ; indexed by entity and event
		  number "
	::= { wfSnmpGroup 6 }

wfSnmpTrapEventEntry OBJECT-TYPE
	SYNTAX	WfSnmpTrapEventEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An Event Trap Switch Entry "
	INDEX	{ wfSnmpTrapEventEntity,
		wfSnmpTrapEventNumber }
	::= { wfSnmpTrapEventTable 1 }

WfSnmpTrapEventEntry ::= SEQUENCE {
	wfSnmpTrapEventDelete
		INTEGER,
	wfSnmpTrapEventDisable
		INTEGER,
	wfSnmpTrapEventEntity
		INTEGER,
	wfSnmpTrapEventNumber
		INTEGER,
	wfSnmpTrapEventName
		DisplayString
}

wfSnmpTrapEventDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete a trap event switch. "
	DEFVAL	{ created }
	::= { wfSnmpTrapEventEntry 1 }

wfSnmpTrapEventDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable trap. "
	DEFVAL	{ enabled }
	::= { wfSnmpTrapEventEntry 2 }

wfSnmpTrapEventEntity OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Entity number "
	::= { wfSnmpTrapEventEntry 3 }

wfSnmpTrapEventNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Event number "
	::= { wfSnmpTrapEventEntry 4 }

wfSnmpTrapEventName OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Entity name of event "
	::= { wfSnmpTrapEventEntry 5 }

wfBrStp		OBJECT IDENTIFIER ::= { wfSpanningTree 1 }

wfBrStpBaseDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		  Users perform an SNMP SET operation on this
		  object in order to create/delete the Spanning
		  tree. "
	DEFVAL	{ created }
	::= { wfBrStp 1 }

wfBrStpBaseEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		  Users perform an SNMP SET operation on this
		  object in order to enable/disable the spanning
		  tree. "
	DEFVAL	{ enabled }
	::= { wfBrStp 2 }

wfBrStpBaseState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		pres(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current state of the spanning tree. "
	DEFVAL	{ down }
	::= { wfBrStp 3 }

wfBrStpProtocolSpecification OBJECT-TYPE
	SYNTAX	INTEGER {
		unknown(1),
		declb100(2),
		ieee8021d(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The version of the Spanning Tree protocol being
		  run. "
	DEFVAL	{ ieee8021d }
	::= { wfBrStp 4 }

wfBrStpBridgeID OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Spanning Tree Bridge ID assigned to this
		  bridge.  It is a 8-octet string.  The first two
		  octets make up the bridge priority, and the last
		  six are the MAC address of this bridge, which
		  is commonly the MAC address of the first port
		  on the bridge. "
	::= { wfBrStp 5 }

wfBrStpTimeSinceTopologyChange OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The time (in hundredths of a second) since the last
		  topology change was detected by the bridge. "
	::= { wfBrStp 6 }

wfBrStpTopChanges OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of topology changes detected by
		  this bridge since it was last reset or initialized "
	::= { wfBrStp 7 }

wfBrStpDesignatedRoot OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The bridge ID of the root of the spanning tree as
		  determined by the Spanning Tree Protocol as 
		  executed by the bridge. This value is used as
		  the Root Identifier parameter in all Configuration
		  Bridge PDUs originated by this node. It is a 8-octet 
		  string.  The first two octets make up the priority, 
		  and the last six are the MAC address of the designated
		  root bridge. "
	::= { wfBrStp 8 }

wfBrStpRootCost OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The cost of the path to the root as seen from this
		  bridge. "
	::= { wfBrStp 9 }

wfBrStpRootPort OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The port identifier of the port which offers the
		    lowest cost path from this bridge to the root bridge. "
	::= { wfBrStp 10 }

wfBrStpMaxAge OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The maximum age of the Spanning Tree Protocol
		  information learned from the network on any port
		  before it is discarded, in hundredths of a second.
		  This represents the value actually in use by the 
		  bridge. "
	::= { wfBrStp 11 }

wfBrStpHelloTime OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The amount of time between transmission of
		  configuration BPDUs by this bridge on any port,
		  when it is the root of the spanning tree or
		  trying to become so, in hundreths of a second.  
		  This represents the value actually in use by the bridge. "
	::= { wfBrStp 12 }

wfBrStpHoldTime OBJECT-TYPE
	SYNTAX	INTEGER {
		time(100)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The value that determines the interval length during
		  which no more than two configuration BPDUs shall be
		  transmitted by this bridge, in hundredths of a second. "
	DEFVAL	{ time }
	::= { wfBrStp 13 }

wfBrStpForwardDelay OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The time, in hundredths of a second, that a port
		  on this bridge will stay in a transitional state
		  (e.g. LISTENING) before moving to the next state
		  (e.g. LEARNING).  This value is also used to age
		  all dynamic entries in the Forwarding Database
		  when a topology changed has been detected and is
		  underway. This represents the value actually in 
		  use by the bridge. "
	::= { wfBrStp 14 }

wfBrStpBridgeMaxAge OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(600),
		default(2000),
		maximum(4000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The value that all bridges use for MaxAge when
		  this bridge acting as the root. "
	DEFVAL	{ default }
	::= { wfBrStp 15 }

wfBrStpBridgeHelloTime OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(100),
		default(200),
		maximum(1000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The value that all bridges use for HelloTime when
		  this bridge acting as the root. "
	DEFVAL	{ default }
	::= { wfBrStp 16 }

wfBrStpBridgeForwardDelay OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(400),
		default(1500),
		maximum(3000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The value that all bridges use for ForwardDelay when
		  this bridge acting as the root. "
	DEFVAL	{ default }
	::= { wfBrStp 17 }

wfBrStpInterface OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBrStpInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" inst_id[1] = wfBrStpInterfaceCircuit "
	::= { wfSpanningTree 2 }

wfBrStpInterfaceEntry OBJECT-TYPE
	SYNTAX	WfBrStpInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in wfBrStpInterface. "
	INDEX	{ wfBrStpInterfaceCircuit }
	::= { wfBrStpInterface 1 }

WfBrStpInterfaceEntry ::= SEQUENCE {
	wfBrStpInterfaceDelete
		INTEGER,
	wfBrStpInterfaceEnable
		INTEGER,
	wfBrStpInterfaceCircuit
		INTEGER,
	wfBrStpInterfacePriority
		INTEGER,
	wfBrStpInterfaceState
		INTEGER,
	wfBrStpInterfaceMultiCastAddr
		OCTET STRING,
	wfBrStpInterfacePathCost
		INTEGER,
	wfBrStpInterfaceDesignatedRoot
		OCTET STRING,
	wfBrStpInterfaceDesignatedCost
		INTEGER,
	wfBrStpInterfaceDesignatedBridge
		OCTET STRING,
	wfBrStpInterfaceDesignatedPort
		INTEGER,
	wfBrStpInterfaceForwardTransitions
		Counter,
	wfBrStpInterfacePktsXmitd
		Counter,
	wfBrStpInterfacePktsRcvd
		Counter,
	wfBrStpInterfaceTranslationDisable
		INTEGER
}

wfBrStpInterfaceDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		  Users perform an SNMP SET operation on this
		  object in order to create/delete an interface
		  for the Spanning Tree. "
	DEFVAL	{ created }
	::= { wfBrStpInterfaceEntry 1 }

wfBrStpInterfaceEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		  Users perform an SNMP SET operation on this
		  object in order to enable/disable an interface
		  for the Spanning Tree. "
	DEFVAL	{ enabled }
	::= { wfBrStpInterfaceEntry 2 }

wfBrStpInterfaceCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The circuit number on which this interface is defined. "
	::= { wfBrStpInterfaceEntry 3 }

wfBrStpInterfacePriority OBJECT-TYPE
	SYNTAX	INTEGER {
		default(128),
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The value of the priority field which is contained in
		  the first octet of the (2 octet long) port ID for this
		  circuit. The other octet of the port ID is given by
		  wfBrStpInterfaceCircuit. "
	DEFVAL	{ default }
	::= { wfBrStpInterfaceEntry 4 }

wfBrStpInterfaceState OBJECT-TYPE
	SYNTAX	INTEGER {
		disabled(1),
		blocking(2),
		listening(3),
		learning(4),
		forwarding(5),
		broken(6)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current state of the port as defined by the
		  application of the Spanning Tree Protocol. "
	DEFVAL	{ disabled }
	::= { wfBrStpInterfaceEntry 5 }

wfBrStpInterfaceMultiCastAddr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The MAC address used as the destination for all
		  BPDU packets generated out this port. "
	::= { wfBrStpInterfaceEntry 6 }

wfBrStpInterfacePathCost OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(65535)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The contribution of this port the the root
		  path cost of paths toward the spanning tree
		  root which include this port. "
	DEFVAL	{ minimum }
	::= { wfBrStpInterfaceEntry 7 }

wfBrStpInterfaceDesignatedRoot OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The unique Bridge Identifier of the Bridge recorded
		  as the Root in the Configuration BPDUs transmitted
		  by the Designated Bridge for the segment to which this
		  port is attached.  Bridge IDs are made up of a
		  2-byte priority field, and a 6-byte MAC address. "
	::= { wfBrStpInterfaceEntry 8 }

wfBrStpInterfaceDesignatedCost OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The path cost of the Designated Port of the
		  segment connected to this port. This value
		  is compared to the Root Path Cost field in
		  received bridge PDUs. "
	::= { wfBrStpInterfaceEntry 9 }

wfBrStpInterfaceDesignatedBridge OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Bridge Identifier of the bridge which this
		  port considers to be the Designated Bridge for
		  this port's segment. "
	::= { wfBrStpInterfaceEntry 10 }

wfBrStpInterfaceDesignatedPort OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Port Identifier of the port on the Designated
		  Bridge for this port's segment. "
	::= { wfBrStpInterfaceEntry 11 }

wfBrStpInterfaceForwardTransitions OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times this port has transitioned
		  from the Learning State to the Forwarding state. "
	::= { wfBrStpInterfaceEntry 12 }

wfBrStpInterfacePktsXmitd OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of BPDU packets transmitted out this port "
	::= { wfBrStpInterfaceEntry 13 }

wfBrStpInterfacePktsRcvd OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of BPDU packets received on this port "
	::= { wfBrStpInterfaceEntry 14 }

wfBrStpInterfaceTranslationDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable translation bridging parameter. Default is disabled. "
	DEFVAL	{ disabled }
	::= { wfBrStpInterfaceEntry 15 }

wfBrSr		OBJECT IDENTIFIER ::= { wfBrSourceRouting 1 }

wfBrSrBaseDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		  Users perform an SNMP SET operation on this
		  object in order to create/delete the bridge. "
	DEFVAL	{ created }
	::= { wfBrSr 1 }

wfBrSrBaseDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		  Users perform an SNMP SET operation on this
		  object in order to enable/disable the bridge. "
	DEFVAL	{ enabled }
	::= { wfBrSr 2 }

wfBrSrBaseState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current state of the SR bridge. "
	DEFVAL	{ down }
	::= { wfBrSr 3 }

wfBrSrBaseInternalLanId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The SR bridge internal LAN ID "
	::= { wfBrSr 4 }

wfBrSrBaseBridgeId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The SR bridge Id "
	::= { wfBrSr 5 }

wfBrSrBaseGroupLanId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The SR bridge Group LAN ID "
	DEFVAL	{ 4095 }
	::= { wfBrSr 6 }

wfBrSrBaseIpEncapsDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" IP Encapsulation Enable/Disable "
	DEFVAL	{ disabled }
	::= { wfBrSr 7 }

wfBrSrBaseIpNetworkRingId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The ring number of a connected IP network "
	::= { wfBrSr 8 }

wfBrSrBaseIpInReceives OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number IP frames received by the network "
	::= { wfBrSr 9 }

wfBrSrBaseIpSeqErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number IP frames received by the network "
	::= { wfBrSr 10 }

wfBrSrBaseIpMtuSize OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The mtu size in bytes to be negotiated for
		   the IP network.  This size will be converted
		   to the LF code in the Route Control field "
	DEFVAL	{ 4562 }
	::= { wfBrSr 11 }

wfBrSrBaseNbServerRifCacheDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for the NetBIOS Server rif cache "
	DEFVAL	{ disabled }
	::= { wfBrSr 12 }

wfBrSrBaseNbClientRifCacheDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for the NetBIOS Client rif cache "
	DEFVAL	{ disabled }
	::= { wfBrSr 13 }

wfBrSrBaseNbDatagramRifCacheDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for the NetBIOS Datagram rif cache "
	DEFVAL	{ disabled }
	::= { wfBrSr 14 }

wfBrSrBaseNb15CharacterDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for 15-character NetBIOS name caching "
	DEFVAL	{ disabled }
	::= { wfBrSr 15 }

wfBrSrBaseNbRifMibDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable creation of MIB instances for each cached name "
	DEFVAL	{ enabled }
	::= { wfBrSr 16 }

wfBrSrBaseNbMaximumRifEntries OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The maximum number of entries allowed in the NetBIOS server/client rif cache"
	DEFVAL	{ 100 }
	::= { wfBrSr 17 }

wfBrSrBaseNbCurrentRifEntries OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of entries currently in the NetBIOS server/client cache"
	::= { wfBrSr 18 }

wfBrSrBaseNbRifAgeTime OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The age in seconds when inactive NetBIOS names will be aged out of the rif cache"
	DEFVAL	{ 300 }
	::= { wfBrSr 19 }

wfBrSrBaseNbRifHashEntries OBJECT-TYPE
	SYNTAX	INTEGER {
		min(253)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The number of entries in the RIF hash table "
	DEFVAL	{ min }
	::= { wfBrSr 20 }

wfBrSrBaseNbRifCacheHits OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times the NetBIOS rif cache has been used "
	::= { wfBrSr 21 }

wfBrSrBaseNbRifCacheMisses OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of failed lookups on the NetBIOS rif cache "
	::= { wfBrSr 22 }

wfBrSrBaseNbRifDroppedFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of NB frames dropped because the rif stored in the rif cache
		   indicated that this frame traveled a sub-optimal route "
	::= { wfBrSr 23 }

wfBrSrBaseNbQueryCacheDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for the NetBIOS Query cache "
	DEFVAL	{ disabled }
	::= { wfBrSr 24 }

wfBrSrBaseNbQueryMibDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable creation of MIB instances for each cached query "
	DEFVAL	{ enabled }
	::= { wfBrSr 25 }

wfBrSrBaseNbMaximumQueryEntries OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The maximum number of entries allowed in the NetBIOS query cache"
	DEFVAL	{ 100 }
	::= { wfBrSr 26 }

wfBrSrBaseNbCurrentQueryEntries OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of entries currently in the NetBIOS query cache "
	::= { wfBrSr 27 }

wfBrSrBaseNbQueryAgeTime OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The age in seconds when NetBIOS queries will be aged out of the query cache"
	DEFVAL	{ 15 }
	::= { wfBrSr 28 }

wfBrSrBaseNbQueryFilteredFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of duplicate NetBIOS queries filtered "
	::= { wfBrSr 29 }

wfBrSrInterfaceTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBrSrInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table that contains information about every
		  interface that is associated with this
		  source routing bridge.
		  inst_id[1] = wfBrSrInterfaceCircuit "
	::= { wfBrSourceRouting 2 }

wfBrSrInterfaceEntry OBJECT-TYPE
	SYNTAX	WfBrSrInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in wfBrSrInterface. "
	INDEX	{ wfBrSrInterfaceCircuit }
	::= { wfBrSrInterfaceTable 1 }

WfBrSrInterfaceEntry ::= SEQUENCE {
	wfBrSrInterfaceDelete
		INTEGER,
	wfBrSrInterfaceDisable
		INTEGER,
	wfBrSrInterfaceState
		INTEGER,
	wfBrSrInterfaceCircuit
		INTEGER,
	wfBrSrInterfaceMaxRds
		INTEGER,
	wfBrSrInterfaceRing
		INTEGER,
	wfBrSrInterfaceBlockOutSte
		INTEGER,
	wfBrSrInterfaceBlockInSte
		INTEGER,
	wfBrSrInterfaceBlockIp
		INTEGER,
	wfBrSrInterfaceIpAddress
		IpAddress,
	wfBrSrInterfaceInFrames
		Counter,
	wfBrSrInterfaceOutFrames
		Counter,
	wfBrSrInterfaceOutIpFrames
		Counter,
	wfBrSrInterfaceDropInvalidRcs
		Counter,
	wfBrSrInterfaceDropInvalidRings
		Counter,
	wfBrSrInterfaceDropSrfs
		Counter,
	wfBrSrInterfaceNbServerRifCacheDisable
		INTEGER,
	wfBrSrInterfaceNbClientRifCacheDisable
		INTEGER,
	wfBrSrInterfaceNbDatagramRifCacheDisable
		INTEGER,
	wfBrSrInterfaceNbQueryCacheDisable
		INTEGER,
	wfBrSrInterfaceXbInFrames
		Counter,
	wfBrSrInterfaceXbDropFrames
		Counter,
	wfBrSrInterfaceFrBcastDlci
		INTEGER
}

wfBrSrInterfaceDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		  Users perform an SNMP SET operation on this
		  object in order to create/delete an interface. "
	DEFVAL	{ created }
	::= { wfBrSrInterfaceEntry 1 }

wfBrSrInterfaceDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		  Users perform an SNMP SET operation on this
		  object in order to enable/disable an interface. "
	DEFVAL	{ enabled }
	::= { wfBrSrInterfaceEntry 2 }

wfBrSrInterfaceState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current state of the interface. "
	DEFVAL	{ down }
	::= { wfBrSrInterfaceEntry 3 }

wfBrSrInterfaceCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The circuit that this interface runs over. "
	::= { wfBrSrInterfaceEntry 4 }

wfBrSrInterfaceMaxRds OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The maximum number of RDs permitted in incoming
		  explorer frames "
	DEFVAL	{ 7 }
	::= { wfBrSrInterfaceEntry 5 }

wfBrSrInterfaceRing OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The ring number of the source routing circuit.
		  Even non-ring circuit need a ring number if
		  it is to do source routing "
	::= { wfBrSrInterfaceEntry 6 }

wfBrSrInterfaceBlockOutSte OBJECT-TYPE
	SYNTAX	INTEGER {
		block(1),
		accept(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enables blocking of outbound STEs "
	DEFVAL	{ accept }
	::= { wfBrSrInterfaceEntry 7 }

wfBrSrInterfaceBlockInSte OBJECT-TYPE
	SYNTAX	INTEGER {
		block(1),
		accept(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enables blocking of inbound STEs "
	DEFVAL	{ accept }
	::= { wfBrSrInterfaceEntry 8 }

wfBrSrInterfaceBlockIp OBJECT-TYPE
	SYNTAX	INTEGER {
		block(1),
		accept(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enables blocking of inbound explorers that have
		  have already been through the IP network "
	DEFVAL	{ accept }
	::= { wfBrSrInterfaceEntry 9 }

wfBrSrInterfaceIpAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Ip address for this ring. This should match the
		  the IP address in the IP MIB "
	::= { wfBrSrInterfaceEntry 10 }

wfBrSrInterfaceInFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of frames that have been received by
		  this interface from its circuit. "
	::= { wfBrSrInterfaceEntry 11 }

wfBrSrInterfaceOutFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of frames that have been transmitted
		  by this interface "
	::= { wfBrSrInterfaceEntry 12 }

wfBrSrInterfaceOutIpFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of frames that have been transmitted
		  by this interface to the IP network "
	::= { wfBrSrInterfaceEntry 13 }

wfBrSrInterfaceDropInvalidRcs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Count of frames received which were
		  discarded because of a bad Route Control field "
	::= { wfBrSrInterfaceEntry 14 }

wfBrSrInterfaceDropInvalidRings OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Count of frames received which were
		  discarded because of a invalid incoming ring "
	::= { wfBrSrInterfaceEntry 15 }

wfBrSrInterfaceDropSrfs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Count of specifically routed frames received which were
		  discarded due to filtering or no next circuit "
	::= { wfBrSrInterfaceEntry 16 }

wfBrSrInterfaceNbServerRifCacheDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for the NetBIOS Server cache "
	DEFVAL	{ enabled }
	::= { wfBrSrInterfaceEntry 17 }

wfBrSrInterfaceNbClientRifCacheDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for the NetBIOS Client cache "
	DEFVAL	{ enabled }
	::= { wfBrSrInterfaceEntry 18 }

wfBrSrInterfaceNbDatagramRifCacheDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for the NetBIOS Datagram cache "
	DEFVAL	{ enabled }
	::= { wfBrSrInterfaceEntry 19 }

wfBrSrInterfaceNbQueryCacheDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for the NetBIOS Query cache "
	DEFVAL	{ enabled }
	::= { wfBrSrInterfaceEntry 20 }

wfBrSrInterfaceXbInFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of frames that have been received
		  by this interface "
	::= { wfBrSrInterfaceEntry 21 }

wfBrSrInterfaceXbDropFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of frames that were dropped because they
		  were too large "
	::= { wfBrSrInterfaceEntry 22 }

wfBrSrInterfaceFrBcastDlci OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Frame Relay broadcast dlci "
	DEFVAL	{ 4294967295 }
	::= { wfBrSrInterfaceEntry 23 }

wfBrSrBridgeTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBrSrBridgeEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table that contains the bridge numbers used
		  by Wellfleet bridges in a source routing network
		  inst_id[2] = wfBrSrBridgeId "
	::= { wfBrSourceRouting 3 }

wfBrSrBridgeEntry OBJECT-TYPE
	SYNTAX	WfBrSrBridgeEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in wfBrSrBridge. "
	INDEX	{ wfBrSrBridgeId }
	::= { wfBrSrBridgeTable 1 }

WfBrSrBridgeEntry ::= SEQUENCE {
	wfBrSrBridgeDelete
		INTEGER,
	wfBrSrBridgeId
		INTEGER
}

wfBrSrBridgeDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		  Users perform an SNMP SET operation on this object in
		  order to create/delete an IP encapsulation peer record. "
	DEFVAL	{ created }
	::= { wfBrSrBridgeEntry 1 }

wfBrSrBridgeId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Bridge Id reserved for Wellfleet bridges "
	::= { wfBrSrBridgeEntry 2 }

wfBrSrIpExplorerTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBrSrIpExplorerEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table that contains the table of IP addresses
		  to which source routing explorers should be sent
		  inst_id[2] = wfBrSrIpExplorerAddress "
	::= { wfBrSourceRouting 4 }

wfBrSrIpExplorerEntry OBJECT-TYPE
	SYNTAX	WfBrSrIpExplorerEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in wfBrSrIpExplorer. "
	INDEX	{ wfBrSrIpExplorerAddr }
	::= { wfBrSrIpExplorerTable 1 }

WfBrSrIpExplorerEntry ::= SEQUENCE {
	wfBrSrIpExplorerDelete
		INTEGER,
	wfBrSrIpExplorerAddr
		IpAddress
}

wfBrSrIpExplorerDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		  Users perform an SNMP SET operation on this object in
		  order to create/delete an IP encapsulation peer record. "
	DEFVAL	{ created }
	::= { wfBrSrIpExplorerEntry 1 }

wfBrSrIpExplorerAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP address of this encapsulation peer. "
	::= { wfBrSrIpExplorerEntry 2 }

wfBrSrIpEncapsTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBrSrIpEncapsEntry
	ACCESS	not-accessible
	STATUS	deprecated
	DESCRIPTION
		" A table that contains information about IP
		  Encapsulation ring-to-IP Address mappings.
		  This information is used to make the 'next
		  ring' IP Address decision.
		  inst = wfBrSrIpEncapsRing "
	::= { wfBrSourceRouting 5 }

wfBrSrIpEncapsEntry OBJECT-TYPE
	SYNTAX	WfBrSrIpEncapsEntry
	ACCESS	not-accessible
	STATUS	deprecated
	DESCRIPTION
		" An entry in the wfBrSrIpEncapsTable. "
	INDEX	{ wfBrSrIpEncapsRing }
	::= { wfBrSrIpEncapsTable 1 }

WfBrSrIpEncapsEntry ::= SEQUENCE {
	wfBrSrIpEncapsRing
		INTEGER,
	wfBrSrIpEncapsIpAddress
		IpAddress,
	wfBrSrIpEncapsStatus
		INTEGER
}

wfBrSrIpEncapsRing OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" The remote ring number for which we have a ring to
		  IP Address mapping. "
	::= { wfBrSrIpEncapsEntry 1 }

wfBrSrIpEncapsIpAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" The IP Address of the Wellfleet IP Encapsulation
		  peer to which this ring is connected. "
	::= { wfBrSrIpEncapsEntry 2 }

wfBrSrIpEncapsStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		learned(3)
	}
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		" The status of this entry. The meanings of the
		  values are:
		    learned(3) : the value of the corresponding
		                instance of wfBrSrIpEncapsRing was
		                learned, and is being used. "
	DEFVAL	{ learned }
	::= { wfBrSrIpEncapsEntry 3 }

wfBrSrTrafficFilterTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBrSrTrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" SR Bridge Traffic Filters "
	::= { wfBrSourceRouting 6 }

wfBrSrTrafficFilterEntry OBJECT-TYPE
	SYNTAX	WfBrSrTrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in WfBrSrTrafficFilterTable. "
	INDEX	{ wfBrSrTrafficFilterCircuit,
		wfBrSrTrafficFilterRuleNumber,
		wfBrSrTrafficFilterFragment }
	::= { wfBrSrTrafficFilterTable 1 }

WfBrSrTrafficFilterEntry ::= SEQUENCE {
	wfBrSrTrafficFilterCreate
		INTEGER,
	wfBrSrTrafficFilterEnable
		INTEGER,
	wfBrSrTrafficFilterStatus
		INTEGER,
	wfBrSrTrafficFilterCounter
		Counter,
	wfBrSrTrafficFilterDefinition
		OCTET STRING,
	wfBrSrTrafficFilterReserved
		INTEGER,
	wfBrSrTrafficFilterCircuit
		INTEGER,
	wfBrSrTrafficFilterRuleNumber
		INTEGER,
	wfBrSrTrafficFilterFragment
		INTEGER
}

wfBrSrTrafficFilterCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the existence of the traffic filter rule:
		                created - traffic filter exists
		                delete - traffic filter does not exist and can be deleted. "
	DEFVAL	{ created }
	::= { wfBrSrTrafficFilterEntry 1 }

wfBrSrTrafficFilterEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines whether or not the traffic filter rule should be used:
		                enabled - activate the rule.
		                disabled - inactivate the rule. "
	DEFVAL	{ enabled }
	::= { wfBrSrTrafficFilterEntry 2 }

wfBrSrTrafficFilterStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		error(2),
		inactive(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Defines the current status of the traffic filter:
		                inactive - the rule is not in use.
		                active - the rule is being used.
		                error - the application detected an error in the rule. "
	DEFVAL	{ inactive }
	::= { wfBrSrTrafficFilterEntry 3 }

wfBrSrTrafficFilterCounter OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received packets that have
		           matched this rule. "
	::= { wfBrSrTrafficFilterEntry 4 }

wfBrSrTrafficFilterDefinition OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The filter rule definition. "
	::= { wfBrSrTrafficFilterEntry 5 }

wfBrSrTrafficFilterReserved OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Reserved field. "
	::= { wfBrSrTrafficFilterEntry 6 }

wfBrSrTrafficFilterCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The ID of the Bridge Circuit to which the
		           filter is applied. "
	::= { wfBrSrTrafficFilterEntry 7 }

wfBrSrTrafficFilterRuleNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" ID for the rule. "
	::= { wfBrSrTrafficFilterEntry 8 }

wfBrSrTrafficFilterFragment OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Fragment number - for large rules. "
	::= { wfBrSrTrafficFilterEntry 9 }

wfBrSrEsRifTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBrSrEsRifEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table that contains the currently active
		  RIFs in use by Router End Station Support
		  inst_id[9] = wfBrSrIpExplorerAddress "
	::= { wfBrSourceRouting 7 }

wfBrSrEsRifEntry OBJECT-TYPE
	SYNTAX	WfBrSrEsRifEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in wfBrSrEsRif. "
	INDEX	{ wfBrSrEsRifCircuit,
		wfBrSrEsRifProtocol,
		wfBrSrEsRifMacAddr }
	::= { wfBrSrEsRifTable 1 }

WfBrSrEsRifEntry ::= SEQUENCE {
	wfBrSrEsRifCircuit
		INTEGER,
	wfBrSrEsRifProtocol
		OCTET STRING,
	wfBrSrEsRifMacAddr
		OCTET STRING,
	wfBrSrEsRifRoute
		OCTET STRING
}

wfBrSrEsRifCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The circuit on which this entry was learned "
	::= { wfBrSrEsRifEntry 1 }

wfBrSrEsRifProtocol OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The protocol in use at end station corresponding
		    to this RIF.  If the protocol uses LLC encapsulation  
		    this field will contain the DSAP/SSAP pair.  If a 
		    SNAP encapsulation is used, it will contain the 
		    protocol type. "
	::= { wfBrSrEsRifEntry 2 }

wfBrSrEsRifMacAddr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Mac address of the end station corresponding
		    to this RIF. "
	::= { wfBrSrEsRifEntry 3 }

wfBrSrEsRifRoute OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The route contained in the RIF field "
	::= { wfBrSrEsRifEntry 4 }

wfBrSrNbRifTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBrSrNbRifEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The NetBIOS server/client rif cache table "
	::= { wfBrSourceRouting 8 }

wfBrSrNbRifEntry OBJECT-TYPE
	SYNTAX	WfBrSrNbRifEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the NetBIOS rif cache table "
	INDEX	{ wfBrSrNbName }
	::= { wfBrSrNbRifTable 1 }

WfBrSrNbRifEntry ::= SEQUENCE {
	wfBrSrNbName
		OCTET STRING,
	wfBrSrNbMacAddress
		OCTET STRING,
	wfBrSrNbStatic
		INTEGER,
	wfBrSrNbRif
		OCTET STRING,
	wfBrSrNbRifCacheHits
		Counter
}

wfBrSrNbName OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The NetBIOS name of this station. It is a maximum of 16 characters.
		   Names that are shorter are padded with ASCII spaces - 0x20 "
	::= { wfBrSrNbRifEntry 1 }

wfBrSrNbMacAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Mac Address of the NetBIOS station "
	::= { wfBrSrNbRifEntry 2 }

wfBrSrNbStatic OBJECT-TYPE
	SYNTAX	INTEGER {
		static(1),
		learned(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates whether this entry is a static or learned entry "
	::= { wfBrSrNbRifEntry 3 }

wfBrSrNbRif OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Cached RIF to get to this station "
	::= { wfBrSrNbRifEntry 4 }

wfBrSrNbRifCacheHits OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of AREs that have been converted by this station "
	::= { wfBrSrNbRifEntry 5 }

wfBrSrNbQueryTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBrSrNbQueryEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The NetBIOS Query cache table "
	::= { wfBrSourceRouting 9 }

wfBrSrNbQueryEntry OBJECT-TYPE
	SYNTAX	WfBrSrNbQueryEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the NetBIOS Query cache table "
	INDEX	{ wfBrSrNbQueryMacAddress,
		wfBrSrNbRspCorrelator }
	::= { wfBrSrNbQueryTable 1 }

WfBrSrNbQueryEntry ::= SEQUENCE {
	wfBrSrNbQueryMacAddress
		OCTET STRING,
	wfBrSrNbRspCorrelator
		INTEGER,
	wfBrSrNbQuery
		OCTET STRING,
	wfBrSrNbQueryFilteredFrames
		Counter
}

wfBrSrNbQueryMacAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The MAC Address of the NetBIOS station "
	::= { wfBrSrNbQueryEntry 1 }

wfBrSrNbRspCorrelator OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" NetBIOS query sequence number "
	::= { wfBrSrNbQueryEntry 2 }

wfBrSrNbQuery OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Cached NetBIOS query "
	::= { wfBrSrNbQueryEntry 3 }

wfBrSrNbQueryFilteredFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of identical Queries which have been filtered "
	::= { wfBrSrNbQueryEntry 4 }

wfBrSrNbStaticTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBrSrNbStaticEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The NetBIOS static server/client entry table "
	::= { wfBrSourceRouting 10 }

wfBrSrNbStaticEntry OBJECT-TYPE
	SYNTAX	WfBrSrNbStaticEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the NetBIOS static entry table "
	INDEX	{ wfBrSrNbStaticName }
	::= { wfBrSrNbStaticTable 1 }

WfBrSrNbStaticEntry ::= SEQUENCE {
	wfBrSrNbStaticDelete
		INTEGER,
	wfBrSrNbStaticDisable
		INTEGER,
	wfBrSrNbStaticState
		INTEGER,
	wfBrSrNbStaticName
		OCTET STRING,
	wfBrSrNbStaticMacAddress
		OCTET STRING,
	wfBrSrNbStaticRif
		OCTET STRING
}

wfBrSrNbStaticDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter for the NetBIOS static entry "
	DEFVAL	{ created }
	::= { wfBrSrNbStaticEntry 1 }

wfBrSrNbStaticDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter for the NetBIOS static entry "
	DEFVAL	{ enabled }
	::= { wfBrSrNbStaticEntry 2 }

wfBrSrNbStaticState OBJECT-TYPE
	SYNTAX	INTEGER {
		valid(1),
		invalid(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The state of this NetBIOS static entry "
	DEFVAL	{ invalid }
	::= { wfBrSrNbStaticEntry 3 }

wfBrSrNbStaticName OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The NetBIOS name of this station. It is a maximum of 16 characters.
		   Names that are shorter are padded with ASCII spaces - 0x20 "
	::= { wfBrSrNbStaticEntry 4 }

wfBrSrNbStaticMacAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Mac Address of the NetBIOS station "
	::= { wfBrSrNbStaticEntry 5 }

wfBrSrNbStaticRif OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The RIF to get to this station "
	::= { wfBrSrNbStaticEntry 6 }

wfBrXb		OBJECT IDENTIFIER ::= { wfBrSourceRouting 11 }

wfBrXbBaseDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created.
		  Users perform an SNMP SET operation on this
		  object in order to create/delete the bridge. "
	DEFVAL	{ created }
	::= { wfBrXb 1 }

wfBrXbBaseDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		  Users perform an SNMP SET operation on this
		  object in order to enable/disable the bridge. "
	DEFVAL	{ enabled }
	::= { wfBrXb 2 }

wfBrXbBaseEthernetLanId OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(4095)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Ethernet pseudo 'Ring' number"
	::= { wfBrXb 3 }

wfBrXbBaseMaxRifEntries OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Maximum number of entries in the token-ring station address/RIF database "
	DEFVAL	{ 255 }
	::= { wfBrXb 4 }

wfBrXbBaseCurrentRifEntries OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Current number of entries in the token-ring station address/RIF database "
	::= { wfBrXb 5 }

wfBrXbBaseAgeTime OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Aging values for token-ring and Ethernet/802.3 MAC address databases"
	DEFVAL	{ 300 }
	::= { wfBrXb 6 }

wfBrXbBaseBcastAddressConversionDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/disable conversion from Ethernet Broadcast address to Token-ring
		   broadcast address "
	DEFVAL	{ enabled }
	::= { wfBrXb 7 }

wfBrXbBaseDefaultMode OBJECT-TYPE
	SYNTAX	INTEGER {
		ethernet(1),
		ieee8023(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" default mode indicates whether nodes should be assumed to be Ethernet version 2 or 802.3 nodes,
		if no other information is available. This parameter applies to Ethernet/802.3 interfaces only."
	DEFVAL	{ ethernet }
	::= { wfBrXb 8 }

wfBrXbBaseBcastMode OBJECT-TYPE
	SYNTAX	INTEGER {
		are(1),
		ste(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" this parameter governs whether frames to be broadcast on the token-ring interface (because the destination address was not recognized) should go out as All-routes-explorers or as Spanning-tree-explorers. This parameter applies to token-ring interfaces only. "
	DEFVAL	{ ste }
	::= { wfBrXb 9 }

wfBrXbBaseSaps OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" this parameter is the list of SAPS to bridge "
	::= { wfBrXb 10 }

wfBrXbAddressMapTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBrXbAddressMapEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" users may configure specific Functional<->Multicast address conversions
		   or specific MAC address conversions to be performed. This table keeps  
		   these mappings (on a per-system basis). "
	::= { wfBrSourceRouting 12 }

wfBrXbAddressMapEntry OBJECT-TYPE
	SYNTAX	WfBrXbAddressMapEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the MAC address mapping table "
	INDEX	{ wfBrXbAddressMapEthernetAddress }
	::= { wfBrXbAddressMapTable 1 }

WfBrXbAddressMapEntry ::= SEQUENCE {
	wfBrXbAddressMapDelete
		INTEGER,
	wfBrXbAddressMapEthernetAddress
		OCTET STRING,
	wfBrXbAddressMapTokenRingAddress
		OCTET STRING
}

wfBrXbAddressMapDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter for the station type static entry "
	DEFVAL	{ created }
	::= { wfBrXbAddressMapEntry 1 }

wfBrXbAddressMapEthernetAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The ethernet MAC Address of the station "
	::= { wfBrXbAddressMapEntry 2 }

wfBrXbAddressMapTokenRingAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The token-ring MAC Address of the station "
	::= { wfBrXbAddressMapEntry 3 }

wfBrXbRifTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBrXbRifEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The token-ring RIF cache table "
	::= { wfBrSourceRouting 13 }

wfBrXbRifEntry OBJECT-TYPE
	SYNTAX	WfBrXbRifEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the token-ring RIF cache table "
	INDEX	{ wfBrXbRifMacAddress }
	::= { wfBrXbRifTable 1 }

WfBrXbRifEntry ::= SEQUENCE {
	wfBrXbRifMacAddress
		OCTET STRING,
	wfBrXbRifField
		OCTET STRING
}

wfBrXbRifMacAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Mac Address of the token-ring station "
	::= { wfBrXbRifEntry 1 }

wfBrXbRifField OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The RIF to get to this station "
	::= { wfBrXbRifEntry 2 }

wfBrXbStationTypeTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBrXbStationTypeEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The station type (Ethernet or 802.3) static entry table "
	::= { wfBrSourceRouting 14 }

wfBrXbStationTypeEntry OBJECT-TYPE
	SYNTAX	WfBrXbStationTypeEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the station type static entry table "
	INDEX	{ wfBrXbStationTypeEthernetAddress }
	::= { wfBrXbStationTypeTable 1 }

WfBrXbStationTypeEntry ::= SEQUENCE {
	wfBrXbStationTypeDelete
		INTEGER,
	wfBrXbStationTypeEthernetAddress
		OCTET STRING,
	wfBrXbStationTypeIndicator
		INTEGER
}

wfBrXbStationTypeDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter for the station type static entry "
	DEFVAL	{ created }
	::= { wfBrXbStationTypeEntry 1 }

wfBrXbStationTypeEthernetAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Mac Address of the station "
	::= { wfBrXbStationTypeEntry 2 }

wfBrXbStationTypeIndicator OBJECT-TYPE
	SYNTAX	INTEGER {
		ethernet(1),
		ieee8023(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The station type (Ethernet or 802.3) "
	::= { wfBrXbStationTypeEntry 3 }

wfBrSrIpEncapsRBTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfBrSrIpEncapsRBEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table that contains information about IP
		  Encapsulation ring/bridge-to-IP Address mappings.
		  This information is used to make the 'next
		  ring/bridge' IP Address decision.
		  inst = wfBrSrIpEncapsRing.wfBrSrIpEncapsBridge"
	::= { wfBrSourceRouting 15 }

wfBrSrIpEncapsRBEntry OBJECT-TYPE
	SYNTAX	WfBrSrIpEncapsRBEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the wfBrSrIpEncapsRBTable. "
	INDEX	{ wfBrSrIpEncapsRBRing,
		wfBrSrIpEncapsRBBridge }
	::= { wfBrSrIpEncapsRBTable 1 }

WfBrSrIpEncapsRBEntry ::= SEQUENCE {
	wfBrSrIpEncapsRBRing
		INTEGER,
	wfBrSrIpEncapsRBBridge
		INTEGER,
	wfBrSrIpEncapsRBIpAddress
		IpAddress,
	wfBrSrIpEncapsRBStatus
		INTEGER
}

wfBrSrIpEncapsRBRing OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The remote ring number for which we have a ring-bridge to
		  IP Address mapping. "
	::= { wfBrSrIpEncapsRBEntry 1 }

wfBrSrIpEncapsRBBridge OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Bridge ID for which we have a ring-bridge to
		  IP Address mapping. "
	::= { wfBrSrIpEncapsRBEntry 2 }

wfBrSrIpEncapsRBIpAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The IP Address of the Wellfleet IP Encapsulation
		  peer to which this ring-bridge is connected. "
	::= { wfBrSrIpEncapsRBEntry 3 }

wfBrSrIpEncapsRBStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		learned(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The status of this entry. The meanings of the
		  values are:
		    learned(3) : the value of the corresponding
		                instance of wfBrSrIpEncapsRing and
		                wfBrSrIpEncapsBridge was
		                learned, and is being used. "
	DEFVAL	{ learned }
	::= { wfBrSrIpEncapsRBEntry 4 }

wfSta		OBJECT IDENTIFIER ::= { wfStaGroup 1 }

wfStaDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enables or disables statistical thresholds and alarms "
	DEFVAL	{ enabled }
	::= { wfSta 1 }

wfStaPollInterval OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(5),
		default(60)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The polling interval (in seconds) in which to examine objects
		  in the threshold table for threshold exceptions. "
	DEFVAL	{ default }
	::= { wfSta 2 }

wfStaThresholdTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfStaThresholdEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A table containing threshold targets "
	::= { wfStaGroup 2 }

wfStaThresholdEntry OBJECT-TYPE
	SYNTAX	WfStaThresholdEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Information about a particular threshold object "
	INDEX	{ wfStaThresholdObject }
	::= { wfStaThresholdTable 1 }

WfStaThresholdEntry ::= SEQUENCE {
	wfStaThresholdDelete
		INTEGER,
	wfStaThresholdDisable
		INTEGER,
	wfStaThresholdState
		INTEGER,
	wfStaThresholdObject
		OBJECT IDENTIFIER,
	wfStaThresholdLowValue
		Gauge,
	wfStaThresholdLowEventLevel
		INTEGER,
	wfStaThresholdMediumValue
		Gauge,
	wfStaThresholdMediumEventLevel
		INTEGER,
	wfStaThresholdHighValue
		Gauge,
	wfStaThresholdHighEventLevel
		INTEGER,
	wfStaThresholdCurrentValue
		Gauge,
	wfStaThresholdUnits
		INTEGER,
	wfStaThresholdAction
		INTEGER,
	wfStaThresholdMaxSuccessiveAlarms
		INTEGER,
	wfStaThresholdHoldDownIntervals
		INTEGER,
	wfStaThresholdLowExceptions
		Counter,
	wfStaThresholdLowAlarms
		Counter,
	wfStaThresholdMediumExceptions
		Counter,
	wfStaThresholdMediumAlarms
		Counter,
	wfStaThresholdHighExceptions
		Counter,
	wfStaThresholdHighAlarms
		Counter
}

wfStaThresholdDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The row (object) deletion attribute for this threshold "
	DEFVAL	{ created }
	::= { wfStaThresholdEntry 1 }

wfStaThresholdDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The enable/disable attribute for this threshold. Setting
		  this attribute to disabled, causes the threshold to be ignored
		  in subsequent polling periods.  "
	DEFVAL	{ enabled }
	::= { wfStaThresholdEntry 2 }

wfStaThresholdState OBJECT-TYPE
	SYNTAX	INTEGER {
		valid(1),
		ignored(2),
		held(3),
		suspended(4),
		invalid(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The state of this threshold. An invalid state means that the
		  object could not be retrieved from the mib.  A held state 
		  indicates that the maximum successive exceptions for this 
		  threshold has been reached and that alarms will not be 
		  generated until an exception occurrs at a new level or no 
		  exception occurs for the specified number of hold down 
		  intervals at which point it becomes valid again.  An ignored 
		  state, indicates that this threshold is disabled and is not 
		  being polled.  A valid state indicates that this threshold is 
		  under examination each polling period and no errors have been 
		  encountered evaluating this object for exceptions.  A 
		  suspended state indicates that the object was not an integer 
		  type; user should manually delete the suspended object. "
	DEFVAL	{ valid }
	::= { wfStaThresholdEntry 3 }

wfStaThresholdObject OBJECT-TYPE
	SYNTAX	OBJECT IDENTIFIER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The identifier of the mib object to examine for threshold
		  exceptions. "
	::= { wfStaThresholdEntry 4 }

wfStaThresholdLowValue OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The mark for low threshold exceptions "
	::= { wfStaThresholdEntry 5 }

wfStaThresholdLowEventLevel OBJECT-TYPE
	SYNTAX	INTEGER {
		warning(1),
		info(2),
		debug(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The severity level of the event log message (alarm) to be
		  generated on low exception "
	DEFVAL	{ info }
	::= { wfStaThresholdEntry 6 }

wfStaThresholdMediumValue OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The mark for medium threshold exceptions "
	::= { wfStaThresholdEntry 7 }

wfStaThresholdMediumEventLevel OBJECT-TYPE
	SYNTAX	INTEGER {
		warning(1),
		info(2),
		debug(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The severity level of the event log message (alarm) to be
		  generated on medium exception "
	DEFVAL	{ info }
	::= { wfStaThresholdEntry 8 }

wfStaThresholdHighValue OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The mark for high threshold exceptions "
	::= { wfStaThresholdEntry 9 }

wfStaThresholdHighEventLevel OBJECT-TYPE
	SYNTAX	INTEGER {
		warning(1),
		info(2),
		debug(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The severity level of the event log message (alarm) to be
		  generated on high exception "
	DEFVAL	{ info }
	::= { wfStaThresholdEntry 10 }

wfStaThresholdCurrentValue OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The most recently computed threshold value for the polled
		  object. "
	::= { wfStaThresholdEntry 11 }

wfStaThresholdUnits OBJECT-TYPE
	SYNTAX	INTEGER {
		absolute(1),
		persecond(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The units to be used in the determination of threshold
		  exceptions.  Absolute means that when the value object reaches
		  one of the three thresholds, an exception is generated.  
		  PerSecond means that when the value/second reaches one of the 
		  three threshold values, an exception is generated. "
	DEFVAL	{ persecond }
	::= { wfStaThresholdEntry 12 }

wfStaThresholdAction OBJECT-TYPE
	SYNTAX	INTEGER {
		greaterthan(1),
		lessthan(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" How the threshold should be evaluated with respect to the
		  threshold marks "
	DEFVAL	{ greaterthan }
	::= { wfStaThresholdEntry 13 }

wfStaThresholdMaxSuccessiveAlarms OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The maximum number of successive alarms that can be generated
		  for this object before it enters a HELD state.  A successive 
		  alarms is defined as two or more successive polling periods 
		  where an alarm is generated at the same level. "
	DEFVAL	{ 5 }
	::= { wfStaThresholdEntry 14 }

wfStaThresholdHoldDownIntervals OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The number of exception free polling intervals which an
		  object in a held state must pass before transitioning to a 
		  valid state. "
	DEFVAL	{ 1 }
	::= { wfStaThresholdEntry 15 }

wfStaThresholdLowExceptions OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of low threshold exceptions. "
	::= { wfStaThresholdEntry 16 }

wfStaThresholdLowAlarms OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of low threshold alarms. "
	::= { wfStaThresholdEntry 17 }

wfStaThresholdMediumExceptions OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of medium threshold exceptions. "
	::= { wfStaThresholdEntry 18 }

wfStaThresholdMediumAlarms OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of medium threshold alarms. "
	::= { wfStaThresholdEntry 19 }

wfStaThresholdHighExceptions OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of high threshold exceptions. "
	::= { wfStaThresholdEntry 20 }

wfStaThresholdHighAlarms OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of high threshold alarms. "
	::= { wfStaThresholdEntry 21 }

wfSyncTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfSyncEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		    SYNC  line record
		 "
	::= { wfLine 5 }

wfSyncEntry OBJECT-TYPE
	SYNTAX	WfSyncEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the SYNC table "
	INDEX	{ wfSyncSlot,
		wfSyncConnector }
	::= { wfSyncTable 1 }

WfSyncEntry ::= SEQUENCE {
	wfSyncDelete
		INTEGER,
	wfSyncDisable
		INTEGER,
	wfSyncState
		INTEGER,
	wfSyncSlot
		INTEGER,
	wfSyncConnector
		INTEGER,
	wfSyncCct
		INTEGER,
	wfSyncBofl
		INTEGER,
	wfSyncBoflTmo
		INTEGER,
	wfSyncMtu
		INTEGER,
	wfSyncMadr
		OCTET STRING,
	wfSyncPromiscuous
		INTEGER,
	wfSyncXid
		INTEGER,
	wfSyncClkSource
		INTEGER,
	wfSyncClkSpeed
		INTEGER,
	wfSyncSignalMode
		INTEGER,
	wfSyncRtsEnable
		INTEGER,
	wfSyncBurstCount
		INTEGER,
	wfSyncService
		INTEGER,
	wfSyncRetryCount
		INTEGER,
	wfSyncLinkIdleTimer
		INTEGER,
	wfSyncRetryTimer
		INTEGER,
	wfSyncExtendedAddress
		INTEGER,
	wfSyncExtendedAddressForce
		INTEGER,
	wfSyncExtendedControl
		INTEGER,
	wfSyncExtendedControlForce
		INTEGER,
	wfSyncConnectAttempts
		INTEGER,
	wfSyncWindowSizeTx
		INTEGER,
	wfSyncWindowSizeTxExtc
		INTEGER,
	wfSyncMinFrameSpace
		INTEGER,
	wfSyncLocalAddress
		INTEGER,
	wfSyncRemoteAddress
		INTEGER,
	wfSyncPassThruLocalMadr
		OCTET STRING,
	wfSyncPassThruRemoteMadr
		OCTET STRING,
	wfSyncWanProtocol
		INTEGER,
	wfSyncCrcSize
		INTEGER,
	wfSyncRxOctets
		Counter,
	wfSyncRxFrames
		Counter,
	wfSyncTxOctets
		Counter,
	wfSyncTxFrames
		Counter,
	wfSyncRxErrors
		Counter,
	wfSyncTxErrors
		Counter,
	wfSyncLackRescRx
		Counter,
	wfSyncLackRescTx
		Counter,
	wfSyncUnderFlowTx
		Counter,
	wfSyncRejectsTx
		Counter,
	wfSyncRejectsRx
		Counter,
	wfSyncOverFlowRx
		Counter,
	wfSyncFramesIncompRx
		Counter,
	wfSyncBadFramesRx
		Counter,
	wfSyncFrameRejectsRx
		Counter,
	wfSyncRuntsRx
		Counter,
	wfSyncT1Timeouts
		Counter,
	wfSyncMemoryErrors
		Counter,
	wfSyncMediaType
		INTEGER,
	wfSyncCfgTxQueueLength
		INTEGER,
	wfSyncCfgRxQueueLength
		INTEGER,
	wfSyncTxQueueLength
		INTEGER,
	wfSyncRxQueueLength
		INTEGER,
	wfSyncRxReplenMisses
		Counter,
	wfSyncStartUpMode
		INTEGER,
	wfSyncIdleRRFrames
		INTEGER,
	wfSyncMultilineMode
		INTEGER,
	wfSyncBODExamPeriod
		INTEGER,
	wfSyncBODFullThreshold
		INTEGER,
	wfSyncBODRecoverThreshold
		INTEGER,
	wfSyncBODPeriodsToFail
		INTEGER,
	wfSyncKG84ACycle
		INTEGER,
	wfSyncKG84ASyncLossInterval
		INTEGER,
	wfSyncKG84ARemoteResyncWait
		INTEGER,
	wfSyncKG84ASyncPulse
		INTEGER,
	wfSyncKG84AResyncs
		INTEGER,
	wfSyncKG84AResyncsDetected
		INTEGER,
	wfSyncKG84ABsu
		INTEGER,
	wfSyncKG84AState
		INTEGER,
	wfSyncKG84AOkFrames
		INTEGER,
	wfSyncPollingEnable
		INTEGER,
	wfSyncBackupPool
		INTEGER,
	wfSyncDemandPool
		INTEGER,
	wfSyncLineNumber
		INTEGER,
	wfSyncHoldDownTime
		INTEGER,
	wfSyncNetworkType
		INTEGER,
	wfSyncActiveCct
		INTEGER,
	wfSyncCableType
		INTEGER
}

wfSyncDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter "
	DEFVAL	{ created }
	::= { wfSyncEntry 1 }

wfSyncDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter "
	DEFVAL	{ enabled }
	::= { wfSyncEntry 2 }

wfSyncState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		wait(4),
		notpresent(5),
		dsrwait(6),
		holddown(7)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Line Driver state variable, Not Present, DSR Wait,
		   Init, Down, Up "
	DEFVAL	{ notpresent }
	::= { wfSyncEntry 3 }

wfSyncSlot OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(14)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance ID Slot, filled in by driver "
	::= { wfSyncEntry 4 }

wfSyncConnector OBJECT-TYPE
	SYNTAX	INTEGER {
		one(1),
		two(2),
		three(3),
		four(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance ID Connector, filled in by driver "
	::= { wfSyncEntry 5 }

wfSyncCct OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1023)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" CCT number for this line instance "
	::= { wfSyncEntry 6 }

wfSyncBofl OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" breath of life parameter "
	DEFVAL	{ enabled }
	::= { wfSyncEntry 7 }

wfSyncBoflTmo OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(60),
		default(5)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" breath of life timeout in seconds "
	DEFVAL	{ default }
	::= { wfSyncEntry 8 }

wfSyncMtu OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(3),
		maximum(4500),
		default(1600)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" MTU parameter, this is buffer size for SYNC media, fixed "
	DEFVAL	{ default }
	::= { wfSyncEntry 9 }

wfSyncMadr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Line MAC address, fixed - line driver fills in from the 48 bit
		   address stored in the serial number prom for this connector.   "
	::= { wfSyncEntry 10 }

wfSyncPromiscuous OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The promiscuous parameter allows address filtering based on the local
		   and remote addresses.  When enabled, all frames are received, disabled
		   indicates only frames destined for this local address are received "
	DEFVAL	{ disabled }
	::= { wfSyncEntry 11 }

wfSyncXid OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" XID enable/disable parameter. This parameter is used to enable
		   or disable transmission/reception of Test XID frames. "
	DEFVAL	{ disabled }
	::= { wfSyncEntry 12 }

wfSyncClkSource OBJECT-TYPE
	SYNTAX	INTEGER {
		internal(1),
		external(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Tx/Rx clock source is either internally or external generated. "
	DEFVAL	{ external }
	::= { wfSyncEntry 13 }

wfSyncClkSpeed OBJECT-TYPE
	SYNTAX	INTEGER {
		clk1200b(1200),
		clk2400b(2401),
		clk4800b(4807),
		clk7200b(7204),
		clk9600b(9615),
		clk19200b(19230),
		clk32000b(32051),
		clk38400b(38461),
		clk56k(56818),
		clk64k(64102),
		clk125k(125000),
		clk230k(227272),
		clk420k(416666),
		clk625k(625000),
		clk833k(833333),
		clk1mb(1250000),
		clk2mb(2500000),
		clk5mb(5000000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Tx/Rx clock speed. This speed selection is valid when either internal
		   or external clocking is selected.  In some cases,  router software uses
		   this attribute for route selection.  If Priority Queuing is configured,
		   it chooses queue depths based on this attribute.  If internal clocking
		   is selected, this attribute effects hardware initialization.  If external
		   clocking is selected,  this attribute should be set to the speed that
		   most closely corresponds to the speed of the external clock.
		"
	DEFVAL	{ clk64k }
	::= { wfSyncEntry 14 }

wfSyncSignalMode OBJECT-TYPE
	SYNTAX	INTEGER {
		balanced(1),
		unbalanced(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The signal mode parameter indicates the line paramter balanced or
		   unbalanced. "
	DEFVAL	{ balanced }
	::= { wfSyncEntry 15 }

wfSyncRtsEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2),
		kg84aenabled(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Note: In KG84 support, RTS has a different meaning "
	DEFVAL	{ disabled }
	::= { wfSyncEntry 16 }

wfSyncBurstCount OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Allows single or multiple DMA burst cycles. When enabled the chip
		   performs 8 word burst's. Single word cycles are performed when disabled.
		   This should be enabled except in certain cases with DSDE and DSE link
		   modules.  These modules have module IDs 112 (5430 - Dual Sync, Dual Enet)
		   and 116 (5420 - Dual Sync,  Single Enet).  With these modules,  this
		   attribute should be disabled if excessive TxUflo or RxOflo errors occur on
		   the ethernet ports.
		"
	DEFVAL	{ enabled }
	::= { wfSyncEntry 17 }

wfSyncService OBJECT-TYPE
	SYNTAX	INTEGER {
		transparent(1),
		llc1(2),
		llc2(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Service type for this circuit. Transparent is raw HDLC mode, LLC1 will
		   prefix the HDLC address and control fields to the frame.  The LLC2 service
		   provides the LAPB protocol service. "
	DEFVAL	{ llc1 }
	::= { wfSyncEntry 18 }

wfSyncRetryCount OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(64),
		default(16)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Retry count parameter indicates the number of retransmission
		   attempts which will be tried per frame before a line is determined
		   to be down.  The retry count is max attempts following expiration of
		   the T1 timer.  This parameter is equal to the N2 counter in ICB. "
	DEFVAL	{ default }
	::= { wfSyncEntry 19 }

wfSyncLinkIdleTimer OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(9999),
		default(9)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The link idle parameter is the number of seconds before a line has
		   been determined to be idle.  An idle line is considered disconnectd
		   This value is expressed in seconds. "
	DEFVAL	{ default }
	::= { wfSyncEntry 20 }

wfSyncRetryTimer OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(9999),
		default(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Retry Timer parameter indicates the timeout in seconds for a
		   response to be heard form the link.  Link control frames are sent at
		   the expiration of this timer value.  The frames will be resent up to
		   retry count (N2) at which time the link will be disconnected. "
	DEFVAL	{ default }
	::= { wfSyncEntry 21 }

wfSyncExtendedAddress OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This parameter controls length determination of the address field.
		   When this parameter is enabled, the first bit of the address field
		   be tested to determine the length of address field in octets. "
	DEFVAL	{ disabled }
	::= { wfSyncEntry 22 }

wfSyncExtendedAddressForce OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" When this parameter is enabled, the receiver will assume that all
		   address fields are 2 octets in length regardless of the first two
		   bits of the control field.  Usefull only in Transparent Mode. "
	DEFVAL	{ disabled }
	::= { wfSyncEntry 23 }

wfSyncExtendedControl OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This parameter allows the control fields of all S and I frames to
		   become 2 octets in length instead of one.  Numbering of all I frame
		   become modulo 128 instead of modulo 8.  The control field of U 
		   frames remains one octet in length. "
	DEFVAL	{ disabled }
	::= { wfSyncEntry 24 }

wfSyncExtendedControlForce OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This parameter when enabled will force all control fields to become
		   two octets in length regardless the first two bits in the control 
		   field.  Usefull only in Transparent Mode. (LLC1) "
	DEFVAL	{ disabled }
	::= { wfSyncEntry 25 }

wfSyncConnectAttempts OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(9999),
		default(10)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This parameter controls the number of connection attempts which
		   will be made during a LAPB connection request.  This parameter 
		   is applicable only during LLC2 service.  "
	DEFVAL	{ default }
	::= { wfSyncEntry 26 }

wfSyncWindowSizeTx OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(7)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The window size parameter controls the number of I frames which
		   may be transmitted without acknowledgement. Non EXTC mode. "
	DEFVAL	{ minimum }
	::= { wfSyncEntry 27 }

wfSyncWindowSizeTxExtc OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(7)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The window size parameter controls the number of I frames which
		   may be transmitted without acknowledgement in EXTC mode. "
	DEFVAL	{ minimum }
	::= { wfSyncEntry 28 }

wfSyncMinFrameSpace OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(32)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The minimum frame spacing parameter defines the number of flags
		   that are transmitted between adjacent frames. "
	DEFVAL	{ minimum }
	::= { wfSyncEntry 29 }

wfSyncLocalAddress OBJECT-TYPE
	SYNTAX	INTEGER {
		addressdte(3),
		addressdce(1),
		addressexplicit(7)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The local address parameter contains the DTE,DCE or EXPLICIT
		   value expressed as a single octet.  It may be extended to 2
		   octets if EXTA has been set. "
	DEFVAL	{ addressexplicit }
	::= { wfSyncEntry 30 }

wfSyncRemoteAddress OBJECT-TYPE
	SYNTAX	INTEGER {
		addressdte(3),
		addressdce(1),
		addressexplicit(7)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The remote address parameter contains the DTE,DCE or EXPLICIT
		   value expressed as a single octet.  It may be extended to 2 
		   octets if EXTA has been set. "
	DEFVAL	{ addressexplicit }
	::= { wfSyncEntry 31 }

wfSyncPassThruLocalMadr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" 48 bit MAC address of Local end of Sync Passthru circuit "
	::= { wfSyncEntry 32 }

wfSyncPassThruRemoteMadr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" 48 bit MAC address of Remote end of Sync Passthru circuit "
	::= { wfSyncEntry 33 }

wfSyncWanProtocol OBJECT-TYPE
	SYNTAX	INTEGER {
		standard(1),
		passthru(2),
		ppp(3),
		smds(4),
		framerelay(5),
		x25(6),
		switch(7),
		sw(8),
		atm(9)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" WAN protocol selection is provided via this parameter. The
		   supported protocols can be selected per interface. "
	DEFVAL	{ standard }
	::= { wfSyncEntry 34 }

wfSyncCrcSize OBJECT-TYPE
	SYNTAX	INTEGER {
		crc16bit(1),
		crc32bit(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" CRC size parameter, 16 bit standard CCITT or extended 32 bit CRC "
	DEFVAL	{ crc16bit }
	::= { wfSyncEntry 35 }

wfSyncRxOctets OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of octets received without error "
	::= { wfSyncEntry 36 }

wfSyncRxFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames received without error "
	::= { wfSyncEntry 37 }

wfSyncTxOctets OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of octets transmitted without error "
	::= { wfSyncEntry 38 }

wfSyncTxFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames transmitted without error "
	::= { wfSyncEntry 39 }

wfSyncRxErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of receive errors "
	::= { wfSyncEntry 40 }

wfSyncTxErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of transmission errors "
	::= { wfSyncEntry 41 }

wfSyncLackRescRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Rx frames dropped due to lack of buffer resources "
	::= { wfSyncEntry 42 }

wfSyncLackRescTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames clipped in driver's transmit routine due to transmit
		   congestion. "
	::= { wfSyncEntry 43 }

wfSyncUnderFlowTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of transmission underflows, device FIFO went empty before
		   next DMA request was granted.  "
	::= { wfSyncEntry 44 }

wfSyncRejectsTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of reject frames which were transmitted "
	::= { wfSyncEntry 45 }

wfSyncRejectsRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of reject frames which were received "
	::= { wfSyncEntry 46 }

wfSyncOverFlowRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of receive overflows, device FIFO overflowed before next
		   DMA cycle granted.  No buffer resources available. "
	::= { wfSyncEntry 47 }

wfSyncFramesIncompRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames which were incompletely received. These are frames
		   which may have resulted from FRMRR errors. "
	::= { wfSyncEntry 48 }

wfSyncBadFramesRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of bad receive frames, caused by FCS errors or non octet aligned. "
	::= { wfSyncEntry 49 }

wfSyncFrameRejectsRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Frame Rejects received "
	::= { wfSyncEntry 50 }

wfSyncRuntsRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of runt frames received "
	::= { wfSyncEntry 51 }

wfSyncT1Timeouts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of T1 timeout's detected. The T1 timer is the link
		   retransmission timer.  Link control frames will be retransmitted
		   when T1 expires.  This is a count of the number of timeouts. "
	::= { wfSyncEntry 52 }

wfSyncMemoryErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of memory access errors detected. A MERR is the expiration of
		   a DMA cycle without the bus being granted within 26us. "
	::= { wfSyncEntry 53 }

wfSyncMediaType OBJECT-TYPE
	SYNTAX	INTEGER {
		default(1),
		t1(2),
		e1(3),
		raisedtr(4),
		v25bis(5)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Media type selection is provided via this parameter "
	DEFVAL	{ default }
	::= { wfSyncEntry 54 }

wfSyncCfgTxQueueLength OBJECT-TYPE
	SYNTAX	INTEGER {
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configured Transmit Queue Length. Values other than zero over-ride the
		   router selected values.  A value of zero has a special meaning.  Zero
		   causes router based default values to be used.  Values larger than the
		   compiled ring size are truncated to the compiled ring size. 
		"
	::= { wfSyncEntry 55 }

wfSyncCfgRxQueueLength OBJECT-TYPE
	SYNTAX	INTEGER {
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configured Receive Queue Length. Values other than zero over-ride the
		   router selected values.  A value of zero has a special meaning.  Zero
		   causes router based default values to be used.  Values larger than the
		   compiled ring size are truncated to the compiled ring size. 
		"
	::= { wfSyncEntry 56 }

wfSyncTxQueueLength OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Current Transmit Queue Length. "
	::= { wfSyncEntry 57 }

wfSyncRxQueueLength OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Current Receive Queue Length. "
	::= { wfSyncEntry 58 }

wfSyncRxReplenMisses OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of packet buffer misses while attempting to replenish driver
		   receive ring. "
	::= { wfSyncEntry 59 }

wfSyncStartUpMode OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		passive(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Initiation of link level for LLC2 running LAPB "
	DEFVAL	{ active }
	::= { wfSyncEntry 60 }

wfSyncIdleRRFrames OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Transmit Link level RR's (Reciever Readys) during idle time. Every
		    wfSyncLinkIdleTimer expiration an RR will be sent.  "
	DEFVAL	{ off }
	::= { wfSyncEntry 61 }

wfSyncMultilineMode OBJECT-TYPE
	SYNTAX	INTEGER {
		standard(1),
		primary(2),
		secondary(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This indicates the roll the sync line plays in a
		   Bandwidth on Demand multiline circuit.  If this is
		   not BOD, the mode is standard. "
	DEFVAL	{ standard }
	::= { wfSyncEntry 62 }

wfSyncBODExamPeriod OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(5),
		default(10),
		maximum(200)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This indicates the interval that the queue depth should
		   be polled for possible congestion.  This value is in
		   tenths of a second "
	DEFVAL	{ default }
	::= { wfSyncEntry 63 }

wfSyncBODFullThreshold OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(10),
		default(70),
		maximum(100)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the percentage of the theoretical maximum hardware
		   queue that must be reached or exceeded before the line is 
		   considered congested. "
	DEFVAL	{ default }
	::= { wfSyncEntry 64 }

wfSyncBODRecoverThreshold OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(10),
		default(50),
		maximum(100)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the recovery threshold expressed as a percentage of the
		   theoretical maximum hardware queue.  The queue depth must fall
		   below this percentage in order for the BOD circuit to 
		   revert back to the primary line only. "
	DEFVAL	{ default }
	::= { wfSyncEntry 65 }

wfSyncBODPeriodsToFail OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(10),
		maximum(100)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the number of consecutive periods where the queue
		   depth is above the congestion threshold required to declare
		   the line congested.  It is also used for recovery.  That is, 
		   once a line is declared as congested, this is the number of
		   consecutive examination periods where the queue depth is
		   below the recovery threshold value required to delare that the
		   line is no longer congested. "
	DEFVAL	{ default }
	::= { wfSyncEntry 66 }

wfSyncKG84ACycle OBJECT-TYPE
	SYNTAX	INTEGER {
		cycle5ms(5),
		cycle10ms(10),
		cycle25ms(25),
		cycle50ms(50),
		cycle100ms(100),
		cycle200ms(200),
		cycle500ms(500)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Monitor sample time in milliseconds "
	DEFVAL	{ cycle100ms }
	::= { wfSyncEntry 67 }

wfSyncKG84ASyncLossInterval OBJECT-TYPE
	SYNTAX	INTEGER {
		num2cycles(2),
		num5cycles(5),
		num10cycles(10),
		num25cycles(25),
		num50cycles(50),
		num100cycles(100),
		num200cycles(200),
		num500cycles(500)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" timer starts when FCS error detected; if no good frame received
		   during this time, declare loss of synchronization "
	DEFVAL	{ num50cycles }
	::= { wfSyncEntry 68 }

wfSyncKG84ARemoteResyncWait OBJECT-TYPE
	SYNTAX	INTEGER {
		num2cycles(2),
		num5cycles(5),
		num10cycles(10),
		num25cycles(25),
		num50cycles(50),
		num100cycles(100),
		num200cycles(200),
		num500cycles(500)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" when loss of synchronization is detected, and CTS is low, start timer; if
		   CTS is not high when timer expires, force sync request "
	DEFVAL	{ num200cycles }
	::= { wfSyncEntry 69 }

wfSyncKG84ASyncPulse OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(2),
		maximum(4096),
		default(10)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" interval to pulse KG84a SYNC signal, in milliseconds "
	DEFVAL	{ default }
	::= { wfSyncEntry 70 }

wfSyncKG84AResyncs OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" number of KG84 resyncs performed "
	::= { wfSyncEntry 71 }

wfSyncKG84AResyncsDetected OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" number of KG84 resyncs detected "
	::= { wfSyncEntry 72 }

wfSyncKG84ABsu OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" value taken from mk5025 sync chip control block "
	::= { wfSyncEntry 73 }

wfSyncKG84AState OBJECT-TYPE
	SYNTAX	INTEGER {
		idle(1),
		local(2),
		remote(3),
		sync(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" state of sync "
	DEFVAL	{ idle }
	::= { wfSyncEntry 74 }

wfSyncKG84AOkFrames OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" count of valid frames received. This value taken from normal sync
		   processing, updated by timer routine when FCE error detected "
	::= { wfSyncEntry 75 }

wfSyncPollingEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable or Disable Sync Polling. When Sync Polling is enabled, the
		    the Sync Driver will be disabled if the DSR lead is dropped. If
		    disabled, the DSR lead is ignored. "
	DEFVAL	{ disabled }
	::= { wfSyncEntry 76 }

wfSyncBackupPool OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Backup pool id containing this line driver "
	::= { wfSyncEntry 77 }

wfSyncDemandPool OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Dial on demand  pool id containing this line driver "
	::= { wfSyncEntry 78 }

wfSyncLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" line number for this line instance "
	::= { wfSyncEntry 79 }

wfSyncHoldDownTime OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Wait this number of seconds before bringing the line
		    up. This prevents line waffling if this is a
		    reactivated primary line in a backup configuration
		    and it is a dirty line "
	::= { wfSyncEntry 80 }

wfSyncNetworkType OBJECT-TYPE
	SYNTAX	INTEGER {
		gosip(1),
		net2(2),
		c03(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Specific Network Link Level to be executed, LAPB mode only.
		    The types GOSIP and NET2 are used in conjunction with an MK5025
		    chip revision C04.  If a customer must be NET2 compliant and is
		    using an MK5025 chip revision C03, the C03 option must be used. "
	DEFVAL	{ net2 }
	::= { wfSyncEntry 81 }

wfSyncActiveCct OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1023)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Active CCT number for this line instance "
	::= { wfSyncEntry 82 }

wfSyncCableType OBJECT-TYPE
	SYNTAX	INTEGER {
		rs232(1),
		rs422(2),
		v35(3),
		x21(4)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Type of Cable attached to the sync port - this is
		 needed for V.25bis and Raise DTR to properly
		 communicate with the modem "
	::= { wfSyncEntry 83 }

wfSys		OBJECT IDENTIFIER ::= { wfSystem 1 }

wfSysDescr OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A textual description of the entity including full name and version of
		   the system's hardware type, OS, and networking SW 
		"
	::= { wfSys 1 }

wfSysObjectID OBJECT-TYPE
	SYNTAX	OBJECT IDENTIFIER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Provides an unambiguous means for determining the MIB type (old product vs.
		   harpoon MIB).
		"
	::= { wfSys 2 }

wfSysUpTime OBJECT-TYPE
	SYNTAX	TimeTicks
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Time in seconds/100 since the last cold start "
	::= { wfSys 3 }

wfSysContact OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Contact person for this node and where/how to contact them "
	::= { wfSys 4 }

wfSysName OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Node's fully qualified domain name or administratively assigned name "
	::= { wfSys 5 }

wfSysLocation OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Physical Location of this Node "
	::= { wfSys 6 }

wfSysServices OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A sum of numbers indicating the set of services the entity offers. For each
		  layer L, add 2**(L - 1). Example: 78 = Layers 2,3,4, and 7.
		 "
	DEFVAL	{ 78 }
	::= { wfSys 7 }

wfSysGmtOffset OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The positive or negative offset from Greenwich Mean Time (GMT). This
		   effectively describes the time zone. "
	::= { wfSys 8 }

wfSysMibVersion OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The version of the private management information base currently being
		  used by the system software. Format is: xV.RR "
	::= { wfSys 9 }

wfSysMibRevision OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The revision level of the private management information base currently
		  being used by the system software.  "
	::= { wfSys 10 }

wfNetbootCfgGroup	OBJECT IDENTIFIER ::= { wfNetBootGroup 1 }

wfNetbootImage OBJECT-TYPE
	SYNTAX	INTEGER {
		imageoff(1),
		imageon(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enables booting of an executable image over the network. If
		   disabled, then the image will be read from a local file system. "
	DEFVAL	{ imageon }
	::= { wfNetbootCfgGroup 1 }

wfNetbootConfig OBJECT-TYPE
	SYNTAX	INTEGER {
		configoff(1),
		configon(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enables booting of a configuration file over the network. If
		   disabled, then the config will be read from a local file system. "
	DEFVAL	{ configon }
	::= { wfNetbootCfgGroup 2 }

wfNetbootCurrGroup	OBJECT IDENTIFIER ::= { wfNetBootGroup 2 }

wfNetbootImageCurr OBJECT-TYPE
	SYNTAX	INTEGER {
		imagecurroff(1),
		imagecurron(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Current value of Netboot image flag in Non-Volatile RAM. "
	DEFVAL	{ imagecurron }
	::= { wfNetbootCurrGroup 1 }

wfNetbootConfigCurr OBJECT-TYPE
	SYNTAX	INTEGER {
		configcurroff(1),
		configcurron(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Current value of Netboot config flag in Non-Volatile RAM. "
	DEFVAL	{ configcurron }
	::= { wfNetbootCurrGroup 2 }

wfNetbootCfgTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfNetbootCfgEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		  A Table of Interface-specific Netboot Configuration Parameters
		 "
	::= { wfNetBootGroup 3 }

wfNetbootCfgEntry OBJECT-TYPE
	SYNTAX	WfNetbootCfgEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Values of a particular interface's configuration parameters. "
	INDEX	{ wfNetbootSlot,
		wfNetbootConnector }
	::= { wfNetbootCfgTable 1 }

WfNetbootCfgEntry ::= SEQUENCE {
	wfNetbootDelete
		INTEGER,
	wfNetbootSlot
		INTEGER,
	wfNetbootConnector
		INTEGER,
	wfNetbootIpAddr
		IpAddress,
	wfNetbootIpMask
		IpAddress,
	wfNetbootNextHop
		IpAddress,
	wfNetbootProtoMask
		INTEGER
}

wfNetbootDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		create(1),
		delete(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" create/delete parameter, dflt = created "
	DEFVAL	{ create }
	::= { wfNetbootCfgEntry 1 }

wfNetbootSlot OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(14)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" instance ID Slot, filled in by driver "
	::= { wfNetbootCfgEntry 2 }

wfNetbootConnector OBJECT-TYPE
	SYNTAX	INTEGER {
		xcvr1(1),
		com1(2),
		com2(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Unique number which identifies the interface for which the
		   following parameters are configured. "
	::= { wfNetbootCfgEntry 3 }

wfNetbootIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" IP address to use on this interface "
	::= { wfNetbootCfgEntry 4 }

wfNetbootIpMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" IP address mask to use on this interface "
	::= { wfNetbootCfgEntry 5 }

wfNetbootNextHop OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" IP address of the next hop router connected to this interface.
		   This value is used to auto-configure a static route for
		   Network Boot. "
	::= { wfNetbootCfgEntry 6 }

wfNetbootProtoMask OBJECT-TYPE
	SYNTAX	INTEGER {
		fron(1),
		x25on(2),
		intrnclkon(3),
		noton(4)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Bit Mask indicating a non-default protocol is being used on
		   this interface. "
	DEFVAL	{ noton }
	::= { wfNetbootCfgEntry 7 }

wfNetbootCurrTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfNetbootCurrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		  A Table of current values for Interface-specific Netboot Parameters
		 "
	::= { wfNetBootGroup 4 }

wfNetbootCurrEntry OBJECT-TYPE
	SYNTAX	WfNetbootCurrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Values of a particular interface's current configuration parameters. "
	INDEX	{ wfNetbootCurrSlot,
		wfNetbootCurrConnector }
	::= { wfNetbootCurrTable 1 }

WfNetbootCurrEntry ::= SEQUENCE {
	wfNetbootCurrSlot
		INTEGER,
	wfNetbootCurrConnector
		INTEGER,
	wfNetbootCurrIpAddr
		IpAddress,
	wfNetbootCurrIpMask
		IpAddress,
	wfNetbootCurrNextHop
		IpAddress,
	wfNetbootCurrProtoMask
		INTEGER
}

wfNetbootCurrSlot OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(14)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" instance ID Slot, filled in by driver "
	::= { wfNetbootCurrEntry 1 }

wfNetbootCurrConnector OBJECT-TYPE
	SYNTAX	INTEGER {
		currxcvr1(1),
		currcom1(2),
		currcom2(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Unique number which identifies the interface for which the
		   following parameters are configured. "
	::= { wfNetbootCurrEntry 2 }

wfNetbootCurrIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" IP address to use on this interface "
	::= { wfNetbootCurrEntry 3 }

wfNetbootCurrIpMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" IP address mask to use on this interface "
	::= { wfNetbootCurrEntry 4 }

wfNetbootCurrNextHop OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" IP address of the next hop router connected to this interface.
		   This value is used to auto-configure a static route for
		   Network Boot. "
	::= { wfNetbootCurrEntry 5 }

wfNetbootCurrProtoMask OBJECT-TYPE
	SYNTAX	INTEGER {
		frcurron(1),
		x25curron(2),
		intrnclkcurron(3),
		notcurron(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Bit Mask indicating a non-default protocol is being used on
		   this interface. "
	DEFVAL	{ notcurron }
	::= { wfNetbootCurrEntry 6 }

wfT1Table OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfT1Entry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		   T1 line record
		 "
	::= { wfLine 10 }

wfT1Entry OBJECT-TYPE
	SYNTAX	WfT1Entry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the T1 table "
	INDEX	{ wfT1Slot,
		wfT1Connector }
	::= { wfT1Table 1 }

WfT1Entry ::= SEQUENCE {
	wfT1Delete
		INTEGER,
	wfT1Disable
		INTEGER,
	wfT1State
		INTEGER,
	wfT1Slot
		INTEGER,
	wfT1Connector
		INTEGER,
	wfT1Madr
		OCTET STRING,
	wfT1FrameType
		INTEGER,
	wfT1LineBuildout
		INTEGER,
	wfT1B8ZSSupport
		INTEGER,
	wfT1ClockMode
		INTEGER,
	wfT1MiniDacs
		DisplayString,
	wfT1BipolarVios
		Counter,
	wfT1FrameBitErrs
		Counter,
	wfT1OutOfFrameErrs
		Counter,
	wfT1SuperFrameErrs
		Counter,
	wfT1RcvYelAlarms
		Counter,
	wfT1RcvCarrierLoss
		Counter,
	wfT1RcvRedAlarms
		Counter
}

wfT1Delete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" create/delete parameter, dflt = created "
	DEFVAL	{ created }
	::= { wfT1Entry 1 }

wfT1Disable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" enable/disable parameter, dflt = enabled "
	DEFVAL	{ enabled }
	::= { wfT1Entry 2 }

wfT1State OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" line driver state variable, Not Present, Init, Up "
	DEFVAL	{ notpresent }
	::= { wfT1Entry 3 }

wfT1Slot OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(14)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" instance ID Slot, filled in by driver "
	::= { wfT1Entry 4 }

wfT1Connector OBJECT-TYPE
	SYNTAX	INTEGER {
		one(1),
		two(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" instance ID Connector, filled in by driver "
	::= { wfT1Entry 5 }

wfT1Madr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Line mac address, filled in by driver "
	::= { wfT1Entry 6 }

wfT1FrameType OBJECT-TYPE
	SYNTAX	INTEGER {
		d4(1),
		esf(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Frame Type - differentiates between two tarrifed framing formats
		   D4 and ESF.                                                    "
	DEFVAL	{ esf }
	::= { wfT1Entry 7 }

wfT1LineBuildout OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(655)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Line Buildout - Approximate length of cable "
	DEFVAL	{ minimum }
	::= { wfT1Entry 8 }

wfT1B8ZSSupport OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" B8ZS Support - Enables or disables Binary 8 zeros suppression "
	DEFVAL	{ disabled }
	::= { wfT1Entry 9 }

wfT1ClockMode OBJECT-TYPE
	SYNTAX	INTEGER {
		internal(1),
		slave(2),
		manual(4)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Clock Mode - Specifies the source of the T1 transmit clock "
	DEFVAL	{ internal }
	::= { wfT1Entry 10 }

wfT1MiniDacs OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" MiniDacs Configuration - assigns each T1 channel to a specific
		   function                                                       "
	::= { wfT1Entry 11 }

wfT1BipolarVios OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Bipolar Violations "
	::= { wfT1Entry 12 }

wfT1FrameBitErrs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frame bit errors "
	::= { wfT1Entry 13 }

wfT1OutOfFrameErrs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Out of Frame errors "
	::= { wfT1Entry 14 }

wfT1SuperFrameErrs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of  Superframe errors "
	::= { wfT1Entry 15 }

wfT1RcvYelAlarms OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Yellow Alarms Received "
	::= { wfT1Entry 16 }

wfT1RcvCarrierLoss OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of instances of carrier loss "
	::= { wfT1Entry 17 }

wfT1RcvRedAlarms OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Red Alarm Received "
	::= { wfT1Entry 18 }

wfTcp		OBJECT IDENTIFIER ::= { wfTcpGroup 1 }

wfTcpDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Create/Delete parameter. Default is created.
		  Users perform a set operation on this
		  object in order to create/delete TCP.
		  "
	DEFVAL	{ created }
	::= { wfTcp 1 }

wfTcpDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled.
		  Users perform a set operation on this
		  object in order to enable/disable TCP.
		  "
	DEFVAL	{ enabled }
	::= { wfTcp 2 }

wfTcpState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The current state of the entire TCP."
	DEFVAL	{ notpresent }
	::= { wfTcp 3 }

wfTcpRtoAlgorithm OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		constant(2),
		rsre(3),
		vanj(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The algorithm used to determine the timeout value
		  used for retransmitting unacknowledged octets.
		  "
	DEFVAL	{ vanj }
	::= { wfTcp 4 }

wfTcpRtoMin OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(100),
		default(250),
		maximum(15000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The minimum value permitted by a TCP
		  implementation for the retransmission timeout,
		  measured in milliseconds.  More refined semantics
		  for objects of this type depend upon the algorithm
		  used to determine the retransmission timeout.  In
		  particular, when the timeout algorithm is rsre(3),
		  an object of this type has the semantics of the
		  LBOUND quantity described in RFC 793.
		  "
	DEFVAL	{ default }
	::= { wfTcp 5 }

wfTcpRtoMax OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(15000),
		maximum(240000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The maximum value permitted by a TCP
		  implementation for the retransmission timeout,
		  measured in milliseconds.  More refined semantics
		  for objects of this type depend upon the algorithm
		  used to determine the retransmission timeout.  In
		  particular, when the timeout algorithm is rsre(3),
		  an object of this type has the semantics of the
		  UBOUND quantity described in RFC 793.
		  "
	DEFVAL	{ maximum }
	::= { wfTcp 6 }

wfTcpMaxConn OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The limit on the total number of TCP connections
		  the entity can support.  In entities where the
		  maximum number of connections is dynamic, this
		  object should contain the value -1.
		  "
	::= { wfTcp 7 }

wfTcpActiveOpens OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times TCP connections have made a
		  direct transition to the SYN-SENT state from the
		  CLOSED state.
		  "
	::= { wfTcp 8 }

wfTcpPassiveOpens OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times TCP connections have made a
		  direct transition to the SYN-RCVD state from the
		  LISTEN state.
		  "
	::= { wfTcp 9 }

wfTcpAttemptFails OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times TCP connections have made a
		  direct transition to the CLOSED state from either
		  the SYN-SENT state or the SYN-RCVD state, plus the
		  number of times TCP connections have made a direct
		  transition to the LISTEN state from the SYN-RCVD
		  state.
		  "
	::= { wfTcp 10 }

wfTcpEstabResets OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of times TCP connections have made a
		  direct transition to the CLOSED state from either
		  the ESTABLISHED state or the CLOSE-WAIT state.
		  "
	::= { wfTcp 11 }

wfTcpCurrEstab OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of TCP connections for which the
		  current state is either ESTABLISHED or CLOSE-
		  WAIT.
		  "
	::= { wfTcp 12 }

wfTcpInSegs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of segments received, including
		  those received in error.  This count includes
		  segments received on currently established
		  connections.
		  "
	::= { wfTcp 13 }

wfTcpOutSegs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of segments sent, including
		  those on current connections but excluding those
		  containing only retransmitted octets.
		  "
	::= { wfTcp 14 }

wfTcpRetransSegs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of segments retransmitted - that
		  is, the number of TCP segments transmitted
		  containing one or more previously transmitted
		  octets.
		  "
	::= { wfTcp 15 }

wfTcpInErrs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The total number of segments received in error
		  (e.g., bad TCP checksums).
		  "
	::= { wfTcp 16 }

wfTcpOutRsts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of TCP segments sent containing the
		  RST flag.
		  "
	::= { wfTcp 17 }

wfTcpMaxWindow OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(512),
		default(4096),
		maximum(65535)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The maximum transmit and receive window size TCP will allow
		  for each connection measured in octets.
		  "
	DEFVAL	{ default }
	::= { wfTcp 18 }

wfTcpConnTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfTcpConnEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The TCP connection table contains information about this
		  entity's existing TCP connections.
		  "
	::= { wfTcpGroup 2 }

wfTcpConnEntry OBJECT-TYPE
	SYNTAX	WfTcpConnEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A TCP Connection "
	INDEX	{ wfTcpConnLocalAddress,
		wfTcpConnLocalPort,
		wfTcpConnRemAddress,
		wfTcpConnRemPort }
	::= { wfTcpConnTable 1 }

WfTcpConnEntry ::= SEQUENCE {
	wfTcpConnDelete
		INTEGER,
	wfTcpConnState
		INTEGER,
	wfTcpConnLocalAddress
		IpAddress,
	wfTcpConnLocalPort
		INTEGER,
	wfTcpConnRemAddress
		IpAddress,
	wfTcpConnRemPort
		INTEGER
}

wfTcpConnDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Delete connection attribute. Users set this attribute
		  to a value of TCP_CONN_STATE_DELETE to delete a TCP connection.
		  This is the only value that can be written. The instance should
		  never get created by a user writing to this attribute.
		  "
	DEFVAL	{ created }
	::= { wfTcpConnEntry 1 }

wfTcpConnState OBJECT-TYPE
	SYNTAX	INTEGER {
		closed(1),
		listen(2),
		synsent(3),
		synreceived(4),
		established(5),
		finwait1(6),
		finwait2(7),
		closewait(8),
		lastack(9),
		closing(10),
		timewait(11),
		deletetcb(12)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The state of this TCP connection.
		 
		  The only value which may be set by a management
		  station is deleteTCB(12).  Accordingly, it is
		  appropriate for an agent to return a `badValue'
		  response if a management station attempts to set
		  this object to any other value.
		 
		  If a management station sets this object to the
		  value deleteTCB(12), then this has the effect of
		  deleting the TCB (as defined in RFC 793) of the
		  corresponding connection on the managed node,
		  resulting in immediate termination of the
		  connection.
		 
		  As an implementation-specific option, a RST
		  segment may be sent from the managed node to the
		  other TCP endpoint (note however that RST segments
		  are not sent reliably).
		  "
	DEFVAL	{ closed }
	::= { wfTcpConnEntry 2 }

wfTcpConnLocalAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The local IP address for this TCP connection. In
		  the case of a connection in the listen state which
		  is willing to accept connections for any IP
		  interface associated with the node, the value
		  0.0.0.0 is used.
		  "
	::= { wfTcpConnEntry 3 }

wfTcpConnLocalPort OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(65535)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The local port number for this TCP connection "
	::= { wfTcpConnEntry 4 }

wfTcpConnRemAddress OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The remote IP address for this TCP connection. "
	::= { wfTcpConnEntry 5 }

wfTcpConnRemPort OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(65535)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The remote port number for this TCP connection. "
	::= { wfTcpConnEntry 6 }

wfTelnet	OBJECT IDENTIFIER ::= { wfTelnetGroup 1 }

wfTelnetDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Create/Delete parameter. Default is created.
		  Users perform a set operation on this
		  object in order to create/delete TELNET.
		 "
	DEFVAL	{ created }
	::= { wfTelnet 1 }

wfTelnetDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enables or Disables TELNET Subsystem "
	DEFVAL	{ enabled }
	::= { wfTelnet 2 }

wfTelnetLinesPerScreen OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Number of lines which can be displayed in one screen on the Telnet
		   Technician Interface console.
		   (Default value if NAWS option not negotiated)  "
	DEFVAL	{ 24 }
	::= { wfTelnet 3 }

wfTelnetMoreDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable the 'more' feature on the Telnet Technician Interface console "
	DEFVAL	{ enabled }
	::= { wfTelnet 4 }

wfTelnetPrompt OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Character string which will be used as the system prompt on
		   the Telnet Technician Interface console "
	::= { wfTelnet 5 }

wfTelnetLoginTimeOut OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(99)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"  Time out in minutes to Disconnect when at the login prompt "
	DEFVAL	{ minimum }
	::= { wfTelnet 6 }

wfTelnetPasswordTimeOut OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(99)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Timout in minutes on Password entry "
	DEFVAL	{ minimum }
	::= { wfTelnet 7 }

wfTelnetCommandTimeOut OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(99),
		default(15)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Time out in minutes to Disconnect when at the command prompt "
	DEFVAL	{ default }
	::= { wfTelnet 8 }

wfTelnetLoginRetries OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(99),
		default(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"  Limit # of login attempts then Disconnect "
	DEFVAL	{ default }
	::= { wfTelnet 9 }

wfTelnetTotalLogins OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of Telnet TI login attempts "
	::= { wfTelnet 10 }

wfTelnetUserLoginErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of FAILED User login attempts "
	::= { wfTelnet 11 }

wfTelnetManagerLoginErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of FAILED Manager login attempts "
	::= { wfTelnet 12 }

wfTelnetOtherLoginErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of FAILED Other login attempts "
	::= { wfTelnet 13 }

wfTelnetActiveSessions OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of Telnet TI Sessions "
	::= { wfTelnet 14 }

wfTelnetDiagnosticReport OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Diagnostic Flag: report prints the options
		   information, plus some additional information about 
		   what processing is  going  on "
	DEFVAL	{ disabled }
	::= { wfTelnet 15 }

wfTelnetDiagnosticExercise OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Diagnostic Flag: Not implemented yet.  "
	DEFVAL	{ disabled }
	::= { wfTelnet 16 }

wfTelnetDiagnosticNetworkData OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Diagnostic Flag: NETDATA displays the data
		   stream received by telnetd "
	DEFVAL	{ disabled }
	::= { wfTelnet 17 }

wfTelnetDiagnosticPtyData OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Diagnostic Flag: PTYDATA displays data written to the pty "
	DEFVAL	{ disabled }
	::= { wfTelnet 18 }

wfTelnetDiagnosticOptions OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Diagnostic Flag: OPTIONS prints information about
		   the negotiation of TELNET options "
	DEFVAL	{ disabled }
	::= { wfTelnet 19 }

wfTelnetInitialSearchPath OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Example:  'A:;1:;2:' or '2:;4:6:;9:'                   "
	::= { wfTelnet 20 }

wfTelnetManagerAutoScript OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" for each login.                                    "
	::= { wfTelnet 21 }

wfTelnetUserAutoScript OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" for each login.                                    "
	::= { wfTelnet 22 }

wfTelnetUserAbortLogoutDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" a USER from escaping out of the User Autoscript "
	DEFVAL	{ disabled }
	::= { wfTelnet 23 }

wfTftp		OBJECT IDENTIFIER ::= { wfInternet 6 }

wfTftpDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enables or Disables TFTP Subsystem "
	DEFVAL	{ enabled }
	::= { wfTftp 1 }

wfTftpDefaultVolume OBJECT-TYPE
	SYNTAX	INTEGER {
		volume1(1),
		volume2(2),
		volume3(3),
		volume4(4),
		volume5(5),
		volume6(6),
		volume7(7),
		volume8(8),
		volume9(9),
		volume10(10),
		volume11(11),
		volume12(12),
		volume13(13),
		volumea(65)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The file system volume number to which transferred files will
		  be written and from which they will be retrieved. The volume 
		  number corresponds to the slot number on which the volume 
		  resides. On systems with a floppy disk, volumeA(65) should be 
		  used.  "
	DEFVAL	{ volume2 }
	::= { wfTftp 2 }

wfTftpXfers OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Transfers in Progress "
	::= { wfTftp 3 }

wfTftpTimeOut OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" General Retransmission time-out value (seconds) "
	DEFVAL	{ 5 }
	::= { wfTftp 4 }

wfTftpCloseTimeOut OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Retransmission time-out value for sender of final ACK (seconds)"
	DEFVAL	{ 25 }
	::= { wfTftp 5 }

wfTftpRexmit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Maximum Number of Retransmissions "
	DEFVAL	{ 5 }
	::= { wfTftp 6 }

wfTftpInFiles OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of files Successfully received "
	::= { wfTftp 7 }

wfTftpOutFiles OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of files Successfully sent "
	::= { wfTftp 8 }

wfTftpInWRQ OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of write requests received "
	::= { wfTftp 9 }

wfTftpOutWRQ OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of write requests sent "
	::= { wfTftp 10 }

wfTftpInRRQ OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of read requests received "
	::= { wfTftp 11 }

wfTftpOutRRQ OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of read requests sent "
	::= { wfTftp 12 }

wfTftpRexmitPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Re-transmitted packets "
	::= { wfTftp 13 }

wfTftpInErr OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Error PDUs Received "
	::= { wfTftp 14 }

wfTftpOutErr OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Error PDUs Sent "
	::= { wfTftp 15 }

wfTftpAborts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Aborted Pseudo Connections "
	::= { wfTftp 16 }

wfTiRui		OBJECT IDENTIFIER ::= { wfServices 2 }

wfTiRuiState OBJECT-TYPE
	SYNTAX	INTEGER {
		idle(1),
		busy(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The state of the ti rui command processor. Idle is normal state. Busy
		   indicates a command is being processed. 
		"
	DEFVAL	{ idle }
	::= { wfTiRui 1 }

wfTiRuiAction OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Ti command request string "
	::= { wfTiRui 2 }

wfTiRuiResult OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The result of the Ti command requst "
	::= { wfTiRui 3 }

wfTiRuiInReqs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of command requests "
	::= { wfTiRui 4 }

wfTiRuiOutResults OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of command requests that processed without error "
	::= { wfTiRui 5 }

wfTiRuiOutResultsErr OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Total number of command requests that could not be processed because of
		   errors 
		"
	::= { wfTiRui 6 }

wfTokenRingTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfTokenRingEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"
		   TOKEN RING line record
		 "
	::= { wfLine 2 }

wfTokenRingEntry OBJECT-TYPE
	SYNTAX	WfTokenRingEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the token table "
	INDEX	{ wfTokenRingSlot,
		wfTokenRingConnector }
	::= { wfTokenRingTable 1 }

WfTokenRingEntry ::= SEQUENCE {
	wfTokenRingDelete
		INTEGER,
	wfTokenRingDisable
		INTEGER,
	wfTokenRingState
		INTEGER,
	wfTokenRingSlot
		INTEGER,
	wfTokenRingConnector
		INTEGER,
	wfTokenRingCct
		INTEGER,
	wfTokenRingMtu
		INTEGER,
	wfTokenRingMadr
		OCTET STRING,
	wfTokenRingCfgMadr
		OCTET STRING,
	wfTokenRingMadrSelect
		INTEGER,
	wfTokenRingSpeed
		INTEGER,
	wfTokenRingEarlyTokenRelease
		INTEGER,
	wfTokenRingStatus
		INTEGER,
	wfTokenRingOpenState
		INTEGER,
	wfTokenRingOpenStatus
		INTEGER,
	wfTokenRingUpStream
		OCTET STRING,
	wfTokenRingRxOctets
		Counter,
	wfTokenRingRxFrames
		Counter,
	wfTokenRingTxOctets
		Counter,
	wfTokenRingTxFrames
		Counter,
	wfTokenRingInDiscards
		Counter,
	wfTokenRingInErrors
		Counter,
	wfTokenRingOutDiscards
		Counter,
	wfTokenRingOutErrors
		Counter,
	wfTokenRingTxClipFrames
		Counter,
	wfTokenRingRxReplenMisses
		Counter,
	wfTokenRingSignalLosses
		Counter,
	wfTokenRingHardErrors
		Counter,
	wfTokenRingSoftErrors
		Counter,
	wfTokenRingTransmitBeacons
		Counter,
	wfTokenRingLobeWireFaults
		Counter,
	wfTokenRingAutoRemovalErrors
		Counter,
	wfTokenRingRequestRemoves
		Counter,
	wfTokenRingCounterOverflows
		Counter,
	wfTokenRingSingleStations
		Counter,
	wfTokenRingRingRecoveries
		Counter,
	wfTokenRingAdapterChecks
		Counter,
	wfTokenRingFirstAdapterCheckCode
		INTEGER,
	wfTokenRingLastAdapterCheckCode
		INTEGER,
	wfTokenRingLineErrors
		Counter,
	wfTokenRingBurstErrors
		Counter,
	wfTokenRingAriFciErrors
		Counter,
	wfTokenRingLostFrameErrors
		Counter,
	wfTokenRingRxCongestionErrors
		Counter,
	wfTokenRingFrameCopiedErrors
		Counter,
	wfTokenRingTokenErrors
		Counter,
	wfTokenRingDmaBusErrors
		Counter,
	wfTokenRingDmaParityErrors
		Counter,
	wfTokenRingSrbNotFreeCmdAborts
		Counter,
	wfTokenRingRxProcessings
		Counter,
	wfTokenRingTxProcessings
		Counter,
	wfTokenRingTxCmplProcessings
		Counter,
	wfTokenRingRxTimeouts
		Counter,
	wfTokenRingCmdTimeouts
		Counter,
	wfTokenRingRxHostIntErrors
		Counter,
	wfTokenRingRxTxBufferSize
		INTEGER,
	wfTokenRingCfgTxQueueLength
		INTEGER,
	wfTokenRingCfgRxQueueLength
		INTEGER,
	wfTokenRingTxQueueLength
		INTEGER,
	wfTokenRingRxQueueLength
		INTEGER,
	wfTokenRingMacRxOctets
		Counter,
	wfTokenRingMacRxFrames
		Counter,
	wfTokenRingCfgFunctionalAddress
		INTEGER,
	wfTokenRingFunctionalAddress
		INTEGER,
	wfTokenRingGroupAddress
		INTEGER,
	wfTokenRingLineNumber
		INTEGER,
	wfTokenRingMacCode
		DisplayString
}

wfTokenRingDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" create/delete parameter. "
	DEFVAL	{ created }
	::= { wfTokenRingEntry 1 }

wfTokenRingDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" enable/disable parameter. "
	DEFVAL	{ enabled }
	::= { wfTokenRingEntry 2 }

wfTokenRingState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" line driver state variable, Not Present, Init, Down, Up "
	DEFVAL	{ notpresent }
	::= { wfTokenRingEntry 3 }

wfTokenRingSlot OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(14)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" instance ID Slot, filled in by driver "
	::= { wfTokenRingEntry 4 }

wfTokenRingConnector OBJECT-TYPE
	SYNTAX	INTEGER {
		one(1),
		two(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" instance ID Connector, filled in by driver "
	::= { wfTokenRingEntry 5 }

wfTokenRingCct OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1023)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" cct number for this line instance, configuration required "
	::= { wfTokenRingEntry 6 }

wfTokenRingMtu OBJECT-TYPE
	SYNTAX	INTEGER {
		default(4568)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" mtu parameter, fixed. This mtu of 4568 allows a type 3 Source Route
		   Frame (info=4472) to be IP encapsulated over Token Ring.
		   The components are:
		        AC_FC      (2) +
		        SNAP       (12+8) +
		        SNAP_IP    (12+8+20) +
		        SR         (12+18) +
		        TYPE3_INFO (4472) +
		        FCS        (4)
		        ---------------------
		        total      4568 bytes
		"
	DEFVAL	{ default }
	::= { wfTokenRingEntry 7 }

wfTokenRingMadr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" line MAC address, line driver fills in the currently used 48 bit
		    MAC address.
		"
	::= { wfTokenRingEntry 8 }

wfTokenRingCfgMadr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configured line MAC address. Only used if wfTokenRingMadrSelect
		   is set appropriately.
		"
	::= { wfTokenRingEntry 9 }

wfTokenRingMadrSelect OBJECT-TYPE
	SYNTAX	INTEGER {
		boxwide(1),
		prom(2),
		cnfg(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Selector determines which MAC address the interface will use. "
	DEFVAL	{ prom }
	::= { wfTokenRingEntry 10 }

wfTokenRingSpeed OBJECT-TYPE
	SYNTAX	INTEGER {
		mbps4(4194304),
		mbps16(16777216)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Token Ring speed parameter - 4 and 16 Mbps are only valid values "
	DEFVAL	{ mbps16 }
	::= { wfTokenRingEntry 11 }

wfTokenRingEarlyTokenRelease OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Early Token Release parameter, only valid with 16Mbps "
	DEFVAL	{ enabled }
	::= { wfTokenRingEntry 12 }

wfTokenRingStatus OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current interface status. This attribute is only valid when the
		   wfTokenRingOpenState attribute is set to OPENED.  The attribute's
		   value is a sum of values,  one for each currently applicable condition
		   (ie, bit positions indicate active conditions).  Occurrences of each
		   condition are separately counted and the counts are included in this
		   MIB as attributes wfTokenRingSignalLosses through
		   wfTokenRingRingRecoveries.  The following values are defined:
		        32768 = Signal Losses
		        16384 = Hard Errors
		        8192  = Soft Errors
		        4096  = Transmit Beacons
		        2048  = Lobe Wire Faults
		        1024  = Auto-Removal Errors
		        256   = Remove Received
		        128   = Counter Overflows
		        64    = Single Stations
		        32    = Ring Recoveries
		   This attribute is the most recent sum of these conditions.  More
		   information on each condition is include in the descriptions of the
		   individual counter attributes.
		"
	::= { wfTokenRingEntry 13 }

wfTokenRingOpenState OBJECT-TYPE
	SYNTAX	INTEGER {
		opened(1),
		opening(2),
		closing(3),
		openfailure(4),
		ringfailure(5),
		closed(6)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current interface state with respect to entering or leaving
		   the ring.
		"
	DEFVAL	{ closed }
	::= { wfTokenRingEntry 14 }

wfTokenRingOpenStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		open(1),
		badparam(2),
		lobefailed(3),
		signalloss(4),
		insertiontimeout(5),
		ringfailed(6),
		beaconing(7),
		duplicatemac(8),
		requestfailed(9),
		removereceived(10),
		unkerror(11),
		noopen(12)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Indicates the success, or the reason for failure, of the station's
		   most recent attempt to enter the ring.
		"
	DEFVAL	{ noopen }
	::= { wfTokenRingEntry 15 }

wfTokenRingUpStream OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" MAC address of Up Stream neighbor. Only valid when 'opened'. "
	::= { wfTokenRingEntry 16 }

wfTokenRingRxOctets OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of octets received without error. "
	::= { wfTokenRingEntry 17 }

wfTokenRingRxFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames received without error. "
	::= { wfTokenRingEntry 18 }

wfTokenRingTxOctets OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of octets transmitted without error. "
	::= { wfTokenRingEntry 19 }

wfTokenRingTxFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames transmitted without error. "
	::= { wfTokenRingEntry 20 }

wfTokenRingInDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of error-free inbound packets discarded. Usually due to lack of
		   memory resources. This is equivalent to wfTokenRingRxCongestionErrors.
		"
	::= { wfTokenRingEntry 21 }

wfTokenRingInErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of inbound packets not delivered to higher-layer protocol due to
		   errors.  The sum of wfTokenRingLineErrors and wfTokenRingBurstErrors.
		"
	::= { wfTokenRingEntry 22 }

wfTokenRingOutDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of error-free outbound packets discarded. Usually due to lack of
		   transmission bandwidth. This is equivalent to wfTokenRingTxClipFrames.
		"
	::= { wfTokenRingEntry 23 }

wfTokenRingOutErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of outbound packets that could not be transmitted because of
		   errors. This is equivalent to wfTokenRingLostFrameErrors.
		"
	::= { wfTokenRingEntry 24 }

wfTokenRingTxClipFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames clipped in driver's transmit routine due to transmit
		   congestion.
		"
	::= { wfTokenRingEntry 25 }

wfTokenRingRxReplenMisses OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of packet buffer misses while attempting to replenish driver
		   receive ring.
		"
	::= { wfTokenRingEntry 26 }

wfTokenRingSignalLosses OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of ring signal losses detected. "
	::= { wfTokenRingEntry 27 }

wfTokenRingHardErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of events causing the adapter to transmit or receive beacon
		   MAC frames.
		"
	::= { wfTokenRingEntry 28 }

wfTokenRingSoftErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of soft errors. Corresponds to the number of Report Error MAC
		   frames transmitted by this station.
		"
	::= { wfTokenRingEntry 29 }

wfTokenRingTransmitBeacons OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of events causing the adapter to transmit beacon frames. "
	::= { wfTokenRingEntry 30 }

wfTokenRingLobeWireFaults OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of opens or shorts (cable faults) between the adapter and
		   the MAU.
		"
	::= { wfTokenRingEntry 31 }

wfTokenRingAutoRemovalErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of lobe wrap test failures during beacon auto_removal process. "
	::= { wfTokenRingEntry 32 }

wfTokenRingRequestRemoves OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Remove Ring Station MAC frames received. Each frame causes
		   this station to leave the ring.
		"
	::= { wfTokenRingEntry 33 }

wfTokenRingCounterOverflows OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of adapter error counter overflows. "
	::= { wfTokenRingEntry 34 }

wfTokenRingSingleStations OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of ring status change interrupts while adapter is only station
		   on the ring.
		"
	::= { wfTokenRingEntry 35 }

wfTokenRingRingRecoveries OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of claim token MAC frames (ring recoveries) observed on
		   the ring.
		"
	::= { wfTokenRingEntry 36 }

wfTokenRingAdapterChecks OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of internal adapter errors that result in adapter crashes. "
	::= { wfTokenRingEntry 37 }

wfTokenRingFirstAdapterCheckCode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Adapter Check Code of first occurrence. "
	::= { wfTokenRingEntry 38 }

wfTokenRingLastAdapterCheckCode OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Adapter Check Code of most recent (last) occurrence. "
	::= { wfTokenRingEntry 39 }

wfTokenRingLineErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames copied or repeated by this station with bad
		   format or an FCS error.
		"
	::= { wfTokenRingEntry 40 }

wfTokenRingBurstErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of errored frames with no transition for 5 1/2 bit times. "
	::= { wfTokenRingEntry 41 }

wfTokenRingAriFciErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of occurrences of this station receiving both an AMP MAC
		   frame and a SMP MAC frame with the a & c bits clear or more than
		   one SMP MAC frame with the a & c bits clear without an intervening
		   AMP MAC frame.  This condition indicates that the up-stream
		   neighbor is unable to set the a & c bits in a frame that it has
		   copied.
		"
	::= { wfTokenRingEntry 42 }

wfTokenRingLostFrameErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames being stripped which are missing their tails. "
	::= { wfTokenRingEntry 43 }

wfTokenRingRxCongestionErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of frames dropped due to receive congestion. "
	::= { wfTokenRingEntry 44 }

wfTokenRingFrameCopiedErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of specifically addressed frames for this station that had
		   their a & c bits previously set.
		"
	::= { wfTokenRingEntry 45 }

wfTokenRingTokenErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of token protocol errors. Only relevant when this station is
		   the active monitor.
		"
	::= { wfTokenRingEntry 46 }

wfTokenRingDmaBusErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of bus errors during DMA that do not exceed threshold. "
	::= { wfTokenRingEntry 47 }

wfTokenRingDmaParityErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of parity errors during DMA that do not exceed threshold. "
	::= { wfTokenRingEntry 48 }

wfTokenRingSrbNotFreeCmdAborts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of host to adapter commands aborted because of in-completed in
		   process commands.
		"
	::= { wfTokenRingEntry 49 }

wfTokenRingRxProcessings OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of processings of received frames (similar to RINT). "
	::= { wfTokenRingEntry 50 }

wfTokenRingTxProcessings OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of processings of frames for transmit. "
	::= { wfTokenRingEntry 51 }

wfTokenRingTxCmplProcessings OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of processings of transmitted frames (similar to TINT). "
	::= { wfTokenRingEntry 52 }

wfTokenRingRxTimeouts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of re-initializations due to receiver time-outs. "
	::= { wfTokenRingEntry 53 }

wfTokenRingCmdTimeouts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of re-initializations due to command time-outs. "
	::= { wfTokenRingEntry 54 }

wfTokenRingRxHostIntErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of re-initializations due to receive host interface errors. "
	::= { wfTokenRingEntry 55 }

wfTokenRingRxTxBufferSize OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Internal Adapter RAM buffer size. "
	::= { wfTokenRingEntry 56 }

wfTokenRingCfgTxQueueLength OBJECT-TYPE
	SYNTAX	INTEGER {
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configured Transmit Queue Length. Values other than zero over-ride the
		   router selected values.  A value of zero has a special meaning.  Zero
		   causes router based default values to be used.  Values larger than the
		   compiled ring size are truncated to the compiled ring size. 
		"
	::= { wfTokenRingEntry 57 }

wfTokenRingCfgRxQueueLength OBJECT-TYPE
	SYNTAX	INTEGER {
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configured Receive Queue Length. Values other than zero over-ride the
		   router selected values.  A value of zero has a special meaning.  Zero
		   causes router based default values to be used.  Values larger than the
		   compiled ring size are truncated to the compiled ring size. 
		"
	::= { wfTokenRingEntry 58 }

wfTokenRingTxQueueLength OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Current Transmit Queue Length. "
	::= { wfTokenRingEntry 59 }

wfTokenRingRxQueueLength OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Current Receive Queue Length. "
	::= { wfTokenRingEntry 60 }

wfTokenRingMacRxOctets OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Mac frame octets received without error. "
	::= { wfTokenRingEntry 61 }

wfTokenRingMacRxFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Mac frames received without error. "
	::= { wfTokenRingEntry 62 }

wfTokenRingCfgFunctionalAddress OBJECT-TYPE
	SYNTAX	INTEGER {
		mask(2147467520)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The configurable bit mask of all Token Ring Functional addresses for which
		   this interface will accept frames. This value is loaded into the func addr
		   defined in the attribute 'wfTokenRingFunctionalAddress.'
		   note: 2147467520 = 0x7fffc100 "
	DEFVAL	{ mask }
	::= { wfTokenRingEntry 63 }

wfTokenRingFunctionalAddress OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The bit mask of all Token Ring Functional addresses for which this
		   interface will accept frames. "
	::= { wfTokenRingEntry 64 }

wfTokenRingGroupAddress OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The single Token Ring Group address for which this interface will
		   accept frames. "
	::= { wfTokenRingEntry 65 }

wfTokenRingLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Logical line number associated with this driver entity. "
	::= { wfTokenRingEntry 66 }

wfTokenRingMacCode OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Type and version of microcode running on the TMS380. "
	::= { wfTokenRingEntry 67 }

wfVinesBase	OBJECT IDENTIFIER ::= { wfVinesGroup 1 }

wfVinesBaseDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  Create/Delete parameter.  This value determines whether or not VINES
		  is configured on this slot.
		     "
	DEFVAL	{ created }
	::= { wfVinesBase 1 }

wfVinesBaseDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  This parameter determines whether or not VINES is to startup.
		     "
	DEFVAL	{ enabled }
	::= { wfVinesBase 2 }

wfVinesBaseState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  This parameter reflects the current state of VINES.
		     "
	DEFVAL	{ notpresent }
	::= { wfVinesBase 3 }

wfVinesBaseUserNetid OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(2097151)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  The network ID as defined by the user.  A null value indicates
		  that the user is not configuring a Network ID and that the
		  the router should assign it.
		     "
	::= { wfVinesBase 4 }

wfVinesBaseRouterNetid OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The network ID as defined by the router.  If the user configures
		  a Network ID in the above attribute, we will take that value
		  and add in the Wellfleet code for VINES and save it here.
		     "
	::= { wfVinesBase 5 }

wfVinesBaseBcastClass OBJECT-TYPE
	SYNTAX	INTEGER {
		bcast(1),
		chrg(2),
		cost(3),
		lans(4),
		srvr(5),
		nochrg(6),
		locost(7),
		alllans(8)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  The broadcast modifier.  This value defines the
		  class of broadcast packets that are originated
		  by this node.
		     "
	DEFVAL	{ bcast }
	::= { wfVinesBase 6 }

wfVinesBaseNetworkSize OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Allows the network administrator to pre-configure the size of the
		  network.  The default is 0.
		     "
	::= { wfVinesBase 7 }

wfVinesBaseHostSize OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Allows the network administrator to pre-configure the expected number
		  of neighbor.  The dafault is 0.
		     "
	::= { wfVinesBase 8 }

wfVinesIp	OBJECT IDENTIFIER ::= { wfVinesGroup 2 }

wfVinesIpTotIn OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The total number of VINES IP packets received.
		     "
	::= { wfVinesIp 1 }

wfVinesIpTotOut OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The total number of VINES IP packets sent.
		     "
	::= { wfVinesIp 2 }

wfVinesIpBad OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The total number of badly formed packets that were received. 
		  This field is incremented when a packet is received with an 
		  improper checksum.  
		     "
	::= { wfVinesIp 3 }

wfVinesIpRouted OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The total number of packets received that were routed to another
		  node.  This statistic includes the number of IP packets
		  encapsulated within routed VINES IP headers.  Each routed packet
		  counts as both an incoming and outgoing packet.
		     "
	::= { wfVinesIp 4 }

wfVinesIpRoutedHWM OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The largest number of packets routed in one second since the server
		  was last booted.
		     "
	::= { wfVinesIp 5 }

wfVinesIpBcast OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The number of VINES IP broadcast packets sent, both locally
		  generated and routed from other nodes.  
		     "
	::= { wfVinesIp 6 }

wfVinesIpBcastHWM OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The largest number of packets broadcast in one second since the server
		  was last booted.
		     "
	::= { wfVinesIp 7 }

wfVinesIpReass OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The number of times that packets were reassembled.  Reassemblies
		  result from the transmission of packets that must be broken into
		  smaller pieces, then reassembled due to differences in transmission
		  media.
		  "
	::= { wfVinesIp 8 }

wfVinesIpFrags OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The number of packet fragmentations performed.
		     "
	::= { wfVinesIp 9 }

wfVinesIpToDodIP OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The number of packets that VINES IP passed to IP for encapsulation in
		  IP headers.  These packets were initially handled by VINES IP, but
		  were passed to IP for routing.  If the TCP/IP Server-to-Server
		  option is not installed, this value will be zero.
		     "
	::= { wfVinesIp 10 }

wfVinesIpFromDodIP OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The number of packets that VINES IP received from IP to be 
		  decapsulated into VINES packets.  IP initially handled these packets,
		  but had to pass them on to VINES IP for routing.  If the server is
		  not running a TCP/IP option, this value will be zero.
		     "
	::= { wfVinesIp 11 }

wfVinesRtpNbr	OBJECT IDENTIFIER ::= { wfVinesGroup 3 }

wfVinesRtpNbrNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of entries in the Table of Neighbors. "
	::= { wfVinesRtpNbr 1 }

wfVinesRtpNbrTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfVinesRtpNbrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This is the Table of Neighbors. "
	::= { wfVinesGroup 4 }

wfVinesRtpNbrEntry OBJECT-TYPE
	SYNTAX	WfVinesRtpNbrEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Table of Neighbors. "
	INDEX	{ wfVinesRtpNbrNetId }
	::= { wfVinesRtpNbrTable 1 }

WfVinesRtpNbrEntry ::= SEQUENCE {
	wfVinesRtpNbrNetId
		Counter,
	wfVinesRtpNbrSubNetId
		INTEGER,
	wfVinesRtpNbrType
		INTEGER,
	wfVinesRtpNbrIfType
		INTEGER,
	wfVinesRtpNbrRemAdr
		OCTET STRING,
	wfVinesRtpNbrLocAdr
		OCTET STRING,
	wfVinesRtpNbrLocSlot
		INTEGER,
	wfVinesRtpNbrLocLine
		INTEGER,
	wfVinesRtpNbrSvrName
		OCTET STRING,
	wfVinesRtpNbrCost
		INTEGER
}

wfVinesRtpNbrNetId OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The network ID of this neighbor. "
	::= { wfVinesRtpNbrEntry 1 }

wfVinesRtpNbrSubNetId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The subnetwork ID of this neighbor. "
	::= { wfVinesRtpNbrEntry 2 }

wfVinesRtpNbrType OBJECT-TYPE
	SYNTAX	INTEGER {
		workst(1),
		server(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The type of node: client or server. "
	::= { wfVinesRtpNbrEntry 3 }

wfVinesRtpNbrIfType OBJECT-TYPE
	SYNTAX	INTEGER {
		enet(1),
		tr4k(2),
		tr16k(3),
		hdlc1200(4),
		hdlc4800(5),
		hdlc9600(6),
		hdlc56000(7),
		async1200(8),
		async4800(9),
		async9600(10),
		async56000(11),
		x251200(12),
		x254800(13),
		x259600(14),
		x2556000(15),
		t145k(16),
		t1128k(17),
		t1192k(18),
		t1256k(19),
		t1320k(20),
		t1384k(21),
		t1448k(22),
		t1512k(23),
		t1576k(24),
		t1640k(25),
		t1704k(26),
		t1896k(27),
		t11088k(28),
		t11344k(29),
		tunnel(30),
		fddi(31)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This describes the type of interface. "
	::= { wfVinesRtpNbrEntry 4 }

wfVinesRtpNbrRemAdr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Remote MAC address. "
	::= { wfVinesRtpNbrEntry 5 }

wfVinesRtpNbrLocAdr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Local MAC address. "
	::= { wfVinesRtpNbrEntry 6 }

wfVinesRtpNbrLocSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Slot connected to this neighbor. "
	::= { wfVinesRtpNbrEntry 7 }

wfVinesRtpNbrLocLine OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Line connected to this neighbor. "
	::= { wfVinesRtpNbrEntry 8 }

wfVinesRtpNbrSvrName OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Name of the server (N/A). "
	::= { wfVinesRtpNbrEntry 9 }

wfVinesRtpNbrCost OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Cost for this neighbor. "
	::= { wfVinesRtpNbrEntry 10 }

wfVinesRtpRt	OBJECT IDENTIFIER ::= { wfVinesGroup 5 }

wfVinesRtpRtNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of entries in the Table of Networks. "
	::= { wfVinesRtpRt 1 }

wfVinesRtpRtTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfVinesRtpRtEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This is the Table of Networks. "
	::= { wfVinesGroup 6 }

wfVinesRtpRtEntry OBJECT-TYPE
	SYNTAX	WfVinesRtpRtEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Table of Networks. "
	INDEX	{ wfVinesRtpRtNetid }
	::= { wfVinesRtpRtTable 1 }

WfVinesRtpRtEntry ::= SEQUENCE {
	wfVinesRtpRtNetid
		Counter,
	wfVinesRtpRtMetric
		INTEGER,
	wfVinesRtpRtIdle
		INTEGER,
	wfVinesRtpRtGateNetid
		Counter,
	wfVinesRtpRtSvrName
		OCTET STRING,
	wfVinesRtpRtGateSvrName
		OCTET STRING,
	wfVinesRtpRtLocSlot
		INTEGER,
	wfVinesRtpRtLocLine
		INTEGER,
	wfVinesRtpRtIfType
		INTEGER,
	wfVinesRtpRtGateHwAddr
		OCTET STRING
}

wfVinesRtpRtNetid OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The network ID number. "
	::= { wfVinesRtpRtEntry 1 }

wfVinesRtpRtMetric OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The routing metric to get to this network. "
	::= { wfVinesRtpRtEntry 2 }

wfVinesRtpRtIdle OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The idle time for this network. "
	::= { wfVinesRtpRtEntry 3 }

wfVinesRtpRtGateNetid OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The network ID of the gateway to this network. "
	::= { wfVinesRtpRtEntry 4 }

wfVinesRtpRtSvrName OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The servers name (N/A). "
	::= { wfVinesRtpRtEntry 5 }

wfVinesRtpRtGateSvrName OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The name of the gateway server. "
	::= { wfVinesRtpRtEntry 6 }

wfVinesRtpRtLocSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Slot connected to this Network. "
	::= { wfVinesRtpRtEntry 7 }

wfVinesRtpRtLocLine OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Line connected to this Network. "
	::= { wfVinesRtpRtEntry 8 }

wfVinesRtpRtIfType OBJECT-TYPE
	SYNTAX	INTEGER {
		enet(1),
		tr4k(2),
		tr16k(3),
		hdlc1200(4),
		hdlc4800(5),
		hdlc9600(6),
		hdlc56000(7),
		async1200(8),
		async4800(9),
		async9600(10),
		async56000(11),
		x251200(12),
		x254800(13),
		x259600(14),
		x2556000(15),
		t145k(16),
		t1128k(17),
		t1192k(18),
		t1256k(19),
		t1320k(20),
		t1384k(21),
		t1448k(22),
		t1512k(23),
		t1576k(24),
		t1640k(25),
		t1704k(26),
		t1896k(27),
		t11088k(28),
		t11344k(29),
		tunnel(30),
		fddi(31)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This describes the type of interface. "
	::= { wfVinesRtpRtEntry 9 }

wfVinesRtpRtGateHwAddr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Remote MAC address. "
	::= { wfVinesRtpRtEntry 10 }

wfVinesIf	OBJECT IDENTIFIER ::= { wfVinesGroup 7 }

wfVinesIfNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of entries in the Interfaces Table. "
	::= { wfVinesIf 1 }

wfVinesIfTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfVinesIfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This is the Table of Interfaces. "
	::= { wfVinesGroup 8 }

wfVinesIfEntry OBJECT-TYPE
	SYNTAX	WfVinesIfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry to the Interface Table. "
	INDEX	{ wfVinesIfCct }
	::= { wfVinesIfTable 1 }

WfVinesIfEntry ::= SEQUENCE {
	wfVinesIfDelete
		INTEGER,
	wfVinesIfDisable
		INTEGER,
	wfVinesIfState
		INTEGER,
	wfVinesIfSlot
		INTEGER,
	wfVinesIfLine
		INTEGER,
	wfVinesIfCct
		INTEGER,
	wfVinesIfSession
		INTEGER,
	wfVinesIfType
		INTEGER,
	wfVinesIfDescr
		OCTET STRING,
	wfVinesIfAdr
		OCTET STRING,
	wfVinesIfDodIpDisable
		INTEGER,
	wfVinesIfArpDisable
		INTEGER,
	wfVinesIfTrEndStation
		INTEGER,
	wfVinesIfInPkts
		Counter,
	wfVinesIfInErrs
		Counter,
	wfVinesIfOutPkts
		Counter,
	wfVinesIfOutErrs
		Counter,
	wfVinesIfInMsgs
		Counter,
	wfVinesIfMux
		INTEGER,
	wfVinesIfFwdDrops
		Counter,
	wfVinesIfZeroHopDrops
		Counter,
	wfVinesIfIcpInErrorNotifs
		Counter,
	wfVinesIfIcpInMetricNotifs
		Counter,
	wfVinesIfIcpInErrors
		Counter,
	wfVinesIfIcpOutErrorNotifs
		Counter,
	wfVinesIfIcpOutMetricNotifs
		Counter,
	wfVinesIfArpInQueries
		Counter,
	wfVinesIfArpInAssgReqs
		Counter,
	wfVinesIfArpInErrors
		Counter,
	wfVinesIfArpOutServRsps
		Counter,
	wfVinesIfArpOutAssgRsps
		Counter,
	wfVinesIfInRedirects
		Counter,
	wfVinesIfOutRedirects
		Counter,
	wfVinesIfEchoInPkts
		Counter,
	wfVinesIfEchoOutPkts
		Counter,
	wfVinesIfReassFails
		Counter,
	wfVinesIfRemClientPrivDisable
		INTEGER,
	wfVinesIfSplitHorizonDisable
		INTEGER,
	wfVinesIfCost
		INTEGER,
	wfVinesIfSyncPortNumber
		INTEGER,
	wfVinesIfInLackRescError
		Counter,
	wfVinesIfOutLackRescError
		Counter,
	wfVinesIfRtpRecv
		Counter,
	wfVinesIfRtpSent
		Counter,
	wfVinesIfSMDSGroupAddress
		OCTET STRING,
	wfVinesIfFRBcastDlci
		OCTET STRING,
	wfVinesIfCfgAdr
		OCTET STRING,
	wfVinesIfNumRoutes
		Counter,
	wfVinesIfCfgCost
		INTEGER,
	wfVinesIfCostUsed
		INTEGER
}

wfVinesIfDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  Create/Delete parameter.  Users perform an SNMP set command to
		  create/delete a VINES interface. 
		     "
	DEFVAL	{ created }
	::= { wfVinesIfEntry 1 }

wfVinesIfDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  Enable/Disable parameter.  Users perform an SNMP set command to
		  enable/disable a VINES interface. 
		     "
	DEFVAL	{ enabled }
	::= { wfVinesIfEntry 2 }

wfVinesIfState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  This parameter reflects the current state of the VINES interface.
		     "
	DEFVAL	{ notpresent }
	::= { wfVinesIfEntry 3 }

wfVinesIfSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The slot on which this interface is configured. "
	::= { wfVinesIfEntry 4 }

wfVinesIfLine OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The line on which this interface is configured. "
	::= { wfVinesIfEntry 5 }

wfVinesIfCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The circuit number for this interface. "
	::= { wfVinesIfEntry 6 }

wfVinesIfSession OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The session number for this interface. "
	::= { wfVinesIfEntry 7 }

wfVinesIfType OBJECT-TYPE
	SYNTAX	INTEGER {
		enet(1),
		tr4k(2),
		tr16k(3),
		hdlc1200(4),
		hdlc4800(5),
		hdlc9600(6),
		hdlc56000(7),
		async1200(8),
		async4800(9),
		async9600(10),
		async56000(11),
		x251200(12),
		x254800(13),
		x259600(14),
		x2556000(15),
		t145k(16),
		t1128k(17),
		t1192k(18),
		t1256k(19),
		t1320k(20),
		t1384k(21),
		t1448k(22),
		t1512k(23),
		t1576k(24),
		t1640k(25),
		t1704k(26),
		t1896k(27),
		t11088k(28),
		t11344k(29),
		tunnel(30),
		fddi(31)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The type of interface this is. "
	DEFVAL	{ enet }
	::= { wfVinesIfEntry 8 }

wfVinesIfDescr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Description of this interface. "
	::= { wfVinesIfEntry 9 }

wfVinesIfAdr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The MAC address of this interface. "
	::= { wfVinesIfEntry 10 }

wfVinesIfDodIpDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  This parameter indicates if this interface is enabled to  encapsulate 
		  VINES packets over DoD IP.
		     "
	DEFVAL	{ disabled }
	::= { wfVinesIfEntry 11 }

wfVinesIfArpDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  This parameter indicates if this interface is enabled to support 
		  VINES ARP. 
		     "
	DEFVAL	{ disabled }
	::= { wfVinesIfEntry 12 }

wfVinesIfTrEndStation OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  This parameter indicates if this interface is enabled for source
		  routing end station support. 
		     "
	DEFVAL	{ disabled }
	::= { wfVinesIfEntry 13 }

wfVinesIfInPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of packets received on this interface. "
	::= { wfVinesIfEntry 14 }

wfVinesIfInErrs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of packets received with errors. "
	::= { wfVinesIfEntry 15 }

wfVinesIfOutPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of packets transmitted on this interface."
	::= { wfVinesIfEntry 16 }

wfVinesIfOutErrs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of errors on packets transmitted. "
	::= { wfVinesIfEntry 17 }

wfVinesIfInMsgs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of messages received on this interface. "
	::= { wfVinesIfEntry 18 }

wfVinesIfMux OBJECT-TYPE
	SYNTAX	INTEGER {
		enet(1),
		snap(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  Muxing scheme for this interface.  VINES currently only supports
		  Ethernet encapsulation, but they plan to switch to SNAP.
		     "
	DEFVAL	{ enet }
	::= { wfVinesIfEntry 19 }

wfVinesIfFwdDrops OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The number of pakets that were dropped because of no forwarding 
		  information for the destination.
		     "
	::= { wfVinesIfEntry 20 }

wfVinesIfZeroHopDrops OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of pakets that were dropped because of a zero hop count. "
	::= { wfVinesIfEntry 21 }

wfVinesIfIcpInErrorNotifs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ICP error notification packets received. "
	::= { wfVinesIfEntry 22 }

wfVinesIfIcpInMetricNotifs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ICP metric notification packets received. "
	::= { wfVinesIfEntry 23 }

wfVinesIfIcpInErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ICP packets received with errors. "
	::= { wfVinesIfEntry 24 }

wfVinesIfIcpOutErrorNotifs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ICP error notification packets transmitted. "
	::= { wfVinesIfEntry 25 }

wfVinesIfIcpOutMetricNotifs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ICP metric notification packets transmitted. "
	::= { wfVinesIfEntry 26 }

wfVinesIfArpInQueries OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ARP queries received. "
	::= { wfVinesIfEntry 27 }

wfVinesIfArpInAssgReqs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ARP assignment requests received. "
	::= { wfVinesIfEntry 28 }

wfVinesIfArpInErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ARP packets received with errors. "
	::= { wfVinesIfEntry 29 }

wfVinesIfArpOutServRsps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ARP service responses sent. "
	::= { wfVinesIfEntry 30 }

wfVinesIfArpOutAssgRsps OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of ARP assignment responses sent. "
	::= { wfVinesIfEntry 31 }

wfVinesIfInRedirects OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of Redirect packets received. "
	::= { wfVinesIfEntry 32 }

wfVinesIfOutRedirects OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of Redirect packets sent. "
	::= { wfVinesIfEntry 33 }

wfVinesIfEchoInPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of Echo packets received. "
	::= { wfVinesIfEntry 34 }

wfVinesIfEchoOutPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of Echo packets sent. "
	::= { wfVinesIfEntry 35 }

wfVinesIfReassFails OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of packet reassemblies that failed. "
	::= { wfVinesIfEntry 36 }

wfVinesIfRemClientPrivDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  This parameter indicates that this interface will allow remote
		  clients privileges on this segment.  This means that a client
		  is not restricted to being within one hop of a VINES server. 
		     "
	DEFVAL	{ disabled }
	::= { wfVinesIfEntry 37 }

wfVinesIfSplitHorizonDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Split Horizon
		     "
	DEFVAL	{ disabled }
	::= { wfVinesIfEntry 38 }

wfVinesIfCost OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" The Interface Cost
		  The default is null - meaning use the Banyan specified cost.
		  Otherwise, the configured value wfVinesIfCfgCost will be used.
		     "
	::= { wfVinesIfEntry 39 }

wfVinesIfSyncPortNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		" The Sync port number required to determine number of RTP
		  packets sent for each network.  It can only take a value
		  between 1 - 4.  It correspond to the Sync port number on this
		  slot only.
		  If it is 4.2 for example, then the port number should be 2.
		     "
	::= { wfVinesIfEntry 40 }

wfVinesIfInLackRescError OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Failed to duplicate packet due to lack of resource.
		     "
	::= { wfVinesIfEntry 41 }

wfVinesIfOutLackRescError OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Failed to duplicate packet due to lack of resource.
		     "
	::= { wfVinesIfEntry 42 }

wfVinesIfRtpRecv OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of RTP packets received. "
	::= { wfVinesIfEntry 43 }

wfVinesIfRtpSent OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of RTP packets sent. "
	::= { wfVinesIfEntry 44 }

wfVinesIfSMDSGroupAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configurable SMDS broadcast address "
	::= { wfVinesIfEntry 45 }

wfVinesIfFRBcastDlci OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configurable FRAME RELAY broadcast address "
	::= { wfVinesIfEntry 46 }

wfVinesIfCfgAdr OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The configured MAC address of this interface. "
	::= { wfVinesIfEntry 47 }

wfVinesIfNumRoutes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of routes cached in the forwarding table "
	::= { wfVinesIfEntry 48 }

wfVinesIfCfgCost OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The configured interface cost "
	::= { wfVinesIfEntry 49 }

wfVinesIfCostUsed OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Interface Cost used by the router "
	::= { wfVinesIfEntry 50 }

wfVinesIfX25VC	OBJECT IDENTIFIER ::= { wfVinesGroup 9 }

wfVinesIfX25VCNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the number of entries in the X.25 Virtual Circuit Table. "
	::= { wfVinesIfX25VC 1 }

wfVinesIfX25VCTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfVinesIfX25VCEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This is the Table of X.25 Virtual Circuits. "
	::= { wfVinesGroup 10 }

wfVinesIfX25VCEntry OBJECT-TYPE
	SYNTAX	WfVinesIfX25VCEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Table of X.25 Virtual Circuits. "
	INDEX	{ wfVinesIfX25VCCct }
	::= { wfVinesIfX25VCTable 1 }

WfVinesIfX25VCEntry ::= SEQUENCE {
	wfVinesIfX25VCSlot
		INTEGER,
	wfVinesIfX25VCLine
		INTEGER,
	wfVinesIfX25VCCct
		INTEGER,
	wfVinesIfX25VCSession
		INTEGER,
	wfVinesIfX25VCTotIn
		Counter,
	wfVinesIfX25VCTotOut
		Counter,
	wfVinesIfX25VCInErrs
		Counter,
	wfVinesIfX25VCOutErrs
		Counter,
	wfVinesIfX25VCPktsOut
		Counter,
	wfVinesIfX25VCPktsAwaitAck
		INTEGER,
	wfVinesIfX25VCBytesOut
		Counter,
	wfVinesIfX25VCBytesAwaitAck
		INTEGER,
	wfVinesIfX25VCPktsIn
		Counter,
	wfVinesIfX25VCBytesIn
		Counter,
	wfVinesIfX25VCResetsIn
		Counter,
	wfVinesIfX25VCResetsOut
		Counter
}

wfVinesIfX25VCSlot OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The number of the slot in which the card is installed.
		     "
	::= { wfVinesIfX25VCEntry 1 }

wfVinesIfX25VCLine OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  For a serial line, this is the number of the line on the card.
		     "
	::= { wfVinesIfX25VCEntry 2 }

wfVinesIfX25VCCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  Local circuit number for this Virtual Circuit.
		     "
	::= { wfVinesIfX25VCEntry 3 }

wfVinesIfX25VCSession OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  Local session number for this Virtual Circuit.
		     "
	::= { wfVinesIfX25VCEntry 4 }

wfVinesIfX25VCTotIn OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The total number of VINES IP packets received on this VC.
		  Depending on the size of the X.25 packets received, more than one
		  X.25 packet can make up a VINES IP packet.
		     "
	::= { wfVinesIfX25VCEntry 5 }

wfVinesIfX25VCTotOut OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The total number of VINES IP packets sent on this VC.  Depending
		  on the size of the X.25 packets sent, more than one X.25 packet can
		  make up a VINES IP packet.
		     "
	::= { wfVinesIfX25VCEntry 6 }

wfVinesIfX25VCInErrs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The total number of input errors.
		     "
	::= { wfVinesIfX25VCEntry 7 }

wfVinesIfX25VCOutErrs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The total number of output errors.
		     "
	::= { wfVinesIfX25VCEntry 8 }

wfVinesIfX25VCPktsOut OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The total number of X.25 packets transmitted on this VC.
		     "
	::= { wfVinesIfX25VCEntry 9 }

wfVinesIfX25VCPktsAwaitAck OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  Total number of X.25 packets transmitted on this VC waiting for ACK.
		     "
	::= { wfVinesIfX25VCEntry 10 }

wfVinesIfX25VCBytesOut OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  Total Bytes transmitted on this VC.
		     "
	::= { wfVinesIfX25VCEntry 11 }

wfVinesIfX25VCBytesAwaitAck OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  Total bytes transmitted on this VC that are waiting for ACK.
		     "
	::= { wfVinesIfX25VCEntry 12 }

wfVinesIfX25VCPktsIn OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  Total X.25 packets received on this VC.
		     "
	::= { wfVinesIfX25VCEntry 13 }

wfVinesIfX25VCBytesIn OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  Total Bytes received on this VC.
		     "
	::= { wfVinesIfX25VCEntry 14 }

wfVinesIfX25VCResetsIn OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  Number of X.25 reset packets received on this VC.
		     "
	::= { wfVinesIfX25VCEntry 15 }

wfVinesIfX25VCResetsOut OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  Number of X.25 reset packets transmitted on this VC.
		     "
	::= { wfVinesIfX25VCEntry 16 }

wfVinesTrafficFilterTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfVinesTrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" VINES Traffic Filters "
	::= { wfVinesGroup 11 }

wfVinesTrafficFilterEntry OBJECT-TYPE
	SYNTAX	WfVinesTrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in WfVinesTrafficFilterTable. "
	INDEX	{ wfVinesTrafficFilterCircuit,
		wfVinesTrafficFilterRuleNumber,
		wfVinesTrafficFilterFragment }
	::= { wfVinesTrafficFilterTable 1 }

WfVinesTrafficFilterEntry ::= SEQUENCE {
	wfVinesTrafficFilterCreate
		INTEGER,
	wfVinesTrafficFilterEnable
		INTEGER,
	wfVinesTrafficFilterStatus
		INTEGER,
	wfVinesTrafficFilterCounter
		Counter,
	wfVinesTrafficFilterDefinition
		OCTET STRING,
	wfVinesTrafficFilterReserved
		INTEGER,
	wfVinesTrafficFilterCircuit
		INTEGER,
	wfVinesTrafficFilterRuleNumber
		INTEGER,
	wfVinesTrafficFilterFragment
		INTEGER
}

wfVinesTrafficFilterCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the existence of the traffic filter rule:
		  created - traffic filter exists
		  delete - traffic filter does not exist and can be deleted. "
	DEFVAL	{ created }
	::= { wfVinesTrafficFilterEntry 1 }

wfVinesTrafficFilterEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines whether or not the traffic filter rule should be used:
		  enabled - activate the rule.
		  disabled - inactivate the rule. "
	DEFVAL	{ enabled }
	::= { wfVinesTrafficFilterEntry 2 }

wfVinesTrafficFilterStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		error(2),
		inactive(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Defines the current status of the traffic filter:
		  inactive - the rule is not in use.
		  active - the rule is being used.
		  error - the application detected an error in the rule. "
	DEFVAL	{ inactive }
	::= { wfVinesTrafficFilterEntry 3 }

wfVinesTrafficFilterCounter OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received packets that have
		           matched this rule. "
	::= { wfVinesTrafficFilterEntry 4 }

wfVinesTrafficFilterDefinition OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The filter rule definition. "
	::= { wfVinesTrafficFilterEntry 5 }

wfVinesTrafficFilterReserved OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Reserved field. "
	::= { wfVinesTrafficFilterEntry 6 }

wfVinesTrafficFilterCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The ID of the Circuit to which the
		    filter is applied. "
	::= { wfVinesTrafficFilterEntry 7 }

wfVinesTrafficFilterRuleNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" ID for the rule. "
	::= { wfVinesTrafficFilterEntry 8 }

wfVinesTrafficFilterFragment OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Fragment number - for large rules. "
	::= { wfVinesTrafficFilterEntry 9 }

wfVinesNameTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfVinesNameEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This is the Name-to-Address Binding Table. "
	::= { wfVinesGroup 12 }

wfVinesNameEntry OBJECT-TYPE
	SYNTAX	WfVinesNameEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Table of Names. "
	INDEX	{ wfVinesNameNetid }
	::= { wfVinesNameTable 1 }

WfVinesNameEntry ::= SEQUENCE {
	wfVinesNameDelete
		INTEGER,
	wfVinesNameDisable
		INTEGER,
	wfVinesNameNetid
		Counter,
	wfVinesNameHost
		DisplayString,
	wfVinesNameSubNetid
		INTEGER
}

wfVinesNameDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  Create/Delete parameter.  Users perform an SNMP set command to
		  create/delete this name. 
		     "
	DEFVAL	{ created }
	::= { wfVinesNameEntry 1 }

wfVinesNameDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  Enable/Disable parameter.  Users perform an SNMP set command to
		  enable/disable a name. 
		     "
	DEFVAL	{ enabled }
	::= { wfVinesNameEntry 2 }

wfVinesNameNetid OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This is the network number for the host. "
	::= { wfVinesNameEntry 3 }

wfVinesNameHost OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the name of the host. "
	::= { wfVinesNameEntry 4 }

wfVinesNameSubNetid OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This is the subnetwork number for the host. "
	::= { wfVinesNameEntry 5 }

wfVinesArp	OBJECT IDENTIFIER ::= { wfVinesGroup 13 }

wfVinesArpDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Create/Delete parameter. Default is created.
		     Users perform an SNMP SET operation on this
		     object in order to create/delete ARP."
	DEFVAL	{ created }
	::= { wfVinesArp 1 }

wfVinesArpDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable Parameter indicates whether
		       this ARP record is enabled or disabled. "
	DEFVAL	{ enabled }
	::= { wfVinesArp 2 }

wfVinesArpState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" State of ARP. "
	DEFVAL	{ down }
	::= { wfVinesArp 3 }

wfVinesArpSubnetid OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  The next subnetwork ID to be assigned. 
		     "
	::= { wfVinesArp 4 }

wfVinesArpSubnetBlock OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		default(2),
		maximum(32)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		  The size of the block of subnet ids a slot can grab. 
		     "
	DEFVAL	{ default }
	::= { wfVinesArp 5 }

wfVinesArpAssignDeniedPkts OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		  Number of ARP Assignment packets received for which we
		  didn't have a free subnet number.
		     "
	::= { wfVinesArp 6 }

wfX25		OBJECT IDENTIFIER ::= { wfX25Group 1 }

wfX25Delete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter. Default is created."
	DEFVAL	{ created }
	::= { wfX25 1 }

wfX25Disable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter. Default is enabled."
	DEFVAL	{ enabled }
	::= { wfX25 2 }

wfX25State OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The current state of the entire X.25. "
	DEFVAL	{ notpresent }
	::= { wfX25 3 }

wfX25ServiceTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfX25ServiceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This table describes the services of a circuit on an X.25 line. "
	::= { wfX25Group 2 }

wfX25ServiceEntry OBJECT-TYPE
	SYNTAX	WfX25ServiceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the X25 Service table. "
	INDEX	{ wfX25ServiceSlot,
		wfX25ServiceConnector,
		wfX25ServiceLineNumber,
		wfX25ServiceLLIndex,
		wfX25ServiceCct,
		wfX25ServiceIndex }
	::= { wfX25ServiceTable 1 }

WfX25ServiceEntry ::= SEQUENCE {
	wfX25ServiceDelete
		INTEGER,
	wfX25ServiceDisable
		INTEGER,
	wfX25ServiceSlot
		INTEGER,
	wfX25ServiceConnector
		INTEGER,
	wfX25ServiceLineNumber
		INTEGER,
	wfX25ServiceLLIndex
		INTEGER,
	wfX25ServiceCct
		INTEGER,
	wfX25ServiceIndex
		INTEGER,
	wfX25ServiceType
		INTEGER,
	wfX25ServiceConnRef
		INTEGER,
	wfX25ServiceConnId
		INTEGER,
	wfX25ServiceRemoteX121Addr
		DisplayString,
	wfX25ServiceRemoteIpAddr
		IpAddress,
	wfX25ServiceBCast
		INTEGER,
	wfX25ServiceMaxConn
		INTEGER,
	wfX25ServicePrecedence
		INTEGER,
	wfX25ServiceMaxIdle
		INTEGER,
	wfX25ServiceCallRetry
		INTEGER,
	wfX25ServiceFlowFacility
		INTEGER,
	wfX25ServiceWinSize
		INTEGER,
	wfX25ServicePktSize
		INTEGER,
	wfX25ServiceFastSelRequest
		INTEGER,
	wfX25ServiceFastSelAccept
		INTEGER,
	wfX25ServiceRevChRequest
		INTEGER,
	wfX25ServiceRevChAccept
		INTEGER,
	wfX25ServiceCugFormat
		INTEGER,
	wfX25ServiceCugType
		INTEGER,
	wfX25ServiceCugNum
		INTEGER,
	wfX25ServiceUserFacility
		OCTET STRING,
	wfX25ServiceValid
		INTEGER,
	wfX25ServiceBFE
		INTEGER
}

wfX25ServiceDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Create/Delete parameter, default = created. "
	DEFVAL	{ created }
	::= { wfX25ServiceEntry 1 }

wfX25ServiceDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter, default = enabled. "
	DEFVAL	{ enabled }
	::= { wfX25ServiceEntry 2 }

wfX25ServiceSlot OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(14)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Slot number and part of Instance Id. "
	::= { wfX25ServiceEntry 3 }

wfX25ServiceConnector OBJECT-TYPE
	SYNTAX	INTEGER {
		one(1),
		two(2),
		three(3),
		four(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Connector number and instance ID member. "
	::= { wfX25ServiceEntry 4 }

wfX25ServiceLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier member. This is the line number assigned
		   to the driver X.25 is running over.  No used in 7.60. "
	::= { wfX25ServiceEntry 5 }

wfX25ServiceLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier member. This is the lower layer index
		   presented to X25 by the layer immediately below it on the
		   protocol stack. If the lower layer is a driver, the index
		   will be 0. Not used in 7.60. "
	::= { wfX25ServiceEntry 6 }

wfX25ServiceCct OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(1024)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Circuit number and instance ID member. "
	::= { wfX25ServiceEntry 7 }

wfX25ServiceIndex OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(4000)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" X.25 service entry record ID for this instance. "
	::= { wfX25ServiceEntry 8 }

wfX25ServiceType OBJECT-TYPE
	SYNTAX	INTEGER {
		pdntype(1),
		ddntype(2),
		ptoptype(4)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Type of Service. "
	::= { wfX25ServiceEntry 9 }

wfX25ServiceConnRef OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Use of Connection Reference Numbers in Call Request
		   For PDN only, if ON then use wfX25ServiceConnId as
		   starting reference number for PDN. "
	DEFVAL	{ off }
	::= { wfX25ServiceEntry 10 }

wfX25ServiceConnId OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(255)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Connection Id to be used in a PTOP Call request. For PDN this will
		   be the starting number to be used as Connection Id in PDN. "
	DEFVAL	{ minimum }
	::= { wfX25ServiceEntry 11 }

wfX25ServiceRemoteX121Addr OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Remote X.121 address for this table entry instance. "
	::= { wfX25ServiceEntry 12 }

wfX25ServiceRemoteIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Remote IP address for PDN and DDN only. "
	::= { wfX25ServiceEntry 13 }

wfX25ServiceBCast OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Broadcast recipient status for this table entry instance. "
	DEFVAL	{ off }
	::= { wfX25ServiceEntry 14 }

wfX25ServiceMaxConn OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(4),
		default(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Maximum connections per destination for this table entry instance. "
	DEFVAL	{ default }
	::= { wfX25ServiceEntry 15 }

wfX25ServicePrecedence OBJECT-TYPE
	SYNTAX	INTEGER {
		negot(1),
		default(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Precedence value for this table entry instance. DDN only. "
	DEFVAL	{ default }
	::= { wfX25ServiceEntry 16 }

wfX25ServiceMaxIdle OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(999),
		default(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Maximum Idle Time in Minutes for this table entry instance. If 0
		   is entered the connection stays on forever. "
	DEFVAL	{ default }
	::= { wfX25ServiceEntry 17 }

wfX25ServiceCallRetry OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(10),
		maximum(999),
		default(60)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Interval in seconds between Call Request to same the destination.
		   Must be at least 2 times T11/T21 Timer for Packet Level. "
	DEFVAL	{ default }
	::= { wfX25ServiceEntry 18 }

wfX25ServiceFlowFacility OBJECT-TYPE
	SYNTAX	INTEGER {
		negot(1),
		default(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Flow Control negotiation facility parameter for this instance. "
	DEFVAL	{ default }
	::= { wfX25ServiceEntry 19 }

wfX25ServiceWinSize OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(127),
		default(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Packet window size parameter for this table entry instance. "
	DEFVAL	{ default }
	::= { wfX25ServiceEntry 20 }

wfX25ServicePktSize OBJECT-TYPE
	SYNTAX	INTEGER {
		size16(4),
		size32(5),
		size64(6),
		size128(7),
		size256(8),
		size512(9),
		size1024(10),
		size2048(11),
		size4096(12)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Packet size parameter for this table entry instance. "
	DEFVAL	{ size128 }
	::= { wfX25ServiceEntry 21 }

wfX25ServiceFastSelRequest OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Fast Select Request Facility for this table entry instance. "
	DEFVAL	{ off }
	::= { wfX25ServiceEntry 22 }

wfX25ServiceFastSelAccept OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Fast Select Accept Facility for this table entry instance. "
	DEFVAL	{ off }
	::= { wfX25ServiceEntry 23 }

wfX25ServiceRevChRequest OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Reverse Charge Request Facility for this table entry instance. "
	DEFVAL	{ off }
	::= { wfX25ServiceEntry 24 }

wfX25ServiceRevChAccept OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Reverse charge Accept Facility for this table entry instance. "
	DEFVAL	{ off }
	::= { wfX25ServiceEntry 25 }

wfX25ServiceCugFormat OBJECT-TYPE
	SYNTAX	INTEGER {
		none(1),
		basic(2),
		ext(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Closed User Group Facility Format. "
	DEFVAL	{ none }
	::= { wfX25ServiceEntry 26 }

wfX25ServiceCugType OBJECT-TYPE
	SYNTAX	INTEGER {
		normal(1),
		oa(2),
		bilat(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Closed User Group Facility Type: Normal CUG,
		   Bilateral CUG, or Outgoing Access CUG. "
	DEFVAL	{ normal }
	::= { wfX25ServiceEntry 27 }

wfX25ServiceCugNum OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(9999)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Closed User Group (CUG) number. "
	::= { wfX25ServiceEntry 28 }

wfX25ServiceUserFacility OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Additional User Supplied Facilities. Must be in Hexadecimal form. "
	::= { wfX25ServiceEntry 29 }

wfX25ServiceValid OBJECT-TYPE
	SYNTAX	INTEGER {
		valid(1),
		invalid(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Validity of the record - updated by X.25. "
	DEFVAL	{ valid }
	::= { wfX25ServiceEntry 30 }

wfX25ServiceBFE OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enabled if DDNX.25/BFE enabled. "
	DEFVAL	{ disabled }
	::= { wfX25ServiceEntry 31 }

wfX25Vc OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfX25VcEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This is a table of Statistic Entries is per Virtual Circuit. "
	::= { wfX25Group 4 }

wfX25VcEntry OBJECT-TYPE
	SYNTAX	WfX25VcEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the X.25 VC table. "
	INDEX	{ wfX25VcSlotNum,
		wfX25VcConnector,
		wfX25VcLineNumber,
		wfX25VcLLIndex,
		wfX25VcCct,
		wfX25VcNumber }
	::= { wfX25Vc 1 }

WfX25VcEntry ::= SEQUENCE {
	wfX25VcSlotNum
		INTEGER,
	wfX25VcConnector
		INTEGER,
	wfX25VcLineNumber
		INTEGER,
	wfX25VcLLIndex
		INTEGER,
	wfX25VcCct
		INTEGER,
	wfX25VcNumber
		INTEGER,
	wfX25VcDataTxs
		Counter,
	wfX25VcInterruptTxs
		Counter,
	wfX25VcResetTxs
		Counter,
	wfX25VcRrTxs
		Counter,
	wfX25VcRnrTxs
		Counter,
	wfX25VcRejectTxs
		Counter,
	wfX25VcSegmentTxs
		Counter,
	wfX25VcBytesTxs
		Counter,
	wfX25VcIntBytesTxs
		Counter,
	wfX25VcDataRxs
		Counter,
	wfX25VcInterruptRxs
		Counter,
	wfX25VcResetRxs
		Counter,
	wfX25VcRrRxs
		Counter,
	wfX25VcRnrRxs
		Counter,
	wfX25VcRejectRxs
		Counter,
	wfX25VcSegmentRxs
		Counter,
	wfX25VcBytesRxs
		Counter,
	wfX25VcIntBytesRxs
		Counter,
	wfX25VcApPktsDropped
		Counter,
	wfX25VcRemoteX121Addr
		DisplayString
}

wfX25VcSlotNum OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(14)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance ID and Slot number this VC is on. "
	::= { wfX25VcEntry 1 }

wfX25VcConnector OBJECT-TYPE
	SYNTAX	INTEGER {
		one(1),
		two(2),
		three(3),
		four(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance ID and Connector number this VC is using "
	::= { wfX25VcEntry 2 }

wfX25VcLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier member. This is the line number assigned
		   to the driver X25 is running on top of and this VC is running 
		   on.  No used in 7.60 "
	::= { wfX25VcEntry 3 }

wfX25VcLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier member. This is the lower layer index
		   presented to X25 by the layer immediately below it on the
		   protocol stack. If the lower layer is a driver, the index
		   will be 0. Not used in 7.60. "
	::= { wfX25VcEntry 4 }

wfX25VcCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance ID and CCT supporting these VCs. User determines this CCT
		   via log. "
	::= { wfX25VcEntry 5 }

wfX25VcNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance ID and VC number for this VC. This number corresponds to
		   the LCN. "
	::= { wfX25VcEntry 6 }

wfX25VcDataTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Data Packets sent. "
	::= { wfX25VcEntry 7 }

wfX25VcInterruptTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Interrupt Packets sent. "
	::= { wfX25VcEntry 8 }

wfX25VcResetTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Reset Packets sent. "
	::= { wfX25VcEntry 9 }

wfX25VcRrTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Receiver Ready Packets sent. "
	::= { wfX25VcEntry 10 }

wfX25VcRnrTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Receiver Not Ready Packets sent. "
	::= { wfX25VcEntry 11 }

wfX25VcRejectTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Reject Packets sent. "
	::= { wfX25VcEntry 12 }

wfX25VcSegmentTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Charge Units sent. "
	::= { wfX25VcEntry 13 }

wfX25VcBytesTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Data Bytes sent. "
	::= { wfX25VcEntry 14 }

wfX25VcIntBytesTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Interrupt Data Bytes sent. "
	::= { wfX25VcEntry 15 }

wfX25VcDataRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Data Packets received. "
	::= { wfX25VcEntry 16 }

wfX25VcInterruptRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Interrupt Packets received. "
	::= { wfX25VcEntry 17 }

wfX25VcResetRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Reset Packets received. "
	::= { wfX25VcEntry 18 }

wfX25VcRrRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Receiver Ready Packets received. "
	::= { wfX25VcEntry 19 }

wfX25VcRnrRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Receiver Not Ready Packets received. "
	::= { wfX25VcEntry 20 }

wfX25VcRejectRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Reject Packets received. "
	::= { wfX25VcEntry 21 }

wfX25VcSegmentRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Charge Units received. "
	::= { wfX25VcEntry 22 }

wfX25VcBytesRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Data Bytes received. "
	::= { wfX25VcEntry 23 }

wfX25VcIntBytesRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Interrupt Data Bytes received. "
	::= { wfX25VcEntry 24 }

wfX25VcApPktsDropped OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Application/redirector Packets Droped "
	::= { wfX25VcEntry 25 }

wfX25VcRemoteX121Addr OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Remote DTE Address for this connection "
	::= { wfX25VcEntry 26 }

wfLapbPktTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfLapbPktEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The table of LAPB PKT Level Parameters "
	::= { wfX25Group 5 }

wfLapbPktEntry OBJECT-TYPE
	SYNTAX	WfLapbPktEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the LAPB PKT table "
	INDEX	{ wfLapbPktSlotNum,
		wfLapbPktConnector,
		wfLapbPktLineNumber,
		wfLapbPktLLIndex }
	::= { wfLapbPktTable 1 }

WfLapbPktEntry ::= SEQUENCE {
	wfLapbPktDelete
		INTEGER,
	wfLapbPktDisable
		INTEGER,
	wfLapbPktSlotNum
		INTEGER,
	wfLapbPktConnector
		INTEGER,
	wfLapbPktLineNumber
		INTEGER,
	wfLapbPktLLIndex
		INTEGER,
	wfLapbPktLapbCct
		INTEGER,
	wfLapbPktLinkId
		INTEGER,
	wfLapbPktLineState
		INTEGER,
	wfLapbPktSeqSize
		INTEGER,
	wfLapbPktMaxWindow
		INTEGER,
	wfLapbPktMaxLength
		INTEGER,
	wfLapbPktMaxThroughput
		INTEGER,
	wfLapbPktFlowCtl
		INTEGER,
	wfLapbPktThroughput
		INTEGER,
	wfLapbPktUserIdentity
		INTEGER,
	wfLapbPktInCalls
		INTEGER,
	wfLapbPktOutCalls
		INTEGER,
	wfLapbPktFastAccept
		INTEGER,
	wfLapbPktReverseAccept
		INTEGER,
	wfLapbPktFastSelect
		INTEGER,
	wfLapbPktReverseCharging
		INTEGER,
	wfLapbPktCugSelection
		INTEGER,
	wfLapbPktCugOA
		INTEGER,
	wfLapbPktCugBilateral
		INTEGER,
	wfLapbPktRpoaSelection
		INTEGER,
	wfLapbPktChargeInform
		INTEGER,
	wfLapbPktTransitDelay
		INTEGER,
	wfLapbPktFullAddressing
		INTEGER,
	wfLapbPktAccFormat
		INTEGER,
	wfLapbPktRelFormat
		INTEGER,
	wfLapbPktT1
		INTEGER,
	wfLapbPktT2
		INTEGER,
	wfLapbPktT3
		INTEGER,
	wfLapbPktT4
		INTEGER,
	wfLapbPktIwcCnt
		INTEGER,
	wfLapbPktIwcId
		INTEGER,
	wfLapbPktBwcCnt
		INTEGER,
	wfLapbPktBwcId
		INTEGER,
	wfLapbPktOwcCnt
		INTEGER,
	wfLapbPktOwcId
		INTEGER,
	wfLapbPktDefWindow
		INTEGER,
	wfLapbPktDefLength
		INTEGER,
	wfLapbPktDefClass
		INTEGER,
	wfLapbPktDxe
		INTEGER,
	wfLapbPktConformance
		INTEGER,
	wfLapbPktStandard
		INTEGER,
	wfLapbPktNetaddr
		DisplayString,
	wfLapbPktStatistics
		INTEGER,
	wfLapbPktNetaddrType
		INTEGER,
	wfLapbPktDDNIpAddr
		IpAddress,
	wfLapbPktPDNX121Addr
		DisplayString
}

wfLapbPktDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Create/Delete parameter. Default is created."
	DEFVAL	{ created }
	::= { wfLapbPktEntry 1 }

wfLapbPktDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Enable/Disable parameter "
	DEFVAL	{ enabled }
	::= { wfLapbPktEntry 2 }

wfLapbPktSlotNum OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This is the slot number where this X.25 packet
		   layer is running. "
	::= { wfLapbPktEntry 3 }

wfLapbPktConnector OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This is the Physical connector number for the Physical
		   layer associated with this X25 Packet layer. "
	::= { wfLapbPktEntry 4 }

wfLapbPktLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This is the line number assigned to the LAPB Driver
		   associated with this X25 Packet Layer.  Not used in 7.60 "
	::= { wfLapbPktEntry 5 }

wfLapbPktLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier. This is the lower layer index presented to X25 by
		   the layer immediately below it on the protocol stack. If the lower layer
		   is a driver, the index will be 0. Not used in 7.60. "
	::= { wfLapbPktEntry 6 }

wfLapbPktLapbCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Circuit number of Lapb (SYNC) driver associated with this X25 Packet Layer "
	::= { wfLapbPktEntry 7 }

wfLapbPktLinkId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Access Link identifier - index into  line information array. "
	::= { wfLapbPktEntry 8 }

wfLapbPktLineState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Reflects the state of the X.25 packet layer that is associated with this
		    network record. When the state of this parameter is set to Up, the router
		    can transfer data between the line layer and the packet layer. Note that
		    this parameter is used internally; it does NOT reflect the status of the
		    underlying synchronous circuit."
	DEFVAL	{ notpresent }
	::= { wfLapbPktEntry 9 }

wfLapbPktSeqSize OBJECT-TYPE
	SYNTAX	INTEGER {
		mod8(8),
		mod128(128)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Sequence numbering scheme for the data packets. Modulo 8 or Modulo 128 "
	DEFVAL	{ mod8 }
	::= { wfLapbPktEntry 10 }

wfLapbPktMaxWindow OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(127),
		default(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Maximum window size that can be negotiated on a per call basis, if the
		   flow control facility is subscribed too.  Extended window size of 127
		   can be used if wfLapbPktSeqSize is 128.  Otherwise the maximum is 7.
		   This attribute is effective only if the attribute  wfLapbPktFloCtl is
		   set to 'ON'. "
	DEFVAL	{ default }
	::= { wfLapbPktEntry 11 }

wfLapbPktMaxLength OBJECT-TYPE
	SYNTAX	INTEGER {
		size16(4),
		size32(5),
		size64(6),
		size128(7),
		size256(8),
		size512(9),
		size1024(10),
		size2048(11),
		size4096(12)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Maximum packet length that can be negotiated on a per call basis, if
		   the flow control facility is subscribed too. This attribute is effective
		   only if the attribute wfLapbPktFloCtl is set to 'ON'. This attribute
		   should not be greater than the wfSYNCEntry attribute wfSyncMtu. "
	DEFVAL	{ size128 }
	::= { wfLapbPktEntry 12 }

wfLapbPktMaxThroughput OBJECT-TYPE
	SYNTAX	INTEGER {
		thrclass75(3),
		thrclass150(4),
		thrclass300(5),
		thrclass600(6),
		thrclass1200(7),
		thrclass2400(8),
		thrclass4800(9),
		thrclass9600(10),
		thrclass19200(11),
		thrclass48k(12),
		thrclass64k(13)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Maximum throughput class value that can be negotiated on a per call basis,
		   if the throughput class negotiation facility is subscribed too. For this
		   to be effective the attribute wfLapbPktThroughput must be set to ON. "
	DEFVAL	{ thrclass19200 }
	::= { wfLapbPktEntry 13 }

wfLapbPktFlowCtl OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Flow control parameter negotiation facility subscription "
	DEFVAL	{ off }
	::= { wfLapbPktEntry 14 }

wfLapbPktThroughput OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Throughput class negotiation facility subscription "
	DEFVAL	{ off }
	::= { wfLapbPktEntry 15 }

wfLapbPktUserIdentity OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Network user identification (NUI) related facility subscription "
	DEFVAL	{ off }
	::= { wfLapbPktEntry 16 }

wfLapbPktInCalls OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Specifies whether or not (ON/OFF) incoming calls are permitted "
	DEFVAL	{ on }
	::= { wfLapbPktEntry 17 }

wfLapbPktOutCalls OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Specifies whether or not (ON/OFF) outgoing calls are permitted "
	DEFVAL	{ on }
	::= { wfLapbPktEntry 18 }

wfLapbPktFastAccept OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Specifies whether or not (ON/OFF) fast select acceptance facility is
		   subscribed too. "
	DEFVAL	{ off }
	::= { wfLapbPktEntry 19 }

wfLapbPktReverseAccept OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Specifies whether or not (ON/OFF) reverse charge aceptance facility is
		   subscribed to.  If this is set this packet layer will simply accept calls
		   with reverse charge facility.  But the packet layer (router) will not
		   provide any charging information. "
	DEFVAL	{ off }
	::= { wfLapbPktEntry 20 }

wfLapbPktFastSelect OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Specifies whether or not (ON/OFF) fast select facility is allowed on
		   a per call basis. "
	DEFVAL	{ off }
	::= { wfLapbPktEntry 21 }

wfLapbPktReverseCharging OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Specifies whether or not (ON/OFF) reverse charging facility is allowed
		   on a per call basis. "
	DEFVAL	{ off }
	::= { wfLapbPktEntry 22 }

wfLapbPktCugSelection OBJECT-TYPE
	SYNTAX	INTEGER {
		basic(16),
		extended(32)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Format of the Closed User Group (CUG) related facilities supported. "
	::= { wfLapbPktEntry 23 }

wfLapbPktCugOA OBJECT-TYPE
	SYNTAX	INTEGER {
		cugoa(64)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Specifies whether or not CUG with Outgoing access selection facility
		   is supported. "
	::= { wfLapbPktEntry 24 }

wfLapbPktCugBilateral OBJECT-TYPE
	SYNTAX	INTEGER {
		bilat(128)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Specifies whether or not Bilateral Closed User Group related facility
		   is supported.  If this is set, then the wfLapbPktCugSelection should be
		   set to EXTENDED. "
	::= { wfLapbPktEntry 25 }

wfLapbPktRpoaSelection OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Specifies whether or not RPOA related facility is supported. Outgoing
		   calls will not contain any RPOA facility. But if set this packet layer
		   will simply accept calls with RPOA related facility. "
	DEFVAL	{ off }
	::= { wfLapbPktEntry 26 }

wfLapbPktChargeInform OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Specifies whether or not the charging information related facilities
		   are supported.  Outgoing calls will not contain the charge information
		   related facility. But if set this packet layer will simply accept calls
		   with the charge information related facility.  No charging information
		   will be collected."
	DEFVAL	{ off }
	::= { wfLapbPktEntry 27 }

wfLapbPktTransitDelay OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Transit delay indication facility. If set, accept calls with this
		   facility. "
	DEFVAL	{ off }
	::= { wfLapbPktEntry 28 }

wfLapbPktFullAddressing OBJECT-TYPE
	SYNTAX	INTEGER {
		on(1),
		off(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" If this attribute is set, the full local X121 address (calling address)
		   is supplied in the outgoing call request and the X.25 network also expected
		   to provide the full called address in the incoming call packet. "
	DEFVAL	{ on }
	::= { wfLapbPktEntry 29 }

wfLapbPktAccFormat OBJECT-TYPE
	SYNTAX	INTEGER {
		basic(2),
		allext(255),
		defbas(103)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Specifies the format of the call accepted packet.  "
	DEFVAL	{ basic }
	::= { wfLapbPktEntry 30 }

wfLapbPktRelFormat OBJECT-TYPE
	SYNTAX	INTEGER {
		basic(2),
		allext(255),
		defext(103)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Connection release format -  format of Clear Requests "
	DEFVAL	{ basic }
	::= { wfLapbPktEntry 31 }

wfLapbPktT1 OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(999),
		default(60)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Local confirmation timeouts in seconds. This timer represents the
		   following CCITT timers.
		     If DCE: T10 (restart), T12 (reset), T13 (clear)
		     If DTE: T20 (restart), T22 (reset), T23 (clear) "
	DEFVAL	{ default }
	::= { wfLapbPktEntry 32 }

wfLapbPktT2 OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(999),
		default(180)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Call confirmation time out in seconds. This represent the CCITT T11
		   timer for the DCE and T21 timer for the DTE. "
	DEFVAL	{ default }
	::= { wfLapbPktEntry 33 }

wfLapbPktT3 OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(200),
		maximum(2000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Congestion or busy condition watchdog timer in milliseconds. When system
		   resources needed for packet assembly/deassembly depleted, this timer is
		   set to reenter the PLP state machine to retry. User should use extreme
		   caution in manipulating this timer.  "
	DEFVAL	{ minimum }
	::= { wfLapbPktEntry 34 }

wfLapbPktT4 OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(200),
		maximum(2000)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Data packet transmission watchdog timer in milliseconds. This is the
		   delay for acknowledgement. It is used to reenter PLP state machine also.
		   User should use extreme caution in manipulating this timer. "
	DEFVAL	{ minimum }
	::= { wfLapbPktEntry 35 }

wfLapbPktIwcCnt OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(512)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Number of IWC (Incoming VC's) defined on this access link. "
	::= { wfLapbPktEntry 36 }

wfLapbPktIwcId OBJECT-TYPE
	SYNTAX	INTEGER {
		default(1),
		maximum(4095)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Low LCN ID for IWC (Incoming VC's) defined on this access link. "
	DEFVAL	{ default }
	::= { wfLapbPktEntry 37 }

wfLapbPktBwcCnt OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(512)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Number of BWC (Bidirectional VC's) defined on this access link. "
	::= { wfLapbPktEntry 38 }

wfLapbPktBwcId OBJECT-TYPE
	SYNTAX	INTEGER {
		default(1),
		maximum(4095)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Low LCN ID for BWC (Bidirectional VC's) defined on this access link. "
	DEFVAL	{ default }
	::= { wfLapbPktEntry 39 }

wfLapbPktOwcCnt OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(512)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Number of OWC (Outgoing VC's) defined on this access link. "
	::= { wfLapbPktEntry 40 }

wfLapbPktOwcId OBJECT-TYPE
	SYNTAX	INTEGER {
		default(1),
		maximum(4095)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Low LCN ID for OWC (Outgoing VC's) defined on this access link. "
	DEFVAL	{ default }
	::= { wfLapbPktEntry 41 }

wfLapbPktDefWindow OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(1),
		maximum(127),
		default(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Non standard default transmit/receive window size. "
	DEFVAL	{ default }
	::= { wfLapbPktEntry 42 }

wfLapbPktDefLength OBJECT-TYPE
	SYNTAX	INTEGER {
		size16(4),
		size32(5),
		size64(6),
		size128(7),
		size256(8),
		size512(9),
		size1024(10),
		size2048(11),
		size4096(12)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Non standard default transmit/receive packet size. This attribute should
		   not be greater than the wfSyncEntry attribute wfSyncMtu. "
	DEFVAL	{ size128 }
	::= { wfLapbPktEntry 43 }

wfLapbPktDefClass OBJECT-TYPE
	SYNTAX	INTEGER {
		minimum(3),
		maximum(12)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Non standard default transmit/receive throughput class assignment. "
	DEFVAL	{ minimum }
	::= { wfLapbPktEntry 44 }

wfLapbPktDxe OBJECT-TYPE
	SYNTAX	INTEGER {
		x25dtersta(1),
		x25dte(2),
		x25dce(3),
		x25dtedxe(4)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Specify type of local X25 interface and imply subsequent rules of X.25.
		   DXE_X25DTERSTA ->DTE mode with Restart Procedure.
		   DXE_X25DTE     ->DTE mode without any restart procedure
		   DXE_X25DCE     ->DCE mode with restart procedure
		   DXE_X25DTEDXE  ->DTE/DTE environment, unassigned roles. "
	DEFVAL	{ x25dtersta }
	::= { wfLapbPktEntry 45 }

wfLapbPktConformance OBJECT-TYPE
	SYNTAX	INTEGER {
		dxe1980(257),
		fsel1980(258),
		dxe1984(513),
		fsel1984(514),
		dxe1988(1025),
		fsel1988(1026)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" CCITT conformance recommendation used on each line. "
	DEFVAL	{ dxe1988 }
	::= { wfLapbPktEntry 46 }

wfLapbPktStandard OBJECT-TYPE
	SYNTAX	INTEGER {
		stdiso(16),
		stddod(32),
		stdnone(1)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Network Standard to be used on each line. "
	DEFVAL	{ stdnone }
	::= { wfLapbPktEntry 47 }

wfLapbPktNetaddr OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This Link's Network address (X121 address). "
	::= { wfLapbPktEntry 48 }

wfLapbPktStatistics OBJECT-TYPE
	SYNTAX	INTEGER {
		statson(1),
		statsoff(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Gives the user the ability to Turn ON or Shut OFF statistics computation.
		   This can be shut off for better performance on the line. "
	DEFVAL	{ statson }
	::= { wfLapbPktEntry 49 }

wfLapbPktNetaddrType OBJECT-TYPE
	SYNTAX	INTEGER {
		pdntype(1),
		ddntype(2),
		bfetype(3)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" This defines whether the Network connection is to a DDN network or
		   PDN Network. This is used to decide how the Local X121 Network address is 
		   derived. If this attribute is set to DDN the Local X121 address used in 
		   the attribute wfLapbPktNetaddr will be derived from the user supplied 
		   IP address.  Otherwise the X121 address should be supplid by the user. "
	DEFVAL	{ pdntype }
	::= { wfLapbPktEntry 50 }

wfLapbPktDDNIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" If the wfLapbPktNetaddrType is DDNTYPE or DDN_BFE this is the user
		   supplied local IP address. The router will convert this to the
		   corresponding X121 address and the X121 address value will be put
		   in wfLapbPktNetaddr attribute. "
	::= { wfLapbPktEntry 51 }

wfLapbPktPDNX121Addr OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" If the wfLapbPktNetaddrType is PDNTYPE this is the user supplied local
		   X.121 address.  The router will put this value in wfLapbPktNetaddr
		   attribute. "
	::= { wfLapbPktEntry 52 }

wfLapbPktStatsTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfLapbPktStatsEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The table of LAPB PKT Level Statistics. "
	::= { wfX25Group 6 }

wfLapbPktStatsEntry OBJECT-TYPE
	SYNTAX	WfLapbPktStatsEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Packet level statistics. "
	INDEX	{ wfLapbPktStatsSlotNum,
		wfLapbPktStatsConnector,
		wfLapbPktStatsLineNumber,
		wfLapbPktStatsLLIndex }
	::= { wfLapbPktStatsTable 1 }

WfLapbPktStatsEntry ::= SEQUENCE {
	wfLapbPktStatsSlotNum
		INTEGER,
	wfLapbPktStatsConnector
		INTEGER,
	wfLapbPktStatsLineNumber
		INTEGER,
	wfLapbPktStatsLLIndex
		INTEGER,
	wfLapbPktStatsCct
		INTEGER,
	wfLapbPktStatsLineAddress
		DisplayString,
	wfLapbPktStatsMaxVcs
		Counter,
	wfLapbPktStatsActiveVcs
		Counter,
	wfLapbPktStatsActiveMax
		Counter,
	wfLapbPktStatsTotalConnections
		Counter,
	wfLapbPktStatsFailedConnections
		Counter,
	wfLapbPktStatsNormalDisconnects
		Counter,
	wfLapbPktStatsAbnormalDisconnects
		Counter,
	wfLapbPktStatsDataTxs
		Counter,
	wfLapbPktStatsInterruptTxs
		Counter,
	wfLapbPktStatsResetTxs
		Counter,
	wfLapbPktStatsRrTxs
		Counter,
	wfLapbPktStatsRnrTxs
		Counter,
	wfLapbPktStatsRejectTxs
		Counter,
	wfLapbPktStatsRestartTxs
		Counter,
	wfLapbPktStatsDiagTxs
		Counter,
	wfLapbPktStatsSegmentTxs
		Counter,
	wfLapbPktStatsBytesTxs
		Counter,
	wfLapbPktStatsIntBytesTxs
		Counter,
	wfLapbPktStatsDataRxs
		Counter,
	wfLapbPktStatsInterruptRxs
		Counter,
	wfLapbPktStatsResetRxs
		Counter,
	wfLapbPktStatsRrRxs
		Counter,
	wfLapbPktStatsRnrRxs
		Counter,
	wfLapbPktStatsRejectRxs
		Counter,
	wfLapbPktStatsRestartRxs
		Counter,
	wfLapbPktStatsDiagRxs
		Counter,
	wfLapbPktStatsSegmentRxs
		Counter,
	wfLapbPktStatsBytesRxs
		Counter,
	wfLapbPktStatsIntBytesRxs
		Counter,
	wfLapbPktStatsOnOffSwitch
		INTEGER
}

wfLapbPktStatsSlotNum OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Slot number and instance ID for this Lapb Packet Layer Line instance. "
	::= { wfLapbPktStatsEntry 1 }

wfLapbPktStatsConnector OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Port number and instance ID for this Lapb Packet Layer Line instance. "
	::= { wfLapbPktStatsEntry 2 }

wfLapbPktStatsLineNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier member. This is the line number assigned to the
		   driver X.25 is running over.  No used in 7.60 "
	::= { wfLapbPktStatsEntry 3 }

wfLapbPktStatsLLIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Instance identifier member. This is the lower layer index
		   presented to X25 by the layer immediately below it on the
		   protocol stack. If the lower layer is a driver, the index
		   will be 0. Not used in 7.60. "
	::= { wfLapbPktStatsEntry 4 }

wfLapbPktStatsCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Circuit number for this instance. "
	::= { wfLapbPktStatsEntry 5 }

wfLapbPktStatsLineAddress OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The local X.121 address of this line. "
	::= { wfLapbPktStatsEntry 6 }

wfLapbPktStatsMaxVcs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Maximum number of Virtual Circuits allowed on this line. "
	::= { wfLapbPktStatsEntry 7 }

wfLapbPktStatsActiveVcs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Active Virtual Circuits on this line. "
	::= { wfLapbPktStatsEntry 8 }

wfLapbPktStatsActiveMax OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Highest number of active Virtual Circuits on this line. "
	::= { wfLapbPktStatsEntry 9 }

wfLapbPktStatsTotalConnections OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Total Virtual Connections performed since start up. "
	::= { wfLapbPktStatsEntry 10 }

wfLapbPktStatsFailedConnections OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of unsuccessful Virtual Connections performed since start up. "
	::= { wfLapbPktStatsEntry 11 }

wfLapbPktStatsNormalDisconnects OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Normal Virtual Circuit Disconnections. "
	::= { wfLapbPktStatsEntry 12 }

wfLapbPktStatsAbnormalDisconnects OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Abnormal Virtual Circuit Disconnections. "
	::= { wfLapbPktStatsEntry 13 }

wfLapbPktStatsDataTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Data Packets Transmitted on this line. "
	::= { wfLapbPktStatsEntry 14 }

wfLapbPktStatsInterruptTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Interrupt Packets sent. "
	::= { wfLapbPktStatsEntry 15 }

wfLapbPktStatsResetTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Reset Requests sent. "
	::= { wfLapbPktStatsEntry 16 }

wfLapbPktStatsRrTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Receiver Ready Packets sent. "
	::= { wfLapbPktStatsEntry 17 }

wfLapbPktStatsRnrTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Receiver Not Ready Packets sent. "
	::= { wfLapbPktStatsEntry 18 }

wfLapbPktStatsRejectTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Reject Packets sent. "
	::= { wfLapbPktStatsEntry 19 }

wfLapbPktStatsRestartTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Restart Packets sent. "
	::= { wfLapbPktStatsEntry 20 }

wfLapbPktStatsDiagTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Diagnostic Packets sent. "
	::= { wfLapbPktStatsEntry 21 }

wfLapbPktStatsSegmentTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Charge Units sent. "
	::= { wfLapbPktStatsEntry 22 }

wfLapbPktStatsBytesTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Data Bytes sent. "
	::= { wfLapbPktStatsEntry 23 }

wfLapbPktStatsIntBytesTxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Interrupt Data Bytes sent. "
	::= { wfLapbPktStatsEntry 24 }

wfLapbPktStatsDataRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Data Packets received on this line. "
	::= { wfLapbPktStatsEntry 25 }

wfLapbPktStatsInterruptRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Interrupt Packets received. "
	::= { wfLapbPktStatsEntry 26 }

wfLapbPktStatsResetRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Reset Requests received. "
	::= { wfLapbPktStatsEntry 27 }

wfLapbPktStatsRrRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Receiver Ready Packets received. "
	::= { wfLapbPktStatsEntry 28 }

wfLapbPktStatsRnrRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Receiver Not Ready Packets received. "
	::= { wfLapbPktStatsEntry 29 }

wfLapbPktStatsRejectRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Reject Packets received. "
	::= { wfLapbPktStatsEntry 30 }

wfLapbPktStatsRestartRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Restart Packets received. "
	::= { wfLapbPktStatsEntry 31 }

wfLapbPktStatsDiagRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Diagnostic Packets received. "
	::= { wfLapbPktStatsEntry 32 }

wfLapbPktStatsSegmentRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Charge Units received. "
	::= { wfLapbPktStatsEntry 33 }

wfLapbPktStatsBytesRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Data Bytes received. "
	::= { wfLapbPktStatsEntry 34 }

wfLapbPktStatsIntBytesRxs OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Number of Interrupt Data Bytes received. "
	::= { wfLapbPktStatsEntry 35 }

wfLapbPktStatsOnOffSwitch OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" This tells the user if Statistics Computation is turned ON or OFF. "
	::= { wfLapbPktStatsEntry 36 }

wfXnsBase	OBJECT IDENTIFIER ::= { wfXnsGroup 1 }

wfXnsBaseDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     Create/Delete parameter. Default is created.
		     Users perform an SNMP SET operation on this
		     object in order to create/delete XNS.
		     "
	DEFVAL	{ created }
	::= { wfXnsBase 1 }

wfXnsBaseDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     Enable/Disable parameter. Default is enabled.
		     Users perform an SNMP SET operation on this
		     object in order to enable/disable XNS.
		    "
	DEFVAL	{ enabled }
	::= { wfXnsBase 2 }

wfXnsBaseState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The current state of the entire XNS."
	DEFVAL	{ notpresent }
	::= { wfXnsBase 3 }

wfXnsBaseCfgHostNumber OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Host Number of Router and potential MAC address of box."
	::= { wfXnsBase 4 }

wfXnsBaseActiveHostNumber OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" a legal input, else takes on a self generated unique number"
	::= { wfXnsBase 5 }

wfXnsBaseImplement OBJECT-TYPE
	SYNTAX	INTEGER {
		xerox(1),
		ungb(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		       Implementation method.  UB_XNS/XNS concurrent functionality or 
		       Vanilla XNS functionality only.
		    "
	DEFVAL	{ xerox }
	::= { wfXnsBase 6 }

wfXnsBaseNetCount OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Count the total number of nets in the box. "
	::= { wfXnsBase 7 }

wfXnsBaseHostCount OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Count the total number of hosts in the box. "
	::= { wfXnsBase 8 }

wfXnsBaseAdjEntryTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfXnsBaseAdjEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" This is used by Ungermann-Bass functionality only.  "
	::= { wfXnsGroup 8 }

wfXnsBaseAdjEntry OBJECT-TYPE
	SYNTAX	WfXnsBaseAdjEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Adjacency Table "
	INDEX	{ wfXnsBaseAdjacencyNetwork,
		wfXnsBaseAdjacencyHostid }
	::= { wfXnsBaseAdjEntryTable 1 }

WfXnsBaseAdjEntry ::= SEQUENCE {
	wfXnsBaseAdjacencyNetwork
		OCTET STRING,
	wfXnsBaseAdjacencyHostid
		OCTET STRING,
	wfXnsBaseAdjacencyCost
		INTEGER,
	wfXnsBaseAdjacencyAge
		INTEGER,
	wfXnsBaseAdjacencyIntf
		OCTET STRING,
	wfXnsBaseAdjacencyCct
		INTEGER
}

wfXnsBaseAdjacencyNetwork OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		         Adjacent Router's/Host's network address for which a hello has been
		         received.
		    "
	::= { wfXnsBaseAdjEntry 1 }

wfXnsBaseAdjacencyHostid OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		        Adjacent Router's/Host's hostid for which a hello has been received.
		     "
	::= { wfXnsBaseAdjEntry 2 }

wfXnsBaseAdjacencyCost OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		        Cost associated with reaching this adjacency.
		     "
	::= { wfXnsBaseAdjEntry 3 }

wfXnsBaseAdjacencyAge OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		        Adjacent Router/Host for which a hello has been received.
		     "
	::= { wfXnsBaseAdjEntry 4 }

wfXnsBaseAdjacencyIntf OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		       XNS Network interface.
		     "
	::= { wfXnsBaseAdjEntry 5 }

wfXnsBaseAdjacencyCct OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		        Circuit on which hello was received.
		     "
	::= { wfXnsBaseAdjEntry 6 }

wfXnsBaseRtEntryTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfXnsBaseRtEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The table of Elements in XNS's routing table "
	::= { wfXnsGroup 2 }

wfXnsBaseRtEntry OBJECT-TYPE
	SYNTAX	WfXnsBaseRtEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Routing Table "
	INDEX	{ wfXnsBaseRouteDest }
	::= { wfXnsBaseRtEntryTable 1 }

WfXnsBaseRtEntry ::= SEQUENCE {
	wfXnsBaseRouteDest
		OCTET STRING,
	wfXnsBaseRouteIfIndex
		INTEGER,
	wfXnsBaseRouteMetric
		INTEGER,
	wfXnsBaseRouteNextHopNetwork
		OCTET STRING,
	wfXnsBaseRouteNextHopHost
		OCTET STRING,
	wfXnsBaseRouteType
		INTEGER,
	wfXnsBaseRouteProto
		INTEGER,
	wfXnsBaseRouteAge
		INTEGER,
	wfXnsBaseRouteInfo
		OCTET STRING
}

wfXnsBaseRouteDest OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     The destination XNS address of this route.  An
		     entry with a value of 0.0.0.0 is considered a
		     default route.  Multiple routes to a single
		     destination can appear in the table, but access to
		     such multiple entries is dependent on the table-
		     access mechanisms defined by the network
		     management protocol in use.
		     "
	::= { wfXnsBaseRtEntry 1 }

wfXnsBaseRouteIfIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     The index value which uniquely identifies the
		     local interface through which the next hop of this
		     route should be reached.  The interface identified
		     by a particular value of this index is the same
		     interface as identified by the same value of
		     ifIndex.
		     "
	::= { wfXnsBaseRtEntry 2 }

wfXnsBaseRouteMetric OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     The primary routing metric for this route.  The
		     semantics of this metric are determined by the
		     routing-protocol specified in the route's
		     XnsBaseRouteProto value.  If this metric is not used,
		     its value should be set to -1.
		    "
	::= { wfXnsBaseRtEntry 3 }

wfXnsBaseRouteNextHopNetwork OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     (In the case of a route bound to an interface
		     which is realized via a broadcast media, the value
		     of this field is the agent's XNS address on that
		     interface.)
		     "
	::= { wfXnsBaseRtEntry 4 }

wfXnsBaseRouteNextHopHost OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		       Full network.host_id address of nexthop host for
		       this network.
		     "
	::= { wfXnsBaseRtEntry 5 }

wfXnsBaseRouteType OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		invalid(2),
		direct(3),
		indirect(4),
		static(5)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The type of route. Note that the values
		     direct(3) and indirect(4) refer to the notion of
		     direct and indirect routing in the XNS
		     architecture.
		     Setting this object to the value invalid(2) has
		     the effect of invalidating the corresponding entry
		     in the ipRouteTable object.  That is, it
		     effectively dissasociates the destination
		     identified with said entry from the route
		     identified with said entry.  It is an
		     implementation-specific matter as to whether the
		     agent removes an invalidated entry from the table.
		     nagement stations must be prepared
		     to receive tabular information from agents that
		     corresponds to entries not currently in use.
		     Proper interpretation of such entries requires
		     examination of the relevant XnsRouteType object.
		   "
	::= { wfXnsBaseRtEntry 6 }

wfXnsBaseRouteProto OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		local(2),
		netmgmt(3),
		rip(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     The routing mechanism via which this route was
		     learned.  Inclusion of values for gateway routing
		     protocols is not intended to imply that hosts
		     should support those protocols.
		    "
	::= { wfXnsBaseRtEntry 7 }

wfXnsBaseRouteAge OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		     The number of seconds since this route was last
		     updated or otherwise determined to be correct.
		     Note that no semantics of `too old' can be implied
		     except through knowledge of the routing protocol
		     by which the route was learned.
		    "
	::= { wfXnsBaseRtEntry 8 }

wfXnsBaseRouteInfo OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" A user-defined string which describes this Route entry "
	::= { wfXnsBaseRtEntry 9 }

wfXnsInterfaceTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfXnsInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The network interface record "
	::= { wfXnsGroup 3 }

wfXnsInterfaceEntry OBJECT-TYPE
	SYNTAX	WfXnsInterfaceEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Routing Table "
	INDEX	{ wfXnsInterfaceNetworkNumber,
		wfXnsInterfaceCircuit }
	::= { wfXnsInterfaceTable 1 }

WfXnsInterfaceEntry ::= SEQUENCE {
	wfXnsInterfaceIndex
		INTEGER,
	wfXnsInterfaceDelete
		INTEGER,
	wfXnsInterfaceDisable
		INTEGER,
	wfXnsInterfaceState
		INTEGER,
	wfXnsInterfaceCircuit
		INTEGER,
	wfXnsInterfaceNetworkNumber
		OCTET STRING,
	wfXnsInterfaceCost
		INTEGER,
	wfXnsInterfaceXsumOn
		INTEGER,
	wfXnsInterfaceEncaps
		INTEGER,
	wfXnsInterfaceMacAddress
		OCTET STRING,
	wfXnsInterfaceSMDSGroupAddress
		OCTET STRING,
	wfXnsInterfaceMaxInfo
		INTEGER,
	wfXnsInterfaceExtServer
		INTEGER,
	wfXnsInterfaceExServNetwork
		OCTET STRING,
	wfXnsInterfaceExServHostId
		OCTET STRING,
	wfXnsInterfaceExServPktType
		OCTET STRING,
	wfXnsInterfaceExServSockNm
		OCTET STRING,
	wfXnsInterfaceInReceives
		Counter,
	wfXnsInterfaceInHdrErrors
		Counter,
	wfXnsInterfaceInAddrErrors
		Counter,
	wfXnsInterfaceForwDatagrams
		Counter,
	wfXnsInterfaceInUnknownProtos
		Counter,
	wfXnsInterfaceInDiscards
		Counter,
	wfXnsInterfaceInDelivers
		Counter,
	wfXnsInterfaceOutRequests
		Counter,
	wfXnsInterfaceOutDiscards
		Counter,
	wfXnsInterfaceOutNoRoutes
		Counter,
	wfXnsInterfaceFRBcast
		OCTET STRING,
	wfXnsInterfaceFRMcast
		OCTET STRING
}

wfXnsInterfaceIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		    A unique value for each XNS interface.  Its value
		    ranges between 1 and the value of MAXCIRCUITS.
		    "
	::= { wfXnsInterfaceEntry 1 }

wfXnsInterfaceDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     Create/Delete parameter. Default is created.
		     Users perform an SNMP SET operation on this
		     object in order to create/delete an XNS interface.
		    "
	DEFVAL	{ created }
	::= { wfXnsInterfaceEntry 2 }

wfXnsInterfaceDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     Enable/Disable parameter. Default is enabled.
		     Users perform an SNMP SET operation on this
		     object in order to enable/disable an XNS interface.
		    "
	DEFVAL	{ enabled }
	::= { wfXnsInterfaceEntry 3 }

wfXnsInterfaceState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The current state of the XNS interface"
	DEFVAL	{ notpresent }
	::= { wfXnsInterfaceEntry 4 }

wfXnsInterfaceCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Circuit Number that this interface runs over"
	::= { wfXnsInterfaceEntry 5 }

wfXnsInterfaceNetworkNumber OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		       The XNS Address to which this entry's addressing 
		       information pertains.
		    "
	::= { wfXnsInterfaceEntry 6 }

wfXnsInterfaceCost OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Cost associated with the XNS Address of this entry "
	::= { wfXnsInterfaceEntry 7 }

wfXnsInterfaceXsumOn OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Flag for checksums "
	DEFVAL	{ enabled }
	::= { wfXnsInterfaceEntry 8 }

wfXnsInterfaceEncaps OBJECT-TYPE
	SYNTAX	INTEGER {
		ethernet(1),
		snap(2)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" chosen by the XNS implementation according to underlying media. "
	DEFVAL	{ ethernet }
	::= { wfXnsInterfaceEntry 9 }

wfXnsInterfaceMacAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		       The MacAddress of this interface 
		       this port will receive or transmit.
		     "
	::= { wfXnsInterfaceEntry 10 }

wfXnsInterfaceSMDSGroupAddress OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		       The SMDS Group Address of this interface 
		       this port will receive or transmit.
		     "
	::= { wfXnsInterfaceEntry 11 }

wfXnsInterfaceMaxInfo OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		         The maximum size of the INFO (non-MAC) field 
		         that this port will receive or transmit.
		        "
	::= { wfXnsInterfaceEntry 12 }

wfXnsInterfaceExtServer OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		          Flag indicating if this interface has External server 
		          capabilities turned on. Allows interface to pass on
		          defined packets, such as PEP/TP requests, to a 
		          remote server not located on local network.
		         "
	DEFVAL	{ disabled }
	::= { wfXnsInterfaceEntry 13 }

wfXnsInterfaceExServNetwork OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		          The Network address of the remote server.
		        "
	::= { wfXnsInterfaceEntry 14 }

wfXnsInterfaceExServHostId OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		          The Host ID of the remote server.
		        "
	::= { wfXnsInterfaceEntry 15 }

wfXnsInterfaceExServPktType OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		          The packet type of the requests which are to be
		          passed on to the specified remote server.
		        "
	::= { wfXnsInterfaceEntry 16 }

wfXnsInterfaceExServSockNm OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		          The destination socket number of the requests which 
		          are to be passed on to the specified remote server.
		          If no socket number is specified then all packets
		          of the specified type that this interface receives
		          will be forwarded to specified remote server.
		        "
	::= { wfXnsInterfaceEntry 17 }

wfXnsInterfaceInReceives OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The total number of input datagrams received from
		         interfaces, including those received in error."
	::= { wfXnsInterfaceEntry 18 }

wfXnsInterfaceInHdrErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		           The number of input datagrams discarded due to
		           errors in their XNS headers, including bad
		           checksums, version number mismatch, other format
		           errors, time-to-live exceeded, errors discovered
		           in processing their XNS options, etc.
		         "
	::= { wfXnsInterfaceEntry 19 }

wfXnsInterfaceInAddrErrors OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		          The number of input datagrams discarded because
		          the XNS address in their XNS header's destination
		          field was not a valid address to be received at
		          this entity.  This count includes invalid
		          addresses (e.g., 0.0.0.0) and addresses of
		          unsupported Classes (e.g., Class E).  For entities
		          which are not XNS Gateways and therefore do not
		          forward datagrams, this counter includes datagrams
		          discarded because the destination address was not
		          a local address.
		        "
	::= { wfXnsInterfaceEntry 20 }

wfXnsInterfaceForwDatagrams OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		          The number of input datagrams for which this
		          entity was not their final XNS destination, as a
		          result of which an attempt was made to find a
		          route to forward them to that final destination.
		          In entities which do not act as XNS Gateways, this
		          counter will include only those packets which were
		          Source-Routed via this entity, and the Source-
		          Route option processing was successful.
		         "
	::= { wfXnsInterfaceEntry 21 }

wfXnsInterfaceInUnknownProtos OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		         The number of locally-addressed datagrams
		         received successfully but discarded because of an
		         unknown or unsupported protocol.
		        "
	::= { wfXnsInterfaceEntry 22 }

wfXnsInterfaceInDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		          The number of input XNS datagrams for which no
		          problems were encountered to prevent their
		          continued processing, but which were discarded
		          (e.g., for lack of buffer space).  Note that this
		          counter does not include any datagrams discarded
		          while awaiting re-assembly.
		        "
	::= { wfXnsInterfaceEntry 23 }

wfXnsInterfaceInDelivers OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		          The total number of input datagrams successfully
		          delivered to XNS user-protocols (including ICMP).
		        "
	::= { wfXnsInterfaceEntry 24 }

wfXnsInterfaceOutRequests OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		         The total number of XNS datagrams which local XNS
		         user-protocols supplied to XNS in
		         requests for transmission.  Note that this counter
		         does not include any datagrams counted in 
		         XnsInteraceFwdDatagrams.
		       "
	::= { wfXnsInterfaceEntry 25 }

wfXnsInterfaceOutDiscards OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		          The number of output XNS datagrams for which no
		          problem was encountered to prevent their
		          transmission to their destination, but which were
		          discarded (e.g., for lack of buffer space).  Note
		          that this counter would include datagrams counted
		          in XnsForwDatagrams if any such packets met this
		          (discretionary) discard criterion.
		        "
	::= { wfXnsInterfaceEntry 26 }

wfXnsInterfaceOutNoRoutes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		          The number of XNS datagrams discarded because no
		          route could be found to transmit them to their
		          destination.  Note that this counter includes any
		          packets counted in ipForwDatagrams which meet this
		          `no-route' criterion.  Note that this includes any
		          datagarms which a host cannot route because all of
		          its default gateways are down.
		        "
	::= { wfXnsInterfaceEntry 27 }

wfXnsInterfaceFRBcast OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configurable Frame Relay broadcast address "
	::= { wfXnsInterfaceEntry 28 }

wfXnsInterfaceFRMcast OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Configurable Frame Relay multicast address "
	::= { wfXnsInterfaceEntry 29 }

wfXnsRipIntfTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfXnsRipIntfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of RIP interfaces "
	::= { wfXnsGroup 4 }

wfXnsRipIntfEntry OBJECT-TYPE
	SYNTAX	WfXnsRipIntfEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Routing Table "
	INDEX	{ wfXnsRipInterfaceIndex }
	::= { wfXnsRipIntfTable 1 }

WfXnsRipIntfEntry ::= SEQUENCE {
	wfXnsRipInterfaceDelete
		INTEGER,
	wfXnsRipInterfaceDisable
		INTEGER,
	wfXnsRipInterfaceState
		INTEGER,
	wfXnsRipInterfaceIndex
		OCTET STRING,
	wfXnsRipInterfaceSupply
		INTEGER,
	wfXnsRipInterfaceListen
		INTEGER
}

wfXnsRipInterfaceDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     Create/Delete parameter. Default is created.
		     Users perform an SNMP SET operation on this
		     object in order to create/delete an RIP Interface instance.
		    "
	DEFVAL	{ created }
	::= { wfXnsRipIntfEntry 1 }

wfXnsRipInterfaceDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		     Enable/Disable parameter. Default is enabled.
		     Users perform an SNMP SET operation on this
		     object in order to enable/disable a RIP instance.
		    "
	DEFVAL	{ enabled }
	::= { wfXnsRipIntfEntry 2 }

wfXnsRipInterfaceState OBJECT-TYPE
	SYNTAX	INTEGER {
		up(1),
		down(2),
		init(3),
		notpresent(4)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The current state of RIP on this interface."
	DEFVAL	{ notpresent }
	::= { wfXnsRipIntfEntry 3 }

wfXnsRipInterfaceIndex OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The XNS interface to run RIP on."
	::= { wfXnsRipIntfEntry 4 }

wfXnsRipInterfaceSupply OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Transmit RIP packets."
	DEFVAL	{ enabled }
	::= { wfXnsRipIntfEntry 5 }

wfXnsRipInterfaceListen OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Receive RIP packets."
	DEFVAL	{ enabled }
	::= { wfXnsRipIntfEntry 6 }

wfXnsAdjacentHostTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfXnsAdjacentHostEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"  must be configured for a nexthop host.                     "
	::= { wfXnsGroup 5 }

wfXnsAdjacentHostEntry OBJECT-TYPE
	SYNTAX	WfXnsAdjacentHostEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Adjacent Host Table "
	INDEX	{ wfXnsAhTargHostNetwork,
		wfXnsAhTargHostId }
	::= { wfXnsAdjacentHostTable 1 }

WfXnsAdjacentHostEntry ::= SEQUENCE {
	wfXnsAhDelete
		INTEGER,
	wfXnsAhDisable
		INTEGER,
	wfXnsAhTargHostNetwork
		OCTET STRING,
	wfXnsAhTargHostId
		OCTET STRING,
	wfXnsAhNextHopIntf
		OCTET STRING,
	wfXnsAhDlci
		OCTET STRING
}

wfXnsAhDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Create/Delete parameter. Default is created.
		     Users perform an SNMP SET operation on this
		     object in order to create/delete the IPX
		     Static Host."
	DEFVAL	{ created }
	::= { wfXnsAdjacentHostEntry 1 }

wfXnsAhDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Enable/Disable parameter. Default is enabled.
		     Users perform an SNMP SET operation on this
		     object in order to enable/disable this IPX
		     Static Route."
	DEFVAL	{ enabled }
	::= { wfXnsAdjacentHostEntry 2 }

wfXnsAhTargHostNetwork OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The network address of the static host. "
	::= { wfXnsAdjacentHostEntry 3 }

wfXnsAhTargHostId OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Address of this static host. "
	::= { wfXnsAdjacentHostEntry 4 }

wfXnsAhNextHopIntf OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Next Hop Interface Network Address "
	::= { wfXnsAdjacentHostEntry 5 }

wfXnsAhDlci OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The next Hop Host address "
	::= { wfXnsAdjacentHostEntry 6 }

wfXnsStaticRouteTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfXnsStaticRouteEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" The list of Adjacent Hosts used for Configuring XNS "
	::= { wfXnsGroup 6 }

wfXnsStaticRouteEntry OBJECT-TYPE
	SYNTAX	WfXnsStaticRouteEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the Host Table "
	INDEX	{ wfXnsSrTargNetwork,
		wfXnsSrNextHopNetwork }
	::= { wfXnsStaticRouteTable 1 }

WfXnsStaticRouteEntry ::= SEQUENCE {
	wfXnsSrDelete
		INTEGER,
	wfXnsSrDisable
		INTEGER,
	wfXnsSrTargNetwork
		OCTET STRING,
	wfXnsSrCost
		INTEGER,
	wfXnsSrNextHopNetwork
		OCTET STRING,
	wfXnsSrNextHopHost
		OCTET STRING,
	wfXnsSrTargNetworkRt
		INTEGER
}

wfXnsSrDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Create/Delete parameter. Default is created.
		     Users perform an SNMP SET operation on this
		     object in order to create/delete the XNS
		     Static Route."
	DEFVAL	{ created }
	::= { wfXnsStaticRouteEntry 1 }

wfXnsSrDisable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Enable/Disable parameter. Default is enabled.
		     Users perform an SNMP SET operation on this
		     object in order to enable/disable this XNS
		     Static Route."
	DEFVAL	{ enabled }
	::= { wfXnsStaticRouteEntry 2 }

wfXnsSrTargNetwork OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Address of this static route "
	::= { wfXnsStaticRouteEntry 3 }

wfXnsSrCost OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The Cost of this Static Route "
	::= { wfXnsStaticRouteEntry 4 }

wfXnsSrNextHopNetwork OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Next Hop XNS Address "
	::= { wfXnsStaticRouteEntry 5 }

wfXnsSrNextHopHost OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The next Hop Host address "
	::= { wfXnsStaticRouteEntry 6 }

wfXnsSrTargNetworkRt OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The Route Identifier Which numbered route this is to be "
	::= { wfXnsStaticRouteEntry 7 }

wfXnsTrafficFilterTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfXnsTrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" XNS Traffic Filters "
	::= { wfXnsGroup 7 }

wfXnsTrafficFilterEntry OBJECT-TYPE
	SYNTAX	WfXnsTrafficFilterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" A traffic filter definition "
	INDEX	{ wfXnsTrafficFilterInterface,
		wfXnsTrafficFilterCircuit,
		wfXnsTrafficFilterRuleNumber,
		wfXnsTrafficFilterFragment }
	::= { wfXnsTrafficFilterTable 1 }

WfXnsTrafficFilterEntry ::= SEQUENCE {
	wfXnsTrafficFilterCreate
		INTEGER,
	wfXnsTrafficFilterEnable
		INTEGER,
	wfXnsTrafficFilterStatus
		INTEGER,
	wfXnsTrafficFilterCounter
		Counter,
	wfXnsTrafficFilterDefinition
		Opaque,
	wfXnsTrafficFilterReserved
		INTEGER,
	wfXnsTrafficFilterInterface
		OCTET STRING,
	wfXnsTrafficFilterCircuit
		INTEGER,
	wfXnsTrafficFilterRuleNumber
		INTEGER,
	wfXnsTrafficFilterFragment
		INTEGER
}

wfXnsTrafficFilterCreate OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Defines the existence of the traffic filter rule:
		               created - traffic filter exists
		               delete - traffic filter does not exist and can be deleted.
		        "
	DEFVAL	{ created }
	::= { wfXnsTrafficFilterEntry 1 }

wfXnsTrafficFilterEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"
		                Defines whether or not the traffic filter rule should be used:
		                enabled - activate the rule.
		                disabled - inactivate the rule.
		        "
	DEFVAL	{ enabled }
	::= { wfXnsTrafficFilterEntry 2 }

wfXnsTrafficFilterStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		active(1),
		error(2),
		inactive(3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Defines the current status of the traffic filter:
		                inactive - the rule is not in use.
		                active - the rule is being used.
		                error - the application detected an error in the rule. "
	DEFVAL	{ inactive }
	::= { wfXnsTrafficFilterEntry 3 }

wfXnsTrafficFilterCounter OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" The number of received packets that have
		           matched this rule. "
	::= { wfXnsTrafficFilterEntry 4 }

wfXnsTrafficFilterDefinition OBJECT-TYPE
	SYNTAX	Opaque
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" The filter rule definition. "
	::= { wfXnsTrafficFilterEntry 5 }

wfXnsTrafficFilterReserved OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Reserved field. "
	::= { wfXnsTrafficFilterEntry 6 }

wfXnsTrafficFilterInterface OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		           The network address of the XNS
		           interface to which this filter is applied.
		         "
	::= { wfXnsTrafficFilterEntry 7 }

wfXnsTrafficFilterCircuit OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"
		           The ID of the Circuit to which the
		           filter is applied.
		         "
	::= { wfXnsTrafficFilterEntry 8 }

wfXnsTrafficFilterRuleNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" ID for the rule. "
	::= { wfXnsTrafficFilterEntry 9 }

wfXnsTrafficFilterFragment OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		" Fragment number - for large rules. "
	::= { wfXnsTrafficFilterEntry 10 }

END
