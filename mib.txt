RFC1155-SMI DEFINITIONS ::= BEGIN;
    nullOID       OBJECT IDENTIFIER ::= { ccitt 0 }
    internet      OBJECT IDENTIFIER ::= { iso org(3) dod(6) 1 }
    directory     OBJECT IDENTIFIER ::= { internet 1 }
    mgmt          OBJECT IDENTIFIER ::= { internet 2 }
    experimental  OBJECT IDENTIFIER ::= { internet 3 }
    private       OBJECT IDENTIFIER ::= { internet 4 }
    enterprises   OBJECT IDENTIFIER ::= { private 1 }
END

-- @(#)WSCCS g/mibs-wfcommon.mib 1.4 10/26/95
Wellfleet-COMMON-MIB

DEFINITIONS ::= BEGIN

IMPORTS

  enterprises
    FROM RFC1155-SMI;

wellfleet		OBJECT IDENTIFIER ::= { enterprises 18 }

wfSwSeries7		OBJECT IDENTIFIER ::= { wellfleet 3 }

wfHardwareConfig	OBJECT IDENTIFIER ::= { wfSwSeries7 1 }

wfHwModuleGroup		OBJECT IDENTIFIER ::= { wfHardwareConfig 4 }

wfHwIdentities		OBJECT IDENTIFIER ::= { wfHardwareConfig 5 }

wfHwFn			OBJECT IDENTIFIER ::= { wfHwIdentities 1 }

wfHwLn			OBJECT IDENTIFIER ::= { wfHwIdentities 2 }

wfHwCn			OBJECT IDENTIFIER ::= { wfHwIdentities 3 }

wfHwAfn			OBJECT IDENTIFIER ::= { wfHwIdentities 4 }

wfHwIn			OBJECT IDENTIFIER ::= { wfHwIdentities 5 }

wfHwAn			OBJECT IDENTIFIER ::= { wfHwIdentities 16 }

wfHwAnMpr		OBJECT IDENTIFIER ::= { wfHwAn 1 }

wfHwAnHub		OBJECT IDENTIFIER ::= { wfHwAn 2 }

wfHwBln			OBJECT IDENTIFIER ::= { wfHwIdentities 16640 }

wfHwBcn			OBJECT IDENTIFIER ::= { wfHwIdentities 16896 }

wfHwRbln		OBJECT IDENTIFIER ::= { wfHwIdentities 17152 }

wfHwAsn			OBJECT IDENTIFIER ::= { wfHwIdentities 20480 }

wfHwAsnZ		OBJECT IDENTIFIER ::= { wfHwIdentities 20736 }

wfHwAsnB		OBJECT IDENTIFIER ::= { wfHwIdentities 20992 }

wfSoftwareConfig	OBJECT IDENTIFIER ::= { wfSwSeries7 2 }

wfSystem		OBJECT IDENTIFIER ::= { wfSwSeries7 3 }

wfServices		OBJECT IDENTIFIER ::= { wfSystem 2 }

wfPacketGenGroup	OBJECT IDENTIFIER ::= { wfServices 4 }

wfGameGroup		OBJECT IDENTIFIER ::= { wfServices 5 }

wfStaGroup		OBJECT IDENTIFIER ::= { wfServices 6 }

wfMibHeapGroup		OBJECT IDENTIFIER ::= { wfServices 7 }

wfCircuitNameExtension	OBJECT IDENTIFIER ::= { wfServices 9 }

wfNetBootGroup		OBJECT IDENTIFIER ::= { wfServices 10 }

wfSerialPortGroup	OBJECT IDENTIFIER ::= { wfServices 11 }

wfFileSystemGroup	OBJECT IDENTIFIER ::= { wfServices 12 }

wfPingGroup		OBJECT IDENTIFIER ::= { wfServices 13 }

wfRuiBootGroup		OBJECT IDENTIFIER ::= { wfServices 14 }

wfSyslogGroup		OBJECT IDENTIFIER ::= { wfServices 15 }

wfDCMmwGroup		OBJECT IDENTIFIER ::= { wfServices 16 }

wfLine			OBJECT IDENTIFIER ::= { wfSwSeries7 4 }

wfHwFGroup		OBJECT IDENTIFIER ::= { wfLine 6 }

wfMcT1Group		OBJECT IDENTIFIER ::= { wfLine 8 }

wfDs1E1Group		OBJECT IDENTIFIER ::= { wfLine 9 }

wfDs1Group		OBJECT IDENTIFIER ::= { wfLine 12 }

wfDs3Group		OBJECT IDENTIFIER ::= { wfLine 13 }

wfSipGroup		OBJECT IDENTIFIER ::= { wfLine 14 }

wfFddiGroup		OBJECT IDENTIFIER ::= { wfLine 15 }

wfCSMACDAutoNegGroup	OBJECT IDENTIFIER ::= { wfLine 16 }

wfPktCaptureGroup	OBJECT IDENTIFIER ::= { wfLine 21 }

wfCompressionGroup	OBJECT IDENTIFIER ::= { wfLine 22 }

wfAtmInterfaceGroup	OBJECT IDENTIFIER ::= { wfLine 23 }

wfSonetGroup		OBJECT IDENTIFIER ::= { wfLine 24 }

wfDsx3Group		OBJECT IDENTIFIER ::= { wfLine 26 }

wfBisyncGroup		OBJECT IDENTIFIER ::= { wfLine 27 }

wfApplication		OBJECT IDENTIFIER ::= { wfSwSeries7 5 }

wfDataLink		OBJECT IDENTIFIER ::= { wfApplication 1 }

wfBridgeGroup		OBJECT IDENTIFIER ::= { wfDataLink 1 }

wfSpanningTree		OBJECT IDENTIFIER ::= { wfDataLink 2 }

wfIfGroup		OBJECT IDENTIFIER ::= { wfDataLink 3 }

wfCircuitOptsGroup	OBJECT IDENTIFIER ::= { wfDataLink 4 }

wfDlsGroup		OBJECT IDENTIFIER ::= { wfDataLink 5 }

wfLlcGroup		OBJECT IDENTIFIER ::= { wfDataLink 6 }

wfSdlcGroup		OBJECT IDENTIFIER ::= { wfDataLink 7 }

wfProtocolPriorityGroup	OBJECT IDENTIFIER ::= { wfDataLink 9 }

wfIRedundGroup		OBJECT IDENTIFIER ::= { wfDataLink 10 }

wfDecGroup		OBJECT IDENTIFIER ::= { wfApplication 2 }

wfInternet		OBJECT IDENTIFIER ::= { wfApplication 3 }

wfArpGroup		OBJECT IDENTIFIER ::= { wfInternet 1 }

wfIpRouting		OBJECT IDENTIFIER ::= { wfInternet 2 }

wfIpGroup		OBJECT IDENTIFIER ::= { wfIpRouting 1 }

wfRipGroup		OBJECT IDENTIFIER ::= { wfIpRouting 2 }

wfOspfGroup		OBJECT IDENTIFIER ::= { wfIpRouting 3 }

wfEgpGroup		OBJECT IDENTIFIER ::= { wfIpRouting 4 }

wfBgpGroup		OBJECT IDENTIFIER ::= { wfIpRouting 5 }

wfIpPolicyGroup		OBJECT IDENTIFIER ::= { wfIpRouting 6 }

wfTcpGroup		OBJECT IDENTIFIER ::= { wfInternet 3 }

wfUdpGroup		OBJECT IDENTIFIER ::= { wfInternet 4 }

wfSnmpGroup		OBJECT IDENTIFIER ::= { wfInternet 5 }

wfTelnetGroup		OBJECT IDENTIFIER ::= { wfInternet 7 }

wfBootpGroup		OBJECT IDENTIFIER ::= { wfInternet 8 }

wfRarpGroup		OBJECT IDENTIFIER ::= { wfInternet 9 }

wfFtpGroup		OBJECT IDENTIFIER ::= { wfInternet 10 }

wfNetBIOSIpGroup	OBJECT IDENTIFIER ::= { wfInternet 11 }

wfDvmrpGroup		OBJECT IDENTIFIER ::= { wfInternet 12 }

wfIgmpGroup		OBJECT IDENTIFIER ::= { wfInternet 13 }

wfPimGroup              OBJECT IDENTIFIER ::= { wfInternet 14 }

wfIpv6Group		OBJECT IDENTIFIER ::= { wfInternet 16 }

wfAppletalkGroup	OBJECT IDENTIFIER ::= { wfApplication 4 }

wfIpxGroup		OBJECT IDENTIFIER ::= { wfApplication 5 }

wfNlspGroup		OBJECT IDENTIFIER ::= { wfIpxGroup 128 }

wfOsiGroup		OBJECT IDENTIFIER ::= { wfApplication 6 }

wfVinesGroup		OBJECT IDENTIFIER ::= { wfApplication 8 }

wfWanGroup		OBJECT IDENTIFIER ::= { wfApplication 9 }

wfFrameRelayGroup	OBJECT IDENTIFIER ::= { wfWanGroup 1 }

wfPppGroup		OBJECT IDENTIFIER ::= { wfWanGroup 2 }

wfX25Group		OBJECT IDENTIFIER ::= { wfWanGroup 4 }

wfAtmGroup		OBJECT IDENTIFIER ::= { wfWanGroup 5 }

wfAtmLeGroup		OBJECT IDENTIFIER ::= { wfAtmGroup 20 }

wfFrswGroup		OBJECT IDENTIFIER ::= { wfWanGroup 6 }

wfSmdsSwGroup		OBJECT IDENTIFIER ::= { wfWanGroup 7 }

wfIsdnGroup		OBJECT IDENTIFIER ::= { wfWanGroup 8 }

wfFrameRelay2Group	OBJECT IDENTIFIER ::= { wfWanGroup 9 }

wfXnsGroup		OBJECT IDENTIFIER ::= { wfApplication 10 }

wfTestGroup		OBJECT IDENTIFIER ::= { wfApplication 11 }

wfLanManagerGroup	OBJECT IDENTIFIER ::= { wfApplication 12 }

wfAppnGroup		OBJECT IDENTIFIER ::= { wfApplication 14 }

wfIpexGroup		OBJECT IDENTIFIER ::= { wfApplication 15 }

wfIntegratedServicesGroup OBJECT IDENTIFIER ::= { wfApplication 16 }

wfRRedGroup		OBJECT IDENTIFIER ::= { wfApplication 17 }

wfBotGroup		OBJECT IDENTIFIER ::= { wfApplication 18 }

wfStatsDcGroup		OBJECT IDENTIFIER ::= { wfServices 17 }

END  -- Wellfleet-COMMON-MIB
-- @(#)WSCCS j/mibs-appn.mib 1.4 10/19/95
Wellfleet-APPN-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:36:03 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfAppnGroup
        FROM Wellfleet-COMMON-MIB;

    wfAppnNode            OBJECT IDENTIFIER ::= { wfAppnGroup 1 }
    wfAppnNodeInfoAndCaps	OBJECT IDENTIFIER ::= { wfAppnNode 1 }
    wfAppnNn              OBJECT IDENTIFIER ::= { wfAppnGroup 2 }
    wfAppnNnTopology      OBJECT IDENTIFIER ::= { wfAppnNn 3 }
    wfAppnLocalTopology   OBJECT IDENTIFIER ::= { wfAppnGroup 3 }
    wfAppnLocalThisNode   OBJECT IDENTIFIER ::= { wfAppnLocalTopology 1 }
    wfAppnDirectory       OBJECT IDENTIFIER ::= { wfAppnGroup 4 }
    wfAppnCos             OBJECT IDENTIFIER ::= { wfAppnGroup 5 }
    wfAppnTps             OBJECT IDENTIFIER ::= { wfAppnGroup 6 }
    wfAppnDlu             OBJECT IDENTIFIER ::= { wfAppnGroup 7 }


    wfAppnNodeDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete the APPN Node."
        DEFVAL	{ created }
        ::= { wfAppnNodeInfoAndCaps 1 }

    wfAppnNodeDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable the APPN Node."
        DEFVAL	{ enable }
        ::= { wfAppnNodeInfoAndCaps 2 }

    wfAppnNodeState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the APPN CP."
        DEFVAL	{ notpresent }
        ::= { wfAppnNodeInfoAndCaps 3 }

    wfAppnNodeCpName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned network name
                for this node in the format NETID.CPNAME."
        ::= { wfAppnNodeInfoAndCaps 4 }

    wfAppnNodeNetid OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned APPN network identification,
                which can be from one to eight characters.
                This ID is used with the control point name
                to create a fully-qualified control point name."
        ::= { wfAppnNodeInfoAndCaps 5 }

    wfAppnNodeBlockNum OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The block number is the first three digits of the node_id.
                These 3 hexadecimal digits identify the product."
        ::= { wfAppnNodeInfoAndCaps 6 }

    wfAppnNodeIdNum OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The ID number is the last 5 digits of the node_id.
                These 5 hexadecimal digits are administratively defined and
                combined with the 3 digit block number from the node_id.
                This node_id is used to identify the local node and is included
                in APPN alerts as well as being included in XIDs.  A unique
                value is required for connections to SNA sub-area."
        ::= { wfAppnNodeInfoAndCaps 7 }

    wfAppnNodeType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    nn(1),
    		    en(2),
    		    len(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Type of APPN node, either Network Node, End Node, or Low Entry Networking Node.
                This node is always a Network Node."
        ::= { wfAppnNodeInfoAndCaps 8 }

    wfAppnNodeUpTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time (in hundredths of a second) since this APPN node
                was initialized."
        ::= { wfAppnNodeInfoAndCaps 9 }

    wfAppnNodeNegotLs OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this node supports negotiable
                link stations."
        ::= { wfAppnNodeInfoAndCaps 10 }

    wfAppnNodeSegReasm OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this node supports segment
                reassembly.  This is only supported when
                segment generation is also supported."
        ::= { wfAppnNodeInfoAndCaps 11 }

    wfAppnNodeBindReasm OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this node supports Bind segment
                reassembly.  This will only be supported when Bind
                segment generation is also supported."
        ::= { wfAppnNodeInfoAndCaps 12 }

    wfAppnNodeParallelTg OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this node supports parallel TGs."
        ::= { wfAppnNodeInfoAndCaps 13 }

    wfAppnNodeService OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this node allows call-in from nodes not
                defined locally."
        ::= { wfAppnNodeInfoAndCaps 14 }

    wfAppnNodeAdaptiveBindPacing OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this node supports adaptive bind pacing."
        ::= { wfAppnNodeInfoAndCaps 15 }

    wfAppnNodeNnRcvRegChar OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this node supports receiving registered
                characteristics."
        ::= { wfAppnNodeInfoAndCaps 16 }

    wfAppnNodeNnGateway OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this is a gateway node."
        ::= { wfAppnNodeInfoAndCaps 17 }

    wfAppnNodeNnCentralDirectory OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this node supports central directory
                cache."
        ::= { wfAppnNodeInfoAndCaps 18 }

    wfAppnNodeNnTreeCache OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this node supports Route Tree caching."
        ::= { wfAppnNodeInfoAndCaps 19 }

    wfAppnNodeNnTreeUpdate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this node supports
                incremental_tree_update, which is only
                supported when tree caching is supported."
        ::= { wfAppnNodeInfoAndCaps 20 }

    wfAppnNodeNnRouteAddResist OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Route addition resistance is a value that
                indicates the relative desirability
                of using this node for intermediate session traffic.
                The value, which can be any integer 0-255,
                is used in route computation.  The lower the value,
                the more desirable the node is for intermediate routing."
        DEFVAL	{ 128 }
        ::= { wfAppnNodeInfoAndCaps 21 }

    wfAppnNodeNnIsr OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the node supports intermediate
                session routing."
        ::= { wfAppnNodeInfoAndCaps 22 }

    wfAppnNodeNnFrsn OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow reduction sequence numbers (FRSNs) are associated
                with Topology Database Updates (TDUs) and are unique
                only within each APPN network node.  A TDU can be
                associated with multiple APPN resources. This object
                is the last FRSN sent in a topology update to
                adjacent network nodes."
        ::= { wfAppnNodeInfoAndCaps 23 }

    wfAppnNodeModeToCosDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether Mode to Cos mapping is supported"
        ::= { wfAppnNodeInfoAndCaps 24 }

    wfAppnNodeMdsDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables Multiple Domain Support"
        DEFVAL	{ enable }
        ::= { wfAppnNodeInfoAndCaps 25 }

    wfAppnNodeRegWithCdsDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable Registration of Local and Domain  resources with Central Directory Server"
        DEFVAL	{ enable }
        ::= { wfAppnNodeInfoAndCaps 26 }

    wfAppnNodeAlertQSize OBJECT-TYPE
        SYNTAX	INTEGER(2..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Size of the MDS Send Alert Queue Size"
        DEFVAL	{ 10 }
        ::= { wfAppnNodeInfoAndCaps 27 }

    wfAppnNodeCosCacheSize OBJECT-TYPE
        SYNTAX	INTEGER(8..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Size of the COS Database weights cache This should be set to the number of COSs defined"
        DEFVAL	{ 8 }
        ::= { wfAppnNodeInfoAndCaps 28 }

    wfAppnNodeStoreEndpointRscvsDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Store RSCVs for Endpoint sessions?"
        DEFVAL	{ enable }
        ::= { wfAppnNodeInfoAndCaps 29 }

    wfAppnNodeNnMaxLocates OBJECT-TYPE
        SYNTAX	INTEGER(8..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum simultaneous Locates that this node will process"
        DEFVAL	{ 256 }
        ::= { wfAppnNodeInfoAndCaps 30 }

    wfAppnNodeNnDirCacheSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    def(100)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum size (entry count) of the Directory Services cache."
        DEFVAL	{ def }
        ::= { wfAppnNodeInfoAndCaps 31 }

    wfAppnNodeNnMaxDirEntries OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum Number of entries in Directory Database. A value of zero means unlimited"
        ::= { wfAppnNodeInfoAndCaps 32 }

    wfAppnNodeNnLocateTimeout OBJECT-TYPE
        SYNTAX	INTEGER {
    		    def(60)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies a time (in seconds) before a network search will timeout.
                A value of zero means no timeout"
        DEFVAL	{ def }
        ::= { wfAppnNodeInfoAndCaps 33 }

    wfAppnNodeNnTreeCacheSize OBJECT-TYPE
        SYNTAX	INTEGER(8..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Size of the Topology Database routing tree cache."
        DEFVAL	{ 8 }
        ::= { wfAppnNodeInfoAndCaps 34 }

    wfAppnNodeNnTreeCacheUseLimit OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of times a cached Routing Tree will be used before it is recalculated"
        DEFVAL	{ 8 }
        ::= { wfAppnNodeInfoAndCaps 35 }

    wfAppnNodeNnMaxTdmNodes OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of nodes in the topology database. A value of zero means unlimited"
        ::= { wfAppnNodeInfoAndCaps 36 }

    wfAppnNodeNnMaxTdmTgs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of TGs in the topology database. A value of zero means unlimited"
        ::= { wfAppnNodeInfoAndCaps 37 }

    wfAppnNodeNnMaxIsrSessions OBJECT-TYPE
        SYNTAX	INTEGER(100..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of Intermediate Sessions that this node will route"
        DEFVAL	{ 1000 }
        ::= { wfAppnNodeInfoAndCaps 38 }

    wfAppnNodeNnIsrSessionUpperThresh OBJECT-TYPE
        SYNTAX	INTEGER {
    		    def(900)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "ISR Session Threshold at which the node is considered congested.
                This value must be less than that of wfAppnNodeNnMaxIsrSessions"
        DEFVAL	{ def }
        ::= { wfAppnNodeInfoAndCaps 39 }

    wfAppnNodeNnIsrSessionLowerThresh OBJECT-TYPE
        SYNTAX	INTEGER {
    		    def(800)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "ISR Session Threshold at which the node is no longer considered congested.
                This value must be less than that of wfAppnNodeNnIsrSessionUpperThresh"
        DEFVAL	{ def }
        ::= { wfAppnNodeInfoAndCaps 40 }

    wfAppnNodeNnIsrMaxRuSize OBJECT-TYPE
        SYNTAX	INTEGER(256..4096)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum RU size supported for intermediate sessions"
        DEFVAL	{ 4096 }
        ::= { wfAppnNodeInfoAndCaps 41 }

    wfAppnNodeNnIsrRcvPacingWindow OBJECT-TYPE
        SYNTAX	INTEGER(1..63)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive Pacing window for intermediate sessions"
        DEFVAL	{ 7 }
        ::= { wfAppnNodeInfoAndCaps 42 }

    wfAppnNodeNnStoreIsrRscvsDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Store RSCVs for intermediate sessions? (for network monitoring)"
        DEFVAL	{ enable }
        ::= { wfAppnNodeInfoAndCaps 43 }

    wfAppnNodeNnStoreDlurRscvsDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Store RSCVs for DLUR sessions? (for network monitoring)"
        DEFVAL	{ enable }
        ::= { wfAppnNodeInfoAndCaps 44 }

    wfAppnNodeNnDlurDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This enables DLUR support for the Node"
        DEFVAL	{ disable }
        ::= { wfAppnNodeInfoAndCaps 45 }

    wfAppnNodeTotalAvailableMemory OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total memory available to APPN"
        ::= { wfAppnNodeInfoAndCaps 46 }

    wfAppnNodeInUseMemory OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Memory in use by APPN"
        ::= { wfAppnNodeInfoAndCaps 47 }

    wfAppnNodeMemoryWarningThreshold OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Warning memory threshold"
        ::= { wfAppnNodeInfoAndCaps 48 }

    wfAppnNodeMemoryCriticalThreshold OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Critical memory threshold"
        ::= { wfAppnNodeInfoAndCaps 49 }

    wfAppnNodeHprDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This enables HPR support for the Node"
        DEFVAL	{ enable }
        ::= { wfAppnNodeInfoAndCaps 50 }

    wfAppnNodeHprPathSwitchCtrlrDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This enables HPR Path Switch Controller support for the Node"
        DEFVAL	{ disable }
        ::= { wfAppnNodeInfoAndCaps 51 }

    wfAppnNodeDebugIpsTraceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This enables tracing of internal messages for debugging"
        DEFVAL	{ disable }
        ::= { wfAppnNodeInfoAndCaps 52 }

    wfAppnNodeDebugIpsTraceSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the size of the IPS trace file for debugging"
        DEFVAL	{ 50000 }
        ::= { wfAppnNodeInfoAndCaps 53 }

    wfAppnNodeDefaultDlusName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Fully-qualified name of the default primary DLUS node."
        ::= { wfAppnNodeInfoAndCaps 54 }

    wfAppnNodeDefaultBackupDlusName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Fully-qualified name of the default backup DLUS node."
        ::= { wfAppnNodeInfoAndCaps 55 }

    wfAppnNodePdLogDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This enables logging of problem determination messages"
        DEFVAL	{ disable }
        ::= { wfAppnNodeInfoAndCaps 56 }

    wfAppnNodeDlcTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnNodeDlcEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "this table contains entries for each DLC configured for APPN use"
        ::= { wfAppnNode 2 }

    wfAppnNodeDlcEntry OBJECT-TYPE
        SYNTAX	WfAppnNodeDlcEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfAppnNodeDlcTable."
        INDEX	{ wfAppnNodeDlcName }
        ::= { wfAppnNodeDlcTable 1 }

    WfAppnNodeDlcEntry ::= SEQUENCE {
    	    wfAppnNodeDlcDelete
    		INTEGER,
    	    wfAppnNodeDlcDisable
    		INTEGER,
    	    wfAppnNodeDlcName
    		DisplayString,
    	    wfAppnNodeDlcState
    		INTEGER,
    	    wfAppnNodeDlcType
    		INTEGER,
    	    wfAppnNodeDlcNegLsSupportDisable
    		INTEGER,
    	    wfAppnNodeDlcCct
    		INTEGER,
    	    wfAppnNodeDlcData
    		OCTET STRING
        }

    wfAppnNodeDlcDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete a DLC definition."
        DEFVAL	{ created }
        ::= { wfAppnNodeDlcEntry 1 }

    wfAppnNodeDlcDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this DLC."
        DEFVAL	{ enable }
        ::= { wfAppnNodeDlcEntry 2 }

    wfAppnNodeDlcName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the 8-character name given to this DLC"
        ::= { wfAppnNodeDlcEntry 3 }

    wfAppnNodeDlcState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    inactive(1),
    		    pendactive(2),
    		    active(3),
    		    pendinact(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the current state of this DLC."
        ::= { wfAppnNodeDlcEntry 4 }

    wfAppnNodeDlcType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    sdlc(1),
    		    srb(2),
    		    tb(3),
    		    fr(4),
    		    dls(5),
    		    qllc(6)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This indicates the type of DLC"
        DEFVAL	{ srb }
        ::= { wfAppnNodeDlcEntry 5 }

    wfAppnNodeDlcNegLsSupportDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This indicates if Link Station roles can be negotiated
                on this DLC"
        DEFVAL	{ enable }
        ::= { wfAppnNodeDlcEntry 6 }

    wfAppnNodeDlcCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the circuit used by this DLC"
        ::= { wfAppnNodeDlcEntry 7 }

    wfAppnNodeDlcData OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "comment - Is this used? -P2"
        ::= { wfAppnNodeDlcEntry 8 }

    wfAppnNodePortTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnNodePortEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "this table contains entries for each Port defined"
        ::= { wfAppnNode 3 }

    wfAppnNodePortEntry OBJECT-TYPE
        SYNTAX	WfAppnNodePortEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Port Name is used as the index to this table."
        INDEX	{ wfAppnNodePortName }
        ::= { wfAppnNodePortTable 1 }

    WfAppnNodePortEntry ::= SEQUENCE {
    	    wfAppnNodePortDelete
    		INTEGER,
    	    wfAppnNodePortDisable
    		INTEGER,
    	    wfAppnNodePortName
    		DisplayString,
    	    wfAppnNodePortState
    		INTEGER,
    	    wfAppnNodePortDlcType
    		INTEGER,
    	    wfAppnNodePortPortType
    		INTEGER,
    	    wfAppnNodePortSIMRIM
    		INTEGER,
    	    wfAppnNodePortLsRole
    		INTEGER,
    	    wfAppnNodePortMaxRcvBtuSize
    		INTEGER,
    	    wfAppnNodePortMaxIframeWindow
    		INTEGER,
    	    wfAppnNodePortDefLsGoodXids
    		Counter,
    	    wfAppnNodePortDefLsBadXids
    		Counter,
    	    wfAppnNodePortDynLsGoodXids
    		Counter,
    	    wfAppnNodePortDynLsBadXids
    		Counter,
    	    wfAppnNodePortDlcName
    		DisplayString,
    	    wfAppnNodePortNumber
    		INTEGER,
    	    wfAppnNodePortTotLinkActLim
    		INTEGER,
    	    wfAppnNodePortInbLinkActLim
    		INTEGER,
    	    wfAppnNodePortOutLinkActLim
    		INTEGER,
    	    wfAppnNodePortActXidExchangeLimit
    		INTEGER,
    	    wfAppnNodePortNonActXidExchangeLimit
    		INTEGER,
    	    wfAppnNodePortLsXmitRcvCap
    		INTEGER,
    	    wfAppnNodePortTargetPacingCount
    		INTEGER,
    	    wfAppnNodePortMaxSendBtuSize
    		INTEGER,
    	    wfAppnNodePortImplicitCpSessions
    		INTEGER,
    	    wfAppnNodePortImplicitLimResource
    		INTEGER,
    	    wfAppnNodePortImplicitEffCap
    		INTEGER,
    	    wfAppnNodePortImplicitConnCost
    		INTEGER,
    	    wfAppnNodePortImplicitByteCost
    		INTEGER,
    	    wfAppnNodePortImplicitSecurity
    		INTEGER,
    	    wfAppnNodePortImplicitDelay
    		INTEGER,
    	    wfAppnNodePortImplicitUsr1
    		INTEGER,
    	    wfAppnNodePortImplicitUsr2
    		INTEGER,
    	    wfAppnNodePortImplicitUsr3
    		INTEGER,
    	    wfAppnNodePortImplicitHprDisable
    		INTEGER,
    	    wfAppnNodePortImplicitHprLlErrorDisable
    		INTEGER,
    	    wfAppnNodePortImplicitLinkDeactTime
    		INTEGER,
    	    wfAppnNodePortDlcData
    		OCTET STRING,
    	    wfAppnNodePortHprDlcData
    		OCTET STRING
        }

    wfAppnNodePortDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete a Port definition."
        DEFVAL	{ created }
        ::= { wfAppnNodePortEntry 1 }

    wfAppnNodePortDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this Port."
        DEFVAL	{ enable }
        ::= { wfAppnNodePortEntry 2 }

    wfAppnNodePortName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned name for this APPN port.
                The name can be from one to eight characters."
        ::= { wfAppnNodePortEntry 3 }

    wfAppnNodePortState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    inactive(1),
    		    pendactive(2),
    		    active(3),
    		    pendinact(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the current state of this port."
        DEFVAL	{ inactive }
        ::= { wfAppnNodePortEntry 4 }

    wfAppnNodePortDlcType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    sdlc(2),
    		    dls(3),
    		    socket(4),
    		    ethernet(5),
    		    tokenring(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the DLC type of this port."
        ::= { wfAppnNodePortEntry 5 }

    wfAppnNodePortPortType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    leased(1),
    		    switched(2),
    		    fac(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Identifies the type of line used by this port."
        DEFVAL	{ fac }
        ::= { wfAppnNodePortEntry 6 }

    wfAppnNodePortSIMRIM OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether Set Initialization Mode (SIM) and
                Receive Initialization Mode (RIM) are supported."
        ::= { wfAppnNodePortEntry 7 }

    wfAppnNodePortLsRole OBJECT-TYPE
        SYNTAX	INTEGER {
    		    primary(1),
    		    secondary(2),
    		    negot(3),
    		    abm(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Initial role for LSs activated through this port,
                where 'abm' indicates asynchronous balance mode."
        DEFVAL	{ negot }
        ::= { wfAppnNodePortEntry 8 }

    wfAppnNodePortMaxRcvBtuSize OBJECT-TYPE
        SYNTAX	INTEGER(256..4105)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum Basic Transmission Size (BTU) that a
                link station on this port can receive."
        DEFVAL	{ 2057 }
        ::= { wfAppnNodePortEntry 9 }

    wfAppnNodePortMaxIframeWindow OBJECT-TYPE
        SYNTAX	INTEGER(0..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of I-frames that can be received
                by the XID sender before an acknowledgement is received."
        DEFVAL	{ 7 }
        ::= { wfAppnNodePortEntry 10 }

    wfAppnNodePortDefLsGoodXids OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of successful XIDs that have occurred
                on all defined link stations on this port since the last
                time this port was started."
        ::= { wfAppnNodePortEntry 11 }

    wfAppnNodePortDefLsBadXids OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of unsuccessful XIDs that have occurred
                on all defined link stations on this port since the last
                time this port was started."
        ::= { wfAppnNodePortEntry 12 }

    wfAppnNodePortDynLsGoodXids OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of successful XIDs that have occurred
                on all dynamic link stations on this port since the last
                time this port was started."
        ::= { wfAppnNodePortEntry 13 }

    wfAppnNodePortDynLsBadXids OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of unsuccessful XIDs that have occurred
                on all dynamic link stations on this port since the last
                time this port was started."
        ::= { wfAppnNodePortEntry 14 }

    wfAppnNodePortDlcName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the 8-character name of the DLC which supports this Port"
        ::= { wfAppnNodePortEntry 15 }

    wfAppnNodePortNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is a unique number for this Port on the DLC"
        ::= { wfAppnNodePortEntry 16 }

    wfAppnNodePortTotLinkActLim OBJECT-TYPE
        SYNTAX	INTEGER {
    		    neg(1),
    		    pri(256)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the maximum link activation limit for this Port.
                The maximum value depends on the LS Role and Port Type, as follows:
                     Port Type       LS Role         Max Act Lim  Inb   Out
                     Switched        <any>                1        1     1
                     Leased          Secondary            1        1     0
                     Leased          Negotiable           1        0     0
                     Leased          Primary             256       0    256
                     SATF            <any>               256      128   128"
        DEFVAL	{ pri }
        ::= { wfAppnNodePortEntry 17 }

    wfAppnNodePortInbLinkActLim OBJECT-TYPE
        SYNTAX	INTEGER {
    		    sec(1),
    		    satf(128)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the maximum inbound link activation
                limit for this Port. This value plus next one must total
                less than or equal to the total link activation limit."
        DEFVAL	{ satf }
        ::= { wfAppnNodePortEntry 18 }

    wfAppnNodePortOutLinkActLim OBJECT-TYPE
        SYNTAX	INTEGER {
    		    switched(1),
    		    satf(128),
    		    pri(256)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the maximum outbound link activation
                limit for this Port. This value plus previous one must total
                less than or equal to the total link activation limit."
        DEFVAL	{ satf }
        ::= { wfAppnNodePortEntry 19 }

    wfAppnNodePortActXidExchangeLimit OBJECT-TYPE
        SYNTAX	INTEGER {
    		    def(12)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the maximum number of activation XIDs
                which will be sent before the Port is considered inoperable"
        DEFVAL	{ def }
        ::= { wfAppnNodePortEntry 20 }

    wfAppnNodePortNonActXidExchangeLimit OBJECT-TYPE
        SYNTAX	INTEGER {
    		    def(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the maximum number of non-activation XIDs
                which will be sent before the Port is considered inoperable"
        DEFVAL	{ def }
        ::= { wfAppnNodePortEntry 21 }

    wfAppnNodePortLsXmitRcvCap OBJECT-TYPE
        SYNTAX	INTEGER {
    		    tws(1),
    		    twa(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies if the Port can receive Two-Way Simultaneous or
                Two-Way Alternate"
        DEFVAL	{ tws }
        ::= { wfAppnNodePortEntry 22 }

    wfAppnNodePortTargetPacingCount OBJECT-TYPE
        SYNTAX	INTEGER(1..32767)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the target pacing count for BINDs on this Port"
        DEFVAL	{ 32 }
        ::= { wfAppnNodePortEntry 23 }

    wfAppnNodePortMaxSendBtuSize OBJECT-TYPE
        SYNTAX	INTEGER(256..4105)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the Maximum BTU Size which can be sent out this Port"
        DEFVAL	{ 2057 }
        ::= { wfAppnNodePortEntry 24 }

    wfAppnNodePortImplicitCpSessions OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies whether CP-CP sessions are permitted with implicit link stations
                on this Port"
        DEFVAL	{ yes }
        ::= { wfAppnNodePortEntry 25 }

    wfAppnNodePortImplicitLimResource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies whether implicit link stations on this Port should be defined as
                limited resources"
        DEFVAL	{ no }
        ::= { wfAppnNodePortEntry 26 }

    wfAppnNodePortImplicitEffCap OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The effective capacity is an integer value that indicates
                the kilo bits per second.
                It is derived from the link bandwidth and maximum load
                factor with the range of 0 thru 255.
                This is an administratively assigned value for use with TGs
                to implicit link stations on this Port.
                DEVIATION: 6611 mib uses range of 0 thru 603,979,776."
        DEFVAL	{ 133 }
        ::= { wfAppnNodePortEntry 27 }

    wfAppnNodePortImplicitConnCost OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Cost per connect time: a value representing
                the relative cost per unit of time to use
                the TG. Range is from 0, which means no cost,
                to 255, which indicates maximum cost.
                This is an administratively assigned value for use with TGs
                to implicit link stations on this Port."
        DEFVAL	{ 128 }
        ::= { wfAppnNodePortEntry 28 }

    wfAppnNodePortImplicitByteCost OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Relative cost of transmitting a byte over this link.
                Range is from 0 (lowest cost) to 255.
                This is an administratively assigned value for use with TGs
                to implicit link stations on this Port."
        DEFVAL	{ 128 }
        ::= { wfAppnNodePortEntry 29 }

    wfAppnNodePortImplicitSecurity OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The security is represented as an integer with a range of
                1 thru 255 with the most common values enumerated as
                defined above.
                This is an administratively assigned value for use with TGs
                to implicit link stations on this Port."
        DEFVAL	{ 1 }
        ::= { wfAppnNodePortEntry 30 }

    wfAppnNodePortImplicitDelay OBJECT-TYPE
        SYNTAX  INTEGER {
                negligible(1),
                terrestrial(2),
                packet(3),
                long(4),
                maximum(5)
                }
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Relative amount of time that it takes for a signal to
                travel the length of the logical link.
                This is an administratively assigned value for use with TGs
                to implicit link stations on this Port.
                DEVIATION: 6611 MIB, uses units of microseconds."
        DEFVAL  { negligible }
        ::= { wfAppnNodePortEntry 31 }

    wfAppnNodePortImplicitUsr1 OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "First user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value for use with TGs
                to implicit link stations on this Port."
        DEFVAL	{ 128 }
        ::= { wfAppnNodePortEntry 32 }

    wfAppnNodePortImplicitUsr2 OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Second user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value for use with TGs
                to implicit link stations on this Port."
        DEFVAL	{ 128 }
        ::= { wfAppnNodePortEntry 33 }

    wfAppnNodePortImplicitUsr3 OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Third user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value for use with TGs
                to implicit link stations on this Port."
        DEFVAL	{ 128 }
        ::= { wfAppnNodePortEntry 34 }

    wfAppnNodePortImplicitHprDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies if HPR can be used with implicit
                link stations on this Port"
        DEFVAL	{ disable }
        ::= { wfAppnNodePortEntry 35 }

    wfAppnNodePortImplicitHprLlErrorDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies if HPR Link-Level Error recovery is used on implicit
                link stations on this Port"
        DEFVAL	{ disable }
        ::= { wfAppnNodePortEntry 36 }

    wfAppnNodePortImplicitLinkDeactTime OBJECT-TYPE
        SYNTAX	INTEGER(5..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This indicates the time in seconds before implicit Link Stations on this Port
                will be deactivated if it is an HPR limited Resource."
        DEFVAL	{ 120 }
        ::= { wfAppnNodePortEntry 37 }

    wfAppnNodePortDlcData OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the local DLC address to be used by this port"
        ::= { wfAppnNodePortEntry 38 }

    wfAppnNodePortHprDlcData OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the HPR address to be used by this port"
        DEFVAL	{ 'c8'h }
        ::= { wfAppnNodePortEntry 39 }

    wfAppnNodeLsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnNodeLsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains detail information about
                link station configuration"
        ::= { wfAppnNode 4 }

    wfAppnNodeLsEntry OBJECT-TYPE
        SYNTAX	WfAppnNodeLsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfAppnNodePortTable.
                This table is indexed by the link station name"
        INDEX	{ wfAppnNodeLsName }
        ::= { wfAppnNodeLsTable 1 }

    WfAppnNodeLsEntry ::= SEQUENCE {
    	    wfAppnNodeLsDelete
    		INTEGER,
    	    wfAppnNodeLsDisable
    		INTEGER,
    	    wfAppnNodeLsName
    		DisplayString,
    	    wfAppnNodeLsPortName
    		DisplayString,
    	    wfAppnNodeLsState
    		INTEGER,
    	    wfAppnNodeLsCpName
    		DisplayString,
    	    wfAppnNodeLsTgNum
    		INTEGER,
    	    wfAppnNodeLsLimResource
    		INTEGER,
    	    wfAppnNodeLsMigration
    		INTEGER,
    	    wfAppnNodeLsBlockNum
    		DisplayString,
    	    wfAppnNodeLsIdNum
    		DisplayString,
    	    wfAppnNodeLsCpCpSession
    		INTEGER,
    	    wfAppnNodeLsTargetPacingCount
    		INTEGER,
    	    wfAppnNodeLsMaxSendBtuSize
    		INTEGER,
    	    wfAppnNodeLsEffCap
    		INTEGER,
    	    wfAppnNodeLsConnCost
    		INTEGER,
    	    wfAppnNodeLsByteCost
    		INTEGER,
    	    wfAppnNodeLsSecurity
    		INTEGER,
    	    wfAppnNodeLsDelay
    		INTEGER,
    	    wfAppnNodeLsUsr1
    		INTEGER,
    	    wfAppnNodeLsUsr2
    		INTEGER,
    	    wfAppnNodeLsUsr3
    		INTEGER,
    	    wfAppnNodeLsCpType
    		INTEGER,
    	    wfAppnNodeLsAutoActivateDisable
    		INTEGER,
    	    wfAppnNodeLsSolicitSscpSessionsDisable
    		INTEGER,
    	    wfAppnNodeLsUseDefaultTgChars
    		INTEGER,
    	    wfAppnNodeLsLinkData
    		OCTET STRING,
    	    wfAppnNodeLsDlurDisable
    		INTEGER,
    	    wfAppnNodeLsDspuName
    		DisplayString,
    	    wfAppnNodeLsDlusName
    		DisplayString,
    	    wfAppnNodeLsBackupDlusName
    		DisplayString,
    	    wfAppnNodeLsHprDisable
    		INTEGER,
    	    wfAppnNodeLsHprLlErrorDisable
    		INTEGER,
    	    wfAppnNodeLsLinkDeactTime
    		INTEGER
        }

    wfAppnNodeLsDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete a Link Station definition."
        DEFVAL	{ created }
        ::= { wfAppnNodeLsEntry 1 }

    wfAppnNodeLsDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this Link Station."
        DEFVAL	{ enable }
        ::= { wfAppnNodeLsEntry 2 }

    wfAppnNodeLsName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned name for the link station.
                The name can be from one to eight characters."
        ::= { wfAppnNodeLsEntry 3 }

    wfAppnNodeLsPortName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned name for the port.
                The name can be from one to eight characters."
        ::= { wfAppnNodeLsEntry 4 }

    wfAppnNodeLsState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    inactive(1),
    		    pendactive(2),
    		    active(3),
    		    pendinact(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "State of this link station."
        DEFVAL	{ inactive }
        ::= { wfAppnNodeLsEntry 5 }

    wfAppnNodeLsCpName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Fully-qualified name of the adjacent node for this link
                station.  The name can be from three to seventeen characters.
                Format is netid.cpname."
        ::= { wfAppnNodeLsEntry 6 }

    wfAppnNodeLsTgNum OBJECT-TYPE
        SYNTAX	INTEGER(1..20)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number associated with the TG to this link station.
                Range (  1 -  20) Predefined values for auto-activation"
        DEFVAL	{ 1 }
        ::= { wfAppnNodeLsEntry 7 }

    wfAppnNodeLsLimResource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the link station is
                a limited resource.  If it is, the TG
                is deactivated when there are no sessions."
        DEFVAL	{ no }
        ::= { wfAppnNodeLsEntry 8 }

    wfAppnNodeLsMigration OBJECT-TYPE
        SYNTAX	INTEGER {
    		    xid0(1),
    		    uplevel(2),
    		    xid3(3),
    		    noxid(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this link station will be used
                for connections to down-level or migration partners.
                            1 Indicates that this is a back-level node supporting XID0
                 protocols.
                            2 Indicates that this is an up-level node supporting XID3
                 protocols including the Network Name CV
                            3 Indicates that this is a back-level node supporting XID3
                 protocols (but does not include the Network Name CV)
                            4 Indicates that this is a back-level node which does not
                 support XID protocols. (This is valid on NONSWITCHED
                 ports, and is not valid on negotiable ports."
        DEFVAL	{ uplevel }
        ::= { wfAppnNodeLsEntry 9 }

    wfAppnNodeLsBlockNum OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The block number is the first three digits of the node_id.
                These 3 hexideimal digits identify the product and are not
                configurable."
        ::= { wfAppnNodeLsEntry 10 }

    wfAppnNodeLsIdNum OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The ID number is the last 5 digits of the node_id.
                These 5 hexadecimal digits are administratively defined and
                combined with the 3 digit block number form the node_id.
                This node_id is used to identify the local node and is include
                in APPN alerts as well as being included in XIDs.  A unique
                value is required for connections to SNA sub-area."
        ::= { wfAppnNodeLsEntry 11 }

    wfAppnNodeLsCpCpSession OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether CP-CP sessions are
                supported by this link station."
        DEFVAL	{ yes }
        ::= { wfAppnNodeLsEntry 12 }

    wfAppnNodeLsTargetPacingCount OBJECT-TYPE
        SYNTAX	INTEGER(0..32767)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Numeric value between 0 and 32767 inclusive indicating
                the desired pacing window size for BINDs on this TG.
                The number is significant only when fixed bind pacing
                is being performed."
        DEFVAL	{ 4 }
        ::= { wfAppnNodeLsEntry 13 }

    wfAppnNodeLsMaxSendBtuSize OBJECT-TYPE
        SYNTAX	INTEGER(0..4105)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Numeric value between 0 and 32767 inclusive indicating
                the desired number of bytes in a Basic Transmission Unit
                (BTU) that can be sent on this TG.
                This is an administratively assigned value."
        DEFVAL	{ 2057 }
        ::= { wfAppnNodeLsEntry 14 }

    wfAppnNodeLsEffCap OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The effective capacity is an integer value that indicates
                the kilo bits per second.
                It is derived from the link bandwidth and maximum load
                factor with the range of 0 thru 255.
                This is an administratively assigned value for use with this TG.
                DEVIATION: 6611 mib uses range of 0 thru 603,979,776."
        DEFVAL	{ 133 }
        ::= { wfAppnNodeLsEntry 15 }

    wfAppnNodeLsConnCost OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Cost per connect time: a value representing
                the relative cost per unit of time to use
                the TG. Range is from 0, which means no cost,
                to 255, which indicates maximum cost.
                This is an administratively assigned value associated
                with the TG using this link station."
        DEFVAL	{ 128 }
        ::= { wfAppnNodeLsEntry 16 }

    wfAppnNodeLsByteCost OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Relative cost of transmitting a byte over this link.
                Range is from 0 (lowest cost) to 255.
                This is an administratively assigned value associated
                with the TG using this link station."
        DEFVAL	{ 128 }
        ::= { wfAppnNodeLsEntry 17 }

    wfAppnNodeLsSecurity OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The security is represented as an integer with a range of
                1 thru 255 with the most common values enumerated as
                defined above.
                This is an administratively assigned value associated
                with the TG using this link station."
        DEFVAL	{ 1 }
        ::= { wfAppnNodeLsEntry 18 }

    wfAppnNodeLsDelay OBJECT-TYPE
        SYNTAX  INTEGER {
                negligible(1),
                terrestrial(2),
                packet(3),
                long(4),
                maximum(5)
                }
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Relative amount of time that it takes for a signal to
                travel the length of the logical link.
                This is an administratively assigned value associated
                with the TG using this link station.
                DEVIATION: 6611 MIB, uses units of microseconds."
        DEFVAL  { negligible }
        ::= { wfAppnNodeLsEntry 19 }

    wfAppnNodeLsUsr1 OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "First user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value associated
                with the TG using this link station."
        DEFVAL	{ 128 }
        ::= { wfAppnNodeLsEntry 20 }

    wfAppnNodeLsUsr2 OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Second user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value associated
                with the TG using this link station."
        DEFVAL	{ 128 }
        ::= { wfAppnNodeLsEntry 21 }

    wfAppnNodeLsUsr3 OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Third user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value associated
                with the TG using this link station."
        DEFVAL	{ 128 }
        ::= { wfAppnNodeLsEntry 22 }

    wfAppnNodeLsCpType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    learn(1),
    		    nn(2),
    		    en(3),
                bllen(4),
                hostxid3(5),
                hostxid0(6),
                dspuxid(7),
                dspunoxid(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the APPN Node type of Link Station"
        DEFVAL	{ learn }
        ::= { wfAppnNodeLsEntry 23 }

    wfAppnNodeLsAutoActivateDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies if the link should be automatically activated
                when the Port becomes active.  Should be disabled if CP-CP sessions
                are enabled."
        DEFVAL	{ disable }
        ::= { wfAppnNodeLsEntry 24 }

    wfAppnNodeLsSolicitSscpSessionsDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies if SSCP Sessions should be solicited from this
                Link Station"
        DEFVAL	{ disable }
        ::= { wfAppnNodeLsEntry 25 }

    wfAppnNodeLsUseDefaultTgChars OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the default TG characteristics specified
                for the Port should be used for this link station, or if explicit
                TG characteristics will be supplied."
        DEFVAL	{ yes }
        ::= { wfAppnNodeLsEntry 26 }

    wfAppnNodeLsLinkData OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "this for Link Address (MAC/SAP, SDLC Address)"
        ::= { wfAppnNodeLsEntry 27 }

    wfAppnNodeLsDlurDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies if the adjacent Link Station is a node to be serviced by DLUR."
        DEFVAL	{ disable }
        ::= { wfAppnNodeLsEntry 28 }

    wfAppnNodeLsDspuName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "8-byte name of the downstream PU supported by DLUR."
        ::= { wfAppnNodeLsEntry 29 }

    wfAppnNodeLsDlusName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Fully-qualified name of the DLUS node which will serve this DLUR
                Link Station."
        ::= { wfAppnNodeLsEntry 30 }

    wfAppnNodeLsBackupDlusName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Fully-qualified name of the backup DLUS node which may serve this DLUR
                Link Station."
        ::= { wfAppnNodeLsEntry 31 }

    wfAppnNodeLsHprDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies if HPR is supported on this Link Station"
        DEFVAL	{ disable }
        ::= { wfAppnNodeLsEntry 32 }

    wfAppnNodeLsHprLlErrorDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies if HPR Link-Level Error recovery is used on this
                Link Station"
        DEFVAL	{ disable }
        ::= { wfAppnNodeLsEntry 33 }

    wfAppnNodeLsLinkDeactTime OBJECT-TYPE
        SYNTAX	INTEGER(5..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This indicates the time in seconds before this Link Station will be deactivated
                if it is an HPR limited Resource."
        DEFVAL	{ 120 }
        ::= { wfAppnNodeLsEntry 34 }

    wfAppnNodeLsStatusTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnNodeLsStatusEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains detailed status information about link stations"
        ::= { wfAppnNode 5 }

    wfAppnNodeLsStatusEntry OBJECT-TYPE
        SYNTAX	WfAppnNodeLsStatusEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfAppnNodeLsStatusTable.
                This table is indexed by the link station name"
        INDEX	{ wfAppnNodeLsStatusName }
        ::= { wfAppnNodeLsStatusTable 1 }

    WfAppnNodeLsStatusEntry ::= SEQUENCE {
    	    wfAppnNodeLsStatusName
    		DisplayString,
    	    wfAppnNodeLsStatusPortName
    		DisplayString,
    	    wfAppnNodeLsStatusDlcType
    		INTEGER,
    	    wfAppnNodeLsStatusDynamic
    		INTEGER,
    	    wfAppnNodeLsStatusState
    		INTEGER,
    	    wfAppnNodeLsStatusCpName
    		DisplayString,
    	    wfAppnNodeLsStatusTgNum
    		INTEGER,
    	    wfAppnNodeLsStatusLimResource
    		INTEGER,
    	    wfAppnNodeLsStatusMigration
    		INTEGER,
    	    wfAppnNodeLsStatusBlockNum
    		DisplayString,
    	    wfAppnNodeLsStatusIdNum
    		DisplayString,
    	    wfAppnNodeLsStatusCpCpSession
    		INTEGER,
    	    wfAppnNodeLsStatusTargetPacingCount
    		INTEGER,
    	    wfAppnNodeLsStatusMaxSendBtuSize
    		INTEGER,
    	    wfAppnNodeLsStatusEffCap
    		INTEGER,
    	    wfAppnNodeLsStatusConnCost
    		INTEGER,
    	    wfAppnNodeLsStatusByteCost
    		INTEGER,
    	    wfAppnNodeLsStatusSecurity
    		INTEGER,
    	    wfAppnNodeLsStatusDelay
    		INTEGER,
    	    wfAppnNodeLsStatusUsr1
    		INTEGER,
    	    wfAppnNodeLsStatusUsr2
    		INTEGER,
    	    wfAppnNodeLsStatusUsr3
    		INTEGER,
    	    wfAppnNodeLsStatusInXidBytes
    		Counter,
    	    wfAppnNodeLsStatusInMsgBytes
    		Counter,
    	    wfAppnNodeLsStatusInXidFrames
    		Counter,
    	    wfAppnNodeLsStatusInMsgFrames
    		Counter,
    	    wfAppnNodeLsStatusOutXidBytes
    		Counter,
    	    wfAppnNodeLsStatusOutMsgBytes
    		Counter,
    	    wfAppnNodeLsStatusOutXidFrames
    		Counter,
    	    wfAppnNodeLsStatusOutMsgFrames
    		Counter,
    	    wfAppnNodeLsStatusEchoRsps
    		Counter,
    	    wfAppnNodeLsStatusCurrentDelay
    		INTEGER,
    	    wfAppnNodeLsStatusMaxDelay
    		INTEGER,
    	    wfAppnNodeLsStatusMinDelay
    		INTEGER,
    	    wfAppnNodeLsStatusMaxDelayTime
    		INTEGER,
    	    wfAppnNodeLsStatusGoodXids
    		Counter,
    	    wfAppnNodeLsStatusBadXids
    		Counter,
    	    wfAppnNodeLsStatusActiveSessions
    		INTEGER,
    	    wfAppnNodeLsStatusInvalidSnaFrames
    		Counter,
    	    wfAppnNodeLsStatusInScFrames
    		Counter,
    	    wfAppnNodeLsStatusOutScFrames
    		Counter,
    	    wfAppnNodeLsStatusCpType
    		INTEGER,
    	    wfAppnNodeLsStatusStartTime
    		INTEGER,
    	    wfAppnNodeLsStatusStopTime
    		INTEGER,
    	    wfAppnNodeLsStatusUpTime
    		INTEGER,
    	    wfAppnNodeLsStatusDeactCause
    		INTEGER,
    	    wfAppnNodeLsStatusHprSupport
    		INTEGER,
    	    wfAppnNodeLsStatusHprLlErrSupport
    		INTEGER,
    	    wfAppnNodeLsStatusAnrLabel
    		INTEGER,
    	    wfAppnNodeLsStatusLinkData
    		OCTET STRING
        }

    wfAppnNodeLsStatusName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned name for the link station.
                The name can be from one to eight characters."
        ::= { wfAppnNodeLsStatusEntry 1 }

    wfAppnNodeLsStatusPortName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned name for the port.
                The name can be from one to eight characters."
        ::= { wfAppnNodeLsStatusEntry 2 }

    wfAppnNodeLsStatusDlcType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    sdlc(2),
    		    dls(3),
    		    socket(4),
    		    ethernet(5),
    		    tokenring(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The type of DLC interface, distinguished according to
                the protocol immediately 'below' this layer."
        ::= { wfAppnNodeLsStatusEntry 3 }

    wfAppnNodeLsStatusDynamic OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies whether this resource is a dynamic link station.
                Dynamic link stations are created when adjacent nodes
                that have not been locally defined establish a connection
                with this node."
        ::= { wfAppnNodeLsStatusEntry 4 }

    wfAppnNodeLsStatusState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    inactive(1),
    		    pendactive(2),
    		    active(3),
    		    pendinact(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "State of this link station."
        ::= { wfAppnNodeLsStatusEntry 5 }

    wfAppnNodeLsStatusCpName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fully-qualified name of the adjacent node for this link
                station.  The name can be from three to seventeen characters.
                Format is netid.cpname."
        ::= { wfAppnNodeLsStatusEntry 6 }

    wfAppnNodeLsStatusTgNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number associated with the TG to this link station."
        ::= { wfAppnNodeLsStatusEntry 7 }

    wfAppnNodeLsStatusLimResource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the link station is
                a limited resource.  If it is, the TG
                is deactivated when there are no sessions."
        ::= { wfAppnNodeLsStatusEntry 8 }

    wfAppnNodeLsStatusMigration OBJECT-TYPE
        SYNTAX	INTEGER {
    		    xid0(1),
    		    uplevel(2),
    		    xid3(3),
    		    noxid(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this link station will be used
                for connections to down-level or migration partners.
                1 Indicates that this is a back-level node supporting XID0
                  protocols.
                2 Indicates that this is an up-level node supporting XID3
                  protocols including the Network Name CV
                3 Indicates that this is a back-level node supporting XID3
                  protocols (but does not include the Network Name CV)
                4 Indicates that this is a back-level node which does not
                  support XID protocols. (This is valid on NONSWITCHED
                  ports, and is not valid on negotiable ports."
        ::= { wfAppnNodeLsStatusEntry 9 }

    wfAppnNodeLsStatusBlockNum OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The block number is the first three digits of the node_id.
                These 3 hexideimal digits identify the product and are not
                configurable."
        ::= { wfAppnNodeLsStatusEntry 10 }

    wfAppnNodeLsStatusIdNum OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ID number is the last 5 digits of the node_id.
                These 5 hexadecimal digits are administratively defined and
                combined with the 3 digit block number form the node_id.
                This node_id is used to identify the local node and is include
                in APPN alerts as well as being included in XIDs.  A unique
                value is required for connections to SNA sub-area."
        ::= { wfAppnNodeLsStatusEntry 11 }

    wfAppnNodeLsStatusCpCpSession OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether CP-CP sessions are
                supported by this link station."
        ::= { wfAppnNodeLsStatusEntry 12 }

    wfAppnNodeLsStatusTargetPacingCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Numeric value between 0 and 32767 inclusive indicating
                the desired pacing window size for BINDs on this TG.
                The number is significant only when fixed bind pacing
                is being performed."
        ::= { wfAppnNodeLsStatusEntry 13 }

    wfAppnNodeLsStatusMaxSendBtuSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Numeric value between 0 and 32767 inclusive indicating
                the desired number of bytes in a Basic Transmission Unit
                (BTU) that can be sent on this TG.
                This is an administratively assigned value."
        ::= { wfAppnNodeLsStatusEntry 14 }

    wfAppnNodeLsStatusEffCap OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The effective capacity is an integer value that indicates
                the kilo bits per second.
                It is derived from the link bandwidth and maximum load
                factor with the range of 0 thru 255.
                This is an administratively assigned value for use with this TG.
                DEVIATION: 6611 mib uses range of 0 thru 603,979,776."
        ::= { wfAppnNodeLsStatusEntry 15 }

    wfAppnNodeLsStatusConnCost OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Cost per connect time: a value representing
                the relative cost per unit of time to use
                the TG. Range is from 0, which means no cost,
                to 255, which indicates maximum cost.
                This is an administratively assigned value associated
                with the TG using this link station."
        ::= { wfAppnNodeLsStatusEntry 16 }

    wfAppnNodeLsStatusByteCost OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Relative cost of transmitting a byte over this link.
                Range is from 0 (lowest cost) to 255.
                This is an administratively assigned value associated
                with the TG using this link station."
        ::= { wfAppnNodeLsStatusEntry 17 }

    wfAppnNodeLsStatusSecurity OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The security is represented as an integer with a range of
                1 thru 255 with the most common values enumerated as
                defined above.
                This is an administratively assigned value associated
                with the TG using this link station."
        ::= { wfAppnNodeLsStatusEntry 18 }

    wfAppnNodeLsStatusDelay OBJECT-TYPE
        SYNTAX  INTEGER {
                negligible(1),
                terrestrial(2),
                packet(3),
                long(4),
                maximum(5)
                }
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Relative amount of time that it takes for a signal to
                travel the length of the logical link.
                This is an administratively assigned value associated
                with the TG using this link station.
                DEVIATION: 6611 MIB, uses units of microseconds."
        DEFVAL  { negligible }
        ::= { wfAppnNodeLsStatusEntry 19 }

    wfAppnNodeLsStatusUsr1 OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "First user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value associated
                with the TG using this link station."
        ::= { wfAppnNodeLsStatusEntry 20 }

    wfAppnNodeLsStatusUsr2 OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Second user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value associated
                with the TG using this link station."
        ::= { wfAppnNodeLsStatusEntry 21 }

    wfAppnNodeLsStatusUsr3 OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Third user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value associated
                with the TG using this link station."
        ::= { wfAppnNodeLsStatusEntry 22 }

    wfAppnNodeLsStatusInXidBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of XID bytes received."
        ::= { wfAppnNodeLsStatusEntry 23 }

    wfAppnNodeLsStatusInMsgBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of message (I-frame) bytes received."
        ::= { wfAppnNodeLsStatusEntry 24 }

    wfAppnNodeLsStatusInXidFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of XID frames received."
        ::= { wfAppnNodeLsStatusEntry 25 }

    wfAppnNodeLsStatusInMsgFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of message (I-frame) frames received."
        ::= { wfAppnNodeLsStatusEntry 26 }

    wfAppnNodeLsStatusOutXidBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of XID bytes sent."
        ::= { wfAppnNodeLsStatusEntry 27 }

    wfAppnNodeLsStatusOutMsgBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of message (I-frame) bytes sent."
        ::= { wfAppnNodeLsStatusEntry 28 }

    wfAppnNodeLsStatusOutXidFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of XID frames sent."
        ::= { wfAppnNodeLsStatusEntry 29 }

    wfAppnNodeLsStatusOutMsgFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of message (I-frame) frames sent."
        ::= { wfAppnNodeLsStatusEntry 30 }

    wfAppnNodeLsStatusEchoRsps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of responses returned from adjacent link station.
                A response should be returned for each test frame sent by
                this node.
                Test frames are sent to adjacent nodes periodically to
                verify connectivity and to measure that actual round trip
                time, that is the time the test frame is sent until the
                response is received."
        ::= { wfAppnNodeLsStatusEntry 31 }

    wfAppnNodeLsStatusCurrentDelay OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The time that it took for the last test signal to be
                sent and returned from this link station to the
                adjacent links station.
                This time is represented in milliseconds."
        ::= { wfAppnNodeLsStatusEntry 32 }

    wfAppnNodeLsStatusMaxDelay OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The longest time it took for a test signal
                to be sent and returned from this link station to the
                adjacent links station.
                This time is represented in milliseconds ."
        ::= { wfAppnNodeLsStatusEntry 33 }

    wfAppnNodeLsStatusMinDelay OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The shortest time it took for a test signal
                to be sent and returned from this link station to the
                adjacent links station.
                This time is represented in milliseconds."
        ::= { wfAppnNodeLsStatusEntry 34 }

    wfAppnNodeLsStatusMaxDelayTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The time (since system up in hundredth of seconds)
                when the longest delay occurred.
                This time can be used to identify when this high
                water mark occurred in relation to the last initialization
                of the APPN node."
        ::= { wfAppnNodeLsStatusEntry 35 }

    wfAppnNodeLsStatusGoodXids OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of successful XIDs that have occurred
                on this link station since the time it was started."
        ::= { wfAppnNodeLsStatusEntry 36 }

    wfAppnNodeLsStatusBadXids OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of unsuccessful XIDs that have occurred
                on this link station since the time it was started."
        ::= { wfAppnNodeLsStatusEntry 37 }

    wfAppnNodeLsStatusActiveSessions OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Active Sessions (Endpoint and ISR) using this Link Station."
        ::= { wfAppnNodeLsStatusEntry 38 }

    wfAppnNodeLsStatusInvalidSnaFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Invalid SNA Frames received from this Link Station."
        ::= { wfAppnNodeLsStatusEntry 39 }

    wfAppnNodeLsStatusInScFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Session Control frames received from this Link Station."
        ::= { wfAppnNodeLsStatusEntry 40 }

    wfAppnNodeLsStatusOutScFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Session Control frames sent to the Link Station."
        ::= { wfAppnNodeLsStatusEntry 41 }

    wfAppnNodeLsStatusCpType OBJECT-TYPE
        SYNTAX	INTEGER {
                learn(1),
    		    nn(2),
    		    en(3),
                bllen(4),
                hostxid3(5),
                hostxid0(6),
                dspuxid(7),
                dspunoxid(8)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This specifies the APPN Node type of Link Station"
        ::= { wfAppnNodeLsStatusEntry 42 }

    wfAppnNodeLsStatusStartTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time since system startup (in hundreths of seconds)
                when Link Station was activated."
        ::= { wfAppnNodeLsStatusEntry 43 }

    wfAppnNodeLsStatusStopTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time since system startup (in hundreths of seconds)
                when Link Station was deactivated."
        ::= { wfAppnNodeLsStatusEntry 44 }

    wfAppnNodeLsStatusUpTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time (in hundreths of seconds) that this Link Station has been up."
        ::= { wfAppnNodeLsStatusEntry 45 }

    wfAppnNodeLsStatusDeactCause OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Deactivation Cause"
        ::= { wfAppnNodeLsStatusEntry 46 }

    wfAppnNodeLsStatusHprSupport OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates if HPR is supported by this Link Station"
        ::= { wfAppnNodeLsStatusEntry 47 }

    wfAppnNodeLsStatusHprLlErrSupport OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates if HPR Link-level Error recovery is supported
                by this Link Station"
        ::= { wfAppnNodeLsStatusEntry 48 }

    wfAppnNodeLsStatusAnrLabel OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ANR Label of this Link Station"
        ::= { wfAppnNodeLsStatusEntry 49 }

    wfAppnNodeLsStatusLinkData OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Link Address, e.g.Mac Address/SAP"
        ::= { wfAppnNodeLsStatusEntry 50 }

    wfAppnNodeCnTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnNodeCnEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This Table contains entries for each configured Connection Network"
        ::= { wfAppnNode 6 }

    wfAppnNodeCnEntry OBJECT-TYPE
        SYNTAX	WfAppnNodeCnEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfAppnNodeCnTable."
        INDEX	{ wfAppnNodeCnFqName }
        ::= { wfAppnNodeCnTable 1 }

    WfAppnNodeCnEntry ::= SEQUENCE {
    	    wfAppnNodeCnDelete
    		INTEGER,
    	    wfAppnNodeCnDisable
    		INTEGER,
    	    wfAppnNodeCnFqName
    		DisplayString,
    	    wfAppnNodeCnState
    		INTEGER,
    	    wfAppnNodeCnEffCap
    		INTEGER,
    	    wfAppnNodeCnConnCost
    		INTEGER,
    	    wfAppnNodeCnByteCost
    		INTEGER,
    	    wfAppnNodeCnSecurity
    		INTEGER,
    	    wfAppnNodeCnDelay
    		INTEGER,
    	    wfAppnNodeCnUsr1
    		INTEGER,
    	    wfAppnNodeCnUsr2
    		INTEGER,
    	    wfAppnNodeCnUsr3
    		INTEGER
        }

    wfAppnNodeCnDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete a Connection
                Network definition."
        DEFVAL	{ created }
        ::= { wfAppnNodeCnEntry 1 }

    wfAppnNodeCnDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this Connection Network."
        DEFVAL	{ enable }
        ::= { wfAppnNodeCnEntry 2 }

    wfAppnNodeCnFqName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Fully-qualified name of the Connection Network"
        ::= { wfAppnNodeCnEntry 3 }

    wfAppnNodeCnState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    inactive(1),
    		    pendactive(2),
    		    active(3),
    		    pendinact(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "State of this connection network."
        DEFVAL	{ inactive }
        ::= { wfAppnNodeCnEntry 4 }

    wfAppnNodeCnEffCap OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The effective capacity is an integer value that indicates
                the kilo bits per second.
                It is derived from the link bandwidth and maximum load
                factor with the range of 0 thru 255.
                This is an administratively assigned value for use with this
                connection network.
                DEVIATION: 6611 mib uses range of 0 thru 603,979,776."
        DEFVAL	{ 133 }
        ::= { wfAppnNodeCnEntry 5 }

    wfAppnNodeCnConnCost OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Cost per connect time: a value representing
                the relative cost per unit of time to use
                the TG. Range is from 0, which means no cost,
                to 255, which indicates maximum cost.
                This is an administratively assigned value associated
                with the TG using this link station."
        DEFVAL	{ 128 }
        ::= { wfAppnNodeCnEntry 6 }

    wfAppnNodeCnByteCost OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Relative cost of transmitting a byte over this link.
                Range is from 0 (lowest cost) to 255.
                This is an administratively assigned value associated
                with the TG using this link station."
        DEFVAL	{ 128 }
        ::= { wfAppnNodeCnEntry 7 }

    wfAppnNodeCnSecurity OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The security is represented as an integer with a range of
                1 thru 255 with the most common values enumerated as
                defined above.
                This is an administratively assigned value associated
                with the TG using this link station."
        DEFVAL	{ 1 }
        ::= { wfAppnNodeCnEntry 8 }

    wfAppnNodeCnDelay OBJECT-TYPE
        SYNTAX  INTEGER {
                negligible(1),
                terrestrial(2),
                packet(3),
                long(4),
                maximum(5)
                }
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Relative amount of time that it takes for a signal to
                travel the length of the logical link.
                This is an administratively assigned value associated
                with this connection network.
                DEVIATION: 6611 MIB, uses units of microseconds."
        DEFVAL  { negligible }
        ::= { wfAppnNodeCnEntry 9 }

    wfAppnNodeCnUsr1 OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "First user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value associated
                with the TG using this link station."
        DEFVAL	{ 128 }
        ::= { wfAppnNodeCnEntry 10 }

    wfAppnNodeCnUsr2 OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Second user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value associated
                with the TG using this link station."
        DEFVAL	{ 128 }
        ::= { wfAppnNodeCnEntry 11 }

    wfAppnNodeCnUsr3 OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Third user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value associated
                with the TG using this link station."
        DEFVAL	{ 128 }
        ::= { wfAppnNodeCnEntry 12 }

    wfAppnNodeCnPortTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnNodeCnPortEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table containing an entry for every Port associated
                with a connection network."
        ::= { wfAppnNode 7 }

    wfAppnNodeCnPortEntry OBJECT-TYPE
        SYNTAX	WfAppnNodeCnPortEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "an entry in wfAppnNodeCnPortTable"
        INDEX	{ wfAppnNodeCnPortCnName,
    		  wfAppnNodeCnPortPortName }
        ::= { wfAppnNodeCnPortTable 1 }

    WfAppnNodeCnPortEntry ::= SEQUENCE {
    	    wfAppnNodeCnPortDelete
    		INTEGER,
    	    wfAppnNodeCnPortDisable
    		INTEGER,
    	    wfAppnNodeCnPortCnName
    		DisplayString,
    	    wfAppnNodeCnPortPortName
    		DisplayString,
    	    wfAppnNodeCnPortState
    		INTEGER
        }

    wfAppnNodeCnPortDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete a Connection
                Network Port instance."
        DEFVAL	{ created }
        ::= { wfAppnNodeCnPortEntry 1 }

    wfAppnNodeCnPortDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this Connection Network Port."
        DEFVAL	{ enable }
        ::= { wfAppnNodeCnPortEntry 2 }

    wfAppnNodeCnPortCnName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The name of the cn."
        ::= { wfAppnNodeCnPortEntry 3 }

    wfAppnNodeCnPortPortName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The name of the port.  FIX to READ_ONLY"
        ::= { wfAppnNodeCnPortEntry 4 }

    wfAppnNodeCnPortState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    inactive(1),
    		    pendactive(2),
    		    active(3),
    		    pendinact(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "State of this connection network."
        DEFVAL	{ inactive }
        ::= { wfAppnNodeCnPortEntry 5 }

    wfAppnNodeIsrSessionTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnNodeIsrSessionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains entries for every session that is currently
                being routed by this Node"
        ::= { wfAppnNode 8 }

    wfAppnNodeIsrSessionEntry OBJECT-TYPE
        SYNTAX	WfAppnNodeIsrSessionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The fqpcid is the index for this table."
        INDEX	{ wfAppnNodeIsrSessionPcid,
    		  wfAppnNodeIsrSessionFqCpName }
        ::= { wfAppnNodeIsrSessionTable 1 }

    WfAppnNodeIsrSessionEntry ::= SEQUENCE {
    	    wfAppnNodeIsrSessionPcid
    		OCTET STRING,
    	    wfAppnNodeIsrSessionFqCpName
    		DisplayString,
    	    wfAppnNodeIsrSessionTransPriority
    		INTEGER,
    	    wfAppnNodeIsrSessionCos
    		DisplayString,
    	    wfAppnNodeIsrSessionLimResource
    		INTEGER,
    	    wfAppnNodeIsrSessionRscv
    		OCTET STRING,
    	    wfAppnNodeIsrSessionPriSendRuSize
    		INTEGER,
    	    wfAppnNodeIsrSessionPriRcvRuSize
    		INTEGER,
    	    wfAppnNodeIsrSessionPriMaxSendBtuSize
    		INTEGER,
    	    wfAppnNodeIsrSessionPriMaxRcvBtuSize
    		INTEGER,
    	    wfAppnNodeIsrSessionPriMaxSendPacing
    		INTEGER,
    	    wfAppnNodeIsrSessionPriCurSendPacing
    		INTEGER,
    	    wfAppnNodeIsrSessionPriMaxRcvPacing
    		INTEGER,
    	    wfAppnNodeIsrSessionPriCurRcvPacing
    		INTEGER,
    	    wfAppnNodeIsrSessionPriSendFrames
    		Counter,
    	    wfAppnNodeIsrSessionPriSendBytes
    		Counter,
    	    wfAppnNodeIsrSessionPriSendFmdFrames
    		Counter,
    	    wfAppnNodeIsrSessionPriRcvFrames
    		Counter,
    	    wfAppnNodeIsrSessionPriRcvBytes
    		Counter,
    	    wfAppnNodeIsrSessionPriRcvFmdFrames
    		Counter,
    	    wfAppnNodeIsrSessionPriSidh
    		INTEGER,
    	    wfAppnNodeIsrSessionPriSidl
    		INTEGER,
    	    wfAppnNodeIsrSessionPriOdai
    		INTEGER,
    	    wfAppnNodeIsrSessionPriLsName
    		DisplayString,
    	    wfAppnNodeIsrSessionSecSendRuSize
    		INTEGER,
    	    wfAppnNodeIsrSessionSecRcvRuSize
    		INTEGER,
    	    wfAppnNodeIsrSessionSecMaxSendBtuSize
    		INTEGER,
    	    wfAppnNodeIsrSessionSecMaxRcvBtuSize
    		INTEGER,
    	    wfAppnNodeIsrSessionSecMaxSendPacing
    		INTEGER,
    	    wfAppnNodeIsrSessionSecCurSendPacing
    		INTEGER,
    	    wfAppnNodeIsrSessionSecMaxRcvPacing
    		INTEGER,
    	    wfAppnNodeIsrSessionSecCurRcvPacing
    		INTEGER,
    	    wfAppnNodeIsrSessionSecSendFrames
    		Counter,
    	    wfAppnNodeIsrSessionSecSendBytes
    		Counter,
    	    wfAppnNodeIsrSessionSecSendFmdFrames
    		Counter,
    	    wfAppnNodeIsrSessionSecRcvFrames
    		Counter,
    	    wfAppnNodeIsrSessionSecRcvBytes
    		Counter,
    	    wfAppnNodeIsrSessionSecRcvFmdFrames
    		Counter,
    	    wfAppnNodeIsrSessionSecSidh
    		INTEGER,
    	    wfAppnNodeIsrSessionSecSidl
    		INTEGER,
    	    wfAppnNodeIsrSessionSecOdai
    		INTEGER,
    	    wfAppnNodeIsrSessionSecLsName
    		DisplayString,
    	    wfAppnNodeIsrSessionRscvText
    		DisplayString
        }

    wfAppnNodeIsrSessionPcid OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the PCID of this session"
        ::= { wfAppnNodeIsrSessionEntry 1 }

    wfAppnNodeIsrSessionFqCpName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the Fully-qualified CP name of the node assigning the
                PCID for this session"
        ::= { wfAppnNodeIsrSessionEntry 2 }

    wfAppnNodeIsrSessionTransPriority OBJECT-TYPE
        SYNTAX	INTEGER {
    		    low(1),
    		    medium(2),
    		    high(3),
    		    network(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the transmission priority being used by this session"
        ::= { wfAppnNodeIsrSessionEntry 3 }

    wfAppnNodeIsrSessionCos OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the Class-of-Service being used by this session"
        ::= { wfAppnNodeIsrSessionEntry 4 }

    wfAppnNodeIsrSessionLimResource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates if this session is traversing a Limited Resource"
        ::= { wfAppnNodeIsrSessionEntry 5 }

    wfAppnNodeIsrSessionRscv OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the Route Selection Control Vector in use by this session"
        ::= { wfAppnNodeIsrSessionEntry 6 }

    wfAppnNodeIsrSessionPriSendRuSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the send RU size used on the primary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 7 }

    wfAppnNodeIsrSessionPriRcvRuSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the receive RU size used on the primary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 8 }

    wfAppnNodeIsrSessionPriMaxSendBtuSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum send BTU size on the primary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 9 }

    wfAppnNodeIsrSessionPriMaxRcvBtuSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum receive BTU size on the primary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 10 }

    wfAppnNodeIsrSessionPriMaxSendPacing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum send pacing on the primary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 11 }

    wfAppnNodeIsrSessionPriCurSendPacing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the current send pacing on the primary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 12 }

    wfAppnNodeIsrSessionPriMaxRcvPacing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum receive pacing on the primary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 13 }

    wfAppnNodeIsrSessionPriCurRcvPacing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the current receive pacing on the primary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 14 }

    wfAppnNodeIsrSessionPriSendFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of Normal-flow frames sent on the primary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 15 }

    wfAppnNodeIsrSessionPriSendBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of bytes sent on the primary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 16 }

    wfAppnNodeIsrSessionPriSendFmdFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of FMD frames sent on the primary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 17 }

    wfAppnNodeIsrSessionPriRcvFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of Normal-flow frames received on the primary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 18 }

    wfAppnNodeIsrSessionPriRcvBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of bytes received on the primary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 19 }

    wfAppnNodeIsrSessionPriRcvFmdFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of FMD frames received on the primary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 20 }

    wfAppnNodeIsrSessionPriSidh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the SIDH value used on the primary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 21 }

    wfAppnNodeIsrSessionPriSidl OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the SIDL value used on the primary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 22 }

    wfAppnNodeIsrSessionPriOdai OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the ODAI value used on the primary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 23 }

    wfAppnNodeIsrSessionPriLsName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the adjacent Link Station used on the primary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 24 }

    wfAppnNodeIsrSessionSecSendRuSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the send RU size used on the secondary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 25 }

    wfAppnNodeIsrSessionSecRcvRuSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the receive RU size used on the secondary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 26 }

    wfAppnNodeIsrSessionSecMaxSendBtuSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum send BTU size on the secondary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 27 }

    wfAppnNodeIsrSessionSecMaxRcvBtuSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum receive BTU size on the secondary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 28 }

    wfAppnNodeIsrSessionSecMaxSendPacing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum send pacing on the secondary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 29 }

    wfAppnNodeIsrSessionSecCurSendPacing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the current send pacing on the secondary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 30 }

    wfAppnNodeIsrSessionSecMaxRcvPacing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum receive pacing on the secondary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 31 }

    wfAppnNodeIsrSessionSecCurRcvPacing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the current receive pacing on the secondary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 32 }

    wfAppnNodeIsrSessionSecSendFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of Normal-flow frames sent on the secondary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 33 }

    wfAppnNodeIsrSessionSecSendBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of bytes sent on the secondary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 34 }

    wfAppnNodeIsrSessionSecSendFmdFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of FMD frames sent on the secondary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 35 }

    wfAppnNodeIsrSessionSecRcvFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of Normal-flow frames received on the secondary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 36 }

    wfAppnNodeIsrSessionSecRcvBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of bytes received on the secondary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 37 }

    wfAppnNodeIsrSessionSecRcvFmdFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of FMD frames received on the secondary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 38 }

    wfAppnNodeIsrSessionSecSidh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the SIDH value used on the secondary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 39 }

    wfAppnNodeIsrSessionSecSidl OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the SIDL value used on the secondary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 40 }

    wfAppnNodeIsrSessionSecOdai OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the ODAI value used on the secondary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 41 }

    wfAppnNodeIsrSessionSecLsName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the adjacent Link Station used on the secondary hop of this session"
        ::= { wfAppnNodeIsrSessionEntry 42 }

    wfAppnNodeIsrSessionRscvText OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the Route Selection Control Vector in use by this session, in a DSP_STR format"
        ::= { wfAppnNodeIsrSessionEntry 43 }

    wfAppnNodeEndptSessionTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnNodeEndptSessionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains entries for every endpoint session that is currently
                active on this Node"
        ::= { wfAppnNode 9 }

    wfAppnNodeEndptSessionEntry OBJECT-TYPE
        SYNTAX	WfAppnNodeEndptSessionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The fqpcid is the index for this table."
        INDEX	{ wfAppnNodeEndptSessionId,
    		  wfAppnNodeEndptSessionFqPluName }
        ::= { wfAppnNodeEndptSessionTable 1 }

    WfAppnNodeEndptSessionEntry ::= SEQUENCE {
    	    wfAppnNodeEndptSessionId
    		OCTET STRING,
    	    wfAppnNodeEndptSessionPcid
    		OCTET STRING,
    	    wfAppnNodeEndptSessionFqCpName
    		DisplayString,
    	    wfAppnNodeEndptSessionFqPluName
    		DisplayString,
    	    wfAppnNodeEndptSessionTransPriority
    		INTEGER,
    	    wfAppnNodeEndptSessionMode
    		DisplayString,
    	    wfAppnNodeEndptSessionCos
    		DisplayString,
    	    wfAppnNodeEndptSessionLimResource
    		INTEGER,
    	    wfAppnNodeEndptSessionPolarity
    		INTEGER,
    	    wfAppnNodeEndptSessionContention
    		INTEGER,
    	    wfAppnNodeEndptSessionRscv
    		OCTET STRING,
    	    wfAppnNodeEndptSessionSendRuSize
    		INTEGER,
    	    wfAppnNodeEndptSessionRcvRuSize
    		INTEGER,
    	    wfAppnNodeEndptSessionMaxSendBtuSize
    		INTEGER,
    	    wfAppnNodeEndptSessionMaxRcvBtuSize
    		INTEGER,
    	    wfAppnNodeEndptSessionMaxSendPacing
    		INTEGER,
    	    wfAppnNodeEndptSessionCurSendPacing
    		INTEGER,
    	    wfAppnNodeEndptSessionMaxRcvPacing
    		INTEGER,
    	    wfAppnNodeEndptSessionCurRcvPacing
    		INTEGER,
    	    wfAppnNodeEndptSessionSendFrames
    		Counter,
    	    wfAppnNodeEndptSessionSendBytes
    		Counter,
    	    wfAppnNodeEndptSessionSendFmdFrames
    		Counter,
    	    wfAppnNodeEndptSessionRcvFrames
    		Counter,
    	    wfAppnNodeEndptSessionRcvBytes
    		Counter,
    	    wfAppnNodeEndptSessionRcvFmdFrames
    		Counter,
    	    wfAppnNodeEndptSessionSidh
    		INTEGER,
    	    wfAppnNodeEndptSessionSidl
    		INTEGER,
    	    wfAppnNodeEndptSessionOdai
    		INTEGER,
    	    wfAppnNodeEndptSessionLsName
    		DisplayString,
    	    wfAppnNodeEndptSessionRscvText
    		DisplayString
        }

    wfAppnNodeEndptSessionId OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the session ID of this session"
        ::= { wfAppnNodeEndptSessionEntry 1 }

    wfAppnNodeEndptSessionPcid OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the PCID of this session"
        ::= { wfAppnNodeEndptSessionEntry 2 }

    wfAppnNodeEndptSessionFqCpName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the Fully-qualified CP name of the node assigning the
                PCID for this session"
        ::= { wfAppnNodeEndptSessionEntry 3 }

    wfAppnNodeEndptSessionFqPluName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the name of the Partner LU being used by this session"
        ::= { wfAppnNodeEndptSessionEntry 4 }

    wfAppnNodeEndptSessionTransPriority OBJECT-TYPE
        SYNTAX	INTEGER {
    		    low(1),
    		    medium(2),
    		    high(3),
    		    network(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the transmission priority being used by this session"
        ::= { wfAppnNodeEndptSessionEntry 5 }

    wfAppnNodeEndptSessionMode OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the Mode being used by this session"
        ::= { wfAppnNodeEndptSessionEntry 6 }

    wfAppnNodeEndptSessionCos OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the Class-of-Service being used by this session"
        ::= { wfAppnNodeEndptSessionEntry 7 }

    wfAppnNodeEndptSessionLimResource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates if this session is traversing a Limited Resource"
        ::= { wfAppnNodeEndptSessionEntry 8 }

    wfAppnNodeEndptSessionPolarity OBJECT-TYPE
        SYNTAX	INTEGER {
    		    primary(1),
    		    secondary(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates whether the local LU was the BIND sender (Primary)
                or if the local LU was the BIND receiver (Secondary)"
        ::= { wfAppnNodeEndptSessionEntry 9 }

    wfAppnNodeEndptSessionContention OBJECT-TYPE
        SYNTAX	INTEGER {
    		    conwinner(1),
    		    conloser(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates whether this session is a contention-winner or a
                contention-loser session"
        ::= { wfAppnNodeEndptSessionEntry 10 }

    wfAppnNodeEndptSessionRscv OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the Route Selection Control Vector in use by this session"
        ::= { wfAppnNodeEndptSessionEntry 11 }

    wfAppnNodeEndptSessionSendRuSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum RU size sent on this session"
        ::= { wfAppnNodeEndptSessionEntry 12 }

    wfAppnNodeEndptSessionRcvRuSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum RU size received this session"
        ::= { wfAppnNodeEndptSessionEntry 13 }

    wfAppnNodeEndptSessionMaxSendBtuSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum send BTU size for this session"
        ::= { wfAppnNodeEndptSessionEntry 14 }

    wfAppnNodeEndptSessionMaxRcvBtuSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum receive BTU size for this session"
        ::= { wfAppnNodeEndptSessionEntry 15 }

    wfAppnNodeEndptSessionMaxSendPacing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum send pacing for this session"
        ::= { wfAppnNodeEndptSessionEntry 16 }

    wfAppnNodeEndptSessionCurSendPacing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the current send pacing used by this session"
        ::= { wfAppnNodeEndptSessionEntry 17 }

    wfAppnNodeEndptSessionMaxRcvPacing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum receive pacing for this session"
        ::= { wfAppnNodeEndptSessionEntry 18 }

    wfAppnNodeEndptSessionCurRcvPacing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the current receive pacing used by this session"
        ::= { wfAppnNodeEndptSessionEntry 19 }

    wfAppnNodeEndptSessionSendFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of data frames sent by this session"
        ::= { wfAppnNodeEndptSessionEntry 20 }

    wfAppnNodeEndptSessionSendBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of data bytes sent by this session"
        ::= { wfAppnNodeEndptSessionEntry 21 }

    wfAppnNodeEndptSessionSendFmdFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of FMD frames sent by this session"
        ::= { wfAppnNodeEndptSessionEntry 22 }

    wfAppnNodeEndptSessionRcvFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of data frames received by this session"
        ::= { wfAppnNodeEndptSessionEntry 23 }

    wfAppnNodeEndptSessionRcvBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of bytes received by this session"
        ::= { wfAppnNodeEndptSessionEntry 24 }

    wfAppnNodeEndptSessionRcvFmdFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of FMD frames received by this session"
        ::= { wfAppnNodeEndptSessionEntry 25 }

    wfAppnNodeEndptSessionSidh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of bytes received by this session"
        ::= { wfAppnNodeEndptSessionEntry 26 }

    wfAppnNodeEndptSessionSidl OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the SIDL value used by this session"
        ::= { wfAppnNodeEndptSessionEntry 27 }

    wfAppnNodeEndptSessionOdai OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the ODAI value used by this session"
        ::= { wfAppnNodeEndptSessionEntry 28 }

    wfAppnNodeEndptSessionLsName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the adjacent Link Station used by this session"
        ::= { wfAppnNodeEndptSessionEntry 29 }

    wfAppnNodeEndptSessionRscvText OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is a text string representing the RSCV used by this session"
        ::= { wfAppnNodeEndptSessionEntry 30 }

    wfAppnNodeTraceGroup	OBJECT IDENTIFIER ::= { wfAppnNode 10 }

    wfAppnNodeTraceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete a Trace."
        DEFVAL	{ created }
        ::= { wfAppnNodeTraceGroup 1 }

    wfAppnNodeTraceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this Trace."
        DEFVAL	{ enable }
        ::= { wfAppnNodeTraceGroup 2 }

    wfAppnNodeTraceFile OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the path and file name for the Trace file to be created"
        ::= { wfAppnNodeTraceGroup 3 }

    wfAppnNodeRtpConnectionTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnNodeRtpConnectionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains entries for every RTP connection that is currently
                active on this Node"
        ::= { wfAppnNode 11 }

    wfAppnNodeRtpConnectionEntry OBJECT-TYPE
        SYNTAX	WfAppnNodeRtpConnectionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The fqpcid is the index for this table."
        INDEX	{ wfAppnNodeRtpConnectionName }
        ::= { wfAppnNodeRtpConnectionTable 1 }

    WfAppnNodeRtpConnectionEntry ::= SEQUENCE {
    	    wfAppnNodeRtpConnectionName
    		DisplayString,
    	    wfAppnNodeRtpConnectionDestName
    		DisplayString,
    	    wfAppnNodeRtpConnectionFirstHopLsName
    		DisplayString,
    	    wfAppnNodeRtpConnectionCosName
    		DisplayString,
    	    wfAppnNodeRtpConnectionMaxBtuSize
    		INTEGER,
    	    wfAppnNodeRtpConnectionLivenessTimer
    		INTEGER,
    	    wfAppnNodeRtpConnectionLivenessTimeouts
    		Counter,
    	    wfAppnNodeRtpConnectionLocalTcid
    		OCTET STRING,
    	    wfAppnNodeRtpConnectionRemoteTcid
    		OCTET STRING,
    	    wfAppnNodeRtpConnectionActiveSessions
    		INTEGER,
    	    wfAppnNodeRtpConnectionSendBytes
    		Counter,
    	    wfAppnNodeRtpConnectionSendPackets
    		Counter,
    	    wfAppnNodeRtpConnectionSendSessionControlFrames
    		Counter,
    	    wfAppnNodeRtpConnectionSendRate
    		Gauge,
    	    wfAppnNodeRtpConnectionMaxSendRate
    		INTEGER,
    	    wfAppnNodeRtpConnectionMinSendRate
    		INTEGER,
    	    wfAppnNodeRtpConnectionRcvBytes
    		Counter,
    	    wfAppnNodeRtpConnectionRcvPackets
    		Counter,
    	    wfAppnNodeRtpConnectionRcvSessionControlFrames
    		Counter,
    	    wfAppnNodeRtpConnectionRcvInvalidSnaFrames
    		Counter,
    	    wfAppnNodeRtpConnectionRcvRate
    		Gauge,
    	    wfAppnNodeRtpConnectionMaxRcvRate
    		INTEGER,
    	    wfAppnNodeRtpConnectionMinRcvRate
    		INTEGER,
    	    wfAppnNodeRtpConnectionDiscardedBytes
    		Counter,
    	    wfAppnNodeRtpConnectionDiscardedPackets
    		Counter,
    	    wfAppnNodeRtpConnectionResentBytes
    		Counter,
    	    wfAppnNodeRtpConnectionResentPackets
    		Counter,
    	    wfAppnNodeRtpConnectionUpTime
    		INTEGER,
    	    wfAppnNodeRtpConnectionRoundTripTime
    		INTEGER,
    	    wfAppnNodeRtpConnectionSmoothRoundTripTime
    		INTEGER,
    	    wfAppnNodeRtpConnectionBurstSize
    		INTEGER,
    	    wfAppnNodeRtpConnectionSrtExpiries
    		Counter,
    	    wfAppnNodeRtpConnectionShortReqTimer
    		INTEGER,
    	    wfAppnNodeRtpConnectionGapsDetected
    		Counter,
    	    wfAppnNodeRtpConnectionRscv
    		OCTET STRING,
    	    wfAppnNodeRtpConnectionRscvText
    		DisplayString
        }

    wfAppnNodeRtpConnectionName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the local name of the RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 1 }

    wfAppnNodeRtpConnectionDestName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the fully-qualified name of the node at the other
                end of this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 2 }

    wfAppnNodeRtpConnectionFirstHopLsName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the LS name of the first hop for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 3 }

    wfAppnNodeRtpConnectionCosName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the Class-of-Service name for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 4 }

    wfAppnNodeRtpConnectionMaxBtuSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum size (in bytes) of packets which can be carried
                by this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 5 }

    wfAppnNodeRtpConnectionLivenessTimer OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the Liveness Timer (in seconds) for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 6 }

    wfAppnNodeRtpConnectionLivenessTimeouts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number Liveness Timeouts for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 7 }

    wfAppnNodeRtpConnectionLocalTcid OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the Local TCID for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 8 }

    wfAppnNodeRtpConnectionRemoteTcid OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the remote TCID for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 9 }

    wfAppnNodeRtpConnectionActiveSessions OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of sessions currently active on this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 10 }

    wfAppnNodeRtpConnectionSendBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of bytes that have been sent on this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 11 }

    wfAppnNodeRtpConnectionSendPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of packets that have been sent on this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 12 }

    wfAppnNodeRtpConnectionSendSessionControlFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of Session Control that have been sent on this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 13 }

    wfAppnNodeRtpConnectionSendRate OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the current sending rate (in Kbits per second) for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 14 }

    wfAppnNodeRtpConnectionMaxSendRate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the Maximum sending rate (in Kbits per second) for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 15 }

    wfAppnNodeRtpConnectionMinSendRate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the Minimum sending rate (in Kbits per second) for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 16 }

    wfAppnNodeRtpConnectionRcvBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of bytes that have been received on this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 17 }

    wfAppnNodeRtpConnectionRcvPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of packets that have been received on this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 18 }

    wfAppnNodeRtpConnectionRcvSessionControlFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of Session Control that have been received on this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 19 }

    wfAppnNodeRtpConnectionRcvInvalidSnaFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of invalid SNA frames that have been received on this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 20 }

    wfAppnNodeRtpConnectionRcvRate OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the current receiving rate (in Kbits per second) for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 21 }

    wfAppnNodeRtpConnectionMaxRcvRate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the Maximum receive rate (in Kbits per second) for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 22 }

    wfAppnNodeRtpConnectionMinRcvRate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the Minimum receive rate (in Kbits per second) for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 23 }

    wfAppnNodeRtpConnectionDiscardedBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of bytes that have been discarded on this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 24 }

    wfAppnNodeRtpConnectionDiscardedPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of packets that have been discarded on this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 25 }

    wfAppnNodeRtpConnectionResentBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of bytes that have been retransmitted this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 26 }

    wfAppnNodeRtpConnectionResentPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of packets that have been retransmitted this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 27 }

    wfAppnNodeRtpConnectionUpTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the time (in seconds) that this RTP connection has been active"
        ::= { wfAppnNodeRtpConnectionEntry 28 }

    wfAppnNodeRtpConnectionRoundTripTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the last round-trip time (in milliseconds) for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 29 }

    wfAppnNodeRtpConnectionSmoothRoundTripTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the smoothed round-trip time (in milliseconds) for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 30 }

    wfAppnNodeRtpConnectionBurstSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the current burst size for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 31 }

    wfAppnNodeRtpConnectionSrtExpiries OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of times the SR Timer has expired on this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 32 }

    wfAppnNodeRtpConnectionShortReqTimer OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the SHORT_REQ timer duration (in seconds) for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 33 }

    wfAppnNodeRtpConnectionGapsDetected OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of gaps detected for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 34 }

    wfAppnNodeRtpConnectionRscv OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the RSCV (in hex) for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 35 }

    wfAppnNodeRtpConnectionRscvText OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the RSCV (in a human-readable format) for this RTP connection"
        ::= { wfAppnNodeRtpConnectionEntry 36 }

    wfAppnNnTopo	OBJECT IDENTIFIER ::= { wfAppnNn 1 }

    wfAppnNnTopoMaxNodes OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of nodes allowed in the APPN topology database
                This administratively assigned value must be equal to or
                greater than the maximum total number of end nodes and
                network nodes.
                If the number of nodes exceeds this value, APPN will issue
                an Alert and the node can no longer participate as a network
                node."
        ::= { wfAppnNnTopo 1 }

    wfAppnNnTopoCurNumNodes OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current number of nodes in this node's topology database.
                If this value exceeds the maximum number of nodes allowed
                (NnTopoMaxNodes), APPN alert CPDB002 is
                issued."
        ::= { wfAppnNnTopo 2 }

    wfAppnNnTopoInTdus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of TDUs received from
                all adjacent NN since last initialization."
        ::= { wfAppnNnTopo 3 }

    wfAppnNnTopoOutTdus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of TDUs built by this node to be sent to
                all adjacent NN since last initialization."
        ::= { wfAppnNnTopo 4 }

    wfAppnNnTopoNodeLowRsns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of topology node updates received by this
                node with a RSN less than the current RSN.  Both even and
                odd RSN are included in this count.
                These TDUs are not errors, but result when TDUs are
                broadcast to all adjacent network nodes.  No update to
                this node's topology database occurs, but this node will
                send a TDU with it's higher RSN to the adjacent node that
                sent this low RSN."
        ::= { wfAppnNnTopo 5 }

    wfAppnNnTopoNodeEqualRsns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of topology node updates received by this
                node with a RSN equal to the current RSN.  Both even and
                odd RSN are included in this count.
                These TDUs are not errors, but result when TDUs are
                broadcast to all adjacent network nodes.  No update to
                this node's topology database occurs."
        ::= { wfAppnNnTopo 6 }

    wfAppnNnTopoNodeGoodHighRsns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of topology node updates received by this
                node with a RSN greater than the current RSN.
                This results in updating this nodes topology and broadcasting
                a TDU to all adjacent network nodes.  It is not required to
                send a TDU to the sender of this update because that node
                already has the update."
        ::= { wfAppnNnTopo 7 }

    wfAppnNnTopoNodeBadHighRsns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of topology node updates received by this
                node with an odd RSN greater than the current RSN.
                These updates represent a topology inconsistency detected
                by one of the APPN network nodes.
                This results in updating this nodes topology and broadcasting
                a TDU to all adjacent network nodes."
        ::= { wfAppnNnTopo 8 }

    wfAppnNnTopoNodeStateUpdates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of topology Node records built as a result
                of internally detected node state changes that affect APPN
                topology and routing.  Updates are sent via TDUs to all
                adjacent network nodes."
        ::= { wfAppnNnTopo 9 }

    wfAppnNnTopoNodeErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of topology node records inconsistencies
                detected by this node.  This occurs when this node attempts
                to update its topology database and detects a data
                inconsistency.  This node will create a TDU with the
                current RSN incremented to the next odd number and
                broadcast it to all adjacent NNs."
        ::= { wfAppnNnTopo 10 }

    wfAppnNnTopoNodeTimerUpdates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of topology node records built for this
                node's resource due to timer updates. Updates are sent via
                TDUs to all adjacent network nodes. These updates insure
                other network nodes do not delete this node's resources
                from their topology database."
        ::= { wfAppnNnTopo 11 }

    wfAppnNnTopoNodePurges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of topology node records purged from this
                node's topology database.  This occurs when a node has not
                been updated in a specified amount of time.  The owning
                node is responsible for broadcasting updates for its resource
                that it wants kept in the network topology."
        ::= { wfAppnNnTopo 12 }

    wfAppnNnTopoTgLowRsns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of topology TG updates received by this
                node with a RSN less than the current RSN.  Both even and
                odd RSN are included in this count.
                These TDUs are not errors, but result when TDUs are
                broadcast to all adjacent network nodes.  No update to
                this node's topology database occurs, but this node will
                send a TDU with it's higher RSN to the sender of the low
                RSN."
        ::= { wfAppnNnTopo 13 }

    wfAppnNnTopoTgEqualRsns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of topology TG updates received by this
                node with a RSN equal to the current RSN.  Both even and
                odd RSN are included in this count.
                These TDUs are not errors, but result when TDUs are
                broadcast to all adjacent network nodes.  No update to
                this node's topology database occurs."
        ::= { wfAppnNnTopo 14 }

    wfAppnNnTopoTgGoodHighRsns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of topology TG updates received by this
                node with a RSN greater than the current RSN.
                This results in updating this nodes topology and broadcasting
                the update to all adjacent network nodes."
        ::= { wfAppnNnTopo 15 }

    wfAppnNnTopoTgBadHighRsns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of topology TG updates received by this
                node with an odd RSN greater than the current RSN.
                These updates represent a topology inconsistency detected
                by one of the APPN network nodes.
                This results in updating this nodes topology and broadcasting
                a TDU to all adjacent network nodes."
        ::= { wfAppnNnTopo 16 }

    wfAppnNnTopoTgStateUpdates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of topology TG records built as a result
                of internally detected node state changes that affect APPN
                topology and routing.  Updates are sent via TDUs to all
                adjacent network nodes."
        ::= { wfAppnNnTopo 17 }

    wfAppnNnTopoTgErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of topology TG records inconsistencies
                detected by this node.  This occurs when this node attempts
                to update its topology database and detects a data
                inconsistency.  This node will create a TDU with the
                current RSN incremented to the next odd number and
                broadcast it to all adjacent NNs."
        ::= { wfAppnNnTopo 18 }

    wfAppnNnTopoTgTimerUpdates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of topology TG records built for this
                node's resource due to timer updates. Updates are sent via
                TDUs to all adjacent network nodes. These updates insure
                other network nodes do not delete this node's resources
                from their topology database."
        ::= { wfAppnNnTopo 19 }

    wfAppnNnTopoTgPurges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of topology TG records purged from this
                node's topology database.  This occurs when a TG has not
                been updated in a specified amount of time.  The owning
                node is responsible for broadcasting updates for its resource
                that it wants to keep in the network topology."
        ::= { wfAppnNnTopo 20 }

    wfAppnNnTopoTotalRouteCalcs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of routes calculated for all class of services
                since the last initialization."
        ::= { wfAppnNnTopo 21 }

    wfAppnNnTopoTotalRouteRejs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of route requests for all class of services that
                could not be calculated since last initialization."
        ::= { wfAppnNnTopo 22 }

    wfAppnNnAdjNodeTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnNnAdjNodeEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table containing an entry for every adjacent node. The information
                kept in this table is the last FRSN sent and received,
                the status of the CP-CP sessions, and a gauge that indicates
                the number of outstanding TDUs."
        ::= { wfAppnNn 2 }

    wfAppnNnAdjNodeEntry OBJECT-TYPE
        SYNTAX	WfAppnNnAdjNodeEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The adjacent node name is the index for this table."
        INDEX	{ wfAppnNnAdjNodeAdjName }
        ::= { wfAppnNnAdjNodeTable 1 }

    WfAppnNnAdjNodeEntry ::= SEQUENCE {
    	    wfAppnNnAdjNodeAdjName
    		DisplayString,
    	    wfAppnNnAdjNodeCpCpSessStatus
    		INTEGER,
    	    wfAppnNnAdjNodeOutOfSeqTdus
    		Gauge,
    	    wfAppnNnAdjNodeLastFrsnSent
    		INTEGER,
    	    wfAppnNnAdjNodeLastFrsnRcvd
    		INTEGER
        }

    wfAppnNnAdjNodeAdjName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "An administratively-assigned fully-qualified
                name of this node's adjacent network node."
        ::= { wfAppnNnAdjNodeEntry 1 }

    wfAppnNnAdjNodeCpCpSessStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    loser(2),
    		    winner(3),
    		    inactive(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the state of CP-CP sessions between this node
                and adjacent network and end nodes.  Inactive indicates no
                CP-CP sessions exists between this node and the adjacent
                node.  Active indicates CP-CP sessons are active using both
                the ConWinner and ConLoser sessions. The session initiated
                by this node is referred to as the ConWinner session and is
                used by this node to send to the adjacent node.  The ConLoserr
                session is initiated by the adjacent node and is used by this
                node to receive from the adjacent node."
        DEFVAL	{ inactive }
        ::= { wfAppnNnAdjNodeEntry 2 }

    wfAppnNnAdjNodeOutOfSeqTdus OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of out of sequence Topology Database
                Updates (TDUs).  In a quiesced state, this value is
                zero.  In normal operation, the value varies
                depending on the network environment."
        ::= { wfAppnNnAdjNodeEntry 3 }

    wfAppnNnAdjNodeLastFrsnSent OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow reduction sequence numbers (FRSNs) are associated
                with Topology Database Updates (TDUs) and are unique
                only within each APPN network node.  A TDU can be
                associated with multiple APPN resources. This FRSN
                indicates the last TDU sent to this adjacent node."
        ::= { wfAppnNnAdjNodeEntry 4 }

    wfAppnNnAdjNodeLastFrsnRcvd OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow reduction sequence numbers (FRSNs) are associated
                with Topology Database Updates (TDUs) and are unique
                only within each APPN network node.  A TDU can be
                associated with multiple APPN resources. This FRSN
                indicates the last TDU received from this adjacent node."
        ::= { wfAppnNnAdjNodeEntry 5 }

    wfAppnNnTopologyTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnNnTopologyEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Portion of the APPN routing table
                that describes all of the APPN network nodes
                and virtual nodes known to this node."
        ::= { wfAppnNnTopology 1 }

    wfAppnNnTopologyEntry OBJECT-TYPE
        SYNTAX	WfAppnNnTopologyEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The fully-qualified node name is used to
                index this table."
        INDEX	{ wfAppnNnNodeName }
        ::= { wfAppnNnTopologyTable 1 }

    WfAppnNnTopologyEntry ::= SEQUENCE {
    	    wfAppnNnNodeName
    		DisplayString,
    	    wfAppnNnNodeFrsn
    		INTEGER,
    	    wfAppnNnNodeEntryTimeLeft
    		INTEGER,
    	    wfAppnNnNodeType
    		INTEGER,
    	    wfAppnNnNodeRsn
    		INTEGER,
    	    wfAppnNnNodeRouteAddResist
    		INTEGER,
    	    wfAppnNnNodeCongested
    		INTEGER,
    	    wfAppnNnNodeIsrDepleted
    		INTEGER,
    	    wfAppnNnNodeEndptDepleted
    		INTEGER,
    	    wfAppnNnNodeQuiescing
    		INTEGER,
    	    wfAppnNnNodeGateway
    		INTEGER,
    	    wfAppnNnNodeCentralDirectory
    		INTEGER,
    	    wfAppnNnNodeIsr
    		INTEGER,
    	    wfAppnNnNodeChainSupport
    		INTEGER
        }

    wfAppnNnNodeName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned network name that is locally
                defined at each network node in the format NETID.CPNAME."
        ::= { wfAppnNnTopologyEntry 1 }

    wfAppnNnNodeFrsn OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow reduction sequence numbers (FRSNs) are associated
                with Topology Database Updates (TDUs) and are unique
                only within each APPN network node.  A TDU can be
                associated with multiple APPN resources. This FRSN
                indicates the last time this resource was updated at
                this node."
        ::= { wfAppnNnTopologyEntry 2 }

    wfAppnNnNodeEntryTimeLeft OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of days before deletion of this
                network node entry. Range is 0-31."
        ::= { wfAppnNnTopologyEntry 3 }

    wfAppnNnNodeType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    nn(1),
    		    vn(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Type of APPN node."
        ::= { wfAppnNnTopologyEntry 4 }

    wfAppnNnNodeRsn OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Resource sequence number that is assigned and
                controlled by the network node that owns this
                resource. This is always an even 32-bit number
                unless an error has occurred."
        ::= { wfAppnNnTopologyEntry 5 }

    wfAppnNnNodeRouteAddResist OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Route addition resistance
                indicates the relative desirability
                of using this node for intermediate session traffic.
                The value, which can be any integer 0-255,
                is used in route computation.  The lower the value,
                the more desirable the node is for intermediate routing."
        ::= { wfAppnNnTopologyEntry 6 }

    wfAppnNnNodeCongested OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this node is congested.
                This node is not be included in route selection
                by other nodes when this congestion exists."
        ::= { wfAppnNnTopologyEntry 7 }

    wfAppnNnNodeIsrDepleted OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether intermediate session
                routing resources are depleted.  This node is
                not included in intermediate route selection
                by other nodes when resources are depleted."
        ::= { wfAppnNnTopologyEntry 8 }

    wfAppnNnNodeEndptDepleted OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether session endpoint resources are depleted."
        ::= { wfAppnNnTopologyEntry 9 }

    wfAppnNnNodeQuiescing OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the node is quiescing.
                This node is not included in route selection
                by other nodes when the node is quiescing."
        ::= { wfAppnNnTopologyEntry 10 }

    wfAppnNnNodeGateway OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the node provide gateway functions."
        ::= { wfAppnNnTopologyEntry 11 }

    wfAppnNnNodeCentralDirectory OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the node is central directory."
        ::= { wfAppnNnTopologyEntry 12 }

    wfAppnNnNodeIsr OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the node supports intermediate session
                routing (ISR)."
        ::= { wfAppnNnTopologyEntry 13 }

    wfAppnNnNodeChainSupport OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this node supports chaining."
        ::= { wfAppnNnTopologyEntry 14 }

    wfAppnNnTgTopologyTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnNnTgTopologyEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Portion of the APPN topology database
                that describes all of the APPN transmissions groups
                used by the APPN network nodes."
        ::= { wfAppnNnTopology 2 }

    wfAppnNnTgTopologyEntry OBJECT-TYPE
        SYNTAX	WfAppnNnTgTopologyEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table requires three indexes to provide a
                unique index.  The indexes are the owning or originating
                CPname, the destination CPname, and the TG number."
        INDEX	{ wfAppnNnTgOwner,
    		  wfAppnNnTgDest,
    		  wfAppnNnTgNum }
        ::= { wfAppnNnTgTopologyTable 1 }

    WfAppnNnTgTopologyEntry ::= SEQUENCE {
    	    wfAppnNnTgOwner
    		DisplayString,
    	    wfAppnNnTgDest
    		DisplayString,
    	    wfAppnNnTgNum
    		INTEGER,
    	    wfAppnNnTgFrsn
    		INTEGER,
    	    wfAppnNnTgEntryTimeLeft
    		INTEGER,
    	    wfAppnNnTgDestVirtual
    		INTEGER,
    	    wfAppnNnTgDlcData
    		OCTET STRING,
    	    wfAppnNnTgRsn
    		INTEGER,
    	    wfAppnNnTgOperational
    		INTEGER,
    	    wfAppnNnTgQuiescing
    		INTEGER,
    	    wfAppnNnTgCpCpSession
    		INTEGER,
    	    wfAppnNnTgEffCap
    		INTEGER,
    	    wfAppnNnTgConnCost
    		INTEGER,
    	    wfAppnNnTgByteCost
    		INTEGER,
    	    wfAppnNnTgSecurity
    		INTEGER,
    	    wfAppnNnTgDelay
    		INTEGER,
    	    wfAppnNnTgModemClass
    		INTEGER,
    	    wfAppnNnTgUsr1
    		INTEGER,
    	    wfAppnNnTgUsr2
    		INTEGER,
    	    wfAppnNnTgUsr3
    		INTEGER
        }

    wfAppnNnTgOwner OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned name for the
                originating node for this TG. The format
                is NETID.CPNAME and is the same name
                specified in the node table."
        ::= { wfAppnNnTgTopologyEntry 1 }

    wfAppnNnTgDest OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned fully-qualified
                network name for the destination node for this TG."
        ::= { wfAppnNnTgTopologyEntry 2 }

    wfAppnNnTgNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number associated with this
                transmission group. Range is 0-255."
        ::= { wfAppnNnTgTopologyEntry 3 }

    wfAppnNnTgFrsn OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow reduction sequence numbers (FRSNs) are associated
                with Topology Database Updates (TDUs) and are unique
                only within each APPN network node.  A TDU can be
                associated with multiple APPN resources.  This FRSN
                indicates the last time this resource was updated at
                this node."
        ::= { wfAppnNnTgTopologyEntry 4 }

    wfAppnNnTgEntryTimeLeft OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of days before deletion of this
                network node TG entry. Range is 0-31."
        ::= { wfAppnNnTgTopologyEntry 5 }

    wfAppnNnTgDestVirtual OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the destination node is
                a virtual node."
        ::= { wfAppnNnTgTopologyEntry 6 }

    wfAppnNnTgDlcData OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "DLC specific data related to the link connection
                network.
                Token-Ring    - MAC/SAP
                X.25 Switched - dial digits
                X.21 Switched - dial digits
                Circuit Swtch - dial digits."
        ::= { wfAppnNnTgTopologyEntry 7 }

    wfAppnNnTgRsn OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current owning node's resource sequence number
                for this resource."
        ::= { wfAppnNnTgTopologyEntry 8 }

    wfAppnNnTgOperational OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the transmission group
                is operational."
        ::= { wfAppnNnTgTopologyEntry 9 }

    wfAppnNnTgQuiescing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the transmission group
                is quiescing."
        ::= { wfAppnNnTgTopologyEntry 10 }

    wfAppnNnTgCpCpSession OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether CP-CP sessions are supported on this TG."
        ::= { wfAppnNnTgTopologyEntry 11 }

    wfAppnNnTgEffCap OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The effective capacity is an integer value that indicates
                the kilo bits per second.
                It is derived from the link bandwidth and maximum load
                factor with the range of 0 thru 255.
                This is an administratively assigned value for this TG.
                DEVIATION: 6611 mib uses range of 0 thru 603,979,776."
        ::= { wfAppnNnTgTopologyEntry 12 }

    wfAppnNnTgConnCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Cost per connect time: a value representing
                the relative cost per unit of time to use
                the TG. Range is from 0, which means no cost,
                to 255, which indicates maximum cost.
                This is an administratively assigned value associated
                with this TG."
        ::= { wfAppnNnTgTopologyEntry 13 }

    wfAppnNnTgByteCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Relative cost of transmitting a byte over this link.
                Range is from 0 (lowest cost) to 255.
                This is an administratively assigned value associated
                with this TG."
        ::= { wfAppnNnTgTopologyEntry 14 }

    wfAppnNnTgSecurity OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The security is represented as an integer with a range of
                1 thru 255 with the most common values enumerated as
                defined above.
                This is an administratively assigned value associated
                with this TG."
        ::= { wfAppnNnTgTopologyEntry 15 }

    wfAppnNnTgDelay OBJECT-TYPE
        SYNTAX  INTEGER {
                negligible(1),
                terrestrial(2),
                packet(3),
                long(4),
                maximum(5)
                }
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Relative amount of time that it takes for a signal to
                travel the length of the logical link.
                This is an administratively assigned value associated
                with this TG.
                DEVIATION: 6611 MIB, uses units of microseconds."
        DEFVAL  { negligible }
        ::= { wfAppnNnTgTopologyEntry 16 }

    wfAppnNnTgModemClass OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is used to have multiple images for a
                connection network.  For a connection network
                           it is the same as in the TG vector; for
                           a non-connection network it is X'00'."
        ::= { wfAppnNnTgTopologyEntry 17 }

    wfAppnNnTgUsr1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "First user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value associated
                with this TG."
        ::= { wfAppnNnTgTopologyEntry 18 }

    wfAppnNnTgUsr2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Second user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value associated
                with this TG."
        ::= { wfAppnNnTgTopologyEntry 19 }

    wfAppnNnTgUsr3 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Third user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value associated
                with this TG."
        ::= { wfAppnNnTgTopologyEntry 20 }

    wfAppnNnTopologyFRTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnNnTopologyFREntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Portion of the APPN routing table
                that describes all of the APPN network nodes
                and virtual nodes known to this node."
        ::= { wfAppnNnTopology 3 }

    wfAppnNnTopologyFREntry OBJECT-TYPE
        SYNTAX	WfAppnNnTopologyFREntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The fully-qualified node name is used to
                index this table."
        INDEX	{ wfAppnNnNodeFRFrsn,
    		  wfAppnNnNodeFRName }
        ::= { wfAppnNnTopologyFRTable 1 }

    WfAppnNnTopologyFREntry ::= SEQUENCE {
    	    wfAppnNnNodeFRName
    		DisplayString,
    	    wfAppnNnNodeFRFrsn
    		INTEGER,
    	    wfAppnNnNodeFREntryTimeLeft
    		INTEGER,
    	    wfAppnNnNodeFRType
    		INTEGER,
    	    wfAppnNnNodeFRRsn
    		INTEGER,
    	    wfAppnNnNodeFRRouteAddResist
    		INTEGER,
    	    wfAppnNnNodeFRCongested
    		INTEGER,
    	    wfAppnNnNodeFRIsrDepleted
    		INTEGER,
    	    wfAppnNnNodeFREndptDepleted
    		INTEGER,
    	    wfAppnNnNodeFRQuiescing
    		INTEGER,
    	    wfAppnNnNodeFRGateway
    		INTEGER,
    	    wfAppnNnNodeFRCentralDirectory
    		INTEGER,
    	    wfAppnNnNodeFRIsr
    		INTEGER,
    	    wfAppnNnNodeFRChainSupport
    		INTEGER
        }

    wfAppnNnNodeFRName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned network name that is locally
                defined at each network node in the format NETID.CPNAME."
        ::= { wfAppnNnTopologyFREntry 1 }

    wfAppnNnNodeFRFrsn OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow reduction sequence numbers (FRSNs) are associated
                with Topology Database Updates (TDUs) and are unique
                only within each APPN network node.  A TDU can be
                associated with multiple APPN resources. This FRSN
                indicates the last time this resource was updated at
                this node."
        ::= { wfAppnNnTopologyFREntry 2 }

    wfAppnNnNodeFREntryTimeLeft OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of days before deletion of this
                network node entry. Range is 0-31."
        ::= { wfAppnNnTopologyFREntry 3 }

    wfAppnNnNodeFRType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    nn(1),
    		    vn(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Type of APPN node."
        ::= { wfAppnNnTopologyFREntry 4 }

    wfAppnNnNodeFRRsn OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Resource sequence number that is assigned and
                controlled by the network node that owns this
                resource. This is always an even 32-bit number
                unless an error has occurred."
        ::= { wfAppnNnTopologyFREntry 5 }

    wfAppnNnNodeFRRouteAddResist OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Route addition resistance
                indicates the relative desirability
                of using this node for intermediate session traffic.
                The value, which can be any integer 0-255,
                is used in route computation.  The lower the value,
                the more desirable the node is for intermediate routing."
        ::= { wfAppnNnTopologyFREntry 6 }

    wfAppnNnNodeFRCongested OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this node is congested.
                This node is not be included in route selection
                by other nodes when this congestion exists."
        ::= { wfAppnNnTopologyFREntry 7 }

    wfAppnNnNodeFRIsrDepleted OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether intermediate session
                routing resources are depleted.  This node is
                not included in intermediate route selection
                by other nodes when resources are depleted."
        ::= { wfAppnNnTopologyFREntry 8 }

    wfAppnNnNodeFREndptDepleted OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether session endpoint resources are depleted."
        ::= { wfAppnNnTopologyFREntry 9 }

    wfAppnNnNodeFRQuiescing OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the node is quiescing.
                This node is not included in route selection
                by other nodes when the node is quiescing."
        ::= { wfAppnNnTopologyFREntry 10 }

    wfAppnNnNodeFRGateway OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the node provide gateway functions."
        ::= { wfAppnNnTopologyFREntry 11 }

    wfAppnNnNodeFRCentralDirectory OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the node is central directory."
        ::= { wfAppnNnTopologyFREntry 12 }

    wfAppnNnNodeFRIsr OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the node supports intermediate session
                routing (ISR)."
        ::= { wfAppnNnTopologyFREntry 13 }

    wfAppnNnNodeFRChainSupport OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this node supports chaining."
        ::= { wfAppnNnTopologyFREntry 14 }

    wfAppnNnTgTopologyFRTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnNnTgTopologyFREntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains entries which describes the TGs associated with
                the Network Nodes in the network"
        ::= { wfAppnNnTopology 4 }

    wfAppnNnTgTopologyFREntry OBJECT-TYPE
        SYNTAX	WfAppnNnTgTopologyFREntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table requires four indexes to provide a
                unique index.  The indexes are the FRSN, the owning or originating
                CPname, the destination CPname, and the TG number."
        INDEX	{ wfAppnNnTgFRFrsn,
    		  wfAppnNnTgFROwner,
    		  wfAppnNnTgFRDest,
    		  wfAppnNnTgFRNum }
        ::= { wfAppnNnTgTopologyFRTable 1 }

    WfAppnNnTgTopologyFREntry ::= SEQUENCE {
    	    wfAppnNnTgFROwner
    		DisplayString,
    	    wfAppnNnTgFRDest
    		DisplayString,
    	    wfAppnNnTgFRNum
    		INTEGER,
    	    wfAppnNnTgFRFrsn
    		INTEGER,
    	    wfAppnNnTgFREntryTimeLeft
    		INTEGER,
    	    wfAppnNnTgFRDestVirtual
    		INTEGER,
    	    wfAppnNnTgFRDlcData
    		OCTET STRING,
    	    wfAppnNnTgFRRsn
    		INTEGER,
    	    wfAppnNnTgFROperational
    		INTEGER,
    	    wfAppnNnTgFRQuiescing
    		INTEGER,
    	    wfAppnNnTgFRCpCpSession
    		INTEGER,
    	    wfAppnNnTgFREffCap
    		INTEGER,
    	    wfAppnNnTgFRConnCost
    		INTEGER,
    	    wfAppnNnTgFRByteCost
    		INTEGER,
    	    wfAppnNnTgFRSecurity
    		INTEGER,
    	    wfAppnNnTgFRDelay
    		INTEGER,
    	    wfAppnNnTgFRModemClass
    		INTEGER,
    	    wfAppnNnTgFRUsr1
    		INTEGER,
    	    wfAppnNnTgFRUsr2
    		INTEGER,
    	    wfAppnNnTgFRUsr3
    		INTEGER
        }

    wfAppnNnTgFROwner OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned name for the
                originating node for this TG. The format
                is NETID.CPNAME and is the same name
                specified in the node table."
        ::= { wfAppnNnTgTopologyFREntry 1 }

    wfAppnNnTgFRDest OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned fully-qualified
                network name for the destination node for this TG."
        ::= { wfAppnNnTgTopologyFREntry 2 }

    wfAppnNnTgFRNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number associated with this
                transmission group. Range is 0-255."
        ::= { wfAppnNnTgTopologyFREntry 3 }

    wfAppnNnTgFRFrsn OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow reduction sequence numbers (FRSNs) are associated
                with Topology Database Updates (TDUs) and are unique
                only within each APPN network node.  A TDU can be
                associated with multiple APPN resources.  This FRSN
                indicates the last time this resource was updated at
                this node."
        ::= { wfAppnNnTgTopologyFREntry 4 }

    wfAppnNnTgFREntryTimeLeft OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of days before deletion of this
                network node TG entry. Range is 0-31."
        ::= { wfAppnNnTgTopologyFREntry 5 }

    wfAppnNnTgFRDestVirtual OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the destination node is
                a virtual node."
        ::= { wfAppnNnTgTopologyFREntry 6 }

    wfAppnNnTgFRDlcData OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "DLC specific data related to the link connection
                network.
                Token-Ring    - MAC/SAP
                X.25 Switched - dial digits
                X.21 Switched - dial digits
                Circuit Swtch - dial digits."
        ::= { wfAppnNnTgTopologyFREntry 7 }

    wfAppnNnTgFRRsn OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current owning node's resource sequence number
                for this resource."
        ::= { wfAppnNnTgTopologyFREntry 8 }

    wfAppnNnTgFROperational OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the transmission group
                is operational."
        ::= { wfAppnNnTgTopologyFREntry 9 }

    wfAppnNnTgFRQuiescing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the transmission group
                is quiescing."
        ::= { wfAppnNnTgTopologyFREntry 10 }

    wfAppnNnTgFRCpCpSession OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether CP-CP sessions are supported on this TG."
        ::= { wfAppnNnTgTopologyFREntry 11 }

    wfAppnNnTgFREffCap OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The effective capacity is an integer value that indicates
                the kilo bits per second.
                It is derived from the link bandwidth and maximum load
                factor with the range of 0 thru 255.
                This is an administratively assigned value for this TG.
                DEVIATION: 6611 mib uses range of 0 thru 603,979,776."
        ::= { wfAppnNnTgTopologyFREntry 12 }

    wfAppnNnTgFRConnCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Cost per connect time: a value representing
                the relative cost per unit of time to use
                the TG. Range is from 0, which means no cost,
                to 255, which indicates maximum cost.
                This is an administratively assigned value associated
                with this TG."
        ::= { wfAppnNnTgTopologyFREntry 13 }

    wfAppnNnTgFRByteCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Relative cost of transmitting a byte over this link.
                Range is from 0 (lowest cost) to 255.
                This is an administratively assigned value associated
                with this TG."
        ::= { wfAppnNnTgTopologyFREntry 14 }

    wfAppnNnTgFRSecurity OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The security is represented as an integer with a range of
                1 thru 255 with the most common values enumerated as
                defined above.
                This is an administratively assigned value associated
                with this TG."
        ::= { wfAppnNnTgTopologyFREntry 15 }

    wfAppnNnTgFRDelay OBJECT-TYPE
        SYNTAX  INTEGER {
                negligible(1),
                terrestrial(2),
                packet(3),
                long(4),
                maximum(5)
                }
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Relative amount of time that it takes for a signal to
                travel the length of the logical link.
                This is an administratively assigned value associated
                with this TG.
                DEVIATION: 6611 MIB, uses units of microseconds."
        DEFVAL  { negligible }
        ::= { wfAppnNnTgTopologyFREntry 16 }

    wfAppnNnTgFRModemClass OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is used to have multiple images for a
                connection network.  For a connection network
                           it is the same as in the TG vector; for
                           a non-connection network it is X'00'."
        ::= { wfAppnNnTgTopologyFREntry 17 }

    wfAppnNnTgFRUsr1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "First user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value associated
                with this TG."
        ::= { wfAppnNnTgTopologyFREntry 18 }

    wfAppnNnTgFRUsr2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Second user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value associated
                with this TG."
        ::= { wfAppnNnTgTopologyFREntry 19 }

    wfAppnNnTgFRUsr3 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Third user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value associated
                with this TG."
        ::= { wfAppnNnTgTopologyFREntry 20 }

    wfAppnLocalInfo	OBJECT IDENTIFIER ::= { wfAppnLocalThisNode 1 }

    wfAppnLocalNodeName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned network name
                for this node in the format NETID.CPNAME."
        ::= { wfAppnLocalInfo 1 }

    wfAppnLocalNodeType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    nn(1),
    		    en(2),
    		    len(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Type of APPN node."
        ::= { wfAppnLocalInfo 2 }

    wfAppnLocalNnRsn OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Resource sequence number that is assigned and
                controlled by the network node that owns this
                resource. This is always an even 32-bit number
                unless an error has occurred."
        ::= { wfAppnLocalInfo 3 }

    wfAppnLocalNnRouteAddResist OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Route addition resistance
                indicates the relative desirability
                of using this node for intermediate session traffic.
                The value, which can be any integer 0-255,
                is used in route computation.  The lower the value,
                the more desirable the node is for intermediate routing."
        ::= { wfAppnLocalInfo 4 }

    wfAppnLocalNnCongested OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this node is congested.
                This node is not be included in route selection
                by other nodes when this congestion exists."
        ::= { wfAppnLocalInfo 5 }

    wfAppnLocalNnIsrDepleted OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether intermediate session
                routing resources are depleted.  This node is
                not included in intermediate route selection
                by other nodes when resources are depleted."
        ::= { wfAppnLocalInfo 6 }

    wfAppnLocalNnEndptDepleted OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether session endpoint resources are depleted."
        ::= { wfAppnLocalInfo 7 }

    wfAppnLocalNnQuiescing OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the node is quiescing.
                This node is not included in route selection
                by other nodes when the node is quiescing."
        ::= { wfAppnLocalInfo 8 }

    wfAppnLocalNnGateway OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the node provide gateway functions."
        ::= { wfAppnLocalInfo 9 }

    wfAppnLocalNnCentralDirectory OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the node is central directory."
        ::= { wfAppnLocalInfo 10 }

    wfAppnLocalNnIsr OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the node supports intermediate session
                routing (ISR)."
        ::= { wfAppnLocalInfo 11 }

    wfAppnLocalNnChainSupport OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the node supports chaining."
        ::= { wfAppnLocalInfo 12 }

    wfAppnLocalNnFrsn OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow reduction sequence numbers (FRSNs) are associated
                with Topology Database Updates (TDUs) and are unique
                only within each APPN network node.  A TDU can be
                associated with multiple APPN resources. This object
                is the last FRSN sent in a topology update to
                adjacent network nodes."
        ::= { wfAppnLocalInfo 13 }

    wfAppnLocalTgTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnLocalTgEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "TG Table describes all of the TGs owned by this
                node.  The TG destination can be a virtual
                node, network node, len, or end node."
        ::= { wfAppnLocalThisNode 3 }

    wfAppnLocalTgEntry OBJECT-TYPE
        SYNTAX	WfAppnLocalTgEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table is indexed by the destination CPname
                and the TG number."
        INDEX	{ wfAppnLocalTgDest,
    		  wfAppnLocalTgNum }
        ::= { wfAppnLocalTgTable 1 }

    WfAppnLocalTgEntry ::= SEQUENCE {
    	    wfAppnLocalTgDest
    		DisplayString,
    	    wfAppnLocalTgNum
    		INTEGER,
    	    wfAppnLocalTgDestVirtual
    		INTEGER,
    	    wfAppnLocalTgDlcData
    		OCTET STRING,
    	    wfAppnLocalTgRsn
    		INTEGER,
    	    wfAppnLocalTgOperational
    		INTEGER,
    	    wfAppnLocalTgQuiescing
    		INTEGER,
    	    wfAppnLocalTgCpCpSession
    		INTEGER,
    	    wfAppnLocalTgEffCap
    		INTEGER,
    	    wfAppnLocalTgConnCost
    		INTEGER,
    	    wfAppnLocalTgByteCost
    		INTEGER,
    	    wfAppnLocalTgSecurity
    		INTEGER,
    	    wfAppnLocalTgDelay
    		INTEGER,
    	    wfAppnLocalTgModemClass
    		INTEGER,
    	    wfAppnLocalTgUsr1
    		INTEGER,
    	    wfAppnLocalTgUsr2
    		INTEGER,
    	    wfAppnLocalTgUsr3
    		INTEGER
        }

    wfAppnLocalTgDest OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned fully-qualified
                network name for the destination node for this TG."
        ::= { wfAppnLocalTgEntry 1 }

    wfAppnLocalTgNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number associated with this
                transmission group. Range is 0-255."
        ::= { wfAppnLocalTgEntry 2 }

    wfAppnLocalTgDestVirtual OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the destination node is
                a virtual node."
        ::= { wfAppnLocalTgEntry 3 }

    wfAppnLocalTgDlcData OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "DLC specific data related to the link connection
                network.
                Token-Ring    - MAC/SAP
                X.25 Switched - dial digits
                X.21 Switched - dial digits
                Circuit Swtch - dial digits."
        ::= { wfAppnLocalTgEntry 4 }

    wfAppnLocalTgRsn OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current owning node's resource sequence number
                for this resource."
        ::= { wfAppnLocalTgEntry 5 }

    wfAppnLocalTgOperational OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the transmission group
                is operational."
        ::= { wfAppnLocalTgEntry 6 }

    wfAppnLocalTgQuiescing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the transmission group
                is quiescing."
        ::= { wfAppnLocalTgEntry 7 }

    wfAppnLocalTgCpCpSession OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether CP-CP sessions are supported on this TG."
        ::= { wfAppnLocalTgEntry 8 }

    wfAppnLocalTgEffCap OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The effective capacity is an integer value that indicates
                the kilo bits per second.
                It is derived from the link bandwidth and maximum load
                factor with the range of 0 thru 255.
                This is an administratively assigned value for this TG.
                DEVIATION: 6611 mib uses range of 0 thru 603,979,776."
        ::= { wfAppnLocalTgEntry 9 }

    wfAppnLocalTgConnCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Cost per connect time: a value representing
                the relative cost per unit of time to use
                the TG. Range is from 0, which means no cost,
                to 255, which indicates maximum cost.
                This is an administratively assigned value associated
                with this TG."
        ::= { wfAppnLocalTgEntry 10 }

    wfAppnLocalTgByteCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Relative cost of transmitting a byte over this link.
                Range is from 0 (lowest cost) to 255.
                This is an administratively assigned value associated
                with this TG."
        ::= { wfAppnLocalTgEntry 11 }

    wfAppnLocalTgSecurity OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The security is represented as an integer with a range of
                1 thru 255 with the most common values enumerated as
                defined above.
                This is an administratively assigned value associated
                with this TG."
        ::= { wfAppnLocalTgEntry 12 }

    wfAppnLocalTgDelay OBJECT-TYPE
        SYNTAX  INTEGER {
                negligible(1),
                terrestrial(2),
                packet(3),
                long(4),
                maximum(5)
                }
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Relative amount of time that it takes for a signal to
                travel the length of the logical link, with a range of
                0 through 255 with some of the more common values enumerated.
                This is an administratively assigned value associated
                with this TG.
                DEVIATION: 6611 MIB, uses units of microseconds."
        DEFVAL  { negligible }
        ::= { wfAppnLocalTgEntry 13 }

    wfAppnLocalTgModemClass OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is used to have multiple images for a
                connection network.  For a connection network
                           it is the same as in the TG vector; for
                           a non-connection network it is X'00'."
        ::= { wfAppnLocalTgEntry 14 }

    wfAppnLocalTgUsr1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "First user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value associated
                with this TG."
        ::= { wfAppnLocalTgEntry 15 }

    wfAppnLocalTgUsr2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Second user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value associated
                with this TG."
        ::= { wfAppnLocalTgEntry 16 }

    wfAppnLocalTgUsr3 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Third user-defined TG characteristic for this TG with
                a range of 0-255.
                This is an administratively assigned value associated
                with this TG."
        ::= { wfAppnLocalTgEntry 17 }

    wfAppnDirectoryPerformance	OBJECT IDENTIFIER ::= { wfAppnDirectory 1 }

    wfAppnDirMaxCaches OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of cache entries allowed. This
                is an administratively assigned value."
        ::= { wfAppnDirectoryPerformance 1 }

    wfAppnDirCurCaches OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current number of cache entries."
        ::= { wfAppnDirectoryPerformance 2 }

    wfAppnDirCurHomeEntries OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current number of home entries."
        ::= { wfAppnDirectoryPerformance 3 }

    wfAppnDirRegEntries OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current number of registered entries."
        ::= { wfAppnDirectoryPerformance 4 }

    wfAppnDirInLocates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of directed locates received."
        ::= { wfAppnDirectoryPerformance 5 }

    wfAppnDirInBcastLocates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of broadcast locates received."
        ::= { wfAppnDirectoryPerformance 6 }

    wfAppnDirOutLocates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of directed locates sent."
        ::= { wfAppnDirectoryPerformance 7 }

    wfAppnDirOutBcastLocates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of broadcast locates sent."
        ::= { wfAppnDirectoryPerformance 8 }

    wfAppnDirNotFoundLocates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of directed locates returned with a 'not found'."
        ::= { wfAppnDirectoryPerformance 9 }

    wfAppnDirNotFoundBcastLocates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of broadcast locates returned with
                a not found."
        ::= { wfAppnDirectoryPerformance 10 }

    wfAppnDirLocateOutstands OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current number of outstanding locates,
                both directed and broadcast.  This value
                varies. A value of zero indicates
                that no locates are unanswered."
        ::= { wfAppnDirectoryPerformance 11 }

    wfAppnDirTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnDirEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table containing information about
                all known LUs and TPs."
        ::= { wfAppnDirectory 2 }

    wfAppnDirEntry OBJECT-TYPE
        SYNTAX	WfAppnDirEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table is indexed by the LU name."
        INDEX	{ wfAppnDirLuName }
        ::= { wfAppnDirTable 1 }

    WfAppnDirEntry ::= SEQUENCE {
    	    wfAppnDirLuName
    		DisplayString,
    	    wfAppnDirServerName
    		DisplayString,
    	    wfAppnDirLuOwnerName
    		DisplayString,
    	    wfAppnDirLocation
    		INTEGER,
    	    wfAppnDirType
    		INTEGER,
    	    wfAppnDirWildCard
    		INTEGER
        }

    wfAppnDirLuName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fully-qualified network LU name in the
                domain of the serving network node."
        ::= { wfAppnDirEntry 1 }

    wfAppnDirServerName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fully-qualified control point (CP) name of the
                network node server.  For unassociated end node
                entries, the end node fully-qualified name
                is returned."
        ::= { wfAppnDirEntry 2 }

    wfAppnDirLuOwnerName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fully-qualified CP name of the node at which
                the LU is located.  This name is the same as the
                serving NN name when the LU is located at a
                network node or an unassociated end node.  It is
                also the same as the fully-qualified LU name
                when this is the control point LU for this node."
        ::= { wfAppnDirEntry 3 }

    wfAppnDirLocation OBJECT-TYPE
        SYNTAX	INTEGER {
    		    local(1),
    		    domain(2),
    		    xdomain(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Specifies the location of the LU."
        ::= { wfAppnDirEntry 4 }

    wfAppnDirType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    home(1),
    		    cache(2),
    		    registered(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Directory types are:
                1 - Home
                      The LU is in the domain of the local network node
                      and the LU information has been configured at the
                      local node.

                2 - Cache
                      The LU has previously been located by a broadcast
                      search and the location information has been saved.

                3 - Register
                      The LU is at an end node that is in the domain
                      of the local network node.  Registered entries
                      are registered by the served end node."
        ::= { wfAppnDirEntry 5 }

    wfAppnDirWildCard OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    entry(2),
    		    partial(3),
    		    full(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "1 - Other means unknown type of LU entry.
                2 - Expliced-entry means the full LUNAME will be used
                    for locating this LU.
                3 - Partial-wildcard means only the non-blank portions
                    of the LUNAME will be used for locating this LU.
                4 - Full-wildcard means all LUNAMES will be directed
                    to this LU."
        ::= { wfAppnDirEntry 6 }

    wfAppnDirDefineTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnDirDefineEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "this table contains entries which define Directory entries"
        ::= { wfAppnDirectory 3 }

    wfAppnDirDefineEntry OBJECT-TYPE
        SYNTAX	WfAppnDirDefineEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfAppnDirDefineTable."
        INDEX	{ wfAppnDirDefineResourceName }
        ::= { wfAppnDirDefineTable 1 }

    WfAppnDirDefineEntry ::= SEQUENCE {
    	    wfAppnDirDefineDelete
    		INTEGER,
    	    wfAppnDirDefineDisable
    		INTEGER,
    	    wfAppnDirDefineResourceName
    		DisplayString,
    	    wfAppnDirDefineResourceType
    		INTEGER,
    	    wfAppnDirDefineParentName
    		DisplayString,
    	    wfAppnDirDefineParentType
    		INTEGER
        }

    wfAppnDirDefineDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete a Directory
                Entry instance."
        DEFVAL	{ created }
        ::= { wfAppnDirDefineEntry 1 }

    wfAppnDirDefineDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this Directory Entry."
        DEFVAL	{ enable }
        ::= { wfAppnDirDefineEntry 2 }

    wfAppnDirDefineResourceName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This specifies the resource name in the local Directory"
        ::= { wfAppnDirDefineEntry 3 }

    wfAppnDirDefineResourceType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    lu(1),
    		    encp(2),
    		    nncp(3),
    		    wildcard(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the resource type in the local Directory"
        DEFVAL	{ lu }
        ::= { wfAppnDirDefineEntry 4 }

    wfAppnDirDefineParentName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the name of the parent of the resource, if the resource
                is an LU"
        ::= { wfAppnDirDefineEntry 5 }

    wfAppnDirDefineParentType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    encp(2),
    		    nncp(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the type of the parent of the resource, if the resource
                is an LU"
        DEFVAL	{ nncp }
        ::= { wfAppnDirDefineEntry 6 }

    wfAppnCosModeTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnCosModeEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table representing all of the defined
                mode names for this node.  The table
                contains the matching COS name."
        ::= { wfAppnCos 1 }

    wfAppnCosModeEntry OBJECT-TYPE
        SYNTAX	WfAppnCosModeEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table is indexed by the Mode Name."
        INDEX	{ wfAppnCosModeName }
        ::= { wfAppnCosModeTable 1 }

    WfAppnCosModeEntry ::= SEQUENCE {
    	    wfAppnCosModeName
    		DisplayString,
    	    wfAppnCosModeCosName
    		DisplayString
        }

    wfAppnCosModeName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned name for this
                mode entry."
        ::= { wfAppnCosModeEntry 1 }

    wfAppnCosModeCosName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "An administratively assigned name for this
                Class of Service."
        ::= { wfAppnCosModeEntry 2 }

    wfAppnCosNameTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnCosNameEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table representing all of the defined class-of-service
                names for this node.  The COS node and TG tables are
                accessed using the same index, which is the COS name."
        ::= { wfAppnCos 2 }

    wfAppnCosNameEntry OBJECT-TYPE
        SYNTAX	WfAppnCosNameEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The COS name is the index to this table."
        INDEX	{ wfAppnCosName }
        ::= { wfAppnCosNameTable 1 }

    WfAppnCosNameEntry ::= SEQUENCE {
    	    wfAppnCosName
    		DisplayString,
    	    wfAppnCosTransPriority
    		INTEGER
        }

    wfAppnCosName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned name for this
                class of service."
        ::= { wfAppnCosNameEntry 1 }

    wfAppnCosTransPriority OBJECT-TYPE
        SYNTAX	INTEGER {
    		    low(1),
    		    medium(2),
    		    high(3),
    		    network(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Transmission priority for this
                class of service.  Values are:
                  Low
                  Medium
                  High
                  Network"
        DEFVAL	{ low }
        ::= { wfAppnCosNameEntry 2 }

    wfAppnCosNodeRowTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnCosNodeRowEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains all node-row information for all
                class of service in this node."
        ::= { wfAppnCos 3 }

    wfAppnCosNodeRowEntry OBJECT-TYPE
        SYNTAX	WfAppnCosNodeRowEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The COS name is the first index and a integer
                is the second index to insure a unique index."
        INDEX	{ wfAppnCosNodeRowName,
    		  wfAppnCosNodeRowIndex }
        ::= { wfAppnCosNodeRowTable 1 }

    WfAppnCosNodeRowEntry ::= SEQUENCE {
    	    wfAppnCosNodeRowName
    		DisplayString,
    	    wfAppnCosNodeRowIndex
    		INTEGER,
    	    wfAppnCosNodeRowWgt
    		INTEGER,
    	    wfAppnCosNodeRowResistMin
    		INTEGER,
    	    wfAppnCosNodeRowResistMax
    		INTEGER,
    	    wfAppnCosNodeRowMinCongestAllow
    		INTEGER,
    	    wfAppnCosNodeRowMaxCongestAllow
    		INTEGER
        }

    wfAppnCosNodeRowName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned name for this
                class of service."
        ::= { wfAppnCosNodeRowEntry 1 }

    wfAppnCosNodeRowIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Index of COS name. This same value is used
                to access the node and TG COS tables.
                Range of values is 0-255."
        ::= { wfAppnCosNodeRowEntry 2 }

    wfAppnCosNodeRowWgt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Weight to be associated with the nodes
                that fit the criteria specified by this node row."
        ::= { wfAppnCosNodeRowEntry 3 }

    wfAppnCosNodeRowResistMin OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Minimum route addition resistance value
                for this node. Range of values is 0-255.
                The lower the value, the more desirable
                the node is for intermediate routing."
        ::= { wfAppnCosNodeRowEntry 4 }

    wfAppnCosNodeRowResistMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum route addition resistance value
                for this node. Range of values is 0-255.
                The lower the value, the more desirable
                the node is for intermediate routing."
        ::= { wfAppnCosNodeRowEntry 5 }

    wfAppnCosNodeRowMinCongestAllow OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether low congestion will be
                tolerated.  The minimum and maximum parameters
                will allow specifying either low-congested,
                high-congested, or either to be used."
        DEFVAL	{ yes }
        ::= { wfAppnCosNodeRowEntry 6 }

    wfAppnCosNodeRowMaxCongestAllow OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether high congestion will be
                tolerated.  The minimum and maximum parameters
                will allow specifying either low-congested,
                high-congested, or either to be used."
        DEFVAL	{ yes }
        ::= { wfAppnCosNodeRowEntry 7 }

    wfAppnCosTgRowTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnCosTgRowEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table containing all the Tg-row information for all
                class of service defined in this node."
        ::= { wfAppnCos 4 }

    wfAppnCosTgRowEntry OBJECT-TYPE
        SYNTAX	WfAppnCosTgRowEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The TgRowName and the TgRowIndex are the index
                for this table."
        INDEX	{ wfAppnCosTgRowName,
    		  wfAppnCosTgRowIndex }
        ::= { wfAppnCosTgRowTable 1 }

    WfAppnCosTgRowEntry ::= SEQUENCE {
    	    wfAppnCosTgRowName
    		DisplayString,
    	    wfAppnCosTgRowIndex
    		INTEGER,
    	    wfAppnCosTgRowWgt
    		INTEGER,
    	    wfAppnCosTgRowEffCapMin
    		INTEGER,
    	    wfAppnCosTgRowEffCapMax
    		INTEGER,
    	    wfAppnCosTgRowConnCostMin
    		INTEGER,
    	    wfAppnCosTgRowConnCostMax
    		INTEGER,
    	    wfAppnCosTgRowByteCostMin
    		INTEGER,
    	    wfAppnCosTgRowByteCostMax
    		INTEGER,
    	    wfAppnCosTgRowSecurityMin
    		INTEGER,
    	    wfAppnCosTgRowSecurityMax
    		INTEGER,
    	    wfAppnCosTgRowDelayMin
    		INTEGER,
    	    wfAppnCosTgRowDelayMax
    		INTEGER,
    	    wfAppnCosTgRowUsr1Min
    		INTEGER,
    	    wfAppnCosTgRowUsr1Max
    		INTEGER,
    	    wfAppnCosTgRowUsr2Min
    		INTEGER,
    	    wfAppnCosTgRowUsr2Max
    		INTEGER,
    	    wfAppnCosTgRowUsr3Min
    		INTEGER,
    	    wfAppnCosTgRowUsr3Max
    		INTEGER
        }

    wfAppnCosTgRowName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Administratively-assigned name for this
                class of service."
        ::= { wfAppnCosTgRowEntry 1 }

    wfAppnCosTgRowIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Index of COS name. This same value is used
                to access the node and TG COS tables."
        ::= { wfAppnCosTgRowEntry 2 }

    wfAppnCosTgRowWgt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Weight to be associated with the nodes
                that fit the criteria specified by this tg-row."
        ::= { wfAppnCosTgRowEntry 3 }

    wfAppnCosTgRowEffCapMin OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Minimum acceptable speed for this Class of Service.
                The effective capacity is an integer value that indicates
                the actual kilo bits per second.
                It is derived from the link bandwidth and maximum load
                factor with the range of 0 thru 255
                DEVIATION: 6611 mib uses range of 0 thru 603,979,776."
        DEFVAL	{ 133 }
        ::= { wfAppnCosTgRowEntry 4 }

    wfAppnCosTgRowEffCapMax OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum acceptable speed for this Class of Service.
                The effective capacity is an integer value that indicates
                the actual kilo bits per second.
                It is derived from the link bandwidth and maximum load
                factor with the range of 0 thru 255.
                DEVIATION: 6611 mib uses range of 0 thru 603,979,776."
        DEFVAL	{ 133 }
        ::= { wfAppnCosTgRowEntry 5 }

    wfAppnCosTgRowConnCostMin OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Minimum acceptable cost per connect time
                for this Class of Service.
                Cost per connect time: a value representing
                the relative cost per unit of time to use
                the TG. Range is from 0, which means no cost,
                to 255."
        ::= { wfAppnCosTgRowEntry 6 }

    wfAppnCosTgRowConnCostMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum acceptable cost per connect time
                for this Class of Service.
                Cost per connect time: a value representing
                the relative cost per unit of time to use
                the TG. Range is from 0, which means no cost,
                to 255."
        ::= { wfAppnCosTgRowEntry 7 }

    wfAppnCosTgRowByteCostMin OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Minimum acceptable cost per byte
                for this Class of Service."
        ::= { wfAppnCosTgRowEntry 8 }

    wfAppnCosTgRowByteCostMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum acceptable cost per byte
                for this Class of Service."
        ::= { wfAppnCosTgRowEntry 9 }

    wfAppnCosTgRowSecurityMin OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Minimum acceptable security
                for this Class of Service."
        ::= { wfAppnCosTgRowEntry 10 }

    wfAppnCosTgRowSecurityMax OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum acceptable security
                for this Class of Service."
        ::= { wfAppnCosTgRowEntry 11 }

    wfAppnCosTgRowDelayMin OBJECT-TYPE
        SYNTAX  INTEGER {
                negligible(1),
                terrestrial(2),
                packet(3),
                long(4),
                maximum(5)
                }
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Minimum acceptable propagation delay for this class of service.
                Relative amount of time that it takes for a signal to travel
                the length of the logical link.
                DEVIATION: 6611 MIB, uses units of microseconds."
        DEFVAL  { negligible }
        ::= { wfAppnCosTgRowEntry 12 }

    wfAppnCosTgRowDelayMax OBJECT-TYPE
        SYNTAX  INTEGER {
                negligible(1),
                terrestrial(2),
                packet(3),
                long(4),
                maximum(5)
                }
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum acceptable propagation delay for this class of service.
                Relative amount of time that it takes for a signal to travel
                the length of the logical link.
                DEVIATION: 6611 MIB, uses units of microseconds."
        DEFVAL  { negligible }
        ::= { wfAppnCosTgRowEntry 13 }

    wfAppnCosTgRowUsr1Min OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Minimum acceptable value for this
                user defined characteristic.
                Range of values is 0-255."
        ::= { wfAppnCosTgRowEntry 14 }

    wfAppnCosTgRowUsr1Max OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum acceptable value for this
                user defined characteristic.
                Range of values is 0-255."
        ::= { wfAppnCosTgRowEntry 15 }

    wfAppnCosTgRowUsr2Min OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Minimum acceptable value for this
                user defined characteristic.
                Range of values is 0-255."
        ::= { wfAppnCosTgRowEntry 16 }

    wfAppnCosTgRowUsr2Max OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum acceptable value for this
                user defined characteristic.
                Range of values is 0-255."
        ::= { wfAppnCosTgRowEntry 17 }

    wfAppnCosTgRowUsr3Min OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Minimum acceptable value for this
                user defined characteristic.
                Range of values is 0-255."
        ::= { wfAppnCosTgRowEntry 18 }

    wfAppnCosTgRowUsr3Max OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum acceptable value for this
                user defined characteristic.
                Range of values is 0-255."
        ::= { wfAppnCosTgRowEntry 19 }

    wfAppnTpPingTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnTpPingEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains an entry for each instance of the APING application"
        ::= { wfAppnTps 1 }

    wfAppnTpPingEntry OBJECT-TYPE
        SYNTAX	WfAppnTpPingEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfAppnTpPingTable."
        INDEX	{ wfAppnTpPingIndex }
        ::= { wfAppnTpPingTable 1 }

    WfAppnTpPingEntry ::= SEQUENCE {
    	    wfAppnTpPingDelete
    		INTEGER,
    	    wfAppnTpPingDisable
    		INTEGER,
    	    wfAppnTpPingIndex
    		INTEGER,
    	    wfAppnTpPingFqPluName
    		DisplayString,
    	    wfAppnTpPingDataLength
    		INTEGER,
    	    wfAppnTpPingConsecutiveSends
    		INTEGER,
    	    wfAppnTpPingEchoDisable
    		INTEGER,
    	    wfAppnTpPingIterations
    		INTEGER,
    	    wfAppnTpPingPartnerTpName
    		DisplayString,
    	    wfAppnTpPingMode
    		DisplayString,
    	    wfAppnTpPingState
    		INTEGER,
    	    wfAppnTpPingAllocTime
    		INTEGER,
    	    wfAppnTpPingMinTime
    		INTEGER,
    	    wfAppnTpPingMaxTime
    		INTEGER,
    	    wfAppnTpPingAvgTime
    		INTEGER,
    	    wfAppnTpPingPartnerVersion
    		DisplayString
        }

    wfAppnTpPingDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete a APING instance."
        DEFVAL	{ created }
        ::= { wfAppnTpPingEntry 1 }

    wfAppnTpPingDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this APING instance."
        DEFVAL	{ enable }
        ::= { wfAppnTpPingEntry 2 }

    wfAppnTpPingIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the index of the Ping entry"
        ::= { wfAppnTpPingEntry 3 }

    wfAppnTpPingFqPluName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the Fully-Qualified name of the Partner LU running the APINGD TP"
        ::= { wfAppnTpPingEntry 4 }

    wfAppnTpPingDataLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the length of the test data to be sent to the LU being PING-ed"
        DEFVAL	{ 100 }
        ::= { wfAppnTpPingEntry 5 }

    wfAppnTpPingConsecutiveSends OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the number of consecutive sends that will be issued"
        DEFVAL	{ 1 }
        ::= { wfAppnTpPingEntry 6 }

    wfAppnTpPingEchoDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies whether the Target of the PING will be requested
                to echo the data"
        DEFVAL	{ enable }
        ::= { wfAppnTpPingEntry 7 }

    wfAppnTpPingIterations OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the number of times the PING should be repeated"
        DEFVAL	{ 2 }
        ::= { wfAppnTpPingEntry 8 }

    wfAppnTpPingPartnerTpName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the partner TP name to ping. If no name is specified
                'APINGD' will be used"
        ::= { wfAppnTpPingEntry 9 }

    wfAppnTpPingMode OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the mode to be used for this PING"
        ::= { wfAppnTpPingEntry 10 }

    wfAppnTpPingState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    init(1),
    		    started(2),
    		    ok(3),
    		    failed(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the current state of the PING request"
        ::= { wfAppnTpPingEntry 11 }

    wfAppnTpPingAllocTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the time (in milliseconds) it took to allocate the
                PING conversation"
        ::= { wfAppnTpPingEntry 12 }

    wfAppnTpPingMinTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the minimum time (in milliseconds) it took to
                PING the partner"
        ::= { wfAppnTpPingEntry 13 }

    wfAppnTpPingMaxTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the maximum time (in milliseconds) it took to
                PING the partner"
        ::= { wfAppnTpPingEntry 14 }

    wfAppnTpPingAvgTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the average time (in milliseconds) it took to
                PING the partner"
        ::= { wfAppnTpPingEntry 15 }

    wfAppnTpPingPartnerVersion OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the version string returned by the partner"
        ::= { wfAppnTpPingEntry 16 }

    wfAppnTpTunnelTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnTpTunnelEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains entries for each APPN Tunnel"
        ::= { wfAppnTps 3 }

    wfAppnTpTunnelEntry OBJECT-TYPE
        SYNTAX	WfAppnTpTunnelEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfAppnTpTunnelTable."
        INDEX	{ wfAppnTpTunnelCct }
        ::= { wfAppnTpTunnelTable 1 }

    WfAppnTpTunnelEntry ::= SEQUENCE {
    	    wfAppnTpTunnelDelete
    		INTEGER,
    	    wfAppnTpTunnelDisable
    		INTEGER,
    	    wfAppnTpTunnelState
    		INTEGER,
    	    wfAppnTpTunnelCct
    		INTEGER,
    	    wfAppnTpTunnelFqPluName
    		DisplayString,
    	    wfAppnTpTunnelModeName
    		DisplayString,
    	    wfAppnTpTunnelMedia
    		INTEGER,
    	    wfAppnTpTunnelMacAddress
    		OCTET STRING,
    	    wfAppnTpTunnelTxFrames
    		Counter,
    	    wfAppnTpTunnelRxFrames
    		Counter,
    	    wfAppnTpTunnelDropFrames
    		Counter
        }

    wfAppnTpTunnelDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete an APPN Tunnel
                instance."
        DEFVAL	{ created }
        ::= { wfAppnTpTunnelEntry 1 }

    wfAppnTpTunnelDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this APPN Tunnel
                instance."
        DEFVAL	{ enable }
        ::= { wfAppnTpTunnelEntry 2 }

    wfAppnTpTunnelState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the Tunnel."
        DEFVAL	{ notpresent }
        ::= { wfAppnTpTunnelEntry 3 }

    wfAppnTpTunnelCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the circuit number of the circuit running over this APPN Tunnel"
        ::= { wfAppnTpTunnelEntry 4 }

    wfAppnTpTunnelFqPluName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the Partner LU for this APPN Tunnel"
        ::= { wfAppnTpTunnelEntry 5 }

    wfAppnTpTunnelModeName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the Mode for this APPN Tunnel"
        ::= { wfAppnTpTunnelEntry 6 }

    wfAppnTpTunnelMedia OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ring(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the media to be emulated by this tunnel"
        DEFVAL	{ ring }
        ::= { wfAppnTpTunnelEntry 7 }

    wfAppnTpTunnelMacAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies the local MAC address to be used by this tunnel"
        ::= { wfAppnTpTunnelEntry 8 }

    wfAppnTpTunnelTxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of frames transmitted over this APPN Tunnel"
        ::= { wfAppnTpTunnelEntry 9 }

    wfAppnTpTunnelRxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of frames received over this APPN Tunnel"
        ::= { wfAppnTpTunnelEntry 10 }

    wfAppnTpTunnelDropFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of frames dropped by this APPN Tunnel"
        ::= { wfAppnTpTunnelEntry 11 }

    wfAppnDlurLuTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnDlurLuEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains an entry for each LU currently being serviced by DLUR"
        ::= { wfAppnDlu 1 }

    wfAppnDlurLuEntry OBJECT-TYPE
        SYNTAX	WfAppnDlurLuEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfAppnDlurLuTable."
        INDEX	{ wfAppnDlurLuName }
        ::= { wfAppnDlurLuTable 1 }

    WfAppnDlurLuEntry ::= SEQUENCE {
    	    wfAppnDlurLuName
    		DisplayString,
    	    wfAppnDlurLuPuName
    		DisplayString,
    	    wfAppnDlurLuDlusName
    		DisplayString,
    	    wfAppnDlurLuNauAddress
    		INTEGER,
    	    wfAppnDlurLuPluName
    		DisplayString,
    	    wfAppnDlurLuRscv
    		OCTET STRING,
    	    wfAppnDlurLuRscvText
    		DisplayString
        }

    wfAppnDlurLuName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the name of the LU"
        ::= { wfAppnDlurLuEntry 1 }

    wfAppnDlurLuPuName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the name of the PU associated with the LU"
        ::= { wfAppnDlurLuEntry 2 }

    wfAppnDlurLuDlusName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the name of the DLUS node supporting this LU"
        ::= { wfAppnDlurLuEntry 3 }

    wfAppnDlurLuNauAddress OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the Network Addressable Unit address of this LU"
        ::= { wfAppnDlurLuEntry 4 }

    wfAppnDlurLuPluName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the name of the Partner LU"
        ::= { wfAppnDlurLuEntry 5 }

    wfAppnDlurLuRscv OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the RSCV being used by this LU session"
        ::= { wfAppnDlurLuEntry 6 }

    wfAppnDlurLuRscvText OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the RSCV (in a human-readable format) for this DLUR connection"
        ::= { wfAppnDlurLuEntry 7 }

    wfAppnDlurPuTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnDlurPuEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains an entry for each PU currently being serviced by DLUR"
        ::= { wfAppnDlu 2 }

    wfAppnDlurPuEntry OBJECT-TYPE
        SYNTAX	WfAppnDlurPuEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfAppnDlurPuTable."
        INDEX	{ wfAppnDlurPuName }
        ::= { wfAppnDlurPuTable 1 }

    WfAppnDlurPuEntry ::= SEQUENCE {
    	    wfAppnDlurPuName
    		DisplayString,
    	    wfAppnDlurPuId
    		OCTET STRING,
    	    wfAppnDlurPuDefinedDlusName
    		DisplayString,
    	    wfAppnDlurPuBackupDlusName
    		DisplayString,
    	    wfAppnDlurPuActiveDlusName
    		DisplayString,
    	    wfAppnDlurPuPcid
    		OCTET STRING,
    	    wfAppnDlurPuFqCpName
    		DisplayString
        }

    wfAppnDlurPuName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the name of the PU"
        ::= { wfAppnDlurPuEntry 1 }

    wfAppnDlurPuId OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ID of this PU"
        ::= { wfAppnDlurPuEntry 2 }

    wfAppnDlurPuDefinedDlusName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the name of the primary DLUS node defined this PU"
        ::= { wfAppnDlurPuEntry 3 }

    wfAppnDlurPuBackupDlusName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the name of the backup DLUS node defined this PU"
        ::= { wfAppnDlurPuEntry 4 }

    wfAppnDlurPuActiveDlusName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the name of the DLUS node currently supporting this PU"
        ::= { wfAppnDlurPuEntry 5 }

    wfAppnDlurPuPcid OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the PCID of the DLUR 'pipe' session"
        ::= { wfAppnDlurPuEntry 6 }

    wfAppnDlurPuFqCpName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the Fully-qualified CP name of the node assigning the
                PCID for the DLUR 'pipe' session"
        ::= { wfAppnDlurPuEntry 7 }

    wfAppnDlurDlusTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppnDlurDlusEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains an entry for each DLUS known to this DLUR"
        ::= { wfAppnDlu 3 }

    wfAppnDlurDlusEntry OBJECT-TYPE
        SYNTAX	WfAppnDlurDlusEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfAppnDlurDlusTable."
        INDEX	{ wfAppnDlurDlusName }
        ::= { wfAppnDlurDlusTable 1 }

    WfAppnDlurDlusEntry ::= SEQUENCE {
    	    wfAppnDlurDlusName
    		DisplayString,
    	    wfAppnDlurDlusIsDefault
    		INTEGER,
    	    wfAppnDlurDlusIsBackupDefault
    		INTEGER,
    	    wfAppnDlurDlusPipeState
    		INTEGER,
    	    wfAppnDlurDlusActivePus
    		INTEGER,
    	    wfAppnDlurDlusSentReqactpus
    		Counter,
    	    wfAppnDlurDlusRcvReqactpuRsps
    		Counter,
    	    wfAppnDlurDlusRcvActpus
    		Counter,
    	    wfAppnDlurDlusSentActpuRsps
    		Counter,
    	    wfAppnDlurDlusSentReqdactpus
    		Counter,
    	    wfAppnDlurDlusRcvReqdactpuRsps
    		Counter,
    	    wfAppnDlurDlusRcvDactpus
    		Counter,
    	    wfAppnDlurDlusSentDactpuRsps
    		Counter,
    	    wfAppnDlurDlusRcvActlus
    		Counter,
    	    wfAppnDlurDlusSentActluRsps
    		Counter,
    	    wfAppnDlurDlusRcvDactlus
    		Counter,
    	    wfAppnDlurDlusSentDactluRsps
    		Counter,
    	    wfAppnDlurDlusRcvSscpPuMus
    		Counter,
    	    wfAppnDlurDlusSentSscpPuMus
    		Counter,
    	    wfAppnDlurDlusRcvSscpLuMus
    		Counter,
    	    wfAppnDlurDlusSentSscpLuMus
    		Counter
        }

    wfAppnDlurDlusName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the fully-qualified name of the DLUS node"
        ::= { wfAppnDlurDlusEntry 1 }

    wfAppnDlurDlusIsDefault OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates if the DLUS is the default DLUS"
        ::= { wfAppnDlurDlusEntry 2 }

    wfAppnDlurDlusIsBackupDefault OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates if the DLUS is the default backup DLUS"
        ::= { wfAppnDlurDlusEntry 3 }

    wfAppnDlurDlusPipeState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    inactive(1),
    		    pendactive(2),
    		    active(3),
    		    pendinact(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the state of the DLUR-DLUS pipe"
        ::= { wfAppnDlurDlusEntry 4 }

    wfAppnDlurDlusActivePus OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of PUs currently using this DLUR-DLUS pipe"
        ::= { wfAppnDlurDlusEntry 5 }

    wfAppnDlurDlusSentReqactpus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of REQACTPUs sent over this DLUR-DLUS pipe"
        ::= { wfAppnDlurDlusEntry 6 }

    wfAppnDlurDlusRcvReqactpuRsps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of REQACTPU responses received over this DLUR-DLUS pipe"
        ::= { wfAppnDlurDlusEntry 7 }

    wfAppnDlurDlusRcvActpus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of ACTPUs received over this DLUR-DLUS pipe"
        ::= { wfAppnDlurDlusEntry 8 }

    wfAppnDlurDlusSentActpuRsps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of ACTPU responses sent over this DLUR-DLUS pipe"
        ::= { wfAppnDlurDlusEntry 9 }

    wfAppnDlurDlusSentReqdactpus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of REQDACTPUs sent over this DLUR-DLUS pipe"
        ::= { wfAppnDlurDlusEntry 10 }

    wfAppnDlurDlusRcvReqdactpuRsps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of REQDACTPU responses received over this DLUR-DLUS pipe"
        ::= { wfAppnDlurDlusEntry 11 }

    wfAppnDlurDlusRcvDactpus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of DACTPUs received over this DLUR-DLUS pipe"
        ::= { wfAppnDlurDlusEntry 12 }

    wfAppnDlurDlusSentDactpuRsps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of DACTPU responses sent over this DLUR-DLUS pipe"
        ::= { wfAppnDlurDlusEntry 13 }

    wfAppnDlurDlusRcvActlus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of ACTLUs received over this DLUR-DLUS pipe"
        ::= { wfAppnDlurDlusEntry 14 }

    wfAppnDlurDlusSentActluRsps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of ACTLU responses sent over this DLUR-DLUS pipe"
        ::= { wfAppnDlurDlusEntry 15 }

    wfAppnDlurDlusRcvDactlus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of DACTLUs received over this DLUR-DLUS pipe"
        ::= { wfAppnDlurDlusEntry 16 }

    wfAppnDlurDlusSentDactluRsps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of DACTLU responses sent over this DLUR-DLUS pipe"
        ::= { wfAppnDlurDlusEntry 17 }

    wfAppnDlurDlusRcvSscpPuMus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of SSCP-PU MUs received over this DLUR-DLUS pipe"
        ::= { wfAppnDlurDlusEntry 18 }

    wfAppnDlurDlusSentSscpPuMus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of SSCP-PU MUs sent over this DLUR-DLUS pipe"
        ::= { wfAppnDlurDlusEntry 19 }

    wfAppnDlurDlusRcvSscpLuMus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of SSCP-LU MUs received over this DLUR-DLUS pipe"
        ::= { wfAppnDlurDlusEntry 20 }

    wfAppnDlurDlusSentSscpLuMus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of SSCP-LU MUs sent over this DLUR-DLUS pipe"
        ::= { wfAppnDlurDlusEntry 21 }

    END  -- Wellfleet-APPN-MIB
-- @(#)WSCCS f/mibs-arp.mib 1.1 8/30/95
Wellfleet-ARP-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:36:43 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfArpGroup
        FROM Wellfleet-COMMON-MIB;


    wfArpBase	OBJECT IDENTIFIER ::= { wfArpGroup 1 }

    wfArpBaseCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform a set operation on this
                object in order to create/delete ARP."
        DEFVAL	{ created }
        ::= { wfArpBase 1 }

    wfArpBaseEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable Parameter indicates whether
                this ARP record is enabled or disabled."
        DEFVAL	{ enabled }
        ::= { wfArpBase 2 }

    wfArpBaseForwarding OBJECT-TYPE
        SYNTAX	INTEGER {
    		    forwarding(1),
    		    notforwarding(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Equivalent to IP Host Only. This attribute
                says that ARP should send unknown addresses to the
                bridge for further handling"
        DEFVAL	{ forwarding }
        ::= { wfArpBase 3 }

    wfArpBaseNonlocalSrc OBJECT-TYPE
        SYNTAX	INTEGER {
    		    log(1),
    		    drop(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DROP_LOG/DROP Parameter indicates whether
                or not log an invalid ARP source address
                when processing an ARP request.
                If DROP_LOG is set, log the invalid ARP source
                address; if DROP is set, do not log it.
                In both cases, the ARP request from the invalid
                source address will be droped."
        DEFVAL	{ drop }
        ::= { wfArpBase 4 }

    wfArpBaseNonlocalDest OBJECT-TYPE
        SYNTAX	INTEGER {
    		    drop(1),
    		    accept(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DEST_DROP/DEST_ACCEPT Parameter indicates
                whether or not drop/accept an ARP Request
                in which the destination address is in a
                different network/subnetwork from the
                source address.
                If DEST_DROP is set, drop the ARP Request;
                If DEST_ACCEPT is set, process the ARP Request.
                The default is DEST_DROP."
        DEFVAL	{ drop }
        ::= { wfArpBase 5 }

    wfArpIntfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfArpIntfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "List of configured ARP interfaces"
        ::= { wfArpGroup 2 }

    wfArpIntfEntry OBJECT-TYPE
        SYNTAX	WfArpIntfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A description of an ARP interface"
        INDEX	{ wfArpCctno }
        ::= { wfArpIntfTable 1 }

    WfArpIntfEntry ::= SEQUENCE {
    	    wfArpCreate
    		INTEGER,
    	    wfArpEnable
    		INTEGER,
    	    wfArpCctno
    		INTEGER
        }

    wfArpCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this ARP intf record is to be deleted or created"
        DEFVAL	{ created }
        ::= { wfArpIntfEntry 1 }

    wfArpEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this ARP intf record is to be enabled or disabled"
        DEFVAL	{ enabled }
        ::= { wfArpIntfEntry 2 }

    wfArpCctno OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Which Circuit arp should run on"
        ::= { wfArpIntfEntry 3 }

    END  -- Wellfleet-ARP-MIB
-- @(#)WSCCS q/mibs-async.mib 1.1 8/30/95
Wellfleet-ASYNC-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:36:49 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfLine
        FROM Wellfleet-COMMON-MIB;


    wfAsyncTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAsyncEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ASYNC  line record"
        ::= { wfLine 3 }

    wfAsyncEntry OBJECT-TYPE
        SYNTAX	WfAsyncEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the ASYNC table"
        INDEX	{ wfAsyncSlot,
    		  wfAsyncConnector }
        ::= { wfAsyncTable 1 }

    WfAsyncEntry ::= SEQUENCE {
    	    wfAsyncDelete
    		INTEGER,
    	    wfAsyncDisable
    		INTEGER,
    	    wfAsyncState
    		INTEGER,
    	    wfAsyncSlot
    		INTEGER,
    	    wfAsyncConnector
    		INTEGER,
    	    wfAsyncCct
    		INTEGER,
    	    wfAsyncMtu
    		INTEGER,
    	    wfAsyncMadr
    		OCTET STRING,
    	    wfAsyncStartProtocol
    		INTEGER,
    	    wfAsyncRxOctets
    		Counter,
    	    wfAsyncTxOctets
    		Counter,
    	    wfAsyncRxErrors
    		Counter,
    	    wfAsyncTxErrors
    		Counter,
    	    wfAsyncRxLackRescs
    		Counter,
    	    wfAsyncTxLackRescs
    		Counter,
    	    wfAsyncTxUnderFlows
    		Counter,
    	    wfAsyncTxRejects
    		Counter,
    	    wfAsyncRxRejects
    		Counter,
    	    wfAsyncRxOverFlows
    		Counter,
    	    wfAsyncRxBadOctets
    		Counter,
    	    wfAsyncRxRunts
    		Counter,
    	    wfAsyncTxQueueLength
    		INTEGER,
    	    wfAsyncRxQueueLength
    		INTEGER,
    	    wfAsyncRxReplenMisses
    		Counter,
    	    wfAsyncLineNumber
    		INTEGER,
    	    wfAsyncRemoteAddress
    		IpAddress,
    	    wfAsyncRemotePort
    		INTEGER,
    	    wfAsyncLocalPort
    		INTEGER,
    	    wfAsyncBaud
    		INTEGER,
    	    wfAsyncIdleTimer
    		INTEGER,
    	    wfAsyncRxWindow
    		INTEGER,
    	    wfAsyncMinRxWindows
    		Counter,
    	    wfASyncSecTxQmaxs
    		Counter,
    	    wfASyncSecTxQlens
    		Counter,
    	    wfAsyncTCPKeepalive
    		INTEGER,
    	    wfAsyncTCPInactivityLimit
    		INTEGER,
    	    wfAsyncCfgTxQueueLength
    		INTEGER,
    	    wfAsyncCfgRxQueueLength
    		INTEGER
        }

    wfAsyncDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfAsyncEntry 1 }

    wfAsyncDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfAsyncEntry 2 }

    wfAsyncState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4),
    		    dsrwait(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line Driver state variable, Not Present, DSR Wait,
                Init, Down, Up"
        DEFVAL	{ notpresent }
        ::= { wfAsyncEntry 3 }

    wfAsyncSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Slot, filled in by driver"
        ::= { wfAsyncEntry 4 }

    wfAsyncConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Connector, filled in by driver. For the ASN
                this attribute is an encoded value and is equal to
                'module'*10 + 'connector'. Where 'module' is defined in
                attribute 86 and 'connector' is defined in attribute 78
                of this table. For non-ASN platforms this attribute is
                the physical connector number on the slot."
        ::= { wfAsyncEntry 5 }

    wfAsyncCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "CCT number for this line instance"
        ::= { wfAsyncEntry 6 }

    wfAsyncMtu OBJECT-TYPE
        SYNTAX	INTEGER(3..1580)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "MTU parameter, this is buffer size for ASYNC media, fixed"
        DEFVAL	{ 1000 }
        ::= { wfAsyncEntry 7 }

    wfAsyncMadr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line MAC address, fixed - line driver fills in from the 48 bit
                address stored in the serial number prom for this connector."
        ::= { wfAsyncEntry 8 }

    wfAsyncStartProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    loop(1),
    		    originate(2),
    		    answer(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Start protocol selection is provided via this parameter. The
                supported protocols can be selected per interface."
        DEFVAL	{ answer }
        ::= { wfAsyncEntry 9 }

    wfAsyncRxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets received without error"
        ::= { wfAsyncEntry 10 }

    wfAsyncTxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets transmitted without error"
        ::= { wfAsyncEntry 11 }

    wfAsyncRxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of receive errors"
        ::= { wfAsyncEntry 12 }

    wfAsyncTxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmission errors"
        ::= { wfAsyncEntry 13 }

    wfAsyncRxLackRescs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Rx frames dropped due to lack of buffer resources"
        ::= { wfAsyncEntry 14 }

    wfAsyncTxLackRescs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames clipped in driver's transmit routine due to transmit
                congestion."
        ::= { wfAsyncEntry 15 }

    wfAsyncTxUnderFlows OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmission underflows, device FIFO went empty before
                next DMA request was granted."
        ::= { wfAsyncEntry 16 }

    wfAsyncTxRejects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of reject frames which were transmitted"
        ::= { wfAsyncEntry 17 }

    wfAsyncRxRejects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of reject frames which were received"
        ::= { wfAsyncEntry 18 }

    wfAsyncRxOverFlows OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of receive overflows, device FIFO overflowed before next
                DMA cycle granted.  No buffer resources available."
        ::= { wfAsyncEntry 19 }

    wfAsyncRxBadOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of bad receive frames, caused by FCS errors or non octet aligned."
        ::= { wfAsyncEntry 20 }

    wfAsyncRxRunts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of runt frames received"
        ::= { wfAsyncEntry 21 }

    wfAsyncTxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current Transmit Queue Length."
        ::= { wfAsyncEntry 22 }

    wfAsyncRxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current Receive Queue Length."
        ::= { wfAsyncEntry 23 }

    wfAsyncRxReplenMisses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packet buffer misses while attempting to replenish driver
                receive ring."
        ::= { wfAsyncEntry 24 }

    wfAsyncLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "line number for this line instance"
        ::= { wfAsyncEntry 25 }

    wfAsyncRemoteAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Remote TCP host  IP address"
        ::= { wfAsyncEntry 26 }

    wfAsyncRemotePort OBJECT-TYPE
        SYNTAX	INTEGER {
    		    port(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Remote  port  for TCP connection"
        DEFVAL	{ port }
        ::= { wfAsyncEntry 27 }

    wfAsyncLocalPort OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(2100)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Local  port  for TCP connection"
        DEFVAL	{ default }
        ::= { wfAsyncEntry 28 }

    wfAsyncBaud OBJECT-TYPE
        SYNTAX	INTEGER {
    		    r300(300),
    		    r1200(1200),
    		    r2400(2400),
    		    r4800(4800),
    		    r9600(9600),
    		    r19200(19200)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Async  line  speed"
        DEFVAL	{ r9600 }
        ::= { wfAsyncEntry 29 }

    wfAsyncIdleTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..300)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Async  line Idle timer"
        DEFVAL	{ 20 }
        ::= { wfAsyncEntry 30 }

    wfAsyncRxWindow OBJECT-TYPE
        SYNTAX	INTEGER(512..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured TCP receive window"
        DEFVAL	{ 4096 }
        ::= { wfAsyncEntry 31 }

    wfAsyncMinRxWindows OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Low-water mark of receive window (for latest connection)"
        ::= { wfAsyncEntry 32 }

    wfASyncSecTxQmaxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "secondary TX queue hi-water mark (for this connection)"
        ::= { wfAsyncEntry 33 }

    wfASyncSecTxQlens OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "secondary TX queue present value"
        ::= { wfAsyncEntry 34 }

    wfAsyncTCPKeepalive OBJECT-TYPE
        SYNTAX	INTEGER(3..180)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Keepalive timer. A keepalive (probe) message is sent out
                if there is no activity in this number of seconds."
        DEFVAL	{ 8 }
        ::= { wfAsyncEntry 35 }

    wfAsyncTCPInactivityLimit OBJECT-TYPE
        SYNTAX	INTEGER(-65536..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Inactivity limit. Connection (eligable for) reset
                if no activity in this number of seconds."
        DEFVAL	{ 300 }
        ::= { wfAsyncEntry 36 }

    wfAsyncCfgTxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured Transmit Queue Length. Values other than zero over-ride the
                router selected values.  A value of zero has a special meaning.  Zero
                causes router based default values to be used.  Values larger than the
                compiled ring size are truncated to the compiled ring size. "
        ::= { wfAsyncEntry 37 }

    wfAsyncCfgRxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured Receive Queue Length. Values other than zero over-ride the
                router selected values.  A value of zero has a special meaning.  Zero
                causes router based default values to be used.  Values larger than the
                compiled ring size are truncated to the compiled ring size. "
        ::= { wfAsyncEntry 38 }

    END  -- Wellfleet-ASYNC-MIB
-- @(#)WSCCS z/mibs-at.mib 1.1 8/30/95
Wellfleet-AT-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:36:54 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfAppletalkGroup
        FROM Wellfleet-COMMON-MIB;


    wfAppleBase	OBJECT IDENTIFIER ::= { wfAppletalkGroup 1 }

    wfAppleBaseDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter for determining whether
                or not AppleTalk is configured on this slot."
        DEFVAL	{ created }
        ::= { wfAppleBase 1 }

    wfAppleBaseDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for determining whether
                or not to startup AppleTalk."
        DEFVAL	{ enabled }
        ::= { wfAppleBase 2 }

    wfAppleBaseState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpres(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This parameter relfects the current state of AppleTalk."
        DEFVAL	{ down }
        ::= { wfAppleBase 3 }

    wfAppleBaseDebugLevel OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Appletalk has control of what debug and info messages
                are printed."
        ::= { wfAppleBase 4 }

    wfAppleBaseDdpQueLen OBJECT-TYPE
        SYNTAX	INTEGER(10..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "wfAppleBaseDdpQueLen is no longer used."
        DEFVAL	{ 20 }
        ::= { wfAppleBase 5 }

    wfAppleBaseHomedPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The circuit number of the port on which NBP will register this
                router."
        ::= { wfAppleBase 6 }

    wfAppleBaseTotalNets OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of networks from all
                routing protocols."
        ::= { wfAppleBase 7 }

    wfAppleBaseTotalZones OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of zone/rtmp associations. Also
                the total number of instances of zones in the
                mib."
        ::= { wfAppleBase 8 }

    wfAppleBaseTotalZoneNames OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of unique zone names."
        ::= { wfAppleBase 9 }

    wfAppleBaseTotalAarpEntries OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of AARP entries."
        ::= { wfAppleBase 10 }

    wfAppleBaseEstimatedNets OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter indicates the estimated number of networks
                that the router will need to keep in its routing table."
        ::= { wfAppleBase 11 }

    wfAppleBaseEstimatedHosts OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter indicates the estimated number of end stations
                that the router will need to keep in its AARP table.  This should
                not include end stations that are reached through another router."
        ::= { wfAppleBase 12 }

    wfAppleRtmpTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppleRtmpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The table of elements of AppleTalk's routing RTMP table"
        ::= { wfAppletalkGroup 2 }

    wfAppleRtmpEntry OBJECT-TYPE
        SYNTAX	WfAppleRtmpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Routing table"
        INDEX	{ wfAppleRtmpNetStart,
    		  wfAppleRtmpNetEnd }
        ::= { wfAppleRtmpTable 1 }

    WfAppleRtmpEntry ::= SEQUENCE {
    	    wfAppleRtmpNetStart
    		INTEGER,
    	    wfAppleRtmpNetEnd
    		INTEGER,
    	    wfAppleRtmpPort
    		INTEGER,
    	    wfAppleRtmpHops
    		INTEGER,
    	    wfAppleRtmpNextHopNet
    		INTEGER,
    	    wfAppleRtmpNextHopNode
    		INTEGER,
    	    wfAppleRtmpState
    		INTEGER,
    	    wfAppleRtmpProto
    		INTEGER,
    	    wfAppleRtmpAurpNextHopIpAddress
    		IpAddress
        }

    wfAppleRtmpNetStart OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The destinatination network range of this
                route to which this entry pertains.  The route
                is considered the best route to that network.
                There wil only be one route to a single destination.
                The address will be in the form of
                [network min - network max]."
        ::= { wfAppleRtmpEntry 1 }

    wfAppleRtmpNetEnd OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network max in the destination network range
                to which the routing entry pertains."
        ::= { wfAppleRtmpEntry 2 }

    wfAppleRtmpPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The index value which uniquely identifies the
                local interface through which the next hop of
                this route should be reached.  The interface
                identified by a particular value of this index
                is the same interface as identified by the same
                value of ifIndex."
        ::= { wfAppleRtmpEntry 3 }

    wfAppleRtmpHops OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The routing metric to get to this destination
                network.  The measurement is in terms of hops."
        ::= { wfAppleRtmpEntry 4 }

    wfAppleRtmpNextHopNet OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The AppleTalk net of the next hop router for this route."
        ::= { wfAppleRtmpEntry 5 }

    wfAppleRtmpNextHopNode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The AppleTalk node of the next hop router for this route."
        ::= { wfAppleRtmpEntry 6 }

    wfAppleRtmpState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    good(1),
    		    suspect(2),
    		    goingbad(3),
    		    bad(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The state of this routing entry: 1 = Good,
                2 = Suspect, 3 = GoingBad, or 4 = Bad."
        ::= { wfAppleRtmpEntry 7 }

    wfAppleRtmpProto OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rtmp(1),
    		    aurp(2),
    		    static(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The protocol this routing entry was learned through:
                1 = RTMP, 2 = AURP, 3 = Static Route."
        ::= { wfAppleRtmpEntry 8 }

    wfAppleRtmpAurpNextHopIpAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The next hop address if this route was learned
                through AURP."
        ::= { wfAppleRtmpEntry 9 }

    wfApplePortTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfApplePortEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The port descriptor table that describes the
                configuration parameters for this port of
                the AppleTalk Router."
        ::= { wfAppletalkGroup 3 }

    wfApplePortEntry OBJECT-TYPE
        SYNTAX	WfApplePortEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Port Descriptor table"
        INDEX	{ wfApplePortCircuit }
        ::= { wfApplePortTable 1 }

    WfApplePortEntry ::= SEQUENCE {
    	    wfApplePortDelete
    		INTEGER,
    	    wfApplePortDisable
    		INTEGER,
    	    wfApplePortCircuit
    		INTEGER,
    	    wfApplePortState
    		INTEGER,
    	    wfApplePortType
    		INTEGER,
    	    wfApplePortCksumDisable
    		INTEGER,
    	    wfApplePortTrEndStation
    		INTEGER,
    	    wfApplePortGniForever
    		INTEGER,
    	    wfApplePortAarpFlush
    		INTEGER,
    	    wfApplePortMacAddress
    		OCTET STRING,
    	    wfApplePortNodeId
    		INTEGER,
    	    wfApplePortNetwork
    		INTEGER,
    	    wfApplePortNetStart
    		INTEGER,
    	    wfApplePortNetEnd
    		INTEGER,
    	    wfApplePortDfltZone
    		DisplayString,
    	    wfApplePortCurMacAddress
    		OCTET STRING,
    	    wfApplePortCurNodeId
    		INTEGER,
    	    wfApplePortCurNetwork
    		INTEGER,
    	    wfApplePortCurNetStart
    		INTEGER,
    	    wfApplePortCurNetEnd
    		INTEGER,
    	    wfApplePortCurDfltZone
    		DisplayString,
    	    wfApplePortAarpProbeRxs
    		Counter,
    	    wfApplePortAarpProbeTxs
    		Counter,
    	    wfApplePortAarpReqRxs
    		Counter,
    	    wfApplePortAarpReqTxs
    		Counter,
    	    wfApplePortAarpRspRxs
    		Counter,
    	    wfApplePortAarpRspTxs
    		Counter,
    	    wfApplePortDdpOutRequests
    		Counter,
    	    wfApplePortDdpInReceives
    		Counter,
    	    wfApplePortDdpInLocalDatagrams
    		Counter,
    	    wfApplePortDdpNoProtocolHandlers
    		Counter,
    	    wfApplePortDdpTooShortErrors
    		Counter,
    	    wfApplePortDdpTooLongErrors
    		Counter,
    	    wfApplePortDdpChecksumErrors
    		Counter,
    	    wfApplePortDdpForwRequests
    		Counter,
    	    wfApplePortDdpOutNoRoutes
    		Counter,
    	    wfApplePortDdpBroadcastErrors
    		Counter,
    	    wfApplePortDdpHopCountErrors
    		Counter,
    	    wfApplePortRtmpInDataPkts
    		Counter,
    	    wfApplePortRtmpOutDataPkts
    		Counter,
    	    wfApplePortRtmpInRequestPkts
    		Counter,
    	    wfApplePortRtmpNextIREqualChanges
    		Counter,
    	    wfApplePortRtmpNextIRLessChanges
    		Counter,
    	    wfApplePortRtmpRouteDeletes
    		Counter,
    	    wfApplePortRtmpNetworkMismatchErrors
    		Counter,
    	    wfApplePortRtmpRoutingTableOverflows
    		Counter,
    	    wfApplePortZipInZipQueries
    		Counter,
    	    wfApplePortZipInZipReplies
    		Counter,
    	    wfApplePortZipOutZipReplies
    		Counter,
    	    wfApplePortZipInZipExtendedReplies
    		Counter,
    	    wfApplePortZipOutZipExtendedReplies
    		Counter,
    	    wfApplePortZipInGetZoneLists
    		Counter,
    	    wfApplePortZipOutGetZoneListReplies
    		Counter,
    	    wfApplePortZipInGetLocalZones
    		Counter,
    	    wfApplePortZipOutGetLocalZoneReplies
    		Counter,
    	    wfApplePortZipInGetMyZones
    		Counter,
    	    wfApplePortZipOutGetMyZoneReplies
    		Counter,
    	    wfApplePortZipZoneConflictErrors
    		Counter,
    	    wfApplePortZipInGetNetInfos
    		Counter,
    	    wfApplePortZipOutGetNetInfoReplies
    		Counter,
    	    wfApplePortZipZoneOutInvalids
    		Counter,
    	    wfApplePortZipAddressInvalids
    		Counter,
    	    wfApplePortZipOutGetNetInfos
    		Counter,
    	    wfApplePortZipInGetNetInfoReplies
    		Counter,
    	    wfApplePortZipOutZipQueries
    		Counter,
    	    wfApplePortZipInErrors
    		Counter,
    	    wfApplePortNbpInLookUpRequests
    		Counter,
    	    wfApplePortNbpInLookUpReplies
    		Counter,
    	    wfApplePortNbpInBroadcastRequests
    		Counter,
    	    wfApplePortNbpInForwardRequests
    		Counter,
    	    wfApplePortNbpOutLookUpRequests
    		Counter,
    	    wfApplePortNbpOutLookUpReplies
    		Counter,
    	    wfApplePortNbpOutBroadcastRequests
    		Counter,
    	    wfApplePortNbpOutForwardRequests
    		Counter,
    	    wfApplePortNbpRegistrationFailures
    		Counter,
    	    wfApplePortNbpInErrors
    		Counter,
    	    wfApplePortEchoRequests
    		Counter,
    	    wfApplePortEchoReplies
    		Counter,
    	    wfApplePortInterfaceCost
    		INTEGER,
    	    wfApplePortWanBroadcastAddress
    		OCTET STRING,
    	    wfApplePortWanSplitHorizonDisable
    		INTEGER,
    	    wfApplePortZoneFilterType
    		INTEGER
        }

    wfApplePortDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Users perform an SNMP SET
                operation on this object to create/delete an AppleTalk
                interface. The default is create."
        DEFVAL	{ created }
        ::= { wfApplePortEntry 1 }

    wfApplePortDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Users perforn an SNMP SET
                operation on this object to enable/disable an AppleTalk
                interface.  Default is enabled."
        DEFVAL	{ enabled }
        ::= { wfApplePortEntry 2 }

    wfApplePortCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit number for this interface"
        ::= { wfApplePortEntry 3 }

    wfApplePortState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the AppleTalk port."
        DEFVAL	{ down }
        ::= { wfApplePortEntry 4 }

    wfApplePortType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "wfApplePortType is reserved for future use"
        ::= { wfApplePortEntry 5 }

    wfApplePortCksumDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Flag to enable/disable the calculation of the
                DDP checksum for packets sourced by the router
                over this interface.  This value has no effect
                on incoming packets."
        DEFVAL	{ disabled }
        ::= { wfApplePortEntry 6 }

    wfApplePortTrEndStation OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "When an interface is running token ring this attribute
                allows for end station source routing. If the interface
                is not running token ring the attribute has no meaning."
        DEFVAL	{ disabled }
        ::= { wfApplePortEntry 7 }

    wfApplePortGniForever OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "wfApplePortGniForever is ignored. A non-seed interface will send
                GetNetInfos every 10 seconds until it gets a response."
        ::= { wfApplePortEntry 8 }

    wfApplePortAarpFlush OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum age (in minutes) of an aarp entry before it is deleted.
                Defaults to 12 hours.  Minimum values is five minutes."
        ::= { wfApplePortEntry 9 }

    wfApplePortMacAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured mac address"
        ::= { wfApplePortEntry 10 }

    wfApplePortNodeId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The AppleTalk node id configured for this port/interface.
                If PortNodeId or PortNetwork is zero the interface will try to
                acquire an address dynamically."
        ::= { wfApplePortEntry 11 }

    wfApplePortNetwork OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The AppleTalk network number configured for this port/interface.
                If PortNodeId or PortNetwork is zero the interface will try to
                acquire an address dynamically."
        ::= { wfApplePortEntry 12 }

    wfApplePortNetStart OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Network start value in the network range for this interface/port.
                If this is zero, the port is considered non-seed."
        ::= { wfApplePortEntry 13 }

    wfApplePortNetEnd OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Network end value in the network range
                for this interface/port."
        ::= { wfApplePortEntry 14 }

    wfApplePortDfltZone OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The default zone name for this network range/
                interface. "
        ::= { wfApplePortEntry 15 }

    wfApplePortCurMacAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Mac Address used"
        ::= { wfApplePortEntry 16 }

    wfApplePortCurNodeId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The AppleTalk node id of this port"
        ::= { wfApplePortEntry 17 }

    wfApplePortCurNetwork OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network number for this port."
        ::= { wfApplePortEntry 18 }

    wfApplePortCurNetStart OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Network start value in the network range
                for this port."
        ::= { wfApplePortEntry 19 }

    wfApplePortCurNetEnd OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Network end value in the network range
                for this port."
        ::= { wfApplePortEntry 20 }

    wfApplePortCurDfltZone OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The default zone name for this port"
        ::= { wfApplePortEntry 21 }

    wfApplePortAarpProbeRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of AARP Probe packets received on
                this interface."
        ::= { wfApplePortEntry 22 }

    wfApplePortAarpProbeTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of AARP Probe packets transmitted on
                this interface."
        ::= { wfApplePortEntry 23 }

    wfApplePortAarpReqRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of AARP Request packets received on
                this interface."
        ::= { wfApplePortEntry 24 }

    wfApplePortAarpReqTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of AARP Request packets transmitted on
                this interface."
        ::= { wfApplePortEntry 25 }

    wfApplePortAarpRspRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of AARP Response packets received on
                this interface."
        ::= { wfApplePortEntry 26 }

    wfApplePortAarpRspTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of AARP Response packets transmitted on
                this interface."
        ::= { wfApplePortEntry 27 }

    wfApplePortDdpOutRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of DDP datagrams which were supplied
                to DDP by local DDP clients in requests for
                transmission.  Note that this counter does not
                include any datagrams counted in ddpForwRequests."
        ::= { wfApplePortEntry 28 }

    wfApplePortDdpInReceives OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of input datagrams received by DDP,
                including those received in error."
        ::= { wfApplePortEntry 29 }

    wfApplePortDdpInLocalDatagrams OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of input DDP datagrams for which this
                entity was their final DDP destination."
        ::= { wfApplePortEntry 30 }

    wfApplePortDdpNoProtocolHandlers OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of DDP datagrams addressed to this
                entity that were addressed to an upper layer protocol
                for which no protocol handler existed."
        ::= { wfApplePortEntry 31 }

    wfApplePortDdpTooShortErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of input DDP datagrams dropped because
                the received data length was less than the data length
                specified in the DDP header or the received data length
                was less than the length of the expected DDP header."
        ::= { wfApplePortEntry 32 }

    wfApplePortDdpTooLongErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of input DDP datagrams dropped because
                the received data length was greater than the data length
                specified in the DDP header or because they exceeded the
                maximum DDP datagram size."
        ::= { wfApplePortEntry 33 }

    wfApplePortDdpChecksumErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of input DDP datagrams for which this
                DDP entity was their final destination, and which were
                dropped because of a checksum error."
        ::= { wfApplePortEntry 34 }

    wfApplePortDdpForwRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of input datagrams for which this entity was
                not their final DDP destination, as a result of which an
                attempt was made to find a route to forward them to that
                final destination."
        ::= { wfApplePortEntry 35 }

    wfApplePortDdpOutNoRoutes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of DDP datagrams dropped because a
                route could not be found to their final destination."
        ::= { wfApplePortEntry 36 }

    wfApplePortDdpBroadcastErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of input DDP datagrams dropped because
                this entity was not their final destination and they
                were addressed to the link level broadcast."
        ::= { wfApplePortEntry 37 }

    wfApplePortDdpHopCountErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of input DDP datagrams dropped because
                this entity was not their final destination and their
                hop count would exceed 15."
        ::= { wfApplePortEntry 38 }

    wfApplePortRtmpInDataPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A count of the number of good RTMP data packets
                received by this entity."
        ::= { wfApplePortEntry 39 }

    wfApplePortRtmpOutDataPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A count of the number of RTMP packets sent by this
                entity."
        ::= { wfApplePortEntry 40 }

    wfApplePortRtmpInRequestPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A count of the number of good RTMP Request packets
                received by this entity."
        ::= { wfApplePortEntry 41 }

    wfApplePortRtmpNextIREqualChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A count of the number of times RTMP changes the Next
                Internet Router in a routing entry because the hop count
                advertised in a routing tuple was equal to the current
                hop count for a particular network."
        ::= { wfApplePortEntry 42 }

    wfApplePortRtmpNextIRLessChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A count of the number of times RTMP changes the Next
                Internet Router in a routing entry because the hop count
                advertised in a routing tuple was less than the current
                hop count for a particular network."
        ::= { wfApplePortEntry 43 }

    wfApplePortRtmpRouteDeletes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A count of the number of times RTMP deletes a route because
                it was aged out of the table.  This can help to detect
                routing problems."
        ::= { wfApplePortEntry 44 }

    wfApplePortRtmpNetworkMismatchErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times RTMP receives a Data packet from a
                router who claims to be on a different network than that
                configured for the receiving port.  This can help to
                detect configuration errors."
        ::= { wfApplePortEntry 45 }

    wfApplePortRtmpRoutingTableOverflows OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times RTMP attempted to add a route
                to the RTMP table but failed due to overflow."
        ::= { wfApplePortEntry 46 }

    wfApplePortZipInZipQueries OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ZIP Queries received by this entity."
        ::= { wfApplePortEntry 47 }

    wfApplePortZipInZipReplies OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ZIP Replies received by this entity."
        ::= { wfApplePortEntry 48 }

    wfApplePortZipOutZipReplies OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ZIP Replies sent by this entity."
        ::= { wfApplePortEntry 49 }

    wfApplePortZipInZipExtendedReplies OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ZIP Extended Replies received by this entity."
        ::= { wfApplePortEntry 50 }

    wfApplePortZipOutZipExtendedReplies OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ZIP Extended Replies sent by this entity."
        ::= { wfApplePortEntry 51 }

    wfApplePortZipInGetZoneLists OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ZIP GetZoneList transactions received by
                this entity."
        ::= { wfApplePortEntry 52 }

    wfApplePortZipOutGetZoneListReplies OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ZIP GetZoneListReply transactions sent by
                this entity."
        ::= { wfApplePortEntry 53 }

    wfApplePortZipInGetLocalZones OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ZIP GetLocalZone transactions received
                by this entity."
        ::= { wfApplePortEntry 54 }

    wfApplePortZipOutGetLocalZoneReplies OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ZIP GetLocalZoneReply transactions sent
                by this entity."
        ::= { wfApplePortEntry 55 }

    wfApplePortZipInGetMyZones OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The number of ZIP GetMyZone transactions received by
                this entity."
        ::= { wfApplePortEntry 56 }

    wfApplePortZipOutGetMyZoneReplies OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The number of ZIP GetMyZoneReply transactions sent by
                this entity."
        ::= { wfApplePortEntry 57 }

    wfApplePortZipZoneConflictErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times a conflict has been detected between
                this entity's zone information and another entity's
                zone information."
        ::= { wfApplePortEntry 58 }

    wfApplePortZipInGetNetInfos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ZIP GetNetInfo packets received on this
                port by this entity."
        ::= { wfApplePortEntry 59 }

    wfApplePortZipOutGetNetInfoReplies OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ZIP GetNetInfoReply packets sent out this
                port by this entity."
        ::= { wfApplePortEntry 60 }

    wfApplePortZipZoneOutInvalids OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times this entity has sent a ZIP GetNetInfo
                Reply with the zone invalid bit set in response to a
                GetNetInfo Request with an invalid zone name."
        ::= { wfApplePortEntry 61 }

    wfApplePortZipAddressInvalids OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times this entity had to broadcast a ZIP
                GetNetInfo Reply because the GetNetInfo Request had an
                invalid address."
        ::= { wfApplePortEntry 62 }

    wfApplePortZipOutGetNetInfos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ZIP GetNetInfo packets sent out this port
                by this entity."
        ::= { wfApplePortEntry 63 }

    wfApplePortZipInGetNetInfoReplies OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ZIP GetNetInfoReply packets received on
                this port by this entity."
        ::= { wfApplePortEntry 64 }

    wfApplePortZipOutZipQueries OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ZIP Queries sent by this entity."
        ::= { wfApplePortEntry 65 }

    wfApplePortZipInErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ZIP packets received by this entity
                that were rejected for any error."
        ::= { wfApplePortEntry 66 }

    wfApplePortNbpInLookUpRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of NBP LookUp Requests received."
        ::= { wfApplePortEntry 67 }

    wfApplePortNbpInLookUpReplies OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of NBP LookUp Replies received."
        ::= { wfApplePortEntry 68 }

    wfApplePortNbpInBroadcastRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of NBP Broadcast Requests received."
        ::= { wfApplePortEntry 69 }

    wfApplePortNbpInForwardRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of NBP Forward Requests received."
        ::= { wfApplePortEntry 70 }

    wfApplePortNbpOutLookUpRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of NBP LookUp Requests sent."
        ::= { wfApplePortEntry 71 }

    wfApplePortNbpOutLookUpReplies OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of NBP LookUp Replies sent."
        ::= { wfApplePortEntry 72 }

    wfApplePortNbpOutBroadcastRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of NBP Broadcast Requests sent."
        ::= { wfApplePortEntry 73 }

    wfApplePortNbpOutForwardRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of NBP Forward Requests sent."
        ::= { wfApplePortEntry 74 }

    wfApplePortNbpRegistrationFailures OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times this node experienced a failure in
                attempting to register an NBP entity."
        ::= { wfApplePortEntry 75 }

    wfApplePortNbpInErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of NBP packets received by this entity that were
                rejected for any error."
        ::= { wfApplePortEntry 76 }

    wfApplePortEchoRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of AppleTalk Echo requests received."
        ::= { wfApplePortEntry 77 }

    wfApplePortEchoReplies OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of AppleTalk Echo replies sent."
        ::= { wfApplePortEntry 78 }

    wfApplePortInterfaceCost OBJECT-TYPE
        SYNTAX	INTEGER {
    		    cost(15)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "RTMP Cost for this interface."
        ::= { wfApplePortEntry 79 }

    wfApplePortWanBroadcastAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Frame Relay, SMDS, or ATM broadcast address"
        ::= { wfApplePortEntry 80 }

    wfApplePortWanSplitHorizonDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "WAN (Frame Relay or ATM) split horizon enabled"
        DEFVAL	{ enabled }
        ::= { wfApplePortEntry 81 }

    wfApplePortZoneFilterType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    allow(1),
    		    deny(2),
    		    partallow(3),
    		    partdeny(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Controls zone filtering on this interface. An allow indicates that
                any wfAppleZoneFilterEntry is a zone that is allowed on the
                interface. A deny indicates that any ZoneFilterEntry is a zone that
                should not be advertised out this interface.  No ZoneFilterEntrys
                indicates that all nets and zones are being advertised."
        DEFVAL	{ deny }
        ::= { wfApplePortEntry 82 }

    wfAppleLclZoneTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppleLclZoneEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Local Zone table describes a list of zone names s
                serviced by a particular AppleTalk port/interface.
                In other words, the list of zone names that are
                associated with a particular network range."
        ::= { wfAppletalkGroup 4 }

    wfAppleLclZoneEntry OBJECT-TYPE
        SYNTAX	WfAppleLclZoneEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Local Zone table"
        INDEX	{ wfAppleLclZonePortCircuit,
    		  wfAppleLclZoneIndex }
        ::= { wfAppleLclZoneTable 1 }

    WfAppleLclZoneEntry ::= SEQUENCE {
    	    wfAppleLclZoneDelete
    		INTEGER,
    	    wfAppleLclZonePortCircuit
    		INTEGER,
    	    wfAppleLclZoneIndex
    		INTEGER,
    	    wfAppleLclZoneName
    		DisplayString
        }

    wfAppleLclZoneDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter for adding/deleting a
                zone name to the Local Zone List for a particular
                AppleTalk network interface."
        DEFVAL	{ created }
        ::= { wfAppleLclZoneEntry 1 }

    wfAppleLclZonePortCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit number for the corresponding AppleTalk interface
                /port for this zone list. "
        ::= { wfAppleLclZoneEntry 2 }

    wfAppleLclZoneIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A unique value for this zone name."
        ::= { wfAppleLclZoneEntry 3 }

    wfAppleLclZoneName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "One of the local zone names defined for this/
                interface. "
        ::= { wfAppleLclZoneEntry 4 }

    wfAppleAarpTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppleAarpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The AppleTalk Address Translation table
                contains a mapping of AppleTalk Network addresses
                to its corresponding physical address."
        ::= { wfAppletalkGroup 5 }

    wfAppleAarpEntry OBJECT-TYPE
        SYNTAX	WfAppleAarpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Address Mapping table"
        INDEX	{ wfAppleAarpNet,
    		  wfAppleAarpNode,
    		  wfAppleAarpIfIndex }
        ::= { wfAppleAarpTable 1 }

    WfAppleAarpEntry ::= SEQUENCE {
    	    wfAppleAarpIfIndex
    		INTEGER,
    	    wfAppleAarpNet
    		INTEGER,
    	    wfAppleAarpNode
    		INTEGER,
    	    wfAppleAarpPhysAddress
    		OCTET STRING
        }

    wfAppleAarpIfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique value for this interface/cct. This
                value is the same interface as identified by
                the value of ifIndex."
        ::= { wfAppleAarpEntry 1 }

    wfAppleAarpNet OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The host's AppleTalk address (Net.Nodeid). This
                address corresponds to the media-dependent 'physical'
                address for this host."
        ::= { wfAppleAarpEntry 2 }

    wfAppleAarpNode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The host's AppleTalk address (Net.Nodeid). This
                address corresponds to the media-dependent 'physical'
                address for this host."
        ::= { wfAppleAarpEntry 3 }

    wfAppleAarpPhysAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The media-dependent 'physical' address."
        ::= { wfAppleAarpEntry 4 }

    wfAppleZipTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppleZipEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Zone Information table for reachable AppleTalk
                Networks."
        ::= { wfAppletalkGroup 6 }

    wfAppleZipEntry OBJECT-TYPE
        SYNTAX	WfAppleZipEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Zone Information table"
        INDEX	{ wfAppleZipZoneNetStart,
    		  wfAppleZipIndex }
        ::= { wfAppleZipTable 1 }

    WfAppleZipEntry ::= SEQUENCE {
    	    wfAppleZipZoneNetStart
    		INTEGER,
    	    wfAppleZipZoneNetEnd
    		INTEGER,
    	    wfAppleZipIndex
    		INTEGER,
    	    wfAppleZipZoneName
    		DisplayString,
    	    wfAppleZipZoneState
    		INTEGER
        }

    wfAppleZipZoneNetStart OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network that starts the range for this entry."
        ::= { wfAppleZipEntry 1 }

    wfAppleZipZoneNetEnd OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network that ends the range for this entry."
        ::= { wfAppleZipEntry 2 }

    wfAppleZipIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique value for this zone name."
        ::= { wfAppleZipEntry 3 }

    wfAppleZipZoneName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ASCII xone name of this entry."
        ::= { wfAppleZipEntry 4 }

    wfAppleZipZoneState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    valid(1),
    		    invalid(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The state of the ZIP entry."
        ::= { wfAppleZipEntry 5 }

    wfAppleZoneFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppleZoneFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The zone filter table describes a list of zone names
                filtered on a given AppleTalk port/interface."
        ::= { wfAppletalkGroup 7 }

    wfAppleZoneFilterEntry OBJECT-TYPE
        SYNTAX	WfAppleZoneFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Zone Filter table"
        INDEX	{ wfAppleZoneFilterIndex }
        ::= { wfAppleZoneFilterTable 1 }

    WfAppleZoneFilterEntry ::= SEQUENCE {
    	    wfAppleZoneFilterDelete
    		INTEGER,
    	    wfAppleZoneFilterCircuit
    		INTEGER,
    	    wfAppleZoneFilterIpAddress
    		IpAddress,
    	    wfAppleZoneFilterCircuitType
    		INTEGER,
    	    wfAppleZoneFilterIndex
    		INTEGER,
    	    wfAppleZoneFilterName
    		DisplayString
        }

    wfAppleZoneFilterDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter for adding/deleting a
                zone name to the filter list for a particular
                AppleTalk network interface."
        DEFVAL	{ created }
        ::= { wfAppleZoneFilterEntry 1 }

    wfAppleZoneFilterCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The circuit number for the corresponding AppleTalk interface
                for filtered zone entry.  This is only valid if
                wfAppleZoneFilterCircuitType is RTMP"
        ::= { wfAppleZoneFilterEntry 2 }

    wfAppleZoneFilterIpAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The IP address for the corresponding AURP interface for filtered
                zone entry.  This is only valid if wfAppleZoneFilterCircuitType
                is AURP."
        ::= { wfAppleZoneFilterEntry 3 }

    wfAppleZoneFilterCircuitType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rtmp(1),
    		    aurp(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The type of the circuit the filter is applied on. If RTMP, then
                wfAppleZoneFilterCircuit is used.  If AURP, then
                wfAppleZoneFilterIpAddress is used."
        DEFVAL	{ rtmp }
        ::= { wfAppleZoneFilterEntry 4 }

    wfAppleZoneFilterIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A unique value for this filtered zone name."
        ::= { wfAppleZoneFilterEntry 5 }

    wfAppleZoneFilterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "One of the zone names filtered on this/
                interface."
        ::= { wfAppleZoneFilterEntry 6 }

    wfAppleAurpBase	OBJECT IDENTIFIER ::= { wfAppletalkGroup 8 }

    wfAppleAurpBaseDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter for determining whether
                or not AURP is configured on this box."
        DEFVAL	{ created }
        ::= { wfAppleAurpBase 1 }

    wfAppleAurpBaseDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for determining whether
                or not to startup AURP."
        DEFVAL	{ enabled }
        ::= { wfAppleAurpBase 2 }

    wfAppleAurpBaseState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpres(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This parameter relfects the current state of AURP."
        DEFVAL	{ down }
        ::= { wfAppleAurpBase 3 }

    wfAppleAurpBaseDomain OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The domain identfier for the domain that this
                router resides in."
        ::= { wfAppleAurpBase 4 }

    wfAppleAurpBaseIpAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The IP address configured on this router that AURP should use
                for all of its connections "
        ::= { wfAppleAurpBase 5 }

    wfAppleAurpBasePromiscuous OBJECT-TYPE
        SYNTAX	INTEGER {
    		    notpromisc(1),
    		    promisc(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "AURP Promiscuous mode not supported."
        DEFVAL	{ notpromisc }
        ::= { wfAppleAurpBase 6 }

    wfAppleAurpBaseInAcceptedOpenReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Open Requests that were accepted."
        ::= { wfAppleAurpBase 7 }

    wfAppleAurpBaseInRejectedOpenReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Open Requests that were rejected."
        ::= { wfAppleAurpBase 8 }

    wfAppleAurpBaseInRouterDowns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Router Down packets that were received."
        ::= { wfAppleAurpBase 9 }

    wfAppleAurpBaseInPktsNoPeers OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of packets received from UDP for which there
                is no valid connection."
        ::= { wfAppleAurpBase 10 }

    wfAppleAurpBaseInInvalidVerions OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of invalid version error received on this
                tunnel. "
        ::= { wfAppleAurpBase 11 }

    wfAppleAurpTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAppleAurpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Each AURP connection has an entry in this table"
        ::= { wfAppletalkGroup 9 }

    wfAppleAurpEntry OBJECT-TYPE
        SYNTAX	WfAppleAurpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the AURP connection table."
        INDEX	{ wfAppleAurpEntryIpAddress }
        ::= { wfAppleAurpTable 1 }

    WfAppleAurpEntry ::= SEQUENCE {
    	    wfAppleAurpEntryDelete
    		INTEGER,
    	    wfAppleAurpEntryDisable
    		INTEGER,
    	    wfAppleAurpEntryState
    		INTEGER,
    	    wfAppleAurpEntryIpAddress
    		IpAddress,
    	    wfAppleAurpEntryZoneFilterType
    		INTEGER,
    	    wfAppleAurpEntryTimeoutCommand
    		INTEGER,
    	    wfAppleAurpEntryRetryCommand
    		INTEGER,
    	    wfAppleAurpEntryUpdateRate
    		INTEGER,
    	    wfAppleAurpEntryLhfTimeout
    		INTEGER,
    	    wfAppleAurpEntryHopCountReduction
    		INTEGER,
    	    wfAppleAurpEntryInterfaceCost
    		INTEGER,
    	    wfAppleAurpEntrySuiFlags
    		INTEGER,
    	    wfAppleAurpEntryType
    		INTEGER,
    	    wfAppleAurpEntryPeerDomainId
    		IpAddress,
    	    wfAppleAurpEntryPeerUpdateRate
    		INTEGER,
    	    wfAppleAurpEntryPeerEnvironment
    		INTEGER,
    	    wfAppleAurpEntryPeerSuiFlags
    		INTEGER,
    	    wfAppleAurpEntryCliConnId
    		INTEGER,
    	    wfAppleAurpEntrySrvConnId
    		INTEGER,
    	    wfAppleAurpEntryCliSeqNum
    		INTEGER,
    	    wfAppleAurpEntrySrvSeqNum
    		INTEGER,
    	    wfAppleAurpEntryCommandRetries
    		Counter,
    	    wfAppleAurpEntryInDelayedDuplicates
    		Counter,
    	    wfAppleAurpEntryInInvalidConnIds
    		Counter,
    	    wfAppleAurpEntryInInvalidCommands
    		Counter,
    	    wfAppleAurpEntryInInvalidSubCodes
    		Counter,
    	    wfAppleAurpEntryInPkts
    		Counter,
    	    wfAppleAurpEntryOutPkts
    		Counter,
    	    wfAppleAurpEntryInDdpPkts
    		Counter,
    	    wfAppleAurpEntryOutDdpPkts
    		Counter,
    	    wfAppleAurpEntryOutNoRoutes
    		Counter,
    	    wfAppleAurpEntryHopCountErrors
    		Counter,
    	    wfAppleAurpEntryHopCountAdjustments
    		Counter,
    	    wfAppleAurpEntryInAurpPkts
    		Counter,
    	    wfAppleAurpEntryOutAurpPkts
    		Counter,
    	    wfAppleAurpEntryInOpenRequests
    		Counter,
    	    wfAppleAurpEntryOutOpenRequests
    		Counter,
    	    wfAppleAurpEntryInOpenResponses
    		Counter,
    	    wfAppleAurpEntryOutOpenResponses
    		Counter,
    	    wfAppleAurpEntryInRiRequests
    		Counter,
    	    wfAppleAurpEntryOutRiRequests
    		Counter,
    	    wfAppleAurpEntryInRiResponses
    		Counter,
    	    wfAppleAurpEntryOutRiResponses
    		Counter,
    	    wfAppleAurpEntryInRiAcks
    		Counter,
    	    wfAppleAurpEntryOutRiAcks
    		Counter,
    	    wfAppleAurpEntryInRiUpdates
    		Counter,
    	    wfAppleAurpEntryOutRiUpdates
    		Counter,
    	    wfAppleAurpEntryInUpdateNullEvents
    		Counter,
    	    wfAppleAurpEntryOutUpdateNullEvents
    		Counter,
    	    wfAppleAurpEntryInUpdateNetAdds
    		Counter,
    	    wfAppleAurpEntryOutUpdateNetAdds
    		Counter,
    	    wfAppleAurpEntryInUpdateNetDeletes
    		Counter,
    	    wfAppleAurpEntryOutUpdateNetDeletes
    		Counter,
    	    wfAppleAurpEntryInUpdateNetRouteChanges
    		Counter,
    	    wfAppleAurpEntryOutUpdateNetRouteChanges
    		Counter,
    	    wfAppleAurpEntryInUpdateNetDistanceChanges
    		Counter,
    	    wfAppleAurpEntryOutUpdateNetDistanceChanges
    		Counter,
    	    wfAppleAurpEntryInUpdateZoneChanges
    		Counter,
    	    wfAppleAurpEntryOutUpdateZoneChanges
    		Counter,
    	    wfAppleAurpEntryInUpdateInvalidEvents
    		Counter,
    	    wfAppleAurpEntryOutUpdateInvalidEvents
    		Counter,
    	    wfAppleAurpEntryInZiRequests
    		Counter,
    	    wfAppleAurpEntryOutZiRequests
    		Counter,
    	    wfAppleAurpEntryInZiResponses
    		Counter,
    	    wfAppleAurpEntryOutZiResponses
    		Counter,
    	    wfAppleAurpEntryInGdzlRequests
    		Counter,
    	    wfAppleAurpEntryOutGdzlRequests
    		Counter,
    	    wfAppleAurpEntryInGdzlResponses
    		Counter,
    	    wfAppleAurpEntryOutGdzlResponses
    		Counter,
    	    wfAppleAurpEntryInGznRequests
    		Counter,
    	    wfAppleAurpEntryOutGznRequests
    		Counter,
    	    wfAppleAurpEntryInGznResponses
    		Counter,
    	    wfAppleAurpEntryOutGznResponses
    		Counter,
    	    wfAppleAurpEntryInTickles
    		Counter,
    	    wfAppleAurpEntryOutTickles
    		Counter,
    	    wfAppleAurpEntryInTickleAcks
    		Counter,
    	    wfAppleAurpEntryOutTickleAcks
    		Counter,
    	    wfAppleAurpEntryInRouterDowns
    		Counter,
    	    wfAppleAurpEntryOutRouterDowns
    		Counter,
    	    wfAppleAurpEntryZoneFiltDfltZone
    		DisplayString
        }

    wfAppleAurpEntryDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete para1meter. Users perform an SNMP SET
                operation on this object to create/delete an AppleTalk
                AURP interface. The default is create."
        DEFVAL	{ created }
        ::= { wfAppleAurpEntry 1 }

    wfAppleAurpEntryDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Users perforn an SNMP SET
                operation on this object to enable/disable an AppleTalk
                AURP interface.  Default is enabled."
        DEFVAL	{ enabled }
        ::= { wfAppleAurpEntry 2 }

    wfAppleAurpEntryState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the Aurp Entry."
        DEFVAL	{ down }
        ::= { wfAppleAurpEntry 3 }

    wfAppleAurpEntryIpAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Ip address of the remote AURP router with which the connection
                will be made"
        ::= { wfAppleAurpEntry 4 }

    wfAppleAurpEntryZoneFilterType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    allow(1),
    		    deny(2),
    		    partallow(3),
    		    partdeny(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "controls zone filtering on this interface. An allow indicates that
                any wfAppleZoneFilterEntry is a zone that is allowed on the
                interface. A deny indicates that any ZoneFilterEntry is a zone that
                should not be advertised out this interface.  No ZoneFilterEntrys
                indicates that all nets and zones are being advertised."
        DEFVAL	{ deny }
        ::= { wfAppleAurpEntry 5 }

    wfAppleAurpEntryTimeoutCommand OBJECT-TYPE
        SYNTAX	INTEGER(1..1000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The amout of time in seconds to wait for an ack before
                retrying a command."
        DEFVAL	{ 3 }
        ::= { wfAppleAurpEntry 6 }

    wfAppleAurpEntryRetryCommand OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of attempts at a command before determining that
                the peer is no longer responding."
        DEFVAL	{ 3 }
        ::= { wfAppleAurpEntry 7 }

    wfAppleAurpEntryUpdateRate OBJECT-TYPE
        SYNTAX	INTEGER(10..604800)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The rate at which routing table updates are sent on
                this connection, in seconds.  This value should be a
                multiple of ten."
        DEFVAL	{ 30 }
        ::= { wfAppleAurpEntry 8 }

    wfAppleAurpEntryLhfTimeout OBJECT-TYPE
        SYNTAX	INTEGER(30..31536000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of seconds to wait for an RI-Rsp, RI-Upd,
                or ZI-Rsp before sending a tickle request, in seconds.
                This value should be a multiple of ten."
        DEFVAL	{ 90 }
        ::= { wfAppleAurpEntry 9 }

    wfAppleAurpEntryHopCountReduction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable for hop count reduction on this
                connection."
        DEFVAL	{ disabled }
        ::= { wfAppleAurpEntry 10 }

    wfAppleAurpEntryInterfaceCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Additional cost to add to hop count as advertised in
                RI-Rsp and RI-Upd."
        ::= { wfAppleAurpEntry 11 }

    wfAppleAurpEntrySuiFlags OBJECT-TYPE
        SYNTAX	INTEGER {
    		    all(30720)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Send Update Information flags. This value matches
                the 16 bit field sent in OReq and RI-Req packets.  The
                bits are broken down as follows:
                   0x4000 = Net Add
                   0x2000 = Net Delete/Net Route Change
                   0x1000 = Net Distance Change
                   0x0800 = Zone Change
                These should be 'OR'ed together for desired updates.
                e.g. for all updates 0x4000 | 0x2000 | 0x1000 | 0x8000 =
                0x7800 = 30720"
        DEFVAL	{ all }
        ::= { wfAppleAurpEntry 12 }

    wfAppleAurpEntryType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Reserved for future use"
        ::= { wfAppleAurpEntry 13 }

    wfAppleAurpEntryPeerDomainId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The peer's Domain Indicator."
        ::= { wfAppleAurpEntry 14 }

    wfAppleAurpEntryPeerUpdateRate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The update interval specified by the peer in its Open
                Response, in tens of seconds."
        ::= { wfAppleAurpEntry 15 }

    wfAppleAurpEntryPeerEnvironment OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Environment flags found in the peer's Open Response"
        ::= { wfAppleAurpEntry 16 }

    wfAppleAurpEntryPeerSuiFlags OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Send Update Information flags found in the peer's
                Open Request and RI Request."
        ::= { wfAppleAurpEntry 17 }

    wfAppleAurpEntryCliConnId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This connection's client connection ID."
        ::= { wfAppleAurpEntry 18 }

    wfAppleAurpEntrySrvConnId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This connection's server connection ID."
        ::= { wfAppleAurpEntry 19 }

    wfAppleAurpEntryCliSeqNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This connection's client sequence number."
        ::= { wfAppleAurpEntry 20 }

    wfAppleAurpEntrySrvSeqNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This connection's server sequence number."
        ::= { wfAppleAurpEntry 21 }

    wfAppleAurpEntryCommandRetries OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of commands that were retried."
        ::= { wfAppleAurpEntry 22 }

    wfAppleAurpEntryInDelayedDuplicates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of AURP packets that were received whose
                sequence number was one less than that expected."
        ::= { wfAppleAurpEntry 23 }

    wfAppleAurpEntryInInvalidConnIds OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of packets received with bad connection IDs."
        ::= { wfAppleAurpEntry 24 }

    wfAppleAurpEntryInInvalidCommands OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of AURP packets received that had an illegal
                value in the command field."
        ::= { wfAppleAurpEntry 25 }

    wfAppleAurpEntryInInvalidSubCodes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of AURP Zone packets received that had an illegal
                value in the sub command field."
        ::= { wfAppleAurpEntry 26 }

    wfAppleAurpEntryInPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of packets received on this connection."
        ::= { wfAppleAurpEntry 27 }

    wfAppleAurpEntryOutPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of packets transmitted on this connection."
        ::= { wfAppleAurpEntry 28 }

    wfAppleAurpEntryInDdpPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of data packets received."
        ::= { wfAppleAurpEntry 29 }

    wfAppleAurpEntryOutDdpPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of data packets transmitted."
        ::= { wfAppleAurpEntry 30 }

    wfAppleAurpEntryOutNoRoutes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of DDP packets dropped because a
                route could not be found to their final destination. "
        ::= { wfAppleAurpEntry 31 }

    wfAppleAurpEntryHopCountErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of input DDP datagrams dropped because
                their hop count would exceed 15."
        ::= { wfAppleAurpEntry 32 }

    wfAppleAurpEntryHopCountAdjustments OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of input DDP datagrams that had their
                hop count adjusted (if hop count reduction is enabled)."
        ::= { wfAppleAurpEntry 33 }

    wfAppleAurpEntryInAurpPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of routing packets received"
        ::= { wfAppleAurpEntry 34 }

    wfAppleAurpEntryOutAurpPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of routing packets transmitted."
        ::= { wfAppleAurpEntry 35 }

    wfAppleAurpEntryInOpenRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Open Requests received."
        ::= { wfAppleAurpEntry 36 }

    wfAppleAurpEntryOutOpenRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Open Requests transmitted."
        ::= { wfAppleAurpEntry 37 }

    wfAppleAurpEntryInOpenResponses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Open Responses received."
        ::= { wfAppleAurpEntry 38 }

    wfAppleAurpEntryOutOpenResponses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Open Responses transmitted."
        ::= { wfAppleAurpEntry 39 }

    wfAppleAurpEntryInRiRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Routing Information Requests received."
        ::= { wfAppleAurpEntry 40 }

    wfAppleAurpEntryOutRiRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Routing Information Requests transmitted."
        ::= { wfAppleAurpEntry 41 }

    wfAppleAurpEntryInRiResponses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Routing Information Responses received."
        ::= { wfAppleAurpEntry 42 }

    wfAppleAurpEntryOutRiResponses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Routing Information Responses transmitted."
        ::= { wfAppleAurpEntry 43 }

    wfAppleAurpEntryInRiAcks OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Routing Information Acknowledgements received."
        ::= { wfAppleAurpEntry 44 }

    wfAppleAurpEntryOutRiAcks OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Routing Information Acknowledgements transmitted."
        ::= { wfAppleAurpEntry 45 }

    wfAppleAurpEntryInRiUpdates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Routing Information Updates received."
        ::= { wfAppleAurpEntry 46 }

    wfAppleAurpEntryOutRiUpdates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Routing Information Updates transmitted."
        ::= { wfAppleAurpEntry 47 }

    wfAppleAurpEntryInUpdateNullEvents OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Null update events received."
        ::= { wfAppleAurpEntry 48 }

    wfAppleAurpEntryOutUpdateNullEvents OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of update events transmitted."
        ::= { wfAppleAurpEntry 49 }

    wfAppleAurpEntryInUpdateNetAdds OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Net Added update events received."
        ::= { wfAppleAurpEntry 50 }

    wfAppleAurpEntryOutUpdateNetAdds OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Net Added update events transmitted."
        ::= { wfAppleAurpEntry 51 }

    wfAppleAurpEntryInUpdateNetDeletes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Net Deleted update events received."
        ::= { wfAppleAurpEntry 52 }

    wfAppleAurpEntryOutUpdateNetDeletes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Net Deleted update events transmitted."
        ::= { wfAppleAurpEntry 53 }

    wfAppleAurpEntryInUpdateNetRouteChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Net Route Change update events received."
        ::= { wfAppleAurpEntry 54 }

    wfAppleAurpEntryOutUpdateNetRouteChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Net Route Change update events transmitted."
        ::= { wfAppleAurpEntry 55 }

    wfAppleAurpEntryInUpdateNetDistanceChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Net Distance Change update events received."
        ::= { wfAppleAurpEntry 56 }

    wfAppleAurpEntryOutUpdateNetDistanceChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Net Distance Change update events transmitted."
        ::= { wfAppleAurpEntry 57 }

    wfAppleAurpEntryInUpdateZoneChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Zone Change update events received."
        ::= { wfAppleAurpEntry 58 }

    wfAppleAurpEntryOutUpdateZoneChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Zone Change update events transmitted."
        ::= { wfAppleAurpEntry 59 }

    wfAppleAurpEntryInUpdateInvalidEvents OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of invalid update events received."
        ::= { wfAppleAurpEntry 60 }

    wfAppleAurpEntryOutUpdateInvalidEvents OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of invalid update events transmitted."
        ::= { wfAppleAurpEntry 61 }

    wfAppleAurpEntryInZiRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Zone Information requests received. (This
                doesn't include RI-Acks with the SZI flag set)."
        ::= { wfAppleAurpEntry 62 }

    wfAppleAurpEntryOutZiRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Zone Information requests transmitted."
        ::= { wfAppleAurpEntry 63 }

    wfAppleAurpEntryInZiResponses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Zone Information responses received."
        ::= { wfAppleAurpEntry 64 }

    wfAppleAurpEntryOutZiResponses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Zone Information responses transmitted."
        ::= { wfAppleAurpEntry 65 }

    wfAppleAurpEntryInGdzlRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Get Domain Zone List requests received."
        ::= { wfAppleAurpEntry 66 }

    wfAppleAurpEntryOutGdzlRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Get Domain Zone List requests transmitted."
        ::= { wfAppleAurpEntry 67 }

    wfAppleAurpEntryInGdzlResponses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Get Domain Zone List responses received."
        ::= { wfAppleAurpEntry 68 }

    wfAppleAurpEntryOutGdzlResponses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Get Domain Zone List responses transmitted."
        ::= { wfAppleAurpEntry 69 }

    wfAppleAurpEntryInGznRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Get Zone Nets requests received."
        ::= { wfAppleAurpEntry 70 }

    wfAppleAurpEntryOutGznRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Get Zone Nets requests transmitted."
        ::= { wfAppleAurpEntry 71 }

    wfAppleAurpEntryInGznResponses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Get Zone Nets responses received."
        ::= { wfAppleAurpEntry 72 }

    wfAppleAurpEntryOutGznResponses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Get Zone Nets responses transmitted."
        ::= { wfAppleAurpEntry 73 }

    wfAppleAurpEntryInTickles OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Tickle Requests received."
        ::= { wfAppleAurpEntry 74 }

    wfAppleAurpEntryOutTickles OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Tickle Requests transmitted."
        ::= { wfAppleAurpEntry 75 }

    wfAppleAurpEntryInTickleAcks OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Tickle Acknowledgements received."
        ::= { wfAppleAurpEntry 76 }

    wfAppleAurpEntryOutTickleAcks OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Tickle Acknowledgements transmitted."
        ::= { wfAppleAurpEntry 77 }

    wfAppleAurpEntryInRouterDowns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Router Down notifications received."
        ::= { wfAppleAurpEntry 78 }

    wfAppleAurpEntryOutRouterDowns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Router Down notifications transmitted."
        ::= { wfAppleAurpEntry 79 }

    wfAppleAurpEntryZoneFiltDfltZone OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The default zone to give to networks that have all
                of their real zones filtered (by PARTDENY or
                PARTALLOW zone filtering) out this connection."
        ::= { wfAppleAurpEntry 80 }

    wfAppleAggrStats	OBJECT IDENTIFIER ::= { wfAppletalkGroup 10 }

    wfAppleAggrInPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams received"
        ::= { wfAppleAggrStats 1 }

    wfAppleAggrOutPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams sent (includes datagrams
                forwarded)"
        ::= { wfAppleAggrStats 2 }

    wfAppleAggrFwdDatagrams OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams forwarded"
        ::= { wfAppleAggrStats 3 }

    wfAppleAggrInXsumErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams destined for a local
                entity that were dropped because of a checksum error."
        ::= { wfAppleAggrStats 4 }

    wfAppleAggrInHopCountErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams that could not be
                forwarded because they would exceed the hop-count
                limit(15)."
        ::= { wfAppleAggrStats 5 }

    wfAppleAggrInTooShorts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of input DDP datagrams dropped because
                the received data length was less than the data length
                specified in the DDP header or the received data length
                was less than the length of the expected DDP header."
        ::= { wfAppleAggrStats 6 }

    wfAppleAggrInTooLongs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of input DDP datagrams dropped because
                the received data length was greater than the data length
                specified in the DDP header or because they exceeded the
                maximum DDP datagram size."
        ::= { wfAppleAggrStats 7 }

    wfAppleAggrOutNoRoutes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams queued for transmission thet
                were discarded because the destination was unreachable."
        ::= { wfAppleAggrStats 8 }

    wfAppleAggrInLocalDests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams destined for a local entity
                (not forwarded)."
        ::= { wfAppleAggrStats 9 }

    wfAppleAggrInRtmps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of RTMP packets received"
        ::= { wfAppleAggrStats 10 }

    wfAppleAggrOutRtmps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of RTMP packets sent"
        ::= { wfAppleAggrStats 11 }

    END  -- Wellfleet-AT-MIB
-- @(#)WSCCS e/mibs-atm.mib 1.6 10/26/95
Wellfleet-ATM-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:37:09 EDT 1995


    IMPORTS

      Counter, Gauge, TimeTicks
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      DisplayString
        FROM RFC1213-MIB
      wfSonetGroup, wfAtmGroup, wfAtmInterfaceGroup
        FROM Wellfleet-COMMON-MIB;

    wfAtmCommonGroup      OBJECT IDENTIFIER ::= { wfAtmInterfaceGroup 1 }
    wfAtmLinkModuleGroup  OBJECT IDENTIFIER ::= { wfAtmInterfaceGroup 2 }
    wfAtmCellSwitchGroup  OBJECT IDENTIFIER ::= { wfAtmInterfaceGroup 3 }

    wfAtm		OBJECT IDENTIFIER ::= { wfAtmGroup 1 }

    wfAtmDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to create or delete an ATM Base record."
        DEFVAL	{ created }
        ::= { wfAtm 1 }

    wfAtmInterfaceNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of ATM interfaces in the Wellfleet Router (entries
                in the wfAtmInterfaceTable), regardless of their current state,
                present on this system."
        ::= { wfAtm 2 }

    wfAtmOverallStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    healthy(1),
    		    interfaceanomaly(2),
    		    otheranomaly(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Overall status of ATM interfaces in the Wellfleet Router(entries
                in the wfAtmInterfaceTable) present on this system. Healthy indicates
                each configured interfaces are in the UP state.  An interface
                anomaly is indicative of one or more of the configured
                interfaces being in the DOWN State.  Other Anomaly is indicative
                of one or more ATM interfaces being in the INIT or NOT PRESENT
                state"
        DEFVAL	{ healthy }
        ::= { wfAtm 3 }

    wfAtmGlobalSigStkVersion OBJECT-TYPE
        SYNTAX	INTEGER {
    		    u30(1),
    		    u31(2),
    		    sym(3),
    		    u40(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Global signalling stack Version. This value will be used to
                by management entities to know the global version of signalling.
                The intent here is to have passive placeholder.  Active versions
                of signalling are maintained on a per ATM interface basis in
                wfAtmSscopEntry and wfAtmSigEntry.  If this is considered
                of no value, please remove at your earliest convenience."
        DEFVAL	{ u30 }
        ::= { wfAtm 4 }

    wfAtmInterfaceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ATM Interface Table - Router Resident
                The statistical and configuration parameters for an ATM Interface.
                There is one MIB instance of this record per Sync or HSSI line
                configured for ATM DXI support. The Physical ATM DXI interface
                is managed via this table."
        ::= { wfAtmGroup 2 }

    wfAtmInterfaceEntry OBJECT-TYPE
        SYNTAX	WfAtmInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The attributes for a particular ATM DXI Interface"
        INDEX	{ wfAtmInterfaceLineNumber,
    		  wfAtmInterfaceLLIndex }
        ::= { wfAtmInterfaceTable 1 }

    WfAtmInterfaceEntry ::= SEQUENCE {
    	    wfAtmInterfaceDelete
    		INTEGER,
    	    wfAtmInterfaceDisable
    		INTEGER,
    	    wfAtmInterfaceState
    		INTEGER,
    	    wfAtmInterfaceCircuit
    		INTEGER,
    	    wfAtmInterfaceMaxSupportedVCs
    		INTEGER,
    	    wfAtmInterfaceVCsInUse
    		INTEGER,
    	    wfAtmInterfaceDescr
    		DisplayString,
    	    wfAtmInterfaceType
    		INTEGER,
    	    wfAtmInterfaceLastChange
    		TimeTicks,
    	    wfAtmInterfacePlcp
    		OBJECT IDENTIFIER,
    	    wfAtmMpeNull
    		INTEGER,
    	    wfAtmCsNull
    		INTEGER,
    	    wfAtmInterfaceMulticast
    		INTEGER,
    	    wfAtmDrops
    		Counter,
    	    wfAtmInterfaceLmiDisable
    		INTEGER,
    	    wfAtmInterfaceLineNumber
    		INTEGER,
    	    wfAtmInterfaceLLIndex
    		INTEGER,
    	    wfAtmInterfaceDxiMode
    		INTEGER,
    	    wfAtmUnknownVCPkts
    		Counter
        }

    wfAtmInterfaceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to create or delete an ATM DXI interface. This will
                remove ATMNET access over this interface The ATM Interface
                entry  instance is removed from the MIB in this case."
        DEFVAL	{ created }
        ::= { wfAtmInterfaceEntry 1 }

    wfAtmInterfaceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates when an ATM DXI interface is to be enabled or disabled.
                Disabling will disable ATM Access over this interface. The ATM
                Interface instance is NOT removed from the MIB in this case."
        DEFVAL	{ enabled }
        ::= { wfAtmInterfaceEntry 2 }

    wfAtmInterfaceState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the state for this interface.
                The state indicates Not Present when the interface has been
                configured but has not been initialized.  Init state indicates
                that the interface is in the process of being initialized by the
                system.  Up state indicates that the interface is operating
                normally.  Down state indicates that the ATM DXI interface is
                physically or logically disabled."
        DEFVAL	{ notpresent }
        ::= { wfAtmInterfaceEntry 3 }

    wfAtmInterfaceCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Wellfleet circuit number of this entry"
        ::= { wfAtmInterfaceEntry 4 }

    wfAtmInterfaceMaxSupportedVCs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of VCs allowed on this interface. Initially set by
                configuration system for PVCs only"
        DEFVAL	{ 512 }
        ::= { wfAtmInterfaceEntry 5 }

    wfAtmInterfaceVCsInUse OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of VCs that are currently configured on this interface"
        ::= { wfAtmInterfaceEntry 6 }

    wfAtmInterfaceDescr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A textual string describing this ATM interface."
        ::= { wfAtmInterfaceEntry 7 }

    wfAtmInterfaceType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    ds1(2),
    		    ds3(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The transmission type used at the ATM interface."
        DEFVAL	{ other }
        ::= { wfAtmInterfaceEntry 8 }

    wfAtmInterfaceLastChange OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of sysUpTime at the time the interface
                entered its current operational state. If the current
                state was entered prior to the last re-initialization
                of the local network management subsystem, then this
                object contains a zero value."
        ::= { wfAtmInterfaceEntry 9 }

    wfAtmInterfacePlcp OBJECT-TYPE
        SYNTAX	OBJECT IDENTIFIER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the OID of the PLCP object in the MIB
                If no additional transmission and/or media
                specific information is available, this object has
                the value { 0 0 }. "
        ::= { wfAtmInterfaceEntry 10 }

    wfAtmMpeNull OBJECT-TYPE
        SYNTAX	INTEGER {
    		    mpe1294(1),
    		    null(2),
    		    mpe1483(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Used to select Null, Multi-Protocol Encapsulation
                (RFC 1294) or Multi-Protocol Encapsulation (RFC 1483)
                layer for this Interface. Null is considered VC Based
                Multiplexing and is not supported for Bridging."
        DEFVAL	{ mpe1483 }
        ::= { wfAtmInterfaceEntry 11 }

    wfAtmCsNull OBJECT-TYPE
        SYNTAX	INTEGER {
    		    aal34(1),
    		    null(2),
    		    aal5(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Used to configure the type of CS_PDU encapsulation supported on the ATM
                DXI interface based on the ATM Forum's ATM DXI specification. This
                configuration is on a per Interface basis. The supported values are
                AAL3/4, AAL5 and Null (no CS_PDU encapsulation). Null is a propriatary
                configurable value when no CS_PDU encapsulation is desired."
        DEFVAL	{ aal5 }
        ::= { wfAtmInterfaceEntry 12 }

    wfAtmInterfaceMulticast OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This indicates whether the ATM service provider offers  multicast service"
        DEFVAL	{ disabled }
        ::= { wfAtmInterfaceEntry 13 }

    wfAtmDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The cumulative count of packet drops on this ATM Interface."
        ::= { wfAtmInterfaceEntry 14 }

    wfAtmInterfaceLmiDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates when an LMI entry is to be enabled or disabled. Disabling
                will temporarily disable the ability to report
                CSU/DSU traps and the ability to retrieve statistical information
                from the CSU/DSU.  The ATM LMI instance is NOT removed from the MIB
                in this case."
        DEFVAL	{ disabled }
        ::= { wfAtmInterfaceEntry 15 }

    wfAtmInterfaceLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the line number of the
                Wellfleet router."
        ::= { wfAtmInterfaceEntry 16 }

    wfAtmInterfaceLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the port's
                llindex number. The Lower layer index uniquely identifies the lower
                layer in cases where the lower layer may be something other than the
                physical layer."
        ::= { wfAtmInterfaceEntry 17 }

    wfAtmInterfaceDxiMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    mode1a(1),
    		    mode1b(2),
    		    mode2(3),
    		    modep2(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "ATM DXI Mode. This attribute specifies the ATM DXI Mode for this
                interface based on the ATM Forum's ATM DXI specification. Currently
                supported is Modes 1a, 1b, 2 and Proprietary 2 (which is an earlier
                version of Mode 2)."
        DEFVAL	{ mode1a }
        ::= { wfAtmInterfaceEntry 18 }

    wfAtmUnknownVCPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of packets received with an unknown VC"
        ::= { wfAtmInterfaceEntry 19 }

    wfAtmLmiTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmLmiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ATM Local Management Interface Table - Router Resident
                The statistical and configuration parameters for an ATM DXI
                Local Management Interface.   There is one LMI MIB instance per Sync
                or HSSI line configured for ATM DXI support. The LMI interface is
                managed via this table."
        ::= { wfAtmGroup 3 }

    wfAtmLmiEntry OBJECT-TYPE
        SYNTAX	WfAtmLmiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The attributes for a particular ATM Lmi"
        INDEX	{ wfAtmLmiLineNumber,
    		  wfAtmLmiLLIndex }
        ::= { wfAtmLmiTable 1 }

    WfAtmLmiEntry ::= SEQUENCE {
    	    wfAtmLmiState
    		INTEGER,
    	    wfAtmLmiCircuit
    		INTEGER,
    	    wfAtmLmiNoVCErrors
    		Counter,
    	    wfAtmLmiProxyRequests
    		Counter,
    	    wfAtmLmiCsuDsuResponses
    		Counter,
    	    wfAtmLmiCsuDsuTraps
    		Counter,
    	    wfAtmLmiOtherErrors
    		Counter,
    	    wfAtmLmiLineNumber
    		INTEGER,
    	    wfAtmLmiLLIndex
    		INTEGER
        }

    wfAtmLmiState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the state of the LMI for this interface
                The state indicates Not Present when the LMI has been
                configured but has not been initialized.  Init state indicates
                that the LMI is in the process of being initialized by the
                system.  Up state indicates that the LMI is operating
                normally.  Down state indicates that the LMI is
                physically or logically disabled."
        DEFVAL	{ notpresent }
        ::= { wfAtmLmiEntry 1 }

    wfAtmLmiCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit number of this entry"
        ::= { wfAtmLmiEntry 2 }

    wfAtmLmiNoVCErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Frames dropped that couldn't be associated with
                the LMI VPI/VCI"
        ::= { wfAtmLmiEntry 3 }

    wfAtmLmiProxyRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of SNMP Proxy Requests"
        ::= { wfAtmLmiEntry 4 }

    wfAtmLmiCsuDsuResponses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of CSU/DSU SNMP Responses to Proxy Requests"
        ::= { wfAtmLmiEntry 5 }

    wfAtmLmiCsuDsuTraps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of CSU/DSU SNMP Traps Received"
        ::= { wfAtmLmiEntry 6 }

    wfAtmLmiOtherErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of frames dropped to format or other errors."
        ::= { wfAtmLmiEntry 7 }

    wfAtmLmiLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the line number of the
                Wellfleet router."
        ::= { wfAtmLmiEntry 8 }

    wfAtmLmiLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the port's llindex
                number. The Lower layer index uniquely identifies the lower
                layer in cases where the lower layer may be something other than the
                physical layer."
        ::= { wfAtmLmiEntry 9 }

    wfAtmPlcpTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmPlcpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The ATM PLCP Table - CSU/DSU Resident
                The PLCP object reflects information about either DS1 or DS3
                PLCP framing status and performance.  There is one instance of
                this object for every ATM DS1 or DS3 UNI.
                The PLCP object is separated from the other ATM objects for
                two reasons.  First, there may be ATM UNIs which use physical
                media other than DS1 or DS3, and thus the PLCP object may not
                apply to them.  Second, the PLCP object may also be applied
                towards management of SMDS Interfaces (SIPs).
                This PLCP object is essentially a superset of the PLCP object
                described in the Internet Draft MIB for SMDS (SIPs).  It contains
                variables of interest to some ATM service providers and customers."
        ::= { wfAtmGroup 4 }

    wfAtmPlcpEntry OBJECT-TYPE
        SYNTAX	WfAtmPlcpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per linenumber/llindex PLCP objects"
        INDEX	{ wfAtmPlcpLineNumber,
    		  wfAtmPlcpLLIndex }
        ::= { wfAtmPlcpTable 1 }

    WfAtmPlcpEntry ::= SEQUENCE {
    	    wfAtmPlcpCct
    		INTEGER,
    	    wfAtmPlcpPhysical
    		OBJECT IDENTIFIER,
    	    wfAtmPlcpLof
    		INTEGER,
    	    wfAtmPlcpLofCFA
    		INTEGER,
    	    wfAtmPlcpYellow
    		INTEGER,
    	    wfAtmPlcpYellowCFA
    		INTEGER,
    	    wfAtmPlcpStatus
    		INTEGER,
    	    wfAtmPlcpSeconds
    		Counter,
    	    wfAtmPlcpBipErrors
    		Counter,
    	    wfAtmPlcpBipESecs
    		Counter,
    	    wfAtmPlcpBipSESecs
    		Counter,
    	    wfAtmPlcpFebes
    		Counter,
    	    wfAtmPlcpFebeESecs
    		Counter,
    	    wfAtmPlcpFebeSESecs
    		Counter,
    	    wfAtmPlcpFrameErrors
    		Counter,
    	    wfAtmPlcpSevereFrameErrors
    		Counter,
    	    wfAtmPlcpSEFS
    		Counter,
    	    wfAtmPlcpUAS
    		Counter,
    	    wfAtmPlcpLineNumber
    		INTEGER,
    	    wfAtmPlcpLLIndex
    		INTEGER
        }

    wfAtmPlcpCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the DS1 or DS3 PLCP port for which this entry
                contains information.  This corresponds to the Wellfleet
                circuit number"
        ::= { wfAtmPlcpEntry 1 }

    wfAtmPlcpPhysical OBJECT-TYPE
        SYNTAX	OBJECT IDENTIFIER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the OID of the first object in the standard
                DS1 or DS3 MIB"
        ::= { wfAtmPlcpEntry 2 }

    wfAtmPlcpLof OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "True if Loss of Frame has been detected"
        DEFVAL	{ false }
        ::= { wfAtmPlcpEntry 3 }

    wfAtmPlcpLofCFA OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "True if Loss of Frame has been detected over the CFA time
                period"
        DEFVAL	{ false }
        ::= { wfAtmPlcpEntry 4 }

    wfAtmPlcpYellow OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "True if PLCP Yellow (Remote Alarm Indication) has been detected"
        DEFVAL	{ false }
        ::= { wfAtmPlcpEntry 5 }

    wfAtmPlcpYellowCFA OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "True if PLCP Yellow (Remote Alarm Indication) has been detected
                over the CFA time period"
        DEFVAL	{ false }
        ::= { wfAtmPlcpEntry 6 }

    wfAtmPlcpStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    connected(1),
    		    up(2),
    		    down(3),
    		    other(4),
    		    outofframe(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of this variable indicates the PLCP
                status as indicated by the three-bit PLCP LSS
                code received from the remote end.  Connected is
                LSS code #0, linkUp is LSS code #6, and linkDown is
                code #3.  OtherCode means that one of the other five
                possible code values is being received.  OutOfFrame
                means that the PLCP is in the out of frame state,
                and therefore there is no code being received."
        DEFVAL	{ down }
        ::= { wfAtmPlcpEntry 7 }

    wfAtmPlcpSeconds OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of seconds elapsed since event counting
                began or since the counters were last cleared.  The
                implementation may optionally allow this variable to
                be set.  If set, the set value is ignored, and this
                variable and all other event counters for this
                object are reset to zero."
        ::= { wfAtmPlcpEntry 8 }

    wfAtmPlcpBipErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of PLCP Bit Interleaved Parity (BIP)
                errors detected."
        ::= { wfAtmPlcpEntry 9 }

    wfAtmPlcpBipESecs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "BIP Errored Seconds. The count of seconds during
                which one or more BIP errors were detected."
        ::= { wfAtmPlcpEntry 10 }

    wfAtmPlcpBipSESecs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "BIP Severely Errored Seconds. The count of seconds
                during which five (5) or more BIP errors were detected."
        ::= { wfAtmPlcpEntry 11 }

    wfAtmPlcpFebes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of PLCP Far End Block Errors (FEBE)
                detected."
        ::= { wfAtmPlcpEntry 12 }

    wfAtmPlcpFebeESecs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "FEBE Errored Seconds. The count of seconds during
                which one or more FEBE errors were detected."
        ::= { wfAtmPlcpEntry 13 }

    wfAtmPlcpFebeSESecs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "FEBE Severely Errored Seconds. The count of seconds
                during which five (5) or more FEBE errors were detected."
        ::= { wfAtmPlcpEntry 14 }

    wfAtmPlcpFrameErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of PLCP Frame bit errors detected."
        ::= { wfAtmPlcpEntry 15 }

    wfAtmPlcpSevereFrameErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of PLCP Severe Frame errors (aka Out Of
                Frame Events) detected."
        ::= { wfAtmPlcpEntry 16 }

    wfAtmPlcpSEFS OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Severely Errored Framing Seconds. The count of
                seconds during which one or more PLCP Severe Frame
                errors were detected."
        ::= { wfAtmPlcpEntry 17 }

    wfAtmPlcpUAS OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Unavailable Seconds. The count of seconds during
                which the PLCP service was declared to be unavailable."
        ::= { wfAtmPlcpEntry 18 }

    wfAtmPlcpLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the line number
                of the Wellfleet router."
        ::= { wfAtmPlcpEntry 19 }

    wfAtmPlcpLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the port's
                llindex. The Lower layer index uniquely identifies the lower
                   layer in cases where the lower layer may be something other than the
                physical layer."
        ::= { wfAtmPlcpEntry 20 }

    wfAtmUniTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmUniEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The ATM UNI Table - CSU/DSU Resident
                The ATM User Network Interface (UNI) object reflects information
                about a particular ATM UNI.  In particular it contains information,
                both configuration and performance, from the 'ATM' or Cell layer
                of the ATM protocol hierarchy.  It optionally keeps some information
                on a per-VPI/VCI basis.  It 'points to' its associated
                physical layer object, for example the DS1 or DS3 PLCP object.
                It also 'points to' the (one or more) higher layer object(s),
                namely the ATM Adaptation Layer (AAL) object(s) which further
                process the ATM Cells.
                It should be noted that in the ATM UNI MIB, the receive (transmit)
                direction refers to data received from (transmitted to)
                the ATM UNI interface.

                 ** For DL200 and DL3200 there is only one ATM UNI per DL unit
                 ** and only one AAL object (specifically VBR) per ATM UNI.
                "
        ::= { wfAtmGroup 5 }

    wfAtmUniEntry OBJECT-TYPE
        SYNTAX	WfAtmUniEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per linenumber/llindex User Network Interface (UNI) objects -
                wfAtmUniLineNumber and wfAtmUniLLIndex corresponds to Wellfleet
                linenumber/llindex number"
        INDEX	{ wfAtmUniLineNumber,
    		  wfAtmUniLLIndex }
        ::= { wfAtmUniTable 1 }

    WfAtmUniEntry ::= SEQUENCE {
    	    wfAtmUniCct
    		INTEGER,
    	    wfAtmUniPhysical
    		OBJECT IDENTIFIER,
    	    wfAtmUniAal
    		OBJECT IDENTIFIER,
    	    wfAtmUniSeconds
    		Counter,
    	    wfAtmUniLineNumber
    		INTEGER,
    	    wfAtmUniLLIndex
    		INTEGER
        }

    wfAtmUniCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This corresponds to the Wellfleet circuit number"
        ::= { wfAtmUniEntry 1 }

    wfAtmUniPhysical OBJECT-TYPE
        SYNTAX	OBJECT IDENTIFIER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the OID of the first object in the standard
                DS1 or DS3 MIB corresponding to this ATM UNI port"
        ::= { wfAtmUniEntry 2 }

    wfAtmUniAal OBJECT-TYPE
        SYNTAX	OBJECT IDENTIFIER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the AAL MIB corresponding to this ATM UNI port.
                There is only one AAL currently for the DXI application."
        ::= { wfAtmUniEntry 3 }

    wfAtmUniSeconds OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of seconds elapsed since event counting
                 began or since the counters were last cleared.The
                 implementation may optionally allow this variable to
                 be set.If set, the set value is ignored, and this
                  variable and all other event counters for this
                 object are reset to zero."
        ::= { wfAtmUniEntry 4 }

    wfAtmUniLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the line number
                of the Wellfleet router."
        ::= { wfAtmUniEntry 5 }

    wfAtmUniLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the port's llindex.
                The Lower layer index uniquely identifies the lower
                layer in cases where the lower layer may be something other than the
                physical layer."
        ::= { wfAtmUniEntry 6 }

    wfAtmUniAtmTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmUniAtmEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The ATM UNIATM Table CSU/DSU Resident
                This list contains ATM Layer parameters, one entry
                per ATM UNI port.  The counts maintained in this table
                are totals for the UNI, across all VPI/VCIs."
        ::= { wfAtmGroup 6 }

    wfAtmUniAtmEntry OBJECT-TYPE
        SYNTAX	WfAtmUniAtmEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per linenumber/llindex UNI ATM Layer objects -
                wfAtmUniAtmLineNumber and wfAtmUniAtmLLIndex corresponds to
                Wellfleet  linenumber/llindex number"
        INDEX	{ wfAtmUniAtmLineNumber,
    		  wfAtmUniAtmLLIndex }
        ::= { wfAtmUniAtmTable 1 }

    WfAtmUniAtmEntry ::= SEQUENCE {
    	    wfAtmUniAtmCct
    		INTEGER,
    	    wfAtmUniAtmNoBuffers
    		Counter,
    	    wfAtmUniAtmHECs
    		Counter,
    	    wfAtmUniAtmCHECs
    		Counter,
    	    wfAtmUniAtmNullCells
    		Counter,
    	    wfAtmUniAtmMisdeliveredCells
    		Counter,
    	    wfAtmUniAtmReceives
    		Counter,
    	    wfAtmUniAtmTransmits
    		Counter,
    	    wfAtmUniAtmLineNumber
    		INTEGER,
    	    wfAtmUniAtmLLIndex
    		INTEGER
        }

    wfAtmUniAtmCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ATM UNI port for which corresponds to the Wellfleet
                circuit number"
        ::= { wfAtmUniAtmEntry 1 }

    wfAtmUniAtmNoBuffers OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Received ATM cells discarded due to the lack of
                available cell buffers"
        ::= { wfAtmUniAtmEntry 2 }

    wfAtmUniAtmHECs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Received ATM cells discarded due to an uncorrected
                HEC"
        ::= { wfAtmUniAtmEntry 3 }

    wfAtmUniAtmCHECs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Received ATM cells for which a HEC error was detected
                and corrected"
        ::= { wfAtmUniAtmEntry 4 }

    wfAtmUniAtmNullCells OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Received Null (unassigned , empty) cells"
        ::= { wfAtmUniAtmEntry 5 }

    wfAtmUniAtmMisdeliveredCells OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Received cells with an invalid VPI/VCI and were discarded"
        ::= { wfAtmUniAtmEntry 6 }

    wfAtmUniAtmReceives OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Valid (non-null) ATM Cells received at this layer and passed
                up"
        ::= { wfAtmUniAtmEntry 7 }

    wfAtmUniAtmTransmits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Valid (non-null) ATM Cells transmitted at this layer and passed
                down to the PLCP layer"
        ::= { wfAtmUniAtmEntry 8 }

    wfAtmUniAtmLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the line number
                of the Wellfleet router."
        ::= { wfAtmUniAtmEntry 9 }

    wfAtmUniAtmLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the port's llindex.
                The Lower layer index uniquely identifies the lower
                layer in cases where the lower layer may be something other than the
                physical layer."
        ::= { wfAtmUniAtmEntry 10 }

    wfAtmVbrTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmVbrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The ATM VBR Table - CSU/DSU Resident
                The ATM Variable Bit Rate (VBR) object is one of several types
                of ATM Adaptation Layer (AAL) objects.
                The ATM VBR object reflects information about a VBR service
                carried by an ATM UNI on behalf of a DTE interface (e.g. a DXI).
                In particular, it contains both configuration and performance
                information about the Segmentation and Reassembly (SAR) sublayer
                and the Convergence Sublayer (CS).
                Each instance of the VBR object has only one corresponding DTE
                interface, and only one corresponding ATM UNI, although it may
                correspond to several VPI/VCIs within a particular ATM UNI.
                The VBR object optionally keeps some information
                on a per-VPI/VCI basis.
                It should be noted that in the ATM VBR MIB, the receive (transmit)
                direction refers to data received from (transmitted to)
                the ATM UNI interface.

                ** For DL200 and DL3200 DSUs, there is only one ATM UNI per DSU
                ** and only one AAL object (specifically VBR) per ATM UNI.
                ** For these products, the DSU does not perform the
                ** integrity checks for the VBR CS layer, and thus will not
                ** provide all variables for the VBR CS table.  The Router/Host
                ** is expected to perform these checks and provide these variables.
                "
        ::= { wfAtmGroup 8 }

    wfAtmVbrEntry OBJECT-TYPE
        SYNTAX	WfAtmVbrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per linenumber/llindex VBR AAL objects -
                wfAtmVbrLineNumber and wfAtmVbrLLIndex corresponds to
                Wellfleet  linenumber/llindex number"
        INDEX	{ wfAtmVbrLineNumber,
    		  wfAtmVbrLLIndex }
        ::= { wfAtmVbrTable 1 }

    WfAtmVbrEntry ::= SEQUENCE {
    	    wfAtmVbrCct
    		INTEGER,
    	    wfAtmVbrAtmUni
    		OBJECT IDENTIFIER,
    	    wfAtmVbrDxi
    		OBJECT IDENTIFIER,
    	    wfAtmVbrSeconds
    		Counter,
    	    wfAtmVbrLineNumber
    		INTEGER,
    	    wfAtmVbrLLIndex
    		INTEGER
        }

    wfAtmVbrCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the ATM VBR object which corresponds to the
                Wellfleet circuit number"
        ::= { wfAtmVbrEntry 1 }

    wfAtmVbrAtmUni OBJECT-TYPE
        SYNTAX	OBJECT IDENTIFIER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the OID of the first object in the ATM UNI
                MIB corresponding to this ATM VBR-AAL"
        ::= { wfAtmVbrEntry 2 }

    wfAtmVbrDxi OBJECT-TYPE
        SYNTAX	OBJECT IDENTIFIER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the DXI MIB corresponding to this ATM VBR-AAL.
                There is only one AAL currently for the DXI application."
        ::= { wfAtmVbrEntry 3 }

    wfAtmVbrSeconds OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of seconds elapsed since event counting
                began or since the counters were last cleared.  The
                implementation may optionally allow this variable to
                be set.  If set, the set value is ignored, and this
                variable and all other event counters for this
                object are reset to zero."
        ::= { wfAtmVbrEntry 4 }

    wfAtmVbrLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the line number
                of the Wellfleet router."
        ::= { wfAtmVbrEntry 5 }

    wfAtmVbrLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the port's llindex.
                The Lower layer index uniquely identifies the lower
                layer in cases where the lower layer may be something other than the
                physical layer."
        ::= { wfAtmVbrEntry 6 }

    wfAtmVbrSarTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmVbrSarEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The ATM VBR SAR Table CSU/DSU Resident
                This table contains ATM VBR-AAL, SAR Layer parameters,
                the entry per ATM VBR-AAL object. The counts maintained
                in this table are totals for the VBR, across all
                VPI/VCIs within the VBR."
        ::= { wfAtmGroup 9 }

    wfAtmVbrSarEntry OBJECT-TYPE
        SYNTAX	WfAtmVbrSarEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per linenumber/llindex VBR AAL SAR sublayer objects -
                wfAtmSarLineNumber and wfAtmSarLLIndex corresponds to
                Wellfleet  linenumber/llindex number"
        INDEX	{ wfAtmVbrSarLineNumber,
    		  wfAtmVbrSarLLIndex }
        ::= { wfAtmVbrSarTable 1 }

    WfAtmVbrSarEntry ::= SEQUENCE {
    	    wfAtmVbrSarCct
    		INTEGER,
    	    wfAtmVbrSarAssemblyTimer
    		INTEGER,
    	    wfAtmVbrSarCrc10Errors
    		Counter,
    	    wfAtmVbrSarCellMidErrors
    		Counter,
    	    wfAtmVbrSarCsPduSizeTooBigErrors
    		Counter,
    	    wfAtmVbrSarNoBufferErrors
    		Counter,
    	    wfAtmVbrSarComNoProcessErrors
    		Counter,
    	    wfAtmVbrSarEomNoProcessErrors
    		Counter,
    	    wfAtmVbrSarCellSequenceErrors
    		Counter,
    	    wfAtmVbrSarCellLengthErrors
    		Counter,
    	    wfAtmVbrSarBomBeforeEomErrors
    		Counter,
    	    wfAtmVbrSarTimeouts
    		Counter,
    	    wfAtmVbrSarLengthExceeds
    		Counter,
    	    wfAtmVbrSarReceives
    		Counter,
    	    wfAtmVbrSarTransmits
    		Counter,
    	    wfAtmVbrSarLineNumber
    		INTEGER,
    	    wfAtmVbrSarLLIndex
    		INTEGER
        }

    wfAtmVbrSarCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "identifies the VBR_SAR object which corresponds to the
                Wellfleet circuit number"
        ::= { wfAtmVbrSarEntry 1 }

    wfAtmVbrSarAssemblyTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum time period (milliseconds) allowed for CS_PDU
                assembly process to complete.  This is the time between
                receipt of a BOM and receipt of an EOM SAR_PDU."
        ::= { wfAtmVbrSarEntry 2 }

    wfAtmVbrSarCrc10Errors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of received SAR_PDUs discarded due to CRC10 error"
        ::= { wfAtmVbrSarEntry 3 }

    wfAtmVbrSarCellMidErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of received SAR_PDUs discarded due to an invalid
                MID field value"
        ::= { wfAtmVbrSarEntry 4 }

    wfAtmVbrSarCsPduSizeTooBigErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of received SAR_PDUs discarded due to CS_PDU
                size is too big . NOTE: This attribute needs to be moved to
                router based CS object."
        ::= { wfAtmVbrSarEntry 5 }

    wfAtmVbrSarNoBufferErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "No CS_PDU assembly buffer space"
        ::= { wfAtmVbrSarEntry 6 }

    wfAtmVbrSarComNoProcessErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Received COM SAR_PDUs discarded due to lack of an active
                CS_PDU assembly process"
        ::= { wfAtmVbrSarEntry 7 }

    wfAtmVbrSarEomNoProcessErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Received EOM SAR_PDUs discarded due to lack of an active
                CS_PDU assembly process"
        ::= { wfAtmVbrSarEntry 8 }

    wfAtmVbrSarCellSequenceErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of active CS_PDU assembly processes
                closed (aborted, accumulation discarded) due to
                detecting a SAR sequence number error in a
                received SAR_PDU."
        ::= { wfAtmVbrSarEntry 9 }

    wfAtmVbrSarCellLengthErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of active CS_PDU assembly processes
                closed (aborted, accumulation discarded) due to
                detecting a length field error in a
                received SAR_PDU."
        ::= { wfAtmVbrSarEntry 10 }

    wfAtmVbrSarBomBeforeEomErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of active CS_PDU assembly processes
                closed (aborted, accumulation discarded) due to
                receiving a new BOM or SSM SAR_PDU for the
                same VPI/VCI (and MID) before receiving the
                EOM SAR_PDU."
        ::= { wfAtmVbrSarEntry 11 }

    wfAtmVbrSarTimeouts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of active CS_PDU assembly processes
                closed (aborted, accumulation discarded) due to
                expiration of the assembly timer."
        ::= { wfAtmVbrSarEntry 12 }

    wfAtmVbrSarLengthExceeds OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of active CS_PDU assembly processes
                closed (aborted, accumulation discarded) due to
                receiving more SAR_PDUs (and their payloads)
                than will fit in the CS_PDU assembly buffer."
        ::= { wfAtmVbrSarEntry 13 }

    wfAtmVbrSarReceives OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of received SAR_PDUs (all types,
                i.e. BOM, COM, EOM, SSM) successfully
                accumulated into a CS_PDU assembly buffer."
        ::= { wfAtmVbrSarEntry 14 }

    wfAtmVbrSarTransmits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of SAR_PDUs (all types, i.e. BOM,
                COM, EOM, SSM) transmitted to the ATM layer
                from a CS_PDU segmentation process."
        ::= { wfAtmVbrSarEntry 15 }

    wfAtmVbrSarLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the line number
                of the Wellfleet router."
        ::= { wfAtmVbrSarEntry 16 }

    wfAtmVbrSarLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the port's llindex.
                The Lower layer index uniquely identifies the lower layer in
                cases where the lower layer may be something other than the
                physical layer."
        ::= { wfAtmVbrSarEntry 17 }

    wfAtmVbrCsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmVbrCsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The ATM VBR CS Table - Router Resident
                This table contains ATM VBR-AAL, CS Layer parameters,
                one entry per ATM VBR-AAL object.  The counts maintained
                in this table are totals for the VBR, across all
                VPI/VCIs within the VBR."
        ::= { wfAtmGroup 11 }

    wfAtmVbrCsEntry OBJECT-TYPE
        SYNTAX	WfAtmVbrCsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per linenumber/llindex VBR_CS objects -
                wfAtmVbrCsLineNumber and wfAtmVbrCsLLIndex corresponds to
                Wellfleet  linenumber/llindex number"
        INDEX	{ wfAtmVbrCsLineNumber,
    		  wfAtmVbrCsLLIndex }
        ::= { wfAtmVbrCsTable 1 }

    WfAtmVbrCsEntry ::= SEQUENCE {
    	    wfAtmVbrCsCct
    		INTEGER,
    	    wfAtmVbrCsBETagMismatches
    		Counter,
    	    wfAtmVbrCsLengthMismatches
    		Counter,
    	    wfAtmVbrCsMisdeliveredPdus
    		Counter,
    	    wfAtmVbrCsReceives
    		Counter,
    	    wfAtmVbrCsTransmits
    		Counter,
    	    wfAtmVbrCsLineNumber
    		INTEGER,
    	    wfAtmVbrCsLLIndex
    		INTEGER
        }

    wfAtmVbrCsCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the VBR_CS object which corresponds to the Wellfleet
                circuit number"
        ::= { wfAtmVbrCsEntry 1 }

    wfAtmVbrCsBETagMismatches OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of received CS_PDUs discarded due to a mismatch when
                comparing the BETag fields in the CS_PDU header and trailer."
        ::= { wfAtmVbrCsEntry 2 }

    wfAtmVbrCsLengthMismatches OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of received CS_PDUs discarded due to a mismatch when
                comparing the CS_PDU header BASize field, the CS_PDU trailer length
                field and the actual length of the CS_PDU received."
        ::= { wfAtmVbrCsEntry 3 }

    wfAtmVbrCsMisdeliveredPdus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of received SAR_PDUs discarded due to an invalid
                VPI/VCI detected at this layer."
        ::= { wfAtmVbrCsEntry 4 }

    wfAtmVbrCsReceives OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of the valid CS_PDUs received from the SAR layer and
                passed on to the next upper layer for further processing."
        ::= { wfAtmVbrCsEntry 5 }

    wfAtmVbrCsTransmits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of CS_PDUs received from upper layers and sent to the
                SAR layer for segmentation and transmission"
        ::= { wfAtmVbrCsEntry 6 }

    wfAtmVbrCsLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the line number
                of the Wellfleet router."
        ::= { wfAtmVbrCsEntry 7 }

    wfAtmVbrCsLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the port's
                llindex number. The Lower layer index uniquely identifies the
                lower layer in cases where the lower layer may be something other
                than the physical layer."
        ::= { wfAtmVbrCsEntry 8 }

    wfAtmVbrCsVciTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmVbrCsVciEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The ATM VBR CS_VCI Table - Router Resident
                This table contains ATM VBR-AAL, CS Layer parameters,
                one entry per ATM VPI/VCI for which information has been
                recorded per ATM VBR-AAL object."
        ::= { wfAtmGroup 12 }

    wfAtmVbrCsVciEntry OBJECT-TYPE
        SYNTAX	WfAtmVbrCsVciEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per virtual circuit VBR_CS objects"
        INDEX	{ wfAtmVbrCsVciLineNumber,
    		  wfAtmVbrCsVciLLIndex,
    		  wfAtmVbrCsVciIndex }
        ::= { wfAtmVbrCsVciTable 1 }

    WfAtmVbrCsVciEntry ::= SEQUENCE {
    	    wfAtmVbrCsVciVbrCct
    		INTEGER,
    	    wfAtmVbrCsVciIndex
    		INTEGER,
    	    wfAtmVbrCsVciBETagMismatches
    		Counter,
    	    wfAtmVbrCsVciLengthMismatches
    		Counter,
    	    wfAtmVbrCsVciMisdeliveredPdus
    		Counter,
    	    wfAtmVbrCsVciReceives
    		Counter,
    	    wfAtmVbrCsVciTransmits
    		Counter,
    	    wfAtmVbrCsVciOctetReceives
    		Counter,
    	    wfAtmVbrCsVciOctetTransmits
    		Counter,
    	    wfAtmVbrCsVciLineNumber
    		INTEGER,
    	    wfAtmVbrCsVciLLIndex
    		INTEGER
        }

    wfAtmVbrCsVciVbrCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the VBR_CS object which corresponds to the Wellfleet
                circuit number"
        ::= { wfAtmVbrCsVciEntry 1 }

    wfAtmVbrCsVciIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..8388608)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the VPI/VCI object for which this entry
                contains information."
        ::= { wfAtmVbrCsVciEntry 2 }

    wfAtmVbrCsVciBETagMismatches OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of received CSVCI_PDUs discarded due to a mismatch when
                comparing the BETag fields in the CSVCI_PDU header and trailer."
        ::= { wfAtmVbrCsVciEntry 3 }

    wfAtmVbrCsVciLengthMismatches OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of received CSVCI_PDUs discarded due to a mismatch when
                comparing the CSVCI_PDU header BASize field, the CSVCI_PDU trailer
                length field and the actual length of the CSVCI_PDU received."
        ::= { wfAtmVbrCsVciEntry 4 }

    wfAtmVbrCsVciMisdeliveredPdus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of received SAR_PDUs discarded due to an invalid
                VPI/VCI detected at this layer."
        ::= { wfAtmVbrCsVciEntry 5 }

    wfAtmVbrCsVciReceives OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of the valid CSVCI_PDUs received from the SAR layer and
                passed on to the next upper layer for further processing."
        ::= { wfAtmVbrCsVciEntry 6 }

    wfAtmVbrCsVciTransmits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of CSVCI_PDUs received from upper layers and sent to the
                SAR layer for segmentation and transmission"
        ::= { wfAtmVbrCsVciEntry 7 }

    wfAtmVbrCsVciOctetReceives OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The octet count of the valid CSVCI_PDUs received from the
                SAR layer and passed on to the next upper layer for further
                 processing."
        ::= { wfAtmVbrCsVciEntry 8 }

    wfAtmVbrCsVciOctetTransmits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of CSVCI_PDUs received from upper layers and sent to the
                SAR layer for segmentation and transmission"
        ::= { wfAtmVbrCsVciEntry 9 }

    wfAtmVbrCsVciLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the line number
                of the Wellfleet router."
        ::= { wfAtmVbrCsVciEntry 10 }

    wfAtmVbrCsVciLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the port's
                llindex number. The Lower layer index uniquely identifies the
                lower layer in cases where the lower layer may be something other
                than the physical layer."
        ::= { wfAtmVbrCsVciEntry 11 }

    wfAtmMpeTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmMpeEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The ATM MPE Table - Router Resident
                This table contains ATM DXI MPE Layer parameters,
                 one entry per ATM Circuit.The counts maintained
                 in this table are totals for the MPE Layer, across all
                 VPI/VCIs."
        ::= { wfAtmGroup 13 }

    wfAtmMpeEntry OBJECT-TYPE
        SYNTAX	WfAtmMpeEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit MPE objects - wfAtmMpeIndex
                corresponds to Wellfleet circuit number"
        INDEX	{ wfAtmMpeIndex }
        ::= { wfAtmMpeTable 1 }

    WfAtmMpeEntry ::= SEQUENCE {
    	    wfAtmMpeIndex
    		INTEGER,
    	    wfAtmMpeInvalidNlpids
    		Counter,
    	    wfAtmMpeInvalidPids
    		Counter,
    	    wfAtmMpeInvalidOuis
    		Counter,
    	    wfAtmMpeMisdeliveredPdus
    		Counter,
    	    wfAtmMpeUnsupportedControlFields
    		Counter,
    	    wfAtmMpeInvalidSAP
    		Counter
        }

    wfAtmMpeIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the MPE object for which this entry
                contains information.  This corresponds to the Wellfleet
                circuit number"
        ::= { wfAtmMpeEntry 1 }

    wfAtmMpeInvalidNlpids OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of received MPE_PDUs discarded due to an unknown
                or unsupported NLPID"
        ::= { wfAtmMpeEntry 2 }

    wfAtmMpeInvalidPids OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of received MPE_PDUs discarded due to an unknown
                or unsupported PID"
        ::= { wfAtmMpeEntry 3 }

    wfAtmMpeInvalidOuis OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of received MPE_PDUs discarded due to an unknown
                or unsupported OUI"
        ::= { wfAtmMpeEntry 4 }

    wfAtmMpeMisdeliveredPdus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of received MPE_PDUs discarded due to an inactive
                SAP."
        ::= { wfAtmMpeEntry 5 }

    wfAtmMpeUnsupportedControlFields OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of received MPE_PDUs discarded due to an unknown
                or unsupported Control field"
        ::= { wfAtmMpeEntry 6 }

    wfAtmMpeInvalidSAP OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The cound of received MPE_PDUs discarded due to either a
                bad SSAP or DSAP (RFC1483)"
        ::= { wfAtmMpeEntry 7 }

    wfAtmPvcTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmPvcEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The ATM PVC Table - Router Resident
                This table contains Virtual Circuit configuration and stats parameters,
                one entry per ATM VPI/PVC for which information has been
                recorded."
        ::= { wfAtmGroup 14 }

    wfAtmPvcEntry OBJECT-TYPE
        SYNTAX	WfAtmPvcEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per virtual circuit  objects"
        INDEX	{ wfAtmPvcLineNumber,
    		  wfAtmPvcLLIndex,
    		  wfAtmPvcVpi,
    		  wfAtmPvcVci }
        ::= { wfAtmPvcTable 1 }

    WfAtmPvcEntry ::= SEQUENCE {
    	    wfAtmPvcDelete
    		INTEGER,
    	    wfAtmPvcCct
    		INTEGER,
    	    wfAtmPvcVpi
    		INTEGER,
    	    wfAtmPvcVci
    		INTEGER,
    	    wfAtmPvcReceives
    		Counter,
    	    wfAtmPvcTransmits
    		Counter,
    	    wfAtmPvcOctetReceives
    		Counter,
    	    wfAtmPvcOctetTransmits
    		Counter,
    	    wfAtmPvcMode
    		INTEGER,
    	    wfAtmPvcDirectAccessCct
    		INTEGER,
    	    wfAtmPvcState
    		INTEGER,
    	    wfAtmPvcMpeNull
    		INTEGER,
    	    wfAtmPvcCsNull
    		INTEGER,
    	    wfAtmPvcDisable
    		INTEGER,
    	    wfAtmPvcDrops
    		Counter,
    	    wfAtmPvcMulticast
    		INTEGER,
    	    wfAtmPvcLineNumber
    		INTEGER,
    	    wfAtmPvcLLIndex
    		INTEGER
        }

    wfAtmPvcDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Used to create/delete an instance of this object.
                This action will result in a PVC being added or
                removed from service."
        DEFVAL	{ created }
        ::= { wfAtmPvcEntry 1 }

    wfAtmPvcCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the object which corresponds to the Wellfleet
                circuit number"
        ::= { wfAtmPvcEntry 2 }

    wfAtmPvcVpi OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The VPI associated with this PVC"
        ::= { wfAtmPvcEntry 3 }

    wfAtmPvcVci OBJECT-TYPE
        SYNTAX	INTEGER(32..65535)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The VCI associated with this PVC"
        ::= { wfAtmPvcEntry 4 }

    wfAtmPvcReceives OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of the valid PVC_PDUs received from the SAR layer and
                passed on to the next upper layer for further processing."
        ::= { wfAtmPvcEntry 5 }

    wfAtmPvcTransmits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of PVC_PDUs received from upper layers and sent to the
                SAR layer for segmentation and transmission"
        ::= { wfAtmPvcEntry 6 }

    wfAtmPvcOctetReceives OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The octet count of the valid PVC_PDUs received from the SAR
                layer and passed on to the next upper layer for further
                 processing."
        ::= { wfAtmPvcEntry 7 }

    wfAtmPvcOctetTransmits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The octet count of PVC_PDUs received from upper layers and
                sent to the SAR layer for segmentation and transmission"
        ::= { wfAtmPvcEntry 8 }

    wfAtmPvcMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    groupaccess(1),
    		    hybridaccess(2),
    		    direct(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The mode of the given VC.
                GROUP - treats the VC as one of many vc's on a circuit.
                HYBRID - treats the VC as one of many vc's on a circuit for
                  protocol traffic, but as a separate circuit for bridging.
                DIRECT - treats the VC as a separate circuit for all applications."
        DEFVAL	{ groupaccess }
        ::= { wfAtmPvcEntry 9 }

    wfAtmPvcDirectAccessCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Circuit number to use for this VC for hybrid or direct access
                routing"
        ::= { wfAtmPvcEntry 10 }

    wfAtmPvcState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the state of the PVC.
                The state indicates Not Present when the PVC has been
                configured but has not been initialized.  Init state indicates
                that the PVC is in the process of being initialized by the
                system.  Up state indicates that the PVC is operating
                normally.  Down state indicates that the PVC is
                disabled."
        DEFVAL	{ notpresent }
        ::= { wfAtmPvcEntry 11 }

    wfAtmPvcMpeNull OBJECT-TYPE
        SYNTAX	INTEGER {
    		    mpe1294(1),
    		    null(2),
    		    mpe1483(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Used to select Null, Multi-Protocol Encapsulation
                (RFC 1294) or Multi-Protocol Encapsulation (RFC 1483)
                layer for this PVC. Null is considered VC Based
                Multiplexing and is not supported for Bridging."
        DEFVAL	{ mpe1483 }
        ::= { wfAtmPvcEntry 12 }

    wfAtmPvcCsNull OBJECT-TYPE
        SYNTAX	INTEGER {
    		    aal34(1),
    		    null(2),
    		    aal5(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Used to configure the type of CS_PDU encapsulation supported on
                the ATM DXI PVC based on the ATM Forum's ATM DXI specification.
                This configuration is on a per Direct VC basis. The supported
                values are  AAL3/4, AAL5 and Null (no CS_PDU encapsulation). Null
                is a propriatary configurable value when no CS_PDU encapsulation
                is desired."
        DEFVAL	{ aal5 }
        ::= { wfAtmPvcEntry 13 }

    wfAtmPvcDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Used to enable/disable a PVC"
        DEFVAL	{ enabled }
        ::= { wfAtmPvcEntry 14 }

    wfAtmPvcDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total count of packets  dropped on this VC"
        ::= { wfAtmPvcEntry 15 }

    wfAtmPvcMulticast OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unicast(1),
    		    multicast(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this VPI/VCI is used for multicast or
                single destination."
        DEFVAL	{ unicast }
        ::= { wfAtmPvcEntry 16 }

    wfAtmPvcLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the line number
                of the Wellfleet router."
        ::= { wfAtmPvcEntry 17 }

    wfAtmPvcLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the port's
                llindex number. The Lower layer index uniquely identifies the
                lower layer in cases where the lower layer may be something other
                than the physical layer."
        ::= { wfAtmPvcEntry 18 }

    wfAtmDxiTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmDxiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The ATM DXI Table - An entry in this table is either resident in
                the Wellfleet MIB or in the Digital Link MIB via the SNMP Proxy.
                The Component attribute determines local or remote residency.

                The ATM Data Exchange Interface (DXI) object reflects
                information about an ATM DXI interface between an ATM DSU
                and a Router/Host.  In particular, it contains both
                configuration and performance information specific to the DXI
                (ATM) interface.
                Each DXI instance typically corresponds to several (ATM)
                DXIADDRs.  The DXI object optionally keeps some information
                on a per-DXIADDR basis.
                Each instance of the DXI object typically has only one
                corresponding ATM -AAL object, but the MIB has been
                structured so that a DXI may have more than one.
                It should be noted that in the DXI MIB, the receive (transmit)
                direction refers to data received from (transmitted to)
                the ATM interface.

                With a 23-bit DXIADDR, the range of valid DXIADDR index values is
                1 thru 2**23 inclusive.  Note that the 23-bit binary DXIADDR field
                (with values 0 thru 2**23-1) from the Frame Relay header must be
                incremented by one to yield the DXIADDR index for accessing the
                tables in the MIB.  The DXIADDR consisting of all zeros (with
                corresponding MIB index value of 1) is reserved for the DXI
                Local Management Interface (LMI) with the DSU.

                DxiAddr ::= INTEGER (1..8388608)

                 ** For DL200 and DL3200 DSUs, there is only one ATM DXI per DSU
                 ** and only one AAL object (specifically VBR) per ATM DXI.
                 ** For these products, the mapping between the DXI (Frame Relay)
                 ** DXIADDR and the ATM VPI/VCI is fixed.  The LMI DXIADDR has no
                 ** corresponding VPI/VCI.  Otherwise, the eight most significant
                 ** bits of the DXIADDR map into the the VPI (the eight most
                 ** significant bits of the VPI/VCI), the fifteen least
                 ** significant bits of the DXIADDR map into the fifteen least
                 ** significant bits of the VCI, and the most significant bit of
                 ** the VCI is set to zero."
        ::= { wfAtmGroup 15 }

    wfAtmDxiEntry OBJECT-TYPE
        SYNTAX	WfAtmDxiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per linenumber/llindex ATM DXI objects -
                wfAtmDxiLineNumber and wfAtmDxiLLIndex corresponds to
                Wellfleet  linenumber/llindex number"
        INDEX	{ wfAtmDxiLineNumber,
    		  wfAtmDxiLLIndex,
    		  wfAtmDxiComponent }
        ::= { wfAtmDxiTable 1 }

    WfAtmDxiEntry ::= SEQUENCE {
    	    wfAtmDxiCct
    		INTEGER,
    	    wfAtmDxiComponent
    		INTEGER,
    	    wfAtmDxiMaxLmiPduLengthErrors
    		Counter,
    	    wfAtmDxiSeconds
    		Counter,
    	    wfAtmDxiDiscardedFrames
    		Counter,
    	    wfAtmDxiAbortedFrames
    		Counter,
    	    wfAtmDxiNonOctetAlignedFrames
    		Counter,
    	    wfAtmDxiTooLongFrames
    		Counter,
    	    wfAtmDxiTooShortFrames
    		Counter,
    	    wfAtmDxiFrameChecksumErrors
    		Counter,
    	    wfAtmDxiFrameHeaderErrors
    		Counter,
    	    wfAtmDxiValidFrameReceives
    		Counter,
    	    wfAtmDxiFrameTransmits
    		Counter,
    	    wfAtmDxiLineNumber
    		INTEGER,
    	    wfAtmDxiLLIndex
    		INTEGER
        }

    wfAtmDxiCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the ATM DXI cct which corresponds to the Wellfleet
                circuit number"
        ::= { wfAtmDxiEntry 1 }

    wfAtmDxiComponent OBJECT-TYPE
        SYNTAX	INTEGER {
    		    router(1),
    		    csudsu(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the component where the ATM DXI parameters are
                resident - either the router or CSU/DSU."
        ::= { wfAtmDxiEntry 2 }

    wfAtmDxiMaxLmiPduLengthErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum length of an LMI PDU, measured in octets"
        ::= { wfAtmDxiEntry 3 }

    wfAtmDxiSeconds OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of seconds elapsed since event counting began
                or since the counters were last cleared. The implementation
                may optionally allow this variable to be set. If set, the set
                value is ignored , and this variable and all other event
                counters for this object are reset to zero."
        ::= { wfAtmDxiEntry 4 }

    wfAtmDxiDiscardedFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of received frames discarded due to lack of
                buffer space."
        ::= { wfAtmDxiEntry 5 }

    wfAtmDxiAbortedFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of the received frames aborted (and discarded) before
                the closing flag"
        ::= { wfAtmDxiEntry 6 }

    wfAtmDxiNonOctetAlignedFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of the received frames discarded due to not being octet
                aligned."
        ::= { wfAtmDxiEntry 7 }

    wfAtmDxiTooLongFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of the received frames discarded due to being longer
                than the maximum allowed frame length"
        ::= { wfAtmDxiEntry 8 }

    wfAtmDxiTooShortFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of the received frames discarded due to being shorter
                than the minimum allowed frame length (less than 6 octets long)"
        ::= { wfAtmDxiEntry 9 }

    wfAtmDxiFrameChecksumErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of the received frames discarded due to detected checksum
                error (CRC16)"
        ::= { wfAtmDxiEntry 10 }

    wfAtmDxiFrameHeaderErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of the received frames discarded due to detected frame
                relay header errors"
        ::= { wfAtmDxiEntry 11 }

    wfAtmDxiValidFrameReceives OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of the valid frames received."
        ::= { wfAtmDxiEntry 12 }

    wfAtmDxiFrameTransmits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of CSVCI_PDUs received from upper layers and sent to the
                SAR layer for segmentation and transmission"
        ::= { wfAtmDxiEntry 13 }

    wfAtmDxiLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the line number
                of the Wellfleet router."
        ::= { wfAtmDxiEntry 14 }

    wfAtmDxiLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the port's
                llindex number. The Lower layer index uniquely identifies the
                lower layer in cases where the lower layer may be something other
                than the physical layer."
        ::= { wfAtmDxiEntry 15 }

    wfAtmDxiDxiAddrTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmDxiDxiAddrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The ATM DXI DXIADDR Table - Router and CSU/DSU Resident
                This table contains ATM DXI parameters, one entry per DXI
                DXIADDR for which information has been recorded per DXI
                DXIADDR Layer. Since the DXIADDR consisting of all zeros (with
                corresponding MIB index value of 1) is reserved
                for the DXI Local Management Interface (LMI) with
                the DSU, there is always at least one entry in the
                table. "
        ::= { wfAtmGroup 16 }

    wfAtmDxiDxiAddrEntry OBJECT-TYPE
        SYNTAX	WfAtmDxiDxiAddrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per DXIADDR ATM DXI objects"
        INDEX	{ wfAtmDxiDxiAddrLineNumber,
    		  wfAtmDxiDxiAddrLLIndex,
    		  wfAtmDxiDxiAddrDxiComponent,
    		  wfAtmDxiDxiAddrIndex }
        ::= { wfAtmDxiDxiAddrTable 1 }

    WfAtmDxiDxiAddrEntry ::= SEQUENCE {
    	    wfAtmDxiDxiAddrDxiCct
    		INTEGER,
    	    wfAtmDxiDxiAddrDxiComponent
    		INTEGER,
    	    wfAtmDxiDxiAddrIndex
    		INTEGER,
    	    wfAtmDxiDxiAddrAtmVbr
    		OBJECT IDENTIFIER,
    	    wfAtmDxiDxiAddrVpiVci
    		INTEGER,
    	    wfAtmDxiDxiAddrReceives
    		Counter,
    	    wfAtmDxiDxiAddrTransmits
    		Counter,
    	    wfAtmDxiDxiAddrLineNumber
    		INTEGER,
    	    wfAtmDxiDxiAddrLLIndex
    		INTEGER
        }

    wfAtmDxiDxiAddrDxiCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the Atm Dxi object for which this entry
                contains information.  This attribute corresponds to the Wellfleet
                circuit number"
        ::= { wfAtmDxiDxiAddrEntry 1 }

    wfAtmDxiDxiAddrDxiComponent OBJECT-TYPE
        SYNTAX	INTEGER {
    		    router(1),
    		    csudsu(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the component where the ATM DXI parameters are
                resident - either the router or CSU/DSU."
        ::= { wfAtmDxiDxiAddrEntry 2 }

    wfAtmDxiDxiAddrIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..8388608)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the DXIADDR object for which this entry
                contains information."
        ::= { wfAtmDxiDxiAddrEntry 3 }

    wfAtmDxiDxiAddrAtmVbr OBJECT-TYPE
        SYNTAX	OBJECT IDENTIFIER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The object identifier of the first object in the
                ATM VBR-AAL MIB which corresponds to this DXIADDR
                of this DXI port.  If there is only one ATM VBR-AAL
                object associated with this DXI object, then the
                LMI DXIADDR entry in this table will have a valid
                value for this variable, even though the
                LMI DXIADDR has no valid VPI/VCI value.'"
        ::= { wfAtmDxiDxiAddrEntry 4 }

    wfAtmDxiDxiAddrVpiVci OBJECT-TYPE
        SYNTAX	INTEGER(1..8388608)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The VPI/VCI of the ATM UNI of the ATM VBR-AAL
                object which corresponds to this DXIADDR of this
                DXI port.  For the LMI DXIADDR there is no valid
                VPI/VCI value."
        ::= { wfAtmDxiDxiAddrEntry 5 }

    wfAtmDxiDxiAddrReceives OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of the valid frames received from the next lower
                layer and passed on to the next upper layer for further
                processing."
        ::= { wfAtmDxiDxiAddrEntry 6 }

    wfAtmDxiDxiAddrTransmits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of frames received from upper layers and sent to the
                next lower layer for transmission"
        ::= { wfAtmDxiDxiAddrEntry 7 }

    wfAtmDxiDxiAddrLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the line number
                of the Wellfleet router."
        ::= { wfAtmDxiDxiAddrEntry 8 }

    wfAtmDxiDxiAddrLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value corresponds to the port's
                llindex number. The Lower layer index uniquely identifies the
                lower layer in cases where the lower layer may be something other
                than the physical layer."
        ::= { wfAtmDxiDxiAddrEntry 9 }

    wfAtmInterfaceConfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmInterfaceConfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains ATM local interface configuration parameters,
                one entry per ATM interface port, beyond those supported using the
                ifTable."
        ::= { wfAtmCommonGroup 1 }

    wfAtmInterfaceConfEntry OBJECT-TYPE
        SYNTAX	WfAtmInterfaceConfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry definition."
        INDEX	{ wfAtmInterfaceConfIndex }
        ::= { wfAtmInterfaceConfTable 1 }

    WfAtmInterfaceConfEntry ::= SEQUENCE {
    	    wfAtmInterfaceConfDelete
    		INTEGER,
    	    wfAtmInterfaceConfIndex
    		INTEGER,
    	    wfAtmInterfaceAdminStatus
    		INTEGER,
    	    wfAtmInterfaceOperStatus
    		INTEGER,
    	    wfAtmInterfaceMaxVpcs
    		INTEGER,
    	    wfAtmInterfaceMaxVccs
    		INTEGER,
    	    wfAtmInterfaceConfVpcs
    		INTEGER,
    	    wfAtmInterfaceConfVccs
    		INTEGER,
    	    wfAtmInterfaceMaxActiveVpiBits
    		INTEGER,
    	    wfAtmInterfaceMaxActiveVciBits
    		INTEGER,
    	    wfAtmInterfaceIlmiVpi
    		INTEGER,
    	    wfAtmInterfaceIlmiVci
    		INTEGER,
    	    wfAtmInterfaceAddressType
    		INTEGER,
    	    wfAtmInterfaceCct
    		INTEGER,
    	    wfAtmInterfaceDrops
    		Counter,
    	    wfAtmInterfaceSigEnable
    		INTEGER,
    	    wfAtmInterfaceDebug
    		INTEGER,
    	    wfAtmInterfaceUseHwMacAddr
    		INTEGER,
    	    wfAtmInterfaceHwMacOverride
    		OCTET STRING
        }

    wfAtmInterfaceConfDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/delete MIB instance parameter."
        DEFVAL	{ create }
        ::= { wfAtmInterfaceConfEntry 1 }

    wfAtmInterfaceConfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Uniquely identifies the interface (port) that contains the
                appropriate management information."
        ::= { wfAtmInterfaceConfEntry 2 }

    wfAtmInterfaceAdminStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the desired administrative state of the Interface. The up and
                down states indicate that the traffic flow is enabled and disabled
                respectively for the VCL."
        DEFVAL	{ up }
        ::= { wfAtmInterfaceConfEntry 3 }

    wfAtmInterfaceOperStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the current operational status of the Interface. The up and
                down states indicate that the Interface is currently operational, or not
                operational, respectively. The Init state indicates the status
                of the Interface is in the process of being initialized and has not yet
                completed. The 'Not Present' state indicates a problem with that
                Interface and is not able to bring the Interface up."
        DEFVAL	{ notpresent }
        ::= { wfAtmInterfaceConfEntry 4 }

    wfAtmInterfaceMaxVpcs OBJECT-TYPE
        SYNTAX	INTEGER(1..4096)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of VPCs supported at the ATM interface."
        DEFVAL	{ 256 }
        ::= { wfAtmInterfaceConfEntry 5 }

    wfAtmInterfaceMaxVccs OBJECT-TYPE
        SYNTAX	INTEGER(1..65536)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of VCCs supported at the ATM interface."
        DEFVAL	{ 65536 }
        ::= { wfAtmInterfaceConfEntry 6 }

    wfAtmInterfaceConfVpcs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of VPCs configured for use at the ATM interface."
        ::= { wfAtmInterfaceConfEntry 7 }

    wfAtmInterfaceConfVccs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of VCCs configured for use at the ATM interface."
        ::= { wfAtmInterfaceConfEntry 8 }

    wfAtmInterfaceMaxActiveVpiBits OBJECT-TYPE
        SYNTAX	INTEGER(1..12)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of active VPI bits configured for use at the
                ATM interface."
        DEFVAL	{ 8 }
        ::= { wfAtmInterfaceConfEntry 9 }

    wfAtmInterfaceMaxActiveVciBits OBJECT-TYPE
        SYNTAX	INTEGER(1..16)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of active VCI bits configured for use at the
                ATM interface."
        DEFVAL	{ 16 }
        ::= { wfAtmInterfaceConfEntry 10 }

    wfAtmInterfaceIlmiVpi OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(1)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The VPI value of the VCC supporting the ILMI at this ATM interface.
                If the values of wfAtmInterfaceIlmiVpi and wfAtmInterfaceIlmiVci
                are both equal to zero then the ILMI is not supported at this ATM
                interface. Subract 1 from the default! (ILMI VPI = 0)."
        DEFVAL	{ default }
        ::= { wfAtmInterfaceConfEntry 11 }

    wfAtmInterfaceIlmiVci OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(16)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The VCI value of the VCC supporting the ILMI at this ATM interface.
                If the values of wfAtmInterfaceIlmiVpi and wfAtmInterfaceIlmiVci
                are both equal to zero then the ILMI is not supported at this ATM
                interface."
        DEFVAL	{ default }
        ::= { wfAtmInterfaceConfEntry 12 }

    wfAtmInterfaceAddressType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    private(1),
    		    nsape164(2),
    		    nativee164(3),
    		    other(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The type of ATM address configured for use at the ATM interface."
        ::= { wfAtmInterfaceConfEntry 13 }

    wfAtmInterfaceCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Wellfleet circuit number of this entry"
        ::= { wfAtmInterfaceConfEntry 14 }

    wfAtmInterfaceDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The cumulative count of packet drops on this ATM Interface above the
                SSCS layer."
        ::= { wfAtmInterfaceConfEntry 15 }

    wfAtmInterfaceSigEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Spawning of ATM Signalling by the Control gate is determined by this attr"
        DEFVAL	{ disabled }
        ::= { wfAtmInterfaceConfEntry 16 }

    wfAtmInterfaceDebug OBJECT-TYPE
        SYNTAX	INTEGER {
    		    disabled(1),
    		    msgs(2),
    		    fsm(4),
    		    all(2147483647)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This flag will enable certain debug messages depending on the value set.
                The values are as follows:

                 1 - disable debugging (default)
                 2 - enable Signalling Layer Manager inbound and outbound messages
                 4 - enable Signalling Layer Manager state transitions (helpful if
                  also use with #2 above)
                 4294967295 - All of the above"
        DEFVAL	{ disabled }
        ::= { wfAtmInterfaceConfEntry 17 }

    wfAtmInterfaceUseHwMacAddr OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If this is enabled, then the auto-generated ESI portion of
   		 the ATM address user suffix will be supplied by the hardware
   		 driver. If disabled, it will come from
		 wfAtmInterfaceHwMacOverride."
        DEFVAL	{ enabled }
        ::= { wfAtmInterfaceConfEntry 18 }

    wfAtmInterfaceHwMacOverride OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If wfAtmInterfaceUseHwMacAddr is disabled, this 48-bit Mac
		 address will replace the hardware driver's address during
   		 auto-generation of the ESI portion of the ATM address user
		 suffix."
        ::= { wfAtmInterfaceConfEntry 19 }

    wfAtmServiceRecordTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmServiceRecordEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains ATM service record configuration parameters,
                one entry per ATM Wellfleet cct."
        ::= { wfAtmCommonGroup 2 }

    wfAtmServiceRecordEntry OBJECT-TYPE
        SYNTAX	WfAtmServiceRecordEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry definition."
        INDEX	{ wfAtmServiceRecordIndex,
    		  wfAtmServiceRecordCct }
        ::= { wfAtmServiceRecordTable 1 }

    WfAtmServiceRecordEntry ::= SEQUENCE {
    	    wfAtmServiceRecordDelete
    		INTEGER,
    	    wfAtmServiceRecordEnable
    		INTEGER,
    	    wfAtmServiceRecordIndex
    		INTEGER,
    	    wfAtmServiceRecordCct
    		INTEGER,
    	    wfAtmServiceRecordAalEncapsType
    		INTEGER,
    	    wfAtmServiceRecordState
    		INTEGER,
    	    wfAtmServiceRecordVcType
    		INTEGER,
    	    wfAtmServiceRecordNetworkPrefix
    		OCTET STRING,
    	    wfAtmServiceRecordUserSuffix
    		OCTET STRING,
    	    wfAtmServiceRecordAtmAddress
    		OCTET STRING,
    	    wfAtmServiceRecordFlag
    		INTEGER
        }

    wfAtmServiceRecordDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/delete MIB instance parameter."
        DEFVAL	{ create }
        ::= { wfAtmServiceRecordEntry 1 }

    wfAtmServiceRecordEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable MIB instance parameter."
        DEFVAL	{ enabled }
        ::= { wfAtmServiceRecordEntry 2 }

    wfAtmServiceRecordIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Uniquely identifies the interface (port) that contains the
                appropriate port information."
        ::= { wfAtmServiceRecordEntry 3 }

    wfAtmServiceRecordCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Wellfleet circuit number of this entry"
        ::= { wfAtmServiceRecordEntry 4 }

    wfAtmServiceRecordAalEncapsType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    routedproto(1),
    		    bridged8023(2),
    		    bridged8025(3),
    		    bridged8026(4),
    		    lane8023(5),
    		    lane8025(6),
    		    llcencaps(7),
    		    frsscs(8),
    		    other(9),
    		    unknown(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The type of data encapsulation used over both AAL3/4 and
                AAL5 SSCS layer. Currently, the only values supported are :
                     ATM_SERVICEREC_ENCAPS_LLCENCAPS - RFC1483
                     ATM_SERVICEREC_ENCAPS_FRSSCS - RFC1294
                     ATM_SERVICEREC_ENCAPS_ROUTEDPROTO - NONE"
        DEFVAL	{ llcencaps }
        ::= { wfAtmServiceRecordEntry 5 }

    wfAtmServiceRecordState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    reject(4),
    		    notpresent(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "State of Service Record"
        DEFVAL	{ notpresent }
        ::= { wfAtmServiceRecordEntry 6 }

    wfAtmServiceRecordVcType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    pvc(1),
    		    svc(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The type of VC for each encapsulation. Applicable for LLC
                and null type encapsulation enforced from SM - aks"
        DEFVAL	{ pvc }
        ::= { wfAtmServiceRecordEntry 7 }

    wfAtmServiceRecordNetworkPrefix OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "ATM Address Network portion"
        ::= { wfAtmServiceRecordEntry 8 }

    wfAtmServiceRecordUserSuffix OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "ATM Address User portion"
        ::= { wfAtmServiceRecordEntry 9 }

    wfAtmServiceRecordAtmAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ATM Address Complete - Inserted by Router after verification of
                network and user portions"
        ::= { wfAtmServiceRecordEntry 10 }

    wfAtmServiceRecordFlag OBJECT-TYPE
        SYNTAX	INTEGER {
    		    autoaddr(1)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This will be used for internal purposes to have Site Manager flag
                specific configurations."
        DEFVAL	{ autoaddr }
        ::= { wfAtmServiceRecordEntry 11 }

    wfAtmVclConfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmVclConfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmCommonGroup 5 }

    wfAtmVclConfEntry OBJECT-TYPE
        SYNTAX	WfAtmVclConfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry definition."
        INDEX	{ wfAtmVclConfIndex,
    		  wfAtmVclConfVpi,
    		  wfAtmVclConfVci }
        ::= { wfAtmVclConfTable 1 }

    WfAtmVclConfEntry ::= SEQUENCE {
    	    wfAtmVclConfDelete
    		INTEGER,
    	    wfAtmVclConfIndex
    		INTEGER,
    	    wfAtmVclConfVpi
    		INTEGER,
    	    wfAtmVclConfVci
    		INTEGER,
    	    wfAtmVclAdminStatus
    		INTEGER,
    	    wfAtmVclOperStatus
    		INTEGER,
    	    wfAtmVclLastChange
    		TimeTicks,
    	    wfAtmVclXmtPeakCellRate
    		INTEGER,
    	    wfAtmVclXmtSustainableCellRate
    		INTEGER,
    	    wfAtmVclXmtBurstSize
    		INTEGER,
    	    wfAtmVclXmtQosClass
    		INTEGER,
    	    wfAtmVclRcvPeakCellRate
    		INTEGER,
    	    wfAtmVclRcvSustainableCellRate
    		INTEGER,
    	    wfAtmVclRcvBurstSize
    		INTEGER,
    	    wfAtmVclRcvQosClass
    		INTEGER,
    	    wfAtmVclAalType
    		INTEGER,
    	    wfAtmVclAalCpcsTransmitSduSize
    		INTEGER,
    	    wfAtmVclAalCpcsReceiveSduSize
    		INTEGER,
    	    wfAtmVclAalEncapsType
    		INTEGER,
    	    wfAtmVclCongestionIndication
    		INTEGER,
    	    wfAtmVclCellLossPriority
    		INTEGER,
    	    wfAtmVclCct
    		INTEGER,
    	    wfAtmVclDirectAccessCct
    		INTEGER,
    	    wfAtmVclMulticast
    		INTEGER,
    	    wfAtmVclMode
    		INTEGER,
    	    wfAtmVclDrops
    		Counter,
    	    wfAtmVclVcIndex
    		INTEGER,
    	    wfAtmVclVcType
    		INTEGER,
    	    wfAtmVclXmtTagging
    		INTEGER,
    	    wfAtmVclRcvTagging
    		INTEGER
        }

    wfAtmVclConfDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/delete MIB instance parameter."
        DEFVAL	{ create }
        ::= { wfAtmVclConfEntry 1 }

    wfAtmVclConfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Uniquely identifies the interface (port) that contains the
                appropriate management information."
        ::= { wfAtmVclConfEntry 2 }

    wfAtmVclConfVpi OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The VPI value of the VCL. The maximum VPI value cannot exceed the
                value allowable by the wfAtmInterfaceMaxActiveVpiBits."
        ::= { wfAtmVclConfEntry 3 }

    wfAtmVclConfVci OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The VCI value of the VCL. The maximum VCI value cannot exceed the
                value allowable by the wfAtmInterfaceMaxActiveVciBits."
        ::= { wfAtmVclConfEntry 4 }

    wfAtmVclAdminStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the desired administrative state of the VCL. The up and
                down states indicate that the traffic flow is enabled and disabled
                respectively for the VCL."
        DEFVAL	{ up }
        ::= { wfAtmVclConfEntry 5 }

    wfAtmVclOperStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the current operational status of the VCL. The up and
                down states indicate that the VCL is currently operational, or not
                operational, respectively. The Init state indicates the status
                of the VCL is in the process of being initialized and has not yet
                completed. The 'Not Present' state indicates a problem with that
                VCL and is not able to bring the VCC up."
        DEFVAL	{ notpresent }
        ::= { wfAtmVclConfEntry 6 }

    wfAtmVclLastChange OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of MIBII's sysUpTime at the time this VCL entered its
                current operational state. If the current state was entered prior
                to the last re-initialization of the agent then this object
                contains a zero value."
        ::= { wfAtmVclConfEntry 7 }

    wfAtmVclXmtPeakCellRate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(4716)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit (Forward) Peak Cell Rate in cells/second. This specifies
                the upper bound on the traffic that can be submitted on an ATM
                connection."
        DEFVAL	{ default }
        ::= { wfAtmVclConfEntry 8 }

    wfAtmVclXmtSustainableCellRate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(4716)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit (Forward) Sustainable Cell Rate in cells/second. This specifies
                the upper bound on the conforming average rate of an ATM connection,
                where 'average rate' is the number of cells transmitted divided by
                the 'duration of the connection'."
        DEFVAL	{ default }
        ::= { wfAtmVclConfEntry 9 }

    wfAtmVclXmtBurstSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(40)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit (Forward) Burst Size in cells."
        DEFVAL	{ default }
        ::= { wfAtmVclConfEntry 10 }

    wfAtmVclXmtQosClass OBJECT-TYPE
        SYNTAX	INTEGER {
    		    class0(1),
    		    class1(2),
    		    class2(3),
    		    class3(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit (Forward) Quality of Service as specified in Appendix A,
                Section 4 of the ATM Forum UNI Specification, Version 3.0"
        DEFVAL	{ class3 }
        ::= { wfAtmVclConfEntry 11 }

    wfAtmVclRcvPeakCellRate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(4716)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive (Backward) Peak Cell Rate in cells/second. This specifies
                the upper bound on the traffic that can be submitted on an ATM
                connection."
        DEFVAL	{ default }
        ::= { wfAtmVclConfEntry 12 }

    wfAtmVclRcvSustainableCellRate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(4716)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive (Backward) Sustainable Cell Rate in cells/second. This specifies
                the upper bound on the conforming average rate of an ATM connection,
                where 'average rate' is the number of cells transmitted divided by
                the 'duration of the connection'."
        DEFVAL	{ default }
        ::= { wfAtmVclConfEntry 13 }

    wfAtmVclRcvBurstSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(40)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive (Backward) Burst Size in cells."
        DEFVAL	{ default }
        ::= { wfAtmVclConfEntry 14 }

    wfAtmVclRcvQosClass OBJECT-TYPE
        SYNTAX	INTEGER {
    		    class0(1),
    		    class1(2),
    		    class2(3),
    		    class3(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive (Backward) Quality of Service as specified in Appendix A,
                Section 4 of the ATM Forum UNI Specification, Version 3.0"
        DEFVAL	{ class3 }
        ::= { wfAtmVclConfEntry 15 }

    wfAtmVclAalType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    type1(1),
    		    type34(2),
    		    type5(3),
    		    other(4),
    		    unknown(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The type of AAL used on the VCL."
        DEFVAL	{ type5 }
        ::= { wfAtmVclConfEntry 16 }

    wfAtmVclAalCpcsTransmitSduSize OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum AAL CPCS SDU size in octets that is supported on the
                transmit direction of this VCC."
        DEFVAL	{ 4608 }
        ::= { wfAtmVclConfEntry 17 }

    wfAtmVclAalCpcsReceiveSduSize OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum AAL CPCS SDU size in octets that is supported on the
                receive direction of this VCC."
        DEFVAL	{ 4608 }
        ::= { wfAtmVclConfEntry 18 }

    wfAtmVclAalEncapsType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    routedproto(1),
    		    bridged8023(2),
    		    bridged8025(3),
    		    bridged8026(4),
    		    lane8023(5),
    		    lane8025(6),
    		    llcencaps(7),
    		    frsscs(8),
    		    other(9),
    		    unknown(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The type of data encapsulation used over both AAL3/4 and
                AAL5 SSCS layer. Currently, the only values supported are :
                     ATM_VCLENCAPS_LLCENCAPS - RFC1483
                     ATM_VCLENCAPS_ROUTEDPROTO - NONE"
        DEFVAL	{ llcencaps }
        ::= { wfAtmVclConfEntry 19 }

    wfAtmVclCongestionIndication OBJECT-TYPE
        SYNTAX	INTEGER {
    		    off(1),
    		    on(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The desired state of the Congestion Indication (CI) bit in the
                payload field of each ATM cell for this VCL."
        DEFVAL	{ off }
        ::= { wfAtmVclConfEntry 20 }

    wfAtmVclCellLossPriority OBJECT-TYPE
        SYNTAX	INTEGER {
    		    off(1),
    		    on(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The desired state of the Cell Loss Priority (CLP) bit in the ATM
                header of each cell for this VCL."
        DEFVAL	{ off }
        ::= { wfAtmVclConfEntry 21 }

    wfAtmVclCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Identifies the object which corresponds to the Wellfleet circuit
                number"
        ::= { wfAtmVclConfEntry 22 }

    wfAtmVclDirectAccessCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Circuit number to use for this VC for hybrid or direct access
                routing"
        ::= { wfAtmVclConfEntry 23 }

    wfAtmVclMulticast OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unicast(1),
    		    multicast(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this VPI/VCI is used for multicast or
                single destination."
        DEFVAL	{ unicast }
        ::= { wfAtmVclConfEntry 24 }

    wfAtmVclMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    groupaccess(1),
    		    hybridaccess(2),
    		    direct(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The mode of the given VC.
                GROUP - treats the VC as one of many vc's on a circuit.
                HYBRID - treats the VC as one of many vc's on a circuit for
                         protocol traffic, but as a separate circuit for bridging.
                DIRECT - treats the VC as a separate circuit for all applications."
        DEFVAL	{ groupaccess }
        ::= { wfAtmVclConfEntry 25 }

    wfAtmVclDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total count of packets above the SSCS layer dropped on this VC"
        ::= { wfAtmVclConfEntry 26 }

    wfAtmVclVcIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Driver-defined VCI for quick table lookup"
        ::= { wfAtmVclConfEntry 27 }

    wfAtmVclVcType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    permanent(1),
    		    switched(2),
    		    control(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Type of VC can be either permanent or switched. Only permanent VCs
                can be modfied"
        DEFVAL	{ permanent }
        ::= { wfAtmVclConfEntry 28 }

    wfAtmVclXmtTagging OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tagging forward VC messages if peak/sustainable rates exceeded"
        DEFVAL	{ off }
        ::= { wfAtmVclConfEntry 29 }

    wfAtmVclRcvTagging OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tagging backward VC messages if peak/sustainable rates exceeded"
        DEFVAL	{ off }
        ::= { wfAtmVclConfEntry 30 }

    wfAtmVclStatsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmVclStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmCommonGroup 6 }

    wfAtmVclStatsEntry OBJECT-TYPE
        SYNTAX	WfAtmVclStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry definition."
        INDEX	{ wfAtmVclStatsIndex,
    		  wfAtmVclStatsVpi,
    		  wfAtmVclStatsVci }
        ::= { wfAtmVclStatsTable 1 }

    WfAtmVclStatsEntry ::= SEQUENCE {
    	    wfAtmVclStatsIndex
    		INTEGER,
    	    wfAtmVclStatsVpi
    		INTEGER,
    	    wfAtmVclStatsVci
    		INTEGER,
    	    wfAtmVclStatsVcIndex
    		INTEGER,
    	    wfAtmVclXmtCells
    		OCTET STRING,
    	    wfAtmVclRcvCells
    		OCTET STRING,
    	    wfAtmVclRcvSequenceNumErrs
    		Counter,
    	    wfAtmVclRcvInvalidLenErrs
    		Counter,
    	    wfAtmVclRcvMissingEomErrs
    		Counter,
    	    wfAtmVclRcvBufferOflowErrs
    		Counter,
    	    wfAtmVclRcvMaxLenExceedErrs
    		Counter,
    	    wfAtmVclRcvTrailerErrs
    		Counter,
    	    wfAtmVclRcvAbortErrs
    		Counter,
    	    wfAtmVclRcvPacketLengthErrs
    		Counter,
    	    wfAtmVclRcvReassemAbortErrs
    		Counter,
    	    wfAtmVclRcvCrcErrs
    		Counter,
    	    wfAtmVclXmtOamCells
    		Counter,
    	    wfAtmVclRcvOamCells
    		Counter,
    	    wfAtmVclRcvOamCrcErrs
    		Counter
        }

    wfAtmVclStatsIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Uniquely identifies the interface that contains the
                appropriate management information."
        ::= { wfAtmVclStatsEntry 1 }

    wfAtmVclStatsVpi OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Virtual Path Identifier (VPI) value of the VCL."
        ::= { wfAtmVclStatsEntry 2 }

    wfAtmVclStatsVci OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Virtual Channel Identifier (VCI) value of the VCL."
        ::= { wfAtmVclStatsEntry 3 }

    wfAtmVclStatsVcIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Uniquely identifies the virtual channel connection."
        ::= { wfAtmVclStatsEntry 4 }

    wfAtmVclXmtCells OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Accumulated total of user cells transmitted for this VCL. This
                attribute is a 64-bit counter. Does not include OAM cells."
        ::= { wfAtmVclStatsEntry 5 }

    wfAtmVclRcvCells OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Accumulated total of user cells received for this VCL. This
                attribute is a 64-bit counter. Does not include OAM cells."
        ::= { wfAtmVclStatsEntry 6 }

    wfAtmVclRcvSequenceNumErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times data was being reassembled and a SAR Protocol
                Data Unit (PDU) was received out of order for this VCL. This
                count is valid only when the adaptation layer protocol is
                AAL 3/4."
        ::= { wfAtmVclStatsEntry 7 }

    wfAtmVclRcvInvalidLenErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmVclStatsEntry 8 }

    wfAtmVclRcvMissingEomErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmVclStatsEntry 9 }

    wfAtmVclRcvBufferOflowErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmVclStatsEntry 10 }

    wfAtmVclRcvMaxLenExceedErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmVclStatsEntry 11 }

    wfAtmVclRcvTrailerErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmVclStatsEntry 12 }

    wfAtmVclRcvAbortErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmVclStatsEntry 13 }

    wfAtmVclRcvPacketLengthErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmVclStatsEntry 14 }

    wfAtmVclRcvReassemAbortErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmVclStatsEntry 15 }

    wfAtmVclRcvCrcErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmVclStatsEntry 16 }

    wfAtmVclXmtOamCells OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of OAM cells transmitted successfully."
        ::= { wfAtmVclStatsEntry 17 }

    wfAtmVclRcvOamCells OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of OAM cells received successfully."
        ::= { wfAtmVclStatsEntry 18 }

    wfAtmVclRcvOamCrcErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of OAM cells received with CRC10 error."
        ::= { wfAtmVclStatsEntry 19 }

    wfAtmSigTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmSigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table includes the ATM Signalling MIB record for Q.93B"
        ::= { wfAtmCommonGroup 7 }

    wfAtmSigEntry OBJECT-TYPE
        SYNTAX	WfAtmSigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This entry contains attributes needed for ATM Q.93B"
        INDEX	{ wfAtmSigLineNumber }
        ::= { wfAtmSigTable 1 }

    WfAtmSigEntry ::= SEQUENCE {
    	    wfAtmSigDelete
    		INTEGER,
    	    wfAtmSigDisable
    		INTEGER,
    	    wfAtmSigLineNumber
    		INTEGER,
    	    wfAtmSigAtmCct
    		INTEGER,
    	    wfAtmSigState
    		INTEGER,
    	    wfAtmSigMaxServiceUsers
    		INTEGER,
    	    wfAtmSigMaxPtPtConnections
    		INTEGER,
    	    wfAtmSigMaxPtMultConnections
    		INTEGER,
    	    wfAtmSigMaxPartiesInMultConnect
    		INTEGER,
    	    wfAtmSigMaxRoutingRegistrations
    		INTEGER,
    	    wfAtmSigMinBufferThreshold
    		INTEGER,
    	    wfAtmSigTimerResolution
    		INTEGER,
    	    wfAtmSigVpi
    		INTEGER,
    	    wfAtmSigVci
    		INTEGER,
    	    wfAtmSigStandard
    		INTEGER,
    	    wfAtmSigInterfaceType
    		INTEGER,
    	    wfAtmSigMinVciPtPt
    		INTEGER,
    	    wfAtmSigMaxVciPtPt
    		INTEGER,
    	    wfAtmSigMinVpiPtPt
    		INTEGER,
    	    wfAtmSigMaxVpiPtPt
    		INTEGER,
    	    wfAtmSigMinVciPtMltPt
    		INTEGER,
    	    wfAtmSigMaxVciPtMltPt
    		INTEGER,
    	    wfAtmSigMinVpiPtMltPt
    		INTEGER,
    	    wfAtmSigMaxVpiPtMltPt
    		INTEGER,
    	    wfAtmSigT303
    		INTEGER,
    	    wfAtmSigT308
    		INTEGER,
    	    wfAtmSigT309
    		INTEGER,
    	    wfAtmSigT310
    		INTEGER,
    	    wfAtmSigT313
    		INTEGER,
    	    wfAtmSigT316
    		INTEGER,
    	    wfAtmSigT316c
    		INTEGER,
    	    wfAtmSigT322
    		INTEGER,
    	    wfAtmSigTDisc
    		INTEGER,
    	    wfAtmSigT398
    		INTEGER,
    	    wfAtmSigT399
    		INTEGER,
    	    wfAtmSigNumRst
    		INTEGER,
    	    wfAtmSigNumStat
    		INTEGER,
    	    wfAtmSigRestart
    		INTEGER,
    	    wfAtmSigDebug
    		INTEGER,
    	    wfAtmSigCallsSec
    		INTEGER
        }

    wfAtmSigDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created."
        DEFVAL	{ created }
        ::= { wfAtmSigEntry 1 }

    wfAtmSigDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfAtmSigEntry 2 }

    wfAtmSigLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value is the line number of the router."
        ::= { wfAtmSigEntry 3 }

    wfAtmSigAtmCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit number of ATM driver associated with this Q.93B instance"
        ::= { wfAtmSigEntry 4 }

    wfAtmSigState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the state of the Q.93B entity"
        DEFVAL	{ notpresent }
        ::= { wfAtmSigEntry 5 }

    wfAtmSigMaxServiceUsers OBJECT-TYPE
        SYNTAX	INTEGER(1..32767)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Max number of SAPs (service access points) allowed for users to connect"
        DEFVAL	{ 20 }
        ::= { wfAtmSigEntry 6 }

    wfAtmSigMaxPtPtConnections OBJECT-TYPE
        SYNTAX	INTEGER(1..32767)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Max number of simultaneous point to point connections allowed per port"
        DEFVAL	{ 1000 }
        ::= { wfAtmSigEntry 7 }

    wfAtmSigMaxPtMultConnections OBJECT-TYPE
        SYNTAX	INTEGER(1..32767)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Max number of simultaneous point to multipt connections allowed per port"
        DEFVAL	{ 40 }
        ::= { wfAtmSigEntry 8 }

    wfAtmSigMaxPartiesInMultConnect OBJECT-TYPE
        SYNTAX	INTEGER(1..32767)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Max number of simultaneous parties in a point to multipoint connection"
        DEFVAL	{ 1 }
        ::= { wfAtmSigEntry 9 }

    wfAtmSigMaxRoutingRegistrations OBJECT-TYPE
        SYNTAX	INTEGER(1..32767)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Max number of registrations / routing entries allowed per port"
        ::= { wfAtmSigEntry 10 }

    wfAtmSigMinBufferThreshold OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Min percentage of buffer pool that must be free to enable new calls (sub)"
        DEFVAL	{ 2 }
        ::= { wfAtmSigEntry 11 }

    wfAtmSigTimerResolution OBJECT-TYPE
        SYNTAX	INTEGER(0..255000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of system ticks elapsed between successive timer events in tenths"
        DEFVAL	{ 1000 }
        ::= { wfAtmSigEntry 12 }

    wfAtmSigVpi OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Virtual Path Identifier for the Signalling VC"
        ::= { wfAtmSigEntry 13 }

    wfAtmSigVci OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Virtual Channel Identifier for the Signalling VC"
        DEFVAL	{ 5 }
        ::= { wfAtmSigEntry 14 }

    wfAtmSigStandard OBJECT-TYPE
        SYNTAX	INTEGER {
    		    v30(1),
    		    v31(2),
    		    sym(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Sig Protocol Standard, Uni3.0, Uni3.1, or Trillium Symmetrical Uni (sub)"
        DEFVAL	{ v30 }
        ::= { wfAtmSigEntry 15 }

    wfAtmSigInterfaceType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    user(1),
    		    network(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Network Interface type, either USER or NETWORK side (sub)"
        DEFVAL	{ user }
        ::= { wfAtmSigEntry 16 }

    wfAtmSigMinVciPtPt OBJECT-TYPE
        SYNTAX	INTEGER(32..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Minimum VCI number that can be associated with a Point to Point VC"
        DEFVAL	{ 32 }
        ::= { wfAtmSigEntry 17 }

    wfAtmSigMaxVciPtPt OBJECT-TYPE
        SYNTAX	INTEGER(32..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum VCI number that can be associated with a Point to Point VC"
        DEFVAL	{ 65535 }
        ::= { wfAtmSigEntry 18 }

    wfAtmSigMinVpiPtPt OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Minimum VPI number that can be associated with a Point to Point VC"
        ::= { wfAtmSigEntry 19 }

    wfAtmSigMaxVpiPtPt OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum VPI number that can be associated with a Point to Point VC"
        ::= { wfAtmSigEntry 20 }

    wfAtmSigMinVciPtMltPt OBJECT-TYPE
        SYNTAX	INTEGER(32..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Minimum VCI number that can be associated with a Point to Multipoint VC"
        DEFVAL	{ 32 }
        ::= { wfAtmSigEntry 21 }

    wfAtmSigMaxVciPtMltPt OBJECT-TYPE
        SYNTAX	INTEGER(32..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum VCI number that can be associated with a Point to Multipoint VC"
        DEFVAL	{ 65535 }
        ::= { wfAtmSigEntry 22 }

    wfAtmSigMinVpiPtMltPt OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Minimum VPI number that can be associated with a Point to Multipoint VC"
        ::= { wfAtmSigEntry 23 }

    wfAtmSigMaxVpiPtMltPt OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum VPI number that can be associated with a Point to Multipoint VC"
        ::= { wfAtmSigEntry 24 }

    wfAtmSigT303 OBJECT-TYPE
        SYNTAX	INTEGER(1..24)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Q.93B Setup Sent Timer"
        DEFVAL	{ 4 }
        ::= { wfAtmSigEntry 25 }

    wfAtmSigT308 OBJECT-TYPE
        SYNTAX	INTEGER(1..180)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Q.93B Release Sent Timer"
        DEFVAL	{ 30 }
        ::= { wfAtmSigEntry 26 }

    wfAtmSigT309 OBJECT-TYPE
        SYNTAX	INTEGER(1..540)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Q.93B - SAAL Data Link Connect Timer"
        DEFVAL	{ 10 }
        ::= { wfAtmSigEntry 27 }

    wfAtmSigT310 OBJECT-TYPE
        SYNTAX	INTEGER(1..60)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Q.93B Call Proceeding Received Timer"
        DEFVAL	{ 10 }
        ::= { wfAtmSigEntry 28 }

    wfAtmSigT313 OBJECT-TYPE
        SYNTAX	INTEGER(1..24)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Q.93B Connect Sent Timer"
        DEFVAL	{ 4 }
        ::= { wfAtmSigEntry 29 }

    wfAtmSigT316 OBJECT-TYPE
        SYNTAX	INTEGER(1..720)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Q.93B Restart Request Sent on Interface Timer"
        DEFVAL	{ 120 }
        ::= { wfAtmSigEntry 30 }

    wfAtmSigT316c OBJECT-TYPE
        SYNTAX	INTEGER(1..720)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Q.93B Restart Request Sent on Channel Timer"
        DEFVAL	{ 120 }
        ::= { wfAtmSigEntry 31 }

    wfAtmSigT322 OBJECT-TYPE
        SYNTAX	INTEGER(1..24)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Q.93B Status Enquiry Sent Timer"
        DEFVAL	{ 4 }
        ::= { wfAtmSigEntry 32 }

    wfAtmSigTDisc OBJECT-TYPE
        SYNTAX	INTEGER(1..180)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Q.93B SAAL Data Link Disconnect Timer"
        DEFVAL	{ 4 }
        ::= { wfAtmSigEntry 33 }

    wfAtmSigT398 OBJECT-TYPE
        SYNTAX	INTEGER(1..24)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Q.93B Drop Party Sent Timer - Multipoint Connections only"
        DEFVAL	{ 4 }
        ::= { wfAtmSigEntry 34 }

    wfAtmSigT399 OBJECT-TYPE
        SYNTAX	INTEGER(1..84)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Q.93B Add Party Sent Timer - Multipoint Connections only"
        DEFVAL	{ 14 }
        ::= { wfAtmSigEntry 35 }

    wfAtmSigNumRst OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of restarts to be retransmitted before link considered down"
        DEFVAL	{ 3 }
        ::= { wfAtmSigEntry 36 }

    wfAtmSigNumStat OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of status enquiries to be retransmitted before link considered down"
        DEFVAL	{ 3 }
        ::= { wfAtmSigEntry 37 }

    wfAtmSigRestart OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Q.93B send restart when the link comes up. (sub)"
        DEFVAL	{ on }
        ::= { wfAtmSigEntry 38 }

    wfAtmSigDebug OBJECT-TYPE
        SYNTAX	INTEGER {
    		    disabled(1),
    		    status(2),
    		    detail(4),
    		    all(2147483647)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This flag will enable certain debug messages depending on the value set.
                The values are as follows:

                 1 - disable debugging
                 2 - Signalling Status events
                 4294967295 - All of the above"
        DEFVAL	{ status }
        ::= { wfAtmSigEntry 39 }

    wfAtmSigCallsSec OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "number of Signalling messages sent out of interface per second"
        DEFVAL	{ 2 }
        ::= { wfAtmSigEntry 40 }

    wfAtmSscopTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmSscopEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table includes the ATM SSCOP MIB record for Q.SAAL"
        ::= { wfAtmCommonGroup 8 }

    wfAtmSscopEntry OBJECT-TYPE
        SYNTAX	WfAtmSscopEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This entry contains attributes needed for ATM Q.SAAL"
        INDEX	{ wfAtmSscopLineNumber }
        ::= { wfAtmSscopTable 1 }

    WfAtmSscopEntry ::= SEQUENCE {
    	    wfAtmSscopDelete
    		INTEGER,
    	    wfAtmSscopDisable
    		INTEGER,
    	    wfAtmSscopLineNumber
    		INTEGER,
    	    wfAtmSscopAtmCct
    		INTEGER,
    	    wfAtmSscopState
    		INTEGER,
    	    wfAtmSscopLowThreshold
    		INTEGER,
    	    wfAtmSscopUpThreshold
    		INTEGER,
    	    wfAtmSscopArbitration
    		INTEGER,
    	    wfAtmSscopPollTimer
    		INTEGER,
    	    wfAtmSscopKeepAliveTimer
    		INTEGER,
    	    wfAtmSscopNoResponseTimer
    		INTEGER,
    	    wfAtmSscopConnectControlTimer
    		INTEGER,
    	    wfAtmSscopMaxCc
    		INTEGER,
    	    wfAtmSscopMaxPd
    		INTEGER,
    	    wfAtmSscopMaxStat
    		INTEGER,
    	    wfAtmSscopIdleTimer
    		INTEGER,
    	    wfAtmSscopStandard
    		INTEGER,
    	    wfAtmSscopDebug
    		INTEGER
        }

    wfAtmSscopDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created."
        DEFVAL	{ created }
        ::= { wfAtmSscopEntry 1 }

    wfAtmSscopDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfAtmSscopEntry 2 }

    wfAtmSscopLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value is the line number of the router."
        ::= { wfAtmSscopEntry 3 }

    wfAtmSscopAtmCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit number of ATM driver associated with this Q.SAAL instance"
        ::= { wfAtmSscopEntry 4 }

    wfAtmSscopState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the state of the Q.SAAL entity"
        DEFVAL	{ notpresent }
        ::= { wfAtmSscopEntry 5 }

    wfAtmSscopLowThreshold OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Congestion is reached when % of buffer pool goes below this threshold (sub)"
        DEFVAL	{ 2 }
        ::= { wfAtmSscopEntry 6 }

    wfAtmSscopUpThreshold OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Congestion is stopped when % of buffer pool goes above this threshold (sub)"
        DEFVAL	{ 2 }
        ::= { wfAtmSscopEntry 7 }

    wfAtmSscopArbitration OBJECT-TYPE
        SYNTAX	INTEGER {
    		    passive(1),
    		    active(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Determines if Q.SAAL initiates link connection or waits for connect (sub)"
        DEFVAL	{ active }
        ::= { wfAtmSscopEntry 8 }

    wfAtmSscopPollTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..120)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "SSCOP Poll Timer.  The Maximum time between transmission of a POLL PDU in tenths/sec"
        DEFVAL	{ 7 }
        ::= { wfAtmSscopEntry 9 }

    wfAtmSscopKeepAliveTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..120)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "SSCOP Keep Alive Timer. If no pending SD or SDP PDU's transmit a POLL PDU in tenths/sec"
        DEFVAL	{ 20 }
        ::= { wfAtmSscopEntry 10 }

    wfAtmSscopNoResponseTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..120)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "SSCOP No Response Timer. Max time between receipt of a STAT PDU in tenths/sec"
        DEFVAL	{ 70 }
        ::= { wfAtmSscopEntry 11 }

    wfAtmSscopConnectControlTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..120)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "SSCOP CC Timer. Time between xmt of BGN, END as long as ACK not received in tenths/sec"
        DEFVAL	{ 10 }
        ::= { wfAtmSscopEntry 12 }

    wfAtmSscopMaxCc OBJECT-TYPE
        SYNTAX	INTEGER(1..20)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "SSCOP MaxCC.  Maximum number of transmissions of a BGN, END or RS PDU."
        DEFVAL	{ 4 }
        ::= { wfAtmSscopEntry 13 }

    wfAtmSscopMaxPd OBJECT-TYPE
        SYNTAX	INTEGER(1..120)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "SSCOP MaxPD.  Maximum value of VT(PD) before transmitting POLL PDU."
        DEFVAL	{ 25 }
        ::= { wfAtmSscopEntry 14 }

    wfAtmSscopMaxStat OBJECT-TYPE
        SYNTAX	INTEGER(1..120)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "SSCOP MaxSTAT.  Maximum number of list elements permissible in a STAT PDU"
        DEFVAL	{ 67 }
        ::= { wfAtmSscopEntry 15 }

    wfAtmSscopIdleTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..400)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "SSCOP Idle Timer. Timer used to determine when to enter the
                transient connection phase.  Units in tenths/second."
        DEFVAL	{ 150 }
        ::= { wfAtmSscopEntry 16 }

    wfAtmSscopStandard OBJECT-TYPE
        SYNTAX	INTEGER {
    		    v30(1),
    		    v31(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "SSCOP version switch. UNI_V30, UNI_V31 for now. Probably no more than
                this."
        DEFVAL	{ v30 }
        ::= { wfAtmSscopEntry 17 }

    wfAtmSscopDebug OBJECT-TYPE
        SYNTAX	INTEGER {
    		    disabled(1),
    		    status(2),
    		    detail(4),
    		    all(2147483647)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This flag will enable certain debug messages depending on the value set.
                The values are as follows:

                 1 - disable debugging
                 2 - SSCOP Status events
                 4294967295 - All of the above"
        DEFVAL	{ status }
        ::= { wfAtmSscopEntry 18 }

    wfAtmIlmiTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmIlmiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table includes the ATM ILMI MIB record for UME/ILMI"
        ::= { wfAtmCommonGroup 9 }

    wfAtmIlmiEntry OBJECT-TYPE
        SYNTAX	WfAtmIlmiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This entry contains attributes needed for ATM UME/ILMI"
        INDEX	{ wfAtmIlmiLineNumber }
        ::= { wfAtmIlmiTable 1 }

    WfAtmIlmiEntry ::= SEQUENCE {
    	    wfAtmIlmiDelete
    		INTEGER,
    	    wfAtmIlmiDisable
    		INTEGER,
    	    wfAtmIlmiLineNumber
    		INTEGER,
    	    wfAtmIlmiAtmCct
    		INTEGER,
    	    wfAtmIlmiState
    		INTEGER,
    	    wfAtmIlmiLowThreshold
    		INTEGER,
    	    wfAtmIlmiUpThreshold
    		INTEGER,
    	    wfAtmIlmiVpi
    		INTEGER,
    	    wfAtmIlmiVci
    		INTEGER,
    	    wfAtmIlmiInterfaceType
    		INTEGER,
    	    wfAtmIlmiLocalPort
    		INTEGER,
    	    wfAtmIlmiRemotePort
    		INTEGER,
    	    wfAtmIlmiGetTimer
    		INTEGER,
    	    wfAtmIlmiGetRetryCnt
    		INTEGER,
    	    wfAtmIlmiGetNextTimer
    		INTEGER,
    	    wfAtmIlmiGetNextRetryCnt
    		INTEGER,
    	    wfAtmIlmiSetTimer
    		INTEGER,
    	    wfAtmIlmiSetRetryCnt
    		INTEGER,
    	    wfAtmIlmiLocalOid
    		OBJECT IDENTIFIER,
    	    wfAtmIlmiDebug
    		INTEGER
        }

    wfAtmIlmiDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created."
        DEFVAL	{ created }
        ::= { wfAtmIlmiEntry 1 }

    wfAtmIlmiDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfAtmIlmiEntry 2 }

    wfAtmIlmiLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This value is the line number of the router."
        ::= { wfAtmIlmiEntry 3 }

    wfAtmIlmiAtmCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit number of ATM driver associated with this UME/ILMI instance"
        ::= { wfAtmIlmiEntry 4 }

    wfAtmIlmiState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the state of the UME/ILMI entity"
        DEFVAL	{ notpresent }
        ::= { wfAtmIlmiEntry 5 }

    wfAtmIlmiLowThreshold OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Congestion is reached when % of buffer pool goes below this threshold (sub)"
        DEFVAL	{ 2 }
        ::= { wfAtmIlmiEntry 6 }

    wfAtmIlmiUpThreshold OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Congestion is stopped when % of buffer pool goes above this threshold (sub)"
        DEFVAL	{ 2 }
        ::= { wfAtmIlmiEntry 7 }

    wfAtmIlmiVpi OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Virtual Path Identifier for the UME/ILMI VC"
        ::= { wfAtmIlmiEntry 8 }

    wfAtmIlmiVci OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Virtual Channel Identifier for the UME/ILMI VC"
        DEFVAL	{ 16 }
        ::= { wfAtmIlmiEntry 9 }

    wfAtmIlmiInterfaceType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    user(1),
    		    network(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Network Interface type, either USER or NETWORK side of the UME/ILMI"
        DEFVAL	{ user }
        ::= { wfAtmIlmiEntry 10 }

    wfAtmIlmiLocalPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "AAL UME/ILMI local port identifier"
        ::= { wfAtmIlmiEntry 11 }

    wfAtmIlmiRemotePort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "AAL UME/ILMI remote port identifier"
        ::= { wfAtmIlmiEntry 12 }

    wfAtmIlmiGetTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..120)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "UME/ILMI Get request timer"
        DEFVAL	{ 3 }
        ::= { wfAtmIlmiEntry 13 }

    wfAtmIlmiGetRetryCnt OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Max number of retransmissions of the UME/ILMI GET request before link down"
        DEFVAL	{ 3 }
        ::= { wfAtmIlmiEntry 14 }

    wfAtmIlmiGetNextTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..120)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "UME/ILMI GetNext request timer"
        DEFVAL	{ 3 }
        ::= { wfAtmIlmiEntry 15 }

    wfAtmIlmiGetNextRetryCnt OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Max number of retransmits of the UME/ILMI GETNEXT request before link down"
        DEFVAL	{ 3 }
        ::= { wfAtmIlmiEntry 16 }

    wfAtmIlmiSetTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..120)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "UME/ILMI Set request timer"
        DEFVAL	{ 3 }
        ::= { wfAtmIlmiEntry 17 }

    wfAtmIlmiSetRetryCnt OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Max number of retransmissions of the UME/ILMI SET request before link down"
        DEFVAL	{ 3 }
        ::= { wfAtmIlmiEntry 18 }

    wfAtmIlmiLocalOid OBJECT-TYPE
        SYNTAX	OBJECT IDENTIFIER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies the OID of the first object in the standard
                DS1 or DS3 MIB corresponding to this ATM UNI port"
        ::= { wfAtmIlmiEntry 19 }

    wfAtmIlmiDebug OBJECT-TYPE
        SYNTAX	INTEGER {
    		    disabled(1),
    		    status(2),
    		    detail(4),
    		    all(2147483647)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This flag will enable certain debug messages depending on the value set.
                The values are as follows:

                 1 - disable debugging
                 2 - ILMI Status events
                 4294967295 - All of the above"
        DEFVAL	{ status }
        ::= { wfAtmIlmiEntry 20 }

    wfAtmNetPrefixTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmNetPrefixEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table includes the ATM Network Address Prefix record"
        ::= { wfAtmCommonGroup 10 }

    wfAtmNetPrefixEntry OBJECT-TYPE
        SYNTAX	WfAtmNetPrefixEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This entry contains attributes needed for a ATM Network Address Prefix"
        INDEX	{ wfAtmNetPrefixPort,
    		  wfAtmNetPrefixPrefix }
        ::= { wfAtmNetPrefixTable 1 }

    WfAtmNetPrefixEntry ::= SEQUENCE {
    	    wfAtmNetPrefixPort
    		INTEGER,
    	    wfAtmNetPrefixPrefix
    		OCTET STRING,
    	    wfAtmNetPrefixStatus
    		INTEGER
        }

    wfAtmNetPrefixPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Port which uniquely identifies the UNI (ie. InterfaceIndex or line number)"
        ::= { wfAtmNetPrefixEntry 1 }

    wfAtmNetPrefixPrefix OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Network Prefix used on this UNI"
        ::= { wfAtmNetPrefixEntry 2 }

    wfAtmNetPrefixStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    valid(1),
    		    invalid(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Status of Network Prefix (being used or not being used)"
        DEFVAL	{ valid }
        ::= { wfAtmNetPrefixEntry 3 }

    wfAtmAlcDrvTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmAlcDrvEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains line record entries for each driver
                responsible for the management and control of an ATM/ALC interface."
        ::= { wfAtmLinkModuleGroup 1 }

    wfAtmAlcDrvEntry OBJECT-TYPE
        SYNTAX	WfAtmAlcDrvEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry definition."
        INDEX	{ wfAtmAlcSlot,
    		  wfAtmAlcPort }
        ::= { wfAtmAlcDrvTable 1 }

    WfAtmAlcDrvEntry ::= SEQUENCE {
    	    wfAtmAlcDelete
    		INTEGER,
    	    wfAtmAlcDisable
    		INTEGER,
    	    wfAtmAlcState
    		INTEGER,
    	    wfAtmAlcSlot
    		INTEGER,
    	    wfAtmAlcPort
    		INTEGER,
    	    wfAtmAlcCct
    		INTEGER,
    	    wfAtmAlcLineNumber
    		INTEGER,
    	    wfAtmAlcType
    		INTEGER,
    	    wfAtmAlcMtu
    		INTEGER,
    	    wfAtmAlcSpeed
    		INTEGER,
    	    wfAtmAlcLastChange
    		TimeTicks,
    	    wfAtmAlcInterfaceStatus
    		INTEGER,
    	    wfAtmAlcInterfaceIndex
    		INTEGER,
    	    wfAtmAlcDpNotify
    		INTEGER,
    	    wfAtmAlcDpNotifyTimeout
    		INTEGER,
    	    wfAtmAlcConfControlQSize
    		INTEGER,
    	    wfAtmAlcConfIntqSize
    		INTEGER,
    	    wfAtmAlcConfLogqSize
    		INTEGER,
    	    wfAtmAlcConfNumXmtQueues
    		INTEGER,
    	    wfAtmAlcUseDebugger
    		INTEGER,
    	    wfAtmAlcConfXmtClipSlotMax
    		INTEGER,
    	    wfAtmAlcXmtClipSlotMax
    		INTEGER,
    	    wfAtmAlcConfXmtClipQueueMax
    		INTEGER,
    	    wfAtmAlcXmtClipQueueMax
    		INTEGER,
    	    wfAtmAlcConfXmtClipQueueMin
    		INTEGER,
    	    wfAtmAlcXmtClipQueueMin
    		INTEGER,
    	    wfAtmAlcXmtQueueBurst
    		INTEGER,
    	    wfAtmAlcXmtPackets
    		Counter,
    	    wfAtmAlcXmtPacketClips
    		Counter,
    	    wfAtmAlcXmtOctets
    		Counter,
    	    wfAtmAlcOutQLen
    		Gauge,
    	    wfAtmAlcRcvPackets
    		Counter,
    	    wfAtmAlcRcvReplenMisses
    		Counter,
    	    wfAtmAlcConfRcvBuffersMax
    		INTEGER,
    	    wfAtmAlcRcvBuffersMax
    		INTEGER,
    	    wfAtmAlcMadrCt
    		INTEGER,
    	    wfAtmAlcMadr
    		OCTET STRING,
    	    wfAtmAlcVcInactEnable
    		INTEGER
        }

    wfAtmAlcDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/delete MIB instance parameter."
        DEFVAL	{ create }
        ::= { wfAtmAlcDrvEntry 1 }

    wfAtmAlcDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/disable driver parameter."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcDrvEntry 2 }

    wfAtmAlcState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    download(4),
    		    config(5),
    		    notpresent(20)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Driver state parameter. This parameter does not represent the state
                of the physical interface!"
        DEFVAL	{ notpresent }
        ::= { wfAtmAlcDrvEntry 3 }

    wfAtmAlcSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number -- instance id."
        ::= { wfAtmAlcDrvEntry 4 }

    wfAtmAlcPort OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Physical port number -- instance id."
        ::= { wfAtmAlcDrvEntry 5 }

    wfAtmAlcCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Circuit number for the driver."
        ::= { wfAtmAlcDrvEntry 6 }

    wfAtmAlcLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Index value used to uniquely identify an instance of a physical
                ATM port. This index is generally chosen by SiteManager and shall
                be used as an instance identifier for ATM MIB objects."
        ::= { wfAtmAlcDrvEntry 7 }

    wfAtmAlcType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    typesonet(1),
    		    typeds3(2),
    		    type100mb(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The type of interface. This attribute is an alias for 'ifType."
        ::= { wfAtmAlcDrvEntry 8 }

    wfAtmAlcMtu OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(4608)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The size of the largest packet which can be sent/received on the
                interface, specified in octets. This attribute is an alias for
                'ifMtu'."
        ::= { wfAtmAlcDrvEntry 9 }

    wfAtmAlcSpeed OBJECT-TYPE
        SYNTAX	INTEGER {
    		    speed155mb(155520000),
    		    speed100mb(100000000),
    		    speed45mb(44736000)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "An estimate of the interface's current bandwidth in bits per
                second. This attribute is an alias for 'ifSpeed'."
        ::= { wfAtmAlcDrvEntry 10 }

    wfAtmAlcLastChange OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The time (in hundreths of a second) since the network management
                portion of the system was last re-initialized. This attribute is
                an alias for 'ifLastChange' in the MIBII System Group."
        ::= { wfAtmAlcDrvEntry 11 }

    wfAtmAlcInterfaceStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    testing(3),
    		    unknown(4),
    		    dormant(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "MIB-II ifOperStatus"
        DEFVAL	{ unknown }
        ::= { wfAtmAlcDrvEntry 12 }

    wfAtmAlcInterfaceIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "MIB-II interface index"
        ::= { wfAtmAlcDrvEntry 13 }

    wfAtmAlcDpNotify OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Data Path (DP) notify function. This function, when enabled,
                will disable the DP interface when the physical interface becomes
                non-operational."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcDrvEntry 14 }

    wfAtmAlcDpNotifyTimeout OBJECT-TYPE
        SYNTAX	INTEGER(0..3600)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Data Path (DP) notify function timeout period. This value specifies
                the number of seconds to wait before implementing the DP notify
                function. A timer will get set to this value when the state of
                the physical interface transitions from operational to
                non-operational when the DP notify function is enabled."
        DEFVAL	{ 3 }
        ::= { wfAtmAlcDrvEntry 15 }

    wfAtmAlcConfControlQSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of command elements in each of the two Host Interface control qs"
        DEFVAL	{ default }
        ::= { wfAtmAlcDrvEntry 16 }

    wfAtmAlcConfIntqSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(100)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of elements in the Host Interface interrupt queue"
        DEFVAL	{ default }
        ::= { wfAtmAlcDrvEntry 17 }

    wfAtmAlcConfLogqSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(25)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of elements in the Host Interface log queue"
        DEFVAL	{ default }
        ::= { wfAtmAlcDrvEntry 18 }

    wfAtmAlcConfNumXmtQueues OBJECT-TYPE
        SYNTAX	INTEGER(12..29)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of transmit queues in the Host Interface between the Host Driver
                and the CoP Driver"
        DEFVAL	{ 24 }
        ::= { wfAtmAlcDrvEntry 19 }

    wfAtmAlcUseDebugger OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute controls a debugger which may be built into the Coprocessor
                image.  Shipped code does not include this debugger."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcDrvEntry 20 }

    wfAtmAlcConfXmtClipSlotMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of frames the slot may queue up for transmit before the Host Driver
                begins to clip.  Setting this attribute forces the driver to use the non
                zero value of the attribute rather than selecting a clip point
                automatically."
        ::= { wfAtmAlcDrvEntry 21 }

    wfAtmAlcXmtClipSlotMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of buffers per slot beyond which the driver will clip on transmit.
                Set by the driver.  May be forced by setting
                wfAtmAlcConfXmtClipSlotMax != 0"
        ::= { wfAtmAlcDrvEntry 22 }

    wfAtmAlcConfXmtClipQueueMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of frames a transmit queue may queue up before the Host Driver
                begins to clip.  Setting this attribute forces the driver to use the non
                zero value of the attribute rather than selecting a clip point
                automatically."
        ::= { wfAtmAlcDrvEntry 23 }

    wfAtmAlcXmtClipQueueMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of buffers per transmit queue beyond which the driver will clip
                on transmit.  Set by the driver.  May be forced by setting
                wfAtmAlcConfXmtClipQueueMax != 0"
        ::= { wfAtmAlcDrvEntry 24 }

    wfAtmAlcConfXmtClipQueueMin OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of frames a transmit queue will always be permitted to queue up
                regardless of the current value of wfAtmOutQLen relative to
                wfAtmXmtClipSlotMax.  Setting this attribute forces the driver to
                use the nonzero value of the attribute rather than selecting a clip point
                automatically."
        ::= { wfAtmAlcDrvEntry 25 }

    wfAtmAlcXmtClipQueueMin OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of buffers each transmit queue is guaranteed to get before the
                driver clips due to the value of wfAtmXmtClipSlotMax.  Set by the
                driver.  May be forced by setting wfAtmAlcConfXmtClipQueueMin != 0"
        ::= { wfAtmAlcDrvEntry 26 }

    wfAtmAlcXmtQueueBurst OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(40)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Burst count for all transmit queues in CoP. Specifies the number
                of buffer(ettes) the CoP will process from a transmit queue in one
                service opportunity. A value of 0 (zero) will cause the CoP to
                burst forever (i.e., until either all data is transmitted from the
                queue or no more buffer(ette)s are available to transmit into."
        DEFVAL	{ default }
        ::= { wfAtmAlcDrvEntry 27 }

    wfAtmAlcXmtPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of Service Data Units (SDUs) transmitted without error."
        ::= { wfAtmAlcDrvEntry 28 }

    wfAtmAlcXmtPacketClips OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of packets dropped on transmit."
        ::= { wfAtmAlcDrvEntry 29 }

    wfAtmAlcXmtOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of octets transmitted without error over the link interface.
                These octets are associated with user data only and not overhead or
                padding octets."
        ::= { wfAtmAlcDrvEntry 30 }

    wfAtmAlcOutQLen OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This attribute is an alias for 'ifOutQLen' in the MIBII interface
                group."
        ::= { wfAtmAlcDrvEntry 31 }

    wfAtmAlcRcvPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of Service Data Units (SDUs) received without error."
        ::= { wfAtmAlcDrvEntry 32 }

    wfAtmAlcRcvReplenMisses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packet buffer misses while attempting to replenish driver
                receive ring."
        ::= { wfAtmAlcDrvEntry 33 }

    wfAtmAlcConfRcvBuffersMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of buffers the driver will try to maintain on its receive queue.
                Setting this attribute forces the driver to use the non
                zero value of the attribute rather than selecting a buffer count
                automatically."
        ::= { wfAtmAlcDrvEntry 34 }

    wfAtmAlcRcvBuffersMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of buffers which the driver will attempt to maintain on the receive
                queue.  Set by the driver.  May be forced by setting
                wfAtmAlcConfRcvBuffersMax != 0"
        ::= { wfAtmAlcDrvEntry 35 }

    wfAtmAlcMadrCt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of PROM-based MAC addresses."
        ::= { wfAtmAlcDrvEntry 36 }

    wfAtmAlcMadr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "First MAC address in canonical format (i.e., 00-00-a2...). The number of
                subsequent MAC addresses is specified by wfAtmAlcMadrCt which are
                sequential."
        ::= { wfAtmAlcDrvEntry 37 }

    wfAtmAlcVcInactEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Inactivity timeout function. When this function is enabled, all activated
                VCs will be polled, at an interval specified by wfAtmAlcCopVcInactTimeout,
                for inactivity."
        DEFVAL	{ enable }
        ::= { wfAtmAlcDrvEntry 38 }

    wfAtmAlcXmtqTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmAlcXmtqEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Object created by the Host Driver, one for each transmit queue"
        ::= { wfAtmLinkModuleGroup 2 }

    wfAtmAlcXmtqEntry OBJECT-TYPE
        SYNTAX	WfAtmAlcXmtqEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the ATM Transmit Queue Table"
        INDEX	{ wfAtmAlcXmtqIndex,
    		  wfAtmAlcXmtqNumber }
        ::= { wfAtmAlcXmtqTable 1 }

    WfAtmAlcXmtqEntry ::= SEQUENCE {
    	    wfAtmAlcXmtqIndex
    		INTEGER,
    	    wfAtmAlcXmtqNumber
    		INTEGER,
    	    wfAtmAlcXmtqState
    		INTEGER,
    	    wfAtmAlcXmtqStickyMask
    		INTEGER,
    	    wfAtmAlcXmtqVcs
    		INTEGER,
    	    wfAtmAlcXmtqOutQLen
    		Gauge,
    	    wfAtmAlcXmtqOctets
    		Counter,
    	    wfAtmAlcXmtqPackets
    		Counter,
    	    wfAtmAlcXmtqPacketClips
    		Counter
        }

    wfAtmAlcXmtqIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Uniquely identifies the interface (port) that contains the
                appropriate management information."
        ::= { wfAtmAlcXmtqEntry 1 }

    wfAtmAlcXmtqNumber OBJECT-TYPE
        SYNTAX	INTEGER(3..28)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies a particular instance of a transmit queue."
        ::= { wfAtmAlcXmtqEntry 2 }

    wfAtmAlcXmtqState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    initdone(2),
    		    msgsent(3),
    		    notpresent(20)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "State of the transmit queue."
        DEFVAL	{ notpresent }
        ::= { wfAtmAlcXmtqEntry 3 }

    wfAtmAlcXmtqStickyMask OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcXmtqEntry 4 }

    wfAtmAlcXmtqVcs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Virtual Connections (VCs) configured for this queue."
        ::= { wfAtmAlcXmtqEntry 5 }

    wfAtmAlcXmtqOutQLen OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcXmtqEntry 6 }

    wfAtmAlcXmtqOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcXmtqEntry 7 }

    wfAtmAlcXmtqPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcXmtqEntry 8 }

    wfAtmAlcXmtqPacketClips OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcXmtqEntry 9 }

    wfAtmAlcCopConfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmAlcCopConfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains basic CONFIGURATION information for the
                ATM/ALC CoProcessor (CoP) environment."
        ::= { wfAtmLinkModuleGroup 3 }

    wfAtmAlcCopConfEntry OBJECT-TYPE
        SYNTAX	WfAtmAlcCopConfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry definition."
        INDEX	{ wfAtmAlcCopConfIndex }
        ::= { wfAtmAlcCopConfTable 1 }

    WfAtmAlcCopConfEntry ::= SEQUENCE {
    	    wfAtmAlcCopConfDelete
    		INTEGER,
    	    wfAtmAlcCopConfIndex
    		INTEGER,
    	    wfAtmAlcCopBufSize
    		INTEGER,
    	    wfAtmAlcCopConfXmtBufs
    		INTEGER,
    	    wfAtmAlcCopConfRcvBufs
    		INTEGER,
    	    wfAtmAlcCopDmaHighWatermark
    		INTEGER,
    	    wfAtmAlcCopDmaLowWatermark
    		INTEGER,
    	    wfAtmAlcCopCacheControl
    		INTEGER,
    	    wfAtmAlcCopHwModId
    		INTEGER,
    	    wfAtmAlcCopVcInactTimeout
    		INTEGER
        }

    wfAtmAlcCopConfDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/delete MIB instance parameter."
        DEFVAL	{ create }
        ::= { wfAtmAlcCopConfEntry 1 }

    wfAtmAlcCopConfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Uniquely identifies the interface that contains the
                appropriate management information."
        ::= { wfAtmAlcCopConfEntry 2 }

    wfAtmAlcCopBufSize OBJECT-TYPE
        SYNTAX	INTEGER(128..1024)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Size in bytes of buffer(ettes)."
        DEFVAL	{ 532 }
        ::= { wfAtmAlcCopConfEntry 3 }

    wfAtmAlcCopConfXmtBufs OBJECT-TYPE
        SYNTAX	INTEGER(10..90)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Percentage of transmit buffers to allocate in relation to
                the total packet memory size."
        DEFVAL	{ 55 }
        ::= { wfAtmAlcCopConfEntry 4 }

    wfAtmAlcCopConfRcvBufs OBJECT-TYPE
        SYNTAX	INTEGER(10..90)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Percentage of receive buffers to allocate in relation to
                the total packet memory size."
        DEFVAL	{ 45 }
        ::= { wfAtmAlcCopConfEntry 5 }

    wfAtmAlcCopDmaHighWatermark OBJECT-TYPE
        SYNTAX	INTEGER(1..512)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DMA FIFO high watermark. This value determines the mark upon which
                the DMA controller will generate an interrupt specifying FIFO
                'almost full'."
        DEFVAL	{ 32 }
        ::= { wfAtmAlcCopConfEntry 6 }

    wfAtmAlcCopDmaLowWatermark OBJECT-TYPE
        SYNTAX	INTEGER(1..512)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DMA FIFO low watermark. This value determines the mark upon which
                the DMA controller will generate an interrupt specifying FIFO
                'almost empty'."
        DEFVAL	{ 128 }
        ::= { wfAtmAlcCopConfEntry 7 }

    wfAtmAlcCopCacheControl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    both(1),
    		    icache(2),
    		    dcache(3),
    		    none(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Determines the state of the cache control register in the CoP."
        DEFVAL	{ both }
        ::= { wfAtmAlcCopConfEntry 8 }

    wfAtmAlcCopHwModId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Link module hardware identifier. Includes physical interface type."
        ::= { wfAtmAlcCopConfEntry 9 }

    wfAtmAlcCopVcInactTimeout OBJECT-TYPE
        SYNTAX	INTEGER(60..3600)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Inactivity timeout value for all VCs on this interface in seconds.
                If no cells have been transmitted or received on an VC over the given
                timeout period then the VC will be closed."
        DEFVAL	{ 1200 }
        ::= { wfAtmAlcCopConfEntry 10 }

    wfAtmAlcCopHwTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmAlcCopHwEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains hardware information relating to the ATM/ALC
                link module."
        ::= { wfAtmLinkModuleGroup 4 }

    wfAtmAlcCopHwEntry OBJECT-TYPE
        SYNTAX	WfAtmAlcCopHwEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry definition."
        INDEX	{ wfAtmAlcCopHwIndex }
        ::= { wfAtmAlcCopHwTable 1 }

    WfAtmAlcCopHwEntry ::= SEQUENCE {
    	    wfAtmAlcCopHwIndex
    		INTEGER,
    	    wfAtmAlcCopType
    		INTEGER,
    	    wfAtmAlcCopPktMemSize
    		INTEGER,
    	    wfAtmAlcCopCtlMemSize
    		INTEGER,
    	    wfAtmAlcCopInsMemSize
    		INTEGER,
    	    wfAtmAlcCopAlcClockSpeed
    		INTEGER,
    	    wfAtmAlcCopAlcVersion
    		INTEGER,
    	    wfAtmAlcCopNtcVersion
    		INTEGER,
    	    wfAtmAlcCopAtcVersion
    		INTEGER
        }

    wfAtmAlcCopHwIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Uniquely identifies the interface that contains the
                appropriate management information."
        ::= { wfAtmAlcCopHwEntry 1 }

    wfAtmAlcCopType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    m68040(1),
    		    m68060(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "CoProcessor type."
        ::= { wfAtmAlcCopHwEntry 2 }

    wfAtmAlcCopPktMemSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size, in octets, of packet memory on the link module."
        ::= { wfAtmAlcCopHwEntry 3 }

    wfAtmAlcCopCtlMemSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size, in octets, of control memory on the link module."
        ::= { wfAtmAlcCopHwEntry 4 }

    wfAtmAlcCopInsMemSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size, in octets, of module memory on the link module."
        ::= { wfAtmAlcCopHwEntry 5 }

    wfAtmAlcCopAlcClockSpeed OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Clock speed of the Adaptation Layer Controller (ALC) device."
        ::= { wfAtmAlcCopHwEntry 6 }

    wfAtmAlcCopAlcVersion OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Revision of the Adaptation Layer Controller (ALC) device."
        ::= { wfAtmAlcCopHwEntry 7 }

    wfAtmAlcCopNtcVersion OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Revision of the Network Termination Controller (NTC) device."
        ::= { wfAtmAlcCopHwEntry 8 }

    wfAtmAlcCopAtcVersion OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Revision of the Address Translation Controller (ATC) device."
        ::= { wfAtmAlcCopHwEntry 9 }

    wfAtmAlcCopInfoTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmAlcCopInfoEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains general CoP information."
        ::= { wfAtmLinkModuleGroup 5 }

    wfAtmAlcCopInfoEntry OBJECT-TYPE
        SYNTAX	WfAtmAlcCopInfoEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry definition."
        INDEX	{ wfAtmAlcCopInfoIndex }
        ::= { wfAtmAlcCopInfoTable 1 }

    WfAtmAlcCopInfoEntry ::= SEQUENCE {
    	    wfAtmAlcCopInfoIndex
    		INTEGER,
    	    wfAtmAlcCopState
    		INTEGER,
    	    wfAtmAlcCopConfigState
    		INTEGER,
    	    wfAtmAlcCopTotalBufs
    		INTEGER,
    	    wfAtmAlcCopTotalXmtBufs
    		INTEGER,
    	    wfAtmAlcCopTotalRcvBufs
    		INTEGER
        }

    wfAtmAlcCopInfoIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Uniquely identifies the interface that contains the
                appropriate management information."
        ::= { wfAtmAlcCopInfoEntry 1 }

    wfAtmAlcCopState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    operational(1),
    		    nonoperational(2),
    		    init(3),
    		    config(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "State of the CoP driver."
        ::= { wfAtmAlcCopInfoEntry 2 }

    wfAtmAlcCopConfigState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    dma(1),
    		    sar(2),
    		    sartraf(4),
    		    sarpcrq(8),
    		    sarscrq(16),
    		    frmgen(32),
    		    frmrcv(64),
    		    frmxmt(128),
    		    frmoam(256),
    		    frmstats(512),
    		    frmcsi(1024),
    		    frmdma(2048),
    		    done(4095)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "State of the configuration process. The CoP driver performs
                a series of configuration events for all the major components
                on the link module. This state show where in the configuration
                process the CoP driver resides. Until done, no data will be
                allowed to be transmitted or received."
        ::= { wfAtmAlcCopInfoEntry 3 }

    wfAtmAlcCopTotalBufs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of buffers available for use in packet memory."
        ::= { wfAtmAlcCopInfoEntry 4 }

    wfAtmAlcCopTotalXmtBufs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of buffers allocated for transmit."
        ::= { wfAtmAlcCopInfoEntry 5 }

    wfAtmAlcCopTotalRcvBufs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of buffers allocated for receive."
        ::= { wfAtmAlcCopInfoEntry 6 }

    wfAtmAlcCopDataPathTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmAlcCopDataPathEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains CoP data path statistics such as the number of
                packets, buffers, and cells transmitted and received."
        ::= { wfAtmLinkModuleGroup 6 }

    wfAtmAlcCopDataPathEntry OBJECT-TYPE
        SYNTAX	WfAtmAlcCopDataPathEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry definition."
        INDEX	{ wfAtmAlcCopDataPathIndex }
        ::= { wfAtmAlcCopDataPathTable 1 }

    WfAtmAlcCopDataPathEntry ::= SEQUENCE {
    	    wfAtmAlcCopDataPathIndex
    		INTEGER,
    	    wfAtmAlcCopXmtPackets
    		Counter,
    	    wfAtmAlcCopXmtBuffers
    		Counter,
    	    wfAtmAlcCopXmtErrBuffers
    		Counter,
    	    wfAtmAlcCopXmtCells
    		OCTET STRING,
    	    wfAtmAlcCopXmtUnassCells
    		Counter,
    	    wfAtmAlcCopXmtIdleCells
    		Counter,
    	    wfAtmAlcCopXmtUserCells
    		Counter,
    	    wfAtmAlcCopXmtOctets
    		Counter,
    	    wfAtmAlcCopRcvPackets
    		Counter,
    	    wfAtmAlcCopRcvClipPackets
    		Counter,
    	    wfAtmAlcCopRcvBuffers
    		Counter,
    	    wfAtmAlcCopRcvErrBuffers
    		Counter,
    	    wfAtmAlcCopRcvClipBuffers
    		Counter,
    	    wfAtmAlcCopRcvSarDropBuffers
    		Counter,
    	    wfAtmAlcCopRcvCells
    		OCTET STRING,
    	    wfAtmAlcCopRcvDropCells
    		Counter,
    	    wfAtmAlcCopRcvUnassCells
    		Counter,
    	    wfAtmAlcCopRcvIdleCells
    		Counter,
    	    wfAtmAlcCopRcvUserCells
    		Counter,
    	    wfAtmAlcCopRcvSarDropCells
    		Counter,
    	    wfAtmAlcCopRcvOctets
    		Counter,
    	    wfAtmAlcCopXmtOamCells
    		Counter,
    	    wfAtmAlcCopRcvOamCells
    		Counter,
    	    wfAtmAlcCopRcvOamCrcErrs
    		Counter
        }

    wfAtmAlcCopDataPathIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Uniquely identifies the interface that contains the
                appropriate management information."
        ::= { wfAtmAlcCopDataPathEntry 1 }

    wfAtmAlcCopXmtPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of packets transferred to the link module."
        ::= { wfAtmAlcCopDataPathEntry 2 }

    wfAtmAlcCopXmtBuffers OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of CoP buffers used for segmentation (transmit)."
        ::= { wfAtmAlcCopDataPathEntry 3 }

    wfAtmAlcCopXmtErrBuffers OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of CoP transmit buffers returned in error by SAR
                device."
        ::= { wfAtmAlcCopDataPathEntry 4 }

    wfAtmAlcCopXmtCells OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of assigned ATM layer cells transmitted at the
                transceiver transmit interface (T-count). This attribute is
                a 64-bit counter."
        ::= { wfAtmAlcCopDataPathEntry 5 }

    wfAtmAlcCopXmtUnassCells OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopDataPathEntry 6 }

    wfAtmAlcCopXmtIdleCells OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopDataPathEntry 7 }

    wfAtmAlcCopXmtUserCells OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopDataPathEntry 8 }

    wfAtmAlcCopXmtOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of octets transmitted (segmented) successfully."
        ::= { wfAtmAlcCopDataPathEntry 9 }

    wfAtmAlcCopRcvPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of packets completely reassembled."
        ::= { wfAtmAlcCopDataPathEntry 10 }

    wfAtmAlcCopRcvClipPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of packets dropped because no host buffers available
                to hold the incoming data."
        ::= { wfAtmAlcCopDataPathEntry 11 }

    wfAtmAlcCopRcvBuffers OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of CoP buffers used for reassembly."
        ::= { wfAtmAlcCopDataPathEntry 12 }

    wfAtmAlcCopRcvErrBuffers OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of CoP receive buffers returned in error by SAR
                device."
        ::= { wfAtmAlcCopDataPathEntry 13 }

    wfAtmAlcCopRcvClipBuffers OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of CoP buffers dropped because no receive buffer space
                were available to hold the incoming data."
        ::= { wfAtmAlcCopDataPathEntry 14 }

    wfAtmAlcCopRcvSarDropBuffers OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of CoP buffers dropped by the SAR device."
        ::= { wfAtmAlcCopDataPathEntry 15 }

    wfAtmAlcCopRcvCells OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of assigned ATM layer cells received at the
                transciever receive interface that have not been discarded
                (R-count). This attribute is a 64-bit counter."
        ::= { wfAtmAlcCopDataPathEntry 16 }

    wfAtmAlcCopRcvDropCells OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of cells received at the transceiver receive interface
                that have been discarded (D-count).

                The cells may have been discarded due to the following reasons:
                    physical layer cells
                    ATM layer cell with uncorrectable HEC error
                    ATM layer cell which has been discarded via the discard mask
                    protocol error"
        ::= { wfAtmAlcCopDataPathEntry 17 }

    wfAtmAlcCopRcvUnassCells OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopDataPathEntry 18 }

    wfAtmAlcCopRcvIdleCells OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopDataPathEntry 19 }

    wfAtmAlcCopRcvUserCells OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopDataPathEntry 20 }

    wfAtmAlcCopRcvSarDropCells OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopDataPathEntry 21 }

    wfAtmAlcCopRcvOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of octets received (reassembled) successfully."
        ::= { wfAtmAlcCopDataPathEntry 22 }

    wfAtmAlcCopXmtOamCells OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of OAM cells transmitted successfully."
        ::= { wfAtmAlcCopDataPathEntry 23 }

    wfAtmAlcCopRcvOamCells OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of OAM cells received successfully."
        ::= { wfAtmAlcCopDataPathEntry 24 }

    wfAtmAlcCopRcvOamCrcErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of OAM cells received with CRC10 error."
        ::= { wfAtmAlcCopDataPathEntry 25 }

    wfAtmAlcCopErrorTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmAlcCopErrorEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains CoP error statistics."
        ::= { wfAtmLinkModuleGroup 7 }

    wfAtmAlcCopErrorEntry OBJECT-TYPE
        SYNTAX	WfAtmAlcCopErrorEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry definition."
        INDEX	{ wfAtmAlcCopErrorIndex }
        ::= { wfAtmAlcCopErrorTable 1 }

    WfAtmAlcCopErrorEntry ::= SEQUENCE {
    	    wfAtmAlcCopErrorIndex
    		INTEGER,
    	    wfAtmAlcCopHecDetects
    		Counter,
    	    wfAtmAlcCopHecCorrects
    		Counter,
    	    wfAtmAlcCopB2Febes
    		Counter,
    	    wfAtmAlcCopB3Febes
    		Counter,
    	    wfAtmAlcCopF1Febes
    		Counter,
    	    wfAtmAlcCopF3Febes
    		Counter,
    	    wfAtmAlcCopG1Febes
    		Counter,
    	    wfAtmAlcCopDropIntqEvents
    		Counter,
    	    wfAtmAlcCopDropLogqEvents
    		Counter,
    	    wfAtmAlcCopDmaFifoOverruns
    		Counter,
    	    wfAtmAlcCopDmaFifoUnderruns
    		Counter,
    	    wfAtmAlcCopLossSignals
    		Counter,
    	    wfAtmAlcCopLossFrames
    		Counter,
    	    wfAtmAlcCopLossPointers
    		Counter,
    	    wfAtmAlcCopOutCellDelins
    		Counter,
    	    wfAtmAlcCopInCellDelins
    		Counter,
    	    wfAtmAlcCopBufOverflows
    		Counter,
    	    wfAtmAlcCopXmtQueueFulls
    		Counter,
    	    wfAtmAlcCopXmtAtes
    		Counter,
    	    wfAtmAlcCopRcvQueueEmptys
    		Counter,
    	    wfAtmAlcCopRcvWriteFails
    		Counter,
    	    wfAtmAlcCopRcvQueueFulls
    		Counter,
    	    wfAtmAlcCopRcvAtes
    		Counter
        }

    wfAtmAlcCopErrorIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Uniquely identifies the interface that contains the
                appropriate management information."
        ::= { wfAtmAlcCopErrorEntry 1 }

    wfAtmAlcCopHecDetects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 2 }

    wfAtmAlcCopHecCorrects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 3 }

    wfAtmAlcCopB2Febes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 4 }

    wfAtmAlcCopB3Febes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 5 }

    wfAtmAlcCopF1Febes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 6 }

    wfAtmAlcCopF3Febes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 7 }

    wfAtmAlcCopG1Febes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 8 }

    wfAtmAlcCopDropIntqEvents OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 9 }

    wfAtmAlcCopDropLogqEvents OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 10 }

    wfAtmAlcCopDmaFifoOverruns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 11 }

    wfAtmAlcCopDmaFifoUnderruns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 12 }

    wfAtmAlcCopLossSignals OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of occurences of when the framer device detected loss
                of signal (i.e., no signal detect/no light)."
        ::= { wfAtmAlcCopErrorEntry 13 }

    wfAtmAlcCopLossFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 14 }

    wfAtmAlcCopLossPointers OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 15 }

    wfAtmAlcCopOutCellDelins OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of occurences of when the framer device went out of
                cell delineation."
        ::= { wfAtmAlcCopErrorEntry 16 }

    wfAtmAlcCopInCellDelins OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of occurences of when the framer device went into
                cell delineation."
        ::= { wfAtmAlcCopErrorEntry 17 }

    wfAtmAlcCopBufOverflows OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 18 }

    wfAtmAlcCopXmtQueueFulls OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 19 }

    wfAtmAlcCopXmtAtes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 20 }

    wfAtmAlcCopRcvQueueEmptys OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 21 }

    wfAtmAlcCopRcvWriteFails OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 22 }

    wfAtmAlcCopRcvQueueFulls OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 23 }

    wfAtmAlcCopRcvAtes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                ""
        ::= { wfAtmAlcCopErrorEntry 24 }

    wfAtmAlcSarConfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmAlcSarConfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains configuration information for the
                ATM/ALC SAR device."
        ::= { wfAtmLinkModuleGroup 8 }

    wfAtmAlcSarConfEntry OBJECT-TYPE
        SYNTAX	WfAtmAlcSarConfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry definition."
        INDEX	{ wfAtmAlcSarConfIndex }
        ::= { wfAtmAlcSarConfTable 1 }

    WfAtmAlcSarConfEntry ::= SEQUENCE {
    	    wfAtmAlcSarConfDelete
    		INTEGER,
    	    wfAtmAlcSarConfIndex
    		INTEGER,
    	    wfAtmAlcSarDmaBurstLength
    		INTEGER,
    	    wfAtmAlcSarDmaModeBw
    		INTEGER,
    	    wfAtmAlcSarDmaModeBmode
    		INTEGER,
    	    wfAtmAlcSarDmaModeOrder
    		INTEGER,
    	    wfAtmAlcSarDmaModeMmode
    		INTEGER,
    	    wfAtmAlcSarDmaModeCmode
    		INTEGER,
    	    wfAtmAlcSarDmaModeSync
    		INTEGER,
    	    wfAtmAlcSarControlRif
    		INTEGER,
    	    wfAtmAlcSarControlLoop
    		INTEGER,
    	    wfAtmAlcSarModeRtmr
    		INTEGER,
    	    wfAtmAlcSarModeRid
    		INTEGER,
    	    wfAtmAlcSarModeAal
    		INTEGER,
    	    wfAtmAlcSarModeDmask
    		INTEGER,
    	    wfAtmAlcSarModeDchain
    		INTEGER,
    	    wfAtmAlcSarModeSmode
    		INTEGER,
    	    wfAtmAlcSarModeBchain
    		INTEGER,
    	    wfAtmAlcSarModeHec
    		INTEGER,
    	    wfAtmAlcSarModeVpf
    		INTEGER,
    	    wfAtmAlcSarModeBas
    		INTEGER,
    	    wfAtmAlcSarModeAm
    		INTEGER,
    	    wfAtmAlcSarModeTrtl
    		INTEGER,
    	    wfAtmAlcSarTimeoutCtrPeriod
    		INTEGER,
    	    wfAtmAlcSarTimeoutCtrInt
    		INTEGER,
    	    wfAtmAlcSarMaxReceivePktLen
    		INTEGER
        }

    wfAtmAlcSarConfDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/delete MIB instance parameter."
        DEFVAL	{ create }
        ::= { wfAtmAlcSarConfEntry 1 }

    wfAtmAlcSarConfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Uniquely identifies the interface that contains the
                appropriate management information."
        ::= { wfAtmAlcSarConfEntry 2 }

    wfAtmAlcSarDmaBurstLength OBJECT-TYPE
        SYNTAX	INTEGER(1..256)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Limits the max number of SAR DMA access cycles in a
                single block."
        DEFVAL	{ 1 }
        ::= { wfAtmAlcSarConfEntry 3 }

    wfAtmAlcSarDmaModeBw OBJECT-TYPE
        SYNTAX	INTEGER {
    		    bit32(1),
    		    bit64(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "SAR memory interface width."
        DEFVAL	{ bit32 }
        ::= { wfAtmAlcSarConfEntry 4 }

    wfAtmAlcSarDmaModeBmode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    intel(1),
    		    motorola(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "SAR memory control signal mode."
        DEFVAL	{ intel }
        ::= { wfAtmAlcSarConfEntry 5 }

    wfAtmAlcSarDmaModeOrder OBJECT-TYPE
        SYNTAX	INTEGER {
    		    bigendian(1),
    		    littleendian(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "SAR memory byte ordering convention."
        DEFVAL	{ bigendian }
        ::= { wfAtmAlcSarConfEntry 6 }

    wfAtmAlcSarDmaModeMmode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    system(1),
    		    ram(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "SAR memory mode."
        DEFVAL	{ ram }
        ::= { wfAtmAlcSarConfEntry 7 }

    wfAtmAlcSarDmaModeCmode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    standard(1),
    		    fast(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "SAR memory cycle time."
        DEFVAL	{ fast }
        ::= { wfAtmAlcSarConfEntry 8 }

    wfAtmAlcSarDmaModeSync OBJECT-TYPE
        SYNTAX	INTEGER {
    		    async(1),
    		    sync(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "READY/DTACK signal treatment."
        DEFVAL	{ async }
        ::= { wfAtmAlcSarConfEntry 9 }

    wfAtmAlcSarControlRif OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive buffer ready interrupt frequency."
        DEFVAL	{ one }
        ::= { wfAtmAlcSarConfEntry 10 }

    wfAtmAlcSarControlLoop OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Loop transmit cell stream into receive cell stream interface."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcSarConfEntry 11 }

    wfAtmAlcSarModeRtmr OBJECT-TYPE
        SYNTAX	INTEGER {
    		    notag(1),
    		    oneoctettag(2),
    		    twooctettag(3),
    		    threeoctettag(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive routing tag length."
        DEFVAL	{ notag }
        ::= { wfAtmAlcSarConfEntry 12 }

    wfAtmAlcSarModeRid OBJECT-TYPE
        SYNTAX	INTEGER {
    		    vci(1),
    		    mid(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Reassembly ID select."
        DEFVAL	{ vci }
        ::= { wfAtmAlcSarConfEntry 13 }

    wfAtmAlcSarModeAal OBJECT-TYPE
        SYNTAX	INTEGER {
    		    set(1),
    		    clear(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Default receive status/descriptor type field setting."
        DEFVAL	{ clear }
        ::= { wfAtmAlcSarConfEntry 14 }

    wfAtmAlcSarModeDmask OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Disable transmit queue masking."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcSarConfEntry 15 }

    wfAtmAlcSarModeDchain OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit cell stream daisy chain enable."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcSarConfEntry 16 }

    wfAtmAlcSarModeSmode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive streaming mode enable."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcSarConfEntry 17 }

    wfAtmAlcSarModeBchain OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive buffer chaining mode enable."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcSarConfEntry 18 }

    wfAtmAlcSarModeHec OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Header error check operation."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcSarConfEntry 19 }

    wfAtmAlcSarModeVpf OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Virtual path filter enable."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcSarConfEntry 20 }

    wfAtmAlcSarModeBas OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Buffer ageing support."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcSarConfEntry 21 }

    wfAtmAlcSarModeAm OBJECT-TYPE
        SYNTAX	INTEGER {
    		    trickle(1),
    		    burst(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Traffic rate averaging method."
        DEFVAL	{ trickle }
        ::= { wfAtmAlcSarConfEntry 22 }

    wfAtmAlcSarModeTrtl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    notag(1),
    		    oneoctettag(2),
    		    twooctettag(3),
    		    threeoctettag(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit routing tag length."
        DEFVAL	{ notag }
        ::= { wfAtmAlcSarConfEntry 23 }

    wfAtmAlcSarTimeoutCtrPeriod OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of DCCK clock periods required to increment the
                receive buffer ageing time base counter."
        ::= { wfAtmAlcSarConfEntry 24 }

    wfAtmAlcSarTimeoutCtrInt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum time period allowed between the arrival of an
                incoming packet and the host servicing the receive buffer."
        ::= { wfAtmAlcSarConfEntry 25 }

    wfAtmAlcSarMaxReceivePktLen OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(4608)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of bytes of incoming packet data that can
                be received."
        DEFVAL	{ default }
        ::= { wfAtmAlcSarConfEntry 26 }

    wfAtmAlcSarTrafficMgtTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmAlcSarTrafficMgtEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains information relating to the traffic
                management controller in the ATM/ALC SAR device."
        ::= { wfAtmLinkModuleGroup 9 }

    wfAtmAlcSarTrafficMgtEntry OBJECT-TYPE
        SYNTAX	WfAtmAlcSarTrafficMgtEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry definition."
        INDEX	{ wfAtmAlcSarTrafficMgtIndex }
        ::= { wfAtmAlcSarTrafficMgtTable 1 }

    WfAtmAlcSarTrafficMgtEntry ::= SEQUENCE {
    	    wfAtmAlcSarTrafficMgtDelete
    		INTEGER,
    	    wfAtmAlcSarTrafficMgtIndex
    		INTEGER,
    	    wfAtmAlcSarPeakCellRateEna
    		INTEGER,
    	    wfAtmAlcSarAvgCellRateEna
    		INTEGER,
    	    wfAtmAlcSarPeakCellRate
    		INTEGER,
    	    wfAtmAlcSarAvgCellRate
    		INTEGER,
    	    wfAtmAlcSarMaxBurstSize
    		INTEGER
        }

    wfAtmAlcSarTrafficMgtDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/delete MIB instance parameter."
        DEFVAL	{ create }
        ::= { wfAtmAlcSarTrafficMgtEntry 1 }

    wfAtmAlcSarTrafficMgtIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Uniquely identifies the interface that contains the
                appropriate management information."
        ::= { wfAtmAlcSarTrafficMgtEntry 2 }

    wfAtmAlcSarPeakCellRateEna OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable counter for SAR peak transmission rate."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcSarTrafficMgtEntry 3 }

    wfAtmAlcSarAvgCellRateEna OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable counter for SAR average trasnmission rate."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcSarTrafficMgtEntry 4 }

    wfAtmAlcSarPeakCellRate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(365566)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Desired value for SAR total peak cell rate (cells/second)."
        DEFVAL	{ default }
        ::= { wfAtmAlcSarTrafficMgtEntry 5 }

    wfAtmAlcSarAvgCellRate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(365566)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Desired value for SAR total average cell rate (cells/second)."
        DEFVAL	{ default }
        ::= { wfAtmAlcSarTrafficMgtEntry 6 }

    wfAtmAlcSarMaxBurstSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(40)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Desired value for SAR maximum burst size (cells)."
        DEFVAL	{ default }
        ::= { wfAtmAlcSarTrafficMgtEntry 7 }

    wfAtmAlcSarRateQueueTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmAlcSarRateQueueEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains information relating to the peak rate
                queues provided by the ATM/ALC SAR device."
        ::= { wfAtmLinkModuleGroup 10 }

    wfAtmAlcSarRateQueueEntry OBJECT-TYPE
        SYNTAX	WfAtmAlcSarRateQueueEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry definition."
        INDEX	{ wfAtmAlcSarRateQueueIndex,
    		  wfAtmAlcSarRateQueueNumber }
        ::= { wfAtmAlcSarRateQueueTable 1 }

    WfAtmAlcSarRateQueueEntry ::= SEQUENCE {
    	    wfAtmAlcSarRateQueueIndex
    		INTEGER,
    	    wfAtmAlcSarRateQueueNumber
    		INTEGER,
    	    wfAtmAlcSarRateQueueState
    		INTEGER,
    	    wfAtmAlcSarRateQueuePcr
    		INTEGER,
    	    wfAtmAlcSarRateQueueVcs
    		INTEGER,
    	    wfAtmAlcSarRateQueueDef
    		INTEGER
        }

    wfAtmAlcSarRateQueueIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Uniquely identifies the interface that contains the
                appropriate management information."
        ::= { wfAtmAlcSarRateQueueEntry 1 }

    wfAtmAlcSarRateQueueNumber OBJECT-TYPE
        SYNTAX	INTEGER(1..12)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Identifies a particular instance of a rate queue."
        ::= { wfAtmAlcSarRateQueueEntry 2 }

    wfAtmAlcSarRateQueueState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Rate queue state parameter: enabled or disabled."
        ::= { wfAtmAlcSarRateQueueEntry 3 }

    wfAtmAlcSarRateQueuePcr OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Peak Cell Rate (PCR) of rate queue defined in bits per second."
        ::= { wfAtmAlcSarRateQueueEntry 4 }

    wfAtmAlcSarRateQueueVcs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Virtual Connections (VCs) configured for this queue."
        ::= { wfAtmAlcSarRateQueueEntry 5 }

    wfAtmAlcSarRateQueueDef OBJECT-TYPE
        SYNTAX	INTEGER {
    		    implicit(1),
    		    explicit(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the method by which this queue was defined: IMPLICIT means
                that the driver defined the queue when a VC was added; EXPLICIT means
                that the queue was explicitly defined by an entity other than the driver."
        ::= { wfAtmAlcSarRateQueueEntry 6 }

    wfAtmAlcFrmConfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmAlcFrmConfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains configuration information for the
                ATM/ALC FRAMER device."
        ::= { wfAtmLinkModuleGroup 11 }

    wfAtmAlcFrmConfEntry OBJECT-TYPE
        SYNTAX	WfAtmAlcFrmConfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry definition."
        INDEX	{ wfAtmAlcFrmConfIndex }
        ::= { wfAtmAlcFrmConfTable 1 }

    WfAtmAlcFrmConfEntry ::= SEQUENCE {
    	    wfAtmAlcFrmConfDelete
    		INTEGER,
    	    wfAtmAlcFrmConfIndex
    		INTEGER,
    	    wfAtmAlcFrmGenEnable
    		INTEGER,
    	    wfAtmAlcFrmGenFramingMode
    		INTEGER,
    	    wfAtmAlcFrmGenScramblerEna
    		INTEGER,
    	    wfAtmAlcFrmGenDescrambleEna
    		INTEGER,
    	    wfAtmAlcFrmGenLoopback
    		INTEGER,
    	    wfAtmAlcFrmGenSyncFoundCnt
    		INTEGER,
    	    wfAtmAlcFrmGenSyncLostCnt
    		INTEGER,
    	    wfAtmAlcFrmRcvCellEnable
    		INTEGER,
    	    wfAtmAlcFrmRcvOamCrcCheck
    		INTEGER,
    	    wfAtmAlcFrmRcvOamCrcGen
    		INTEGER,
    	    wfAtmAlcFrmRcvCellInsPrio
    		INTEGER,
    	    wfAtmAlcFrmRcvInsertPcr
    		INTEGER,
    	    wfAtmAlcFrmRcvGfcIgnore
    		INTEGER,
    	    wfAtmAlcFrmRcvDescrambleCtl
    		INTEGER,
    	    wfAtmAlcFrmRcvHecRcvMask
    		INTEGER,
    	    wfAtmAlcFrmRcvErrCorrectEna
    		INTEGER,
    	    wfAtmAlcFrmRcvByteAlignment
    		INTEGER,
    	    wfAtmAlcFrmRcvCellSyncFound
    		INTEGER,
    	    wfAtmAlcFrmRcvCellSyncLost
    		INTEGER,
    	    wfAtmAlcFrmRcvExtUserCell
    		INTEGER,
    	    wfAtmAlcFrmRcvExtMetaSig
    		INTEGER,
    	    wfAtmAlcFrmRcvExtBcastSig
    		INTEGER,
    	    wfAtmAlcFrmRcvExtPointSig
    		INTEGER,
    	    wfAtmAlcFrmRcvExtIlmiSig
    		INTEGER,
    	    wfAtmAlcFrmRcvExtF4F5PrfMan
    		INTEGER,
    	    wfAtmAlcFrmRcvExtF1F3PlOam
    		INTEGER,
    	    wfAtmAlcFrmRcvExtF4Segment
    		INTEGER,
    	    wfAtmAlcFrmRcvExtF4EndEnd
    		INTEGER,
    	    wfAtmAlcFrmRcvExtF5Segment
    		INTEGER,
    	    wfAtmAlcFrmRcvExtF5EndEnd
    		INTEGER,
    	    wfAtmAlcFrmRcvDisUserCell
    		INTEGER,
    	    wfAtmAlcFrmRcvDisMetaSig
    		INTEGER,
    	    wfAtmAlcFrmRcvDisBcastSig
    		INTEGER,
    	    wfAtmAlcFrmRcvDisPointSig
    		INTEGER,
    	    wfAtmAlcFrmRcvDisIlmiSig
    		INTEGER,
    	    wfAtmAlcFrmRcvDisUnassCell
    		INTEGER,
    	    wfAtmAlcFrmRcvDisF4Segment
    		INTEGER,
    	    wfAtmAlcFrmRcvDisF4EndEnd
    		INTEGER,
    	    wfAtmAlcFrmRcvDisF5Segment
    		INTEGER,
    	    wfAtmAlcFrmRcvDisF5EndEnd
    		INTEGER,
    	    wfAtmAlcFrmXmtCellEnable
    		INTEGER,
    	    wfAtmAlcFrmXmtOamCrcCheck
    		INTEGER,
    	    wfAtmAlcFrmXmtOamCrcGen
    		INTEGER,
    	    wfAtmAlcFrmXmtCellInsPrio
    		INTEGER,
    	    wfAtmAlcFrmXmtInsertPcr
    		INTEGER,
    	    wfAtmAlcFrmXmtGfcIgnore
    		INTEGER,
    	    wfAtmAlcFrmXmtCellDecouple
    		INTEGER,
    	    wfAtmAlcFrmXmtScrambleCtl
    		INTEGER,
    	    wfAtmAlcFrmXmtHecXmtMask
    		INTEGER,
    	    wfAtmAlcFrmXmtExtUserCell
    		INTEGER,
    	    wfAtmAlcFrmXmtExtMetaSig
    		INTEGER,
    	    wfAtmAlcFrmXmtExtBcastSig
    		INTEGER,
    	    wfAtmAlcFrmXmtExtPointSig
    		INTEGER,
    	    wfAtmAlcFrmXmtExtIlmiSig
    		INTEGER,
    	    wfAtmAlcFrmXmtExtF4F5PrfMan
    		INTEGER,
    	    wfAtmAlcFrmXmtExtF4Segment
    		INTEGER,
    	    wfAtmAlcFrmXmtExtF4EndEnd
    		INTEGER,
    	    wfAtmAlcFrmXmtExtF5Segment
    		INTEGER,
    	    wfAtmAlcFrmXmtExtF5EndEnd
    		INTEGER,
    	    wfAtmAlcFrmXmtDisUserCell
    		INTEGER,
    	    wfAtmAlcFrmXmtDisMetaSig
    		INTEGER,
    	    wfAtmAlcFrmXmtDisBcastSig
    		INTEGER,
    	    wfAtmAlcFrmXmtDisPointSig
    		INTEGER,
    	    wfAtmAlcFrmXmtDisIlmiSig
    		INTEGER,
    	    wfAtmAlcFrmXmtDisUnassCell
    		INTEGER,
    	    wfAtmAlcFrmXmtDisF4Segment
    		INTEGER,
    	    wfAtmAlcFrmXmtDisF4EndEnd
    		INTEGER,
    	    wfAtmAlcFrmXmtDisF5Segment
    		INTEGER,
    	    wfAtmAlcFrmXmtDisF5EndEnd
    		INTEGER,
    	    wfAtmAlcFrmOamEnable
    		INTEGER,
    	    wfAtmAlcFrmOamInvertBip
    		INTEGER,
    	    wfAtmAlcFrmOamTxPathFerf
    		INTEGER,
    	    wfAtmAlcFrmOamTxSectionFerf
    		INTEGER,
    	    wfAtmAlcFrmOamTxPathAis
    		INTEGER,
    	    wfAtmAlcFrmOamTxSectionAis
    		INTEGER,
    	    wfAtmAlcFrmOamTxPathFebe
    		INTEGER,
    	    wfAtmAlcFrmOamTxSectionFebe
    		INTEGER,
    	    wfAtmAlcFrmStatsSwEnable
    		INTEGER,
    	    wfAtmAlcFrmStatsMode
    		INTEGER,
    	    wfAtmAlcFrmStatsReceive
    		INTEGER,
    	    wfAtmAlcFrmStatsTransmit
    		INTEGER,
    	    wfAtmAlcFrmStatsMask
    		INTEGER,
    	    wfAtmAlcFrmStatsTimeout
    		INTEGER,
    	    wfAtmAlcFrmStatsTimerEna
    		INTEGER,
    	    wfAtmAlcFrmStatsOflowEna
    		INTEGER,
    	    wfAtmAlcFrmStatsForceDma
    		INTEGER,
    	    wfAtmAlcFrmCsiEnable
    		INTEGER,
    	    wfAtmAlcFrmCsiLoop
    		INTEGER,
    	    wfAtmAlcFrmCsiRcvAtcEnable
    		INTEGER,
    	    wfAtmAlcFrmCsiRcvAte
    		INTEGER,
    	    wfAtmAlcFrmCsiRcvClpBitOpt
    		INTEGER,
    	    wfAtmAlcFrmCsiRcvCongBitOpt
    		INTEGER,
    	    wfAtmAlcFrmCsiRoutingTag
    		INTEGER,
    	    wfAtmAlcFrmCsiXmtAtcEnable
    		INTEGER,
    	    wfAtmAlcFrmCsiXmtAte
    		INTEGER,
    	    wfAtmAlcFrmCsiXmtClpBitOpt
    		INTEGER,
    	    wfAtmAlcFrmCsiXmtCongBitOpt
    		INTEGER,
    	    wfAtmAlcFrmCsiOmitHec
    		INTEGER,
    	    wfAtmAlcFrmCsiRcvHecEnable
    		INTEGER,
    	    wfAtmAlcFrmCsiRcvHecMask
    		INTEGER,
    	    wfAtmAlcFrmDmaChan0Enable
    		INTEGER,
    	    wfAtmAlcFrmDmaChan1Enable
    		INTEGER,
    	    wfAtmAlcFrmDmaChan2Enable
    		INTEGER,
    	    wfAtmAlcFrmDmaChan3Enable
    		INTEGER,
    	    wfAtmAlcFrmDmaChan4Enable
    		INTEGER,
    	    wfAtmAlcFrmDmaChan5Enable
    		INTEGER,
    	    wfAtmAlcFrmDmaEnable
    		INTEGER,
    	    wfAtmAlcFrmDmaStop
    		INTEGER,
    	    wfAtmAlcFrmDmaPrioritySel
    		INTEGER,
    	    wfAtmAlcFrmDmaFastXferMode
    		INTEGER
        }

    wfAtmAlcFrmConfDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/delete MIB instance parameter."
        DEFVAL	{ create }
        ::= { wfAtmAlcFrmConfEntry 1 }

    wfAtmAlcFrmConfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Uniquely identifies the interface that contains the
                appropriate management information."
        ::= { wfAtmAlcFrmConfEntry 2 }

    wfAtmAlcFrmGenEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rx/Tx framer enable."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcFrmConfEntry 3 }

    wfAtmAlcFrmGenFramingMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    cell(1),
    		    sdh(2),
    		    sonet(3),
    		    ds3(4),
    		    e3(5),
    		    sonetsts1(6),
    		    ds3nonplcp(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Framing (transceiver) mode."
        DEFVAL	{ sonet }
        ::= { wfAtmAlcFrmConfEntry 4 }

    wfAtmAlcFrmGenScramblerEna OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "1+x(6)+x(7) frame scrambler. Only applies to
                framing standards such as SONET/SDH."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcFrmConfEntry 5 }

    wfAtmAlcFrmGenDescrambleEna OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "1+x(6)+x(7) frame descrambler. Only applies to
                framing standards such as SONET/SDH."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcFrmConfEntry 6 }

    wfAtmAlcFrmGenLoopback OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit to receive framer loopback."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 7 }

    wfAtmAlcFrmGenSyncFoundCnt OBJECT-TYPE
        SYNTAX	INTEGER(1..15)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Frame sync found count."
        DEFVAL	{ 7 }
        ::= { wfAtmAlcFrmConfEntry 8 }

    wfAtmAlcFrmGenSyncLostCnt OBJECT-TYPE
        SYNTAX	INTEGER(1..15)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Frame sync lost count."
        DEFVAL	{ 8 }
        ::= { wfAtmAlcFrmConfEntry 9 }

    wfAtmAlcFrmRcvCellEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Cell receiver enable."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcFrmConfEntry 10 }

    wfAtmAlcFrmRcvOamCrcCheck OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "OAM cell CRC check."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 11 }

    wfAtmAlcFrmRcvOamCrcGen OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "OAM cell CRC generate."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcFrmConfEntry 12 }

    wfAtmAlcFrmRcvCellInsPrio OBJECT-TYPE
        SYNTAX	INTEGER {
    		    user(1),
    		    insert(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Cell insert priority."
        DEFVAL	{ user }
        ::= { wfAtmAlcFrmConfEntry 13 }

    wfAtmAlcFrmRcvInsertPcr OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Peak cell insertion rate."
        DEFVAL	{ default }
        ::= { wfAtmAlcFrmConfEntry 14 }

    wfAtmAlcFrmRcvGfcIgnore OBJECT-TYPE
        SYNTAX	INTEGER {
    		    vpi12(1),
    		    vpi8(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "GFC field ignore."
        DEFVAL	{ vpi8 }
        ::= { wfAtmAlcFrmConfEntry 15 }

    wfAtmAlcFrmRcvDescrambleCtl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Descramble control. Only applies to framing standards
                such as SONET/SDH."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcFrmConfEntry 16 }

    wfAtmAlcFrmRcvHecRcvMask OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "HEC receive mask."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcFrmConfEntry 17 }

    wfAtmAlcFrmRcvErrCorrectEna OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Error correction enable."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcFrmConfEntry 18 }

    wfAtmAlcFrmRcvByteAlignment OBJECT-TYPE
        SYNTAX	INTEGER {
    		    nonalign(1),
    		    align(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Byte alignment."
        DEFVAL	{ nonalign }
        ::= { wfAtmAlcFrmConfEntry 19 }

    wfAtmAlcFrmRcvCellSyncFound OBJECT-TYPE
        SYNTAX	INTEGER(1..15)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Cell sync found count."
        DEFVAL	{ 7 }
        ::= { wfAtmAlcFrmConfEntry 20 }

    wfAtmAlcFrmRcvCellSyncLost OBJECT-TYPE
        SYNTAX	INTEGER(1..15)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Cell sync lost count."
        DEFVAL	{ 8 }
        ::= { wfAtmAlcFrmConfEntry 21 }

    wfAtmAlcFrmRcvExtUserCell OBJECT-TYPE
        SYNTAX	INTEGER {
    		    disabled(1),
    		    defined(2),
    		    undefined(3),
    		    invalid(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract user defined cell."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 22 }

    wfAtmAlcFrmRcvExtMetaSig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract meta signalling."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 23 }

    wfAtmAlcFrmRcvExtBcastSig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract broadcast signalling."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 24 }

    wfAtmAlcFrmRcvExtPointSig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract point-point signalling."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 25 }

    wfAtmAlcFrmRcvExtIlmiSig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract ILMI signalling."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 26 }

    wfAtmAlcFrmRcvExtF4F5PrfMan OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract F4/F5 performance man."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 27 }

    wfAtmAlcFrmRcvExtF1F3PlOam OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract F1/F3 PL-OAM."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 28 }

    wfAtmAlcFrmRcvExtF4Segment OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract F4 segment (FM and AD)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 29 }

    wfAtmAlcFrmRcvExtF4EndEnd OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract F4 end-end (FM and AD)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 30 }

    wfAtmAlcFrmRcvExtF5Segment OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract F5 segment (FM and AD)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 31 }

    wfAtmAlcFrmRcvExtF5EndEnd OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract F5 end-end (FM and AD)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 32 }

    wfAtmAlcFrmRcvDisUserCell OBJECT-TYPE
        SYNTAX	INTEGER {
    		    disabled(1),
    		    defined(2),
    		    undefined(3),
    		    invalid(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard user defined cell."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 33 }

    wfAtmAlcFrmRcvDisMetaSig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard meta signalling."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 34 }

    wfAtmAlcFrmRcvDisBcastSig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard broadcast signalling."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 35 }

    wfAtmAlcFrmRcvDisPointSig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard point-point signalling."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 36 }

    wfAtmAlcFrmRcvDisIlmiSig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard ILMI signalling."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 37 }

    wfAtmAlcFrmRcvDisUnassCell OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard unassigned cell."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcFrmConfEntry 38 }

    wfAtmAlcFrmRcvDisF4Segment OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard F4 segment (FM and AD)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 39 }

    wfAtmAlcFrmRcvDisF4EndEnd OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard F4 end-end (FM and AD)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 40 }

    wfAtmAlcFrmRcvDisF5Segment OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard F5 segment (FM and AD)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 41 }

    wfAtmAlcFrmRcvDisF5EndEnd OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard F5 end-end (FM and AD)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 42 }

    wfAtmAlcFrmXmtCellEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Cell transmitter enable."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcFrmConfEntry 43 }

    wfAtmAlcFrmXmtOamCrcCheck OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "OAM cell CRC check."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 44 }

    wfAtmAlcFrmXmtOamCrcGen OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "OAM cell CRC generate."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcFrmConfEntry 45 }

    wfAtmAlcFrmXmtCellInsPrio OBJECT-TYPE
        SYNTAX	INTEGER {
    		    user(1),
    		    insert(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Cell insert priority."
        DEFVAL	{ user }
        ::= { wfAtmAlcFrmConfEntry 46 }

    wfAtmAlcFrmXmtInsertPcr OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Peak cell insertion rate."
        DEFVAL	{ default }
        ::= { wfAtmAlcFrmConfEntry 47 }

    wfAtmAlcFrmXmtGfcIgnore OBJECT-TYPE
        SYNTAX	INTEGER {
    		    vpi12(1),
    		    vpi8(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "GFC field ignore."
        DEFVAL	{ vpi8 }
        ::= { wfAtmAlcFrmConfEntry 48 }

    wfAtmAlcFrmXmtCellDecouple OBJECT-TYPE
        SYNTAX	INTEGER {
    		    idle(1),
    		    unassign(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Cell rate decoupling."
        DEFVAL	{ unassign }
        ::= { wfAtmAlcFrmConfEntry 49 }

    wfAtmAlcFrmXmtScrambleCtl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Scramble control. Only applies to framing standards
                such as SONET/SDH."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcFrmConfEntry 50 }

    wfAtmAlcFrmXmtHecXmtMask OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "HEC transmit mask."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcFrmConfEntry 51 }

    wfAtmAlcFrmXmtExtUserCell OBJECT-TYPE
        SYNTAX	INTEGER {
    		    disabled(1),
    		    defined(2),
    		    undefined(3),
    		    invalid(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract user defined cell."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 52 }

    wfAtmAlcFrmXmtExtMetaSig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract meta signalling."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 53 }

    wfAtmAlcFrmXmtExtBcastSig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract broadcast signalling."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 54 }

    wfAtmAlcFrmXmtExtPointSig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract point-point signalling."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 55 }

    wfAtmAlcFrmXmtExtIlmiSig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract ILMI signalling."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 56 }

    wfAtmAlcFrmXmtExtF4F5PrfMan OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract F4/F5 performance man."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 57 }

    wfAtmAlcFrmXmtExtF4Segment OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract F4 segment (FM and AD)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 58 }

    wfAtmAlcFrmXmtExtF4EndEnd OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract F4 end-end (FM and AD)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 59 }

    wfAtmAlcFrmXmtExtF5Segment OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract F5 segment (FM and AD)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 60 }

    wfAtmAlcFrmXmtExtF5EndEnd OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Extract F5 end-end (FM and AD)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 61 }

    wfAtmAlcFrmXmtDisUserCell OBJECT-TYPE
        SYNTAX	INTEGER {
    		    disabled(1),
    		    defined(2),
    		    undefined(3),
    		    invalid(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard user defined cell."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 62 }

    wfAtmAlcFrmXmtDisMetaSig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard meta signalling."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 63 }

    wfAtmAlcFrmXmtDisBcastSig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard broadcast signalling."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 64 }

    wfAtmAlcFrmXmtDisPointSig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard point-point signalling."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 65 }

    wfAtmAlcFrmXmtDisIlmiSig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard ILMI signalling."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 66 }

    wfAtmAlcFrmXmtDisUnassCell OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard unassigned cell."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 67 }

    wfAtmAlcFrmXmtDisF4Segment OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard F4 segment (FM and AD)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 68 }

    wfAtmAlcFrmXmtDisF4EndEnd OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard F4 end-end (FM and AD)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 69 }

    wfAtmAlcFrmXmtDisF5Segment OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard F5 segment (FM and AD)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 70 }

    wfAtmAlcFrmXmtDisF5EndEnd OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Discard F5 end-end (FM and AD)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 71 }

    wfAtmAlcFrmOamEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "OAM controller enable."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 72 }

    wfAtmAlcFrmOamInvertBip OBJECT-TYPE
        SYNTAX	INTEGER {
    		    normal(1),
    		    invert(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Invert BIP."
        DEFVAL	{ normal }
        ::= { wfAtmAlcFrmConfEntry 73 }

    wfAtmAlcFrmOamTxPathFerf OBJECT-TYPE
        SYNTAX	INTEGER {
    		    clear(1),
    		    auto(2),
    		    set(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx path FERF."
        DEFVAL	{ clear }
        ::= { wfAtmAlcFrmConfEntry 74 }

    wfAtmAlcFrmOamTxSectionFerf OBJECT-TYPE
        SYNTAX	INTEGER {
    		    clear(1),
    		    auto(2),
    		    set(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx section FERF."
        DEFVAL	{ clear }
        ::= { wfAtmAlcFrmConfEntry 75 }

    wfAtmAlcFrmOamTxPathAis OBJECT-TYPE
        SYNTAX	INTEGER {
    		    clear(1),
    		    set(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx path AIS."
        DEFVAL	{ clear }
        ::= { wfAtmAlcFrmConfEntry 76 }

    wfAtmAlcFrmOamTxSectionAis OBJECT-TYPE
        SYNTAX	INTEGER {
    		    clear(1),
    		    set(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx section AIS."
        DEFVAL	{ clear }
        ::= { wfAtmAlcFrmConfEntry 77 }

    wfAtmAlcFrmOamTxPathFebe OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx path FEBE (B3)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 78 }

    wfAtmAlcFrmOamTxSectionFebe OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx section FEBE (B3)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 79 }

    wfAtmAlcFrmStatsSwEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Switch statistics handler."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 80 }

    wfAtmAlcFrmStatsMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    disabled(1),
    		    header(2),
    		    header16(3),
    		    header32(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Statistics controller mode."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 81 }

    wfAtmAlcFrmStatsReceive OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive user statistics."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 82 }

    wfAtmAlcFrmStatsTransmit OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit statistics."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 83 }

    wfAtmAlcFrmStatsMask OBJECT-TYPE
        SYNTAX	INTEGER {
    		    disabled(1),
    		    hmask(2),
    		    invalid(3),
    		    lmask(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "VP/VC filter mask."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 84 }

    wfAtmAlcFrmStatsTimeout OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Statistics DMA transfer timeout."
        ::= { wfAtmAlcFrmConfEntry 85 }

    wfAtmAlcFrmStatsTimerEna OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Timer enable (DMA)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 86 }

    wfAtmAlcFrmStatsOflowEna OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Overflow enable (DMA)."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 87 }

    wfAtmAlcFrmStatsForceDma OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    dma(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Force DMA transfer."
        DEFVAL	{ other }
        ::= { wfAtmAlcFrmConfEntry 88 }

    wfAtmAlcFrmCsiEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Cell stream enable."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcFrmConfEntry 89 }

    wfAtmAlcFrmCsiLoop OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "CSI rx/tx loopback."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 90 }

    wfAtmAlcFrmCsiRcvAtcEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive ATC enable."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcFrmConfEntry 91 }

    wfAtmAlcFrmCsiRcvAte OBJECT-TYPE
        SYNTAX	INTEGER {
    		    discard(1),
    		    forward(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Address translation error (receive)."
        DEFVAL	{ discard }
        ::= { wfAtmAlcFrmConfEntry 92 }

    wfAtmAlcFrmCsiRcvClpBitOpt OBJECT-TYPE
        SYNTAX	INTEGER {
    		    header(1),
    		    xlat(2),
    		    force0(3),
    		    force1(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "CLP bit option (receive)."
        DEFVAL	{ header }
        ::= { wfAtmAlcFrmConfEntry 93 }

    wfAtmAlcFrmCsiRcvCongBitOpt OBJECT-TYPE
        SYNTAX	INTEGER {
    		    header(1),
    		    xlat(2),
    		    force0(3),
    		    force1(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "PLT congestion bit option (receive)."
        DEFVAL	{ header }
        ::= { wfAtmAlcFrmConfEntry 94 }

    wfAtmAlcFrmCsiRoutingTag OBJECT-TYPE
        SYNTAX	INTEGER {
    		    tag0(1),
    		    tag1(2),
    		    tag2(3),
    		    tag3(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Routing tag byte size."
        DEFVAL	{ tag0 }
        ::= { wfAtmAlcFrmConfEntry 95 }

    wfAtmAlcFrmCsiXmtAtcEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit ATC enable."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 96 }

    wfAtmAlcFrmCsiXmtAte OBJECT-TYPE
        SYNTAX	INTEGER {
    		    discard(1),
    		    forward(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Address translation error (transmit)."
        DEFVAL	{ discard }
        ::= { wfAtmAlcFrmConfEntry 97 }

    wfAtmAlcFrmCsiXmtClpBitOpt OBJECT-TYPE
        SYNTAX	INTEGER {
    		    header(1),
    		    xlat(2),
    		    force0(3),
    		    force1(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "CLP bit option (transmit)."
        DEFVAL	{ header }
        ::= { wfAtmAlcFrmConfEntry 98 }

    wfAtmAlcFrmCsiXmtCongBitOpt OBJECT-TYPE
        SYNTAX	INTEGER {
    		    header(1),
    		    xlat(2),
    		    force0(3),
    		    force1(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "PLT congestion bit option (transmit)."
        DEFVAL	{ header }
        ::= { wfAtmAlcFrmConfEntry 99 }

    wfAtmAlcFrmCsiOmitHec OBJECT-TYPE
        SYNTAX	INTEGER {
    		    cell53byte(1),
    		    cell52byte(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Omit HEC byte on transmit."
        DEFVAL	{ cell53byte }
        ::= { wfAtmAlcFrmConfEntry 100 }

    wfAtmAlcFrmCsiRcvHecEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "HEC generator enable."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcFrmConfEntry 101 }

    wfAtmAlcFrmCsiRcvHecMask OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "ASCI rx path HEC mask."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcFrmConfEntry 102 }

    wfAtmAlcFrmDmaChan0Enable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DMA channel 0 enable."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 103 }

    wfAtmAlcFrmDmaChan1Enable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DMA channel 1 enable."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 104 }

    wfAtmAlcFrmDmaChan2Enable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DMA channel 2 enable."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 105 }

    wfAtmAlcFrmDmaChan3Enable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DMA channel 3 enable."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 106 }

    wfAtmAlcFrmDmaChan4Enable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DMA channel 4 enable."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 107 }

    wfAtmAlcFrmDmaChan5Enable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DMA channel 5 enable."
        DEFVAL	{ disabled }
        ::= { wfAtmAlcFrmConfEntry 108 }

    wfAtmAlcFrmDmaEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DMA controller enable."
        DEFVAL	{ enabled }
        ::= { wfAtmAlcFrmConfEntry 109 }

    wfAtmAlcFrmDmaStop OBJECT-TYPE
        SYNTAX	INTEGER {
    		    notstopped(1),
    		    stopped(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DMA stop."
        DEFVAL	{ notstopped }
        ::= { wfAtmAlcFrmConfEntry 110 }

    wfAtmAlcFrmDmaPrioritySel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    chan0prio(1),
    		    chan5prio(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Priority select."
        DEFVAL	{ chan0prio }
        ::= { wfAtmAlcFrmConfEntry 111 }

    wfAtmAlcFrmDmaFastXferMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    descdma(1),
    		    fastdma(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Fast transfer mode."
        DEFVAL	{ descdma }
        ::= { wfAtmAlcFrmConfEntry 112 }

    wfAtmizerCfgTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmizerCfgEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ARE ATMizer Configuration Record"
        ::= { wfAtmCellSwitchGroup 1 }

    wfAtmizerCfgEntry OBJECT-TYPE
        SYNTAX	WfAtmizerCfgEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Information about a Transmit/Receive pair of ATMizers"
        INDEX	{ wfAtmizerCfgSlot }
        ::= { wfAtmizerCfgTable 1 }

    WfAtmizerCfgEntry ::= SEQUENCE {
    	    wfAtmizerCfgSlot
    		INTEGER,
    	    wfAtmizerCfgMaxVcl
    		INTEGER,
    	    wfAtmizerCfgCurrVcl
    		INTEGER,
    	    wfAtmizerCfgRxQueueLenMax
    		INTEGER,
    	    wfAtmizerCfgRxQueueTmoMax
    		INTEGER,
    	    wfAtmizerCfgRxBuffersMax
    		INTEGER,
    	    wfAtmizerCfgRxPagesMax
    		INTEGER,
    	    wfAtmizerCfgTxBuffersMax
    		INTEGER,
    	    wfAtmizerCfgTxPagesMax
    		INTEGER,
    	    wfAtmizerCfgTxPercentRsrcs
    		INTEGER,
    	    wfAtmizerCfgHeartbeatPeriod
    		INTEGER,
    	    wfAtmizerRxBuffersMax
    		INTEGER,
    	    wfAtmizerRxPagesMax
    		INTEGER,
    	    wfAtmizerTxBuffersMax
    		INTEGER,
    	    wfAtmizerTxPagesMax
    		INTEGER,
    	    wfAtmizerTxPercentRsrcs
    		INTEGER
        }

    wfAtmizerCfgSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number -- instance id."
        ::= { wfAtmizerCfgEntry 1 }

    wfAtmizerCfgMaxVcl OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum size of a Virtual Channel Links (VCLs) which can be
                supported by the ATMizers."
        ::= { wfAtmizerCfgEntry 2 }

    wfAtmizerCfgCurrVcl OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of  Virtual Channel Links (VCLs) currently active on the slot."
        ::= { wfAtmizerCfgEntry 3 }

    wfAtmizerCfgRxQueueLenMax OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum size of a receive buffer list which will be delivered
                by the RX ATMizer to the driver."
        DEFVAL	{ default }
        ::= { wfAtmizerCfgEntry 4 }

    wfAtmizerCfgRxQueueTmoMax OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(50)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum amount of time (in microseconds) the RX ATMizer will wait
                before delivering its queue of receive buffers to the driver."
        DEFVAL	{ default }
        ::= { wfAtmizerCfgEntry 5 }

    wfAtmizerCfgRxBuffersMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of receive buffers which the RX ATMizer can own
                before encountering a lack of resources. This is a
                configurable option and does not indicate the true value."
        ::= { wfAtmizerCfgEntry 6 }

    wfAtmizerCfgRxPagesMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of additional physical pages which the RX ATMizer
                can own before encountering a lack of resources. This is a
                configurable option and does not indicate the true value."
        ::= { wfAtmizerCfgEntry 7 }

    wfAtmizerCfgTxBuffersMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of transmit buffers which the TX ATMizer can own
                before it begins clipping. This is a configurable option
                and does not indicate the true value."
        ::= { wfAtmizerCfgEntry 8 }

    wfAtmizerCfgTxPagesMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of additional physical pages which the TX ATMizer
                can own before encountering a lack of resources. This is
                a configurable option and does not indicate the true value."
        ::= { wfAtmizerCfgEntry 9 }

    wfAtmizerCfgTxPercentRsrcs OBJECT-TYPE
        SYNTAX	INTEGER {
                    default(50)
                }
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum percentage of transmit buffers which the
                transmit driver can hold before it begins clipping. This
                is a configurable option and does not indicate the true value."
        DEFVAL  { default }
        ::= { wfAtmizerCfgEntry 10 }

    wfAtmizerCfgHeartbeatPeriod OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The timer period, in seconds, which defines how often heartbeat messages
                are sent to the ATMizers."
        DEFVAL	{ default }
        ::= { wfAtmizerCfgEntry 11 }

    wfAtmizerRxBuffersMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of receive buffers which the RX ATMizer can own
                before encountering a lack of resources. This value
                indicates the true value of the Rx buffers available."
        ::= { wfAtmizerCfgEntry 12 }

    wfAtmizerRxPagesMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of additional physical pages which the RX ATMizer
                can own before encountering a lack of resources. This
                value indicates the true value of the Rx Pages available."
        ::= { wfAtmizerCfgEntry 13 }

    wfAtmizerTxBuffersMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of transmit buffers which the TX ATMizer can own
                before it begins clipping. This value indicates the true
                value of the Tx buffers available."
        ::= { wfAtmizerCfgEntry 14 }

    wfAtmizerTxPagesMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of additional physical pages which the TX ATMizer
                can own before encountering a lack of resources. This
                value indicates the true value of the Tx pagess available."
        ::= { wfAtmizerCfgEntry 15 }

    wfAtmizerTxPercentRsrcs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum percentage of transmit buffers which the
                transmit driver can hold before it begins clipping."
        ::= { wfAtmizerCfgEntry 16 }

    wfAtmizerDrvCfgTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmizerDrvCfgEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ATMizer Line Driver Configuration Record"
        ::= { wfAtmCellSwitchGroup 2 }

    wfAtmizerDrvCfgEntry OBJECT-TYPE
        SYNTAX	WfAtmizerDrvCfgEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Information about a particular driver"
        INDEX	{ wfAtmizerDrvCfgSlot,
    		  wfAtmizerDrvCfgPort }
        ::= { wfAtmizerDrvCfgTable 1 }

    WfAtmizerDrvCfgEntry ::= SEQUENCE {
    	    wfAtmizerDrvCfgDelete
    		INTEGER,
    	    wfAtmizerDrvCfgEnable
    		INTEGER,
    	    wfAtmizerDrvCfgState
    		INTEGER,
    	    wfAtmizerDrvCfgSlot
    		INTEGER,
    	    wfAtmizerDrvCfgPort
    		INTEGER,
    	    wfAtmizerDrvCfgCct
    		INTEGER,
    	    wfAtmizerDrvCfgLineNumber
    		INTEGER,
    	    wfAtmizerDrvCfgType
    		INTEGER,
    	    wfAtmizerDrvCfgMtu
    		INTEGER,
    	    wfAtmizerDrvCfgSpeed
    		INTEGER,
    	    wfAtmizerDrvCfgDpNotify
    		INTEGER,
    	    wfAtmizerDrvCfgDpNotifyTimeout
    		INTEGER,
    	    wfAtmizerDrvCfgVcInactEnable
    		INTEGER,
    	    wfAtmizerDrvCfgVcInactTimeout
    		INTEGER,
    	    wfAtmizerDrvCfgMadrCt
    		INTEGER,
    	    wfAtmizerDrvCfgMadr
    		OCTET STRING,
    	    wfAtmizerDrvCfgFramingMode
    		INTEGER,
    	    wfAtmizerDrvCfgClkSource
    		INTEGER,
    	    wfAtmizerDrvCfgLogLevel
    		INTEGER,
    	    wfAtmizerDrvCfgDsx3SendCode
    		INTEGER,
    	    wfAtmizerDrvCfgDsx3LoopbackConfig
    		INTEGER,
    	    wfAtmizerDrvCfgDs3Scrambling
    		INTEGER,
    	    wfAtmizerDrvCfgDs3LineBuildOut
    		INTEGER
        }

    wfAtmizerDrvCfgDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/delete MIB instance parameter."
        DEFVAL	{ create }
        ::= { wfAtmizerDrvCfgEntry 1 }

    wfAtmizerDrvCfgEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/disable driver parameter."
        DEFVAL	{ enable }
        ::= { wfAtmizerDrvCfgEntry 2 }

    wfAtmizerDrvCfgState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(20)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Driver state parameter. This parameter does not represent the state
                of the physical interface!"
        DEFVAL	{ notpresent }
        ::= { wfAtmizerDrvCfgEntry 3 }

    wfAtmizerDrvCfgSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number -- instance id."
        ::= { wfAtmizerDrvCfgEntry 4 }

    wfAtmizerDrvCfgPort OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Physical port number -- instance id."
        ::= { wfAtmizerDrvCfgEntry 5 }

    wfAtmizerDrvCfgCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Circuit number for the driver."
        ::= { wfAtmizerDrvCfgEntry 6 }

    wfAtmizerDrvCfgLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The LineNumber is an Index value used to uniquely identify
                an instance of a physical ATM port. This value shall be used
                as an instance identifier for ATM MIB objects."
        ::= { wfAtmizerDrvCfgEntry 7 }

    wfAtmizerDrvCfgType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    sonet(1),
    		    ds3(2),
    		    e3(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The type of interface. This attribute is an alias for 'ifType."
        ::= { wfAtmizerDrvCfgEntry 8 }

    wfAtmizerDrvCfgMtu OBJECT-TYPE
        SYNTAX	INTEGER(0..9188)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The size of the largest packet which can be sent/received on the
                interface, specified in octets. This attribute is an alias for
                'ifMtu'."
        DEFVAL	{ 4608 }
        ::= { wfAtmizerDrvCfgEntry 9 }

    wfAtmizerDrvCfgSpeed OBJECT-TYPE
        SYNTAX	INTEGER {
    		    speed155mb(155520000),
    		    speed140mb(140000000),
    		    speed100mb(100000000),
    		    speed45mb(44736000),
    		    speed35mb(34368000)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "An estimate of the interface's current bandwidth in bits per
                second. This attribute is an alias for 'ifSpeed'."
        ::= { wfAtmizerDrvCfgEntry 10 }

    wfAtmizerDrvCfgDpNotify OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Data Path (DP) notify function. This function, when enabled,
                will disable the DP interface when the physical interface becomes
                non-operational."
        DEFVAL	{ enable }
        ::= { wfAtmizerDrvCfgEntry 11 }

    wfAtmizerDrvCfgDpNotifyTimeout OBJECT-TYPE
        SYNTAX	INTEGER(0..3600)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Data Path (DP) notify function timeout period. This value specifies
                the number of seconds to wait before implementing the DP notify
                function. A timer will get set to this value when the state of
                the physical interface transitions from operational to
                non-operational when the DP notify function is enabled."
        DEFVAL	{ 1 }
        ::= { wfAtmizerDrvCfgEntry 12 }

    wfAtmizerDrvCfgVcInactEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Inactivity timeout value for all SVCs on this interface in seconds.
                If no cells have been transmitted or received on an SVC over the given
                timeout period then the SVC will be closed.  If this value is set to
                zero, then the SVCs inactivity timer will be disabled for this interface."
        DEFVAL	{ enable }
        ::= { wfAtmizerDrvCfgEntry 13 }

    wfAtmizerDrvCfgVcInactTimeout OBJECT-TYPE
        SYNTAX	INTEGER(60..3600)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Inactivity timeout value for all SVCs on this interface in seconds.
                If no cells have been transmitted or received on an SVC over the given
                timeout period then the SVC will be closed."
        DEFVAL	{ 1200 }
        ::= { wfAtmizerDrvCfgEntry 14 }

    wfAtmizerDrvCfgMadrCt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of PROM-based MAC addresses."
        ::= { wfAtmizerDrvCfgEntry 15 }

    wfAtmizerDrvCfgMadr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "First MAC address in canonical format (i.e., 00-00-a2...). The number of
                subsequent MAC addresses is specified by wfAtmizerDrvCfgMadrCt which are
                sequential."
        ::= { wfAtmizerDrvCfgEntry 16 }

    wfAtmizerDrvCfgFramingMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    sdh(1),
    		    sonet(2),
    		    cbit(3),
    		    m23(4),
    		    g751(5),
    		    g832(6)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The framing (transceiver) mode for the physical interface"
        DEFVAL	{ sonet }
        ::= { wfAtmizerDrvCfgEntry 17 }

    wfAtmizerDrvCfgClkSource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    intrn(1),
    		    extrn(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Source of the physical interface clocking signal, either internal or
                external."
        DEFVAL	{ intrn }
        ::= { wfAtmizerDrvCfgEntry 18 }

    wfAtmizerDrvCfgLogLevel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    atmcdbg(1),
    		    atmcdb2(2),
    		    vcmsg(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask which controls the amount of logging done by the ATM driver.
                If a bit in the mask is set, it enables logging of an event class.  If
                a bit is cleared, it disables logging of an event class.

                     -----------------------------------
                     |                                 |
                     -----------------------------------
                      31                              0

                       bit 0 - Link Module Coprocessor debug events
                       bit 1 - VC setup/teardown events"
        ::= { wfAtmizerDrvCfgEntry 19 }

    wfAtmizerDrvCfgDsx3SendCode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    line(2),
    		    payload(3),
    		    reset(4),
    		    loop(5),
    		    pattern(6)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This variable indicates what type of code is being sent across
                DS3/E3 interface by the device. (These are optional for E3
                interfaces.) The values mean:

                ATM_DSX3_SEND_CODE_NONE    : Sending looped or normal data.
                ATM_DSX3_SEND_CODE_LINE    : Sending a request for line loopback.
                ATM_DSX3_SEND_CODE_PAYLOAD : Sending a request for a payload
                 loopback. (i.e., all Ds1/E1s in a
                 DS3/E3 frame)
                ATM_DSX3_SEND_CODE_RESET   : Sending a loopback deactivation
                 request.
                ATM_DSX3_SEND_CODE_DS1_LOOP: Requesting to loopback a particular
                 DS1/E1 within a DS3/E3 frame.
                ATM_DSX3_SEND_TEST_PATTERN : Sending a test pattern."
        DEFVAL	{ none }
        ::= { wfAtmizerDrvCfgEntry 20 }

    wfAtmizerDrvCfgDsx3LoopbackConfig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    payload(2),
    		    line(3),
    		    other(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This variable represents the loopback configuration of the DS3/E3
                interface. Ther values mean:

                ATM_DSX3_LOOPBACK_NONE    :  Not in the loopback state/ A device
                 that is not capable of performing a
                 loopback on the interface shall always
                 return this as it's value.
                ATM_DSX3_LOOPBACK_PAYLOAD :  The received signal at this interface
                 is looped through the
                 device. Typically the received signal
                 is looped back for retransmission
                 after it has passed through the
                 device's framing function.

                ATM_DSX3_LOOPBACK_LINE    :  The received signal at this interface
                 does not go through the device
                 (minimum penetration) but is looped
                 back out.

                ATM_DSX3_LOOPBACK_OTHER   :  Loopback's that are not defined here."
        DEFVAL	{ none }
        ::= { wfAtmizerDrvCfgEntry 21 }

    wfAtmizerDrvCfgDs3Scrambling OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This variable represents if scrambling is turned on or off"
        DEFVAL	{ on }
        ::= { wfAtmizerDrvCfgEntry 22 }

    wfAtmizerDrvCfgDs3LineBuildOut OBJECT-TYPE
        SYNTAX	INTEGER {
    		    short(1),
    		    long(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This variable represents the Line Build Out for the DS3 short and
                long cables. "
        DEFVAL	{ short }
        ::= { wfAtmizerDrvCfgEntry 23 }

    wfAtmizerIntfStatsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmizerIntfStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ARE Line Driver Statistics Record"
        ::= { wfAtmCellSwitchGroup 3 }

    wfAtmizerIntfStatsEntry OBJECT-TYPE
        SYNTAX	WfAtmizerIntfStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Information about a particular driver"
        INDEX	{ wfAtmizerIntfSlot,
    		  wfAtmizerIntfPort }
        ::= { wfAtmizerIntfStatsTable 1 }

    WfAtmizerIntfStatsEntry ::= SEQUENCE {
    	    wfAtmizerIntfSlot
    		INTEGER,
    	    wfAtmizerIntfPort
    		INTEGER,
    	    wfAtmizerIntfLastChange
    		TimeTicks,
    	    wfAtmizerIntfOutQLen
    		Gauge,
    	    wfAtmizerIntfStatus
    		INTEGER,
    	    wfAtmizerIntfIndex
    		INTEGER,
    	    wfAtmizerIntfOcdEvents
    		Counter,
    	    wfAtmizerIntfTcAlarmState
    		INTEGER,
    	    wfAtmizerIntfRxPacketsOkWrap
    		Counter,
    	    wfAtmizerIntfRxPacketsOk
    		Counter,
    	    wfAtmizerIntfRxCellsOkWrap
    		Counter,
    	    wfAtmizerIntfRxCellsOk
    		Counter,
    	    wfAtmizerIntfRxOamCount
    		Counter,
    	    wfAtmizerIntfRxFlowCtrlCount
    		Counter,
    	    wfAtmizerIntfRxInvalidHeaders
    		Counter,
    	    wfAtmizerIntfRxOverSizedSDUs
    		Counter,
    	    wfAtmizerIntfRxCrcErrors
    		Counter,
    	    wfAtmizerIntfRxCrc10Errors
    		Counter,
    	    wfAtmizerIntfRxLackBufCredits
    		Counter,
    	    wfAtmizerIntfRxLackPageCredits
    		Counter,
    	    wfAtmizerIntfRxLackBufResc
    		Counter,
    	    wfAtmizerIntfRxLackPageResc
    		Counter,
    	    wfAtmizerIntfTxPacketsOkWrap
    		Counter,
    	    wfAtmizerIntfTxPacketsOk
    		Counter,
    	    wfAtmizerIntfTxCellsOkWrap
    		Counter,
    	    wfAtmizerIntfTxCellsOk
    		Counter,
    	    wfAtmizerIntfTxOamCount
    		Counter,
    	    wfAtmizerIntfTxFlowCtrlCount
    		Counter,
    	    wfAtmizerIntfTxBadVcs
    		Counter,
    	    wfAtmizerIntfTxOverSizedSDUs
    		Counter,
    	    wfAtmizerIntfTxLackBufCredits
    		Counter,
    	    wfAtmizerIntfTxLackPageCredits
    		Counter,
    	    wfAtmizerIntfTxDrvClipCount
    		Counter,
    	    wfAtmizerIntfHecDetectedCount
    		Counter,
    	    wfAtmizerIntfHecCorrectedCount
    		Counter
        }

    wfAtmizerIntfSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number -- instance id."
        ::= { wfAtmizerIntfStatsEntry 1 }

    wfAtmizerIntfPort OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Physical port number -- instance id."
        ::= { wfAtmizerIntfStatsEntry 2 }

    wfAtmizerIntfLastChange OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The time (in hundreths of a second) since the network management
                portion of the system was last re-initialized. This attribute is
                an alias for 'ifLastChange' in the MIBII System Group."
        ::= { wfAtmizerIntfStatsEntry 3 }

    wfAtmizerIntfOutQLen OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This attribute is an alias for 'ifOutQLen' in the MIBII interface
                group."
        ::= { wfAtmizerIntfStatsEntry 4 }

    wfAtmizerIntfStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    testing(3),
    		    unknown(4),
    		    dormant(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "MIB-II ifOperStatus"
        DEFVAL	{ unknown }
        ::= { wfAtmizerIntfStatsEntry 5 }

    wfAtmizerIntfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "MIB-II interface index"
        ::= { wfAtmizerIntfStatsEntry 6 }

    wfAtmizerIntfOcdEvents OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the Out of Cell Delineation (OCD) events occur. If
                seven consecutive ATM cells have Header Error Control (HEC) violations,
                an OCD event occurs. A high number of OCD events may indicate a problem
                with the TC sublayer."
        ::= { wfAtmizerIntfStatsEntry 7 }

    wfAtmizerIntfTcAlarmState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    alarm(1),
    		    failure(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This variable indicates if there is an alarm present for the TC sublayer.
                The value ATM_LCD_FAILURE indicates that a Loss of Cell Delineation (LCD)
                failure state has been declared for the TC sublayer. Transition from
                failure to the ATM_NO_ALARM state occurs when six consecutive ATM cells
                are received with valid HEC, followed by about 10 seconds of acceptable
                working signal."
        ::= { wfAtmizerIntfStatsEntry 8 }

    wfAtmizerIntfRxPacketsOkWrap OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the wfAtmizerIntfRxPacketsOk counter has wrapped."
        ::= { wfAtmizerIntfStatsEntry 9 }

    wfAtmizerIntfRxPacketsOk OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Service Data Units (SDUs) received without error."
        ::= { wfAtmizerIntfStatsEntry 10 }

    wfAtmizerIntfRxCellsOkWrap OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the wfAtmizerIntfRxCellsOk counter has wrapped."
        ::= { wfAtmizerIntfStatsEntry 11 }

    wfAtmizerIntfRxCellsOk OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of reassembled Service Data Unit (SDU) cells received without
                error."
        ::= { wfAtmizerIntfStatsEntry 12 }

    wfAtmizerIntfRxOamCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of F4/F5 OAM Cells received on this interface."
        ::= { wfAtmizerIntfStatsEntry 13 }

    wfAtmizerIntfRxFlowCtrlCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Flow Control OAM Cells received on this interface."
        ::= { wfAtmizerIntfStatsEntry 14 }

    wfAtmizerIntfRxInvalidHeaders OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of receive cells dropped because of bad header fields
                (invalid VPI/VCI, non-zero GFC, bad PTI field)."
        ::= { wfAtmizerIntfStatsEntry 15 }

    wfAtmizerIntfRxOverSizedSDUs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of receive packets dropped because the reassembled SDU
                was greater than the MTU for this interface."
        ::= { wfAtmizerIntfStatsEntry 16 }

    wfAtmizerIntfRxCrcErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received cells dropped because of an invalid CRC."
        ::= { wfAtmizerIntfStatsEntry 17 }

    wfAtmizerIntfRxCrc10Errors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of OAM cells dropped because of an invalid CRC-10."
        ::= { wfAtmizerIntfStatsEntry 18 }

    wfAtmizerIntfRxLackBufCredits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets lost on this interface because no receive
                buffer space was available to the receiver for incoming data."
        ::= { wfAtmizerIntfStatsEntry 19 }

    wfAtmizerIntfRxLackPageCredits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets lost on this interface because no physical
                pages were available to the receiver for incoming data."
        ::= { wfAtmizerIntfStatsEntry 20 }

    wfAtmizerIntfRxLackBufResc OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets lost on this interface because there were
                no free system buffers available."
        ::= { wfAtmizerIntfStatsEntry 21 }

    wfAtmizerIntfRxLackPageResc OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets lost on this interface because there were
                no free system pages available."
        ::= { wfAtmizerIntfStatsEntry 22 }

    wfAtmizerIntfTxPacketsOkWrap OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the wfAtmizerIntfTxPacketsOk counter has wrapped."
        ::= { wfAtmizerIntfStatsEntry 23 }

    wfAtmizerIntfTxPacketsOk OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Service Data Units (SDUs) transmitted without error."
        ::= { wfAtmizerIntfStatsEntry 24 }

    wfAtmizerIntfTxCellsOkWrap OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the wfAtmizerIntfTxCellsOk counter has wrapped."
        ::= { wfAtmizerIntfStatsEntry 25 }

    wfAtmizerIntfTxCellsOk OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of segmented Service Data Unit (SDU) cells transmitted without
                error."
        ::= { wfAtmizerIntfStatsEntry 26 }

    wfAtmizerIntfTxOamCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of F4/F5 OAM Cells transmitted on this interface."
        ::= { wfAtmizerIntfStatsEntry 27 }

    wfAtmizerIntfTxFlowCtrlCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Flow Control OAM Cells transmitted on this interface."
        ::= { wfAtmizerIntfStatsEntry 28 }

    wfAtmizerIntfTxBadVcs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of packets dropped on transmit because of an invalid VPI/VCI."
        ::= { wfAtmizerIntfStatsEntry 29 }

    wfAtmizerIntfTxOverSizedSDUs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of transmit packets dropped because their SDU size was greater
                than the MTU for this interface."
        ::= { wfAtmizerIntfStatsEntry 30 }

    wfAtmizerIntfTxLackBufCredits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of transmit packets lost on this interface because no buffer
                space was available to the transmitter for outgoing data."
        ::= { wfAtmizerIntfStatsEntry 31 }

    wfAtmizerIntfTxLackPageCredits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of transmit packets lost on this interface because no physical
                pages were available to the transmitter for outgoing data."
        ::= { wfAtmizerIntfStatsEntry 32 }

    wfAtmizerIntfTxDrvClipCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of transmit packets lost on this interface because no buffer
                space was available to the host transmit driver for outgoing data."
        ::= { wfAtmizerIntfStatsEntry 33 }

    wfAtmizerIntfHecDetectedCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of uncorrectable HEC errors detected on this interface."
        ::= { wfAtmizerIntfStatsEntry 34 }

    wfAtmizerIntfHecCorrectedCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of correctable HEC errors detected on this interface."
        ::= { wfAtmizerIntfStatsEntry 35 }

    wfAtmizerVclStatsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmizerVclStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Virtual Channel Statistics Record"
        ::= { wfAtmCellSwitchGroup 4 }

    wfAtmizerVclStatsEntry OBJECT-TYPE
        SYNTAX	WfAtmizerVclStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Information about a particular virtual channel"
        INDEX	{ wfAtmizerVclIndex,
    		  wfAtmizerVclVpi,
    		  wfAtmizerVclVci }
        ::= { wfAtmizerVclStatsTable 1 }

    WfAtmizerVclStatsEntry ::= SEQUENCE {
    	    wfAtmizerVclIndex
    		INTEGER,
    	    wfAtmizerVclVpi
    		INTEGER,
    	    wfAtmizerVclVci
    		INTEGER,
    	    wfAtmizerVclRxPacketsOkWrap
    		Counter,
    	    wfAtmizerVclRxPacketsOk
    		Counter,
    	    wfAtmizerVclRxCellsOkWrap
    		Counter,
    	    wfAtmizerVclRxCellsOk
    		Counter,
    	    wfAtmizerVclRxOamCount
    		Counter,
    	    wfAtmizerVclRxFlowCtrlCount
    		Counter,
    	    wfAtmizerVclRxInvalidHeaders
    		Counter,
    	    wfAtmizerVclRxOverSizedSDUs
    		Counter,
    	    wfAtmizerVclRxCrcErrors
    		Counter,
    	    wfAtmizerVclRxCrc10Errors
    		Counter,
    	    wfAtmizerVclRxLackBufCredits
    		Counter,
    	    wfAtmizerVclRxLackPageCredits
    		Counter,
    	    wfAtmizerVclRxLackBufResc
    		Counter,
    	    wfAtmizerVclRxLackPageResc
    		Counter,
    	    wfAtmizerVclTxPacketsOkWrap
    		Counter,
    	    wfAtmizerVclTxPacketsOk
    		Counter,
    	    wfAtmizerVclTxCellsOkWrap
    		Counter,
    	    wfAtmizerVclTxCellsOk
    		Counter,
    	    wfAtmizerVclTxOamCount
    		Counter,
    	    wfAtmizerVclTxFlowCtrlCount
    		Counter,
    	    wfAtmizerVclTxOverSizedSDUs
    		Counter,
    	    wfAtmizerVclTxLackBufCredits
    		Counter,
    	    wfAtmizerVclTxLackPageCredits
    		Counter
        }

    wfAtmizerVclIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance id - Index number of this physical interface."
        ::= { wfAtmizerVclStatsEntry 1 }

    wfAtmizerVclVpi OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance id - Virtual Path Id for this VCL."
        ::= { wfAtmizerVclStatsEntry 2 }

    wfAtmizerVclVci OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance id - Virtual Channel Id for this VCL."
        ::= { wfAtmizerVclStatsEntry 3 }

    wfAtmizerVclRxPacketsOkWrap OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times the wfAtmizerVclRxPacketsOk has wrapped."
        ::= { wfAtmizerVclStatsEntry 4 }

    wfAtmizerVclRxPacketsOk OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packets received on this VCL."
        ::= { wfAtmizerVclStatsEntry 5 }

    wfAtmizerVclRxCellsOkWrap OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times the wfAtmizerVclRxCellsOk has wrapped."
        ::= { wfAtmizerVclStatsEntry 6 }

    wfAtmizerVclRxCellsOk OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of cells received on this VCL."
        ::= { wfAtmizerVclStatsEntry 7 }

    wfAtmizerVclRxOamCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of OAM cells received on this VCL."
        ::= { wfAtmizerVclStatsEntry 8 }

    wfAtmizerVclRxFlowCtrlCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Flow Control cells received on this VCL."
        ::= { wfAtmizerVclStatsEntry 9 }

    wfAtmizerVclRxInvalidHeaders OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of receive cells dropped because of an invalid ATM header."
        ::= { wfAtmizerVclStatsEntry 10 }

    wfAtmizerVclRxOverSizedSDUs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of receive packets dropped on this VCL because the reassembled
                SDU was greater than the MTU for this interface."
        ::= { wfAtmizerVclStatsEntry 11 }

    wfAtmizerVclRxCrcErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received cells dropped on this VCL because of an
                invalid CRC."
        ::= { wfAtmizerVclStatsEntry 12 }

    wfAtmizerVclRxCrc10Errors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of OAM cells dropped on this VCL because of an invalid CRC-10."
        ::= { wfAtmizerVclStatsEntry 13 }

    wfAtmizerVclRxLackBufCredits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets lost on this VCL because no receive
                buffer space was available to the receiver for incoming data."
        ::= { wfAtmizerVclStatsEntry 14 }

    wfAtmizerVclRxLackPageCredits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets lost on this VCL because no physical
                pages were available to the receiver for incoming data."
        ::= { wfAtmizerVclStatsEntry 15 }

    wfAtmizerVclRxLackBufResc OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets lost on this VCL because there were
                no free system buffers available."
        ::= { wfAtmizerVclStatsEntry 16 }

    wfAtmizerVclRxLackPageResc OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets lost on this VCL because there were
                no free system pages available."
        ::= { wfAtmizerVclStatsEntry 17 }

    wfAtmizerVclTxPacketsOkWrap OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times the wfAtmizerVclTxPacketsOk has wrapped."
        ::= { wfAtmizerVclStatsEntry 18 }

    wfAtmizerVclTxPacketsOk OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packets transmitted on this VCL."
        ::= { wfAtmizerVclStatsEntry 19 }

    wfAtmizerVclTxCellsOkWrap OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times the wfAtmizerVclTxCellsOk has wrapped."
        ::= { wfAtmizerVclStatsEntry 20 }

    wfAtmizerVclTxCellsOk OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of cells transmitted on this VCL."
        ::= { wfAtmizerVclStatsEntry 21 }

    wfAtmizerVclTxOamCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of OAM cells transmitted on this VCL."
        ::= { wfAtmizerVclStatsEntry 22 }

    wfAtmizerVclTxFlowCtrlCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Flow Control cells received on this VCL."
        ::= { wfAtmizerVclStatsEntry 23 }

    wfAtmizerVclTxOverSizedSDUs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of transmit packets dropped on this VCL because their SDU size
                was greater than the MTU for this interface."
        ::= { wfAtmizerVclStatsEntry 24 }

    wfAtmizerVclTxLackBufCredits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of transmit packets lost on this VCL because no buffer
                space was available to the transmitter for outgoing data."
        ::= { wfAtmizerVclStatsEntry 25 }

    wfAtmizerVclTxLackPageCredits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of transmit packets lost on this VCL because no physical
                pages were available to the transmitter for outgoing data."
        ::= { wfAtmizerVclStatsEntry 26 }

    wfAtmizerDebugTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmizerDebugEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ARE ATMizer Debug Record"
        ::= { wfAtmCellSwitchGroup 5 }

    wfAtmizerDebugEntry OBJECT-TYPE
        SYNTAX	WfAtmizerDebugEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Information about a Transmit/Receive pair of ATMizers"
        INDEX	{ wfAtmizerDebugSlot }
        ::= { wfAtmizerDebugTable 1 }

    WfAtmizerDebugEntry ::= SEQUENCE {
    	    wfAtmizerDebugSlot
    		INTEGER,
    	    wfAtmizerDebugCmd
    		INTEGER,
    	    wfAtmizerDebugCmdSize
    		INTEGER,
    	    wfAtmizerDebugParam1
    		INTEGER,
    	    wfAtmizerDebugParam2
    		INTEGER,
    	    wfAtmizerDebugParam3
    		INTEGER,
    	    wfAtmizerDebugParam4
    		INTEGER,
    	    wfAtmizerDebugParam5
    		INTEGER,
    	    wfAtmizerDebugParam6
    		INTEGER,
    	    wfAtmizerDebugParam7
    		INTEGER,
    	    wfAtmizerDebugParam8
    		INTEGER,
    	    wfAtmizerDebugParam9
    		INTEGER,
    	    wfAtmizerDebugParam10
    		INTEGER,
    	    wfAtmizerDebugRxDone
    		INTEGER,
    	    wfAtmizerDebugRxValue
    		OCTET STRING,
    	    wfAtmizerDebugTxDone
    		INTEGER,
    	    wfAtmizerDebugTxValue
    		OCTET STRING
        }

    wfAtmizerDebugSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number -- instance id."
        ::= { wfAtmizerDebugEntry 1 }

    wfAtmizerDebugCmd OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Debug command to be issued to ATMizers."
        ::= { wfAtmizerDebugEntry 2 }

    wfAtmizerDebugCmdSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of parameters to the debug command."
        ::= { wfAtmizerDebugEntry 3 }

    wfAtmizerDebugParam1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The first parameter to the ATMizer debug command."
        ::= { wfAtmizerDebugEntry 4 }

    wfAtmizerDebugParam2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The second parameter to the ATMizer debug command."
        ::= { wfAtmizerDebugEntry 5 }

    wfAtmizerDebugParam3 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The third parameter to the ATMizer debug command."
        ::= { wfAtmizerDebugEntry 6 }

    wfAtmizerDebugParam4 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The fourth parameter to the ATMizer debug command."
        ::= { wfAtmizerDebugEntry 7 }

    wfAtmizerDebugParam5 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The fifth parameter to the ATMizer debug command."
        ::= { wfAtmizerDebugEntry 8 }

    wfAtmizerDebugParam6 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The sixth parameter to the ATMizer debug command."
        ::= { wfAtmizerDebugEntry 9 }

    wfAtmizerDebugParam7 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The seventh parameter to the ATMizer debug command."
        ::= { wfAtmizerDebugEntry 10 }

    wfAtmizerDebugParam8 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The eighth parameter to the ATMizer debug command."
        ::= { wfAtmizerDebugEntry 11 }

    wfAtmizerDebugParam9 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The nineth parameter to the ATMizer debug command."
        ::= { wfAtmizerDebugEntry 12 }

    wfAtmizerDebugParam10 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The tenth parameter to the ATMizer debug command."
        ::= { wfAtmizerDebugEntry 13 }

    wfAtmizerDebugRxDone OBJECT-TYPE
        SYNTAX	INTEGER {
    		    inprog(1),
    		    done(2),
    		    err(16)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Completion flag indicating that the RX ATMizer has completed the
                debug command and the result is available in wfAtmizerDebugRxValue."
        DEFVAL	{ inprog }
        ::= { wfAtmizerDebugEntry 14 }

    wfAtmizerDebugRxValue OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The result of the RX ATMizer debug operation."
        ::= { wfAtmizerDebugEntry 15 }

    wfAtmizerDebugTxDone OBJECT-TYPE
        SYNTAX	INTEGER {
    		    inprog(1),
    		    done(2),
    		    err(16)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Completion flag indicating that the TX ATMizer has completed the
                debug command and the result is available in wfAtmizerDebugTxValue."
        DEFVAL	{ inprog }
        ::= { wfAtmizerDebugEntry 16 }

    wfAtmizerDebugTxValue OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The result of the TX ATMizer debug operation."
        ::= { wfAtmizerDebugEntry 17 }

    wfSonetMediumTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSonetMediumEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Statistics for the SONET medium table"
        ::= { wfSonetGroup 1 }

    wfSonetMediumEntry OBJECT-TYPE
        SYNTAX	WfSonetMediumEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the medium table"
        INDEX	{ wfSonetMediumIndex }
        ::= { wfSonetMediumTable 1 }

    WfSonetMediumEntry ::= SEQUENCE {
    	    wfSonetMediumIndex
    		INTEGER,
    	    wfSonetMediumType
    		INTEGER,
    	    wfSonetMediumTimeElapsed
    		INTEGER,
    	    wfSonetMediumValidIntervals
    		INTEGER,
    	    wfSonetMediumLineCoding
    		INTEGER,
    	    wfSonetMediumLineType
    		INTEGER,
    	    wfSonetMediumCircuitIdentifier
    		DisplayString
        }

    wfSonetMediumIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Index for this physical Sonet interface."
        ::= { wfSonetMediumEntry 1 }

    wfSonetMediumType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This variable identifies whether a SONET or a SDH signal is used
                across this interface."
        ::= { wfSonetMediumEntry 2 }

    wfSonetMediumTimeElapsed OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of seconds that have elapsed since the beginning of
                the current error-measurement period."
        ::= { wfSonetMediumEntry 3 }

    wfSonetMediumValidIntervals OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of previous intervals for which valid data has been stored."
        ::= { wfSonetMediumEntry 4 }

    wfSonetMediumLineCoding OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    b3zs(2),
    		    cmi(3),
    		    nrz(4),
    		    rz(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This variable describes the line coding for this interface."
        DEFVAL	{ nrz }
        ::= { wfSonetMediumEntry 5 }

    wfSonetMediumLineType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    shortsinglemode(2),
    		    longsinglemode(3),
    		    multimode(4),
    		    coax(5),
    		    utp(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This variable describes the line type for this interface."
        DEFVAL	{ shortsinglemode }
        ::= { wfSonetMediumEntry 6 }

    wfSonetMediumCircuitIdentifier OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This variable contains the transmission vendor's circuit identifier."
        ::= { wfSonetMediumEntry 7 }

    wfSonetSectionCurrentTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSonetSectionCurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Statistics for the SONET section current table"
        ::= { wfSonetGroup 2 }

    wfSonetSectionCurrentEntry OBJECT-TYPE
        SYNTAX	WfSonetSectionCurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Section current table"
        INDEX	{ wfSonetSectionCurrentIndex }
        ::= { wfSonetSectionCurrentTable 1 }

    WfSonetSectionCurrentEntry ::= SEQUENCE {
    	    wfSonetSectionCurrentIndex
    		INTEGER,
    	    wfSonetSectionCurrentStatus
    		INTEGER,
    	    wfSonetSectionCurrentESs
    		Gauge,
    	    wfSonetSectionCurrentSESs
    		Gauge,
    	    wfSonetSectionCurrentSEFSs
    		Gauge,
    	    wfSonetSectionCurrentCVs
    		Gauge
        }

    wfSonetSectionCurrentIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Index for this physical Sonet interface."
        ::= { wfSonetSectionCurrentEntry 1 }

    wfSonetSectionCurrentStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    nodefect(1),
    		    los(2),
    		    lof(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This variable is a bitmask indicating the status of the interface."
        DEFVAL	{ nodefect }
        ::= { wfSonetSectionCurrentEntry 2 }

    wfSonetSectionCurrentESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Errored Seconds encountered
                by a SONET/SDH Section in the current 15 minute interval."
        ::= { wfSonetSectionCurrentEntry 3 }

    wfSonetSectionCurrentSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Severely Errored Seconds
                encountered by a SONET/SDH Section in the current 15 minute interval."
        ::= { wfSonetSectionCurrentEntry 4 }

    wfSonetSectionCurrentSEFSs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Severely Errored Framing Seconds
                encountered by a SONET/SDH Section in the current 15 minute interval."
        ::= { wfSonetSectionCurrentEntry 5 }

    wfSonetSectionCurrentCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Coding Violations encountered
                by a SONET/SDH Section in the current 15 minute interval."
        ::= { wfSonetSectionCurrentEntry 6 }

    wfSonetSectionIntervalTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSonetSectionIntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Statistics for the SONET section interval table"
        ::= { wfSonetGroup 3 }

    wfSonetSectionIntervalEntry OBJECT-TYPE
        SYNTAX	WfSonetSectionIntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Section Interval table"
        INDEX	{ wfSonetSectionIntervalIndex,
    		  wfSonetSectionIntervalNumber }
        ::= { wfSonetSectionIntervalTable 1 }

    WfSonetSectionIntervalEntry ::= SEQUENCE {
    	    wfSonetSectionIntervalIndex
    		INTEGER,
    	    wfSonetSectionIntervalNumber
    		INTEGER,
    	    wfSonetSectionIntervalESs
    		Gauge,
    	    wfSonetSectionIntervalSESs
    		Gauge,
    	    wfSonetSectionIntervalSEFSs
    		Gauge,
    	    wfSonetSectionIntervalCVs
    		Gauge
        }

    wfSonetSectionIntervalIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Index for this physical Sonet interface."
        ::= { wfSonetSectionIntervalEntry 1 }

    wfSonetSectionIntervalNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A number between 1 and 96, which identifies the interval for which the
                set of statistics is available.  The interval identified by 1 is the
                most recently completed 15 minute interval, and the interval identified
                by N is the interval immediately preceding the one identified by N-1."
        ::= { wfSonetSectionIntervalEntry 2 }

    wfSonetSectionIntervalESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Errored Seconds encountered
                by a SONET/SDH Section in a particular 15 minute interval."
        ::= { wfSonetSectionIntervalEntry 3 }

    wfSonetSectionIntervalSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Severely Errored Seconds
                encountered by a SONET/SDH Section in a particular 15 minute interval."
        ::= { wfSonetSectionIntervalEntry 4 }

    wfSonetSectionIntervalSEFSs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Severely Errored Framing Seconds
                encountered by a SONET/SDH Section in a particular 15 minute interval."
        ::= { wfSonetSectionIntervalEntry 5 }

    wfSonetSectionIntervalCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Coding Violations encountered
                by a SONET/SDH Section in a particular 15 minute interval."
        ::= { wfSonetSectionIntervalEntry 6 }

    wfSonetLineCurrentTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSonetLineCurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Statistics for the SONET line current table"
        ::= { wfSonetGroup 4 }

    wfSonetLineCurrentEntry OBJECT-TYPE
        SYNTAX	WfSonetLineCurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Line current table"
        INDEX	{ wfSonetLineCurrentIndex }
        ::= { wfSonetLineCurrentTable 1 }

    WfSonetLineCurrentEntry ::= SEQUENCE {
    	    wfSonetLineCurrentIndex
    		INTEGER,
    	    wfSonetLineCurrentStatus
    		INTEGER,
    	    wfSonetLineCurrentESs
    		Gauge,
    	    wfSonetLineCurrentSESs
    		Gauge,
    	    wfSonetLineCurrentCVs
    		Gauge,
    	    wfSonetLineCurrentUASs
    		Gauge
        }

    wfSonetLineCurrentIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Index for this physical Sonet interface."
        ::= { wfSonetLineCurrentEntry 1 }

    wfSonetLineCurrentStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    nodefect(1),
    		    ais(2),
    		    rdi(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This variable is a bitmask indicating the status of the interface."
        DEFVAL	{ nodefect }
        ::= { wfSonetLineCurrentEntry 2 }

    wfSonetLineCurrentESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Errored Seconds encountered
                by a SONET/SDH Line in the current 15 minute interval."
        ::= { wfSonetLineCurrentEntry 3 }

    wfSonetLineCurrentSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Severely Errored Seconds
                encountered by a SONET/SDH Line in the current 15 minute interval."
        ::= { wfSonetLineCurrentEntry 4 }

    wfSonetLineCurrentCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Coding Violations encountered
                by a SONET/SDH Line in the current 15 minute interval."
        ::= { wfSonetLineCurrentEntry 5 }

    wfSonetLineCurrentUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Unavailable Seconds encountered
                by a SONET/SDH Line in the current 15 minute interval."
        ::= { wfSonetLineCurrentEntry 6 }

    wfSonetLineIntervalTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSonetLineIntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Statistics for the SONET line interval table"
        ::= { wfSonetGroup 5 }

    wfSonetLineIntervalEntry OBJECT-TYPE
        SYNTAX	WfSonetLineIntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Line Interval table"
        INDEX	{ wfSonetLineIntervalIndex,
    		  wfSonetLineIntervalNumber }
        ::= { wfSonetLineIntervalTable 1 }

    WfSonetLineIntervalEntry ::= SEQUENCE {
    	    wfSonetLineIntervalIndex
    		INTEGER,
    	    wfSonetLineIntervalNumber
    		INTEGER,
    	    wfSonetLineIntervalESs
    		Gauge,
    	    wfSonetLineIntervalSESs
    		Gauge,
    	    wfSonetLineIntervalCVs
    		Gauge,
    	    wfSonetLineIntervalUASs
    		Gauge
        }

    wfSonetLineIntervalIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Index for this physical Sonet interface."
        ::= { wfSonetLineIntervalEntry 1 }

    wfSonetLineIntervalNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A number between 1 and 96, which identifies the interval for which the
                set of statistics is available.  The interval identified by 1 is the
                most recently completed 15 minute interval, and the interval identified
                by N is the interval immediately preceding the one identified by N-1."
        ::= { wfSonetLineIntervalEntry 2 }

    wfSonetLineIntervalESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Errored Seconds encountered
                by a SONET/SDH Line in a particular 15 minute interval."
        ::= { wfSonetLineIntervalEntry 3 }

    wfSonetLineIntervalSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Severely Errored Seconds
                encountered by a SONET/SDH Line in a particular 15 minute interval."
        ::= { wfSonetLineIntervalEntry 4 }

    wfSonetLineIntervalCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Coding Violations encountered
                by a SONET/SDH Line in a particular 15 minute interval."
        ::= { wfSonetLineIntervalEntry 5 }

    wfSonetLineIntervalUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Unavailable Seconds encountered
                by a SONET/SDH Line in a particular 15 minute interval."
        ::= { wfSonetLineIntervalEntry 6 }

    wfSonetFarEndLineCurrentTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSonetFarEndLineCurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Statistics for the SONET far end line current table"
        ::= { wfSonetGroup 6 }

    wfSonetFarEndLineCurrentEntry OBJECT-TYPE
        SYNTAX	WfSonetFarEndLineCurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the FarEndLine current table"
        INDEX	{ wfSonetFarEndLineCurrentIndex }
        ::= { wfSonetFarEndLineCurrentTable 1 }

    WfSonetFarEndLineCurrentEntry ::= SEQUENCE {
    	    wfSonetFarEndLineCurrentIndex
    		INTEGER,
    	    wfSonetFarEndLineCurrentESs
    		Gauge,
    	    wfSonetFarEndLineCurrentSESs
    		Gauge,
    	    wfSonetFarEndLineCurrentCVs
    		Gauge,
    	    wfSonetFarEndLineCurrentUASs
    		Gauge
        }

    wfSonetFarEndLineCurrentIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Index for this physical Sonet interface."
        ::= { wfSonetFarEndLineCurrentEntry 1 }

    wfSonetFarEndLineCurrentESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Far End Errored Seconds
                encountered by a SONET/SDH Medium/Section/Line in the current 15 minute
                interval."
        ::= { wfSonetFarEndLineCurrentEntry 2 }

    wfSonetFarEndLineCurrentSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Far End Severely Errored Seconds
                encountered by a SONET/SDH Medium/Section/Line in the current 15 minute
                interval."
        ::= { wfSonetFarEndLineCurrentEntry 3 }

    wfSonetFarEndLineCurrentCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Far End Coding Violations
                encountered by a SONET/SDH Medium/Section/Line in the current 15 minute
                interval."
        ::= { wfSonetFarEndLineCurrentEntry 4 }

    wfSonetFarEndLineCurrentUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Far End Unavailable Seconds
                encountered by a SONET/SDH Medium/Section/Line in the current 15 minute
                interval."
        ::= { wfSonetFarEndLineCurrentEntry 5 }

    wfSonetFarEndLineIntervalTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSonetFarEndLineIntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Statistics for the SONET far end line interval table"
        ::= { wfSonetGroup 7 }

    wfSonetFarEndLineIntervalEntry OBJECT-TYPE
        SYNTAX	WfSonetFarEndLineIntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the FarEndLine Interval table"
        INDEX	{ wfSonetFarEndLineIntervalIndex,
    		  wfSonetFarEndLineIntervalNumber }
        ::= { wfSonetFarEndLineIntervalTable 1 }

    WfSonetFarEndLineIntervalEntry ::= SEQUENCE {
    	    wfSonetFarEndLineIntervalIndex
    		INTEGER,
    	    wfSonetFarEndLineIntervalNumber
    		INTEGER,
    	    wfSonetFarEndLineIntervalESs
    		Gauge,
    	    wfSonetFarEndLineIntervalSESs
    		Gauge,
    	    wfSonetFarEndLineIntervalCVs
    		Gauge,
    	    wfSonetFarEndLineIntervalUASs
    		Gauge
        }

    wfSonetFarEndLineIntervalIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Index for this physical Sonet interface."
        ::= { wfSonetFarEndLineIntervalEntry 1 }

    wfSonetFarEndLineIntervalNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A number between 1 and 96, which identifies the interval for which the
                set of statistics is available.  The interval identified by 1 is the
                most recently completed 15 minute interval, and the interval identified
                by N is the interval immediately preceding the one identified by N-1."
        ::= { wfSonetFarEndLineIntervalEntry 2 }

    wfSonetFarEndLineIntervalESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Far End Errored Seconds
                encountered by a SONET/SDH Medium/Section/Line in the current 15 minute
                interval."
        ::= { wfSonetFarEndLineIntervalEntry 3 }

    wfSonetFarEndLineIntervalSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Far End Severely Errored Seconds
                encountered by a SONET/SDH Medium/Section/Line in the current 15 minute
                interval."
        ::= { wfSonetFarEndLineIntervalEntry 4 }

    wfSonetFarEndLineIntervalCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Far End Coding Violations
                encountered by a SONET/SDH Medium/Section/Line in the current 15 minute
                interval."
        ::= { wfSonetFarEndLineIntervalEntry 5 }

    wfSonetFarEndLineIntervalUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Far End Unavailable Seconds
                encountered by a SONET/SDH Medium/Section/Line in the current 15 minute
                interval."
        ::= { wfSonetFarEndLineIntervalEntry 6 }

    wfSonetPathCurrentTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSonetPathCurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Statistics for the SONET path current table"
        ::= { wfSonetGroup 8 }

    wfSonetPathCurrentEntry OBJECT-TYPE
        SYNTAX	WfSonetPathCurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Path current table"
        INDEX	{ wfSonetPathCurrentIndex }
        ::= { wfSonetPathCurrentTable 1 }

    WfSonetPathCurrentEntry ::= SEQUENCE {
    	    wfSonetPathCurrentIndex
    		INTEGER,
    	    wfSonetPathCurrentWidth
    		INTEGER,
    	    wfSonetPathCurrentStatus
    		INTEGER,
    	    wfSonetPathCurrentESs
    		Gauge,
    	    wfSonetPathCurrentSESs
    		Gauge,
    	    wfSonetPathCurrentCVs
    		Gauge,
    	    wfSonetPathCurrentUASs
    		Gauge
        }

    wfSonetPathCurrentIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Index for this physical Sonet interface."
        ::= { wfSonetPathCurrentEntry 1 }

    wfSonetPathCurrentWidth OBJECT-TYPE
        SYNTAX	INTEGER {
    		    sts1(1),
    		    sts3cstm1(2),
    		    sts12cstm4(3),
    		    sts24c(4),
    		    sts48cstm16(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A value that indicates the type of the SONET/SDH Path."
        DEFVAL	{ sts3cstm1 }
        ::= { wfSonetPathCurrentEntry 2 }

    wfSonetPathCurrentStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    nodefect(1),
    		    stslop(2),
    		    stsais(4),
    		    stsrdi(8),
    		    unequipped(16),
    		    siglabelmis(32)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This variable is a bitmask indicating the status of the interface."
        DEFVAL	{ nodefect }
        ::= { wfSonetPathCurrentEntry 3 }

    wfSonetPathCurrentESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Errored Seconds encountered
                by a SONET/SDH Path in the current 15 minute interval."
        ::= { wfSonetPathCurrentEntry 4 }

    wfSonetPathCurrentSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Severely Errored Seconds
                encountered by a SONET/SDH Path in the current 15 minute interval."
        ::= { wfSonetPathCurrentEntry 5 }

    wfSonetPathCurrentCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Coding Violations encountered
                by a SONET/SDH Path in the current 15 minute interval."
        ::= { wfSonetPathCurrentEntry 6 }

    wfSonetPathCurrentUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Unavailable Seconds encountered
                by a SONET/SDH Path in the current 15 minute interval."
        ::= { wfSonetPathCurrentEntry 7 }

    wfSonetPathIntervalTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSonetPathIntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Statistics for the SONET path interval table"
        ::= { wfSonetGroup 9 }

    wfSonetPathIntervalEntry OBJECT-TYPE
        SYNTAX	WfSonetPathIntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Path Interval table"
        INDEX	{ wfSonetPathIntervalIndex,
    		  wfSonetPathIntervalNumber }
        ::= { wfSonetPathIntervalTable 1 }

    WfSonetPathIntervalEntry ::= SEQUENCE {
    	    wfSonetPathIntervalIndex
    		INTEGER,
    	    wfSonetPathIntervalNumber
    		INTEGER,
    	    wfSonetPathIntervalESs
    		Gauge,
    	    wfSonetPathIntervalSESs
    		Gauge,
    	    wfSonetPathIntervalCVs
    		Gauge,
    	    wfSonetPathIntervalUASs
    		Gauge
        }

    wfSonetPathIntervalIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Index for this physical Sonet interface."
        ::= { wfSonetPathIntervalEntry 1 }

    wfSonetPathIntervalNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A number between 1 and 96, which identifies the interval for which the
                set of statistics is available.  The interval identified by 1 is the
                most recently completed 15 minute interval, and the interval identified
                by N is the interval immediately preceding the one identified by N-1."
        ::= { wfSonetPathIntervalEntry 2 }

    wfSonetPathIntervalESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Errored Seconds encountered
                by a SONET/SDH Path in a particular 15 minute interval."
        ::= { wfSonetPathIntervalEntry 3 }

    wfSonetPathIntervalSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Severely Errored Seconds
                encountered by a SONET/SDH Path in a particular 15 minute interval."
        ::= { wfSonetPathIntervalEntry 4 }

    wfSonetPathIntervalCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Coding Violations encountered
                by a SONET/SDH Path in a particular 15 minute interval."
        ::= { wfSonetPathIntervalEntry 5 }

    wfSonetPathIntervalUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Unavailable Seconds encountered
                by a SONET/SDH Path in a particular 15 minute interval."
        ::= { wfSonetPathIntervalEntry 6 }

    wfSonetFarEndPathCurrentTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSonetFarEndPathCurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Statistics for the SONET far end path current table"
        ::= { wfSonetGroup 10 }

    wfSonetFarEndPathCurrentEntry OBJECT-TYPE
        SYNTAX	WfSonetFarEndPathCurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Far End Path current table"
        INDEX	{ wfSonetFarEndPathCurrentIndex }
        ::= { wfSonetFarEndPathCurrentTable 1 }

    WfSonetFarEndPathCurrentEntry ::= SEQUENCE {
    	    wfSonetFarEndPathCurrentIndex
    		INTEGER,
    	    wfSonetFarEndPathCurrentESs
    		Gauge,
    	    wfSonetFarEndPathCurrentSESs
    		Gauge,
    	    wfSonetFarEndPathCurrentCVs
    		Gauge,
    	    wfSonetFarEndPathCurrentUASs
    		Gauge
        }

    wfSonetFarEndPathCurrentIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Index for this physical Sonet interface."
        ::= { wfSonetFarEndPathCurrentEntry 1 }

    wfSonetFarEndPathCurrentESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Far End Errored Seconds
                encountered by a SONET/SDH Path in the current 15 minute interval."
        ::= { wfSonetFarEndPathCurrentEntry 2 }

    wfSonetFarEndPathCurrentSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Far End Severely Errored Seconds
                encountered by a SONET/SDH Path in the current 15 minute interval."
        ::= { wfSonetFarEndPathCurrentEntry 3 }

    wfSonetFarEndPathCurrentCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Far End Coding Violations
                encountered by a SONET/SDH Path in the current 15 minute interval."
        ::= { wfSonetFarEndPathCurrentEntry 4 }

    wfSonetFarEndPathCurrentUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Far End Unavailable Seconds
                encountered by a SONET/SDH Path in the current 15 minute interval."
        ::= { wfSonetFarEndPathCurrentEntry 5 }

    wfSonetFarEndPathIntervalTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSonetFarEndPathIntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Statistics for the SONET far end path interval table"
        ::= { wfSonetGroup 11 }

    wfSonetFarEndPathIntervalEntry OBJECT-TYPE
        SYNTAX	WfSonetFarEndPathIntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Far End Path Interval table"
        INDEX	{ wfSonetFarEndPathIntervalIndex,
    		  wfSonetFarEndPathIntervalNumber }
        ::= { wfSonetFarEndPathIntervalTable 1 }

    WfSonetFarEndPathIntervalEntry ::= SEQUENCE {
    	    wfSonetFarEndPathIntervalIndex
    		INTEGER,
    	    wfSonetFarEndPathIntervalNumber
    		INTEGER,
    	    wfSonetFarEndPathIntervalESs
    		Gauge,
    	    wfSonetFarEndPathIntervalSESs
    		Gauge,
    	    wfSonetFarEndPathIntervalCVs
    		Gauge,
    	    wfSonetFarEndPathIntervalUASs
    		Gauge
        }

    wfSonetFarEndPathIntervalIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Index for this physical Sonet interface."
        ::= { wfSonetFarEndPathIntervalEntry 1 }

    wfSonetFarEndPathIntervalNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A number between 1 and 96, which identifies the interval for which the
                set of statistics is available.  The interval identified by 1 is the
                most recently completed 15 minute interval, and the interval identified
                by N is the interval immediately preceding the one identified by N-1."
        ::= { wfSonetFarEndPathIntervalEntry 2 }

    wfSonetFarEndPathIntervalESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Far End Errored Seconds
                encountered by a SONET/SDH Path in a particular 15 minute interval."
        ::= { wfSonetFarEndPathIntervalEntry 3 }

    wfSonetFarEndPathIntervalSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Far End Severely Errored Seconds
                encountered by a SONET/SDH Path in a particular 15 minute interval."
        ::= { wfSonetFarEndPathIntervalEntry 4 }

    wfSonetFarEndPathIntervalCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Far End Coding Violations
                encountered by a SONET/SDH Path in a particular 15 minute interval."
        ::= { wfSonetFarEndPathIntervalEntry 5 }

    wfSonetFarEndPathIntervalUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The counter associated with the number of Far End Unavailable Seconds
                encountered by a SONET/SDH Path in a particular 15 minute interval."
        ::= { wfSonetFarEndPathIntervalEntry 6 }

    END  -- Wellfleet-ATM-MIB
-- @(#)WSCCS w/mibs-atm_le.mib 1.3 10/16/95
Wellfleet-ATM-LE-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:38:08 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfAtmLeGroup
        FROM Wellfleet-COMMON-MIB;


    wfAtmLecConfigTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmLecConfigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ATM LEC Interface table - One per LEC Client
                This table deals with configuration and operational status"
        ::= { wfAtmLeGroup 1 }

    wfAtmLecConfigEntry OBJECT-TYPE
        SYNTAX	WfAtmLecConfigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per LEC Client objects - wfAtmLecCct corresponds to Wellfleet
                circuit number "
        INDEX	{ wflecConfigCct }
        ::= { wfAtmLecConfigTable 1 }

    WfAtmLecConfigEntry ::= SEQUENCE {
    	    wflecConfDelete
    		INTEGER,
    	    wflecRowStatus
    		INTEGER,
    	    wflecConfigCct
    		INTEGER,
    	    wflecOwner
    		DisplayString,
    	    wflecConfigMode
    		INTEGER,
    	    wflecConfigLanType
    		INTEGER,
    	    wflecConfigMaxDataFrameSize
    		INTEGER,
    	    wflecConfigLanName
    		DisplayString,
    	    wflecConfigLesAtmAddress
    		OCTET STRING,
    	    wflecControlTimeout
    		INTEGER,
    	    wflecMaxUnknownFrameCount
    		INTEGER,
    	    wflecMaxUnknownFrameTime
    		INTEGER,
    	    wflecVccTimeoutPeriod
    		INTEGER,
    	    wflecMaxRetryCount
    		INTEGER,
    	    wflecAgingTime
    		INTEGER,
    	    wflecForwardDelayTime
    		INTEGER,
    	    wflecExpectedArpResponseTime
    		INTEGER,
    	    wflecFlushTimeOut
    		INTEGER,
    	    wflecPathSwitchingDelay
    		INTEGER,
    	    wflecLocalSegmentID
    		INTEGER,
    	    wflecMulticastSendType
    		INTEGER,
    	    wflecMulticastSendAvgRate
    		INTEGER,
    	    wflecMulticastSendPeakRate
    		INTEGER,
    	    wflecConnectionCompleteTimer
    		INTEGER,
    	    wflecFlushEnable
    		INTEGER,
    	    wflecConfigRetry
    		INTEGER,
    	    wflecMulticastFwdTimeout
    		INTEGER,
    	    wflecMulticastFwdRetry
    		INTEGER,
    	    wflecDebugLevel
    		INTEGER,
    	    wflecConfigLECSAtmAddress
    		OCTET STRING
        }

    wflecConfDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to create or delete an ATM LE Client Config Entry
                from the MIB "
        DEFVAL	{ created }
        ::= { wfAtmLecConfigEntry 1 }

    wflecRowStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to create or delete an ATM LE Client. This will
                remove the LEC from the Emulated LAN.  However, the instance is
                not removed from the MIB "
        DEFVAL	{ enabled }
        ::= { wfAtmLecConfigEntry 2 }

    wflecConfigCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This corresponds to the Wellfleet circuit number"
        ::= { wfAtmLecConfigEntry 3 }

    wflecOwner OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The entity that configured this entry and is therefore
                using the resources assigned to it."
        ::= { wfAtmLecConfigEntry 4 }

    wflecConfigMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    autocfg(1),
    		    mancfg(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this LAN Emulation Client should
                auto-configure the next time it is (re)started."
        DEFVAL	{ autocfg }
        ::= { wfAtmLecConfigEntry 5 }

    wflecConfigLanType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unspecified(1),
    		    ieee8023(2),
    		    ieee8025(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C2 - LEC LAN Type
                The data frame format which this client will use the
                next time it returns to the Initial State.
                Auto-configuring clients use this parameter in their
                Configure requests.  Manually-configured clients use
                it in their Join requests.
                 "
        DEFVAL	{ unspecified }
        ::= { wfAtmLecConfigEntry 6 }

    wflecConfigMaxDataFrameSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unspec(1),
    		    size1516(2),
    		    size4544(3),
    		    size9234(4),
    		    size18190(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C3 Maximum Data Frame Size.
                The maximum data frame size which this client will
                use the next time it returns to the Initial State.

                Auto-configuring clients use this parameter in their
                Configure requests.  Manually-configured clients use
                it in their Join requests.

                This MIB object will not be overwritten with the new
                value from a LE_{JOIN,CONFIGURE}_RESPONSE.  Instead,
                lecActualMaxDataFrameSize will be.'"
        DEFVAL	{ unspec }
        ::= { wfAtmLecConfigEntry 7 }

    wflecConfigLanName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C5 ELAN Name.
                The ELAN Name this client will use the next time it
                returns to the Initial State.

                Auto-configuring clients use this parameter in their
                Configure requests.  Manually-configured clients use
                it in their Join requests.

                This MIB object will not be overwritten with the new
                value from a LE_{JOIN,CONFIGURE}_RESPONSE.  Instead,
                lecActualMaxDataFrameSize will be.'
                "
        ::= { wfAtmLecConfigEntry 8 }

    wflecConfigLesAtmAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C9 LE Server ATM Address.

                   The LAN Emulation Server which this client will use
                   the next time it is started in manual configuration
                   mode.

                   When lecConfigMode is 'automatic', there is no need
                   to set this address, and no advantage to doing so.
                   The client will use the LECS to find a LES, putting
                   the auto-configured address in lecActualLesAtmAddress
                   while leaving lecConfigLesAtmAddress alone.
                "
        ::= { wfAtmLecConfigEntry 9 }

    wflecControlTimeout OBJECT-TYPE
        SYNTAX	INTEGER(5..32767)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C7 Control Time-out.
                Time out period used for timing out most request/response
                control frame most request/response control frame interactions."
        DEFVAL	{ 5 }
        ::= { wfAtmLecConfigEntry 10 }

    wflecMaxUnknownFrameCount OBJECT-TYPE
        SYNTAX	INTEGER(0..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C10 Maximum Unknown Frame Count. This parameter MUST be less than
                or equal to 10. (See parameter C11) "
        DEFVAL	{ 1 }
        ::= { wfAtmLecConfigEntry 11 }

    wflecMaxUnknownFrameTime OBJECT-TYPE
        SYNTAX	INTEGER(1..60)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C11 Maximum Unknown Frame Time. This parameter MUST be greater
                than or equal to 1.0 seconds.  Within the period of time defined by
                the Maximum Unknown Frame Time, a LE Client will send no more than
                Maximum Unknown Frame Count frames to a given MAC address or Route
                Designator without also initiating the address resolution protocol to
                resolve that MAC address or Route Designator.  This time value is
                expressed in seconds.  "
        DEFVAL	{ 1 }
        ::= { wfAtmLecConfigEntry 12 }

    wflecVccTimeoutPeriod OBJECT-TYPE
        SYNTAX	INTEGER {
    		    def(1200)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C12 VCC Timeout Period.
                A LE Client may release any Data Direct or Multicast Send VCC that it
                has not used to transmit or receive any data frames for the length of
                the VCC Timeout Period.  This time value is expressed in seconds.  "
        DEFVAL	{ def }
        ::= { wfAtmLecConfigEntry 13 }

    wflecMaxRetryCount OBJECT-TYPE
        SYNTAX	INTEGER(0..2)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C13 Maximum Retry Count. A LE CLient MUST not retry a LE-ARP for a
                given frame's LAN destination more than Maximum Retry Count times,
                after which it must discard the frame."
        DEFVAL	{ 1 }
        ::= { wfAtmLecConfigEntry 14 }

    wflecAgingTime OBJECT-TYPE
        SYNTAX	INTEGER(10..300)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C17 Aging Time. The maximum time that a LE Client will maintain
                an entry in its LE-ARP cache in the absence of a verification of that
                relationship."
        DEFVAL	{ 300 }
        ::= { wfAtmLecConfigEntry 15 }

    wflecForwardDelayTime OBJECT-TYPE
        SYNTAX	INTEGER(4..30)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C18 Forward Delay Time. The maximum time that a LE Client will
                maintain an entry in its LE-ARP cache in the absence of a verification
                of that relationship, so long as the Topology Change flag C19 is true."
        DEFVAL	{ 15 }
        ::= { wfAtmLecConfigEntry 16 }

    wflecExpectedArpResponseTime OBJECT-TYPE
        SYNTAX	INTEGER(1..30)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C20 Expected LE_ARP Reponse Time. The maximum time (seconds)
                that the LEC expects an LE_ARP_REQUEST/
                LE_ARP_RESPONSE cycle to take.  Used for retries
                and verifies. "
        DEFVAL	{ 3 }
        ::= { wfAtmLecConfigEntry 17 }

    wflecFlushTimeOut OBJECT-TYPE
        SYNTAX	INTEGER(1..4)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C21 Flush Time-out. Time limit (seconds) to wait to receive a
                LE_FLUSH_RESPONSE after the LE_FLUSH_REQUEST has
                been sent before taking recovery action."
        DEFVAL	{ 4 }
        ::= { wfAtmLecConfigEntry 18 }

    wflecPathSwitchingDelay OBJECT-TYPE
        SYNTAX	INTEGER(1..8)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C22 Path Switching Delay. The time (seconds) since sending a
                frame to the BUS after which the LE Client may
                assume that the frame has been either discarded
                or delivered to the recipient.  May be used to
                bypass the Flush protocol."
        DEFVAL	{ 6 }
        ::= { wfAtmLecConfigEntry 19 }

    wflecLocalSegmentID OBJECT-TYPE
        SYNTAX	INTEGER(0..4095)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C23 Local Segment ID. The segment ID of the emulated
                LAN.  This is only required for IEEE 802.5 clients
                that are Source Routing bridges.'"
        ::= { wfAtmLecConfigEntry 20 }

    wflecMulticastSendType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    abr(1),
    		    vbr(2),
    		    cbr(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C24 Multicast Send VCC Type. Signalling parameter
                that SHOULD be used by the LE Client when
                establishing the Multicast Send VCC.

                This is the method to be used by the LE Client
                when specifying traffic parameters when it sets
                up the Multicast Send VCC for this emulated LAN."
        DEFVAL	{ cbr }
        ::= { wfAtmLecConfigEntry 21 }

    wflecMulticastSendAvgRate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C25 Multicast Send VCC AvgRate. Signalling parameter
                that SHOULD be used by the LE Client when
                establishing the Multicast Send VCC.

                Forward and Backward Sustained Cell Rate to be
                requested by LE Client when setting up Multicast
                Send VCC, if using Variable bit rate codings.
                "
        ::= { wfAtmLecConfigEntry 22 }

    wflecMulticastSendPeakRate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C26 Multicast Send VCC PeakRate. Signalling parameter
                that SHOULD be used by the LE Client when
                establishing the Multicast Send VCC.

                Forward and Backward Peak Cell Rate to be
                requested by LE Client when setting up Multicast
                Send VCC, if using Variable bit rate codings.
                "
        ::= { wfAtmLecConfigEntry 23 }

    wflecConnectionCompleteTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "C28 Connection Complete Timer. Optional. In
                Connection Establishment this is the time period
                in which data or a READY_IND message is expected
                from a Calling Party."
        DEFVAL	{ 4 }
        ::= { wfAtmLecConfigEntry 24 }

    wflecFlushEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Flush Protocol enable/disable -
                ATM_LEC_FLUSH_ENABLED - ATM LE flush protocol is used when switching VCs.
                If the Flush timeout (wflecFlushTimeOut) expires data for that MAC address
                will start flowing over the old VC again.
                ATM_LEC_FLUSH_DISABLED - ATM LE flush protocol is not used.  Instead data
                for that MAC address will automatically start flowing over the new VC once
                the Path Switching delay timeout (wflecPathSwitchingDelay) has expired."
        DEFVAL	{ enabled }
        ::= { wfAtmLecConfigEntry 25 }

    wflecConfigRetry OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute specifies how many retries should be attempted if any
                part of the config phase fails.  The config phase starts with setting
                up the config direct VC and ends when a JOIN response is received.
                The default is 0 which means retry forever with a maximum timeout of
                30 seconds between each retry.  The time between each retry will start
                at 2 seconds and double from that point (never exceeding 30 seconds)."
        ::= { wfAtmLecConfigEntry 26 }

    wflecMulticastFwdTimeout OBJECT-TYPE
        SYNTAX	INTEGER {
    		    def(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The attribute specifies how many seconds to wait for the Multicast Forward
                VC to be set up before retrying.  The retry will include closing the
                Multicast Send VC (if it has been opened) and reARPing for the BUS.  A
                successful ARP response will result in the setup of the Multicast Send which
                in turn should result in the BUS setting up the Multicast Forward VC."
        DEFVAL	{ def }
        ::= { wfAtmLecConfigEntry 27 }

    wflecMulticastFwdRetry OBJECT-TYPE
        SYNTAX	INTEGER {
    		    def(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The attribute specifies how many retries should be made to get the
                Multicast Forward VC setup.   The LEC will retry after
                wflecMulticastFwdTimeout seconds and will double this timeout for each
                each retry which follows.  The timeout will not exeed 30 seconds however.
                After wflecMulticastFwdRetry retries, the LEC will restart itself.  If
                wflecMulticastFwdRetry is set to 0 it will retry the BUS phase forever
                and will never restart itself."
        DEFVAL	{ def }
        ::= { wfAtmLecConfigEntry 28 }

    wflecDebugLevel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    def(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Debug Levels - The level of debug desired from the Portable LEC code
                	LEC_DBG_WARN - 1
                	LEC_DBG_ERR  - 2
                	LEC_DBG_MSG  - 4
                	LEC_DBG_DBG  - 8
                	LEC_DBG_VERBOSE - 16"
        DEFVAL	{ def }
        ::= { wfAtmLecConfigEntry 29 }

    wflecConfigLECSAtmAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The LE Config Server Address to be used. If left (or set) to NULL_VAL the
                well-known LECS ATM address will be used."
        ::= { wfAtmLecConfigEntry 30 }

    wfAtmLecStatusTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmLecStatusEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Lan Emulation Status Group
                Read-only table containing identification, status, and operational
                information about the LAN Emulation Clients this agent manages "
        ::= { wfAtmLeGroup 2 }

    wfAtmLecStatusEntry OBJECT-TYPE
        SYNTAX	WfAtmLecStatusEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per LEC Client objects - wfAtmLecCct corresponds to Wellfleet
                circuit number "
        INDEX	{ wflecStatusCct }
        ::= { wfAtmLecStatusTable 1 }

    WfAtmLecStatusEntry ::= SEQUENCE {
    	    wflecStatusCct
    		INTEGER,
    	    wflecPrimaryAtmAddress
    		OCTET STRING,
    	    wflecID
    		INTEGER,
    	    wflecInterfaceState
    		INTEGER,
    	    wflecLastFailureRespCode
    		INTEGER,
    	    wflecLastFailureState
    		INTEGER,
    	    wflecProtocol
    		INTEGER,
    	    wflecVersion
    		INTEGER,
    	    wflecTopologyChange
    		INTEGER,
    	    wflecConfigServerAtmAddress
    		OCTET STRING,
    	    wflecConfigSource
    		INTEGER,
    	    wflecActualLanType
    		INTEGER,
    	    wflecActualMaxDataFrameSize
    		INTEGER,
    	    wflecActualLanName
    		DisplayString,
    	    wflecActualLesAtmAddress
    		OCTET STRING,
    	    wflecProxyClient
    		INTEGER
        }

    wflecStatusCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This corresponds to the Wellfleet circuit number"
        ::= { wfAtmLecStatusEntry 1 }

    wflecPrimaryAtmAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C1 - LE Client's ATM Address."
        ::= { wfAtmLecStatusEntry 2 }

    wflecID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C14 LE Client Identifier. Each LE Client requires a
                LE Client Identifier (LECID) assigned by the LE
                Server during the Join phase.  The LECID is placed
                in control requests by the LE Client and MAY be
                used for echo suppression on multicast data frames
                sent by that LE Client.  This value MUST NOT
                change without terminating the LE Client and
                returning to the Initial state.  A valid LECID
                MUST be in the range X'0001' through X'FEFF'.

                The value of this object is only meaningful for a LEC
                that is connected to a LES.  For a LEC which does not
                belong to an emulated LAN, the value of this object
                is defined to be 0.'"
        ::= { wfAtmLecStatusEntry 3 }

    wflecInterfaceState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    initial(1),
    		    lecsconnect(2),
    		    configure(3),
    		    join(4),
    		    reg(5),
    		    busconnect(6),
    		    operational(7)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the state for the LE Client"
        ::= { wfAtmLecStatusEntry 4 }

    wflecLastFailureRespCode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    tmo(2),
    		    undef(3),
    		    vrsnotsup(4),
    		    invreq(5),
    		    dupdst(6),
    		    dupatmadr(7),
    		    insufres(8),
    		    accdenied(9),
    		    invreqid(10),
    		    invdst(11),
    		    invatmadr(12),
    		    nocfg(13),
    		    lecfgerr(14),
    		    insufinfo(15)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Failure response code.
                Status code from the last failed Configure response
                or Join response.  Failed responses are those for
                which the LE_CONFIGURE_RESPONSE / LE_JOIN_RESPONSE
                frame contains a non-zero code, or fails to arrive
                within a timeout period.

                If none of this client's requests have failed, this
                object has the value 'none'.

                If the failed response contained a STATUS code that
                is not defined in the LAN Emulation specification,
                this object has the value 'undefinedError'.

                The value 'timeout' is self-explanatory.

                Other failure codes correspond to those defined in
                the specification, although they may have different
                numeric values."
        DEFVAL	{ none }
        ::= { wfAtmLecStatusEntry 5 }

    wflecLastFailureState OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Last failure state
                The state this client was in when it updated the
                'lecLastFailureRespCode'.

                 If 'lecLastFailureRespCode' is 'none', this object
                 has the value initialState(1)."
        ::= { wfAtmLecStatusEntry 6 }

    wflecProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    prot1(1)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The LAN Emulation protocol which this client supports,
                and specifies in its LE_JOIN_REQUESTs. "
        DEFVAL	{ prot1 }
        ::= { wfAtmLecStatusEntry 7 }

    wflecVersion OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The LAN Emulation protocol version which this client supports,
                and specifies in its LE_JOIN_REQUESTs. "
        ::= { wfAtmLecStatusEntry 8 }

    wflecTopologyChange OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C19 Topology Change. Boolean indication that the LE Client is
                using the Forward Delay Time C18, instead of the Ageing Time C17, to
                age entries in its LE-ARP cache."
        ::= { wfAtmLecStatusEntry 9 }

    wflecConfigServerAtmAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ATM address of the LECS for this Client"
        ::= { wfAtmLecStatusEntry 10 }

    wflecConfigSource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    viailmi(1),
    		    knownadr(2),
    		    cfgpvc(3),
    		    nolecs(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this LAN Emulation Client used the
                LAN Emulation Configuration Server, and, if so, what
                method it used to establish the Configuration Direct
                VCC."
        DEFVAL	{ nolecs }
        ::= { wfAtmLecStatusEntry 11 }

    wflecActualLanType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unspecified(1),
    		    ieee8023(2),
    		    ieee8025(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C2 - LEC LAN Type
                The data frame format that this LAN Emulation Client
                       is using right now.  This may come from

                  lecConfigLanType,
                  the LAN Emulation Configuration Server, or
                  the LAN Emulation Server"
        ::= { wfAtmLecStatusEntry 12 }

    wflecActualMaxDataFrameSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unspec(1),
    		    size1516(2),
    		    size4544(3),
    		    size9234(4),
    		    size18190(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C3 Maximum Data Frame Size.
                The maximum data frame size that this LAN Emulation
                client is using right now.  This may come from

                lecConfigLanType,
                the LAN Emulation Configuration Server, or
                the LAN Emulation Server
                "
        ::= { wfAtmLecStatusEntry 13 }

    wflecActualLanName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C5 ELAN Name.
                The identity of the emulated LAN which this client
                last joined, or wishes to join.  This may come from

                lecConfigLanType,
                the LAN Emulation Configuration Server, or
                the LAN Emulation Server"
        ::= { wfAtmLecStatusEntry 14 }

    wflecActualLesAtmAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C9 LE Server ATM Address.
                The LAN Emulation Server address currently in use or
                most recently attempted.

                If no LAN Emulation Server attachment has been tried,
                this object's value is the zero-length string.'
                "
        ::= { wfAtmLecStatusEntry 15 }

    wflecProxyClient OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C4 Proxy
                When a client joins an ATM emulated LAN, it indicates
                whether it wants to act as a proxy.

                  Proxy clients are allowed to represent unregistered
                  MAC addresses, and receive copies of LE_ARP_REQUEST
                  frames for such addresses.'"
        ::= { wfAtmLecStatusEntry 16 }

    wfAtmLecOperConfigTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmLecOperConfigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ATM LEC Interface table - One per LEC Client
                This table deals with configuration and operational status"
        ::= { wfAtmLeGroup 3 }

    wfAtmLecOperConfigEntry OBJECT-TYPE
        SYNTAX	WfAtmLecOperConfigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per LEC Operation Config objects - wfAtmLecOperConfigCct corresponds to
                Wellfleet circuit number "
        INDEX	{ wflecOperConfigCct }
        ::= { wfAtmLecOperConfigTable 1 }

    WfAtmLecOperConfigEntry ::= SEQUENCE {
    	    wflecOperConfigCct
    		INTEGER,
    	    wflecOperConfigControlTimeout
    		INTEGER,
    	    wflecOperConfigMaxUnknownFrameCount
    		INTEGER,
    	    wflecOperConfigMaxUnknownFrameTime
    		INTEGER,
    	    wflecOperConfigVccTimeoutPeriod
    		INTEGER,
    	    wflecOperConfigMaxRetryCount
    		INTEGER,
    	    wflecOperConfigAgingTime
    		INTEGER,
    	    wflecOperConfigForwardDelayTime
    		INTEGER,
    	    wflecOperConfigTopologyChange
    		INTEGER,
    	    wflecOperConfigExpectedArpResponseTime
    		INTEGER,
    	    wflecOperConfigFlushTimeOut
    		INTEGER,
    	    wflecOperConfigPathSwitchingDelay
    		INTEGER,
    	    wflecOperConfigLocalSegmentID
    		INTEGER,
    	    wflecOperConfigMulticastSendType
    		INTEGER,
    	    wflecOperConfigMulticastSendAvgRate
    		INTEGER,
    	    wflecOperConfigMulticastSendPeakRate
    		INTEGER,
    	    wflecOperConfigConnectionCompleteTimer
    		INTEGER
        }

    wflecOperConfigCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This corresponds to the Wellfleet circuit number"
        ::= { wfAtmLecOperConfigEntry 1 }

    wflecOperConfigControlTimeout OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C7 Control Time-out.
                Time out period used for timing out most request/response
                control frame most request/response control frame interactions."
        ::= { wfAtmLecOperConfigEntry 2 }

    wflecOperConfigMaxUnknownFrameCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C10 Maximum Unknown Frame Count. This parameter MUST be less than
                or equal to 10. (See parameter C11) "
        ::= { wfAtmLecOperConfigEntry 3 }

    wflecOperConfigMaxUnknownFrameTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C11 Maximum Unknown Frame Time. This parameter MUST be greater
                than or equal to 1.0 seconds.  Within the period of time defined by
                the Maximum Unknown Frame Time, a LE Client will send no more than
                Maximum Unknown Frame Count frames to a given MAC address or Route
                Designator without also initiating the address resolution protocol to
                resolve that MAC address or Route Designator.  This time value is
                expressed in seconds.  "
        ::= { wfAtmLecOperConfigEntry 4 }

    wflecOperConfigVccTimeoutPeriod OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C12 VCC Timeout Period.
                A LE Client may release any Data Direct or Multicast Send VCC that it
                has not used to transmit or receive any data frames for the length of
                the VCC Timeout Period.  This time value is expressed in seconds.  "
        ::= { wfAtmLecOperConfigEntry 5 }

    wflecOperConfigMaxRetryCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C13 Maximum Retry Count. A LE CLient MUST not retry a LE-ARP for a
                given frame's LAN destination more than Maximum Retry Count times,
                after which it must discard the frame."
        ::= { wfAtmLecOperConfigEntry 6 }

    wflecOperConfigAgingTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C17 Aging Time. The maximum time that a LE Client will maintain
                an entry in its LE-ARP cache in the absence of a verification of that
                relationship."
        ::= { wfAtmLecOperConfigEntry 7 }

    wflecOperConfigForwardDelayTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C18 Forward Delay Time. The maximum time that a LE Client will
                maintain an entry in its LE-ARP cache in the absence of a verification
                of that relationship, so long as the Topology Change flag C19 is true."
        ::= { wfAtmLecOperConfigEntry 8 }

    wflecOperConfigTopologyChange OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C19 Topology Change. Boolean indication that the LE Client is
                using the Forward Delay Time C18, instead of the Ageing Time C17, to
                age entries in its LE-ARP cache."
        ::= { wfAtmLecOperConfigEntry 9 }

    wflecOperConfigExpectedArpResponseTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C20 Expected LE_ARP Reponse Time. The maximum time (seconds)
                that the LEC expects an LE_ARP_REQUEST/
                LE_ARP_RESPONSE cycle to take.  Used for retries
                and verifies. "
        ::= { wfAtmLecOperConfigEntry 10 }

    wflecOperConfigFlushTimeOut OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C21 Flush Time-out. Time limit (seconds) to wait to receive a
                LE_FLUSH_RESPONSE after the LE_FLUSH_REQUEST has
                been sent before taking recovery action."
        ::= { wfAtmLecOperConfigEntry 11 }

    wflecOperConfigPathSwitchingDelay OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C22 Path Switching Delay. The time (seconds) since sending a
                frame to the BUS after which the LE Client may
                assume that the frame has been either discarded
                or delivered to the recipient.  May be used to
                bypass the Flush protocol."
        ::= { wfAtmLecOperConfigEntry 12 }

    wflecOperConfigLocalSegmentID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C23 Local Segment ID. The segment ID of the emulated
                LAN.  This is only required for IEEE 802.5 clients
                that are Source Routing bridges.'"
        ::= { wfAtmLecOperConfigEntry 13 }

    wflecOperConfigMulticastSendType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C24 Multicast Send VCC Type. Signalling parameter
                that SHOULD be used by the LE Client when
                establishing the Multicast Send VCC.

                This is the method to be used by the LE Client
                when specifying traffic parameters when it sets
                up the Multicast Send VCC for this emulated LAN."
        ::= { wfAtmLecOperConfigEntry 14 }

    wflecOperConfigMulticastSendAvgRate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C25 Multicast Send VCC AvgRate. Signalling parameter
                that SHOULD be used by the LE Client when
                establishing the Multicast Send VCC.

                Forward and Backward Sustained Cell Rate to be
                requested by LE Client when setting up Multicast
                Send VCC, if using Variable bit rate codings.
                "
        ::= { wfAtmLecOperConfigEntry 15 }

    wflecOperConfigMulticastSendPeakRate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C26 Multicast Send VCC PeakRate. Signalling parameter
                that SHOULD be used by the LE Client when
                establishing the Multicast Send VCC.

                Forward and Backward Peak Cell Rate to be
                requested by LE Client when setting up Multicast
                Send VCC, if using Variable bit rate codings.
                "
        ::= { wfAtmLecOperConfigEntry 16 }

    wflecOperConfigConnectionCompleteTimer OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "C28 Connection Complete Timer. Optional. In
                Connection Establishment this is the time period
                in which data or a READY_IND message is expected
                from a Calling Party."
        ::= { wfAtmLecOperConfigEntry 17 }

    wfAtmLecStatisticsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmLecStatisticsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table of statistics"
        ::= { wfAtmLeGroup 4 }

    wfAtmLecStatisticsEntry OBJECT-TYPE
        SYNTAX	WfAtmLecStatisticsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry contains statistics for each LEC"
        INDEX	{ wflecStatisticsCct }
        ::= { wfAtmLecStatisticsTable 1 }

    WfAtmLecStatisticsEntry ::= SEQUENCE {
    	    wflecArpRequestsOut
    		Counter,
    	    wflecArpRequestsIn
    		Counter,
    	    wflecArpRepliesOut
    		Counter,
    	    wflecArpRepliesIn
    		Counter,
    	    wflecControlFramesOut
    		Counter,
    	    wflecControlFramesIn
    		Counter,
    	    wflecSvcFailures
    		Counter,
    	    wflecStatisticsCct
    		INTEGER,
            wflecUnknownFramesDropped
                Counter
        }

    wflecArpRequestsOut OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of MAC-to-ATM ARP requests made by this
                LAN Emulation client over the LUNI associated with
                this emulated packet interface."
        ::= { wfAtmLecStatisticsEntry 1 }

    wflecArpRequestsIn OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of MAC-to-ATM ARP requests received by
                this LAN Emulation client over the LUNI associated
                with this emulated packet interface.

                Requests may arrive on the Control Direct VCC or on
                the Control Distribute VCC, depending upon how the
                LES is implemented and the chances it has had for
                learning.  This counter covers both VCCs."
        ::= { wfAtmLecStatisticsEntry 2 }

    wflecArpRepliesOut OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of MAC-to-ATM ARP replies sent by this
                LAN Emulation client over the LUNI associated with
                this emulated packet interface."
        ::= { wfAtmLecStatisticsEntry 3 }

    wflecArpRepliesIn OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of MAC-to-ATM ARP replies received by
                this LAN Emulation client over the LUNI associated
                with this emulated packet interface.  This count
                 includes all such replies, whether solicited or not.

                Replies may arrive on the Control Direct VCC or on
                the Control Distribute VCC, depending upon how the
                LES is implemented.  This counter covers both VCCs."
        ::= { wfAtmLecStatisticsEntry 4 }

    wflecControlFramesOut OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of control packets sent by this
                LAN Emulation client over the LUNI associated with
                this emulated packet interface."
        ::= { wfAtmLecStatisticsEntry 5 }

    wflecControlFramesIn OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of control packets received by this
                LAN Emulation client over the LUNI associated with
                this emulated packet interface"
        ::= { wfAtmLecStatisticsEntry 6 }

    wflecSvcFailures OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of SVCs which this client tried to, but failed to, open."
        ::= { wfAtmLecStatisticsEntry 7 }

    wflecStatisticsCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This corresponds to the Wellfleet circuit number"
        ::= { wfAtmLecStatisticsEntry 8 }

    wflecUnknownFramesDropped OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The number of frames that have been dropped due to unknown frame pacing."
        ::= { wfAtmLecStatisticsEntry 9 }

    wfAtmLecServerVccTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmLecServerVccEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Lan Emulation Client - Server VCC Table"
        ::= { wfAtmLeGroup 5 }

    wfAtmLecServerVccEntry OBJECT-TYPE
        SYNTAX	WfAtmLecServerVccEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry contains statistics for each LEC"
        INDEX	{ wflecServerVccCct }
        ::= { wfAtmLecServerVccTable 1 }

    WfAtmLecServerVccEntry ::= SEQUENCE {
    	    wflecConfigDirectInterface
    		INTEGER,
    	    wflecConfigDirectVpi
    		INTEGER,
    	    wflecConfigDirectVci
    		INTEGER,
    	    wflecControlDirectInterface
    		INTEGER,
    	    wflecControlDirectVpi
    		INTEGER,
    	    wflecControlDirectVci
    		INTEGER,
    	    wflecControlDistributeInterface
    		INTEGER,
    	    wflecControlDistributeVpi
    		INTEGER,
    	    wflecControlDistributeVci
    		INTEGER,
    	    wflecMulticastSendInterface
    		INTEGER,
    	    wflecMulticastSendVpi
    		INTEGER,
    	    wflecMulticastSendVci
    		INTEGER,
    	    wflecMulticastForwardInterface
    		INTEGER,
    	    wflecMulticastForwardVpi
    		INTEGER,
    	    wflecMulticastForwardVci
    		INTEGER,
    	    wflecServerVccCct
    		INTEGER
        }

    wflecConfigDirectInterface OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The interface associated with the Configuration Direct VCC. If no
                Configuration Direct VCC exists, this object has the value 0.  Otherwise,
                the objects
                 ( wflecConfigDirectInterface,
                   wflecConfigDirectVPI, wflecConfigDirectVCI )
                identify the circuit"
        ::= { wfAtmLecServerVccEntry 1 }

    wflecConfigDirectVpi OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "If the Configuration Direct VCC exists, this object contains the VPI
                which identifies that VCC at the point where it connects to this LE
                client. Otherwise, this object has the value 0."
        ::= { wfAtmLecServerVccEntry 2 }

    wflecConfigDirectVci OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "If the Configuration Direct VCC exists, this object contains the VCI
                which identifies that VCC at the point where it connects to this LE
                client. Otherwise, this object has the value 0."
        ::= { wfAtmLecServerVccEntry 3 }

    wflecControlDirectInterface OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The interface associated with the Control Direct VCC. If no
                Control Direct VCC exists, this object has the value 0.  Otherwise,
                the objects
                 ( wflecControlDirectInterface,
                   wflecControlDirectVPI, wflecControlDirectVCI )
                identify the circuit"
        ::= { wfAtmLecServerVccEntry 4 }

    wflecControlDirectVpi OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "If the Control Direct VCC exists, this object contains the VPI
                which identifies that VCC at the point where it connects to this LE
                client. Otherwise, this object has the value 0."
        ::= { wfAtmLecServerVccEntry 5 }

    wflecControlDirectVci OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "If the Control Direct VCC exists, this object contains the VCI
                which identifies that VCC at the point where it connects to this LE
                client. Otherwise, this object has the value 0."
        ::= { wfAtmLecServerVccEntry 6 }

    wflecControlDistributeInterface OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The interface associated with the Control Distribute VCC. If no
                Control Distribute VCC exists, this object has the value 0.  Otherwise,
                the objects
                 ( wflecControlDistributeInterface,
                   wflecControlDistributeVPI, wflecControlDistributeVCI )
                identify the circuit"
        ::= { wfAtmLecServerVccEntry 7 }

    wflecControlDistributeVpi OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "If the Control Distribute VCC exists, this object contains the VPI
                which identifies that VCC at the point where it connects to this LE
                client. Otherwise, this object has the value 0."
        ::= { wfAtmLecServerVccEntry 8 }

    wflecControlDistributeVci OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "If the Control Distribute VCC exists, this object contains the VCI
                which identifies that VCC at the point where it connects to this LE
                client. Otherwise, this object has the value 0."
        ::= { wfAtmLecServerVccEntry 9 }

    wflecMulticastSendInterface OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The interface associated with the Multicast Send VCC. If no
                Multicast Send VCC exists, this object has the value 0.  Otherwise,
                the objects
                 ( wflecMulticastSendInterface,
                   wflecMulticastSendVPI, wflecMulticastSendVCI )
                identify the circuit"
        ::= { wfAtmLecServerVccEntry 10 }

    wflecMulticastSendVpi OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "If the Multicast Send VCC exists, this object contains the VPI
                which identifies that VCC at the point where it connects to this LE
                client. Otherwise, this object has the value 0."
        ::= { wfAtmLecServerVccEntry 11 }

    wflecMulticastSendVci OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "If the Multicast Send VCC exists, this object contains the VCI
                which identifies that VCC at the point where it connects to this LE
                client. Otherwise, this object has the value 0."
        ::= { wfAtmLecServerVccEntry 12 }

    wflecMulticastForwardInterface OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The interface associated with the Multicast Forward VCC. If no
                Multicast Forward VCC exists, this object has the value 0.  Otherwise,
                the objects
                 ( wflecMulticastForwardInterface,
                   wflecMulticastForwardVPI, wflecMulticastForwardVCI )
                identify the circuit"
        ::= { wfAtmLecServerVccEntry 13 }

    wflecMulticastForwardVpi OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "If the Multicast Forward VCC exists, this object contains the VPI
                which identifies that VCC at the point where it connects to this LE
                client. Otherwise, this object has the value 0."
        ::= { wfAtmLecServerVccEntry 14 }

    wflecMulticastForwardVci OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "If the Multicast Forward VCC exists, this object contains the VCI
                which identifies that VCC at the point where it connects to this LE
                client. Otherwise, this object has the value 0."
        ::= { wfAtmLecServerVccEntry 15 }

    wflecServerVccCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This corresponds to the Wellfleet circuit number"
        ::= { wfAtmLecServerVccEntry 16 }

    wfAtmLecAtmAddressTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmLecAtmAddressEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "LAN Emulation Client - ATM Addresses table"
        ::= { wfAtmLeGroup 6 }

    wfAtmLecAtmAddressEntry OBJECT-TYPE
        SYNTAX	WfAtmLecAtmAddressEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry contains ATM address for a LE CLient"
        INDEX	{ wflecAtmAddressCct,
    		  wflecAtmAddress }
        ::= { wfAtmLecAtmAddressTable 1 }

    WfAtmLecAtmAddressEntry ::= SEQUENCE {
    	    wflecAtmAddress
    		OCTET STRING,
    	    wflecAtmAddressStatus
    		INTEGER,
    	    wflecAtmAddressCct
    		INTEGER
        }

    wflecAtmAddress OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (20))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ATM address this row describes. This could be
                either a primary address or a secondary address."
        ::= { wfAtmLecAtmAddressEntry 1 }

    wflecAtmAddressStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enbl(1),
    		    dsbl(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Used to create and delete rows in this table.
                A management station cannot disable an ATM address while the client
                is up"
        DEFVAL	{ enbl }
        ::= { wfAtmLecAtmAddressEntry 2 }

    wflecAtmAddressCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This corresponds to the Wellfleet circuit number"
        ::= { wfAtmLecAtmAddressEntry 3 }

    wfAtmLecMacAddressTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmLecMacAddressEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "LAN Emulation Client - MAC Addresses table"
        ::= { wfAtmLeGroup 7 }

    wfAtmLecMacAddressEntry OBJECT-TYPE
        SYNTAX	WfAtmLecMacAddressEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry contains MAC address for a LE CLient"
        INDEX	{ wflecMacAddressCct,
    		  wflecMacAddress }
        ::= { wfAtmLecMacAddressTable 1 }

    WfAtmLecMacAddressEntry ::= SEQUENCE {
    	    wflecMacAddress
    		OCTET STRING,
    	    wflecMacAddressAtmBinding
    		OCTET STRING,
    	    wflecMacAddressCct
    		INTEGER
        }

    wflecMacAddress OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The MAC address this row describes. This could be
                either a primary address or a secondary address."
        ::= { wfAtmLecMacAddressEntry 1 }

    wflecMacAddressAtmBinding OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ATM Address registered for wflecMacAddress"
        ::= { wfAtmLecMacAddressEntry 2 }

    wflecMacAddressCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This corresponds to the Wellfleet circuit number"
        ::= { wfAtmLecMacAddressEntry 3 }

    wfAtmLeArpTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmLeArpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Lan Emulation Client ARP Cache Group

                This table provides access to an ATM LAN Emulation Client's MAC-to-ATM
                ARP cache.  It contains entries for unicast addresses and for the
                broadcast address, but not for multicast MAC addresses."
        ::= { wfAtmLeGroup 9 }

    wfAtmLeArpEntry OBJECT-TYPE
        SYNTAX	WfAtmLeArpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "entry of MAC address to ATM address"
        INDEX	{ wfleArpCct,
    		  wfleArpMacAddress }
        ::= { wfAtmLeArpTable 1 }

    WfAtmLeArpEntry ::= SEQUENCE {
    	    wfleArpMacAddress
    		OCTET STRING,
    	    wfleArpAtmAddress
    		OCTET STRING,
    	    wfleArpIsRemoteAddress
    		INTEGER,
    	    wfleArpEntryType
    		INTEGER,
    	    wfleArpRowStatus
    		INTEGER,
    	    wfleArpCct
    		INTEGER,
            wfleArpVpi
                INTEGER,
            wfleArpVci
                INTEGER
        }

    wfleArpMacAddress OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The MAC address for which this cache entry provides a translation.
                Since ATM LAN Emulation uses an ARP protocol to locate broadcast and
                multicast servers, the value of this object could be the broadcast MAC
                address"
        ::= { wfAtmLeArpEntry 1 }

    wfleArpAtmAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ATM address of the Broadcast & Unknown Server or LAN Emulation
                Client whose MAC address is stored in 'leArpMacAddress'.  "
        ::= { wfAtmLeArpEntry 2 }

    wfleArpIsRemoteAddress OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the 'leArpMACaddress' belongs to a
                remote client.

                true(1)
                  The address is believed to be remote - or its
                  local/remote status is unknown.

                  For an entry created via the LE_ARP mechanism,
                  this corresponds to the 'Remote address' flag
                  being set in the LE_ARP_RESPONSE.

                 false(2)
                   The address is believed to be local - that is
                   to say, registered with the LES by the client
                   whose ATM address is leArpAtmAddress."
        DEFVAL	{ true }
        ::= { wfAtmLeArpEntry 3 }

    wfleArpEntryType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    ctrl(2),
    		    data(3),
    		    vol(4),
    		    nonvol(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates how this LE_ARP table entry was created and
                whether it is aged."
        DEFVAL	{ vol }
        ::= { wfAtmLeArpEntry 4 }

    wfleArpRowStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enbl(1),
    		    dsbl(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Row status of enable or disable"
        DEFVAL	{ enbl }
        ::= { wfAtmLeArpEntry 5 }

    wfleArpCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This corresponds to the Wellfleet circuit number"
        ::= { wfAtmLeArpEntry 6 }

    wfleArpVpi OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "This is the Vpi will be used for this MAC address"
        ::= { wfAtmLeArpEntry 7 }

    wfleArpVci OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "This is the Vci will be used for this MAC address"
        ::= { wfAtmLeArpEntry 8 }

    END  -- Wellfleet-ATM-LE-MIB
-- @(#)WSCCS z/mibs-bb_mib.mib 1.2 9/15/95
Wellfleet-BB-MIB-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:38:20 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfGameGroup
        FROM Wellfleet-COMMON-MIB;


    wfBackboneTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBackboneEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table of Backbone entries, indexed by slot number"
        ::= { wfGameGroup 4 }

    wfBackboneEntry OBJECT-TYPE
        SYNTAX	WfBackboneEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A particular interface"
        INDEX	{ wfBackboneSlot }
        ::= { wfBackboneTable 1 }

    WfBackboneEntry ::= SEQUENCE {
    	    wfBackboneSlot
    		INTEGER,
    	    wfTxDropCtrSlotMask0
    		Counter,
    	    wfTxDropCtrNoGrant
    		Counter,
    	    wfTxDropCtrFlowCtrl
    		Counter,
    	    wfTxDied
    		Counter,
    	    wfTxDramDied
    		Counter,
    	    wfTxIdleErrors
    		Counter,
    	    wfTxNoSomErrors
    		Counter,
    	    wfTxPktSomErrors
    		Counter,
    	    wfTxDropEomErrors
    		Counter,
    	    wfTxOverflowErrors
    		Counter,
    	    wfTxSofErrors
    		Counter,
    	    wfTxDataptrErrors
    		Counter,
    	    wfTxEndptrErrors
    		Counter,
    	    wfTxBoardSpeedMask
    		INTEGER,
    	    wfTxErrorEnableMask
    		INTEGER,
    	    wfTxBusRequestTimeout
    		INTEGER,
    	    wfTxDeadlockTimeout
    		INTEGER,
    	    wfTxIgnoreFlowCtrl
    		INTEGER,
    	    wfTxBackboneSelectMode
    		INTEGER,
    	    wfTxEnableSlotMask0
    		INTEGER,
    	    wfTxFifoSize
    		INTEGER,
    	    wfTxVisControl
    		INTEGER,
    	    wfRxPktNumErrors
    		Counter,
    	    wfRxAddrOvrErrors
    		Counter,
    	    wfRxSomErrors
    		Counter,
    	    wfRxDied
    		Counter,
    	    wfRxUnloadErrors
    		Counter,
    	    wfRxDropCtr
    		Counter,
    	    wfRxSofErrors
    		Counter,
    	    wfRxCrcErrors
    		Counter,
    	    wfRxOvrErrors
    		Counter,
    	    wfRxForceEomErrors
    		Counter,
    	    wfRxMaxEofErrors
    		Counter,
    	    wfRxFifoSize
    		INTEGER,
    	    wfRxReceiveMode
    		INTEGER,
    	    wfRxIgnorePktNum
    		INTEGER,
    	    wfRxVisControl
    		INTEGER,
    	    wfRxErrorEnableMask
    		INTEGER,
    	    wfRxMaxEof
    		INTEGER,
    	    wfRxParitySense
    		INTEGER,
    	    wfRxDeadlockTimeout
    		INTEGER,
    	    wfTxDropWB
    		INTEGER,
    	    wfTxDiedNoPg
    		INTEGER,
    	    wfTxDtbErrors
    		INTEGER,
    	    wfTxPagePtrErrors
    		INTEGER,
    	    wfRxWBCtr
    		INTEGER,
    	    wfRxLinkList0Ctr
    		INTEGER,
    	    wfRxArbErrors
    		INTEGER
        }

    wfBackboneSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The slot number indexes the backbone table"
        ::= { wfBackboneEntry 1 }

    wfTxDropCtrSlotMask0 OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of packets dropped because their slot masks equals zero"
        ::= { wfBackboneEntry 2 }

    wfTxDropCtrNoGrant OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of packets dropped because no bus was granted for TX."
        ::= { wfBackboneEntry 3 }

    wfTxDropCtrFlowCtrl OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of packets dropped because of flow control."
        ::= { wfBackboneEntry 4 }

    wfTxDied OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the TX state machine has died."
        ::= { wfBackboneEntry 5 }

    wfTxDramDied OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the TX DRAM state machine has died."
        ::= { wfBackboneEntry 6 }

    wfTxIdleErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times both pipeline state machines were active simultaneously."
        ::= { wfBackboneEntry 7 }

    wfTxNoSomErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the state machine left idle without start of message."
        ::= { wfBackboneEntry 8 }

    wfTxPktSomErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the TX packet state machine left idle without start of
                message."
        ::= { wfBackboneEntry 9 }

    wfTxDropEomErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the TX detected a drop of an end of message."
        ::= { wfBackboneEntry 10 }

    wfTxOverflowErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the TX detected an overflow condition."
        ::= { wfBackboneEntry 11 }

    wfTxSofErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the TX detected a start offset error condition."
        ::= { wfBackboneEntry 12 }

    wfTxDataptrErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the TX detected that an increment on the data pointer
                caused a carry-out error condition."
        ::= { wfBackboneEntry 13 }

    wfTxEndptrErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the TX detected that the end pointer wrapped in the
                address space when it was formed from the buf pointer and the end offset."
        ::= { wfBackboneEntry 14 }

    wfTxBoardSpeedMask OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The mask describing the speed setting of all boards in the system."
        ::= { wfBackboneEntry 15 }

    wfTxErrorEnableMask OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The mask describing the set of TX errors that are enabled."
        ::= { wfBackboneEntry 16 }

    wfTxBusRequestTimeout OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The timeout value for the TX bus request."
        ::= { wfBackboneEntry 17 }

    wfTxDeadlockTimeout OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The timeout value for the TX bus deadlock."
        ::= { wfBackboneEntry 18 }

    wfTxIgnoreFlowCtrl OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether TX flow control is enabled or not."
        ::= { wfBackboneEntry 19 }

    wfTxBackboneSelectMode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the TX backbone selection mode (1 = MRR8, 0 = First available)."
        ::= { wfBackboneEntry 20 }

    wfTxEnableSlotMask0 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether TX will transmit packets with slot mask 0."
        ::= { wfBackboneEntry 21 }

    wfTxFifoSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the size of the TX FIFO."
        ::= { wfBackboneEntry 22 }

    wfTxVisControl OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The read/write value of TX visibility register used for debug."
        ::= { wfBackboneEntry 23 }

    wfRxPktNumErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the RX detected a packet numbering error."
        ::= { wfBackboneEntry 24 }

    wfRxAddrOvrErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the RX detected a address overrun error."
        ::= { wfBackboneEntry 25 }

    wfRxSomErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the RX detected a start of message error."
        ::= { wfBackboneEntry 26 }

    wfRxDied OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the RX state machine died."
        ::= { wfBackboneEntry 27 }

    wfRxUnloadErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the RX tried to unload an empty FIFO."
        ::= { wfBackboneEntry 28 }

    wfRxDropCtr OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the RX dropped a packet."
        ::= { wfBackboneEntry 29 }

    wfRxSofErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the RX detected a start offset error."
        ::= { wfBackboneEntry 30 }

    wfRxCrcErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the RX detected a CRC error."
        ::= { wfBackboneEntry 31 }

    wfRxOvrErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the RX detected an overrun error."
        ::= { wfBackboneEntry 32 }

    wfRxForceEomErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the RX detected a force end-of-message error."
        ::= { wfBackboneEntry 33 }

    wfRxMaxEofErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the RX detected an end offset error."
        ::= { wfBackboneEntry 34 }

    wfRxFifoSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the size of the RX FIFO."
        ::= { wfBackboneEntry 35 }

    wfRxReceiveMode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the receive mode of the RX."
        ::= { wfBackboneEntry 36 }

    wfRxIgnorePktNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether RX will ignore packet numbering errors."
        ::= { wfBackboneEntry 37 }

    wfRxVisControl OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The read/write value of RX visibility register used for debug."
        ::= { wfBackboneEntry 38 }

    wfRxErrorEnableMask OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The mask describing the set of RX errors that are enabled."
        ::= { wfBackboneEntry 39 }

    wfRxMaxEof OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the maximum end offset that the RX will allow."
        ::= { wfBackboneEntry 40 }

    wfRxParitySense OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the parity sense that RX is expecting."
        ::= { wfBackboneEntry 41 }

    wfRxDeadlockTimeout OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The timeout value for the RX bus deadlock."
        ::= { wfBackboneEntry 42 }

    wfTxDropWB OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of buffers dropped by a Bluefish style TX because it had a Wastebasket page in it."
        ::= { wfBackboneEntry 43 }

    wfTxDiedNoPg OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times a Bluefish style TX died because it recieved a buffer with no pages in it."
        ::= { wfBackboneEntry 44 }

    wfTxDtbErrors OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times a Bluefish style TX recieved a data-back signal from the VBM when it had no VBM access in progress."
        ::= { wfBackboneEntry 45 }

    wfTxPagePtrErrors OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the Bluefish style TX page pointer wrapped in the valid address space."
        ::= { wfBackboneEntry 46 }

    wfRxWBCtr OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of wastebasket pages the Bluefish style Rx recieved from the VBM."
        ::= { wfBackboneEntry 47 }

    wfRxLinkList0Ctr OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the Bluefish style Rx recieved a buffer pointer of 0 from the VBM."
        ::= { wfBackboneEntry 48 }

    wfRxArbErrors OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times a Bluefish style Rx had two recievers trying to write to VBM at the same time."
        ::= { wfBackboneEntry 49 }

    END  -- Wellfleet-BB-MIB-MIB
-- @(#)WSCCS a/mibs-bbn_st2.mib 1.1 8/30/95
ST2-MIB DEFINITIONS ::= BEGIN

         IMPORTS
              enterprises, IpAddress, Counter, Gauge,
                         TimeTicks
                     FROM RFC1155-SMI
              OBJECT-TYPE
                     FROM RFC-1212
              DisplayString
                     FROM RFC1213-MIB
	      wfSt2Group
	      	     FROM Wellfleet-ST2-MIB;


-------- ST2 MIB

stii          OBJECT IDENTIFIER ::= { wfSt2Group 5 }

---- st2 Object Definitions

st2AgentCopyright OBJECT-TYPE
    SYNTAX  DisplayString
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "provider of (company which wrote) the ST-II agent code, code release info and copyright info"
    ::= { stii 1 }

st2ProtoVersion OBJECT-TYPE
    SYNTAX  DisplayString
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "version of ST-II running; RFC-1190 for starters"
    ::= { stii 2 }

st2FlowSpecVersion OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "registered version number of Flow Spec"
    ::= { stii 3 }

st2AgentType OBJECT-TYPE
    SYNTAX  INTEGER {
	other(1),
	intermediateSystem(2),
	endSystem(3),
	intermediateAndEndSystem(4)
	}
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "whether this system performs ST-II end-system or intermediate-system functions or both"
    ::= { stii 4 }

st2RoutingDerived OBJECT-TYPE
    SYNTAX  INTEGER {
	other(1),
	fixed(2),
	regularIP(3)
	}
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "where does ST-II get routes from, whether IP routing tables or some other means"
    ::= { stii 5 }

st2ToAccept OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "Initial hop-by-hop timeout for acknowledgment of ACCEPT"
    ::= { stii 6 }

st2NAccept OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "number of ACCEPT retries before returning a failure"
    ::= { stii 7 }

st2ToConnect OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "Initial hop-by-hop timeout for acknowledgment of CONNECT"
    ::= { stii 8 }

st2NConnect OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "number of CONNECT retries before returning a failure"
    ::= { stii 9 }

st2ToDisconnect OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "Initial hop-by-hop timeout for acknowledgment of DISCONNECT"
    ::= { stii 10 }

st2NDisconnect OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "number of DISCONNECT retries before returning a failure"
    ::= { stii 11 }

st2ToHidAck OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "Initial hop-by-hop timeout for acknowledgment of HID-CHANGE-REQUEST"
    ::= { stii 12 }

st2NHidAck OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "number of HID-CHANGE-REQUEST retries before returning a failure"
    ::= { stii 13 }

st2ToHidChange OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "Initial hop-by-hop timeout for acknowledgment of HID-CHANGE"
    ::= { stii 14 }

st2NHidChange OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "number of HID-CHANGE retries before returning a failure"
    ::= { stii 15 }

st2ToNotify OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "Initial hop-by-hop timeout for acknowledgment of NOTIFY"
    ::= { stii 16 }

st2NNotify OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "number of NOTIFY retries before returning a failure"
    ::= { stii 17 }

st2ToRefuse OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "Initial hop-by-hop timeout for acknowledgment of REFUSE"
    ::= { stii 18 }

st2NRefuse OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "number of REFUSE retries before returning a failure"
    ::= { stii 19 }

st2ToReroute OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "Timeout for receipt of ACCEPT or REFUSE from targets during failure recovery, allowing intermediate systems time to try recovery"
    ::= { stii 20 }

st2NReroute OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "number of CONNECT retries before returning a failure from targets"
    ::= { stii 21 }

st2ToEnd2End OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "End-to-end timeout for receipt of ACCEPT or REFUSE from targets by origin during failure recovery, allowing intermediate systems time to try recovery"
    ::= { stii 22 }

st2NEnd2End OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "number of CONNECT retries before origin returns a failure from targets"
    ::= { stii 23 }

st2NHidAbort OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "Number of rejected HID proposals before aborting the HID negotiation process"
    ::= { stii 24 }

st2HelloTimerHoldDown OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "Interval that Restarted bit must be set after ST Agent restart"
    ::= { stii 25 }

st2HelloLossFactor OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "Number of consecutively missed HELLO messages before declaring link failure to neighbor"
    ::= { stii 26 }

st2DefaultRecoveryTimeout OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "Default for interval between successive HELLOs to/from active neighbors"
    ::= { stii 27 }

st2DefaultHelloFactor OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "HELLO filtering function factor"
    ::= { stii 28 }

st2ScmpRcvdOctets OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Total octets of SCMP messages received"
    ::= { stii 29 }

st2ScmpSentOctets OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Total octets of SCMP messages sent"
    ::= { stii 30 }

st2ScmpRcvdBadTypes OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP messages received with bad type field"
    ::= { stii 31 }

st2ScmpRcvdBadCks OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP messages received with bad checksum"
    ::= { stii 32 }

st2ScmpSentAccepts OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP ACCEPT messages sent"
    ::= { stii 33 }

st2ScmpSentAcks OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP ACK messages sent"
    ::= { stii 34 }

st2ScmpSentChanges OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP CHANGE messages sent"
    ::= { stii 35 }

st2ScmpSentChangeReqs OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP CHANGE-REQUEST messages sent"
    ::= { stii 36 }

st2ScmpSentConnects OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP CONNECT messages sent"
    ::= { stii 37 }

st2ScmpSentDisconnects OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP DISCONNECT messages sent"
    ::= { stii 38 }

st2ScmpSentErrorInReqs OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP ERROR-IN-REQUEST messages sent"
    ::= { stii 39 }

st2ScmpSentErrorInResps OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP ERROR-IN-RESPONSE messages sent"
    ::= { stii 40 }

st2ScmpSentHellos OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP HELLO messages sent"
    ::= { stii 41 }

st2ScmpSentHidApproves OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP HID-APPROVE messages sent"
    ::= { stii 42 }

st2ScmpSentHidChanges OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP HID-CHANGE messages sent"
    ::= { stii 43 }

st2ScmpSentHidChangeReqs OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP HID-CHANGE-REQUEST messages sent"
    ::= { stii 44 }

st2ScmpSentHidRejects OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP HID-REJECT messages sent"
    ::= { stii 45 }

st2ScmpSentNotifys OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP NOTIFY messages sent"
    ::= { stii 46 }

st2ScmpSentRefuses OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP REFUSE messages sent"
    ::= { stii 47 }

st2ScmpSentStatus OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP STATUS messages sent"
    ::= { stii 48 }

st2ScmpSentStatusResps OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP STATUS-RESPONSE messages sent"
    ::= { stii 49 }

st2ScmpRcvdAccepts OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP ACCEPT messages received"
    ::= { stii 50 }

st2ScmpRcvdAcks OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP ACK messages received"
    ::= { stii 51 }

st2ScmpRcvdChanges OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP CHANGE messages received"
    ::= { stii 52 }

st2ScmpRcvdChangeReqs OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP CHANGE-REQUEST messages received"
    ::= { stii 53 }

st2ScmpRcvdConnects OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP CONNECT messages received"
    ::= { stii 54 }

st2ScmpRcvdDisconnects OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP DISCONNECT messages received"
    ::= { stii 55 }

st2ScmpRcvdErrorInReqs OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP ERROR-IN-REQUEST messages received"
    ::= { stii 56 }

st2ScmpRcvdErrorInResps OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP ERROR-IN-RESPONSE messages received"
    ::= { stii 57 }

st2ScmpRcvdHellos OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP HELLO messages received"
    ::= { stii 58 }

st2ScmpRcvdHidApproves OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP HID-APPROVE messages received"
    ::= { stii 59 }

st2ScmpRcvdHidChanges OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP HID-CHANGE messages received"
    ::= { stii 60 }

st2ScmpRcvdHidChangeReqs OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP HID-CHANGE-REQUEST messages received"
    ::= { stii 61 }

st2ScmpRcvdHidRejects OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP HID-REJECT messages received"
    ::= { stii 62 }

st2ScmpRcvdNotifys OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP NOTIFY messages received"
    ::= { stii 63 }

st2ScmpRcvdRefuses OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP REFUSE messages received"
    ::= { stii 64 }

st2ScmpRcvdStatus OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP STATUS messages received"
    ::= { stii 65 }

st2ScmpRcvdStatusResps OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of SCMP STATUS-RESPONSE messages received"
    ::= { stii 66 }

st2ScmpRcvdErrorSnap OBJECT-TYPE
    SYNTAX  OCTET STRING (SIZE (20))
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Contents from last SCMP packet received with error"
    ::= { stii 67 }

st2ScmpRcvdBadTypeTime OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Time that last SCMP packet was received with bad Type field"
    ::= { stii 68 }

st2ScmpRcvdBadCksTime OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Time that last SCMP packet was received with bad checksum"
    ::= { stii 69 }

st2OriginOpens OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of streams opened with this agent as origin, but they may have since been closed"
    ::= { stii 70 }

st2IntermedOpens OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of streams opened with this agent as intermediate system"
    ::= { stii 71 }

st2TargetOpens OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of streams opened with this agent as target (destination) - may also be counted in intermediate"
    ::= { stii 72 }

st2FailOpens OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of stream opens attempted which did not complete"
    ::= { stii 73 }

st2AcceptTimeouts OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of stream opens failed because ACCEPT did not get acknowledged"
    ::= { stii 74 }

st2ParamChangeFails OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of stream parameter changes which failed"
    ::= { stii 75 }

st2NumStreamEntries OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of stream table entries (extent of streams table)"
    ::= { stii 76 }

st2NumOpenStreams OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of streams which are open (number of table entries for them)"
    ::= { stii 77 }

st2NumOpenOriginStreams OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of current open streams which were originated here"
    ::= { stii 78 }

st2NumHops OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of Hop entries (extent of next-hop table)"
    ::= { stii 79 }

st2NumNeighbors OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of Neighbor entries (extent of neighbor table)"
    ::= { stii 80 }

st2NumTargets OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of target entries (extent of target table)"
    ::= { stii 81 }

st2NumGroups OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "count of group entries (extent of groups table)"
    ::= { stii 82 }

st2NumSubgroups OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of subgroup entries (extent of subgroups table)"
    ::= { stii 83 }

st2RouteFailures OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of stream opens failed because no route found"
    ::= { stii 84 }

st2RouteLoops OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of stream opens failed because route inconsistency found, e.g. potential or actual loop"
    ::= { stii 85 }

st2ScmpRetrans OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "count of SCMP control timeout and retransmissions"
    ::= { stii 86 }

st2StreamTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF St2StreamEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
      "table of information for each stream"
    ::= { stii 87 }

-- table name stream, upper Stream, syntax SEQUENCE OF St2StreamEntry
st2StreamEntry OBJECT-TYPE
    SYNTAX  St2StreamEntry
    ACCESS  not-accessible
    STATUS  mandatory
    INDEX   { st2StreamName, st2StreamPrevHopAddr, st2StreamPrevHopVlid }
    ::= { st2StreamTable 1 }

St2StreamEntry ::=
    SEQUENCE {
        st2StreamName                    OCTET STRING,
	st2StreamPrevHopAddr		 IpAddress,
	st2StreamPrevHopVlid		 INTEGER,
        st2StreamStartTime               TimeTicks,
        st2StreamState                   INTEGER,
        st2StreamStateTime               TimeTicks,
        st2StreamRole                    INTEGER,
        st2StreamGroup                   OCTET STRING,
        st2StreamNumSubgroups            Gauge,
        st2StreamNumNextHops             Gauge,
        st2StreamNumTargets              Gauge,
        st2StreamRefuses                 Counter,
        st2StreamFlowspecChanges         Counter,
        st2StreamFlowDutyFactor          INTEGER,
        st2StreamFlowErrorRate           INTEGER,
        st2StreamFlowPrecedence          INTEGER,
        st2StreamFlowReliability         INTEGER,
        st2StreamFlowTradeoffs           INTEGER,
        st2StreamFlowRecoveryTimeout     INTEGER,
        st2StreamFlowLimitOnCost         INTEGER,
        st2StreamFlowLimitOnDelay        INTEGER,
        st2StreamFlowLimitOnPduBytes     INTEGER,
        st2StreamFlowLimitOnPduRate      INTEGER,
        st2StreamFlowMinBytesXRate       INTEGER,
        st2StreamFlowMeanDelay           INTEGER,
        st2StreamFlowDelayVariance       INTEGER,
        st2StreamFlowDesPduBytes         INTEGER,
        st2StreamFlowDesPduRate          INTEGER,
        st2StreamOptionPtp               INTEGER,
        st2StreamOptionFdx               INTEGER,
        st2StreamOptionRecover           INTEGER,
        st2StreamOptionReverseCharge     INTEGER,
        st2StreamOptionTimestamp         INTEGER
    }

st2StreamName OBJECT-TYPE
    SYNTAX  OCTET STRING (SIZE (10))
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "internal format name of this stream"
    ::= { st2StreamEntry 1 }

st2StreamPrevHopAddr OBJECT-TYPE
    SYNTAX  IpAddress
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "previous hop entry which feeds data to this node"
    ::= { st2StreamEntry 2 }

st2StreamPrevHopVlid OBJECT-TYPE
    SYNTAX  INTEGER (1..'FFFF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "virtual link identifier of the previous hop"
    ::= { st2StreamEntry 3 }

st2StreamStartTime OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "timestamp when this stream was first entered in this table"
    ::= { st2StreamEntry 4 }

st2StreamState OBJECT-TYPE
    SYNTAX  INTEGER {
	other(1),
	idle(2),
	hidNotOk(3),
	acceptable(4),
	active(5),
	activeReduced(6),
	passive(7)
	}
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "current state of this stream at this node"
    ::= { st2StreamEntry 5 }

st2StreamStateTime OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "time this stream entered its current state"
    ::= { st2StreamEntry 6 }

st2StreamRole OBJECT-TYPE
    SYNTAX  INTEGER {
	other(1),
	origin(2),
	target(3),
	intermediate(4),
	intermediateAndTarget(5)
	}
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "role that this agent performs for this stream"
    ::= { st2StreamEntry 7 }

st2StreamGroup OBJECT-TYPE
    SYNTAX  OCTET STRING (SIZE (10))
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "group (if any) which this stream is in"
    ::= { st2StreamEntry 8 }

st2StreamNumSubgroups OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "number of subgroups which this stream is in (get info from subgroup table)"
    ::= { st2StreamEntry 9 }

st2StreamNumNextHops OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "number of nexthops to which this stream feeds data (get info from hop table)"
    ::= { st2StreamEntry 10 }

st2StreamNumTargets OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "number of targets to which this stream feeds data (get info from target table)"
    ::= { st2StreamEntry 11 }

st2StreamRefuses OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "number of times this stream has suffered the ignominy of getting changes refused"
    ::= { st2StreamEntry 12 }

st2StreamFlowspecChanges OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "number of times this flowspec has been changed over the duration of this stream."
    ::= { st2StreamEntry 13 }

st2StreamFlowPrecedence OBJECT-TYPE
    SYNTAX  INTEGER (0..'FF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "flowspec precedence field (8 bits) -- NOTE: THIS MOVES DOWN BELOW ERROR RATE"
    ::= { st2StreamEntry 14 }

st2StreamFlowDutyFactor OBJECT-TYPE
    SYNTAX  INTEGER (0..'FF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "flowspec dutyfactor field (8 bits)"
    ::= { st2StreamEntry 15 }

st2StreamFlowErrorRate OBJECT-TYPE
    SYNTAX  INTEGER (0..'FF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "flowspec error rate field (8 bits)"
    ::= { st2StreamEntry 16 }

st2StreamFlowReliability OBJECT-TYPE
    SYNTAX  INTEGER (0..'FF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "flowspec reliability field (8 bits)"
    ::= { st2StreamEntry 17 }

st2StreamFlowTradeoffs OBJECT-TYPE
    SYNTAX  INTEGER (0..'FFFF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "flowspec tradeoffs field (16 bits)"
    ::= { st2StreamEntry 18 }

st2StreamFlowRecoveryTimeout OBJECT-TYPE
    SYNTAX  INTEGER (0..'FFFF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "flowspec recovery timeout field (16 bits)"
    ::= { st2StreamEntry 19 }

st2StreamFlowLimitOnCost OBJECT-TYPE
    SYNTAX  INTEGER (0..'FFFF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "flowspec limit on cost field (16 bits)"
    ::= { st2StreamEntry 20 }

st2StreamFlowLimitOnDelay OBJECT-TYPE
    SYNTAX  INTEGER (0..'FFFF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "flowspec limit on delay field (16 bits)"
    ::= { st2StreamEntry 21 }

st2StreamFlowLimitOnPduBytes OBJECT-TYPE
    SYNTAX  INTEGER (0..'FFFF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "flowspec LIMIT ON PDU BYTES (pdu size in octets) field (16 bits)"
    ::= { st2StreamEntry 22 }

st2StreamFlowLimitOnPduRate OBJECT-TYPE
    SYNTAX  INTEGER (0..'FFFF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "flowspec limit on pdu rate field (16 bits)"
    ::= { st2StreamEntry 23 }

st2StreamFlowMinBytesXRate OBJECT-TYPE
    SYNTAX  INTEGER (0..'FFFFFFFF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "flowspec min bytes x rate field (product gives bandwidth in bytes per 10 seconds; divide by 1250 for Kbits per second) (32 bits)"
    ::= { st2StreamEntry 24 }

st2StreamFlowMeanDelay OBJECT-TYPE
    SYNTAX  INTEGER (0..'FFFFFFFF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "flowspec accumulated mean delay field (32 bits)"
    ::= { st2StreamEntry 25 }

st2StreamFlowDelayVariance OBJECT-TYPE
    SYNTAX  INTEGER (0..'FFFFFFFF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "flowspec accumulated delay variance field (32 bits)"
    ::= { st2StreamEntry 26 }

st2StreamFlowDesPduBytes OBJECT-TYPE
    SYNTAX  INTEGER (0..'FFFF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "flowspec desired pdu bytes (size) field (16 bits)"
    ::= { st2StreamEntry 27 }

st2StreamFlowDesPduRate OBJECT-TYPE
    SYNTAX  INTEGER (0..'FFFF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "flowspec desired pdu rate field (16 bits)"
    ::= { st2StreamEntry 28 }

st2StreamOptionPtp OBJECT-TYPE
    SYNTAX  INTEGER { true(1), false(2) }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "true if POINT TO POINT option specified on this stream"
    ::= { st2StreamEntry 29 }

st2StreamOptionFdx OBJECT-TYPE
    SYNTAX  INTEGER { true(1), false(2) }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "true if FULL DUPLEX option specified on this stream; reverse stream is the same but takes a separate stream table entry in this MIB"
    ::= { st2StreamEntry 30 }

st2StreamOptionRecover OBJECT-TYPE
    SYNTAX  INTEGER { true(1), false(2) }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "false if NO RECOVERY option specified for this stream"
    ::= { st2StreamEntry 31 }

st2StreamOptionReverseCharge OBJECT-TYPE
    SYNTAX  INTEGER { true(1), false(2) }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "true if REVERSE CHARGE option specified for this stream"
    ::= { st2StreamEntry 32 }

st2StreamOptionTimestamp OBJECT-TYPE
    SYNTAX  INTEGER (0..3)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "the TIMESTAMP option specified for this stream"
    ::= { st2StreamEntry 33 }

---- st2 Hop Table

st2HopTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF St2HopEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
      "table of information for each prev- or next-hop"
    ::= { stii 88 }

---- table name hop, upper Hop, syntax SEQUENCE OF St2HopEntry

st2HopEntry OBJECT-TYPE
    SYNTAX  St2HopEntry
    ACCESS  not-accessible
    STATUS  mandatory
 INDEX {st2StreamName,st2StreamPrevHopAddr,st2StreamPrevHopVlid,st2HopNeighborAddr}
    ::= { st2HopTable 1 }

St2HopEntry ::=
    SEQUENCE {
        st2HopHid                        INTEGER,
        st2HopMyVlid                     INTEGER,
        st2HopYourVlid                   INTEGER,
        st2HopState                      INTEGER,
        st2HopStateTime                  TimeTicks,
        st2HopNumTargets                 Gauge,
        st2HopMcastAddr                  IpAddress,
        st2HopErrorCode                  INTEGER,
        st2HopDetectorAddr               IpAddress,
        st2HopNeighborAddr               IpAddress,
        st2HopStreamName                 OCTET STRING,
        st2HopPkts                       Counter,
        st2HopOctets                     Counter,
        st2HopDiscards                   Counter,
        st2HopIpEncap                    INTEGER,
        st2HopIpAddr                     IpAddress,
        st2HopRole                       INTEGER,
        st2HopInterfaceIndex             INTEGER,
        st2HopErrorTime                  TimeTicks
    }

st2HopHid OBJECT-TYPE
    SYNTAX  INTEGER (0..'FFFF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "HID which this node has negotiated with this next hop (and all others on a multicast)"
    ::= { st2HopEntry 1 }

st2HopMyVlid OBJECT-TYPE
    SYNTAX  INTEGER (0..'FFFF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "VLID (table index or something) by which this next hop addresses me"
    ::= { st2HopEntry 2 }

st2HopYourVlid OBJECT-TYPE
    SYNTAX  INTEGER (0..'FFFF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "VLID (table index or something) by which I address this next hop"
    ::= { st2HopEntry 3 }

st2HopState OBJECT-TYPE
    SYNTAX  INTEGER {
	ok(1),
	open(2),
	negotiating(3)
	}
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "state of negotiation for this stream to this hop"
    ::= { st2HopEntry 4 }

st2HopStateTime OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "time this state was entered"
    ::= { st2HopEntry 5 }

st2HopNumTargets OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "number of targets reached via this next hop"
    ::= { st2HopEntry 6 }

st2HopMcastAddr OBJECT-TYPE
    SYNTAX  IpAddress
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "multicast address, if any, used to reach this hop and others on same net (for current ST-II, this does not work here)(this should be an IP multicast address, or some magic IP address which translates into local-net multicast"
    ::= { st2HopEntry 7 }

st2HopErrorCode OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "refuse code or other error indicator received from next hop"
    ::= { st2HopEntry 8 }

st2HopDetectorAddr OBJECT-TYPE
    SYNTAX  IpAddress
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "detector address field from error message received from next hop"
    ::= { st2HopEntry 9 }

st2HopNeighborAddr OBJECT-TYPE
    SYNTAX  IpAddress
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "ip address of neighbor which is this next hop (it has the info rfc1190 to all next hops for streams which go through that node)"
    ::= { st2HopEntry 10 }

st2HopStreamName OBJECT-TYPE
    SYNTAX  OCTET STRING (SIZE (10))
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "back pointer to stream for which this is a hop"
    ::= { st2HopEntry 11 }

st2HopPkts OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "count of packets received from this hop in this stream, or sent in this stream to this hop, depending on st2HopRole"
    ::= { st2HopEntry 12 }

st2HopOctets OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "count of octets received from this hop in this stream, or sent in this stream to this hop, depending on st2HopRole"
    ::= { st2HopEntry 13 }

st2HopDiscards OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "count of packets received from this hop in this stream and not processed, or not able to be sent in this stream to this hop, depending on st2HopRole"
    ::= { st2HopEntry 14 }

st2HopIpEncap OBJECT-TYPE
    SYNTAX  INTEGER { true(1), false(2) }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "true if data for this stream is sent with IP encapsulation to this next hop"
    ::= { st2HopEntry 15 }

st2HopIpAddr OBJECT-TYPE
    SYNTAX  IpAddress
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "if ip encapsulation is on, this is the direct (local) next hop IP address of the next router on the path.  the ST agent next hop can be further away.  Implementations might store this so as to bypass the IP routing function."
    ::= { st2HopEntry 16 }

st2HopRole OBJECT-TYPE
    SYNTAX  INTEGER { nexthop(1), prevhop(2) }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "tells whether this hop entry is a previous-hop for this stream or a next-hop.  this is to help identify whether the packet, octet and discard counters are for input from a prev-hop or output to a next-hop."
    ::= { st2HopEntry 17 }

st2HopInterfaceIndex OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Interface Index"
    ::= { st2HopEntry 18 }

st2HopErrorTime OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Time when refuse code or other error occurs"
    ::= { st2HopEntry 19 }


---- st2 Neighbor Table

st2NeighborTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF St2NeighborEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
      "table of information for each neighbor common info"
    ::= { stii 89 }

-- table name neighbor, upper Neighbor, syntax SEQUENCE OF St2NeighborEntry

st2NeighborEntry OBJECT-TYPE
    SYNTAX  St2NeighborEntry
    ACCESS  not-accessible
    STATUS  mandatory
    INDEX   { st2NeighborAddr }
    ::= { st2NeighborTable 1 }

St2NeighborEntry ::=
    SEQUENCE {
        st2NeighborAddr                  IpAddress,
        st2NeighborState                 INTEGER,
        st2NeighborStateTime             TimeTicks,
        st2NeighborNumHops               Gauge,
        st2NeighborHelloTimer            TimeTicks,
        st2NeighborHelloRcvdTime         TimeTicks,
        st2NeighborDataRcvdTime          TimeTicks,
        st2NeighborAckRequested          INTEGER,
        st2NeighborRestarted             INTEGER,
        st2NeighborSentHellos            Counter,
        st2NeighborRcvdHellos            Counter,
        st2NeighborMissedHellos          Counter,
        st2NeighborRoundTripTime         TimeTicks,
        st2NeighborInterfaceIdx          INTEGER,
        st2NeighborStBadMsgs             Counter,
        st2NeighborScmpBadMsgs           Counter
    }

st2NeighborAddr OBJECT-TYPE
    SYNTAX  IpAddress
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "address of neighbor ST Agent serving as nexthop or previous hop for one or more streams"
    ::= { st2NeighborEntry 1 }

st2NeighborState OBJECT-TYPE
    SYNTAX  INTEGER {
	up(1),
	down(2)
	}
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "state of neighbor ST Agent w.r.t. hellos and data"
    ::= { st2NeighborEntry 2 }

st2NeighborStateTime OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "time entered this state of neighbor ST Agent"
    ::= { st2NeighborEntry 3 }

st2NeighborNumHops OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "number of hops using this neighbor for next or prev"
    ::= { st2NeighborEntry 4 }

st2NeighborHelloTimer OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "min of hello times based on RecoveryTimeout for all streams via this neighbor - or possibly default.  Note: ST specifies this in milliseconds"
    ::= { st2NeighborEntry 5 }

st2NeighborHelloRcvdTime OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "timestamp when most recent hello received from this neighbor"
    ::= { st2NeighborEntry 6 }

st2NeighborDataRcvdTime OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "timestamp when most recent ST data received from this neighbor - this may be updated infrequently, perhaps every couple of seconds"
    ::= { st2NeighborEntry 7 }

st2NeighborAckRequested OBJECT-TYPE
    SYNTAX  INTEGER { true(1), false(2) }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "I have requested an ACK from this neighbor, still outstanding - for RTT estimation"
    ::= { st2NeighborEntry 8 }

st2NeighborRestarted OBJECT-TYPE
    SYNTAX  INTEGER { true(1), false(2) }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "hello received from this neighbor with the restart bit on indicating neighbor has restarted recently"
    ::= { st2NeighborEntry 9 }

st2NeighborSentHellos OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "count of hellos sent to this neighbor"
    ::= { st2NeighborEntry 10 }

st2NeighborRcvdHellos OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "count of hellos received from this neighbor"
    ::= { st2NeighborEntry 11 }

st2NeighborMissedHellos OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "count of hellos expected which were not received from this neighbor"
    ::= { st2NeighborEntry 12 }

st2NeighborRoundTripTime OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "current estimate of round trip time to this neighbor based on hello exchanges"
    ::= { st2NeighborEntry 13 }

st2NeighborInterfaceIdx OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "internal index of interface which reaches this neighbor"
    ::= { st2NeighborEntry 14 }

st2NeighborStBadMsgs OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "count of bad stream data messages received from this neighbor"
    ::= { st2NeighborEntry 15 }

st2NeighborScmpBadMsgs OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "count of bad stream control messages received from this neighbor"
    ::= { st2NeighborEntry 16 }

---- st2 Target Table

st2TargetTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF St2TargetEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
      "table of information for each target"
    ::= { stii 90 }

-- table name target, upper Target, syntax SEQUENCE OF St2TargetEntry

st2TargetEntry OBJECT-TYPE
    SYNTAX  St2TargetEntry
    ACCESS  not-accessible
    STATUS  mandatory
    INDEX   { st2StreamName, st2TargetAddr }
    ::= { st2TargetTable 1 }

St2TargetEntry ::=
    SEQUENCE {
        st2TargetAddr                    IpAddress,
        st2TargetHop                     IpAddress,
        st2TargetStreamName              OCTET STRING
    }

st2TargetAddr OBJECT-TYPE
    SYNTAX  IpAddress
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "ip address of target"
    ::= { st2TargetEntry 1 }

st2TargetHop OBJECT-TYPE
    SYNTAX  IpAddress
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "ip address of the nexthop which gets to this target"
    ::= { st2TargetEntry 2 }

st2TargetStreamName OBJECT-TYPE
    SYNTAX  OCTET STRING (SIZE (10))
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "name of the stream this target is a member of"
    ::= { st2TargetEntry 3 }

---- st2 Group Table

st2GroupTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF St2GroupEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
      "table of information for each group"
    ::= { stii 91 }

-- table name group, upper Group, syntax SEQUENCE OF St2GroupEntry

st2GroupEntry OBJECT-TYPE
    SYNTAX  St2GroupEntry
    ACCESS  not-accessible
    STATUS  mandatory
    INDEX   { st2GroupName }
    ::= { st2GroupTable 1 }

St2GroupEntry ::=
    SEQUENCE {
        st2GroupName                     OCTET STRING,
        st2GroupId                       INTEGER,
        st2GroupNumStreams               Gauge,
        st2GroupNumSubgroups             Gauge
    }

st2GroupName OBJECT-TYPE
    SYNTAX  OCTET STRING (SIZE (10))
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "the ST-II name of this group of streams"
    ::= { st2GroupEntry 1 }

st2GroupId OBJECT-TYPE
    SYNTAX  INTEGER (0..'FFFF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "a group identifier"
    ::= { st2GroupEntry 2 }

st2GroupNumStreams OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "number of streams which are members of this group"
    ::= { st2GroupEntry 3 }

st2GroupNumSubgroups OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "number of subgroups in this group"
    ::= { st2GroupEntry 4 }

---- st2 Subgroup Table

st2SubgroupTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF St2SubgroupEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
      "table of information for each sub-group"
    ::= { stii 92 }

-- table name subgroup, upper Subgroup, syntax SEQUENCE OF St2SubgroupEntry

st2SubgroupEntry OBJECT-TYPE
    SYNTAX  St2SubgroupEntry
    ACCESS  not-accessible
    STATUS  mandatory
    INDEX   { st2SubgroupIndex }
    ::= { st2SubgroupTable 1 }

St2SubgroupEntry ::=
    SEQUENCE {
        st2SubgroupGroup                 OCTET STRING,
        st2SubgroupNumStreams            Gauge,
        st2SubgroupIndex                 INTEGER
    }

st2SubgroupGroup OBJECT-TYPE
    SYNTAX  OCTET STRING (SIZE (10))
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "group which this subgroup is a member"
    ::= { st2SubgroupEntry 1 }

st2SubgroupNumStreams OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "number of streams in this subgroup"
    ::= { st2SubgroupEntry 2 }

st2SubgroupIndex OBJECT-TYPE
    SYNTAX  INTEGER (0..'FFFF'h)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "internal index into sub-group table"
    ::= { st2SubgroupEntry 3 }

---- st2 Interface Table

st2InterfaceTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF St2InterfaceEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
      "table of information for each interface"
    ::= { stii 93 }

-- table name interface, upper Interface, syntax SEQUENCE OF St2InterfaceEntry

st2InterfaceEntry OBJECT-TYPE
    SYNTAX  St2InterfaceEntry
    ACCESS  not-accessible
    STATUS  mandatory
    INDEX   { st2InterfaceIndex }
    ::= { st2InterfaceTable 1 }

St2InterfaceEntry ::=
    SEQUENCE {
        st2InterfaceIndex                INTEGER,
        st2InterfaceNumInStreams         Gauge,
        st2InterfaceNumOutStreams        Gauge,
        st2InterfaceNumNeighbors         Gauge,
        st2InterfaceInBwReserved         Gauge,
        st2InterfaceInBwReservable       Gauge,
        st2InterfaceOutBwReserved        Gauge,
        st2InterfaceOutBwReservable      Gauge,
	st2InterfaceTotRcvdPkts		 Counter,
	st2InterfaceTotSentPkts		 Counter,
	st2InterfaceTotRcvdOctets	 Counter,
	st2InterfaceTotSentOctets	 Counter,
	st2InterfaceRcvdHdrErrors	 Counter,
	st2InterfaceRcvdHidErrors	 Counter,
	st2InterfaceRcvdLenErrors	 Counter,
	st2InterfaceRcvdHdrErrorTime	 TimeTicks,
	st2InterfaceRcvdHidErrorTime	 TimeTicks,
	st2InterfaceRcvdLenErrorTime	 TimeTicks,
	st2InterfaceRcvdErrorSnap	 DisplayString,
	st2InterfaceRcvdPktDrops	 Counter,
	st2InterfaceSentPktDrops	 Counter,
	st2InterfaceIpAddr	 	 IpAddress
    }

st2InterfaceIndex OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "interface index of this interface - like ifIndex from main MIB"
    ::= { st2InterfaceEntry 1 }

st2InterfaceNumInStreams OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "number of streams coming in this interface"
    ::= { st2InterfaceEntry 2 }

st2InterfaceNumOutStreams OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "number of streams going out this interface"
    ::= { st2InterfaceEntry 3 }

st2InterfaceNumNeighbors OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "number of neighbors on this interface being used as prev or next hop"
    ::= { st2InterfaceEntry 4 }

st2InterfaceInBwReserved OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "total of flowspec (bytes x rate) into this interface in units of bits-per-second"
    ::= { st2InterfaceEntry 5 }

st2InterfaceInBwReservable OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "amount of bandwidth remaining able to be reserved for input into this interface in units of bits-per-second"
    ::= { st2InterfaceEntry 6 }

st2InterfaceOutBwReserved OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "total of flowspec (bytes x rate) out of this interface in units of bits-per-second"
    ::= { st2InterfaceEntry 7 }

st2InterfaceOutBwReservable OBJECT-TYPE
    SYNTAX  Gauge
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "amount of bandwidth remaining able to be reserved for output out of this interface in units of bits-per-second"
    ::= { st2InterfaceEntry 8 }

st2InterfaceTotRcvdPkts OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of stream data packets received overall (for streams both current and expired)"
    ::= { st2InterfaceEntry 9 }

st2InterfaceTotSentPkts OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of stream data packets sent overall (??) including replications for multiple output interfaces and multiple next-hops when multicast is not used ( make this per interface ??)"
    ::= { st2InterfaceEntry 10 }

st2InterfaceTotRcvdOctets OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of stream data octets received overall"
    ::= { st2InterfaceEntry 11 }

st2InterfaceTotSentOctets OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of stream data octets sent"
    ::= { st2InterfaceEntry 12 }

st2InterfaceRcvdHdrErrors OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of stream data packets received with header format errors"
    ::= { st2InterfaceEntry 13 }

st2InterfaceRcvdHidErrors OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of stream data packets received with errors in HID"
    ::= { st2InterfaceEntry 14 }

st2InterfaceRcvdLenErrors OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of stream data packets received with errors in length"
    ::= { st2InterfaceEntry 15 }

st2InterfaceRcvdHdrErrorTime OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Time of last stream data packet received with header format errors"
    ::= { st2InterfaceEntry 16 }

st2InterfaceRcvdHidErrorTime OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Time of last stream data packet received with errors in HID"
    ::= { st2InterfaceEntry 17 }

st2InterfaceRcvdLenErrorTime OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Time of last stream data packet received with errors in length"
    ::= { st2InterfaceEntry 18 }

st2InterfaceRcvdErrorSnap OBJECT-TYPE
    SYNTAX  DisplayString
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Contents from last stream data packet received with error"
    ::= { st2InterfaceEntry 19 }

st2InterfaceRcvdPktDrops OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of stream data packets received and dropped due to resource limitations"
    ::= { st2InterfaceEntry 20 }

st2InterfaceSentPktDrops OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Count of stream data packets sent and dropped due to resource limitations"
    ::= { st2InterfaceEntry 21 }

st2InterfaceIpAddr OBJECT-TYPE
    SYNTAX  IpAddress
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Interface Ip address"
    ::= { st2InterfaceEntry 22 }

st2LastCloseStreamName OBJECT-TYPE
    SYNTAX  OCTET STRING (SIZE (10))
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Last close stream name"
    ::= { stii 94 }

st2LastClosePrevHopIpAddr OBJECT-TYPE
    SYNTAX  IpAddress
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Last close previous hop Ip address"
    ::= { stii 95 }

st2LastCloseReasonCode OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Reason code field from the last close message"
    ::= { stii 96 }

st2LastCloseDetectorIpAddress OBJECT-TYPE
    SYNTAX  IpAddress
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "detector address from the last close message"
    ::= { stii 97 }

st2LastCloseTime OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "sysuptime when the last close received"
    ::= { stii 98 }


END
-- @(#)WSCCS v/mibs-bgp.mib 1.2 10/25/95
Wellfleet-BGP-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:38:26 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfBgpGroup
        FROM Wellfleet-COMMON-MIB;


    wfBgpGeneralGroup     OBJECT IDENTIFIER ::= { wfBgpGroup 1 }
    wfBgp		OBJECT IDENTIFIER ::= { wfBgpGeneralGroup 1 }
    wfBgp3Group           OBJECT IDENTIFIER ::= { wfBgpGroup 2 }
    wfBgp4Group           OBJECT IDENTIFIER ::= { wfBgpGroup 3 }


    wfBgpDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter for determining whether or not BGP is
                configured on this router."
        DEFVAL	{ created }
        ::= { wfBgp 1 }

    wfBgpDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for determining whether or not to allow any
                versions of BGP to start up."
        DEFVAL	{ enabled }
        ::= { wfBgp 2 }

    wfBgpState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    invalid(4),
    		    notpresent(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the administrative state of BGP"
        DEFVAL	{ notpresent }
        ::= { wfBgp 3 }

    wfBgpIdentifier OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The BGP Identifier for this router."
        ::= { wfBgp 4 }

    wfBgpLocalAs OBJECT-TYPE
        SYNTAX	INTEGER(0..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Autonomous System (AS) that this router belongs to."
        ::= { wfBgp 5 }

    wfBgpEbgpDebugSwitch OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If this debug switch is enabled, BGP will not enforce the rule
                that requires each EBGP peer to be on a directly attached network."
        DEFVAL	{ disabled }
        ::= { wfBgp 6 }

    wfBgpVersion OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Vector of supported BGP protocol version numbers.
                Each peer negotiates the version from this vector.
                Versions are identified via the string of bits
                contained within this attribute. The first octet
                contains bits 0 to 7, the second octet contains
                bits 8 to 15, and so on, with the most significant
                bit referring to the lowest bit number in the octet
                (e.g., the MSB of the first octet refers to bit 0).
                If a bit, i, is present and set, then the version (i+1)
                of the BGP is supported."
        ::= { wfBgp 7 }

    wfBgpIntraAsIbgpRouting OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If this switch is enabled, BGP will perform
                Intra-AS IBGP routing."
        DEFVAL	{ enabled }
        ::= { wfBgp 8 }

    wfIbgpFromProtocols OBJECT-TYPE
        SYNTAX	INTEGER {
    		    bgp(1),
    		    all(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "if Intra-AS IBGP routing is enabled, this attribute
                spcifies if non-BGP external routes can be propogated
                via IBGP."
        DEFVAL	{ bgp }
        ::= { wfBgp 9 }

    wfBgpIntAdvTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the minimum time interval, in seconds, between injections
                of EBGP routes into the IP routing table. default is 5.
                Can't be zero"
        DEFVAL	{ 5 }
        ::= { wfBgp 10 }

    wfBgpUsedRoutes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of received BGP routes that have been submitted
                for possible inclusion in the IP routing table."
        ::= { wfBgp 11 }

    wfBgpTotalRoutes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the total number of BGP routes currently maintained."
        ::= { wfBgp 12 }

    wfBgpTotalPaths OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the total number of BGP path attributes blocks currently
                maintained."
        ::= { wfBgp 13 }

    wfBgpMaxRedundantIbgpRoutes OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the maximum number of IBGP routes
                to the same destination to be stored. At this
                point at least one route is stored even if
                zero is specified.
                If set to BGP_MAX_REDUNDANT_RTS_MAXIMUM,
                no limit will be imposed."
        DEFVAL	{ 255 }
        ::= { wfBgp 14 }

    wfBgpRouteRequestSwitch OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If this switch is enabled and at least one
                connection to IBGP route server is enabled,
                    alternate routes to a destination which became
                    unreachable will be requested from the Route
                    Server."
        DEFVAL	{ enabled }
        ::= { wfBgp 15 }

    wfBgpConnCollisionDetect OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If this switch is enabled, redundant BGP connections
                to the same router will be detected and disallowed,
                i.e. only one BGP connection to the same router will
                be maintained."
        DEFVAL	{ enabled }
        ::= { wfBgp 16 }

    wfBgpRsTopology OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    client(2),
    		    mesh(3),
    		    tree(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies IBGP Route Server connection topology:
                none(Non-RS), RC, full-mesh, or tree. To enable Route Server mode
                full-mesh or tree topology must be selected."
        DEFVAL	{ none }
        ::= { wfBgp 17 }

    wfBgpClusterIdentifier OBJECT-TYPE
        SYNTAX	INTEGER(0..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If RS Server, cluster Identifer for this server"
        ::= { wfBgp 18 }

    wfBgpDynamicPolChangeSupport OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If this switch is enabled, when a BGP policy rule changes
                 all affected routes are dynamically re-evaluated according
                 to the new policy specification.

                 If this switch is disabled, all bgp connections are restarted."
        DEFVAL	{ enabled }
        ::= { wfBgp 19 }


    wfBgp3		OBJECT IDENTIFIER ::= { wfBgp3Group 1 }

    wfBgp3Delete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter for determining whether or not BGP3 is
                configured on this router."
        DEFVAL	{ created }
        ::= { wfBgp3 1 }

    wfBgp3Disable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for determining whether or not to start-up
                BGP3."
        DEFVAL	{ enabled }
        ::= { wfBgp3 2 }

    wfBgp3State OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    invalid(4),
    		    notpresent(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the administrative state of BGP-3"
        DEFVAL	{ notpresent }
        ::= { wfBgp3 3 }

    wfBgp3IntraAsIbgpRouting OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "If this switch is enabled, BGP-3 will perform
                Intra-AS IBGP routing."
        DEFVAL	{ enabled }
        ::= { wfBgp3 4 }

    wfBgp3IntAdvTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "the minimum time interval, in seconds, between injections
                of EBGP routes into the IP routing table.  default is 5.
                can't be zero"
        DEFVAL	{ 5 }
        ::= { wfBgp3 5 }

    wfBgp3RipRules OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "if enabled, IBGP routes that are also reachable via
                a RIP route will be consider 'reachable' and will be used.
                the use of this is highly discouraged."
        DEFVAL	{ disabled }
        ::= { wfBgp3 6 }

    wfBgp3UsedRoutes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "the number of received BGP-3 routes that have been submitted
                for possible inclusion in the IP routing table."
        ::= { wfBgp3 7 }

    wfBgp3TotalRoutes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "the total number of BGP-3 routes currently maintained."
        ::= { wfBgp3 8 }

    wfBgp4		OBJECT IDENTIFIER ::= { wfBgp4Group 1 }

    wfBgp4Delete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter for determining whether or not BGP-4 is
                configured on this router."
        DEFVAL	{ created }
        ::= { wfBgp4 1 }

    wfBgp4Disable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for determining whether or
                not to start-up BGP-4."
        DEFVAL	{ enabled }
        ::= { wfBgp4 2 }

    wfBgp4State OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    invalid(4),
    		    notpresent(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the administrative state of BGP-4"
        DEFVAL	{ notpresent }
        ::= { wfBgp4 3 }

    wfBgpPeerTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBgpPeerEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The BGP Peer table contains configuration and statistical information
                regarding this router's BGP peers"
        ::= { wfBgpGeneralGroup 2 }

    wfBgpPeerEntry OBJECT-TYPE
        SYNTAX	WfBgpPeerEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the BGP-Peer table"
        INDEX	{ wfBgpPeerLocalAddr,
    		  wfBgpPeerRemoteAddr }
        ::= { wfBgpPeerTable 1 }

    WfBgpPeerEntry ::= SEQUENCE {
    	    wfBgpPeerDelete
    		INTEGER,
    	    wfBgpPeerDisable
    		INTEGER,
    	    wfBgpPeerState
    		INTEGER,
    	    wfBgpPeerLocalAddr
    		IpAddress,
    	    wfBgpPeerLocalPort
    		INTEGER,
    	    wfBgpPeerRemoteAddr
    		IpAddress,
    	    wfBgpPeerRemotePort
    		INTEGER,
    	    wfBgpPeerMinVersion
    		INTEGER,
    	    wfBgpPeerMaxVersion
    		INTEGER,
    	    wfBgpPeerRemoteAs
    		INTEGER,
    	    wfBgpPeerExtAdvTimer
    		INTEGER,
    	    wfBgpPeerConnectRetry
    		INTEGER,
    	    wfBgpPeerCfgHoldtime
    		INTEGER,
    	    wfBgpPeerHoldtime
    		INTEGER,
    	    wfBgpPeerCfgKeepAlive
    		INTEGER,
    	    wfBgpPeerKeepAlive
    		INTEGER,
    	    wfBgpPeerPathAttrSwitch
    		INTEGER,
    	    wfBgpPeerIdentifier
    		IpAddress,
    	    wfBgpPeerConnState
    		INTEGER,
    	    wfBgpPeerNegotiatedVersion
    		INTEGER,
    	    wfBgpPeerInUpdates
    		Counter,
    	    wfBgpPeerOutUpdates
    		Counter,
    	    wfBgpPeerInTotalMessages
    		Counter,
    	    wfBgpPeerOutTotalMessages
    		Counter,
    	    wfBgpPeerLastError
    		OCTET STRING,
    	    wfBgpPeerTotalRoutes
    		Counter,
    	    wfBgpPeerFsmEstablishedTransitions
    		Counter,
    	    wfBgpPeerFsmEstablishedTime
    		Gauge,
    	    wfBgpPeerInUpdateElapsedTime
    		Gauge,
    	    wfBgpPeerMinASOriginationInterval
    		INTEGER,
    	    wfBgpPeerLocalAS
    		INTEGER,
    	    wfBgpPeerMaxUpdateSize
    		INTEGER,
    	    wfBgpPeerRouteEchoSwitch
    		INTEGER,
    	    wfBgpPeerDiscardDuplicateRouteSwitch
    		INTEGER,
    	    wfBgpPeerRSMode
    		INTEGER,
    	    wfBgpPeerRSIdentifier
    		INTEGER,
    	    wfBgpPeerCfgDelayGranularity
    		INTEGER,
    	    wfBgpPeerDelayGranularity
    		INTEGER
        }

    wfBgpPeerDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete: if set to delete, the peer connection is removed"
        DEFVAL	{ created }
        ::= { wfBgpPeerEntry 1 }

    wfBgpPeerDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable: controls whether the peer connection is enabled
                or disabled"
        DEFVAL	{ enabled }
        ::= { wfBgpPeerEntry 2 }

    wfBgpPeerState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    invalid(4),
    		    notpresent(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the administrative state of the peer connection on this interface"
        DEFVAL	{ notpresent }
        ::= { wfBgpPeerEntry 3 }

    wfBgpPeerLocalAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the local interface address"
        ::= { wfBgpPeerEntry 4 }

    wfBgpPeerLocalPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the local TCP port number"
        ::= { wfBgpPeerEntry 5 }

    wfBgpPeerRemoteAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the peer's interface address"
        ::= { wfBgpPeerEntry 6 }

    wfBgpPeerRemotePort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the peer's TCP port number"
        ::= { wfBgpPeerEntry 7 }

    wfBgpPeerMinVersion OBJECT-TYPE
        SYNTAX	INTEGER {
    		    bgp3(3),
    		    bgp4(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the minimum BGP version number supported on this connection.
                Default is 4."
        DEFVAL	{ bgp4 }
        ::= { wfBgpPeerEntry 8 }

    wfBgpPeerMaxVersion OBJECT-TYPE
        SYNTAX	INTEGER {
    		    bgp3(3),
    		    bgp4(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the maximum BGP version number supported on this connection
                Default is 4."
        DEFVAL	{ bgp4 }
        ::= { wfBgpPeerEntry 9 }

    wfBgpPeerRemoteAs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the configured peer's AS number. this must be filled in.
                the AS received in the open message must match this one."
        ::= { wfBgpPeerEntry 10 }

    wfBgpPeerExtAdvTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Time interval in seconds for the MinRouteAdvertisementInterval
                BGP timer. Default is 30.  Can't be zero"
        DEFVAL	{ 30 }
        ::= { wfBgpPeerEntry 11 }

    wfBgpPeerConnectRetry OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the ConnectRetry timer, in seconds. this is the time between
                TCP connection attempts."
        DEFVAL	{ 120 }
        ::= { wfBgpPeerEntry 12 }

    wfBgpPeerCfgHoldtime OBJECT-TYPE
        SYNTAX	INTEGER(3..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the configured Holdtime timer, in seconds. this is the maximum
                time that the peer can wait without receiving a KEEPALIVE from
                this speaker. if no hold timer is to be used (for an SVC), zero
                should be entered.  otherwise, the value must be 3 or greater.
                this value is sent in the OPEN message.  upon receipt of an
                OPEN, the received hold time is compared to this value.
                if both are zero, no hold timer will be run and periodic
                keepalives will not be sent.  otherwise, the minimum
                of the two timers will be used.  if this results in a
                hold timer of less than 3, 3 will be used."
        DEFVAL	{ 90 }
        ::= { wfBgpPeerEntry 13 }

    wfBgpPeerHoldtime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the Holdtime timer value that was negotiated and is in use"
        ::= { wfBgpPeerEntry 14 }

    wfBgpPeerCfgKeepAlive OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the configured KeepAlive timer, in seconds. this is the interval
                between sending KEEPALIVE messages.  if the hold timer was set to
                zero, this is ignored.  otherwise, the KeepAlive timer will
                be set to the minimum of this value and 1/3 of the hold timer."
        DEFVAL	{ 30 }
        ::= { wfBgpPeerEntry 15 }

    wfBgpPeerKeepAlive OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the value used for the KeepAlive timer"
        ::= { wfBgpPeerEntry 16 }

    wfBgpPeerPathAttrSwitch OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "controls whether the wfBgp3PathAttrTable (and the
                bgpRcvdPathAttrTable) will be maintained."
        DEFVAL	{ enabled }
        ::= { wfBgpPeerEntry 17 }

    wfBgpPeerIdentifier OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the BGP ID of the Peer"
        ::= { wfBgpPeerEntry 18 }

    wfBgpPeerConnState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    idle(1),
    		    connect(2),
    		    active(3),
    		    opensent(4),
    		    openconfirm(5),
    		    established(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the state of the BGP connection FSM"
        DEFVAL	{ idle }
        ::= { wfBgpPeerEntry 19 }

    wfBgpPeerNegotiatedVersion OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the negotiated version of BGP running between the two peers"
        ::= { wfBgpPeerEntry 20 }

    wfBgpPeerInUpdates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of BGP UPDATE messages received on this connection.
                This object should be initialized to zero when the connection
                is established."
        ::= { wfBgpPeerEntry 21 }

    wfBgpPeerOutUpdates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of BGP UPDATE messages transmitted on this connection.
                This object should be initialized to zero when the connection is
                established."
        ::= { wfBgpPeerEntry 22 }

    wfBgpPeerInTotalMessages OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the total number of messages received from the remote peer on this
                connection. This object should be initialized to zero when the
                connection is established."
        ::= { wfBgpPeerEntry 23 }

    wfBgpPeerOutTotalMessages OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the total number of messages transmitted from the remote peer
                on this connection. This object should be initialized to zero
                when the connection is established."
        ::= { wfBgpPeerEntry 24 }

    wfBgpPeerLastError OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the last error code and subcode seen by this peer on this
                connection. If no error has occurred, this field is zero.
                Otherwise, the first byte of this two byte OCTET STRING contains
                the error code; the second contains the subcode."
        ::= { wfBgpPeerEntry 25 }

    wfBgpPeerTotalRoutes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the total number of routes that were received from this
                peer that we are currently maintaining."
        ::= { wfBgpPeerEntry 26 }

    wfBgpPeerFsmEstablishedTransitions OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of times the BGP FSM transitioned into
                the established state."
        ::= { wfBgpPeerEntry 27 }

    wfBgpPeerFsmEstablishedTime OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This timer indicates how long (in seconds) this peer has been
                in the Established state or how long since this peer was last
                in the Established state. It is set to zero when a new peer is
                configured or the router is booted."
        ::= { wfBgpPeerEntry 28 }

    wfBgpPeerInUpdateElapsedTime OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Elapsed time in seconds since the last BGP UPDATE message was
                received from the peer.  Each time wfBgpPeerInUpdates is
                incremented, the value of this object is set to zero (0)."
        ::= { wfBgpPeerEntry 29 }

    wfBgpPeerMinASOriginationInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Time interval in seconds for the MinASOriginationInterval timer.
                The default value for this timer is 15 seconds. Can't be zero."
        DEFVAL	{ 15 }
        ::= { wfBgpPeerEntry 30 }

    wfBgpPeerLocalAS OBJECT-TYPE
        SYNTAX	INTEGER(0..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If configured, specifies the AS Number that is sent in OPEN message
                to this peer. If zero, the AS Number specified with wfBgpLocalAS
                attribute is used."
        ::= { wfBgpPeerEntry 31 }

    wfBgpPeerMaxUpdateSize OBJECT-TYPE
        SYNTAX	INTEGER(64..4096)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the maximum size (in bytes) of UPDATE message that can be
                sent to this peer.  Note that, if the message size that is needed
                to advertise a single route is greater than the configured maximum
                message size,  the acctual message size can exceed the configured
                value."
        DEFVAL	{ 800 }
        ::= { wfBgpPeerEntry 32 }

    wfBgpPeerRouteEchoSwitch OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The switch controls route echoing. If enabled, a BGP route
                that is selected for forwarding is advertised back to
                the peer from which the route was received."
        DEFVAL	{ disabled }
        ::= { wfBgpPeerEntry 33 }

    wfBgpPeerDiscardDuplicateRouteSwitch OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates if duplicate routes with the identical path attributes
                should be discarded. Should be enabled only when peering with
                an IBGP Route Server."
        DEFVAL	{ disabled }
        ::= { wfBgpPeerEntry 34 }

    wfBgpPeerRSMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    client(2),
    		    internal(3),
    		    external(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the Route Server Mode of BGP peer:
                (1) - not a Route Server connection;
                (2) - peer is a Route Server client;
                (3) - peer is a Route Server in the same RS cluster;
                (4) - peer is a Route Server in a different
                             RS cluster."
        DEFVAL	{ none }
        ::= { wfBgpPeerEntry 35 }

    wfBgpPeerRSIdentifier OBJECT-TYPE
        SYNTAX	INTEGER(0..65535)
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "if wfBgpPeerRSMode is BGP_PEER_RS_MODE_INTERNAL or
                BGP_PEER_RS_MODE_RS_EXTERNAL, specifies the RS Identifier
                that is send in IDENTIFICATION message."
        ::= { wfBgpPeerEntry 36 }

    wfBgpPeerCfgDelayGranularity OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the configured delay granularity in seconds."
        DEFVAL	{ 30 }
        ::= { wfBgpPeerEntry 37 }

    wfBgpPeerDelayGranularity OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the delay granularity in use"
        ::= { wfBgpPeerEntry 38 }

    wfBgpVirtualPeerTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBgpVirtualPeerEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The BGP Virtual Peer table contains configuration and statistical information
                regarding this router's Virtual peers learned via the Route Server"
        ::= { wfBgpGeneralGroup 6 }

    wfBgpVirtualPeerEntry OBJECT-TYPE
        SYNTAX	WfBgpVirtualPeerEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the BGP-Virtual-Peer table"
        INDEX	{ wfBgpVirtualPeerIdentifier,
    		  wfBgpVirtualPeerLocalAddr,
    		  wfBgpVirtualPeerRemoteAddr }
        ::= { wfBgpVirtualPeerTable 1 }

    WfBgpVirtualPeerEntry ::= SEQUENCE {
    	    wfBgpVirtualPeerLocalAddr
    		IpAddress,
    	    wfBgpVirtualPeerRemoteAddr
    		IpAddress,
    	    wfBgpVirtualPeerIdentifier
    		IpAddress,
    	    wfBgpVirtualPeerInUpdates
    		Counter,
    	    wfBgpVirtualPeerTotalRoutes
    		Counter,
    	    wfBgpVirtualPeerInUpdateElapsedTime
    		Gauge
        }

    wfBgpVirtualPeerLocalAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the local interface address"
        ::= { wfBgpVirtualPeerEntry 1 }

    wfBgpVirtualPeerRemoteAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the peer's interface address"
        ::= { wfBgpVirtualPeerEntry 2 }

    wfBgpVirtualPeerIdentifier OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the BGP ID of the Peer"
        ::= { wfBgpVirtualPeerEntry 3 }

    wfBgpVirtualPeerInUpdates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of BGP UPDATE messages received on this connection.
                This object should be initialized to zero when the connection
                is established."
        ::= { wfBgpVirtualPeerEntry 4 }

    wfBgpVirtualPeerTotalRoutes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the total number of routes that were received from this
                peer that we are currently maintaining."
        ::= { wfBgpVirtualPeerEntry 5 }

    wfBgpVirtualPeerInUpdateElapsedTime OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Elapsed time in seconds since the last BGP UPDATE message was
                received from the peer.  Each time wfBgpVirtualPeerInUpdates is
                incremented, the value of this object is set to zero (0)."
        ::= { wfBgpVirtualPeerEntry 6 }

    wfBgpAsWeightTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBgpAsWeightEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The BGP AS weight table contains weights for autonomous systems for use
                in best-route calculations"
        ::= { wfBgpGeneralGroup 3 }

    wfBgpAsWeightEntry OBJECT-TYPE
        SYNTAX	WfBgpAsWeightEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the BGP AS weight table"
        INDEX	{ wfBgpAsWeightNumber }
        ::= { wfBgpAsWeightTable 1 }

    WfBgpAsWeightEntry ::= SEQUENCE {
    	    wfBgpAsWeightDelete
    		INTEGER,
    	    wfBgpAsWeightDisable
    		INTEGER,
    	    wfBgpAsWeightState
    		INTEGER,
    	    wfBgpAsWeightNumber
    		INTEGER,
    	    wfBgpAsWeightValue
    		INTEGER,
    	    wfBgpAsWeightValue2
    		INTEGER,
    	    wfBgpAsWeightValue3
    		INTEGER,
    	    wfBgpAsWeightValue4
    		INTEGER,
    	    wfBgpAsWeightValue5
    		INTEGER,
    	    wfBgpAsWeightValue6
    		INTEGER,
    	    wfBgpAsWeightValue7
    		INTEGER,
    	    wfBgpAsWeightValue8
    		INTEGER
        }

    wfBgpAsWeightDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete: if set to delete, the AS entry is
                removed from this table"
        DEFVAL	{ created }
        ::= { wfBgpAsWeightEntry 1 }

    wfBgpAsWeightDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable: controls whether the AS entry is
                enabled or disabled"
        DEFVAL	{ enabled }
        ::= { wfBgpAsWeightEntry 2 }

    wfBgpAsWeightState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    invalid(4),
    		    notpresent(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the state of this AS weight entry"
        DEFVAL	{ notpresent }
        ::= { wfBgpAsWeightEntry 3 }

    wfBgpAsWeightNumber OBJECT-TYPE
        SYNTAX	INTEGER(0..65535)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the AS number"
        ::= { wfBgpAsWeightEntry 4 }

    wfBgpAsWeightValue OBJECT-TYPE
        SYNTAX	INTEGER(1..15)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the class-1 value to assign to this AS"
        DEFVAL	{ 8 }
        ::= { wfBgpAsWeightEntry 5 }

    wfBgpAsWeightValue2 OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default2(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the class-2 value to assign to this AS"
        DEFVAL	{ default2 }
        ::= { wfBgpAsWeightEntry 6 }

    wfBgpAsWeightValue3 OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default3(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the class-3 value to assign to this AS"
        DEFVAL	{ default3 }
        ::= { wfBgpAsWeightEntry 7 }

    wfBgpAsWeightValue4 OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default4(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the class-4 value to assign to this AS"
        DEFVAL	{ default4 }
        ::= { wfBgpAsWeightEntry 8 }

    wfBgpAsWeightValue5 OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default5(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the class-5 value to assign to this AS"
        DEFVAL	{ default5 }
        ::= { wfBgpAsWeightEntry 9 }

    wfBgpAsWeightValue6 OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default6(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the class-6 value to assign to this AS"
        DEFVAL	{ default6 }
        ::= { wfBgpAsWeightEntry 10 }

    wfBgpAsWeightValue7 OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default7(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the class-7 value to assign to this AS"
        DEFVAL	{ default7 }
        ::= { wfBgpAsWeightEntry 11 }

    wfBgpAsWeightValue8 OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default8(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the class-8 value to assign to this AS"
        DEFVAL	{ default8 }
        ::= { wfBgpAsWeightEntry 12 }

    wfBgp3PathAttrTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBgp3PathAttrEntry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "The BGP3 received path attribute table contains information about paths to
                destination networks received by all peers.
                This table is deprecated and replaced with  wfBgpPathAttrTable"
        ::= { wfBgp3Group 2 }

    wfBgp3PathAttrEntry OBJECT-TYPE
        SYNTAX	WfBgp3PathAttrEntry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "An entry in the BGP-3 Path Attribute Table"
        INDEX	{ wfBgp3PathAttrDestNetwork,
    		  wfBgp3PathAttrPeer }
        ::= { wfBgp3PathAttrTable 1 }

    WfBgp3PathAttrEntry ::= SEQUENCE {
    	    wfBgp3PathAttrPeer
    		IpAddress,
    	    wfBgp3PathAttrDestNetwork
    		IpAddress,
    	    wfBgp3PathAttrOrigin
    		INTEGER,
    	    wfBgp3PathAttrASPath
    		OCTET STRING,
    	    wfBgp3PathAttrNextHop
    		IpAddress,
    	    wfBgp3PathAttrInterASMetric
    		INTEGER,
    	    wfBgp3PathAttrASPathWeight
    		INTEGER,
    	    wfBgp3PathAttrBgpPreference
    		INTEGER,
    	    wfBgp3PathAttrBest
    		INTEGER
        }

    wfBgp3PathAttrPeer OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "the BGP identifier of the peer where the path information was
                learned."
        ::= { wfBgp3PathAttrEntry 1 }

    wfBgp3PathAttrDestNetwork OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "the address of the destination network."
        ::= { wfBgp3PathAttrEntry 2 }

    wfBgp3PathAttrOrigin OBJECT-TYPE
        SYNTAX	INTEGER {
    		    igp(1),
    		    egp(2),
    		    incomplete(3)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "the ultimate origin of the path information:
                igp (1) -- network is interior;
                egp (2) -- network learned via EGP;
                incomplete (3) -- undetermined."
        ::= { wfBgp3PathAttrEntry 3 }

    wfBgp3PathAttrASPath OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "the set of ASes that must be traversed to reach the network. Each AS
                is represented as a pair of octets according to the following
                algorithm:
                   first-byte-of-pair = ASNumber / 256;
                   second-byte-of-pair = ASNumber & 255;"
        ::= { wfBgp3PathAttrEntry 4 }

    wfBgp3PathAttrNextHop OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "the address of the border router that should be used as the
                next-hop for the destination network."
        ::= { wfBgp3PathAttrEntry 5 }

    wfBgp3PathAttrInterASMetric OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "the optional inter-AS metric. if this attribute has not been
                provided for this route, the value for this object is 0."
        ::= { wfBgp3PathAttrEntry 6 }

    wfBgp3PathAttrASPathWeight OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "the calculated AS path weight"
        ::= { wfBgp3PathAttrEntry 7 }

    wfBgp3PathAttrBgpPreference OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "the preference that is used to calculate this route with
                other BGP routes to the same destination"
        ::= { wfBgp3PathAttrEntry 8 }

    wfBgp3PathAttrBest OBJECT-TYPE
        SYNTAX	INTEGER {
    		    false(1),
    		    true(2)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "an indication of whether or not this was chosen as the best route
                to the destination"
        DEFVAL	{ false }
        ::= { wfBgp3PathAttrEntry 9 }

    wfBgpPathAttrTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBgpPathAttrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The BGP received path attribute table contains information about paths to
                destination networks received by all peers."
        ::= { wfBgpGeneralGroup 4 }

    wfBgpPathAttrEntry OBJECT-TYPE
        SYNTAX	WfBgpPathAttrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the BGP Path Attribute Table"
        INDEX	{ wfBgpPathAttrIpAddrPrefix,
    		  wfBgpPathAttrIpAddrPrefixLen,
    		  wfBgpPathAttrPeer }
        ::= { wfBgpPathAttrTable 1 }

    WfBgpPathAttrEntry ::= SEQUENCE {
    	    wfBgpPathAttrIpAddrPrefix
    		IpAddress,
    	    wfBgpPathAttrIpAddrPrefixLen
    		INTEGER,
    	    wfBgpPathAttrPeer
    		IpAddress,
    	    wfBgpPathAttrOrigin
    		INTEGER,
    	    wfBgpPathAttrASPathSegment
    		OCTET STRING,
    	    wfBgpPathAttrNextHop
    		IpAddress,
    	    wfBgpPathAttrMultiExitDisc
    		INTEGER,
    	    wfBgpPathAttrLocalPref
    		INTEGER,
    	    wfBgpPathAttrAtomicAggregate
    		INTEGER,
    	    wfBgpPathAttrAggregatorAS
    		INTEGER,
    	    wfBgpPathAttrAggregatorAddr
    		IpAddress,
    	    wfBgpPathAttrCalcLocalPref
    		INTEGER,
    	    wfBgpPathAttrBest
    		INTEGER,
    	    wfBgpPathAttrUnknown
    		OCTET STRING,
    	    wfBgpPathAttrImporterID
    		IpAddress,
    	    wfBgpPathAttrClusterID
    		OCTET STRING
        }

    wfBgpPathAttrIpAddrPrefix OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the IP address of the destination (sub)network."
        ::= { wfBgpPathAttrEntry 1 }

    wfBgpPathAttrIpAddrPrefixLen OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Length in bits of the IP address prefix in
                the destination (sub)network address."
        ::= { wfBgpPathAttrEntry 2 }

    wfBgpPathAttrPeer OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the IP address of the peer where the path information was
                learned."
        ::= { wfBgpPathAttrEntry 3 }

    wfBgpPathAttrOrigin OBJECT-TYPE
        SYNTAX	INTEGER {
    		    igp(1),
    		    egp(2),
    		    incomplete(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the ultimate origin of the path information:
                igp (1) -- network is interior;
                egp (2) -- network learned via EGP;
                incomplete (3) -- undetermined."
        ::= { wfBgpPathAttrEntry 4 }

    wfBgpPathAttrASPathSegment OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The sequence of AS path segments. Each AS path
                segment is represented by a triple <type, length, value>.

                 The type is a 1-octet field which has two possible values:
                  1 AS_SET: unordered set of ASs a route in the UPDATE
                 message has traversed
                  2 AS_SEQUENCE: ordered set of ASs a route in the UPDATE
                message has traversed.

                The length is a 1-octet field containing the number of ASs
                in the value field.

                The value field contains one or more AS numbers, each AS is
                represented in the octet string as a pair of octets according
                to the following algorithm:
                   first-byte-of-pair = ASNumber / 256;
                   second-byte-of-pair = ASNumber & 255;"
        ::= { wfBgpPathAttrEntry 5 }

    wfBgpPathAttrNextHop OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the address of the border router that should be used as the
                next-hop for the destination network."
        ::= { wfBgpPathAttrEntry 6 }

    wfBgpPathAttrMultiExitDisc OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The optional inter-AS metric. If this attribute has not been
                provided for this route, the value for this object is -1."
        ::= { wfBgpPathAttrEntry 7 }

    wfBgpPathAttrLocalPref OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the originating BGP speaker's degree of preference
                for advertised route (-1..2147483647); if this attribute
                       has not been provided for this route, the value for this
                       object is -1."
        ::= { wfBgpPathAttrEntry 8 }

    wfBgpPathAttrAtomicAggregate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    false(1),
    		    true(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "indicates whether or not the local system has selected a less
                specific route without selecting a more specific route"
        ::= { wfBgpPathAttrEntry 9 }

    wfBgpPathAttrAggregatorAS OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The AS number of the last BGP speaker that performed route
                aggregation. A value of zero (0) indicates the absence of
                this attribute."
        ::= { wfBgpPathAttrEntry 10 }

    wfBgpPathAttrAggregatorAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The BGP ID of the last BGP speaker that performed route
                aggregation.  A value of 0.0.0.0 indicates the absence
                of this attribute."
        ::= { wfBgpPathAttrEntry 11 }

    wfBgpPathAttrCalcLocalPref OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The degree of preference calculated by the receiving
                BGP speaker for an advertised route (-1..2147483647).
                A value of -1 indicates the absence of this attribute"
        ::= { wfBgpPathAttrEntry 12 }

    wfBgpPathAttrBest OBJECT-TYPE
        SYNTAX	INTEGER {
    		    false(1),
    		    true(2),
    		    bestused(3),
    		    used(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "an indication of whether or not this was chosen as
                the best bgp rout to the destination and whether or not
                it was chosen as a forwarding IP route"
        DEFVAL	{ false }
        ::= { wfBgpPathAttrEntry 13 }

    wfBgpPathAttrUnknown OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "One or more path attributes not understood
                by this BGP speaker.  Size zero (0) indicates
                the absence of such attribute(s).  Octets
                beyond the maximum size (255), if any, are not
                recorded by this object."
        ::= { wfBgpPathAttrEntry 14 }

    wfBgpPathAttrImporterID OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "For RS, the BGP ID of the border router that imported this route"
        ::= { wfBgpPathAttrEntry 15 }

    wfBgpPathAttrClusterID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "For RS, the sequence of Cluter IDs of the Clusters.
                Size zero (0) indicates the absence of such attribute(s)."
        ::= { wfBgpPathAttrEntry 16 }

    wfBgpDbgTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBgpDbgEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "BGP debug table contains objects that controls generation of BGP
                debug information"
        ::= { wfBgpGeneralGroup 5 }

    wfBgpDbgEntry OBJECT-TYPE
        SYNTAX	WfBgpDbgEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "a table entry"
        INDEX	{ wfBgpDbgLocAddr,
    		  wfBgpDbgRemoteAddr }
        ::= { wfBgpDbgTable 1 }

    WfBgpDbgEntry ::= SEQUENCE {
    	    wfBgpDbgCreate
    		INTEGER,
    	    wfBgpDbgLocAddr
    		IpAddress,
    	    wfBgpDbgRemoteAddr
    		IpAddress,
    	    wfBgpDbgMsgLevel
    		INTEGER,
    	    wfBgpDbgMsgTraceSwitch
    		INTEGER,
    	    wfBgpDbgLogCode
    		INTEGER,
    	    wfBgpDbgLogCodeDisable
    		INTEGER,
    	    wfBgpDbgCodes
    		OCTET STRING,
    	    wfBgpDbgBootCodes
    		OCTET STRING
        }

    wfBgpDbgCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created."
        DEFVAL	{ create }
        ::= { wfBgpDbgEntry 1 }

    wfBgpDbgLocAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The peer's local address.
                If 0.0.0.0, debug attributes are applied to all peers
                to specified Remote Address or with specified BGP version"
        ::= { wfBgpDbgEntry 2 }

    wfBgpDbgRemoteAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The peer's Remote Address .
                If 0.0.0.0, debug attrubutes are applied to all configured
                peers from specified Local Address;
                if 255.255.255.255, debug attrubutes are applied to BGP4 gate
                only."
        ::= { wfBgpDbgEntry 3 }

    wfBgpDbgMsgLevel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    all(2031616),
    		    debug(65536),
    		    info(131072),
    		    warning(262144),
    		    fault(524288),
    		    trace(1048576)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP log messages level.
                To control certain level of log messages
                             BGP_DBG_MSG_ALL         0x001f0000 - 2031616
                             BGP_DBG_MSG_DEBUG       0x00010000 -   65536
                             BGP_DBG_MSG_INFO        0x00020000 -  131072
                             BGP_DBG_MSG_WARNING     0x00040000 -  262144
                             BGP_DBG_MSG_FAULT       0x00080000 -  524288
                             BGP_DBG_MSG_TRACE       0x00100000 - 1048576"
        DEFVAL	{ all }
        ::= { wfBgpDbgEntry 4 }

    wfBgpDbgMsgTraceSwitch OBJECT-TYPE
        SYNTAX	INTEGER {
    		    disabled(1),
    		    open(16),
    		    update(32),
    		    notification(64),
    		    keepalive(128)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "controls whether BGP messages that are exchanged on this
                connection are dumped to the log.
                BGP_DBG_MSG_DUMP_REC_OPEN enables tracing of OPEN messages
                BGP_DBG_MSG_DUMP_REC_UPDATE - UPDATE messages
                BGP_DBG_MSG_DUMP_REC_NOTIFICATION - NOTIFICATION and
                BGP_DBG_MSG_DUMP_REC_KEEPALIVE - KEEPALIVE
                on logical OR basis
                             BGP_DBG_MSG_DUMP_DISABLED               1
                             BGP_DBG_MSG_DUMP_REC_OPEN               0x10 - 16
                             BGP_DBG_MSG_DUMP_REC_UPDATE             0x20 - 32
                             BGP_DBG_MSG_DUMP_REC_NOTIFICATION       0x40 - 64
                             BGP_DBG_MSG_DUMP_REC_KEEPALIVE          0x80 - 128"
        DEFVAL	{ disabled }
        ::= { wfBgpDbgEntry 5 }

    wfBgpDbgLogCode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates that a debug log message which corresponds
                to the value of this attributes should be or should be not
                sent to the log.
                    Affects wfBgpDbgCodes only. In order to save combined
                    list of messages you have to set wfBgpDbgBootCodes directly
                    as copy of wfBgpDbgCodes"
        ::= { wfBgpDbgEntry 6 }

    wfBgpDbgLogCodeDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates that a debug log message defined in wfBgpDbgCode
                will be or will be not logged"
        DEFVAL	{ enable }
        ::= { wfBgpDbgEntry 7 }

    wfBgpDbgCodes OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Vector of enabled debug messages (to check only).
                Messages are identified via the string of bits
                contained within this attribute. The first octet
                contains bits 0 to 7, the second octet contains
                bits 8 to 15, and so on, with the most significant
                bit referring to the lowest bit number in the octet
                (e.g., the MSB of the first octet refers to bit 0).
                If a bit, i, is present and set, then the DEBUG log
                message with the code (i) is enabled."
        ::= { wfBgpDbgEntry 8 }

    wfBgpDbgBootCodes OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "User-defined vector of enabled debug messages at boot moment.
                Coded as instance above"
        ::= { wfBgpDbgEntry 9 }

    END  -- Wellfleet-BGP-MIB
-- @(#)WSCCS s/mibs-bisync.mib 1.2 10/12/95
Wellfleet-BISYNC-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Sep  6 16:57:22 EDT 1995
-- Edited: ksheth 10/12/95 - removed some enumerations for clock speed


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfBisyncGroup
        FROM Wellfleet-COMMON-MIB;


    wfBisyncTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBisyncEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "*   BISYNC  line record *"
        ::= { wfBisyncGroup 1 }

    wfBisyncEntry OBJECT-TYPE
        SYNTAX	WfBisyncEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the BISYNC table"
        INDEX	{ wfBisyncSlot,
    		  wfBisyncConnector }
        ::= { wfBisyncTable 1 }

    WfBisyncEntry ::= SEQUENCE {
    	    wfBisyncDelete
    		INTEGER,
    	    wfBisyncDisable
    		INTEGER,
    	    wfBisyncCct
    		INTEGER,
    	    wfBisyncMtu
    		INTEGER,
    	    wfBisyncMediaType
    		INTEGER,
    	    wfBisyncCableType
    		INTEGER,
    	    wfBisyncClkSource
    		INTEGER,
    	    wfBisyncClkSpeed
    		INTEGER,
    	    wfBisyncService
    		INTEGER,
    	    wfBisyncCfgTxQueueLength
    		INTEGER,
    	    wfBisyncCfgRxQueueLength
    		INTEGER,
    	    wfBisyncCharMode
    		INTEGER,
    	    wfBisyncLineNumber
    		INTEGER,
    	    wfBisyncRtsEnable
    		INTEGER,
    	    wfBisyncExternalClkSpeed
    		INTEGER,
    	    wfBisyncModule
    		INTEGER,
    	    wfBisyncActualConnector
    		INTEGER,
    	    wfBisyncConnector
    		INTEGER,
    	    wfBisyncSlot
    		INTEGER,
    	    wfBisyncActiveCct
    		INTEGER,
    	    wfBisyncState
    		INTEGER,
    	    wfBisyncLastState
    		INTEGER,
    	    wfBisyncRxOctets
    		Counter,
    	    wfBisyncTxOctets
    		Counter,
    	    wfBisyncRxFrames
    		Counter,
    	    wfBisyncTxFrames
    		Counter,
    	    wfBisyncRxErrors
    		Counter,
    	    wfBisyncTxErrors
    		Counter,
    	    wfBisyncTxLackRescs
    		Counter,
    	    wfBisyncTxUnderFlows
    		Counter,
    	    wfBisyncRxOverFlows
    		Counter,
    	    wfBisyncRxBadFrames
    		Counter,
    	    wfBisyncRxRunts
    		Counter,
    	    wfBisyncTxQueueLength
    		INTEGER,
    	    wfBisyncRxQueueLength
    		INTEGER,
    	    wfBisyncRxReplenMisses
    		Counter,
    	    wfBisyncLastChange
    		TimeTicks,
    	    wfBisyncOutQLen
    		Gauge,
    	    wfBisyncRxLackRescsChar
    		Counter,
    	    wfBisyncIsrBCZero
    		Counter,
    	    wfBisyncIsrBCSix
    		Counter,
    	    wfBisyncIsrBCInvalid
    		Counter,
    	    wfBisyncIsrBCErrors
    		Counter
        }

    wfBisyncDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfBisyncEntry 1 }

    wfBisyncDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfBisyncEntry 2 }

    wfBisyncCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "CCT number for this line instance"
        ::= { wfBisyncEntry 3 }

    wfBisyncMtu OBJECT-TYPE
        SYNTAX	INTEGER(1..4568)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "MTU parameter, this is buffer size for BISYNC media, fixed"
        DEFVAL	{ 1580 }
        ::= { wfBisyncEntry 4 }

    wfBisyncMediaType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(1),
    		    raisedtr(2),
    		    v25bis(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Media type selection is provided via this parameter"
        DEFVAL	{ default }
        ::= { wfBisyncEntry 5 }

    wfBisyncCableType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rs232(1),
    		    rs422(2),
    		    v35(3),
    		    x21(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Type of Cable attached to the Bisync port - this is
                needed for V.25bis and Raise DTR to properly
                communicate with the modem"
        DEFVAL	{ rs232 }
        ::= { wfBisyncEntry 6 }

    wfBisyncClkSource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    internal(1),
    		    external(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx/Rx clock source is either internally or external generated."
        DEFVAL	{ external }
        ::= { wfBisyncEntry 7 }

    wfBisyncClkSpeed OBJECT-TYPE
        SYNTAX	INTEGER {
    		    clk1200b(1200),
    		    clk2400b(2401),
    		    clk4800b(4807),
    		    clk7200b(7204),
    		    clk9600b(9615),
    		    clk19200b(19230)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx/Rx clock speed. This speed selection is valid when either
                internal or external clocking is selected.  In some cases,  router
                software uses this attribute for route selection.  If Priority
                Queuing is configured, it chooses queue depths based on this
                attribute.  If internal clocking is selected, this attribute
                effects hardware initialization.  If external
                clocking is selected,  this attribute should be set to the speed that
                most closely corresponds to the speed of the external clock."
        DEFVAL	{ clk9600b }
        ::= { wfBisyncEntry 8 }

    wfBisyncService OBJECT-TYPE
        SYNTAX	INTEGER {
    		    dlsw(1),
    		    tunneling(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Service Type selection is provided via this parameter. The
                supported services can be selected per interface."
        DEFVAL	{ tunneling }
        ::= { wfBisyncEntry 9 }

    wfBisyncCfgTxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured Transmit Queue Length. Values other than zero
                over-ride the router selected values.  A value of zero has a
                special meaning.  Zero causes router based default values to
                be used.  Values larger than the compiled ring size are
                truncated to the compiled ring size. "
        ::= { wfBisyncEntry 10 }

    wfBisyncCfgRxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured Receive Queue Length. Values other than zero
                over-ride the router selected values.  A value of zero has
                a special meaning.  Zero causes router based default values
                to be used.  Values larger than the compiled ring size are
                truncated to the compiled ring size. "
        ::= { wfBisyncEntry 11 }

    wfBisyncCharMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ebcdic(1),
    		    ascii(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Control Character Mode - ASCII/EBCDIC"
        DEFVAL	{ ebcdic }
        ::= { wfBisyncEntry 12 }

    wfBisyncLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "line number for this line instance"
        ::= { wfBisyncEntry 13 }

    wfBisyncRtsEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The RTS parameter enables/disables detection of RTS signals on the
                interface. Normal default mode is running without RTS enabled"
        DEFVAL	{ disabled }
        ::= { wfBisyncEntry 14 }

    wfBisyncExternalClkSpeed OBJECT-TYPE
        SYNTAX	INTEGER(1200..19200)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "External Clock Speed. If external clocking is configured, this
                attribute should be set to the clock speed of the externally
                supplied clock. Depending on the protocols configured in the
                interface, this value may control internal decision making in the
                router. In soe cases, router software uses this attribute for route
                selection. If Priority Queueing is configured, it chooses queue depths
                based on this attribute. This attribute has no effect when Internal
                Clocking is configured."
        DEFVAL	{ 9600 }
        ::= { wfBisyncEntry 15 }

    wfBisyncModule OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Module number for ASN platform, filled in by driver. For non-ASN
                platforms, this attribute will not be used "
        ::= { wfBisyncEntry 16 }

    wfBisyncActualConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4),
    		    five(5),
    		    six(6),
    		    seven(7),
    		    eight(8)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Actual Connector Number for ASN platform, filled in by driver.
                For non-ASN platforms, this attribute will not be used."
        ::= { wfBisyncEntry 17 }

    wfBisyncConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Connector, filled in by driver. For the ASN
                this attribute is an encoded value and is equal to
                'module'*10 + 'connector'. Where 'module' is defined in
                attribute mm and 'connector' is defined in attribute cc
                of this table. For non-ASN platforms this attribute is
                the physical connector number on the slot."
        ::= { wfBisyncEntry 18 }

    wfBisyncSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Slot, filled in by driver"
        ::= { wfBisyncEntry 19 }

    wfBisyncActiveCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Active CCT number for this line instance"
        ::= { wfBisyncEntry 20 }

    wfBisyncState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    dsrwait(4),
    		    notpresent(20)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line Driver state variable, Not Present, DSR Wait,
                Init, Down, Up"
        DEFVAL	{ notpresent }
        ::= { wfBisyncEntry 21 }

    wfBisyncLastState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    dsrwait(4),
    		    notpresent(20)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The state which the driver was in prior to the most recent re-initiali-
                zation."
        ::= { wfBisyncEntry 22 }

    wfBisyncRxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets received without error"
        ::= { wfBisyncEntry 23 }

    wfBisyncTxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets transmitted without error"
        ::= { wfBisyncEntry 24 }

    wfBisyncRxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received without error"
        ::= { wfBisyncEntry 25 }

    wfBisyncTxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames transmitted without error"
        ::= { wfBisyncEntry 26 }

    wfBisyncRxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of receive errors"
        ::= { wfBisyncEntry 27 }

    wfBisyncTxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmission errors"
        ::= { wfBisyncEntry 28 }

    wfBisyncTxLackRescs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames clipped in driver's transmit routine due to transmit
                congestion."
        ::= { wfBisyncEntry 29 }

    wfBisyncTxUnderFlows OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmission underflows, device FIFO went empty before
                next DMA request was granted."
        ::= { wfBisyncEntry 30 }

    wfBisyncRxOverFlows OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of receive overflows, device FIFO overflowed before next
                DMA cycle granted.  No buffer resources available."
        ::= { wfBisyncEntry 31 }

    wfBisyncRxBadFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of bad receive frames, caused by FCS errors or
                non octet aligned."
        ::= { wfBisyncEntry 32 }

    wfBisyncRxRunts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of runt frames received"
        ::= { wfBisyncEntry 33 }

    wfBisyncTxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current Transmit Queue Length."
        ::= { wfBisyncEntry 34 }

    wfBisyncRxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current Receive Queue Length."
        ::= { wfBisyncEntry 35 }

    wfBisyncRxReplenMisses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packet buffer misses while attempting to replenish driver
                receive ring."
        ::= { wfBisyncEntry 36 }

    wfBisyncLastChange OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of the SysUptime at the time the interface entered it's current
                operational state (UP state). SysUpTime is defined as the time (in
                hundredths of a second) since the network management portion of the system
                was last re-initialized. Usually the time since boot."
        ::= { wfBisyncEntry 37 }

    wfBisyncOutQLen OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The instantaneous current length of the output packet queue"
        ::= { wfBisyncEntry 38 }

    wfBisyncRxLackRescsChar OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Rx characters dropped due to lack of buffer resources"
        ::= { wfBisyncEntry 39 }

    wfBisyncIsrBCZero OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of interrupts with byte count zero"
        ::= { wfBisyncEntry 40 }

    wfBisyncIsrBCSix OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of interrupts with byte count six or more"
        ::= { wfBisyncEntry 41 }

    wfBisyncIsrBCInvalid OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of interrupts with an unexpected message byte"
        ::= { wfBisyncEntry 42 }

    wfBisyncIsrBCErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of interrupt errors"
        ::= { wfBisyncEntry 43 }

END  -- Wellfleet-BISYNC-MIB
-- @(#)WSCCS w/mibs-bootp.mib 1.1 8/30/95
Wellfleet-BOOTP-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:38:38 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfBootpGroup
        FROM Wellfleet-COMMON-MIB;


    wfBootpClientGroup     OBJECT IDENTIFIER ::= { wfBootpGroup 1 }
    wfBootpServerGroup     OBJECT IDENTIFIER ::= { wfBootpGroup 2 }
    wfBootpRelayAgentGroup OBJECT IDENTIFIER ::= { wfBootpGroup 3 }


    wfBootpRelayIntfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBootpRelayIntfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains per-interface configuration information for BOOTP
                relay agent operation"
        ::= { wfBootpRelayAgentGroup 1 }

    wfBootpRelayIntfEntry OBJECT-TYPE
        SYNTAX	WfBootpRelayIntfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "a BOOTP relay agent interface description"
        INDEX	{ wfBootpRelayIntfAddress }
        ::= { wfBootpRelayIntfTable 1 }

    WfBootpRelayIntfEntry ::= SEQUENCE {
    	    wfBootpRelayIntfDelete
    		INTEGER,
    	    wfBootpRelayIntfDisable
    		INTEGER,
    	    wfBootpRelayIntfState
    		INTEGER,
    	    wfBootpRelayIntfAddress
    		IpAddress,
    	    wfBootpRelayIntfHops
    		INTEGER,
    	    wfBootpRelayIntfSeconds
    		INTEGER,
    	    wfBootpRelayIntfOpDrops
    		Counter,
    	    wfBootpRelayIntfRequests
    		Counter,
    	    wfBootpRelayIntfTranReqs
    		Counter,
    	    wfBootpRelayIntfHopsDrops
    		Counter,
    	    wfBootpRelayIntfBcastDrops
    		Counter,
    	    wfBootpRelayIntfSecDrops
    		Counter,
    	    wfBootpRelayIntfReplies
    		Counter,
    	    wfBootpRelayIntfGiaddrDrops
    		Counter,
    	    wfBootpRelayIntfResrcDrops
    		Counter,
    	    wfBootpRelayIntfPassThroughMode
    		INTEGER,
    	    wfBootpRelayIntfUdpSktDrops
    		Counter,
    	    wfBootpRelayIntfTooShortDrops
    		Counter,
    	    wfBootpRelayIntfFltrDrops
    		Counter
        }

    wfBootpRelayIntfDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete: if set to delete, the BOOTP relay agent is
                removed from this network interface"
        DEFVAL	{ created }
        ::= { wfBootpRelayIntfEntry 1 }

    wfBootpRelayIntfDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable: controls whether the BOOTP relay agent is
                enabled or disabled on this network interface"
        DEFVAL	{ enabled }
        ::= { wfBootpRelayIntfEntry 2 }

    wfBootpRelayIntfState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    invalid(4),
    		    notpres(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the state if the BOOTP relay agent on this interface"
        DEFVAL	{ notpres }
        ::= { wfBootpRelayIntfEntry 3 }

    wfBootpRelayIntfAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "network interface address"
        ::= { wfBootpRelayIntfEntry 4 }

    wfBootpRelayIntfHops OBJECT-TYPE
        SYNTAX	INTEGER(1..16)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "maximum hop count. BOOTREQUESTs with a larger hops field will be
                dropped"
        DEFVAL	{ 4 }
        ::= { wfBootpRelayIntfEntry 5 }

    wfBootpRelayIntfSeconds OBJECT-TYPE
        SYNTAX	INTEGER(0..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "minimum seconds. BOOTREQUESTs with a smaller seconds field will
                be dropped"
        DEFVAL	{ 0 }
        ::= { wfBootpRelayIntfEntry 6 }

    wfBootpRelayIntfOpDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the total number of BOOTP packets received on this interface
                that were dropped because of an invalid operation field"
        ::= { wfBootpRelayIntfEntry 7 }

    wfBootpRelayIntfRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the total number of BOOTREQUEST packets received on this
                interface"
        ::= { wfBootpRelayIntfEntry 8 }

    wfBootpRelayIntfTranReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the total number of forwarded BOOTREQUEST packets received on
                this interface that contained a non-zero value in the gateway
                IP address field. This interface did not act as a relay agent
                for these packets"
        ::= { wfBootpRelayIntfEntry 9 }

    wfBootpRelayIntfHopsDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the total number of forwarded BOOTREQUEST packets received on
                this interface that were dropped due to a hops field that was
                too large"
        ::= { wfBootpRelayIntfEntry 10 }

    wfBootpRelayIntfBcastDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the total number of forwarded BOOTREQUEST packets received on
                this interface that were dropped due to a destination IP
                address that was not 255.255.255.255"
        ::= { wfBootpRelayIntfEntry 11 }

    wfBootpRelayIntfSecDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the total number of forwarded BOOTREQUEST packets received on
                this interface that were dropped due to a seconds field that
                was too small"
        ::= { wfBootpRelayIntfEntry 12 }

    wfBootpRelayIntfReplies OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the total number of BOOTPREPLY packets received that were
                addressed to this interface"
        ::= { wfBootpRelayIntfEntry 13 }

    wfBootpRelayIntfGiaddrDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the total number of BOOTPREPLY packets received that were
                addressed to this interface and dropped because the giaddr
                field was not the same as the interface's address"
        ::= { wfBootpRelayIntfEntry 14 }

    wfBootpRelayIntfResrcDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the total number of BOOTPREPLY packets received that were
                addressed to this interface and dropped because sufficient
                resources were not available"
        ::= { wfBootpRelayIntfEntry 15 }

    wfBootpRelayIntfPassThroughMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    bootp(1),
    		    bootpdhcp(2),
    		    dhcp(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The ACCEPTANCE mode for this interface: Bootp Requests only,
                both Bootp Requests and Bootp Requests containing DHCP
                messages, or Bootp Requests containing DHCP messages only."
        DEFVAL	{ bootp }
        ::= { wfBootpRelayIntfEntry 16 }

    wfBootpRelayIntfUdpSktDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of BOOTP packets received that were addressed
                to this interface and dropped because the UDP socket field is not
                BOOTPS (67)."
        ::= { wfBootpRelayIntfEntry 17 }

    wfBootpRelayIntfTooShortDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of BOOTP packets received that were addressed
                to this interface and dropped because the UDP length field is too
                short."
        ::= { wfBootpRelayIntfEntry 18 }

    wfBootpRelayIntfFltrDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of BOOTPREQUEST packets received that were
                addressed to this interface and dropped because this type of packet
                is filtered off by the Pass Through Mode"
        ::= { wfBootpRelayIntfEntry 19 }

    wfBootpRelayFwdTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBootpRelayFwdEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "for a BOOTP relay agent on a given interface, this table contains the
                list of interfaces through which that agent will forward BOOTREQUEST
                packets"
        ::= { wfBootpRelayAgentGroup 2 }

    wfBootpRelayFwdEntry OBJECT-TYPE
        SYNTAX	WfBootpRelayFwdEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "a BOOTP forwarding description"
        INDEX	{ wfBootpRelayFwdAgentIntf,
    		  wfBootpRelayFwdOutIntf }
        ::= { wfBootpRelayFwdTable 1 }

    WfBootpRelayFwdEntry ::= SEQUENCE {
    	    wfBootpRelayFwdDelete
    		INTEGER,
    	    wfBootpRelayFwdDisable
    		INTEGER,
    	    wfBootpRelayFwdAgentIntf
    		IpAddress,
    	    wfBootpRelayFwdOutIntf
    		IpAddress,
    	    wfBootpRelayFwdPassThroughMode
    		INTEGER,
    	    wfBootpRelayFwdOutReqPkts
    		Counter
        }

    wfBootpRelayFwdDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete: if set to delete, the forwarding entry is
                removed from the table"
        DEFVAL	{ created }
        ::= { wfBootpRelayFwdEntry 1 }

    wfBootpRelayFwdDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable: controls whether the the forwarding entry is
                active or not"
        DEFVAL	{ enabled }
        ::= { wfBootpRelayFwdEntry 2 }

    wfBootpRelayFwdAgentIntf OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "relay agent's network interface address"
        ::= { wfBootpRelayFwdEntry 3 }

    wfBootpRelayFwdOutIntf OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "outbound network interface address"
        ::= { wfBootpRelayFwdEntry 4 }

    wfBootpRelayFwdPassThroughMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    bootp(1),
    		    bootpdhcp(2),
    		    dhcp(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The PROPAGATION mode for this interface: Bootp Requests only,
                both Bootp Requests and Bootp Requests containing DHCP
                messages, or Bootp Requests containing DHCP messages only."
        DEFVAL	{ bootp }
        ::= { wfBootpRelayFwdEntry 5 }

    wfBootpRelayFwdOutReqPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of BOOTPREQUEST packets relayed out of this
                forwarding entry."
        ::= { wfBootpRelayFwdEntry 6 }

    wfBootpClientIntfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBootpClientIntfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "for a BOOTP relay agent on a given interface, this table
                contains the list of DLCI-IP address assignments."
        ::= { wfBootpClientGroup 1 }

    wfBootpClientIntfEntry OBJECT-TYPE
        SYNTAX	WfBootpClientIntfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "a BOOTP client interface description"
        INDEX	{ wfBootpClientIntfAddress,
    		  wfBootpClientIntfDlci }
        ::= { wfBootpClientIntfTable 1 }

    WfBootpClientIntfEntry ::= SEQUENCE {
    	    wfBootpClientIntfDelete
    		INTEGER,
    	    wfBootpClientIntfDlci
    		INTEGER,
    	    wfBootpClientIntfAddress
    		IpAddress
        }

    wfBootpClientIntfDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Flag to indicate BOOTP client interface instance deletion"
        DEFVAL	{ created }
        ::= { wfBootpClientIntfEntry 1 }

    wfBootpClientIntfDlci OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The DLCI for the virtual circuit used by this BOOTP client"
        ::= { wfBootpClientIntfEntry 2 }

    wfBootpClientIntfAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address for the interface used by this BOOTP client"
        ::= { wfBootpClientIntfEntry 3 }

    wfBootpRelayPrefServTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBootpRelayPrefServEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains Preferred Server configuration information for
                configured Bootp Relay Agents."
        ::= { wfBootpRelayAgentGroup 3 }

    wfBootpRelayPrefServEntry OBJECT-TYPE
        SYNTAX	WfBootpRelayPrefServEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "a BOOTP relay Preferred Server description"
        INDEX	{ wfBootpRelayPrefServAgentAddress,
    		  wfBootpRelayPrefServTargetAddress }
        ::= { wfBootpRelayPrefServTable 1 }

    WfBootpRelayPrefServEntry ::= SEQUENCE {
    	    wfBootpRelayPrefServDelete
    		INTEGER,
    	    wfBootpRelayPrefServDisable
    		INTEGER,
    	    wfBootpRelayPrefServAgentAddress
    		IpAddress,
    	    wfBootpRelayPrefServTargetAddress
    		IpAddress,
    	    wfBootpRelayPrefServTargetName
    		DisplayString,
    	    wfBootpRelayPrefServRequestMode
    		INTEGER,
    	    wfBootpRelayPrefServOutReqPkts
    		Counter
        }

    wfBootpRelayPrefServDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete: if set to delete, the static entry is
                removed from the table"
        DEFVAL	{ created }
        ::= { wfBootpRelayPrefServEntry 1 }

    wfBootpRelayPrefServDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable: controls whether the static entry is included
                in the list of preferred servers for this interface or not."
        DEFVAL	{ enabled }
        ::= { wfBootpRelayPrefServEntry 2 }

    wfBootpRelayPrefServAgentAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "relay agent's IP address"
        ::= { wfBootpRelayPrefServEntry 3 }

    wfBootpRelayPrefServTargetAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Target Server(s) address, either unicast or multicast"
        ::= { wfBootpRelayPrefServEntry 4 }

    wfBootpRelayPrefServTargetName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Target Server(s) host name"
        ::= { wfBootpRelayPrefServEntry 5 }

    wfBootpRelayPrefServRequestMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    bootp(1),
    		    bootpdhcp(2),
    		    dhcp(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The PROPAGATION mode for this preferred server: Bootp Requests only,
                both Bootp Requests and Bootp Requests containing DHCP
                messages, or Bootp Requests containing DHCP messages only."
        DEFVAL	{ bootp }
        ::= { wfBootpRelayPrefServEntry 6 }

    wfBootpRelayPrefServOutReqPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of BOOTPREQUEST packets relayed to this
                preferred server."
        ::= { wfBootpRelayPrefServEntry 7 }

    END  -- Wellfleet-BOOTP-MIB
-- @(#)WSCCS h/mibs-bot.mib 1.3 10/20/95
Wellfleet-BOT-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Sep  6 16:57:28 EDT 1995
-- Edited by ksheth on 10/12/95 - Added BotKeepaliveTimer attribute
--           ksheth    10/20/95 - changed CU address max value to 254


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfBotGroup
        FROM Wellfleet-COMMON-MIB;


    wfBot		OBJECT IDENTIFIER ::= { wfBotGroup 1 }

    wfBotDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                User perform an SNMP SET operation on this object
                in order to create/delete BOT"
        DEFVAL	{ created }
        ::= { wfBot 1 }

    wfBotDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                User perform an SNMP SET operation on this object
                in order to enable/disable BOT"
        DEFVAL	{ enabled }
        ::= { wfBot 2 }

    wfBotState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of BOT"
        DEFVAL	{ down }
        ::= { wfBot 3 }

    wfBotInterfaceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBotInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Interface table which lists all BISYNC line entries and other
                line related information"
        ::= { wfBotGroup 2 }

    wfBotInterfaceEntry OBJECT-TYPE
        SYNTAX	WfBotInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfBotInterfaceTable"
        INDEX	{ wfBotInterfaceSlotNumber,
    		  wfBotInterfaceCctNumber }
        ::= { wfBotInterfaceTable 1 }

    WfBotInterfaceEntry ::= SEQUENCE {
    	    wfBotInterfaceDelete
    		INTEGER,
    	    wfBotInterfaceDisable
    		INTEGER,
    	    wfBotInterfaceCctNumber
    		INTEGER,
    	    wfBotInterfaceSlotNumber
    		INTEGER,
    	    wfBotInterfaceState
    		INTEGER,
    	    wfBotInterfaceType
    		INTEGER,
    	    wfBotInterfaceAttachedTo
    		INTEGER,
    	    wfBotInterfacePktCnt
    		Counter,
	    wfBotKeepaliveTimer
		INTEGER
        }

    wfBotInterfaceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete attribute. Default is Created
                Users perform SNMP SET operation on this object in
                order to create/delete a translation interface record"
        DEFVAL	{ created }
        ::= { wfBotInterfaceEntry 1 }

    wfBotInterfaceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables/Disables this mapping entry
                Setting of this attribute to DISABLED will disconnect
                all active sessions pertaining to this interface entry"
        DEFVAL	{ enabled }
        ::= { wfBotInterfaceEntry 2 }

    wfBotInterfaceCctNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit from which the connection attempt is
                received that initiates a translation session."
        ::= { wfBotInterfaceEntry 3 }

    wfBotInterfaceSlotNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number on which this interface is running"
        ::= { wfBotInterfaceEntry 4 }

    wfBotInterfaceState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the Interface"
        DEFVAL	{ down }
        ::= { wfBotInterfaceEntry 5 }

    wfBotInterfaceType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    singledrop(1),
    		    multidrop(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If this interface is point-to-point, i.e. no splitting
                occours we can straight away deliver BSC frame to designated
                TCP circuit, without looking into the CU address"
        DEFVAL	{ singledrop }
        ::= { wfBotInterfaceEntry 6 }

    wfBotInterfaceAttachedTo OBJECT-TYPE
        SYNTAX	INTEGER {
    		    primary(1),
    		    secondary(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Information that this interface is attached to the Primary or
                secondary BSC station"
        ::= { wfBotInterfaceEntry 7 }

    wfBotInterfacePktCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Interface packet count ..."
        ::= { wfBotInterfaceEntry 8 }

    wfBotKeepaliveTimer OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BOT Keepalive timer in sec..."
        DEFVAL	{ 10 }
        ::= { wfBotInterfaceEntry 9 }

    wfBotPeerTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBotPeerEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Peer table lists all TCP connections this router will have
                with its peers"
        ::= { wfBotGroup 3 }

    wfBotPeerEntry OBJECT-TYPE
        SYNTAX	WfBotPeerEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfBotPeerTable"
        INDEX	{ wfBotPeerSlotNumber,
    		  wfBotPeerCctNumber,
    		  wfBotPeerRemoteIpAddr,
    		  wfBotPeerLocalTcpListenPort,
    		  wfBotPeerRemoteTcpListenPort,
    		  wfBotConnOriginator }
        ::= { wfBotPeerTable 1 }

    WfBotPeerEntry ::= SEQUENCE {
    	    wfBotPeerEntryDelete
    		INTEGER,
    	    wfBotPeerEntryDisable
    		INTEGER,
    	    wfBotPeerSlotNumber
    		INTEGER,
    	    wfBotPeerCctNumber
    		INTEGER,
    	    wfBotPeerRemoteIpAddr
    		IpAddress,
    	    wfBotConnOriginator
    		INTEGER,
    	    wfBotPeerLocalTcpListenPort
    		INTEGER,
    	    wfBotPeerRemoteTcpListenPort
    		INTEGER,
    	    wfBotPeerLocalTcpPort
    		INTEGER,
    	    wfBotPeerRemoteTcpPort
    		INTEGER
        }

    wfBotPeerEntryDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete attribute. Default is Created
                Users perform SNMP SET operation on this object in
                order to create/delete a peer record"
        DEFVAL	{ created }
        ::= { wfBotPeerEntry 1 }

    wfBotPeerEntryDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables/Disables this mapping entry
                Setting of this attribute to DISABLED will disconnect
                all active sessions pertaining to this interface entry"
        DEFVAL	{ enabled }
        ::= { wfBotPeerEntry 2 }

    wfBotPeerSlotNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number on which this peer entry is configured"
        ::= { wfBotPeerEntry 3 }

    wfBotPeerCctNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit from which the connection attempt is
                received that initiates a translation session."
        ::= { wfBotPeerEntry 4 }

    wfBotPeerRemoteIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "IP Address of the remote host with which this translation
                session is established."
        ::= { wfBotPeerEntry 5 }

    wfBotConnOriginator OBJECT-TYPE
        SYNTAX	INTEGER {
    		    self(1),
    		    partner(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Upon start up, based on the configuration either
                partner is going to initiate TCP conn. or myself"
        ::= { wfBotPeerEntry 6 }

    wfBotPeerLocalTcpListenPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Based on the field wfBotConnOriginator, SiteManager
                will allow user to configure only one of following two fields:

                if Originator = SELF  then
                   through SiteManager ask user to enter PeerTcpListenPort#
                else
                   through SiteManager ask user to enter LocalTcpListenPort#

                So, in any case one of the two fields will have NULL_VALUE."
        ::= { wfBotPeerEntry 7 }

    wfBotPeerRemoteTcpListenPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Peer listen port for TCP connection"
        ::= { wfBotPeerEntry 8 }

    wfBotPeerLocalTcpPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "When TCP connection is established, we will have other TCP
                port number available which is assigned by the system from
                the available pool. We will fill in this information here
                in this READ_ONLY variable. Again, based on Originator
                only one of the following two fields will have valid value.
                if Originator = SELF then
                    fill in LocalTcpPort field inside the BOT module
                else
                    fill in PeerTcpPort field inside the BOT module

                In short,
                =========
                For Originator = SELF
                    PeerTcpListenPort and LocalTcpPort  entries are valid
                For Originator = PARTNER
                    LocalTcpListenPort and PeerTcpPort  entries are valid"
        ::= { wfBotPeerEntry 9 }

    wfBotPeerRemoteTcpPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Peer TCP port of the connection"
        ::= { wfBotPeerEntry 10 }

    wfBotCUTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBotCUEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "CU table lists all CUs reachable from this router on all
                TCP connections listed in PEER_TABLE"
        ::= { wfBotGroup 4 }

    wfBotCUEntry OBJECT-TYPE
        SYNTAX	WfBotCUEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfBotCUTable"
        INDEX	{ wfBotCUSlotNumber,
    		  wfBotCUCctNumber,
    		  wfBotCURemoteIpAddr,
    		  wfBotCULocalTcpListenPort,
    		  wfBotCURemoteTcpListenPort,
    		  wfBotCUAddrReachable }
        ::= { wfBotCUTable 1 }

    WfBotCUEntry ::= SEQUENCE {
    	    wfBotCUEntryDelete
    		INTEGER,
    	    wfBotCUEntryDisable
    		INTEGER,
    	    wfBotCUSlotNumber
    		INTEGER,
    	    wfBotCUCctNumber
    		INTEGER,
    	    wfBotCURemoteIpAddr
    		IpAddress,
    	    wfBotCULocalTcpListenPort
    		INTEGER,
    	    wfBotCURemoteTcpListenPort
    		INTEGER,
    	    wfBotCUAddrReachable
    		INTEGER
        }

    wfBotCUEntryDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete attribute. Default is Created
                Users perform SNMP SET operation on this object in
                order to create/delete a peer record"
        DEFVAL	{ created }
        ::= { wfBotCUEntry 1 }

    wfBotCUEntryDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables/Disables this cu entry
                Setting of this attribute to DISABLED will disconnect
                active TCP conn. pertaining to the peer entry"
        DEFVAL	{ enabled }
        ::= { wfBotCUEntry 2 }

    wfBotCUSlotNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "slot number used as an index"
        ::= { wfBotCUEntry 3 }

    wfBotCUCctNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit from which the connection attempt is
                CCT number for easy link between peer table and cu table"
        ::= { wfBotCUEntry 4 }

    wfBotCURemoteIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "IP Address of the remote host with which this translation
                session is established."
        ::= { wfBotCUEntry 5 }

    wfBotCULocalTcpListenPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "As mentioned earlier only one of following two field will
                have a valid value, while other will be NULL_VAL, based on
                who is the ConnOriginator"
        ::= { wfBotCUEntry 6 }

    wfBotCURemoteTcpListenPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "field from the peer table entry"
        ::= { wfBotCUEntry 7 }

    wfBotCUAddrReachable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    address(254)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "In BISYNC controller addresses range from 0-31. In MDL
                currently there is no way to represent the integer range.
                As lower bound is zero, here we specify only max possible"
        ::= { wfBotCUEntry 8 }

END  -- Wellfleet-BOT-MIB
-- @(#)WSCCS r/mibs-bridge.mib 1.1 8/30/95
Wellfleet-BRIDGE-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:38:44 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfBridgeGroup
        FROM Wellfleet-COMMON-MIB;


    wfBrLearning  	OBJECT IDENTIFIER ::= { wfBridgeGroup 1 }
    wfBrTp		OBJECT IDENTIFIER ::= { wfBrLearning 1 }

    wfBrTpBaseDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete the bridge."
        DEFVAL	{ created }
        ::= { wfBrTp 1 }

    wfBrTpBaseEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable the bridge."
        DEFVAL	{ enabled }
        ::= { wfBrTp 2 }

    wfBrTpBaseState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    pres(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the entire Bridge."
        DEFVAL	{ down }
        ::= { wfBrTp 3 }

    wfBrTpBaseFDBEntries OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current number of forward table entries"
        ::= { wfBrTp 4 }

    wfBrTpBaseFDBSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    size1024(1024),
    		    size2048(2048),
    		    size4096(4096),
    		    size8192(8192),
    		    size16384(16384),
    		    size32768(32768),
    		    size65536(65536),
    		    size131072(131072)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Size of the bridge table - only looked at at boot time"
        DEFVAL	{ size1024 }
        ::= { wfBrTp 5 }

    wfBrTpBaseFDBEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Disable placing fdb entries on the mib.
                This attribute only inspected at boot time."
        DEFVAL	{ enable }
        ::= { wfBrTp 6 }

    wfBrTpBaseFlushFwdTbl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    flush(1),
    		    noflush(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Flush the bridge fwd tables"
        DEFVAL	{ noflush }
        ::= { wfBrTp 7 }

    wfBrTpFdbTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBrTpFdbEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table that contains information about unicast
                entries for which the bridge has forwarding and/or
                filtering information.  This information is used
                by the transparent bridging function in
                determining how to propagate a received frame.
                inst = wfBrTpBaseFdbAddress"
        ::= { wfBrLearning 2 }

    wfBrTpFdbEntry OBJECT-TYPE
        SYNTAX	WfBrTpFdbEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the wfBrTpFdbTable."
        INDEX	{ wfBrTpBaseFdbAddress }
        ::= { wfBrTpFdbTable 1 }

    WfBrTpFdbEntry ::= SEQUENCE {
    	    wfBrTpBaseFdbAddress
    		OCTET STRING,
    	    wfBrTpBaseFdbPort
    		INTEGER,
    	    wfBrTpBaseFdbStatus
    		INTEGER
        }

    wfBrTpBaseFdbAddress OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A unicast MAC address for which the bridge has
                forwarding and/or filtering information."
        ::= { wfBrTpFdbEntry 1 }

    wfBrTpBaseFdbPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The port number on which the wfBrTpBaseFdbAddress
                was learned."
        ::= { wfBrTpFdbEntry 2 }

    wfBrTpBaseFdbStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    learned(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The status of this entry. The meanings of the
                values are:
                  learned(3) : the value of the corresponding
                              instance of wfBrTpFdbPort was
                              learned, and is being used."
        DEFVAL	{ learned }
        ::= { wfBrTpFdbEntry 3 }

    wfBrTpAggrStats	OBJECT IDENTIFIER ::= { wfBrLearning 3 }

    wfBrTpAggrInPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of packets received by the transparent bridge"
        ::= { wfBrTpAggrStats 1 }

    wfBrTpAggrOutPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of packets sent by the transparent bridge"
        ::= { wfBrTpAggrStats 2 }

    wfBrTpAggrDiscardPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of packets discarded by the transparent bridge"
        ::= { wfBrTpAggrStats 3 }

    wfBrTpInterface OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBrTpInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table that contains information about every
                interface that is associated with this
                transparent bridge.
                inst_id[1] = wfBrTpInterfaceCircuit"
        ::= { wfBridgeGroup 3 }

    wfBrTpInterfaceEntry OBJECT-TYPE
        SYNTAX	WfBrTpInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfBrTpInterface."
        INDEX	{ wfBrTpInterfaceCircuit }
        ::= { wfBrTpInterface 1 }

    WfBrTpInterfaceEntry ::= SEQUENCE {
    	    wfBrTpInterfaceDelete
    		INTEGER,
    	    wfBrTpInterfaceEnable
    		INTEGER,
    	    wfBrTpInterfaceState
    		INTEGER,
    	    wfBrTpInterfaceCircuit
    		INTEGER,
    	    wfBrTpInterfaceMaxInfo
    		INTEGER,
    	    wfBrTpInterfaceInFrames
    		Counter,
    	    wfBrTpInterfaceOutFrames
    		Counter,
    	    wfBrTpInterfaceInDiscards
    		Counter,
    	    wfBrTpInterfaceTranslationDisable
    		INTEGER
        }

    wfBrTpInterfaceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete an interface."
        DEFVAL	{ created }
        ::= { wfBrTpInterfaceEntry 1 }

    wfBrTpInterfaceEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2),
    		    circuitdump(33),
    		    fwdtbldump(17)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an interface."
        DEFVAL	{ enabled }
        ::= { wfBrTpInterfaceEntry 2 }

    wfBrTpInterfaceState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    pres(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the interface."
        DEFVAL	{ down }
        ::= { wfBrTpInterfaceEntry 3 }

    wfBrTpInterfaceCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit that this interface runs over."
        ::= { wfBrTpInterfaceEntry 4 }

    wfBrTpInterfaceMaxInfo OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum size of the INFO (non-MAC) field that
                this port will receive or transmit."
        ::= { wfBrTpInterfaceEntry 5 }

    wfBrTpInterfaceInFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of frames that have been received by
                this interface from its circuit."
        ::= { wfBrTpInterfaceEntry 6 }

    wfBrTpInterfaceOutFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of frames that have been transmitted
                by this interface to its circuit."
        ::= { wfBrTpInterfaceEntry 7 }

    wfBrTpInterfaceInDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of valid frames received which were
                received on this interface but then discarded."
        ::= { wfBrTpInterfaceEntry 8 }

    wfBrTpInterfaceTranslationDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable translation bridging parameter. Default is enabled."
        DEFVAL	{ disabled }
        ::= { wfBrTpInterfaceEntry 9 }

    wfBrTrafficFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBrTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Bridge Traffic Filters"
        ::= { wfBridgeGroup 4 }

    wfBrTrafficFilterEntry OBJECT-TYPE
        SYNTAX	WfBrTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in WfBrTrafficFilterTable."
        INDEX	{ wfBrTrafficFilterCircuit,
    		  wfBrTrafficFilterRuleNumber,
    		  wfBrTrafficFilterFragment }
        ::= { wfBrTrafficFilterTable 1 }

    WfBrTrafficFilterEntry ::= SEQUENCE {
    	    wfBrTrafficFilterCreate
    		INTEGER,
    	    wfBrTrafficFilterEnable
    		INTEGER,
    	    wfBrTrafficFilterStatus
    		INTEGER,
    	    wfBrTrafficFilterCounter
    		Counter,
    	    wfBrTrafficFilterDefinition
    		Opaque,
    	    wfBrTrafficFilterReserved
    		INTEGER,
    	    wfBrTrafficFilterCircuit
    		INTEGER,
    	    wfBrTrafficFilterRuleNumber
    		INTEGER,
    	    wfBrTrafficFilterFragment
    		INTEGER,
    	    wfBrTrafficFilterName
    		DisplayString
        }

    wfBrTrafficFilterCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the existence of the traffic filter rule:
                created - traffic filter exists
                delete - traffic filter does not exist and can be deleted."
        DEFVAL	{ created }
        ::= { wfBrTrafficFilterEntry 1 }

    wfBrTrafficFilterEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether or not the traffic filter rule should be used:
                enabled - activate the rule.
                disabled - inactivate the rule."
        DEFVAL	{ enabled }
        ::= { wfBrTrafficFilterEntry 2 }

    wfBrTrafficFilterStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    error(2),
    		    inactive(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines the current status of the traffic filter:
                inactive - the rule is not in use.
                active - the rule is being used.
                error - the application detected an error in the rule."
        DEFVAL	{ inactive }
        ::= { wfBrTrafficFilterEntry 3 }

    wfBrTrafficFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets that have
                matched this rule."
        ::= { wfBrTrafficFilterEntry 4 }

    wfBrTrafficFilterDefinition OBJECT-TYPE
        SYNTAX	Opaque
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The filter rule definition."
        ::= { wfBrTrafficFilterEntry 5 }

    wfBrTrafficFilterReserved OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reserved field."
        ::= { wfBrTrafficFilterEntry 6 }

    wfBrTrafficFilterCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ID of the Bridge Circuit to which the
                filter is applied."
        ::= { wfBrTrafficFilterEntry 7 }

    wfBrTrafficFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ID for the rule."
        ::= { wfBrTrafficFilterEntry 8 }

    wfBrTrafficFilterFragment OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fragment number - for large rules."
        ::= { wfBrTrafficFilterEntry 9 }

    wfBrTrafficFilterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "name of the rule number"
        ::= { wfBrTrafficFilterEntry 10 }

    END  -- Wellfleet-BRIDGE-MIB
-- @(#)WSCCS o/mibs-cct_name.mib 1.2 9/28/95
Wellfleet-CCT-NAME-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:39:06 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfServices, wfCircuitNameExtension
        FROM Wellfleet-COMMON-MIB;


    wfCircuitNameTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfCircuitNameEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The table of circuit names"
        ::= { wfServices 3 }

    wfCircuitNameEntry OBJECT-TYPE
        SYNTAX	WfCircuitNameEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry format for the table of circuit names"
        INDEX	{ wfCircuitNumber }
        ::= { wfCircuitNameTable 1 }

    WfCircuitNameEntry ::= SEQUENCE {
    	    wfCircuitNameDelete
    		INTEGER,
    	    wfCircuitNumber
    		INTEGER,
    	    wfCircuitName
    		DisplayString,
    	    wfCircuitIfType
    		INTEGER,
    	    wfCircuitProtoMap
    		OCTET STRING,
    	    wfCircuitType
    		INTEGER,
    	    wfCircuitRelCctList
    		OCTET STRING,
    	    wfCircuitLineList
    		OCTET STRING
        }

    wfCircuitNameDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Creation and deletion flag for this record"
        DEFVAL	{ create }
        ::= { wfCircuitNameEntry 1 }

    wfCircuitNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "circuit number"
        ::= { wfCircuitNameEntry 2 }

    wfCircuitName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "circuit name"
        ::= { wfCircuitNameEntry 3 }

    wfCircuitIfType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    csmacd(10),
    		    sync(20),
    		    t1(30),
    		    e1(40),
    		    token(50),
    		    fddi(60),
    		    hssi(70),
    		    mct1(80),
    		    ds1e1(90),
    		    none(100),
    		    atm(110),
    		    async(120),
    		    isdn(130),
    		    atmz(140),
		    bisync(150)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "circuit interface type"
        ::= { wfCircuitNameEntry 4 }

    wfCircuitProtoMap OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "CIRCUIT_PROTO_BRIDGE 1
                CIRCUIT_PROTO_SPANTREE  2
                CIRCUIT_PROTO_IP  3
                CIRCUIT_PROTO_RIP  4
                CIRCUIT_PROTO_EGP  5
                CIRCUIT_PROTO_OSPF  6
                CIRCUIT_PROTO_SNMP  7
                CIRCUIT_PROTO_TFTP  8
                CIRCUIT_PROTO_TCP  9
                CIRCUIT_PROTO_DECNET4  10
                CIRCUIT_PROTO_VINES  11
                CIRCUIT_PROTO_SMDS  12
                CIRCUIT_PROTO_FR  13
                CIRCUIT_PROTO_IPX  14
                CIRCUIT_PROTO_IPX_RIP  15
                CIRCUIT_PROTO_XNS  16
                CIRCUIT_PROTO_XNS_RIP  17
                CIRCUIT_PROTO_AT         18
                CIRCUIT_PROTO_SR  19
                CIRCUIT_PROTO_FR_VC  20
                CIRCUIT_PROTO_PRI_Q  21
                CIRCUIT_PROTO_PPP  22
                CIRCUIT_PROTO_OSI               23
                CIRCUIT_PROTO_LLC2  24
                CIRCUIT_PROTO_LNM  25
                CIRCUIT_PROTO_X25  26
                CIRCUIT_PROTO_ATM               27
                CIRCUIT_PROTO_ATM_VC            28
                CIRCUIT_PROTO_TELNET  29
                CIRCUIT_PROTO_STA  30
                CIRCUIT_PROTO_BGP  31
                CIRCUIT_PROTO_DLS  32
                CIRCUIT_PROTO_RARP  33
                CIRCUIT_PROTO_BOOTP  34
                CIRCUIT_PROTO_LLC2_VC  35
                CIRCUIT_PROTO_AURP  36
                CIRCUIT_PROTO_X25_VC  37
                CIRCUIT_PROTO_DEMAND  38
                CIRCUIT_PROTO_CL_IP  39
                CIRCUIT_PROTO_PROXY  40
                CIRCUIT_PROTO_TELNET_CLIENT 41
                CIRCUIT_PROTO_SW_LAPB           42
                CIRCUIT_PROTO_SR_SPANTREE 43
                CIRCUIT_PROTO_NML  44
                CIRCUIT_PROTO_RDISC  45
                CIRCUIT_PROTO_SDLC  46
                CIRCUIT_PROTO_NBASE  47
                CIRCUIT_PROTO_SWSMDS  48
                CIRCUIT_PROTO_FRSW_CONG  49
                CIRCUIT_PROTO_SW_PROXY  50
                CIRCUIT_BNX_RESERVE   51
                CIRCUIT_PROTO_APPN              52
                CIRCUIT_PROTO_APPN_CP           53
                CIRCUIT_PROTO_ISDN              54
                CIRCUIT_PROTO_LINEMANAGER       55
                CIRCUIT_PROTO_ATM_UNI  56
                CIRCUIT_PROTO_ATM_UNI_VCL       57
                CIRCUIT_PROTO_IGMP  58
                CIRCUIT_PROTO_DVMRP  59
                CIRCUIT_PROTO_DVMRP  59
                CIRCUIT_PROTO_NBIP  60
                CIRCUIT_PROTO_FTP               61
                CIRCUIT_PROTO_WCP  62
                CIRCUIT_PROTO_ARP  63
                CIRCUIT_PROTO_ST2               64
                CIRCUIT_PROTO_ATMZ              65
                CIRCUIT_PROTO_ATM_LE            66
                CIRCUIT_PROTO_IPEX              67
                CIRCUIT_PROTO_NLSP              68
                CIRCUIT_PROTO_BGPRS             69
                CIRCUIT_PROTO_CRM               70
                CIRCUIT_PROTO_RR                71
                CIRCUIT_PROTO_ATM_SIG           72
                NUMBER_OF_PROTOCOLS             72"
        ::= { wfCircuitNameEntry 5 }

    wfCircuitType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    normal(1),
    		    virtual(2),
    		    master(3),
    		    clip(4),
    		    internal(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The circuit type"
        DEFVAL	{ normal }
        ::= { wfCircuitNameEntry 6 }

    wfCircuitRelCctList OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The related circuit list for this circuit: only valid if
                wfCircuitType is either CIRCUIT_REL_VIRTUAL or CIRCUIT_REL_MASTER"
        ::= { wfCircuitNameEntry 7 }

    wfCircuitLineList OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The line info list for this circuit"
        ::= { wfCircuitNameEntry 8 }

    wfLineMappingTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfLineMappingEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The table of line mappings"
        ::= { wfCircuitNameExtension 1 }

    wfLineMappingEntry OBJECT-TYPE
        SYNTAX	WfLineMappingEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry format for the table of lines"
        INDEX	{ wfLineMappingNumber }
        ::= { wfLineMappingTable 1 }

    WfLineMappingEntry ::= SEQUENCE {
    	    wfLineMappingDelete
    		INTEGER,
    	    wfLineMappingNumber
    		INTEGER,
    	    wfLineMappingCct
    		INTEGER,
    	    wfLineMappingDef
    		OCTET STRING
        }

    wfLineMappingDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Creation and deletion flag for this record"
        DEFVAL	{ created }
        ::= { wfLineMappingEntry 1 }

    wfLineMappingNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Unique line number. This number is stored in the physical line entries."
        ::= { wfLineMappingEntry 2 }

    wfLineMappingCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Circuit number stored in the physical line entry."
        ::= { wfLineMappingEntry 3 }

    wfLineMappingDef OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Identifies which physical line this line maps to."
        ::= { wfLineMappingEntry 4 }

    wfNode		OBJECT IDENTIFIER ::= { wfCircuitNameExtension 2 }

    wfNodeDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                SM performs a set operation on this
                object in order to create/delete Node base record."
        DEFVAL	{ created }
        ::= { wfNode 1 }

    wfNodeProtoMap OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Node-Protocol mask, indicates what protocols are configured
                on the router , for bit numbers see wfCircuitProtomap"
        ::= { wfNode 2 }

    END  -- Wellfleet-CCT-NAME-MIB
-- @(#)WSCCS i/mibs-cctopts.mib 1.5 10/20/95
Wellfleet-CCTOPTS-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:38:49 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfCircuitOptsGroup
        FROM Wellfleet-COMMON-MIB;


    wfCctOptsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfCctOptsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The table of circuit names"
        ::= { wfCircuitOptsGroup 1 }

    wfCctOptsEntry OBJECT-TYPE
        SYNTAX	WfCctOptsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry format for the table of circuit options"
        INDEX	{ wfCctOptsCct }
        ::= { wfCctOptsTable 1 }

    WfCctOptsEntry ::= SEQUENCE {
    	    wfCctOptsDelete
    		INTEGER,
    	    wfCctOptsPriorityQueueingDisable
    		INTEGER,
    	    wfCctOptsCct
    		INTEGER,
    	    wfCctOptsHighPriorityQueueLimit
    		INTEGER,
    	    wfCctOptsNormalPriorityQueueLimit
    		INTEGER,
    	    wfCctOptsLowPriorityQueueLimit
    		INTEGER,
    	    wfCctOptsMaxInterruptQueueLatency
    		INTEGER,
    	    wfCctOptsMaxHighPriorityQueueLatency
    		INTEGER,
    	    wfCctOptsHiXmits
    		Counter,
    	    wfCctOptsNormalXmits
    		Counter,
    	    wfCctOptsLoXmits
    		Counter,
    	    wfCctOptsHiClippedPkts
    		Counter,
    	    wfCctOptsNormalClippedPkts
    		Counter,
    	    wfCctOptsLoClippedPkts
    		Counter,
    	    wfCctOptsIntrQHighWaterPkts
    		Gauge,
    	    wfCctOptsHiQHighWaterPkts
    		Gauge,
    	    wfCctOptsNormalQHighWaterPkts
    		Gauge,
    	    wfCctOptsLoQHighWaterPkts
    		Gauge,
    	    wfCctOptsHighWaterPktsClear
    		INTEGER,
    	    wfCctOptsDroppedPkts
    		Counter,
    	    wfCctOptsLargePkts
    		Counter,
    	    wfCctOptsRxPkts
    		Counter,
    	    wfCctOptsChooserType
    		INTEGER,
    	    wfCctOptsPqDequeueAlgType
    		INTEGER,
    	    wfCctOptsHiPercent
    		INTEGER,
    	    wfCctOptsNormalPercent
    		INTEGER,
    	    wfCctOptsLoPercent
    		INTEGER,
    	    wfCctOptsHiTotalOctets
    		Counter,
    	    wfCctOptsNormalTotalOctets
    		Counter,
    	    wfCctOptsLoTotalOctets
    		Counter,
    	    wfCctOptsCircuitType
    		INTEGER,
    	    wfCctOptsBackupCct
    		INTEGER,
    	    wfCctOptsPrimaryCctWanProtocolType
    		INTEGER,
    	    wfCctOptsMacFilterFormat
                INTEGER,
            wfCctOptsPktsNotQueued
                Counter,
            wfCctOptsBitsShiftCount
                INTEGER
        }

    wfCctOptsDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Creation and deletion flag for this record"
        DEFVAL	{ created }
        ::= { wfCctOptsEntry 1 }

    wfCctOptsPriorityQueueingDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Priority Queuing option"
        DEFVAL	{ enabled }
        ::= { wfCctOptsEntry 2 }

    wfCctOptsCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "circuit number"
        ::= { wfCctOptsEntry 3 }

    wfCctOptsHighPriorityQueueLimit OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(20)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "High Priority Queue limit
                The minimum valid value is zero.
                no maximum valid value (limited by bufs for the slot)"
        DEFVAL	{ default }
        ::= { wfCctOptsEntry 4 }

    wfCctOptsNormalPriorityQueueLimit OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(20)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Normal Priority Queue limit
                The minimum valid value is zero.
                no maximum valid value (limited by bufs for the slot)"
        DEFVAL	{ default }
        ::= { wfCctOptsEntry 5 }

    wfCctOptsLowPriorityQueueLimit OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(20)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Low Priority Queue limit
                The minimum valid value is zero.
                no maximum valid value (limited by bufs for the slot)"
        DEFVAL	{ default }
        ::= { wfCctOptsEntry 6 }

    wfCctOptsMaxInterruptQueueLatency OBJECT-TYPE
        SYNTAX	INTEGER(100..5000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Interrupt Queue Latency"
        DEFVAL	{ 2500 }
        ::= { wfCctOptsEntry 7 }

    wfCctOptsMaxHighPriorityQueueLatency OBJECT-TYPE
        SYNTAX	INTEGER(100..5000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "High Priority Queue Latency"
        DEFVAL	{ 250 }
        ::= { wfCctOptsEntry 8 }

    wfCctOptsHiXmits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "High Priority Transmit count"
        ::= { wfCctOptsEntry 9 }

    wfCctOptsNormalXmits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Normal Priority Transmit count"
        ::= { wfCctOptsEntry 10 }

    wfCctOptsLoXmits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Low Priority Transmit count"
        ::= { wfCctOptsEntry 11 }

    wfCctOptsHiClippedPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "High Prio Transmit Clip Count"
        ::= { wfCctOptsEntry 12 }

    wfCctOptsNormalClippedPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Normal Prio Transmit Clip Count"
        ::= { wfCctOptsEntry 13 }

    wfCctOptsLoClippedPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Low Prio Transmit Clip Count"
        ::= { wfCctOptsEntry 14 }

    wfCctOptsIntrQHighWaterPkts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Interrupt Queue high-water mark"
        ::= { wfCctOptsEntry 15 }

    wfCctOptsHiQHighWaterPkts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "High-priority Queue high-water mark"
        ::= { wfCctOptsEntry 16 }

    wfCctOptsNormalQHighWaterPkts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Normal Queue high-water mark"
        ::= { wfCctOptsEntry 17 }

    wfCctOptsLoQHighWaterPkts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Low-priority Queue high-water mark"
        ::= { wfCctOptsEntry 18 }

    wfCctOptsHighWaterPktsClear OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Attribute to clear the high-water marks. When the MIB
                changes, Priority Queueing (if ENABLED) checks to see
                if HighWaterPktsClear is different than the last time the MIB
                was modified in any way.  If it is different,
                all the high water marks (see above) are set to zero."
        ::= { wfCctOptsEntry 19 }

    wfCctOptsDroppedPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Packets which were filtered in Priority Queueing"
        ::= { wfCctOptsEntry 20 }

    wfCctOptsLargePkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Large Packets which became an exception to latency rules"
        ::= { wfCctOptsEntry 21 }

    wfCctOptsRxPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Packets received"
        ::= { wfCctOptsEntry 22 }

    wfCctOptsChooserType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    random(1),
    		    addrbased(2),
    		    bod(3),
    		    filterbased(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Algorithm to choose line within a multiline circuit"
        DEFVAL	{ addrbased }
        ::= { wfCctOptsEntry 23 }

    wfCctOptsPqDequeueAlgType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    prioritization(1),
    		    allocation(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selection of Priority Queueing dequeueing algorithm
                PQ_STRICT_PRIORITIZATION is 'classical' 7.50 dequeueing.
                PQ_BANDWIDTH_ALLOCATION makes exceptions to strict
                prioritization in order to prevent starvation of the
                Normal and/or Low priority traffic."
        DEFVAL	{ allocation }
        ::= { wfCctOptsEntry 24 }

    wfCctOptsHiPercent OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(70)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the percent of the SYNC line bandwidth that
                the network manager wishes to allocate to traffic
                which has been configured to be High Priority.
                This parameter only has meaning when the bandwidth allocation
                dequeueing algorithm is enabled by setting the dequeueing
                algorithm type appropriately.
                With this parameter
                set other than 100, each time the configured percent
                utilization is reached, Normal and Low traffic is
                sent out (if any is queued up), up to their
                configured percentages."
        DEFVAL	{ default }
        ::= { wfCctOptsEntry 25 }

    wfCctOptsNormalPercent OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(20)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The minimum percent of the SYNC line that Normal-priority
                traffic will get (if there is any) when the Bandwidth
                Allocation feature is enabled.
                See text for wfCctOptsHiPercent for more information."
        DEFVAL	{ default }
        ::= { wfCctOptsEntry 26 }

    wfCctOptsLoPercent OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The minimum percent of the SYNC line that Low-priority traffic
                will get (if there is any) when the Bandwidth Allocation
                feature is enabled.
                See text for wfCctOptsHiPercent for more information."
        DEFVAL	{ default }
        ::= { wfCctOptsEntry 27 }

    wfCctOptsHiTotalOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Running total of High Octets transmitted when
                using Bandwidth Allocation dequeueing algorithm"
        ::= { wfCctOptsEntry 28 }

    wfCctOptsNormalTotalOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Running total of Normal Octets transmitted when
                using Bandwidth Allocation dequeueing algorithm"
        ::= { wfCctOptsEntry 29 }

    wfCctOptsLoTotalOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Running total of Low Octets transmitted when
                using Bandwidth Allocation dequeueing algorithm"
        ::= { wfCctOptsEntry 30 }

    wfCctOptsCircuitType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    normal(1),
    		    primary(2),
    		    dialondemand(3),
    		    bandwidthondemand(4),
    		    unused(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Circuit Type Attribute"
        DEFVAL	{ normal }
        ::= { wfCctOptsEntry 31 }

    wfCctOptsBackupCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "backup circuit number"
        ::= { wfCctOptsEntry 32 }

    wfCctOptsPrimaryCctWanProtocolType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unknown(1),
    		    ppp(2),
    		    relay(3),
    		    sync(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The type of WAN protocol type which is running
                on the primary line. This attribute is only
                read when a dial backup circuit is using this
                mib record."
        DEFVAL	{ unknown }
        ::= { wfCctOptsEntry 33 }

    wfCctOptsMacFilterFormat OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(1),
    		    tokenring(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Used to force the Mac src/dst address to be matched
                in Token Ring format."
        DEFVAL	{ default }
        ::= { wfCctOptsEntry 34 }

    wfCctOptsPktsNotQueued OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
                "Packets that were not Queued or Dropped by
                 Priority Queuing "
        ::= { wfCctOptsEntry 35 }

    wfCctOptsBitsShiftCount OBJECT-TYPE
        SYNTAX  INTEGER (0..30)
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "Used to shift src/dst address to the right
                when addressed based chooser is set."
        ::= { wfCctOptsEntry 36 }

    wfCctOptsBrFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfCctOptsBrFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Bridge  Filters"
        ::= { wfCircuitOptsGroup 2 }

    wfCctOptsBrFilterEntry OBJECT-TYPE
        SYNTAX	WfCctOptsBrFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in WfCctOptsBrFilterTable."
        INDEX	{ wfCctOptsBrFilterCct,
    		  wfCctOptsBrFilterRuleNumber,
    		  wfCctOptsBrFilterFragment }
        ::= { wfCctOptsBrFilterTable 1 }

    WfCctOptsBrFilterEntry ::= SEQUENCE {
    	    wfCctOptsBrFilterCreate
    		INTEGER,
    	    wfCctOptsBrFilterEnable
    		INTEGER,
    	    wfCctOptsBrFilterState
    		INTEGER,
    	    wfCctOptsBrFilterCounter
    		Counter,
    	    wfCctOptsBrFilterDefinition
    		OCTET STRING,
    	    wfCctOptsBrFilterReserved
    		INTEGER,
    	    wfCctOptsBrFilterCct
    		INTEGER,
    	    wfCctOptsBrFilterRuleNumber
    		INTEGER,
    	    wfCctOptsBrFilterFragment
    		INTEGER,
    	    wfCctOptsBrFilterName
    		DisplayString
        }

    wfCctOptsBrFilterCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the existence of the traffic filter rule:
                created - traffic filter exists
                delete - traffic filter does not exist and can be deleted."
        DEFVAL	{ created }
        ::= { wfCctOptsBrFilterEntry 1 }

    wfCctOptsBrFilterEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether or not the traffic filter rule should be used:
                enabled - activate the rule.
                disabled - inactivate the rule."
        DEFVAL	{ enabled }
        ::= { wfCctOptsBrFilterEntry 2 }

    wfCctOptsBrFilterState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    error(2),
    		    inactive(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines the current State of the traffic filter:
                inactive - the rule is not in use.
                active - the rule is being used.
                error - the application detected an error in the rule."
        DEFVAL	{ inactive }
        ::= { wfCctOptsBrFilterEntry 3 }

    wfCctOptsBrFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets that have
                matched this rule."
        ::= { wfCctOptsBrFilterEntry 4 }

    wfCctOptsBrFilterDefinition OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The filter rule definition."
        ::= { wfCctOptsBrFilterEntry 5 }

    wfCctOptsBrFilterReserved OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reserved field."
        ::= { wfCctOptsBrFilterEntry 6 }

    wfCctOptsBrFilterCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ID of the CctBridge Cct to which the
                filter is applied."
        ::= { wfCctOptsBrFilterEntry 7 }

    wfCctOptsBrFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ID for the rule."
        ::= { wfCctOptsBrFilterEntry 8 }

    wfCctOptsBrFilterFragment OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fragment number - for large rules."
        ::= { wfCctOptsBrFilterEntry 9 }

    wfCctOptsBrFilterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "name of the rule number"
        ::= { wfCctOptsBrFilterEntry 10 }

    wfCctOptsIpFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfCctOptsIpFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Ip  Filters"
        ::= { wfCircuitOptsGroup 3 }

    wfCctOptsIpFilterEntry OBJECT-TYPE
        SYNTAX	WfCctOptsIpFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in WfCctOptsIpFilterTable."
        INDEX	{ wfCctOptsIpFilterCct,
    		  wfCctOptsIpFilterRuleNumber,
    		  wfCctOptsIpFilterFragment }
        ::= { wfCctOptsIpFilterTable 1 }

    WfCctOptsIpFilterEntry ::= SEQUENCE {
    	    wfCctOptsIpFilterCreate
    		INTEGER,
    	    wfCctOptsIpFilterEnable
    		INTEGER,
    	    wfCctOptsIpFilterState
    		INTEGER,
    	    wfCctOptsIpFilterCounter
    		Counter,
    	    wfCctOptsIpFilterDefinition
    		OCTET STRING,
    	    wfCctOptsIpFilterReserved
    		INTEGER,
    	    wfCctOptsIpFilterCct
    		INTEGER,
    	    wfCctOptsIpFilterRuleNumber
    		INTEGER,
    	    wfCctOptsIpFilterFragment
    		INTEGER,
    	    wfCctOptsIpFilterName
    		DisplayString
        }

    wfCctOptsIpFilterCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the existence of the traffic filter rule:
                created - traffic filter exists
                delete - traffic filter does not exist and can be deleted."
        DEFVAL	{ created }
        ::= { wfCctOptsIpFilterEntry 1 }

    wfCctOptsIpFilterEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether or not the traffic filter rule should be used:
                enabled - activate the rule.
                disabled - inactivate the rule."
        DEFVAL	{ enabled }
        ::= { wfCctOptsIpFilterEntry 2 }

    wfCctOptsIpFilterState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    error(2),
    		    inactive(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines the current State of the traffic filter:
                inactive - the rule is not in use.
                active - the rule is being used.
                error - the application detected an error in the rule."
        DEFVAL	{ inactive }
        ::= { wfCctOptsIpFilterEntry 3 }

    wfCctOptsIpFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets that have
                matched this rule."
        ::= { wfCctOptsIpFilterEntry 4 }

    wfCctOptsIpFilterDefinition OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The filter rule definition."
        ::= { wfCctOptsIpFilterEntry 5 }

    wfCctOptsIpFilterReserved OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reserved field."
        ::= { wfCctOptsIpFilterEntry 6 }

    wfCctOptsIpFilterCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ID of the CctIp Cct to which the
                filter is applied."
        ::= { wfCctOptsIpFilterEntry 7 }

    wfCctOptsIpFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ID for the rule."
        ::= { wfCctOptsIpFilterEntry 8 }

    wfCctOptsIpFilterFragment OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fragment number - for large rules."
        ::= { wfCctOptsIpFilterEntry 9 }

    wfCctOptsIpFilterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "name of the rule number"
        ::= { wfCctOptsIpFilterEntry 10 }

    wfCctOptsLengthBasedTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfCctOptsLengthBasedEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Length Based Priority Table"
        ::= { wfCircuitOptsGroup 4 }

    wfCctOptsLengthBasedEntry OBJECT-TYPE
        SYNTAX	WfCctOptsLengthBasedEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in WfCctOptsLengthBasedTable."
        INDEX	{ wfCctOptsLengthBasedCct,
    		  wfCctOptsLengthBasedMux,
    		  wfCctOptsLengthBasedData }
        ::= { wfCctOptsLengthBasedTable 1 }

    WfCctOptsLengthBasedEntry ::= SEQUENCE {
    	    wfCctOptsLengthBasedDelete
    		INTEGER,
    	    wfCctOptsLengthBasedDisable
    		INTEGER,
    	    wfCctOptsLengthBasedState
    		INTEGER,
    	    wfCctOptsLengthBasedCct
    		INTEGER,
    	    wfCctOptsLengthBasedMux
    		INTEGER,
    	    wfCctOptsLengthBasedData
    		OCTET STRING,
    	    wfCctOptsLengthBasedLength
    		INTEGER,
    	    wfCctOptsLengthBasedLessThanQ
    		INTEGER,
    	    wfCctOptsLengthBasedGreaterThanQ
    		INTEGER
        }

    wfCctOptsLengthBasedDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the existence of the length based priority filter rule:
                created - traffic filter exists
                delete - traffic filter does not exist and can be deleted."
        DEFVAL	{ created }
        ::= { wfCctOptsLengthBasedEntry 1 }

    wfCctOptsLengthBasedDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether or not the length based priority filter rule should be used:
                enabled - activate the rule.
                disabled - inactivate the rule."
        DEFVAL	{ enabled }
        ::= { wfCctOptsLengthBasedEntry 2 }

    wfCctOptsLengthBasedState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    error(2),
    		    inactive(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines the current State of the length based priority filter:
                inactive - the rule is not in use.
                active - the rule is being used.
                error - the application detected an error in the rule."
        DEFVAL	{ inactive }
        ::= { wfCctOptsLengthBasedEntry 3 }

    wfCctOptsLengthBasedCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ID of the Cct to which the filter is applied"
        ::= { wfCctOptsLengthBasedEntry 4 }

    wfCctOptsLengthBasedMux OBJECT-TYPE
        SYNTAX	INTEGER {
    		    etype(1),
    		    lsap(2),
    		    snap(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "packet mux type"
        ::= { wfCctOptsLengthBasedEntry 5 }

    wfCctOptsLengthBasedData OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (5))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "a five byte quantity of the form
                ethernet  - 0x6003000000 (e.g. DECnet)
                lsap      - 0xfefe030000 (e.g. OSI)
                snap      - 0x0000000800 (e.g. IP)
                   - 0x0800070800 (e.g. Appletalk DDP)"
        ::= { wfCctOptsLengthBasedEntry 6 }

    wfCctOptsLengthBasedLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum length of a packet to be considered high priority"
        ::= { wfCctOptsLengthBasedEntry 7 }

    wfCctOptsLengthBasedLessThanQ OBJECT-TYPE
        SYNTAX	INTEGER {
    		    hi(3),
    		    normal(2),
    		    lo(1)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "queue into which packets of length less than or equal
                wfCctOptsLengthBasedLength are placed"
        DEFVAL	{ normal }
        ::= { wfCctOptsLengthBasedEntry 8 }

    wfCctOptsLengthBasedGreaterThanQ OBJECT-TYPE
        SYNTAX	INTEGER {
    		    hi(3),
    		    normal(2),
    		    lo(1)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "queue into which packets of length greater than
                wfCctOptsLengthBasedLength are placed"
        DEFVAL	{ lo }
        ::= { wfCctOptsLengthBasedEntry 9 }

    wfSwservOptsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSwservOptsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The table of circuits defined  over  switched services"
        ::= { wfCircuitOptsGroup 5 }

    wfSwservOptsEntry OBJECT-TYPE
        SYNTAX	WfSwservOptsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry  format for the table  of sw_serv circuit options"
        INDEX	{ wfSwservOptsCct }
        ::= { wfSwservOptsTable 1 }

    WfSwservOptsEntry ::= SEQUENCE {
    	    wfSwservOptsDelete
    		INTEGER,
    	    wfSwservOptsCct
    		INTEGER,
    	    wfSwservOptsCircuitType
    		INTEGER,
    	    wfSwservOptsBackupCct
    		INTEGER,
    	    wfSwservOptsBackupPool
    		INTEGER,
    	    wfSwservOptsDemandPool
    		INTEGER,
    	    wfSwservOptsBackupMode
    		INTEGER,
    	    wfSwservOptsActiveBackupCct
    		INTEGER,
    	    wfSwservOptsForcedDial
    		INTEGER,
    	    wfSwservOptsMaxUpTime
    		INTEGER,
    	    wfSwservOptsBringUpHour
    		INTEGER,
    	    wfSwservOptsBringUpMinute
    		INTEGER,
    	    wfSwservOptsTakeDownHour
    		INTEGER,
    	    wfSwservOptsTakeDownMinute
    		INTEGER,
    	    wfSwservOptsInactivityTime
    		INTEGER,
    	    wfSwservOptsCircuitState
    		INTEGER,
    	    wfSwservOptsPrimaryDownTime
    		INTEGER,
    	    wfSwservOptsNumOutgoingConn
    		Counter,
    	    wfSwservOptsNumIncomingConn
    		Counter,
    	    wfSwservOptsActiveSlot
    		INTEGER,
    	    wfSwservOptsActiveLine
    		INTEGER,
    	    wfSwservOptsPacketsDropped
    		Counter,
    	    wfSwservOptsTimeLastPktDropped
    		INTEGER,
    	    wfSwservOptsForcedTakedown
    		INTEGER,
    	    wfSwservOptsRetryMax
    		INTEGER,
    	    wfSwservOptsRetryCount
    		Counter,
    	    wfSwservOptsRetryDelay
    		INTEGER,
    	    wfSwservOptsDemandConnectionMode
    		INTEGER,
    	    wfSwservOptsAutoDemandTermination
    		INTEGER,
    	    wfSwservOptsAutoDemandTermReset
    		INTEGER,
    	    wfSwservOptsChapLocalName
    		DisplayString,
    	    wfSwservOptsChapSecret
    		DisplayString,
    	    wfSwservOptsMaxUpTermination
    		INTEGER,
    	    wfSwservOptsMaxUpTermReset
    		INTEGER,
    	    wfSwservOptsBandwidthPool
    		INTEGER,
    	    wfSwservOptsBandwidthMode
    		INTEGER,
    	    wfSwservOptsPapId
    		DisplayString,
    	    wfSwservOptsPapPassword
    		DisplayString,
    	    wfSwservOptsDebugMsgLevel
    		INTEGER,
    	    wfSwservOptsDmdCctGroupNum
    		INTEGER,
    	    wfSwservOptsWanProtocol
    		INTEGER
        }

    wfSwservOptsDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Creation and deletion flag"
        DEFVAL	{ created }
        ::= { wfSwservOptsEntry 1 }

    wfSwservOptsCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit Number"
        ::= { wfSwservOptsEntry 2 }

    wfSwservOptsCircuitType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    normal(1),
    		    primary(2),
    		    dialondemand(3),
    		    bandwidthondemand(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Circuit Type Attribute"
        DEFVAL	{ normal }
        ::= { wfSwservOptsEntry 3 }

    wfSwservOptsBackupCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Backup Circuit Number assigned by site manager"
        ::= { wfSwservOptsEntry 4 }

    wfSwservOptsBackupPool OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Backup Pool Id"
        ::= { wfSwservOptsEntry 5 }

    wfSwservOptsDemandPool OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Dial on Demand Pool Id"
        ::= { wfSwservOptsEntry 6 }

    wfSwservOptsBackupMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    master(1),
    		    slave(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Mode  Master ( initiate  dialing ) or Slave"
        DEFVAL	{ master }
        ::= { wfSwservOptsEntry 7 }

    wfSwservOptsActiveBackupCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Active Backup Indicator"
        ::= { wfSwservOptsEntry 8 }

    wfSwservOptsForcedDial OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Forced Dial Indicator"
        DEFVAL	{ disabled }
        ::= { wfSwservOptsEntry 9 }

    wfSwservOptsMaxUpTime OBJECT-TYPE
        SYNTAX	INTEGER(1..999999)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Max amount fo time dial call can exist"
        DEFVAL	{ 60 }
        ::= { wfSwservOptsEntry 10 }

    wfSwservOptsBringUpHour OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Time of day hour to allow a line to dial"
        ::= { wfSwservOptsEntry 11 }

    wfSwservOptsBringUpMinute OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Time of day minute to allow a line to dial"
        ::= { wfSwservOptsEntry 12 }

    wfSwservOptsTakeDownHour OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Time of day hour to take down a dial line"
        ::= { wfSwservOptsEntry 13 }

    wfSwservOptsTakeDownMinute OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Time of day minute to take down a dial line"
        ::= { wfSwservOptsEntry 14 }

    wfSwservOptsInactivityTime OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum for inactivity timer is equal to
                infinity = 99999999"
        DEFVAL	{ 60 }
        ::= { wfSwservOptsEntry 15 }

    wfSwservOptsCircuitState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    inactive(2),
    		    notpresent(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit State"
        DEFVAL	{ notpresent }
        ::= { wfSwservOptsEntry 16 }

    wfSwservOptsPrimaryDownTime OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Amount of time allowed for establishment of primary before
                the backup is invoked"
        DEFVAL	{ default }
        ::= { wfSwservOptsEntry 17 }

    wfSwservOptsNumOutgoingConn OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Outgoing call attempts for this circuit"
        ::= { wfSwservOptsEntry 18 }

    wfSwservOptsNumIncomingConn OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Incoming call attempts for this circuit"
        ::= { wfSwservOptsEntry 19 }

    wfSwservOptsActiveSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot actively in use by this call"
        ::= { wfSwservOptsEntry 20 }

    wfSwservOptsActiveLine OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line actively in use by this call"
        ::= { wfSwservOptsEntry 21 }

    wfSwservOptsPacketsDropped OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Incoming call attempts for this circuit"
        ::= { wfSwservOptsEntry 22 }

    wfSwservOptsTimeLastPktDropped OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Incoming call attempts for this circuit"
        ::= { wfSwservOptsEntry 23 }

    wfSwservOptsForcedTakedown OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Forced Dial Indicator"
        DEFVAL	{ disabled }
        ::= { wfSwservOptsEntry 24 }

    wfSwservOptsRetryMax OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Redial count"
        DEFVAL	{ 2 }
        ::= { wfSwservOptsEntry 25 }

    wfSwservOptsRetryCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Redial count"
        ::= { wfSwservOptsEntry 26 }

    wfSwservOptsRetryDelay OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "delay to wait after retrys fails. value is in seconds"
        DEFVAL	{ 3 }
        ::= { wfSwservOptsEntry 27 }

    wfSwservOptsDemandConnectionMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    nodial(1),
    		    collmaster(2),
    		    collslave(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Mode Master - outgoing call has precedence terminate
                incoming call
                Slave - incoming call has precedence terminate
                outgoing call
                 NO_Dial - if data is present do MOT establish connection
                just drop the data"
        DEFVAL	{ collmaster }
        ::= { wfSwservOptsEntry 28 }

    wfSwservOptsAutoDemandTermination OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Automatically terminates demand circuit if
                maximum connect attempts reached"
        DEFVAL	{ disabled }
        ::= { wfSwservOptsEntry 29 }

    wfSwservOptsAutoDemandTermReset OBJECT-TYPE
        SYNTAX	INTEGER(1..999999)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Amount of time ( in Minutes )before atttempting to recreate
                the demand circuit after an auto termination"
        DEFVAL	{ 60 }
        ::= { wfSwservOptsEntry 30 }

    wfSwservOptsChapLocalName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute is used to assign a local CHAP Name to
                outbound calls to to inform our peer of our identity,
                during WHOAMI processing"
        ::= { wfSwservOptsEntry 31 }

    wfSwservOptsChapSecret OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Secret used for running CHAP when this cct is active.
                The peer must use the same secret when responding to our
                Challenges, which will be found in the Whoami Table"
        ::= { wfSwservOptsEntry 32 }

    wfSwservOptsMaxUpTermination OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Automatically terminates demand circuit if
                maximum connect attempts reached"
        DEFVAL	{ disabled }
        ::= { wfSwservOptsEntry 33 }

    wfSwservOptsMaxUpTermReset OBJECT-TYPE
        SYNTAX	INTEGER(1..999999)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Amount of time ( in Minutes )before atttempting to recreate
                the demand circuit after an auto termination"
        DEFVAL	{ 60 }
        ::= { wfSwservOptsEntry 34 }

    wfSwservOptsBandwidthPool OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bandwidth on Demand Pool Id"
        ::= { wfSwservOptsEntry 35 }

    wfSwservOptsBandwidthMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    monitor(1),
    		    normal(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bandwidth Mode Monitor (Congestion Monitor) or NORMAL"
        DEFVAL	{ normal }
        ::= { wfSwservOptsEntry 36 }

    wfSwservOptsPapId OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute is used to assign a local PAP Id to
                outbound calls to to inform our peer of our identity,
                during WHOAMI processing"
        ::= { wfSwservOptsEntry 37 }

    wfSwservOptsPapPassword OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute is used to assign a local PAP Password
                to outbound calls to to inform our peer of our identity,
                during WHOAMI processing"
        ::= { wfSwservOptsEntry 38 }

    wfSwservOptsDebugMsgLevel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    debug(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute is used to assign the level of Swserv Debug
                message to be logged for the circuit"
        DEFVAL	{ debug }
        ::= { wfSwservOptsEntry 39 }

    wfSwservOptsDmdCctGroupNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Backup Circuit Number assigned by site manager"
        ::= { wfSwservOptsEntry 40 }

    wfSwservOptsWanProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
                    unknown(1),
                    ppp(2),
                    fr(3),
                    frswitch(4)
                }
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Wan Protocol for this circuit assigned by site manager.
                 Used by BNX Software to Support ISDN Switched access
                 to Frame Relay Switch Network."
        DEFVAL	{ unknown }
        ::= { wfSwservOptsEntry 41 }

    wfSwservOutPhoneNumTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSwservOutPhoneNumEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "***************************************
                SWSERV outgoing phone number list "
        ::= { wfCircuitOptsGroup 6 }

    wfSwservOutPhoneNumEntry OBJECT-TYPE
        SYNTAX	WfSwservOutPhoneNumEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the SWSERV_SYNC table"
        INDEX	{ wfSwservOutPhoneNumCct,
    		  wfSwservOutPhoneNumIndex }
        ::= { wfSwservOutPhoneNumTable 1 }

    WfSwservOutPhoneNumEntry ::= SEQUENCE {
    	    wfSwservOutPhoneNumDelete
    		INTEGER,
    	    wfSwservOutPhoneNumCct
    		INTEGER,
    	    wfSwservOutPhoneNumIndex
    		INTEGER,
    	    wfSwservOutPhoneNumRmtStationNum
    		DisplayString,
    	    wfSwservOutPhoneNumSubAddr
    		DisplayString,
    	    wfSwservOutPhoneNumDelimiter
    		DisplayString,
    	    wfSwservOutPhoneNumType
    		INTEGER,
    	    wfSwservOutPhoneNumTypeofNum
    		INTEGER,
    	    wfSwservOutPhoneNumPlan
    		INTEGER,
    	    wfSwservOutPhoneNumRateAdaption
    		INTEGER
        }

    wfSwservOutPhoneNumDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Delete this phone number from the list"
        DEFVAL	{ create }
        ::= { wfSwservOutPhoneNumEntry 1 }

    wfSwservOutPhoneNumCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "CCT number for this phone list instance"
        ::= { wfSwservOutPhoneNumEntry 2 }

    wfSwservOutPhoneNumIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "a unique one up type number to create a list"
        ::= { wfSwservOutPhoneNumEntry 3 }

    wfSwservOutPhoneNumRmtStationNum OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the station address (phone number) of the remote system"
        ::= { wfSwservOutPhoneNumEntry 4 }

    wfSwservOutPhoneNumSubAddr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "for Swserv phone numbers, the sub address portion"
        ::= { wfSwservOutPhoneNumEntry 5 }

    wfSwservOutPhoneNumDelimiter OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "for Swserv phone numbers, the delimiter portion"
        ::= { wfSwservOutPhoneNumEntry 6 }

    wfSwservOutPhoneNumType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    dial(1),
    		    isdn(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "phone number types; ISDN types or Modem Dial types"
        DEFVAL	{ dial }
        ::= { wfSwservOutPhoneNumEntry 7 }

    wfSwservOutPhoneNumTypeofNum OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unknown(1),
    		    international(16),
    		    national(32),
    		    specific(48),
    		    subscriber(64),
    		    abbreviated(96)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "IF ISDN type number, it needs type of number
                UNKNOWN Type is 0, use 1 to satisfy MDL requirement
                This attribute value will be ANDED with  0xFFF0 before using it."
        DEFVAL	{ unknown }
        ::= { wfSwservOutPhoneNumEntry 8 }

    wfSwservOutPhoneNumPlan OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unknown(16),
    		    telephony(01),
    		    x121(03),
    		    telex(04),
    		    standard(08),
    		    private(09)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If Isdn and if type of number is UNKNOWN or INERNATIONAL or NATIONAL
                or SUBSCRIBER  then a plan number is needed. UNKNOWN is 0 ,
                using 16 (0x10)to satisfy MDL requirement. We will AND  this field with
                0x0F before using it."
        DEFVAL	{ unknown }
        ::= { wfSwservOutPhoneNumEntry 9 }

    wfSwservOutPhoneNumRateAdaption OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rate64(1),
    		    rate56(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If Isdn and if a specifis Transfer rate is to be requested when
                establishing a call to this distination address specify the desired
                rate."
        DEFVAL	{ rate64 }
        ::= { wfSwservOutPhoneNumEntry 10 }

    wfSwservInPhoneNumTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSwservInPhoneNumEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "SWSERV Ingoing phone number list "
        ::= { wfCircuitOptsGroup 7 }

    wfSwservInPhoneNumEntry OBJECT-TYPE
        SYNTAX	WfSwservInPhoneNumEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Swserv_SYNC table"
        INDEX	{ wfSwservInPhoneNumIndex }
        ::= { wfSwservInPhoneNumTable 1 }

    WfSwservInPhoneNumEntry ::= SEQUENCE {
    	    wfSwservInPhoneNumDelete
    		INTEGER,
    	    wfSwservInPhoneNumIndex
    		INTEGER,
    	    wfSwservInPhoneNumRmtStationNum
    		DisplayString,
    	    wfSwservInPhoneNumSubAddr
    		DisplayString,
    	    wfSwservInPhoneNumDelimiter
    		DisplayString,
    	    wfSwservInPhoneNumType
    		INTEGER,
    	    wfSwservInPhoneNumTypeofNum
    		INTEGER,
    	    wfSwservInPhoneNumPlan
    		INTEGER
        }

    wfSwservInPhoneNumDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Delete this phone number from the list"
        DEFVAL	{ create }
        ::= { wfSwservInPhoneNumEntry 1 }

    wfSwservInPhoneNumIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "a unique one up type number to create a list"
        ::= { wfSwservInPhoneNumEntry 2 }

    wfSwservInPhoneNumRmtStationNum OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the station address (phone number) of the remote system"
        ::= { wfSwservInPhoneNumEntry 3 }

    wfSwservInPhoneNumSubAddr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "for Swserv phone numbers, the sub address portion"
        ::= { wfSwservInPhoneNumEntry 4 }

    wfSwservInPhoneNumDelimiter OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "for Swserv phone numbers, the delimiter portion"
        ::= { wfSwservInPhoneNumEntry 5 }

    wfSwservInPhoneNumType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    dial(1),
    		    isdn(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "phone number types; ISDN types or Modem Dial types"
        DEFVAL	{ dial }
        ::= { wfSwservInPhoneNumEntry 6 }

    wfSwservInPhoneNumTypeofNum OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unknown(1),
    		    international(16),
    		    national(32),
    		    specific(48),
    		    subscriber(64),
    		    abbreviated(96)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "We will AND  this field with  0x0xFFF0 before using it."
        DEFVAL	{ unknown }
        ::= { wfSwservInPhoneNumEntry 7 }

    wfSwservInPhoneNumPlan OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unknown(16),
    		    telephony(01),
    		    x121(03),
    		    telex(04),
    		    standard(08),
    		    private(09)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "0x0F before using it."
        DEFVAL	{ unknown }
        ::= { wfSwservInPhoneNumEntry 8 }

    wfCctOptsBrBuPppFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfCctOptsBrBuPppFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Dial Backup PPP Datalink filter table"
        ::= { wfCircuitOptsGroup 8 }

    wfCctOptsBrBuPppFilterEntry OBJECT-TYPE
        SYNTAX	WfCctOptsBrBuPppFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in WfCctOptsBrBuPppFilterTable."
        INDEX	{ wfCctOptsBrBuPppFilterCct,
    		  wfCctOptsBrBuPppFilterRuleNumber,
    		  wfCctOptsBrBuPppFilterFragment }
        ::= { wfCctOptsBrBuPppFilterTable 1 }

    WfCctOptsBrBuPppFilterEntry ::= SEQUENCE {
    	    wfCctOptsBrBuPppFilterCreate
    		INTEGER,
    	    wfCctOptsBrBuPppFilterEnable
    		INTEGER,
    	    wfCctOptsBrBuPppFilterState
    		INTEGER,
    	    wfCctOptsBrBuPppFilterCounter
    		Counter,
    	    wfCctOptsBrBuPppFilterDefinition
    		OCTET STRING,
    	    wfCctOptsBrBuPppFilterReserved
    		INTEGER,
    	    wfCctOptsBrBuPppFilterCct
    		INTEGER,
    	    wfCctOptsBrBuPppFilterRuleNumber
    		INTEGER,
    	    wfCctOptsBrBuPppFilterFragment
    		INTEGER,
    	    wfCctOptsBrBuPppFilterName
    		DisplayString
        }

    wfCctOptsBrBuPppFilterCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the existence of the traffic filter rule:
                created - traffic filter exists
                delete - traffic filter does not exist and can be deleted."
        DEFVAL	{ created }
        ::= { wfCctOptsBrBuPppFilterEntry 1 }

    wfCctOptsBrBuPppFilterEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether or not the traffic filter rule should be used:
                enabled - activate the rule.
                disabled - inactivate the rule."
        DEFVAL	{ enabled }
        ::= { wfCctOptsBrBuPppFilterEntry 2 }

    wfCctOptsBrBuPppFilterState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    error(2),
    		    inactive(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines the current State of the traffic filter:
                inactive - the rule is not in use.
                active - the rule is being used.
                error - the application detected an error in the rule."
        DEFVAL	{ inactive }
        ::= { wfCctOptsBrBuPppFilterEntry 3 }

    wfCctOptsBrBuPppFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets that have
                matched this rule."
        ::= { wfCctOptsBrBuPppFilterEntry 4 }

    wfCctOptsBrBuPppFilterDefinition OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The filter rule definition."
        ::= { wfCctOptsBrBuPppFilterEntry 5 }

    wfCctOptsBrBuPppFilterReserved OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reserved field."
        ::= { wfCctOptsBrBuPppFilterEntry 6 }

    wfCctOptsBrBuPppFilterCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ID of the CctBridge Cct to which the
                filter is applied."
        ::= { wfCctOptsBrBuPppFilterEntry 7 }

    wfCctOptsBrBuPppFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ID for the rule."
        ::= { wfCctOptsBrBuPppFilterEntry 8 }

    wfCctOptsBrBuPppFilterFragment OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fragment number - for large rules."
        ::= { wfCctOptsBrBuPppFilterEntry 9 }

    wfCctOptsBrBuPppFilterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "name of the rule number"
        ::= { wfCctOptsBrBuPppFilterEntry 10 }

    wfCctOptsIpBuPppFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfCctOptsIpBuPppFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "IP Filter Table for Backup Lines"
        ::= { wfCircuitOptsGroup 9 }

    wfCctOptsIpBuPppFilterEntry OBJECT-TYPE
        SYNTAX	WfCctOptsIpBuPppFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in WfCctOptsIpBuPppFilterTable."
        INDEX	{ wfCctOptsIpBuPppFilterCct,
    		  wfCctOptsIpBuPppFilterRuleNumber,
    		  wfCctOptsIpBuPppFilterFragment }
        ::= { wfCctOptsIpBuPppFilterTable 1 }

    WfCctOptsIpBuPppFilterEntry ::= SEQUENCE {
    	    wfCctOptsIpBuPppFilterCreate
    		INTEGER,
    	    wfCctOptsIpBuPppFilterEnable
    		INTEGER,
    	    wfCctOptsIpBuPppFilterState
    		INTEGER,
    	    wfCctOptsIpBuPppFilterCounter
    		Counter,
    	    wfCctOptsIpBuPppFilterDefinition
    		OCTET STRING,
    	    wfCctOptsIpBuPppFilterReserved
    		INTEGER,
    	    wfCctOptsIpBuPppFilterCct
    		INTEGER,
    	    wfCctOptsIpBuPppFilterRuleNumber
    		INTEGER,
    	    wfCctOptsIpBuPppFilterFragment
    		INTEGER,
    	    wfCctOptsIpBuPppFilterName
    		DisplayString
        }

    wfCctOptsIpBuPppFilterCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the existence of the traffic filter rule:
                created - traffic filter exists
                delete - traffic filter does not exist and can be deleted."
        DEFVAL	{ created }
        ::= { wfCctOptsIpBuPppFilterEntry 1 }

    wfCctOptsIpBuPppFilterEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether or not the traffic filter rule should be used:
                enabled - activate the rule.
                disabled - inactivate the rule."
        DEFVAL	{ enabled }
        ::= { wfCctOptsIpBuPppFilterEntry 2 }

    wfCctOptsIpBuPppFilterState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    error(2),
    		    inactive(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines the current State of the traffic filter:
                inactive - the rule is not in use.
                active - the rule is being used.
                error - the application detected an error in the rule."
        DEFVAL	{ inactive }
        ::= { wfCctOptsIpBuPppFilterEntry 3 }

    wfCctOptsIpBuPppFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets that have
                matched this rule."
        ::= { wfCctOptsIpBuPppFilterEntry 4 }

    wfCctOptsIpBuPppFilterDefinition OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The filter rule definition."
        ::= { wfCctOptsIpBuPppFilterEntry 5 }

    wfCctOptsIpBuPppFilterReserved OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reserved field."
        ::= { wfCctOptsIpBuPppFilterEntry 6 }

    wfCctOptsIpBuPppFilterCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ID of the CctBridge Cct to which the
                filter is applied."
        ::= { wfCctOptsIpBuPppFilterEntry 7 }

    wfCctOptsIpBuPppFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ID for the rule."
        ::= { wfCctOptsIpBuPppFilterEntry 8 }

    wfCctOptsIpBuPppFilterFragment OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fragment number - for large rules."
        ::= { wfCctOptsIpBuPppFilterEntry 9 }

    wfCctOptsIpBuPppFilterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "name of the rule number"
        ::= { wfCctOptsIpBuPppFilterEntry 10 }

    wfCctOptsCngcTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfCctOptsCngcEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "BNX Switch congestion control Table"
        ::= { wfCircuitOptsGroup 10 }

    wfCctOptsCngcEntry OBJECT-TYPE
        SYNTAX	WfCctOptsCngcEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in WfCctOptsCngcTable."
        INDEX	{ wfCctOptsCngcCct }
        ::= { wfCctOptsCngcTable 1 }

    WfCctOptsCngcEntry ::= SEQUENCE {
    	    wfCctOptsCngcDelete
    		INTEGER,
    	    wfCctOptsCngcDisable
    		INTEGER,
    	    wfCctOptsCngcCct
    		INTEGER,
    	    wfCctOptsCngcSmdsDiscardability
    		INTEGER,
    	    wfCctOptsCngcCfgSwtxqThreshold
    		INTEGER,
    	    wfCctOptsCngcSwtxqThreshold
    		INTEGER,
    	    wfCctOptsCngcCngLevel0Threshold
    		INTEGER,
    	    wfCctOptsCngcCngLevel1Threshold
    		INTEGER,
    	    wfCctOptsCngcCngLevel2Threshold
    		INTEGER,
    	    wfCctOptsCngcLinkType
    		INTEGER,
    	    wfCctOptsCngcTrfPriorityEnable
    		INTEGER,
    	    wfCctOptsCngcPortIPTrfPriority
    		INTEGER,
    	    wfCctOptsCngcPortTrfDiscardLvl
    		INTEGER,
    	    wfCctOptsCngcPortTrfPriority
    		INTEGER,
    	    wfCctOptsCngcCfgHwtxQThreshold
    		INTEGER,
    	    wfCctOptsCngcHwtxQThreshold
    		INTEGER,
    	    wfCctOptsCngcSndTrapForPktsDropped
    		INTEGER,
    	    wfCctOptsCngcCfgQp0Threshold
    		INTEGER,
    	    wfCctOptsCngcQp0Threshold
    		INTEGER,
    	    wfCctOptsCngcQp0CngLvl0Threshold
    		INTEGER,
    	    wfCctOptsCngcQp0CngLvl1Threshold
    		INTEGER,
    	    wfCctOptsCngcQp0CngLvl2Threshold
    		INTEGER,
    	    wfCctOptsCngcQp0PktsServPriNxtQ
    		INTEGER,
    	    wfCctOptsCngcCfgQp1Threshold
    		INTEGER,
    	    wfCctOptsCngcQp1Threshold
    		INTEGER,
    	    wfCctOptsCngcQp1CngLvl0Threshold
    		INTEGER,
    	    wfCctOptsCngcQp1CngLvl1Threshold
    		INTEGER,
    	    wfCctOptsCngcQp1CngLvl2Threshold
    		INTEGER,
    	    wfCctOptsCngcQp1PktsServPriNxtQ
    		INTEGER,
    	    wfCctOptsCngcCfgQp2Threshold
    		INTEGER,
    	    wfCctOptsCngcQp2Threshold
    		INTEGER,
    	    wfCctOptsCngcQp2CngLvl0Threshold
    		INTEGER,
    	    wfCctOptsCngcQp2CngLvl1Threshold
    		INTEGER,
    	    wfCctOptsCngcQp2CngLvl2Threshold
    		INTEGER,
    	    wfCctOptsCngcQp2PktsServPriNxtQ
    		INTEGER,
    	    wfCctOptsCngcCfgQp3Threshold
    		INTEGER,
    	    wfCctOptsCngcQp3Threshold
    		INTEGER,
    	    wfCctOptsCngcQp3CngLvl0Threshold
    		INTEGER,
    	    wfCctOptsCngcQp3CngLvl1Threshold
    		INTEGER,
    	    wfCctOptsCngcQp3CngLvl2Threshold
    		INTEGER,
    	    wfCctOptsCngcPriority0TxPkts
    		Counter,
    	    wfCctOptsCngcPriority0TxOctets
    		Counter,
    	    wfCctOptsCngcPriority0DropPkts
    		Counter,
    	    wfCctOptsCngcPriority0DropOctets
    		Counter,
    	    wfCctOptsCngcPriority1TxPkts
    		Counter,
    	    wfCctOptsCngcPriority1TxOctets
    		Counter,
    	    wfCctOptsCngcPriority1DropPkts
    		Counter,
    	    wfCctOptsCngcPriority1DropOctets
    		Counter,
    	    wfCctOptsCngcPriority2TxPkts
    		Counter,
    	    wfCctOptsCngcPriority2TxOctets
    		Counter,
    	    wfCctOptsCngcPriority2DropPkts
    		Counter,
    	    wfCctOptsCngcPriority2DropOctets
    		Counter,
    	    wfCctOptsCngcPriority3TxPkts
    		Counter,
    	    wfCctOptsCngcPriority3TxOctets
    		Counter,
    	    wfCctOptsCngcPriority3DropPkts
    		Counter,
    	    wfCctOptsCngcPriority3DropOctets
    		Counter,
    	    wfCctOptsCngcTxFRNonDePkts
    		Counter,
    	    wfCctOptsCngcTxFRNonDeOctets
    		Counter,
    	    wfCctOptsCngcTxFRDePkts
    		Counter,
    	    wfCctOptsCngcTxFRDeOctets
    		Counter,
    	    wfCctOptsCngcDropFRNonDePkts
    		Counter,
    	    wfCctOptsCngcDropFRNonDeOctets
    		Counter,
    	    wfCctOptsCngcDropFRDePkts
    		Counter,
    	    wfCctOptsCngcDropFRDeOctets
    		Counter,
    	    wfCctOptsCngcFRSetFecnPkts
    		Counter,
    	    wfCctOptsCngcFRSetFecnOctets
    		Counter,
    	    wfCctOptsCngcFRSetBecnPkts
    		Counter,
    	    wfCctOptsCngcFRSetBecnOctets
    		Counter
        }

    wfCctOptsCngcDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the existence of the congestion control entry
                CNGC_CREATED - congestion control entry exists
                CNGC_DELETED - congestion control entry does not exist and can
                          be deleted. "
        DEFVAL	{ created }
        ::= { wfCctOptsCngcEntry 1 }

    wfCctOptsCngcDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether congestion control is enabled or disabled on the
                circuit"
        DEFVAL	{ enabled }
        ::= { wfCctOptsCngcEntry 2 }

    wfCctOptsCngcCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit number of the circuit to which the entry is applied"
        ::= { wfCctOptsCngcEntry 3 }

    wfCctOptsCngcSmdsDiscardability OBJECT-TYPE
        SYNTAX	INTEGER {
    		    datagram(1),
    		    frde(2),
    		    frnde(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is obsolete in V5.0 and upwards.
                Defines how SMDS packets entering BNX network through
                SMDS SSI and SMDS SNI interfaces should be treated at this
                circuit during congestion for dropping. This is applicable
                only on the internodal links.
                     CNGC_FRDE - treat this like Frame relay DE frame.
                     CNGC_FRNDE - treat this like Frame Relay non DE frame
                     CNGC_DATAGRAM - treat this like a datagram packet. "
        DEFVAL	{ datagram }
        ::= { wfCctOptsCngcEntry 4 }

    wfCctOptsCngcCfgSwtxqThreshold OBJECT-TYPE
        SYNTAX	INTEGER(1..256)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is obsolete in V5.0 and upwards.
                Defines the user configured software transmit queue threshold.
                If this is set to NULL_VAL then the switch calculates
                the default value depending on the media and uses the default value.
                The default value is recommended."
        ::= { wfCctOptsCngcEntry 5 }

    wfCctOptsCngcSwtxqThreshold OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is obsolete in V5.0 and upwards.
                Defines the software transmit queue threshold in use.
                Switch updates this attribute to inform user what the
                current software transmit queue threshold is."
        ::= { wfCctOptsCngcEntry 6 }

    wfCctOptsCngcCngLevel0Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is obsolete in V5.0 and upwards.
                Defines the Software Transmit Queue congestion level 0 threshold
                as a percentage of the Software Transmit Queue Threshold.
                The default value is recommended."
        DEFVAL	{ 25 }
        ::= { wfCctOptsCngcEntry 7 }

    wfCctOptsCngcCngLevel1Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is obsolete in V5.0 and upwards.
                Defines the Software Transmit Queue congestion level 1 threshold
                as a percentage of the Software Transmit Queue Threshold.
                The default value is recommended.
                wfCctOptsCngcCngLevel1Threshold should be more than
                wfCctOptsCngcCngLevel0Threshold, otherwise there will be no
                congestion level 1."
        DEFVAL	{ 50 }
        ::= { wfCctOptsCngcEntry 8 }

    wfCctOptsCngcCngLevel2Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is obsolete in V5.0 and upwards.
                Defines the Software Transmit Queue congestion level 2 threshold
                as a percentage of the Software Transmit Queue Threshold.
                The default value is recommended.
                wfCctOptsCngcCngLevel2Threshold should be more than
                wfCctOptsCngcCngLevel1Threshold, otherwise there will be no
                congestion level 2."
        DEFVAL	{ 75 }
        ::= { wfCctOptsCngcEntry 9 }

    wfCctOptsCngcLinkType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    access(1),
    		    nodal(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether the circuit is an access link or inter-nodal
                link (trunk).
                Traffic monitoring, traffic priority determination, traffic
                discardability level determination are done at access link and each
                incoming packet on an access link is tagged with the information.
                Inter-nodal link (trunk) uses the above tagged information in packets
                for priority queueing and discarding packets during congestion.
                WARNING - It is important to set the appropriate link type for this
                attribute otherwise congestion control will not work. The default
                value for this attribute is access link. This attribute value
                must be changed to CNGC_LINK_INTER_NODAL for inter-nodal link(trunk)."
        DEFVAL	{ access }
        ::= { wfCctOptsCngcEntry 10 }

    wfCctOptsCngcTrfPriorityEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether traffic prioritization is enabled or disabled
                on the circuit."
        DEFVAL	{ disabled }
        ::= { wfCctOptsCngcEntry 11 }

    wfCctOptsCngcPortIPTrfPriority OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the traffic priority for transmitting Non Frame Relay
                or SMDS traffic on this port.
                       CNGC_IPPRIORITY_TWO - Default Value
                          Set all non FR or SMDS user traffic packets to priority 2.
                       CNGC_IPPRIORITY_ONE - Set all non FR or SMDS packets to priority 1.
                       CNGC_IPPRIORITY_TWO - Set all non FR or SMDS packets to priority 2.
                       CNGC_IPPRIORITY_THREE - Set all non FR or SMDS packets to priority 3."
        DEFVAL	{ two }
        ::= { wfCctOptsCngcEntry 12 }

    wfCctOptsCngcPortTrfDiscardLvl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines at what congestion level the incoming packets on this
                port should be discarded in the network.
                CNGC_DISCARD_AT_LVL_TWO - Discard FR DE packets at level 2,
                                              discard FR non DE packets at level 4,
                                              discard SMDS packets at level 3,
                                              discard IP packets at level 3.
                                              Default value
                CNGC_DISCARD_AT_LVL_ONE - discard all at level 1
                CNGC_DISCARD_AT_LVL_TWO - discard all at level 2
                CNGC_DISCARD_AT_LVL_THREE - discard all at level 3
                CNGC_DISCARD_AT_LVL_FOUR - discard all at level 4"
        DEFVAL	{ two }
        ::= { wfCctOptsCngcEntry 13 }

    wfCctOptsCngcPortTrfPriority OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the traffic priority level of all the incoming packets
                on this port.
                CNGC_PRIORITY_TWO - Default value
                   Set all incoming user traffic packets to priority 2.
                CNGC_PRIORITY_ONE - Set all incoming packets to priority 1.
                CNGC_PRIORITY_TWO - Set all incoming packets to priority 2.
                CNGC_PRIORITY_THREE - Set all incoming packets to priority 3.
                Priority 0 is reserved for network critical packets like
                OSPF, FR LMI and SMDS heartbeat, Cross Net polling and is
                    not available for user traffic."
        DEFVAL	{ two }
        ::= { wfCctOptsCngcEntry 14 }

    wfCctOptsCngcCfgHwtxQThreshold OBJECT-TYPE
        SYNTAX	INTEGER(1..64)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the user configured hardware transmit queue threshold.
                NULL_VAL - Switch calculates the appropriate value based on
                           system resources and uses the value. This is recommended.
                CNGC_HWTXQ_MINIMUM - minimum value to be used.
                CNGC_HWTXQ_MAXIMUM - maximum value to be used."
        ::= { wfCctOptsCngcEntry 15 }

    wfCctOptsCngcHwtxQThreshold OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current hardware queue threshold"
        ::= { wfCctOptsCngcEntry 16 }

    wfCctOptsCngcSndTrapForPktsDropped OBJECT-TYPE
        SYNTAX	INTEGER(100..1000000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Switch sends a congestion notification trap for every
                wfCctOptsCngcSndTrapForPktsDropped number of packets dropped."
        DEFVAL	{ 100000 }
        ::= { wfCctOptsCngcEntry 17 }

    wfCctOptsCngcCfgQp0Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the Priority 0 queue threshold
                NULL_VAL - Switch calculates the appropriate value based on
                           system resources and uses the value. This is recommended."
        ::= { wfCctOptsCngcEntry 18 }

    wfCctOptsCngcQp0Threshold OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current Priority 0 queue threshold"
        ::= { wfCctOptsCngcEntry 19 }

    wfCctOptsCngcQp0CngLvl0Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines priority 0 queue congestion level 0 threshold as a
                percentage of priority 0 queue threshold."
        DEFVAL	{ 25 }
        ::= { wfCctOptsCngcEntry 20 }

    wfCctOptsCngcQp0CngLvl1Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines priority 0 queue congestion level 1 threshold as a
                percentage of priority 0 queue threshold.
                The value of this attribute should be greater than
                wfCctOptsCngcQp0CngLvl0Threshold, otherwise there will be no
                priority 0 queue congestion level 1."
        DEFVAL	{ 50 }
        ::= { wfCctOptsCngcEntry 21 }

    wfCctOptsCngcQp0CngLvl2Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines priority 0 queue congestion level 2 threshold as a
                percentage of priority 0 queue threshold.
                The value of this attribute should be greater than
                wfCctOptsCngcQp0CngLvl1Threshold, otherwise there will be no
                priority 0 queue congestion level 2."
        DEFVAL	{ 75 }
        ::= { wfCctOptsCngcEntry 22 }

    wfCctOptsCngcQp0PktsServPriNxtQ OBJECT-TYPE
        SYNTAX	INTEGER(1..20)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the number of priority 0 queue packets to be served
                prior to serving each priority 1 queue packet. If priority 0 queue
                is empty then priority 1 queue packets are served."
        DEFVAL	{ 2 }
        ::= { wfCctOptsCngcEntry 23 }

    wfCctOptsCngcCfgQp1Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the Priority 1 queue threshold
                NULL_VAL - Switch calculates the appropriate value based on
                           system resources and uses the value. This is recommended."
        ::= { wfCctOptsCngcEntry 24 }

    wfCctOptsCngcQp1Threshold OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current Priority 0 queue threshold"
        ::= { wfCctOptsCngcEntry 25 }

    wfCctOptsCngcQp1CngLvl0Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines priority 1 queue congestion level 0 threshold as a
                percentage of priority 1 queue threshold."
        DEFVAL	{ 25 }
        ::= { wfCctOptsCngcEntry 26 }

    wfCctOptsCngcQp1CngLvl1Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines priority 1 queue congestion level 1 threshold as a
                percentage of priority 1 queue threshold.
                The value of this attribute should be greater than
                wfCctOptsCngcQp1CngLvl0Threshold, otherwise there will be no
                priority 1 queue congestion level 1."
        DEFVAL	{ 50 }
        ::= { wfCctOptsCngcEntry 27 }

    wfCctOptsCngcQp1CngLvl2Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines priority 1 queue congestion level 2 threshold as a
                percentage of priority 1 queue threshold.
                The value of this attribute should be greater than
                wfCctOptsCngcQp1CngLvl1Threshold, otherwise there will be no
                priority 1 queue congestion level 2."
        DEFVAL	{ 75 }
        ::= { wfCctOptsCngcEntry 28 }

    wfCctOptsCngcQp1PktsServPriNxtQ OBJECT-TYPE
        SYNTAX	INTEGER(1..20)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the number of priority 1 queue packets to be served
                prior to serving each priority 2 queue packet. If priority 1 queue
                is empty then priority 2 queue packets are served."
        DEFVAL	{ 2 }
        ::= { wfCctOptsCngcEntry 29 }

    wfCctOptsCngcCfgQp2Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the Priority 2 queue threshold
                NULL_VAL - Switch calculates the appropriate value based on
                           system resources and uses the value. This is recommended."
        ::= { wfCctOptsCngcEntry 30 }

    wfCctOptsCngcQp2Threshold OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current Priority 0 queue threshold"
        ::= { wfCctOptsCngcEntry 31 }

    wfCctOptsCngcQp2CngLvl0Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines priority 2 queue congestion level 0 threshold as a
                percentage of priority 2 queue threshold."
        DEFVAL	{ 25 }
        ::= { wfCctOptsCngcEntry 32 }

    wfCctOptsCngcQp2CngLvl1Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines priority 2 queue congestion level 1 threshold as a
                percentage of priority 2 queue threshold.
                The value of this attribute should be greater than
                wfCctOptsCngcQp2CngLvl0Threshold, otherwise there will be no
                priority 2 queue congestion level 1."
        DEFVAL	{ 50 }
        ::= { wfCctOptsCngcEntry 33 }

    wfCctOptsCngcQp2CngLvl2Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines priority 2 queue congestion level 2 threshold as a
                percentage of priority 2 queue threshold.
                The value of this attribute should be greater than
                wfCctOptsCngcQp2CngLvl1Threshold, otherwise there wil be no
                priority 2 queue congestion level 2."
        DEFVAL	{ 75 }
        ::= { wfCctOptsCngcEntry 34 }

    wfCctOptsCngcQp2PktsServPriNxtQ OBJECT-TYPE
        SYNTAX	INTEGER(1..20)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the number of priority 2 queue packets to be served
                prior to serving each priority 3 queue packet. If priority 2 queue
                is empty then priority 3 queue packets are served."
        DEFVAL	{ 2 }
        ::= { wfCctOptsCngcEntry 35 }

    wfCctOptsCngcCfgQp3Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the Priority 3 queue threshold
                NULL_VAL - Switch calculates the appropriate value based on
                           system resources and uses the value. This is recommended."
        ::= { wfCctOptsCngcEntry 36 }

    wfCctOptsCngcQp3Threshold OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current Priority 3 queue threshold"
        ::= { wfCctOptsCngcEntry 37 }

    wfCctOptsCngcQp3CngLvl0Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines priority 3 queue congestion level 0 threshold as a
                percentage of priority 3 queue threshold."
        DEFVAL	{ 25 }
        ::= { wfCctOptsCngcEntry 38 }

    wfCctOptsCngcQp3CngLvl1Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines priority 3 queue congestion level 1 threshold as a
                percentage of priority 3 queue threshold.
                The value of this attribute should be greater than
                wfCctOptsCngcQp3CngLvl0Threshold, otherwise there will be no
                priority 3 queue congestion level 1."
        DEFVAL	{ 50 }
        ::= { wfCctOptsCngcEntry 39 }

    wfCctOptsCngcQp3CngLvl2Threshold OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines priority 3 queue congestion level 2 threshold as a
                percentage of priority 3 queue threshold.
                The value of this attribute should be greater than
                wfCctOptsCngcQp3CngLvl1Threshold, otherwise there will be no
                priority 3 queue congestion level 2."
        DEFVAL	{ 75 }
        ::= { wfCctOptsCngcEntry 40 }

    wfCctOptsCngcPriority0TxPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of priority 0 packets transmitted"
        ::= { wfCctOptsCngcEntry 41 }

    wfCctOptsCngcPriority0TxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of priority 0 Octets transmitted"
        ::= { wfCctOptsCngcEntry 42 }

    wfCctOptsCngcPriority0DropPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of priority 0 packets dropped */"
        ::= { wfCctOptsCngcEntry 43 }

    wfCctOptsCngcPriority0DropOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of priority 0 octets dropped"
        ::= { wfCctOptsCngcEntry 44 }

    wfCctOptsCngcPriority1TxPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of priority 1 packets transmitted"
        ::= { wfCctOptsCngcEntry 45 }

    wfCctOptsCngcPriority1TxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of priority 1 Octets transmitted"
        ::= { wfCctOptsCngcEntry 46 }

    wfCctOptsCngcPriority1DropPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of priority 1 packets dropped */"
        ::= { wfCctOptsCngcEntry 47 }

    wfCctOptsCngcPriority1DropOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of priority 1 octets dropped"
        ::= { wfCctOptsCngcEntry 48 }

    wfCctOptsCngcPriority2TxPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of priority 2 packets transmitted"
        ::= { wfCctOptsCngcEntry 49 }

    wfCctOptsCngcPriority2TxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of priority 2 Octets transmitted"
        ::= { wfCctOptsCngcEntry 50 }

    wfCctOptsCngcPriority2DropPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of priority 2 packets dropped */"
        ::= { wfCctOptsCngcEntry 51 }

    wfCctOptsCngcPriority2DropOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of priority 2 octets dropped"
        ::= { wfCctOptsCngcEntry 52 }

    wfCctOptsCngcPriority3TxPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of priority 3 packets transmitted"
        ::= { wfCctOptsCngcEntry 53 }

    wfCctOptsCngcPriority3TxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of priority 3 Octets transmitted"
        ::= { wfCctOptsCngcEntry 54 }

    wfCctOptsCngcPriority3DropPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of priority 3 packets dropped */"
        ::= { wfCctOptsCngcEntry 55 }

    wfCctOptsCngcPriority3DropOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of priority 3 octets dropped"
        ::= { wfCctOptsCngcEntry 56 }

    wfCctOptsCngcTxFRNonDePkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Frame Relay non DE packets transmitted"
        ::= { wfCctOptsCngcEntry 57 }

    wfCctOptsCngcTxFRNonDeOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Frame Relay non DE octets transmitted"
        ::= { wfCctOptsCngcEntry 58 }

    wfCctOptsCngcTxFRDePkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Frame Relay DE packets transmitted"
        ::= { wfCctOptsCngcEntry 59 }

    wfCctOptsCngcTxFRDeOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Frame Relay DE octets transmitted"
        ::= { wfCctOptsCngcEntry 60 }

    wfCctOptsCngcDropFRNonDePkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Frame Relay non DE packets dropped"
        ::= { wfCctOptsCngcEntry 61 }

    wfCctOptsCngcDropFRNonDeOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of Frame Relay non DE octets dropped"
        ::= { wfCctOptsCngcEntry 62 }

    wfCctOptsCngcDropFRDePkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of Frame Relay DE packets dropped"
        ::= { wfCctOptsCngcEntry 63 }

    wfCctOptsCngcDropFRDeOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of Frame Relay DE octets dropped"
        ::= { wfCctOptsCngcEntry 64 }

    wfCctOptsCngcFRSetFecnPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of Frame Relay packets in which this link set FECN"
        ::= { wfCctOptsCngcEntry 65 }

    wfCctOptsCngcFRSetFecnOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of Frame Relay octets in which this link set FECN"
        ::= { wfCctOptsCngcEntry 66 }

    wfCctOptsCngcFRSetBecnPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of Frame Relay frames in which this link set BECN"
        ::= { wfCctOptsCngcEntry 67 }

    wfCctOptsCngcFRSetBecnOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of Frame Relay octets in which this link set BECN"
        ::= { wfCctOptsCngcEntry 68 }

    wfSwservTimeOfDayTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSwservTODEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "SWSERV circuit time of day MIB"
        ::= { wfCircuitOptsGroup 11 }

    wfSwservTODEntry OBJECT-TYPE
        SYNTAX	WfSwservTODEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the wfSwservTimeOfDayTable"
        INDEX	{ wfSwservTODCct,
    		  wfSwservTODIndex }
        ::= { wfSwservTimeOfDayTable 1 }

    WfSwservTODEntry ::= SEQUENCE {
    	    wfSwservTODDelete
    		INTEGER,
    	    wfSwservTODCct
    		INTEGER,
    	    wfSwservTODIndex
    		INTEGER,
    	    wfSwservTODType
    		INTEGER,
    	    wfSwservTODStartTime
    		INTEGER,
    	    wfSwservTODEndTime
    		INTEGER,
    	    wfSwservTODInactivityEnable
    		INTEGER
        }

    wfSwservTODDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Delete time of day instance from the list for this circuit"
        DEFVAL	{ create }
        ::= { wfSwservTODEntry 1 }

    wfSwservTODCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "CCT number for time of day instance"
        ::= { wfSwservTODEntry 2 }

    wfSwservTODIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..24)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "a unique number to specify instance"
        ::= { wfSwservTODEntry 3 }

    wfSwservTODType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    sun(1),
    		    mon(2),
    		    tues(3),
    		    wed(4),
    		    thurs(5),
    		    fri(6),
    		    sat(7),
    		    weekday(8),
    		    weekend(9)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Type of TOD Configuration"
        DEFVAL	{ weekday }
        ::= { wfSwservTODEntry 4 }

    wfSwservTODStartTime OBJECT-TYPE
        SYNTAX	INTEGER(0..2400)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Start Time of day allow a line to dial ( HHMM format )"
        DEFVAL	{ 0001 }
        ::= { wfSwservTODEntry 5 }

    wfSwservTODEndTime OBJECT-TYPE
        SYNTAX	INTEGER(0001..2400)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "End Time of day connection can be active for
                specified circuit ( HHMM format )"
        DEFVAL	{ 2400 }
        ::= { wfSwservTODEntry 6 }

    wfSwservTODInactivityEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Inactivity Timer if disabled the inactivity timer is ignored during this
                time period, if enabled the connection is brought down due to
                inactivity"
        DEFVAL	{ disabled }
        ::= { wfSwservTODEntry 7 }

    wfDemandCctGrpTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDemandCctGrpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The table of demand circuits groups defined  over  switched services"
        ::= { wfCircuitOptsGroup 12 }

    wfDemandCctGrpEntry OBJECT-TYPE
        SYNTAX	WfDemandCctGrpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry  format for the table  of demand circuit group options"
        INDEX	{ wfDmdCctGroupNum,
    		  wfDmdCctGroupPoolId }
        ::= { wfDemandCctGrpTable 1 }

    WfDemandCctGrpEntry ::= SEQUENCE {
    	    wfDmdCctGroupDelete
    		INTEGER,
    	    wfDmdCctGroupNum
    		INTEGER,
    	    wfDmdCctGroupPoolId
    		INTEGER,
    	    wfDmdCctGroupNumofCcts
    		INTEGER,
    	    wfDmdCctGroupIPEnable
    		INTEGER,
    	    wfDmdCctGroupIPUnnumAssoc
    		IpAddress,
    	    wfDmdCctGroupRIPEnable
    		INTEGER,
    	    wfDmdCctGroupOSPFEnable
    		INTEGER,
    	    wfDmdCctGroupIPXEnable
    		INTEGER,
    	    wfDmdCctGroupBridgeEnable
    		INTEGER,
    	    wfDmdCctGroupCctList
    		OCTET STRING,
	    wfDmdCctGroupIPXRouting
		INTEGER,
	    wfDmdCctGroupIPXWANEnable
		INTEGER
        }

    wfDmdCctGroupDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Creation and deletion flag"
        DEFVAL	{ created }
        ::= { wfDemandCctGrpEntry 1 }

    wfDmdCctGroupNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit Number"
        ::= { wfDemandCctGrpEntry 2 }

    wfDmdCctGroupPoolId OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Demand pool id used by this demand circuit group"
        ::= { wfDemandCctGrpEntry 3 }

    wfDmdCctGroupNumofCcts OBJECT-TYPE
        SYNTAX	INTEGER(1..124)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Demand pool id used by this demand circuit group"
        DEFVAL	{ 1 }
        ::= { wfDemandCctGrpEntry 4 }

    wfDmdCctGroupIPEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "IP unnumbered enabled or disabled for specified demand circuit group"
        DEFVAL	{ disabled }
        ::= { wfDemandCctGrpEntry 5 }

    wfDmdCctGroupIPUnnumAssoc OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The associated IP address used by unnumbered demand circuit group
                every demand circuit in this demand circuit group uses the same
                associated IP address."
        ::= { wfDemandCctGrpEntry 6 }

    wfDmdCctGroupRIPEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "RIP enabled or disabled for specified demand circuit group"
        DEFVAL	{ disabled }
        ::= { wfDemandCctGrpEntry 7 }

    wfDmdCctGroupOSPFEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "OSPF enabled or disabled for specified demand circuit group"
        DEFVAL	{ disabled }
        ::= { wfDemandCctGrpEntry 8 }

    wfDmdCctGroupIPXEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "IPX unnumbered enabled or disabled for specified demand circuit group"
        DEFVAL	{ disabled }
        ::= { wfDemandCctGrpEntry 9 }

    wfDmdCctGroupBridgeEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bridge enabled or disabled for specified demand circuit group"
        DEFVAL	{ disabled }
        ::= { wfDemandCctGrpEntry 10 }

    wfDmdCctGroupCctList OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "List of demand circuits that are members of this group"
        ::= { wfDemandCctGrpEntry 11 }

    wfDmdCctGroupIPXRouting OBJECT-TYPE
        SYNTAX	INTEGER {
        	    rip(1),
        	    nlsp(2),
    		    ripnlsp(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "IPX routing protocol used for specified demand circuit group"
        DEFVAL	{ rip }
        ::= { wfDemandCctGrpEntry 12 }

    wfDmdCctGroupIPXWANEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "IPXWAN enabled or disabled for specified demand circuit group"
        DEFVAL	{ disabled }
        ::= { wfDemandCctGrpEntry 13 }

    END  -- Wellfleet-CCTOPTS-MIB
-- @(#)WSCCS v/mibs-console.mib 1.1 8/30/95
Wellfleet-CONSOLE-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:39:11 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfSerialPortGroup, wfServices
        FROM Wellfleet-COMMON-MIB;


    wfConsole	OBJECT IDENTIFIER ::= { wfServices 1 }

    wfBaudRate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Baud rate configured on the Technician Interface console"
        DEFVAL	{ 9600 }
        ::= { wfConsole 1 }

    wfDataBits OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Number of data bits configured on the Technician Interface console"
        DEFVAL	{ 8 }
        ::= { wfConsole 2 }

    wfParity OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    odd(2),
    		    even(3)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Type of parity configured on the Technician Interface console"
        DEFVAL	{ none }
        ::= { wfConsole 3 }

    wfStopBits OBJECT-TYPE
        SYNTAX	INTEGER {
    		    s1bit(1),
    		    s15bit(2),
    		    s2bit(3)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Number of stop bits configured on the Technician Interface console"
        DEFVAL	{ s1bit }
        ::= { wfConsole 4 }

    wfModemEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Enable the Technician Interface console to run over a modem"
        DEFVAL	{ disabled }
        ::= { wfConsole 5 }

    wfLinesPerScreen OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Number of lines which can be displayed in one screen on the Technician
                Interface console"
        DEFVAL	{ 24 }
        ::= { wfConsole 6 }

    wfMoreEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Enable the 'more' feature on the Technician Interface console"
        DEFVAL	{ enabled }
        ::= { wfConsole 7 }

    wfPrompt OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Character string which will be used as the system prompt on
                the Technician Interface console"
        ::= { wfConsole 8 }

    wfLoginTimeOut OBJECT-TYPE
        SYNTAX	INTEGER(1..99)
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "IF MODEM_ENABLED then time out in minutes to HUP when at the login prompt"
        DEFVAL	{ 1 }
        ::= { wfConsole 9 }

    wfPasswordTimeOut OBJECT-TYPE
        SYNTAX	INTEGER(1..99)
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Timout on Password entry"
        DEFVAL	{ 1 }
        ::= { wfConsole 10 }

    wfCommandTimeOut OBJECT-TYPE
        SYNTAX	INTEGER(1..99)
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "IF MODEM_ENABLED then time out in minutes to HUP when at the command prompt"
        DEFVAL	{ 15 }
        ::= { wfConsole 11 }

    wfLoginRetries OBJECT-TYPE
        SYNTAX	INTEGER(1..99)
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "IF MODEM_ENABLED then limit # of login attempts then HUP"
        DEFVAL	{ 3 }
        ::= { wfConsole 12 }

    wfTotalLogins OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Total number of TI login attempts"
        ::= { wfConsole 13 }

    wfUserLoginErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Total number of FAILED User login attempts"
        ::= { wfConsole 14 }

    wfManagerLoginErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Total number of FAILED Manager login attempts"
        ::= { wfConsole 15 }

    wfOtherLoginErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Total number of FAILED Other login attempts"
        ::= { wfConsole 16 }

    wfTtyFrameErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Count of TTY Frame errors"
        ::= { wfConsole 17 }

    wfTtyOverrunErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Count of TTY Overrun errors"
        ::= { wfConsole 18 }

    wfTtyParityErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Count of TTY Parity errors"
        ::= { wfConsole 19 }

    wfTtyInfifoErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Count of TTY Input Fifo errors"
        ::= { wfConsole 20 }

    wfSerialPortTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSerialPortEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Configuration of system serial port(s)"
        ::= { wfSerialPortGroup 1 }

    wfSerialPortEntry OBJECT-TYPE
        SYNTAX	WfSerialPortEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Information for each serial port."
        INDEX	{ wfSerialPortNumber }
        ::= { wfSerialPortTable 1 }

    WfSerialPortEntry ::= SEQUENCE {
    	    wfSerialPortDelete
    		INTEGER,
    	    wfSerialPortDisable
    		INTEGER,
    	    wfSerialPortState
    		INTEGER,
    	    wfSerialPortNumber
    		INTEGER,
    	    wfSerialPortName
    		DisplayString,
    	    wfSerialPortSlot
    		INTEGER,
    	    wfSerialPortType
    		INTEGER,
    	    wfSerialPortBaudRate
    		INTEGER,
    	    wfSerialPortDataBits
    		INTEGER,
    	    wfSerialPortParity
    		INTEGER,
    	    wfSerialPortStopBits
    		INTEGER,
    	    wfSerialPortModemEnable
    		INTEGER,
    	    wfSerialPortLinesPerScreen
    		INTEGER,
    	    wfSerialPortMoreEnable
    		INTEGER,
    	    wfSerialPortPrompt
    		DisplayString,
    	    wfSerialPortLoginTimeOut
    		INTEGER,
    	    wfSerialPortPasswordTimeOut
    		INTEGER,
    	    wfSerialPortCommandTimeOut
    		INTEGER,
    	    wfSerialPortLoginRetries
    		INTEGER,
    	    wfSerialPortTotalLogins
    		Counter,
    	    wfSerialPortUserLoginErrors
    		Counter,
    	    wfSerialPortManagerLoginErrors
    		Counter,
    	    wfSerialPortOtherLoginErrors
    		Counter,
    	    wfSerialPortTtyFrameErrors
    		Counter,
    	    wfSerialPortTtyOverrunErrors
    		Counter,
    	    wfSerialPortTtyParityErrors
    		Counter,
    	    wfSerialPortTtyInfifoErrors
    		Counter,
    	    wfSerialPortInitialSearchPath
    		DisplayString,
    	    wfSerialPortManagerAutoScript
    		DisplayString,
    	    wfSerialPortUserAutoScript
    		DisplayString,
    	    wfSerialPortUserAbortLogoutDisable
    		INTEGER,
    	    wfSerialPortHistoryDepth
    		INTEGER
        }

    wfSerialPortDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Flag to indicate Serial Port instance deletion"
        DEFVAL	{ created }
        ::= { wfSerialPortEntry 1 }

    wfSerialPortDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable or disable this Serial Port"
        DEFVAL	{ enabled }
        ::= { wfSerialPortEntry 2 }

    wfSerialPortState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The state of this Serial Port"
        DEFVAL	{ notpresent }
        ::= { wfSerialPortEntry 3 }

    wfSerialPortNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Serial Port number"
        ::= { wfSerialPortEntry 4 }

    wfSerialPortName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Serial Port name"
        ::= { wfSerialPortEntry 5 }

    wfSerialPortSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number of Serial Port session"
        DEFVAL	{ 0 }
        ::= { wfSerialPortEntry 6 }

    wfSerialPortType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ti(1),
    		    printer(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Type of Serial Port"
        DEFVAL	{ ti }
        ::= { wfSerialPortEntry 7 }

    wfSerialPortBaudRate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Baud rate configured on this Serial Port"
        DEFVAL	{ 9600 }
        ::= { wfSerialPortEntry 8 }

    wfSerialPortDataBits OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of data bits configured on this Serial Port"
        DEFVAL	{ 8 }
        ::= { wfSerialPortEntry 9 }

    wfSerialPortParity OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    odd(2),
    		    even(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Type of parity configured on this Serial Port"
        DEFVAL	{ none }
        ::= { wfSerialPortEntry 10 }

    wfSerialPortStopBits OBJECT-TYPE
        SYNTAX	INTEGER {
    		    s1bit(1),
    		    s15bit(2),
    		    s2bit(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of stop bits configured on this Serial Port"
        DEFVAL	{ s1bit }
        ::= { wfSerialPortEntry 11 }

    wfSerialPortModemEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable the Serial Port to run with modem leads enabled"
        DEFVAL	{ disabled }
        ::= { wfSerialPortEntry 12 }

    wfSerialPortLinesPerScreen OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of lines which can be displayed in one screen on the
                Serial Port"
        DEFVAL	{ 24 }
        ::= { wfSerialPortEntry 13 }

    wfSerialPortMoreEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable the 'more' feature on the Serial Port"
        DEFVAL	{ enabled }
        ::= { wfSerialPortEntry 14 }

    wfSerialPortPrompt OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Character string which will be used as the system prompt on
                the Serial Port"
        ::= { wfSerialPortEntry 15 }

    wfSerialPortLoginTimeOut OBJECT-TYPE
        SYNTAX	INTEGER(1..99)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "IF MODEM_ENABLED then time out in minutes to HUP when at the
                login prompt"
        DEFVAL	{ 1 }
        ::= { wfSerialPortEntry 16 }

    wfSerialPortPasswordTimeOut OBJECT-TYPE
        SYNTAX	INTEGER(1..99)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Timout on Password entry"
        DEFVAL	{ 1 }
        ::= { wfSerialPortEntry 17 }

    wfSerialPortCommandTimeOut OBJECT-TYPE
        SYNTAX	INTEGER(1..99)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "IF MODEM_ENABLED then time out in minutes to HUP when at the
                command prompt"
        DEFVAL	{ 15 }
        ::= { wfSerialPortEntry 18 }

    wfSerialPortLoginRetries OBJECT-TYPE
        SYNTAX	INTEGER(1..99)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "IF MODEM_ENABLED then limit # of login attempts then HUP"
        DEFVAL	{ 3 }
        ::= { wfSerialPortEntry 19 }

    wfSerialPortTotalLogins OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of TI login attempts on Serial Port"
        ::= { wfSerialPortEntry 20 }

    wfSerialPortUserLoginErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of FAILED User login attempts on Serial Port"
        ::= { wfSerialPortEntry 21 }

    wfSerialPortManagerLoginErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of FAILED Manager login attempts on Serial Port"
        ::= { wfSerialPortEntry 22 }

    wfSerialPortOtherLoginErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of FAILED Other login attempts on Serial Port"
        ::= { wfSerialPortEntry 23 }

    wfSerialPortTtyFrameErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of TTY Frame errors on Serial Port"
        ::= { wfSerialPortEntry 24 }

    wfSerialPortTtyOverrunErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of TTY Overrun errors on Serial Port"
        ::= { wfSerialPortEntry 25 }

    wfSerialPortTtyParityErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of TTY Parity errors on Serial Port"
        ::= { wfSerialPortEntry 26 }

    wfSerialPortTtyInfifoErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of TTY Input Fifo errors on Serial Port"
        ::= { wfSerialPortEntry 27 }

    wfSerialPortInitialSearchPath OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Example:  'A:;1:;2:' or '2:;4:6:;9:"
        ::= { wfSerialPortEntry 28 }

    wfSerialPortManagerAutoScript OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "for each login."
        ::= { wfSerialPortEntry 29 }

    wfSerialPortUserAutoScript OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "for each login."
        ::= { wfSerialPortEntry 30 }

    wfSerialPortUserAbortLogoutDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "a USER from escaping out of the User Autoscript"
        DEFVAL	{ disabled }
        ::= { wfSerialPortEntry 31 }

    wfSerialPortHistoryDepth OBJECT-TYPE
        SYNTAX	INTEGER(1..40)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "TI command history table size"
        DEFVAL	{ 20 }
        ::= { wfSerialPortEntry 32 }

    END  -- Wellfleet-CONSOLE-MIB
-- @(#)WSCCS p/mibs-csmacd.mib 1.1 8/30/95
Wellfleet-CSMACD-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:39:16 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfLine, wfCSMACDAutoNegGroup
        FROM Wellfleet-COMMON-MIB;


    wfCSMACDTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfCSMACDEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "CSMA/CD line record"
        ::= { wfLine 1 }

    wfCSMACDEntry OBJECT-TYPE
        SYNTAX	WfCSMACDEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the csmacd table"
        INDEX	{ wfCSMACDSlot,
    		  wfCSMACDConnector }
        ::= { wfCSMACDTable 1 }

    WfCSMACDEntry ::= SEQUENCE {
    	    wfCSMACDDelete
    		INTEGER,
    	    wfCSMACDEnable
    		INTEGER,
    	    wfCSMACDState
    		INTEGER,
    	    wfCSMACDSlot
    		INTEGER,
    	    wfCSMACDConnector
    		INTEGER,
    	    wfCSMACDCct
    		INTEGER,
    	    wfCSMACDBofl
    		INTEGER,
    	    wfCSMACDBoflTmo
    		INTEGER,
    	    wfCSMACDMtu
    		INTEGER,
    	    wfCSMACDMadr
    		OCTET STRING,
    	    wfCSMACDOctetsRxOk
    		Counter,
    	    wfCSMACDFramesRxOk
    		Counter,
    	    wfCSMACDOctetsTxOk
    		Counter,
    	    wfCSMACDFramesTxOk
    		Counter,
    	    wfCSMACDDeferredTx
    		Counter,
    	    wfCSMACDLateCollnTx
    		Counter,
    	    wfCSMACDExcessvCollnTx
    		Counter,
    	    wfCSMACDBablErrorTx
    		Counter,
    	    wfCSMACDBufErrorTx
    		Counter,
    	    wfCSMACDLcarTx
    		Counter,
    	    wfCSMACDUfloTx
    		Counter,
    	    wfCSMACDFcsErrorRx
    		Counter,
    	    wfCSMACDAlignErrorRx
    		Counter,
    	    wfCSMACDLackRescErrorRx
    		Counter,
    	    wfCSMACDTooLongErrorRx
    		Counter,
    	    wfCSMACDOfloRx
    		Counter,
    	    wfCSMACDMerr
    		Counter,
    	    wfCSMACDCerr
    		Counter,
    	    wfCSMACDHardwareFilter
    		INTEGER,
    	    wfCSMACDTxQueueLength
    		INTEGER,
    	    wfCSMACDRxQueueLength
    		INTEGER,
    	    wfCSMACDTxClipFrames
    		Counter,
    	    wfCSMACDRxReplenMisses
    		Counter,
    	    wfCSMACDCfgTxQueueLength
    		INTEGER,
    	    wfCSMACDCfgRxQueueLength
    		INTEGER,
    	    wfCSMACDAlignmentMode
    		INTEGER,
    	    wfCSMACDUnAlignedFrames
    		Counter,
    	    wfCSMACDLineNumber
    		INTEGER,
    	    wfCSMACDLateCollnRx
    		Counter,
    	    wfCSMACDModule
    		INTEGER,
    	    wfCSMACDActualConnector
    		INTEGER,
    	    wfCSMACDLastChange
    		TimeTicks,
    	    wfCSMACDOutQLen
    		Gauge,
    	    wfCSMACDIntProcessings
    		Counter,
    	    wfCSMACDTxProcessings
    		Counter,
    	    wfCSMACDRxProcessings
    		Counter,
    	    wfCSMACDTxCmplProcessings
    		Counter,
    	    wfCSMACDTxQueueReductions
    		Counter,
    	    wfCSMACDSingleCollisionFrames
    		Counter,
    	    wfCSMACDMultipleCollisionFrames
    		Counter,
    	    wfCSMACDInternalMacTxErrors
    		Counter,
    	    wfCSMACDLineCapability
    		INTEGER,
    	    wfCSMACDEtherChipSet
    		OBJECT IDENTIFIER,
    	    wfCSMACDRxSymbolErrors
    		Counter,
    	    wfCSMACDInternalMacRxErrors
    		Counter,
    	    wfCSMACDConfigurableSpeed
    		INTEGER,
    	    wfCSMACDRxFlushes
    		Counter,
    	    wfCSMACDTxDeadlocks
    		Counter
        }

    wfCSMACDDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "create/delete parameter, dflt = created"
        DEFVAL	{ create }
        ::= { wfCSMACDEntry 1 }

    wfCSMACDEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable parameter, dflt = enabled"
        DEFVAL	{ enable }
        ::= { wfCSMACDEntry 2 }

    wfCSMACDState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "line driver state variable, Not Present, Init, Down, Up"
        DEFVAL	{ notpresent }
        ::= { wfCSMACDEntry 3 }

    wfCSMACDSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "instance ID Slot, filled in by driver"
        ::= { wfCSMACDEntry 4 }

    wfCSMACDConnector OBJECT-TYPE
        SYNTAX	INTEGER(1..44)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "instance ID Connector, filled in by driver. For the ASN
                this attribute is an encoded value and is equal to
                'module'*10 + 'connector'. Where 'module' is defined in
                attribute 42 and 'connector' is defined in attribute 43
                of this table. For non-ASN platforms this attribute is
                the physical connector number on the slot."
        ::= { wfCSMACDEntry 5 }

    wfCSMACDCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "cct number for this line instance"
        ::= { wfCSMACDEntry 6 }

    wfCSMACDBofl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "bofl parameter, dflt = enabled"
        DEFVAL	{ enable }
        ::= { wfCSMACDEntry 7 }

    wfCSMACDBoflTmo OBJECT-TYPE
        SYNTAX	INTEGER(1..60)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "bofl parameter, dflt = 5"
        DEFVAL	{ 5 }
        ::= { wfCSMACDEntry 8 }

    wfCSMACDMtu OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(1518)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "mtu parameter, fixed"
        DEFVAL	{ default }
        ::= { wfCSMACDEntry 9 }

    wfCSMACDMadr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "line MAC address, fixed - line driver fills in"
        ::= { wfCSMACDEntry 10 }

    wfCSMACDOctetsRxOk OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets received without error"
        ::= { wfCSMACDEntry 11 }

    wfCSMACDFramesRxOk OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received without error"
        ::= { wfCSMACDEntry 12 }

    wfCSMACDOctetsTxOk OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets transmitted without error"
        ::= { wfCSMACDEntry 13 }

    wfCSMACDFramesTxOk OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames transmitted without error"
        ::= { wfCSMACDEntry 14 }

    wfCSMACDDeferredTx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of deferred transmissions"
        ::= { wfCSMACDEntry 15 }

    wfCSMACDLateCollnTx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of late collisions"
        ::= { wfCSMACDEntry 16 }

    wfCSMACDExcessvCollnTx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of excessive collisions"
        ::= { wfCSMACDEntry 17 }

    wfCSMACDBablErrorTx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames transmitted larger than 1518 octets"
        ::= { wfCSMACDEntry 18 }

    wfCSMACDBufErrorTx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of internal buffer errors"
        ::= { wfCSMACDEntry 19 }

    wfCSMACDLcarTx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of loss of carrier errors"
        ::= { wfCSMACDEntry 20 }

    wfCSMACDUfloTx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmitter underflow errors"
        ::= { wfCSMACDEntry 21 }

    wfCSMACDFcsErrorRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of receiver checksum errors"
        ::= { wfCSMACDEntry 22 }

    wfCSMACDAlignErrorRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of receiver alignment errors"
        ::= { wfCSMACDEntry 23 }

    wfCSMACDLackRescErrorRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of receiver lack of resource errors"
        ::= { wfCSMACDEntry 24 }

    wfCSMACDTooLongErrorRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received exceeding 1518 octets"
        ::= { wfCSMACDEntry 25 }

    wfCSMACDOfloRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of receiver overflow errors"
        ::= { wfCSMACDEntry 26 }

    wfCSMACDMerr OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of internal memory errors"
        ::= { wfCSMACDEntry 27 }

    wfCSMACDCerr OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of collision errors"
        ::= { wfCSMACDEntry 28 }

    wfCSMACDHardwareFilter OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Hardware filtering parameter."
        DEFVAL	{ disable }
        ::= { wfCSMACDEntry 29 }

    wfCSMACDTxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current Transmit Queue Length"
        ::= { wfCSMACDEntry 30 }

    wfCSMACDRxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current Receive Queue Length"
        ::= { wfCSMACDEntry 31 }

    wfCSMACDTxClipFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames clipped in driver's transmit routine due to transmit
                congestion."
        ::= { wfCSMACDEntry 32 }

    wfCSMACDRxReplenMisses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packet buffer misses while attempting to replenish driver
                receive ring."
        ::= { wfCSMACDEntry 33 }

    wfCSMACDCfgTxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured Transmit Queue Length. Values other than zero over-ride
                the router selected values. A value of zero has a special meaning.
                Zero causes router based default values to be used. Values larger
                than the compiled ring size are truncated to the compiled ring
                size."
        ::= { wfCSMACDEntry 34 }

    wfCSMACDCfgRxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured Receive Queue Length. Values other than zero over-ride
                the router selected values. A value of zero has a special meaning.
                Zero causes router based default values to be used. Values larger
                than the compiled ring size are truncated to the compiled ring
                size."
        ::= { wfCSMACDEntry 35 }

    wfCSMACDAlignmentMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    all(1),
    		    bytes(2),
    		    disabled(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables special frame re-alignment in the Line Driver. Only needed when
                4 ethernet interfaces are configured on a single slot.  Only needed if
                experiencing transmit underflow errors (wfCSMACDUfloTx).  When this
                attribute is set to DISABLED,  non-optimally aligned frames are transmitted
                as is.  When this attribute is set to ALL (1),  all non-optimally aligned
                frames are re-aligned before transmission.  When this attribute is set to
                ALIGN_OVER_128_BYTES (2), all non-optimally aligned frames over 128 bytes
                in length are re-aligned before transmission and frames up to and including
                128 bytes in length are transmitted as is."
        DEFVAL	{ disabled }
        ::= { wfCSMACDEntry 36 }

    wfCSMACDUnAlignedFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of non-optimally aligned frames queued to the driver for transmit.
                This statistic does not indicate that any frames have been dropped. If
                the ethernet I/O board is not a Quad Ethernet Link Module (QENET) or if it
                is a QENET and none of the four ethernet interfaces are experiencing
                transmit underflow errors (wfCSMACDUfloTx),  then this statistic should be
                ignored.

                If, however, this interface or other interfaces on the QENET are
                experiencing transmit underflow errors,  the underflows are preventable
                by setting the wfCSMACDAlignmentMode attribute to 1.  See explanation of
                that attribute for more information.

                This attribute means that these frames are candidates for re-alignment.
                It does not, by itself, indicate that re-alignment is necessary."
        ::= { wfCSMACDEntry 37 }

    wfCSMACDLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Logical line number associated with this driver entity."
        ::= { wfCSMACDEntry 38 }

    wfCSMACDLateCollnRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of late collisions - found in QUICC Ethernet Rx Buffer Descriptors"
        ::= { wfCSMACDEntry 39 }

    wfCSMACDModule OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Module number for ASN platform, filled in by driver. For non-ASN
                platforms this attribute will not be used."
        ::= { wfCSMACDEntry 40 }

    wfCSMACDActualConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Actual connector number for ASN platform, filled in by
                driver. For non-ASN platforms this attribute will not be used."
        ::= { wfCSMACDEntry 41 }

    wfCSMACDLastChange OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of SysUpTime at the time the interface entered it's current
                operational state (UP state).  SysUpTime is defined as the time (in
                hundredths of a second) since the network management portion of the
                system was last re-initialized.  Usually the time since boot."
        ::= { wfCSMACDEntry 42 }

    wfCSMACDOutQLen OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The instantaneous current length of the output packet queue (in packets)."
        ::= { wfCSMACDEntry 43 }

    wfCSMACDIntProcessings OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "counts the number of times the interrupt service routine
                has been called"
        ::= { wfCSMACDEntry 44 }

    wfCSMACDTxProcessings OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts the number of times the transmit routine
                has been called"
        ::= { wfCSMACDEntry 45 }

    wfCSMACDRxProcessings OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts the number of times RINT processing takes place
                in the interrupt service routine."
        ::= { wfCSMACDEntry 46 }

    wfCSMACDTxCmplProcessings OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts the number of times the transmit complete
                processing takes place"
        ::= { wfCSMACDEntry 47 }

    wfCSMACDTxQueueReductions OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts the number of times the transmit queue
                has been shrinked in size due to the numbe of
                tx clips exceeding the treshold"
        ::= { wfCSMACDEntry 48 }

    wfCSMACDSingleCollisionFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A count of successfully transmitted frames on a particular interface
                for which transmission is inhibited by exactly one collision."
        ::= { wfCSMACDEntry 49 }

    wfCSMACDMultipleCollisionFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A count of successfully transmitted frames on a particular interface
                for which transmission is inhibited by more than one collision."
        ::= { wfCSMACDEntry 50 }

    wfCSMACDInternalMacTxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A count of frames for which transmission on a particular interface fails
                due to an internal MAC sublayer transmit error.  A frame is only counted
                by an instance of this object if it is not counted by the corresponding
                instance of either the LateCollisions object, the ExcessiveCollisions
                object, or the CarrierSenseErrors object."
        ::= { wfCSMACDEntry 51 }

    wfCSMACDLineCapability OBJECT-TYPE
        SYNTAX	INTEGER {
    		    tenbaset(1),
    		    tenbasetduplex(2),
    		    hundredbasetx(3),
    		    hundredbasetxduplex(4),
    		    hundredbaset4(5),
    		    tenbasetduplexcongctrl(6),
    		    hundredbasetxduplexcongctrl(7)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "If NWay is configured, this attribute contains a value that uniquely
                identifies the single capability that was agreed upon by the local and
                remote interfaces.  If NWay is not configured, this attribute describes
                the speed and duplex setting that was configured for this interface."
        DEFVAL	{ tenbaset }
        ::= { wfCSMACDEntry 52 }

    wfCSMACDEtherChipSet OBJECT-TYPE
        SYNTAX	OBJECT IDENTIFIER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object contains an OBJECT IDENTIFIER which identifies the chipset used
                to realize the interface.  This object usually identifies the Medium Access
                Control (MAC) chip."
        ::= { wfCSMACDEntry 53 }

    wfCSMACDRxSymbolErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A count of frames received on a particular interface with one or more
                100Mb symbol errors detected."
        ::= { wfCSMACDEntry 54 }

    wfCSMACDInternalMacRxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A count of frames for which reception on a particular interface fails
                due to an internal MAC sublayer receive error.  A frame is only counted
                by an instance of this object if it is not counted by the corresponding
                instance of either the FrameTooLongs object, the AlignmentErrors object,
                or the FCSErrors object."
        ::= { wfCSMACDEntry 55 }

    wfCSMACDConfigurableSpeed OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This attribute will be enabled(1) if the interface supports different
                speed configurations.  If configurable speeds are not supported on the
                interface, this attribute will be disabled(2).  Creation of
                wfCSMACDAutoNegEntry records is valid only if this attribute is enabled."
        DEFVAL	{ disabled }
        ::= { wfCSMACDEntry 56 }

    wfCSMACDRxFlushes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This attribute describes the number of times the hardware
                has entered a state which required a flush of the RX FIFO."
        ::= { wfCSMACDEntry 57 }

    wfCSMACDTxDeadlocks OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This attribute describes the number of times the hardware
                has entered a Tx Deadlock condition, and the software
                intervenes to free up the lock."
        ::= { wfCSMACDEntry 58 }

    wfCSMACDAutoNegTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfCSMACDAutoNegEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "CSMA/CD Auto Negotiation (NWay) record"
        ::= { wfCSMACDAutoNegGroup 1 }

    wfCSMACDAutoNegEntry OBJECT-TYPE
        SYNTAX	WfCSMACDAutoNegEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the csmacd table"
        INDEX	{ wfCSMACDAutoNegSlot,
    		  wfCSMACDAutoNegConnector }
        ::= { wfCSMACDAutoNegTable 1 }

    WfCSMACDAutoNegEntry ::= SEQUENCE {
    	    wfCSMACDAutoNegDelete
    		INTEGER,
    	    wfCSMACDAutoNegSlot
    		INTEGER,
    	    wfCSMACDAutoNegConnector
    		INTEGER,
    	    wfCSMACDAutoNegSpeedSelect
    		INTEGER,
    	    wfCSMACDAutoNegRemoteSignaling
    		INTEGER,
    	    wfCSMACDAutoNegState
    		INTEGER,
    	    wfCSMACDAutoNegRestartAutoConfig
    		INTEGER,
    	    wfCSMACDAutoNegLocalCapability
    		Gauge,
    	    wfCSMACDAutoNegAdvertisedCapability
    		Gauge,
    	    wfCSMACDAutoNegReceivedCapability
    		Gauge
        }

    wfCSMACDAutoNegDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "create/delete parameter, dflt = created"
        DEFVAL	{ create }
        ::= { wfCSMACDAutoNegEntry 1 }

    wfCSMACDAutoNegSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "instance ID Slot, filled in by driver"
        ::= { wfCSMACDAutoNegEntry 2 }

    wfCSMACDAutoNegConnector OBJECT-TYPE
        SYNTAX	INTEGER(1..44)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "instance ID Connector, filled in by driver. For the ASN
                this attribute is an encoded value and is equal to
                'module'*10 + 'connector'. Where 'module' is defined in
                attribute 42 and 'connector' is defined in attribute 43
                of this table. For non-ASN platforms this attribute is
                the physical connector number on the slot."
        ::= { wfCSMACDAutoNegEntry 3 }

    wfCSMACDAutoNegSpeedSelect OBJECT-TYPE
        SYNTAX	INTEGER {
    		    nway(1),
    		    tenbaset(2),
    		    tenbasetduplex(3),
    		    hundredbasetx(4),
    		    hundredbasetxduplex(5),
    		    hundredbaset4(6),
    		    macloopback(7),
    		    phyloopback(8),
    		    twisterloopback(9),
    		    tenbasetduplexcongctrl(10),
    		    hundredbasetxduplexcongctrl(11)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value indicates the configured speed of the local interface.
                This parameter allows configuration of a specific speed and duplex
                setting, or allows configuration/enabling of Auto Negotiation/NWay.
                Selecting a specific speed (i.e. a value other than 1) implicitly
                disables Auto Negotiation/NWay."
        DEFVAL	{ hundredbasetx }
        ::= { wfCSMACDAutoNegEntry 4 }

    wfCSMACDAutoNegRemoteSignaling OBJECT-TYPE
        SYNTAX	INTEGER {
    		    detected(1),
    		    notdetected(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This value indicates whether the remote end of the link is operating
                Auto Negotiation signaling or not.  It shall take the value detected if,
                during the previous link negotiation, FLP bursts were received from the
                remote end.
                NOTE: This parameter is only valid if SpeedSelect is configured for NWay."
        DEFVAL	{ notdetected }
        ::= { wfCSMACDAutoNegEntry 5 }

    wfCSMACDAutoNegState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    disabled(1),
    		    configuring(2),
    		    complete(3),
    		    paralleldetectfail(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This value indicates whether Auto Negotiation signaling is in progress
                or has completed.
                NOTE: This parameter is only valid if SpeedSelect is configured for NWay."
        DEFVAL	{ disabled }
        ::= { wfCSMACDAutoNegEntry 6 }

    wfCSMACDAutoNegRestartAutoConfig OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Writing any value to this attribute forces Auto Negotiation to begin link
                re-negotiation. This action has no effect if Auto Negotiation signaling
                is disabled.
                NOTE: This parameter is only valid if SpeedSelect is configured for NWay."
        ::= { wfCSMACDAutoNegEntry 7 }

    wfCSMACDAutoNegLocalCapability OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is a GAUGE because this attribute is 32-bit unsigned, non-increasing
                A value that uniquely identifies the set of capabilities of the LOCAL Auto
                Negotiation entity. The value is a sum which initially takes the value zero.
                Then, for each capability of the LOCAL interface, 2 raised to the power
                noted below is added to the sum. For example, a LOCAL interface which has
                the capability to support only 100Base-TX would have a value of 128 (2**7).
                In contrast, a LOCAL interface which supports both 100Base-TX and 100Base-TX
                Full Duplex would cause this object to have a value of 384 ((2**7) + (2**8)).

                The powers of 2 assigned to the capabilities are these:

                         Power   Capability
                          5       10Base-T
                          6       10Base-T  Full Duplex
                          7      100Base-TX
                          8      100Base-TX Full Duplex
                          9      100Base-T4

                NOTE: This parameter is only valid if SpeedSelect is configured for NWay."
        ::= { wfCSMACDAutoNegEntry 8 }

    wfCSMACDAutoNegAdvertisedCapability OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is a GAUGE because this attribute is 32-bit unsigned, non-increasing
                A successful set operation will result in immediate link re-negotiation if
                AutoNegAdminState is enabled.  A value that uniquely identifies the set of
                capabilities advertised by the local Auto Negotiation entity. The value is
                a sum which initially takes the value zero. Then, for each capability of
                the ADVERTISED interface, 2 raised to the power noted below is added to the
                sum. For example, a ADVERTISED interface which has the capability to support
                only 100Base-TX would have a value of 128 (2**7). In contrast, an ADVERTISED
                interface which supports both 100Base-TX and 100Base-TX Full Duplex would
                cause this object to have a value of 384 ((2**7) + (2**8)).

                The powers of 2 assigned to the capabilities are these:

                         Power   Capability
                          5       10Base-T
                          6       10Base-T  Full Duplex
                          7      100Base-TX
                          8      100Base-TX Full Duplex
                          9      100Base-T4

                NOTE: This parameter is only valid if SpeedSelect is configured for NWay."
        ::= { wfCSMACDAutoNegEntry 9 }

    wfCSMACDAutoNegReceivedCapability OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is a GAUGE because this attribute is 32-bit unsigned, non-increasing
                A value that uniquely identifies the set of capabilities of the REMOTE Auto
                Negotiation entity. The value is a sum which initially takes the value zero.
                Then, for each capability of the REMOTE interface, 2 raised to the power
                noted below is added to the sum. For example, a REMOTE interface which has
                the capability to support only 100Base-TX would have a value of 128 (2**7).
                In contrast, a REMOTE interface which supports both 100Base-TX and 100Base-TX
                Full Duplex would cause this object to have a value of 384 ((2**7) + (2**8)).

                The powers of 2 assigned to the capabilities are these:

                         Power   Capability
                          5       10Base-T
                          6       10Base-T  Full Duplex
                          7      100Base-TX
                          8      100Base-TX Full Duplex
                          9      100Base-T4

                NOTE: This parameter is only valid if SpeedSelect is configured for NWay."
        ::= { wfCSMACDAutoNegEntry 10 }

    END  -- Wellfleet-CSMACD-MIB
-- @(#)WSCCS k/mibs-dcmmw.mib 1.1 8/30/95
Wellfleet-DCMMW-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:39:23 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfDCMmwGroup
        FROM Wellfleet-COMMON-MIB;


    wfDCMmw		OBJECT IDENTIFIER ::= { wfDCMmwGroup 1 }

    wfDCMmwDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DCMMW is dynamically loaded. This object specifies that the users can
                perform a set operation on this object in order to create/delete DCMMW
                  Base record. Default is created."
        DEFVAL	{ created }
        ::= { wfDCMmw 1 }

    wfDCMmwDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables or Disables DCMMW Subsystem. By disabling DCMMW, can disable
                the DCM board."
        DEFVAL	{ enabled }
        ::= { wfDCMmw 2 }

    wfDCMmwImageName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A textual string to describe the name of DCM image. The image name
                should be a fully qualified filename. For ex: vol:filename."
        ::= { wfDCMmw 3 }

    wfDCMmwBootOption OBJECT-TYPE
        SYNTAX	INTEGER {
    		    local(1),
    		    download(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies DCM's image load mode to DCMMW. If the option specified is
                local, DCMMW will not load a new image to DCM's shared memory. If the
                option specified is download, then DCMMW will load an image into DCM's
                shared memory. Name of the image is specified using wfDCMMWImageName"
        DEFVAL	{ local }
        ::= { wfDCMmw 4 }

    wfDCMmwImageSaveMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    save(1),
    		    nosave(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies DCM's image save mode."
        DEFVAL	{ save }
        ::= { wfDCMmw 5 }

    wfDCMmwCfgMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    local(1),
    		    shmem(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies whether DCMMW should let DCM use the config info from the
                shared memory or use the config info from DCM's FLASH memory. If the
                mode is local, then DCMMW will write `0' in DCM's config file, which
                indicates the DCM that it should use the config info from its FLASH
                memory. If the mode is shared memory, then DCMMW will write the config
                info in DCM's config file, for DCM to use."
        DEFVAL	{ local }
        ::= { wfDCMmw 6 }

    wfDCMmwWriteConfigInfo OBJECT-TYPE
        SYNTAX	INTEGER {
    		    write(1),
    		    nowrite(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DCMMW uses this object to specify DCM whether it should update the
                config info to its Flash memory or not"
        DEFVAL	{ write }
        ::= { wfDCMmw 7 }

    wfDCMmwRMONMaxHost OBJECT-TYPE
        SYNTAX	INTEGER(100..8128)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the maximum number of hosts each RMON host control entry
                on DCM will store. When the table reaches this value, entries will
                be deleted based on an LRU algorithm. The max limit depends on the
                amount of memory installed in DCM. It is in the range 2048..8128.
                DCMMW uses this object to provide the value to DCM.  Check the MIB
                object wfDCMmwRMONHost to verify the number of hosts that got
                configured in the RMON host control entry."
        DEFVAL	{ 500 }
        ::= { wfDCMmw 8 }

    wfDCMmwRMONDfltHost OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DCMMW uses this to specify DCM that it should create or not create
                the hostControlTable."
        DEFVAL	{ enabled }
        ::= { wfDCMmw 9 }

    wfDCMmwRMONDfltMtrix OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DCMMW uses this to specify DCM that it should create or not create
                the matrixControlTable."
        DEFVAL	{ enabled }
        ::= { wfDCMmw 10 }

    wfDCMmwRMONHost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This specifies the configured number of hosts in each RMON host
                control entry on DCM"
        ::= { wfDCMmw 11 }

    wfDCMRmonAgent OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ready(1),
    		    down(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The state of the RMON agent. A ready state(1) indicates that the
                RMON agent instrumentation is up and ready to process SNMP requests"
        DEFVAL	{ down }
        ::= { wfDCMmw 12 }

    wfDCMMemSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This specifies DCM board's memory size"
        ::= { wfDCMmw 13 }

    wfDCMHwRev OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This specifies DCM board's HW revision number"
        ::= { wfDCMmw 14 }

    wfDCMFwRev OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This specifies DCM board's FW revision number"
        ::= { wfDCMmw 15 }

    wfDCMAgentImageVersion OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This specifies DCM board's Agent Image version number"
        ::= { wfDCMmw 16 }

    END  -- Wellfleet-DCMMW-MIB
-- @(#)WSCCS x/mibs-decnet.mib 1.1 8/30/95
Wellfleet-DECNET-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:39:27 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfDecGroup
        FROM Wellfleet-COMMON-MIB;


    wfivRouteGroup	OBJECT IDENTIFIER ::= { wfDecGroup 1 }

    wfivRouteCreateDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value determines whether DECnet is configured on this slot.'"
        DEFVAL	{ create }
        ::= { wfivRouteGroup 1 }

    wfivRouteEnableDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value determines whether DECnet is to startup.'"
        DEFVAL	{ enable }
        ::= { wfivRouteGroup 2 }

    wfivRouteState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    notpresent(4),
    		    initializing(3),
    		    down(2),
    		    up(1)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This value determines whether DECnet is to startup.'"
        DEFVAL	{ notpresent }
        ::= { wfivRouteGroup 3 }

    wfivRouteBroadcastRouteTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value determines the maximum time allowed between
                Routing updates on Ethernet circuits. When this timer expires
                before a routing update occurs, a routing update is forced.
                With a standard calculation, Routing also uses this timer to
                enforce a minimum delay between routing updates. Seconds is a
                decimal integer in the range 1-65535.'"
        DEFVAL	{ 180 }
        ::= { wfivRouteGroup 4 }

    wfivRouteRoutingVers OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This read-only parameter identifies the executor node's
                Routing version number. The format is the same as for the
                Network Management version number.'"
        ::= { wfivRouteGroup 5 }

    wfivRouteMaxAddr OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value represents the largest node number and,
                therefore, number of nodes that can be known about
                by the executor node's home area. The number is an integer
                in the range 1-1023.'"
        DEFVAL	{ 1023 }
        ::= { wfivRouteGroup 6 }

    wfivRouteMaxBdcastNonRouters OBJECT-TYPE
        SYNTAX	INTEGER(0..1023)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value represents the maximum total number of nonrouters
                the executor node can have on its broadcast circuits for one slot.
                The number is an integer in the range 0-1023.'"
        DEFVAL	{ 64 }
        ::= { wfivRouteGroup 7 }

    wfivRouteMaxBdcastRouters OBJECT-TYPE
        SYNTAX	INTEGER(0..1023)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value represents the maximum total number of routers the
                executor node can have on its broadcast circuits for one slot.
                The number is an integer in the range 0-1023.'"
        DEFVAL	{ 32 }
        ::= { wfivRouteGroup 8 }

    wfivRouteMaxCircuits OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value represents the maximum number of Routing circuits
                that the executor node can know about. The number is decimal
                in the range 1-65535. Wellfleet limits this to 1024'"
        DEFVAL	{ 1024 }
        ::= { wfivRouteGroup 9 }

    wfivRouteMaxCost OBJECT-TYPE
        SYNTAX	INTEGER(1..1022)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value represents the maximum total path cost allowed
                from the executor to any node within an area. The path cost is
                the sum of the circuit costs along a path between two nodes.
                This parameter defines the point where the executor node's
                Routing decision algorithm declares another node
                unreachable because the cost of the least costly path to the
                other node is excessive. For correct operation, this parameter
                must not be less than the maximum path cost of the network.
                The MAXIMUM COST number is decimal in the range
                1-1022.'"
        DEFVAL	{ 1022 }
        ::= { wfivRouteGroup 10 }

    wfivRouteMaxHops OBJECT-TYPE
        SYNTAX	INTEGER(1..30)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value represents the maximum number of routing hops
                allowable from the executor to any other reachable node within
                an area. (A hop is the logical distance over a circuit between
                two adjacent nodes.) This parameter defines the point where
                the executor node's Routing decision algorithm
                declares another node unreachable because the length of the
                shortest path between the two nodes is too long. For correct
                operation, this parameter must not be less than the network
                diameter. (The network diameter is the reachability distance
                between the two nodes of the network having the greatest
                reachability distance, where reachability distance is the
                length the shortest path between a given pair of nodes.) The
                MAXIMUM HOPS number is decimal in the range 1-30.'"
        DEFVAL	{ 30 }
        ::= { wfivRouteGroup 11 }

    wfivRouteMaxVisits OBJECT-TYPE
        SYNTAX	INTEGER(0..63)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value represents the maximum number of nodes a message
                coming into the executor node can have visited. If the message
                is not for this node and the MAXIMUM VISITS number is exceeded,
                the message is discarded. The MAXIMUM VISITS parameter defines
                the point where the packet lifetime control algorithm discards
                a packet that has traversed too many nodes. For correct
                operation, this parameter must not be less than the maximum
                path length of the network. (The maximum path length is the
                routing distance between the two nodes of the network having
                the greatest routing distance, where routing distance is the
                length of the least costly path between a given pair of nodes.)
                The MAXIMUM VISITS number is decimal in the range MAXIMUM HOPS
                to 63.'"
        DEFVAL	{ 63 }
        ::= { wfivRouteGroup 12 }

    wfivRouteAreaMaxCost OBJECT-TYPE
        SYNTAX	INTEGER(0..1022)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value represents the maximum total path cost allowed
                from the executor to any other level 2 routing node. The AREA
                MAXIMUM COST number is decimal in the range
                1-1022. This parameter is only applicable if the executor
                node is of type AREA.'"
        DEFVAL	{ 1022 }
        ::= { wfivRouteGroup 13 }

    wfivRouteAreaMaxHops OBJECT-TYPE
        SYNTAX	INTEGER(0..30)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value represents the maximum number of routing hops
                allowable from the executor to any other level 2 routing node.
                The AREA MAXIMUM HOPS number is decimal in the range
                1-30.This parameter is only applicable if the executor node
                is of type AREA.'"
        DEFVAL	{ 30 }
        ::= { wfivRouteGroup 14 }

    wfivRouteMaxArea OBJECT-TYPE
        SYNTAX	INTEGER(1..63)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value represents the largest area number and, therefore,
                number of areas that can be known about by the executor node's
                Routing. This parameter is only applicable if the executor
                node is of type AREA. The number is an integer in the range
                1-63.'"
        DEFVAL	{ 63 }
        ::= { wfivRouteGroup 15 }

    wfivRouteType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    area(3),
    		    routingiv(4),
    		    nonroutingiv(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This parameter indicates the type of the executor node. The
                node-type is one of the following:

                ROUTING III
                NONROUTING III
                ROUTING IV
                NONROUTING IV
                AREA

                A routing node has full routing capability. A nonrouting node
                contains a subset of the Routing modules. The III and
                IV indicate the DNA phase of the node. Nonrouting nodes can
                deliver and receive packets to and from any node, but cannot
                route packets from other nodes through to other nodes. An
                area node routes between areas. Refer to the Routing
                specification for details.

                For adjacent nodes, this is a read-only parameter that
                indicates the type of the reachable adjacent node.
                NOTE: The ROUTING III and NONROUTING III values are
                incremented by one compared to the standard DECnet values in
                order to maintain compliance with RFC 1155)'"
        DEFVAL	{ area }
        ::= { wfivRouteGroup 16 }

    wfivRouteNumAdjs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This value represents the total number of adjacencies learned by
                the router."
        ::= { wfivRouteGroup 17 }

    wfivRouteNumLvl1Rts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This value represents the total number of Level 1 Routes learned by
                the router."
        ::= { wfivRouteGroup 18 }

    wfivRouteNumAreas OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This value represents the total number of Areas learned by
                the router."
        ::= { wfivRouteGroup 19 }

    wfivRouteLevel1Area OBJECT-TYPE
        SYNTAX	INTEGER(1..63)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DECnet Phase IV area number for all circuits if this is a
                LEVEL 1 ONLY router. Put here for site manager convenience."
        DEFVAL	{ 1 }
        ::= { wfivRouteGroup 20 }

    wfivCircuitTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfivCircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "' Table of DECnet Circuit Configuration and Counter Records'"
        ::= { wfDecGroup 2 }

    wfivCircuitEntry OBJECT-TYPE
        SYNTAX	WfivCircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "'Parameters information about all circuits currently known.
                NOTE: depending on the type of object being querried (e.g., a
                level 1 vs. a level 2 router or end system) some variables may
                not be present.'"
        INDEX	{ wfivCircuitID }
        ::= { wfivCircuitTable 1 }

    WfivCircuitEntry ::= SEQUENCE {
    	    wfivCircuitCreateDelete
    		INTEGER,
    	    wfivCircuitEnableDisable
    		INTEGER,
    	    wfivCircuitCommonState
    		INTEGER,
    	    wfivCircuitArea
    		INTEGER,
    	    wfivCircuitNodeid
    		INTEGER,
    	    wfivCircuitNodeAddr
    		DisplayString,
    	    wfivCircuitID
    		INTEGER,
    	    wfivCircuitCommonType
    		INTEGER,
    	    wfivCircuitExecCost
    		INTEGER,
    	    wfivCircuitExecHelloTimer
    		INTEGER,
    	    wfivCircuitDesigRouterNodeAddr
    		DisplayString,
    	    wfivCircuitMaxRouters
    		INTEGER,
    	    wfivCircuitRouterPri
    		INTEGER,
    	    wfivCircuitCountAgedPktLoss
    		Counter,
    	    wfivCircuitCountNodeUnrPktLoss
    		Counter,
    	    wfivCircuitCountOutRngePktLoss
    		Counter,
    	    wfivCircuitCountOverSzePktLoss
    		Counter,
    	    wfivCircuitCountPacketFmtErr
    		Counter,
    	    wfivCircuitCountPtlRteUpdtLoss
    		Counter,
    	    wfivCircuitCountTransitPksRecd
    		Counter,
    	    wfivCircuitCountTransitPkSent
    		Counter,
    	    wfivCircuitCountRtHelloSent
    		Counter,
    	    wfivCircuitCountRtHelloRcvd
    		Counter,
    	    wfivCircuitCountHelloSent
    		Counter,
    	    wfivCircuitCountHelloRcvd
    		Counter,
    	    wfivCircuitCountL1UpdSent
    		Counter,
    	    wfivCircuitCountL1UpdRcvd
    		Counter,
    	    wfivCircuitCountAreaUpdSent
    		Counter,
    	    wfivCircuitCountAreaUpdRcvd
    		Counter,
    	    wfivCircuitCountDropped
    		Counter,
    	    wfivCircuitAllEndnodesMac
    		OCTET STRING,
    	    wfivCircuitAllRoutersMac
    		OCTET STRING,
    	    wfivCircuitAllAreaRoutersMac
    		OCTET STRING,
    	    wfivCircuitHelloEnableDisable
    		INTEGER,
    	    wfivCircuitRtHelloEnableDisable
    		INTEGER,
    	    wfivCircuitL1UpdateEnableDisable
    		INTEGER,
    	    wfivCircuitAllEndnodesMacInUse
    		OCTET STRING,
    	    wfivCircuitAllRoutersMacInUse
    		OCTET STRING,
    	    wfivCircuitAllAreaRoutersMacInUse
    		OCTET STRING,
    	    wfivCircuitL2UpdateDisable
    		INTEGER,
    	    wfivCircuitLevel
    		INTEGER
        }

    wfivCircuitCreateDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value determines whether the circuit is configured'"
        DEFVAL	{ create }
        ::= { wfivCircuitEntry 1 }

    wfivCircuitEnableDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value represents the circuit's Network Management
                operational state. NOTE: These values are incremented by one
                compared to the standard DECnet values in order to maintain
                compliance with RFC 1155.'"
        DEFVAL	{ enable }
        ::= { wfivCircuitEntry 2 }

    wfivCircuitCommonState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    notpresent(4),
    		    initializing(3),
    		    down(2),
    		    up(1)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This value represents the circuit's operational state.'"
        DEFVAL	{ down }
        ::= { wfivCircuitEntry 3 }

    wfivCircuitArea OBJECT-TYPE
        SYNTAX	INTEGER(1..63)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'DECnet Phase IV area number for this circuit.'"
        DEFVAL	{ 1 }
        ::= { wfivCircuitEntry 4 }

    wfivCircuitNodeid OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'DECnet Phase IV node address for this circuit.'"
        DEFVAL	{ 1 }
        ::= { wfivCircuitEntry 5 }

    wfivCircuitNodeAddr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The address of the adjacent node.'"
        ::= { wfivCircuitEntry 6 }

    wfivCircuitID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'A unique value for each known circuit.'"
        ::= { wfivCircuitEntry 7 }

    wfivCircuitCommonType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    sync(1),
    		    x25(4),
    		    ethernet(6),
    		    fddi(15),
    		    smds(100),
    		    fr(101),
    		    atm(102),
    		    ring(103),
    		    ppp(104)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Represents the type of the circuit. For X.25 circuits, the
                value must be set to X25. For DDCMP and Ethernet circuits it
                is read only and is the same value as the protocol of
                the associated line.
                NOTE: Values 1 - 5 are incremented by one compared to the
                standard DECnet values in order to maintain compliance with
                RFC 1155.'"
        ::= { wfivCircuitEntry 8 }

    wfivCircuitExecCost OBJECT-TYPE
        SYNTAX	INTEGER(1..63)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value represents the Routing cost of the circuit.
                Routing routes messages along the path between two nodes having
                the smallest cost. The cost is a decimal integer in the range
                1-63.'"
        DEFVAL	{ 10 }
        ::= { wfivCircuitEntry 9 }

    wfivCircuitExecHelloTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..8191)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value determines the frequency of Routing Hello (T3) messages
                sent to the adjacent node on the circuit. Seconds is a decimal
                integer in the range 1-8191.'"
        DEFVAL	{ 15 }
        ::= { wfivCircuitEntry 10 }

    wfivCircuitDesigRouterNodeAddr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This value is the address of the designated router.'"
        ::= { wfivCircuitEntry 11 }

    wfivCircuitMaxRouters OBJECT-TYPE
        SYNTAX	INTEGER(0..33)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'NR -This parameter is the maximum number of routers (including
                the executor itself) allowed on the circuit by Routing for
                circuits that are owned by the executor node. Number is a
                decimal integer in the range 1-33.'"
        DEFVAL	{ 33 }
        ::= { wfivCircuitEntry 12 }

    wfivCircuitRouterPri OBJECT-TYPE
        SYNTAX	INTEGER(0..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This parameter is the priority that this router is to have in
                the selection of designated router for the circuit on circuits
                that are owned by the executor node. Number is a decimal
                integer in the range 0-127. The default value is 64.'"
        DEFVAL	{ 64 }
        ::= { wfivCircuitEntry 13 }

    wfivCircuitCountAgedPktLoss OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Aged packet loss.'"
        ::= { wfivCircuitEntry 14 }

    wfivCircuitCountNodeUnrPktLoss OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Node unreachable packet loss.'"
        ::= { wfivCircuitEntry 15 }

    wfivCircuitCountOutRngePktLoss OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Node out-of-range packet loss.'"
        ::= { wfivCircuitEntry 16 }

    wfivCircuitCountOverSzePktLoss OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Oversized packet loss.'"
        ::= { wfivCircuitEntry 17 }

    wfivCircuitCountPacketFmtErr OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Packet format errors.'"
        ::= { wfivCircuitEntry 18 }

    wfivCircuitCountPtlRteUpdtLoss OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Partial routing update loss.'"
        ::= { wfivCircuitEntry 19 }

    wfivCircuitCountTransitPksRecd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Transit packets Received. This value is stored internally as
                a 32 bit value.'"
        ::= { wfivCircuitEntry 20 }

    wfivCircuitCountTransitPkSent OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Transit packets sent. This value is stored internally as
                a 32 bit value.'"
        ::= { wfivCircuitEntry 21 }

    wfivCircuitCountRtHelloSent OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "' Router Hellos Sent'"
        ::= { wfivCircuitEntry 22 }

    wfivCircuitCountRtHelloRcvd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "' Router Hellos Received'"
        ::= { wfivCircuitEntry 23 }

    wfivCircuitCountHelloSent OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "' Endnode Hellos Sent'"
        ::= { wfivCircuitEntry 24 }

    wfivCircuitCountHelloRcvd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "' Endnode Hellos Received'"
        ::= { wfivCircuitEntry 25 }

    wfivCircuitCountL1UpdSent OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "' Level 1 Routing Updates Sent'"
        ::= { wfivCircuitEntry 26 }

    wfivCircuitCountL1UpdRcvd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "' Level 1 Routing Updates Received'"
        ::= { wfivCircuitEntry 27 }

    wfivCircuitCountAreaUpdSent OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "' Area Routing Updates Sent'"
        ::= { wfivCircuitEntry 28 }

    wfivCircuitCountAreaUpdRcvd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "' Area Routing Updates Received'"
        ::= { wfivCircuitEntry 29 }

    wfivCircuitCountDropped OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "' Dropped Packets '"
        ::= { wfivCircuitEntry 30 }

    wfivCircuitAllEndnodesMac OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This parameter can be used to assign the AllEndnodes multicast
                MAC address value for use over WAN media (e.g. Frame Relay).'"
        ::= { wfivCircuitEntry 31 }

    wfivCircuitAllRoutersMac OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This parameter can be used to assign the AllRouters multicast
                MAC address value for use over WAN media (e.g. Frame Relay).'"
        ::= { wfivCircuitEntry 32 }

    wfivCircuitAllAreaRoutersMac OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This parameter can be used to assign the AllAreaRouters multicast
                MAC address value for use over WAN media (e.g. Frame Relay).'"
        ::= { wfivCircuitEntry 33 }

    wfivCircuitHelloEnableDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "' This parameter is used to disable to sending of Hellos
                to Endnodes. It would be used in conjunction with Static
                Adjacencies to limit the amount of data passed over a WAN
                link (e.g. Frame Relay).'"
        DEFVAL	{ enable }
        ::= { wfivCircuitEntry 34 }

    wfivCircuitRtHelloEnableDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "' This parameter is used to disable to sending of Hellos
                to Routers. It would be used in conjunction with Static
                Adjacencies to limit the amount of data passed over a WAN
                link (e.g. Frame Relay).'"
        DEFVAL	{ enable }
        ::= { wfivCircuitEntry 35 }

    wfivCircuitL1UpdateEnableDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "' This parameter is used to disable to sending of Level 1
                topology updates. It would be used in conjunction with Static
                Adjacencies to limit the amount of data passed over a WAN
                link (e.g. Frame Relay).'"
        DEFVAL	{ enable }
        ::= { wfivCircuitEntry 36 }

    wfivCircuitAllEndnodesMacInUse OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This parameter displays the AllEndnodes multicast
                MAC address value in use over WAN media (e.g. Frame Relay).'"
        ::= { wfivCircuitEntry 37 }

    wfivCircuitAllRoutersMacInUse OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This parameter displays the AllRouters multicast
                MAC address value in use over WAN media (e.g. Frame Relay).'"
        ::= { wfivCircuitEntry 38 }

    wfivCircuitAllAreaRoutersMacInUse OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This parameter displays the AllAreaRouters multicast
                MAC address value for use over WAN media (e.g. Frame Relay).'"
        ::= { wfivCircuitEntry 39 }

    wfivCircuitL2UpdateDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "' This parameter is used to disable to sending of Level 2
                topology updates. It would be used in conjunction with Static
                Adjacencies and Static Routes to limit the amount of data passed
                over a WANl link (e.g. Frame Relay).'"
        DEFVAL	{ enable }
        ::= { wfivCircuitEntry 40 }

    wfivCircuitLevel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    level2(1),
    		    only(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "' This parameter is used to indicate at the circuit level
                  whether the routing is LEVEL 1 only, or LEVEL 1 and LEVEL 2
                  routing.'"
        DEFVAL	{ level2 }
        ::= { wfivCircuitEntry 41 }

    wfivLevel1RouteTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfivLevel1RouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "' Table of Level 1 Routing Table Entries'"
        ::= { wfDecGroup 3 }

    wfivLevel1RouteEntry OBJECT-TYPE
        SYNTAX	WfivLevel1RouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "'A Record in the Level 1 Routing Table'"
        INDEX	{ wfivLevel1AreaId,
    		  wfivLevel1NodeId }
        ::= { wfivLevel1RouteTable 1 }

    WfivLevel1RouteEntry ::= SEQUENCE {
    	    wfivLevel1AreaId
    		INTEGER,
    	    wfivLevel1NodeId
    		INTEGER,
    	    wfivLevel1RouteNodeAddr
    		DisplayString,
    	    wfivLevel1RouteCircuitID
    		INTEGER,
    	    wfivLevel1RouteCost
    		INTEGER,
    	    wfivLevel1RouteHops
    		INTEGER,
    	    wfivLevel1RouteNextNode
    		DisplayString,
    	    wfivLevel1RouteDynamic
    		INTEGER
        }

    wfivLevel1AreaId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Area Id for this node'"
        ::= { wfivLevel1RouteEntry 1 }

    wfivLevel1NodeId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Node Id for this node'"
        ::= { wfivLevel1RouteEntry 2 }

    wfivLevel1RouteNodeAddr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This value is the address of the node about which routing
                information is contained in this level 1 routing table.'"
        ::= { wfivLevel1RouteEntry 3 }

    wfivLevel1RouteCircuitID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This READ_ONLY parameter identifies the circuit used to get
                to a remote node. Circuit-id is an id-string. This parameter
                can be used when displaying a list of nodes to indicate that
                the display is to be restricted to those nodes adjacent on the
                specified circuit.'"
        ::= { wfivLevel1RouteEntry 4 }

    wfivLevel1RouteCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This READ_ONLY parameter represents the total cost over the
                current path to the destination node. Cost is a positive
                integer value associated with using a circuit. Routing routes
                messages (data) along the path between two nodes with the
                smallest cost. COST is kept on a remote node basis.'"
        ::= { wfivLevel1RouteEntry 5 }

    wfivLevel1RouteHops OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This READ_ONLY parameter represents the number of hops over
                to a destination node. A hop is Routing value representing
                the logical distance between two nodes in a network. HOPS is
                kept on a remote node basis.'"
        ::= { wfivLevel1RouteEntry 6 }

    wfivLevel1RouteNextNode OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This READ_ONLY value indicates the next node on the circuit
                used to get to the node under scrutiny (next hop).'"
        ::= { wfivLevel1RouteEntry 7 }

    wfivLevel1RouteDynamic OBJECT-TYPE
        SYNTAX	INTEGER {
    		    dynamic(1),
    		    static(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This READ_WRITE parameter will indicate the type of Level 1 route,
                whether it is a Dynamic or a Static route"
        ::= { wfivLevel1RouteEntry 8 }

    wfivAreaTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfivAreaEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "'Table of Area Routing Table Entries'"
        ::= { wfDecGroup 4 }

    wfivAreaEntry OBJECT-TYPE
        SYNTAX	WfivAreaEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "'The area routing information.'"
        INDEX	{ wfivAreaNum }
        ::= { wfivAreaTable 1 }

    WfivAreaEntry ::= SEQUENCE {
    	    wfivAreaNum
    		INTEGER,
    	    wfivAreaState
    		INTEGER,
    	    wfivAreaCost
    		INTEGER,
    	    wfivAreaHops
    		INTEGER,
    	    wfivAreaCircuitID
    		INTEGER,
    	    wfivAreaNextNode
    		DisplayString,
    	    wfivAreaRouteDynamic
    		INTEGER
        }

    wfivAreaNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This value indicates the area number of this entry.'"
        ::= { wfivAreaEntry 1 }

    wfivAreaState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    reachable(4),
    		    unreachable(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This value indicates the state of the area'"
        ::= { wfivAreaEntry 2 }

    wfivAreaCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The total cost over the current path to the
                destination area. Cost is a value associated with
                using a circuit. Routing routes messages (data)
                along the path between 2 areas with the smallest
                cost.'"
        ::= { wfivAreaEntry 3 }

    wfivAreaHops OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The number of hops to a destination area. A hop is
                the routing value representing the logical distance
                between two areas in network.'"
        ::= { wfivAreaEntry 4 }

    wfivAreaCircuitID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The circuit used to get to the remote area'"
        ::= { wfivAreaEntry 5 }

    wfivAreaNextNode OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The next node on the circuit used to get to the
                area under scrutiny.'"
        ::= { wfivAreaEntry 6 }

    wfivAreaRouteDynamic OBJECT-TYPE
        SYNTAX	INTEGER {
    		    dynamic(1),
    		    static(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This READ_WRITE parameter will indicate the type of Level 2 route,
                whether it is a Dynamic or a Static route"
        ::= { wfivAreaEntry 7 }

    wfivAdjTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfivAdjEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Adjacency Table"
        ::= { wfDecGroup 5 }

    wfivAdjEntry OBJECT-TYPE
        SYNTAX	WfivAdjEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "' Adjacency Table - the real index is the adjacency index'"
        INDEX	{ wfivAdjIndex }
        ::= { wfivAdjTable 1 }

    WfivAdjEntry ::= SEQUENCE {
    	    wfivAdjIndex
    		INTEGER,
    	    wfivAdjNodeAddr
    		DisplayString,
    	    wfivAdjBlockSize
    		INTEGER,
    	    wfivAdjListenTimer
    		INTEGER,
    	    wfivAdjCircuitID
    		INTEGER,
    	    wfivAdjType
    		INTEGER,
    	    wfivAdjState
    		INTEGER,
    	    wfivAdjPriority
    		INTEGER,
    	    wfivAdjClass
    		INTEGER
        }

    wfivAdjIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Index in the Adjacency Table'"
        ::= { wfivAdjEntry 1 }

    wfivAdjNodeAddr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The address of the adjacent node.'"
        ::= { wfivAdjEntry 2 }

    wfivAdjBlockSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This READ_ONLY parameter is the block size that was
                negotiated with the adjacent Routing layer during Routing
                initialization over a particular circuit. It includes the
                routing header, but excludes the data link header. This
                parameter is qualified by ADJACENT NODE.'"
        ::= { wfivAdjEntry 3 }

    wfivAdjListenTimer OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This READ_ONLY value determines the maximum time allowed to
                elapse before Routing receives some message (either a Hello
                message or a user message) from the adjacent node on the
                circuit. It was agreed during Routing initialization with the
                adjacent Routing layer. Seconds is a decimal integer in the
                range 1-65535. This parameter is qualified by ADJACENT NODE.'"
        ::= { wfivAdjEntry 4 }

    wfivAdjCircuitID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'A unique value for each known circuit.'"
        ::= { wfivAdjEntry 5 }

    wfivAdjType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This parameter indicates the type of adjacency.

                For adjacent nodes, this is a READ_ONLY parameter that
                indicates the type of the reachable adjacent node.
                NOTE: The ROUTING III and NONROUTING III values are
                incremented by one compared to the standard DECnet values in
                order to maintain compliance with RFC 1155)
                ROUTING III (1),
                NONROUTING III (2),
                AREA (3),
                ROUTING IV (4),
                NONROUTING IV (5)'"
        ::= { wfivAdjEntry 6 }

    wfivAdjState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    init(1),
    		    up(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This value indicates the state of a router adjacency.
                On adjacencies over a circuit of type (wfivCircuitCommonType)
                Ethernet, CI, or FDDI, with an adjacent node of type
                (wfivAdjType) ROUTING IV or AREA, this variable is the state
                of the Ethernet Initialization Layer for this adjacency, and
                can have values INITIALIZING or UP. (See Section 9.1.1 of
                DECnet Phase IV Routing Layer Functional Specification.)

                On adjacencies over a circuit of type (wfivCircuitCommonType)
                Ethernet, CI, or FDDI, with an adjacent node of type
                (wfivAdjType) NONROUTING IV, this varaible will always take on
                the value UP.

                On adjacencies over a circuit of type (wfivCircuitCommonType)
                DDCMP POINT, DDCMP CONTROL, DDCMP TRIBUTARY, DDCMP DMC, or
                X.25, this variable is the state of the Routing Layer
                Initialization Circuit State. (See section 7.3, ibid.) It can
                have values between RUN and HALT.

                On adjacencies over a circuit of type (wfivCircuitCommonType)
                OTHER, this variable may be used in a manner consistent with
                the Initialization Layer used on that circuit.
                INITIALIZING (1), -- Ethernet one-way
                UP (2), -- Ethernet two-way
                RUN (3), -- The eight DDCMP/X.25 states
                CIRCUIT REJECTED (4),
                DATA LINK START (5),
                ROUTING LAYER INITIALIZE (6),
                ROUTING LAYER VERIFY (7),
                ROUTING LAYER COMPLETE (8),
                OFF (9),
                HALT (10)'"
        ::= { wfivAdjEntry 7 }

    wfivAdjPriority OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Priority assigned by the adjacent node for this circuit.'"
        ::= { wfivAdjEntry 8 }

    wfivAdjClass OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Specifies whether this adjacency is Static or Dynamic'"
        ::= { wfivAdjEntry 9 }

    wfivTrafficFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfivTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "DECNET Traffic Filters"
        ::= { wfDecGroup 6 }

    wfivTrafficFilterEntry OBJECT-TYPE
        SYNTAX	WfivTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in WfivTrafficFilterTable."
        INDEX	{ wfivTrafficFilterCircuit,
    		  wfivTrafficFilterRuleNumber,
    		  wfivTrafficFilterFragment }
        ::= { wfivTrafficFilterTable 1 }

    WfivTrafficFilterEntry ::= SEQUENCE {
    	    wfivTrafficFilterCreate
    		INTEGER,
    	    wfivTrafficFilterEnable
    		INTEGER,
    	    wfivTrafficFilterStatus
    		INTEGER,
    	    wfivTrafficFilterCounter
    		Counter,
    	    wfivTrafficFilterDefinition
    		Opaque,
    	    wfivTrafficFilterReserved
    		INTEGER,
    	    wfivTrafficFilterCircuit
    		INTEGER,
    	    wfivTrafficFilterRuleNumber
    		INTEGER,
    	    wfivTrafficFilterFragment
    		INTEGER,
    	    wfivTrafficFilterName
    		DisplayString
        }

    wfivTrafficFilterCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the existence of the traffic filter rule:
                created - traffic filter exists
                delete - traffic filter does not exist and can be deleted."
        DEFVAL	{ created }
        ::= { wfivTrafficFilterEntry 1 }

    wfivTrafficFilterEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether or not the traffic filter rule should be used:
                enabled - activate the rule.
                disabled - inactivate the rule."
        DEFVAL	{ enabled }
        ::= { wfivTrafficFilterEntry 2 }

    wfivTrafficFilterStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    error(2),
    		    inactive(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines the current status of the traffic filter:
                inactive - the rule is not in use.
                active - the rule is being used.
                error - the application detected an error in the rule."
        DEFVAL	{ inactive }
        ::= { wfivTrafficFilterEntry 3 }

    wfivTrafficFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets that have
                matched this rule."
        ::= { wfivTrafficFilterEntry 4 }

    wfivTrafficFilterDefinition OBJECT-TYPE
        SYNTAX	Opaque
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The filter rule definition."
        ::= { wfivTrafficFilterEntry 5 }

    wfivTrafficFilterReserved OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reserved field."
        ::= { wfivTrafficFilterEntry 6 }

    wfivTrafficFilterCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ID of the Circuit to which the
                filter is applied."
        ::= { wfivTrafficFilterEntry 7 }

    wfivTrafficFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ID for the rule."
        ::= { wfivTrafficFilterEntry 8 }

    wfivTrafficFilterFragment OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fragment number - for large rules."
        ::= { wfivTrafficFilterEntry 9 }

    wfivTrafficFilterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "name of the rule number"
        ::= { wfivTrafficFilterEntry 10 }

    wfivStaticAdjTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfivStaticAdjEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Static Adjacency Table"
        ::= { wfDecGroup 7 }

    wfivStaticAdjEntry OBJECT-TYPE
        SYNTAX	WfivStaticAdjEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "' Static Adjacency Table '"
        INDEX	{ wfivStaticAdjCircuitID,
    		  wfivStaticAdjArea,
    		  wfivStaticAdjNodeid }
        ::= { wfivStaticAdjTable 1 }

    WfivStaticAdjEntry ::= SEQUENCE {
    	    wfivStaticAdjCreateDelete
    		INTEGER,
    	    wfivStaticAdjEnableDisable
    		INTEGER,
    	    wfivStaticAdjArea
    		INTEGER,
    	    wfivStaticAdjNodeid
    		INTEGER,
    	    wfivStaticAdjCircuitID
    		INTEGER,
    	    wfivStaticAdjNodeAddr
    		DisplayString,
    	    wfivStaticAdjType
    		INTEGER,
    	    wfivStaticAdjPriority
    		INTEGER,
    	    wfivStaticAdjDestMACAddr
    		OCTET STRING
        }

    wfivStaticAdjCreateDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value determines whether the static adjacency is configured'"
        DEFVAL	{ create }
        ::= { wfivStaticAdjEntry 1 }

    wfivStaticAdjEnableDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value determines whether the static adjacency is active '"
        DEFVAL	{ enable }
        ::= { wfivStaticAdjEntry 2 }

    wfivStaticAdjArea OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'DECnet Phase IV area number for this static Adjacency.'"
        ::= { wfivStaticAdjEntry 3 }

    wfivStaticAdjNodeid OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'DECnet Phase IV node address for this static adjacency.'"
        ::= { wfivStaticAdjEntry 4 }

    wfivStaticAdjCircuitID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The circuit used for this static adjacency.'"
        ::= { wfivStaticAdjEntry 5 }

    wfivStaticAdjNodeAddr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The address of the adjacent node in display format.'"
        ::= { wfivStaticAdjEntry 6 }

    wfivStaticAdjType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    area(3),
    		    routingiv(4),
    		    nonroutingiv(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "' Specifies whether the static adjacency is to a router or end
                station.'"
        DEFVAL	{ area }
        ::= { wfivStaticAdjEntry 7 }

    wfivStaticAdjPriority OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "' Specifies the priority of the static adjacency if it's a
                router.'"
        ::= { wfivStaticAdjEntry 8 }

    wfivStaticAdjDestMACAddr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "' Specifies the destination MAC address of the Static Adjacency
                if the circuit type is ATM, Frame Relay or SMDS.'"
        ::= { wfivStaticAdjEntry 9 }

    wfivStaticRouteTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfivStaticRouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains the list of all static routes"
        ::= { wfDecGroup 8 }

    wfivStaticRouteEntry OBJECT-TYPE
        SYNTAX	WfivStaticRouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the Static Route Entry for the Static Route Table"
        INDEX	{ wfivStaticRouteAreaId,
    		  wfivStaticRouteNodeId,
    		  wfivStaticRouteNextHopAreaId,
    		  wfivStaticRouteNextHopNodeId }
        ::= { wfivStaticRouteTable 1 }

    WfivStaticRouteEntry ::= SEQUENCE {
    	    wfivStaticRouteDelete
    		INTEGER,
    	    wfivStaticRouteDisable
    		INTEGER,
    	    wfivStaticRouteType
    		INTEGER,
    	    wfivStaticRouteAreaId
    		INTEGER,
    	    wfivStaticRouteNodeId
    		INTEGER,
    	    wfivStaticRouteCost
    		INTEGER,
    	    wfivStaticRouteNextHopAreaId
    		INTEGER,
    	    wfivStaticRouteNextHopNodeId
    		INTEGER
        }

    wfivStaticRouteDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter for DECnet IV Static Route Record"
        DEFVAL	{ created }
        ::= { wfivStaticRouteEntry 1 }

    wfivStaticRouteDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for this Static Route"
        DEFVAL	{ enabled }
        ::= { wfivStaticRouteEntry 2 }

    wfivStaticRouteType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    l1(1),
    		    l2(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter specifies whether this static route is for Level 1 or Level 2
                type of routing"
        DEFVAL	{ l2 }
        ::= { wfivStaticRouteEntry 3 }

    wfivStaticRouteAreaId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This specifies the area address of the static route. It is also a part of
                the inst_id"
        ::= { wfivStaticRouteEntry 4 }

    wfivStaticRouteNodeId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This specifies the node address of the static route. It is also a part of
                the inst_id"
        ::= { wfivStaticRouteEntry 5 }

    wfivStaticRouteCost OBJECT-TYPE
        SYNTAX	INTEGER(1..63)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value is the cost to get to this address"
        DEFVAL	{ 10 }
        ::= { wfivStaticRouteEntry 6 }

    wfivStaticRouteNextHopAreaId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the area address of the next hop router that all data destined to
                wfivStaticRouteAreaId will be forwarded to"
        ::= { wfivStaticRouteEntry 7 }

    wfivStaticRouteNextHopNodeId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the node address of the next hop router that all data destined to
                wfivStaticRouteAddr will be forwarded to"
        ::= { wfivStaticRouteEntry 8 }

    wfivDecnetTrans	OBJECT IDENTIFIER ::= { wfDecGroup 9 }

    wfivDecnetTransPhase5Pkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of successfully translated Phase 5 (CLNP) packets"
        ::= { wfivDecnetTrans 1 }

    wfivDecnetTransMtuFail OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times Phase 5 translation failed because the packet
                was larger than the Phase 4 MTU size."
        ::= { wfivDecnetTrans 2 }

    wfivDecnetTransUnrFail OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times Phase 4 failed to find a route to the
                destination."
        ::= { wfivDecnetTrans 3 }

    wfivDecnetTransNumPhase5Es OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Phase 5 ES Adjacencies announced by the Phase 5
                (OSI) router."
        ::= { wfivDecnetTrans 4 }

    wfivAggrStats	OBJECT IDENTIFIER ::= { wfDecGroup 10 }

    wfivAggrInPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of packets received by the DECnet re-director"
        ::= { wfivAggrStats 1 }

    wfivAggrOutPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of packets sent by the DECnet re-director"
        ::= { wfivAggrStats 2 }

    wfivAggrFormatErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of packets received with format errors"
        ::= { wfivAggrStats 3 }

    wfivAggrDestUnreachables OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of packets received whose destinations
                were unreachable"
        ::= { wfivAggrStats 4 }

    wfivAggrRangeErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of packet received with nodes out of range"
        ::= { wfivAggrStats 5 }

    wfivAggrOversizedPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of oversized packets received."
        ::= { wfivAggrStats 6 }

    wfivAggrAgedPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of packets aged out"
        ::= { wfivAggrStats 7 }

    wfivAggrFwdPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of packets forwarded"
        ::= { wfivAggrStats 8 }

    END  -- Wellfleet-DECNET-MIB
-- @(#)WSCCS f/mibs-dls.mib 1.2 9/27/95
Wellfleet-DLS-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:39:40 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfDlsGroup
        FROM Wellfleet-COMMON-MIB;


    wfDls		OBJECT IDENTIFIER ::= { wfDlsGroup 1 }

    wfDlsDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created. Users perform an SNMP SET
                operation on this object in order to create/delete DLSw"
        DEFVAL	{ created }
        ::= { wfDls 1 }

    wfDlsDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled. Users perform an SNMP SET
                operation on this object in order to enable/disable DLSw"
        DEFVAL	{ enabled }
        ::= { wfDls 2 }

    wfDlsState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of DLSw"
        DEFVAL	{ down }
        ::= { wfDls 3 }

    wfDlsTcpWindowSize OBJECT-TYPE
        SYNTAX	INTEGER(5000..64000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The size in bytes of the windows used for the DLSw TCP connections"
        DEFVAL	{ 8000 }
        ::= { wfDls 4 }

    wfDlsVirtualRing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The virtual ring number for the TCP/IP cloud. Valid values (1-4095)"
        ::= { wfDls 5 }

    wfDlsInternalLanId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The source routing internal lan id. Valid Values (1-4095)"
        ::= { wfDls 6 }

    wfDlsBridgeId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The source routing base bridge number.  Valid Values (1-15)"
        ::= { wfDls 7 }

    wfDlsMaxSlotSessions OBJECT-TYPE
        SYNTAX	INTEGER(1..10000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of LLC2 sessions to support per slot"
        DEFVAL	{ 200 }
        ::= { wfDls 8 }

    wfDlsTotalCircuits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A current count of the total number of DLSw circuits established"
        ::= { wfDls 9 }

    wfDlsVirtualRingMtu OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The MTU to use in explorers generated by this DLSw. It should reflect
                the minimum MTU size of the entire network including the remote LANs.
                Valid values (> 0)"
        DEFVAL	{ 1500 }
        ::= { wfDls 10 }

    wfDlsMacAgeTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The time in seconds before inactive MAC addresses will be aged out of
                the cache. Valid values (> 20)"
        DEFVAL	{ 300 }
        ::= { wfDls 11 }

    wfDlsNbAgeTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The time in seconds before inactive NetBIOS names will be aged out of the
                cache. Valid values (> 20)"
        DEFVAL	{ 300 }
        ::= { wfDls 12 }

    wfDlsUnconfPeerReject OBJECT-TYPE
        SYNTAX	INTEGER {
    		    accepted(1),
    		    rejected(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Allow establishment of TCP connections from peers not in the Peer Table"
        DEFVAL	{ accepted }
        ::= { wfDls 13 }

    wfDlsDebugLevel1 OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "First Level debug flag.  Cannot be configured with Site Manager.
                When this flag is set to Zero, no debug messages will be logged.
                Each bit of this flag represents certain functionality in DLSw.
                When this bit is set, all level2 elements that are part of this
                functionality that have their bits set will be allowed to log debug
                messages."
        DEFVAL	{ 4294967295 }
        ::= { wfDls 14 }

    wfDlsDebugLevel2 OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Second Level debug flag.  Cannot be configured with Site Manager.
                When this flag is set to Zero, no debug messages will be logged.
                Each bit of this flag represents a sub-functional element.  When this
                bit is set, all debug messages in this element will be logged, as long
                as the related level1 functionality is set."
        DEFVAL	{ 0 }
        ::= { wfDls 15 }

    wfDlsWanKeepaliveTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Keepalive packets will be sent into inactive, established TCP connections
                after this time interval (in seconds).  A time of zero disables this
                keepalive feature."
        DEFVAL	{ 60 }
        ::= { wfDls 16 }

    wfDlsPPriDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Protocol Prioritization Enable/Disable parameter. Default is disabled.
                Users perform an SNMP SET operation to enable/disable this feature."
        DEFVAL	{ disabled }
        ::= { wfDls 17 }

    wfDlsPPriDefaultNumQueues OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DLSw Prioritization Default number of Queues. The number of queues to be
                created when establishing a Peer connection if none have been previously
                defined.  The default is two queues: queue number 0 and 1."
        DEFVAL	{ 2 }
        ::= { wfDls 18 }

    wfDlsPPriDefaultQBandwidth OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DLSw Prioritization Default Queues Bandwidth. The bandwidth for
                each default queue.  Default of: 60% queue 0, 40% queue 1 via site manager."
        ::= { wfDls 19 }

    wfDlsPPriUnconfPeerDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DLSw Prioritization enabled/disabled for peers not in Peer Table."
        DEFVAL	{ disable }
        ::= { wfDls 20 }

    wfDlsPPriUnconfPeerMaxQBuf OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(50)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DLSw Prioritization enabled/disabled for peers not in Peer Table."
        DEFVAL	{ default }
        ::= { wfDls 21 }

    wfDlsPPriUnconfPeerMaxQSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(16000)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DLSw Prioritization enabled/disabled for peers not in Peer Table."
        DEFVAL	{ default }
        ::= { wfDls 22 }

    wfDlsPkgMaxSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum size of frame to sended over the WAN. Used when packaging
                multiple DLS frames into a single TCP frame. The value specified must
                be smaller than the wfDlsTcpWindowSize and  should be no greater
                than the MTU for the WAN minus the size of the TCP/IP/MAC headers."
        DEFVAL	{ 1532 }
        ::= { wfDls 23 }

    wfDlsPkgTO OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DLSw packaging Time-out. Number of msec to delay a package before sending
                to TCP.  This value should be based on the WAN speed wfDlsPkgWinPercent
                (defined below).  This value should be no greater than the amount of time
                it takes to send the number of outstanding bytes before packaging begins:
                          number bytes / (number bytes per msec)
                Default of 10 msec.  "
        DEFVAL	{ 10 }
        ::= { wfDls 24 }

    wfDlsPkgWinPercent OBJECT-TYPE
        SYNTAX	INTEGER(0..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DLSw Packaging threshold. What percent of the DLS TCP window must be
                outstanding inorder to delay the sending of a package being built.
                Default: 20% of TCP window.
                Range: 0 - 100, with 0 meaning no delay."
        DEFVAL	{ 20 }
        ::= { wfDls 25 }

    wfDlsInterfaceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDlsInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table that contains information about every interface that is associated
                with DLSw inst_id[1] = wfDlsInterfaceCircuit"
        ::= { wfDlsGroup 2 }

    wfDlsInterfaceEntry OBJECT-TYPE
        SYNTAX	WfDlsInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfDlsInterface"
        INDEX	{ wfDlsInterfaceCircuit }
        ::= { wfDlsInterfaceTable 1 }

    WfDlsInterfaceEntry ::= SEQUENCE {
    	    wfDlsInterfaceDelete
    		INTEGER,
    	    wfDlsInterfaceDisable
    		INTEGER,
    	    wfDlsInterfaceState
    		INTEGER,
    	    wfDlsInterfaceCircuit
    		INTEGER,
    	    wfDlsInterfaceBridgeId
    		INTEGER,
    	    wfDlsInterfaceLanId
    		INTEGER,
    	    wfDlsInterfaceDlcType
    		INTEGER,
    	    wfDlsInterfaceSdlcMode
    		INTEGER
        }

    wfDlsInterfaceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created. Users perform an SNMP SET
                operation on this object in order to create/delete an interface"
        DEFVAL	{ created }
        ::= { wfDlsInterfaceEntry 1 }

    wfDlsInterfaceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled. Users perform an SNMP SET
                operation on this object in order to enable/disable an interface"
        DEFVAL	{ enabled }
        ::= { wfDlsInterfaceEntry 2 }

    wfDlsInterfaceState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the interface"
        DEFVAL	{ down }
        ::= { wfDlsInterfaceEntry 3 }

    wfDlsInterfaceCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit that this interface runs over"
        ::= { wfDlsInterfaceEntry 4 }

    wfDlsInterfaceBridgeId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Bridge Id of the 'bridge' from the internal Lan to the TCP/IP ring.
                This must be a non-Wellfleet bridge number. Valid Values (1-15)"
        ::= { wfDlsInterfaceEntry 5 }

    wfDlsInterfaceLanId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Lan Id of the interface.  Valid Values (1-4095)"
        ::= { wfDlsInterfaceEntry 6 }

    wfDlsInterfaceDlcType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    sync(1),
    		    srb(2),
    		    tb(3),
    		    encaps(4),
    		    fr(5),
    		    token(6)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Data Link Control Type on this interface."
        DEFVAL	{ srb }
        ::= { wfDlsInterfaceEntry 7 }

    wfDlsInterfaceSdlcMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    primary(1),
    		    pp(2),
    		    mp(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The SDLC Mode on this interface.  Negotiable should be set to Zero."
        DEFVAL	{ primary }
        ::= { wfDlsInterfaceEntry 8 }

    wfDlsSlotTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDlsSlotEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table that contains the IP interfaces each slot must use for the TCP
                connections to non-Wellfleet switches.  The IP interface may exist anywhere
                on the box.  inst_id[1] = wfDlsSlotNumber"
        ::= { wfDlsGroup 3 }

    wfDlsSlotEntry OBJECT-TYPE
        SYNTAX	WfDlsSlotEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfDlsSlot"
        INDEX	{ wfDlsSlotNumber }
        ::= { wfDlsSlotTable 1 }

    WfDlsSlotEntry ::= SEQUENCE {
    	    wfDlsSlotDelete
    		INTEGER,
    	    wfDlsSlotNumber
    		INTEGER,
    	    wfDlsSlotIpAddr
    		IpAddress,
    	    wfDlsCurrentMemory
    		INTEGER,
    	    wfDlsMaxAllowedMemory
    		Gauge,
    	    wfDlsHiWaterMark
    		INTEGER
        }

    wfDlsSlotDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created. Users perform an SNMP SET
                operation on this object in order to create/delete a DLSw slot IP record"
        DEFVAL	{ created }
        ::= { wfDlsSlotEntry 1 }

    wfDlsSlotNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The slot that uses this IP interface"
        ::= { wfDlsSlotEntry 2 }

    wfDlsSlotIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The IP interface to use for TCP connections based on this slot"
        ::= { wfDlsSlotEntry 3 }

    wfDlsCurrentMemory OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Memory currently available on this slot"
        ::= { wfDlsSlotEntry 4 }

    wfDlsMaxAllowedMemory OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum amount of memory allowed to be allocated for DLS on this slot.
                4294967295 = 0xFFFFFFFF stands for infinite. (i.e. all available memory)"
        DEFVAL	{ 4294967295 }
        ::= { wfDlsSlotEntry 5 }

    wfDlsHiWaterMark OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum amount of memory ever allocated by DLS on this slot
                since the last boot"
        ::= { wfDlsSlotEntry 6 }

    wfDlsSapTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDlsSapEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table that contains the SAPS to be terminated by DLSw.
                inst_id[1] = wfDlsSapAddr"
        ::= { wfDlsGroup 4 }

    wfDlsSapEntry OBJECT-TYPE
        SYNTAX	WfDlsSapEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfDlsSap"
        INDEX	{ wfDlsSapAddr }
        ::= { wfDlsSapTable 1 }

    WfDlsSapEntry ::= SEQUENCE {
    	    wfDlsSapDelete
    		INTEGER,
    	    wfDlsSapAddr
    		INTEGER,
    	    wfDlsSapCredit
    		INTEGER
        }

    wfDlsSapDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created. Users perform an SNMP SET
                operation on this object in order to create/delete a DLSw SAP record"
        DEFVAL	{ created }
        ::= { wfDlsSapEntry 1 }

    wfDlsSapAddr OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The SAP to be terminated by DLSw"
        ::= { wfDlsSapEntry 2 }

    wfDlsSapCredit OBJECT-TYPE
        SYNTAX	INTEGER(6..200)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The LLC2 flow control credit size for this SAP. Flow control procedures
                will be invoked based on this parameter"
        DEFVAL	{ 10 }
        ::= { wfDlsSapEntry 3 }

    wfDlsPeerTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDlsPeerEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table that contains the IP addresses of the DLSw peers with which we will
                establish TCP connections.  inst_id[4] = wfDlsPeerAddr"
        ::= { wfDlsGroup 5 }

    wfDlsPeerEntry OBJECT-TYPE
        SYNTAX	WfDlsPeerEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfDlsPeer"
        INDEX	{ wfDlsPeerIpAddr }
        ::= { wfDlsPeerTable 1 }

    WfDlsPeerEntry ::= SEQUENCE {
    	    wfDlsPeerDelete
    		INTEGER,
    	    wfDlsPeerState
    		INTEGER,
    	    wfDlsPeerIpAddr
    		IpAddress,
    	    wfDlsPeerDefinedBy
    		INTEGER,
    	    wfDlsPeerPPriDisable
    		INTEGER,
    	    wfDlsPeerPPriMaxQBuf
    		INTEGER,
    	    wfDlsPeerPPriMaxQSize
    		INTEGER,
    	    wfDlsPeerPPriClearStats
    		INTEGER
        }

    wfDlsPeerDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created. Users perform an SNMP SET
                operation on this object in order to create/delete a DLSw peer record"
        DEFVAL	{ created }
        ::= { wfDlsPeerEntry 1 }

    wfDlsPeerState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    connect(1),
    		    notconn(2),
    		    invalid(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the TCP connection with this DLSw peer"
        DEFVAL	{ notconn }
        ::= { wfDlsPeerEntry 2 }

    wfDlsPeerIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address of the DLSw peer"
        ::= { wfDlsPeerEntry 3 }

    wfDlsPeerDefinedBy OBJECT-TYPE
        SYNTAX	INTEGER {
    		    configured(1),
    		    learned(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The method by which this peer was defined"
        DEFVAL	{ configured }
        ::= { wfDlsPeerEntry 4 }

    wfDlsPeerPPriDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DLSw Protocol Priority enabled/disabled for this Peer. The default
                is to use the value specified in the DLS Base record (wfDlsPPriDisable).
                Site Manager handles the setting of the default."
        DEFVAL	{ disabled }
        ::= { wfDlsPeerEntry 5 }

    wfDlsPeerPPriMaxQBuf OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(50)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Protocol Priority Queue Maximum number of allocated buffers queued."
        DEFVAL	{ default }
        ::= { wfDlsPeerEntry 6 }

    wfDlsPeerPPriMaxQSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(16000)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Protocol Priority Queue Maximum number of octets queued."
        DEFVAL	{ default }
        ::= { wfDlsPeerEntry 7 }

    wfDlsPeerPPriClearStats OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Clear Protocol Priority Statistics. If prioritization is
                enabled for this Peer, then modifying this attribute will
                cause all Statistics kept (Queue's, CC, etc) to be cleared."
        ::= { wfDlsPeerEntry 8 }

    wfDlsConnectionTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDlsConnectionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table that contains the information about the current DLSw connections in
                progress.
                inst_id[15] = wfDlsConnectionCct wfDlsConnectionSrcMac wfDlsConnectionDstMac
                              wfDlsConnectionSaps"
        ::= { wfDlsGroup 6 }

    wfDlsConnectionEntry OBJECT-TYPE
        SYNTAX	WfDlsConnectionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfDlsConnection"
        INDEX	{ wfDlsConnectionCct,
    		  wfDlsConnectionDstMac,
    		  wfDlsConnectionSrcMac,
    		  wfDlsConnectionSaps }
        ::= { wfDlsConnectionTable 1 }

    WfDlsConnectionEntry ::= SEQUENCE {
    	    wfDlsConnectionCct
    		INTEGER,
    	    wfDlsConnectionDstMac
    		OCTET STRING,
    	    wfDlsConnectionSrcMac
    		OCTET STRING,
    	    wfDlsConnectionSaps
    		OCTET STRING,
    	    wfDlsConnectionState
    		INTEGER,
    	    wfDlsConnectionRemoteIpAddr
    		IpAddress,
    	    wfDlsConnectionRemoteRxPort
    		INTEGER,
    	    wfDlsConnectionLocalIpAddr
    		IpAddress,
    	    wfDlsConnectionLocalTxPort
    		INTEGER,
    	    wfDlsConnectionTxIFrames
    		Counter,
    	    wfDlsConnectionRxIFrames
    		Counter,
    	    wfDlsConnectionTxRnrs
    		Counter,
    	    wfDlsConnectionRxRnrs
    		Counter,
            wfDlsConnectionLocalBlockNum
            DisplayString,
            wfDlsConnectionLocalIdNum
            DisplayString,
            wfDlsConnectionLocalCpName
            DisplayString,
            wfDlsConnectionRif
            OCTET STRING,
            wfDlsConnectionRemoteBlockNum
            DisplayString,
            wfDlsConnectionRemoteIdNum
            DisplayString,
            wfDlsConnectionRemoteCpName
            DisplayString
        }

    wfDlsConnectionCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit this from which this connection originated"
        ::= { wfDlsConnectionEntry 1 }

    wfDlsConnectionDstMac OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Destination MAC address (the LLC session target)"
        ::= { wfDlsConnectionEntry 2 }

    wfDlsConnectionSrcMac OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Source MAC address (the LLC session originator)"
        ::= { wfDlsConnectionEntry 3 }

    wfDlsConnectionSaps OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (2))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The SAPs for this connection (DSAP, SSAP)"
        ::= { wfDlsConnectionEntry 4 }

    wfDlsConnectionState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    connect(1),
    		    ccestab(2),
    		    notconn(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The DLSw state of this connection. These are the steady states of the
                DLSw state machine.  Transition states are not reflected"
        DEFVAL	{ notconn }
        ::= { wfDlsConnectionEntry 5 }

    wfDlsConnectionRemoteIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address of the remote DLSw peer over which
                this connection is established"
        ::= { wfDlsConnectionEntry 6 }

    wfDlsConnectionRemoteRxPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The TCP receive port number of the remote DLSw peer over which
                this connection is established"
        ::= { wfDlsConnectionEntry 7 }

    wfDlsConnectionLocalIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address of the local DLSw peer over which
                this connection is established"
        ::= { wfDlsConnectionEntry 8 }

    wfDlsConnectionLocalTxPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The TCP transmit port number of the local DLSw peer over which
                this connection is established"
        ::= { wfDlsConnectionEntry 9 }

    wfDlsConnectionTxIFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Information frames transmitted from this switch
                to the remote DLSw switch"
        ::= { wfDlsConnectionEntry 10 }

    wfDlsConnectionRxIFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Information frames received at this switch
                from the remote DLSw switch"
        ::= { wfDlsConnectionEntry 11 }

    wfDlsConnectionTxRnrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of RNR frames transmitted from this switch
                to the remote DLSw switch"
        ::= { wfDlsConnectionEntry 12 }

    wfDlsConnectionRxRnrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of RNR frames received at this switch
                from the remote DLSw switch"
        ::= { wfDlsConnectionEntry 13 }

    wfDlsConnectionLocalBlockNum OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The block number is the first 3 hexadecimal digits of
                 node identification field of local XID"
        ::= { wfDlsConnectionEntry 14 }

    wfDlsConnectionLocalIdNum OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The ID number is the last 5 hexadecimal digits of
                 node identification field of local XID"
        ::= { wfDlsConnectionEntry 15 }

    wfDlsConnectionLocalCpName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The local CP name"
        ::= { wfDlsConnectionEntry 16 }

    wfDlsConnectionRif OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Rif information"
        ::= { wfDlsConnectionEntry 17 }

    wfDlsConnectionRemoteBlockNum OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The block number is the first 3 hexadecimal digits of
                 node identification field of remote XID"
        ::= { wfDlsConnectionEntry 18 }

    wfDlsConnectionRemoteIdNum OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The ID number is the last 5 hexadecimal digits of
                 node identification field of remote XID"
        ::= { wfDlsConnectionEntry 19 }

    wfDlsConnectionRemoteCpName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The remote CP name"
        ::= { wfDlsConnectionEntry 20 }

    wfDlsNbTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDlsNbEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DLSw NetBIOS name cache table.  inst_id[16] = wfDlsNbName"
        ::= { wfDlsGroup 7 }

    wfDlsNbEntry OBJECT-TYPE
        SYNTAX	WfDlsNbEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfDlsNb"
        INDEX	{ wfDlsNbName }
        ::= { wfDlsNbTable 1 }

    WfDlsNbEntry ::= SEQUENCE {
    	    wfDlsNbName
    		OCTET STRING,
    	    wfDlsNbPeerIpAddr
    		IpAddress,
    	    wfDlsNbCapablePeerIpAddr
    		IpAddress,
    	    wfDlsNbQueries
    		Counter
        }

    wfDlsNbName OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (16))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The NetBIOS name of the remote station. Names that are shorter than 16
                characters are padded with ASCII spaces (0x20)"
        ::= { wfDlsNbEntry 1 }

    wfDlsNbPeerIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address of the DLSw peer for this NetBIOS name"
        ::= { wfDlsNbEntry 2 }

    wfDlsNbCapablePeerIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address of the DLSw peer for a capable NetBIOS name"
        ::= { wfDlsNbEntry 3 }

    wfDlsNbQueries OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of NETBIOS_NQ queries sent for this name"
        ::= { wfDlsNbEntry 4 }

    wfDlsMacTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDlsMacEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DLSw MAC address cache table.  inst_id[6] = wfDlsMacAddr"
        ::= { wfDlsGroup 8 }

    wfDlsMacEntry OBJECT-TYPE
        SYNTAX	WfDlsMacEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfDlsMac"
        INDEX	{ wfDlsMacAddr }
        ::= { wfDlsMacTable 1 }

    WfDlsMacEntry ::= SEQUENCE {
    	    wfDlsMacAddr
    		OCTET STRING,
    	    wfDlsMacPeerIpAddr
    		IpAddress,
    	    wfDlsMacCapablePeerIpAddr
    		IpAddress,
    	    wfDlsMacQueries
    		Counter
        }

    wfDlsMacAddr OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The MAC address of the remote station"
        ::= { wfDlsMacEntry 1 }

    wfDlsMacPeerIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address of the DLSw peer for this MAC address"
        ::= { wfDlsMacEntry 2 }

    wfDlsMacCapablePeerIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address of the DLSw peer for a capable MAC address"
        ::= { wfDlsMacEntry 3 }

    wfDlsMacQueries OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of CANUREACH queries sent for this name"
        ::= { wfDlsMacEntry 4 }

    wfDlsTrafficFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDlsTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "DLSw Traffic Filters"
        ::= { wfDlsGroup 9 }

    wfDlsTrafficFilterEntry OBJECT-TYPE
        SYNTAX	WfDlsTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in WfDlsTrafficFilterTable"
        INDEX	{ wfDlsTrafficFilterCircuit,
    		  wfDlsTrafficFilterRuleNumber,
    		  wfDlsTrafficFilterFragment }
        ::= { wfDlsTrafficFilterTable 1 }

    WfDlsTrafficFilterEntry ::= SEQUENCE {
    	    wfDlsTrafficFilterCreate
    		INTEGER,
    	    wfDlsTrafficFilterEnable
    		INTEGER,
    	    wfDlsTrafficFilterStatus
    		INTEGER,
    	    wfDlsTrafficFilterCounter
    		Counter,
    	    wfDlsTrafficFilterDefinition
    		OCTET STRING,
    	    wfDlsTrafficFilterReserved
    		INTEGER,
    	    wfDlsTrafficFilterCircuit
    		INTEGER,
    	    wfDlsTrafficFilterRuleNumber
    		INTEGER,
    	    wfDlsTrafficFilterFragment
    		INTEGER,
    	    wfDlsTrafficFilterName
    		DisplayString
        }

    wfDlsTrafficFilterCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the existence of the traffic filter rule:
                created - traffic filter exists
                delete - traffic filter does not exist and can be deleted"
        DEFVAL	{ created }
        ::= { wfDlsTrafficFilterEntry 1 }

    wfDlsTrafficFilterEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether or not the traffic filter rule should be used:
                enabled - activate the rule.
                disabled - inactivate the rule"
        DEFVAL	{ enabled }
        ::= { wfDlsTrafficFilterEntry 2 }

    wfDlsTrafficFilterStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    error(2),
    		    inactive(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines the current status of the traffic filter:
                inactive - the rule is not in use.
                active - the rule is being used.
                error - the application detected an error in the rule"
        DEFVAL	{ inactive }
        ::= { wfDlsTrafficFilterEntry 3 }

    wfDlsTrafficFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets that have matched this rule"
        ::= { wfDlsTrafficFilterEntry 4 }

    wfDlsTrafficFilterDefinition OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The filter rule definition"
        ::= { wfDlsTrafficFilterEntry 5 }

    wfDlsTrafficFilterReserved OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reserved field"
        ::= { wfDlsTrafficFilterEntry 6 }

    wfDlsTrafficFilterCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ID of the Bridge Circuit to which the filter is applied"
        ::= { wfDlsTrafficFilterEntry 7 }

    wfDlsTrafficFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ID for the rule"
        ::= { wfDlsTrafficFilterEntry 8 }

    wfDlsTrafficFilterFragment OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fragment number - for large rules"
        ::= { wfDlsTrafficFilterEntry 9 }

    wfDlsTrafficFilterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "name of the rule number"
        ::= { wfDlsTrafficFilterEntry 10 }

    wfDlsDefaultMacTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDlsDefaultMacEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table that contains DLSw Peer IP addresses for statically defined remote
                MAC addresses.  The IP address in this table will always be used for
                CANUREACH messages to the remote MAC address.
                inst_id[6] = wfDlsDefaultMacAddr"
        ::= { wfDlsGroup 10 }

    wfDlsDefaultMacEntry OBJECT-TYPE
        SYNTAX	WfDlsDefaultMacEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfDlsNbName"
        INDEX	{ wfDlsDefaultMacAddr }
        ::= { wfDlsDefaultMacTable 1 }

    WfDlsDefaultMacEntry ::= SEQUENCE {
    	    wfDlsDefaultMacDelete
    		INTEGER,
    	    wfDlsDefaultMacAddr
    		OCTET STRING,
    	    wfDlsDefaultMacPeerIp
    		IpAddress
        }

    wfDlsDefaultMacDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created. Users perform an SNMP SET
                operation on this object in order to create/delete a DLSw Default MAC
                record"
        DEFVAL	{ created }
        ::= { wfDlsDefaultMacEntry 1 }

    wfDlsDefaultMacAddr OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The MAC address of the destination station"
        ::= { wfDlsDefaultMacEntry 2 }

    wfDlsDefaultMacPeerIp OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The peer IP address to use for this MAC address"
        ::= { wfDlsDefaultMacEntry 3 }

    wfDlsDefaultNbTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDlsDefaultNbEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table that contains DLSw Peer IP addresses for statically defined remote
                NetBIOS names.  The IP address in this table will always be used for
                CANUREACH messages to the remote NetBIOS name.
                inst_id[16] = wfDlsDefaultNbName"
        ::= { wfDlsGroup 11 }

    wfDlsDefaultNbEntry OBJECT-TYPE
        SYNTAX	WfDlsDefaultNbEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfDlsDefaultNb"
        INDEX	{ wfDlsDefaultNbName }
        ::= { wfDlsDefaultNbTable 1 }

    WfDlsDefaultNbEntry ::= SEQUENCE {
    	    wfDlsDefaultNbDelete
    		INTEGER,
    	    wfDlsDefaultNbName
    		OCTET STRING,
    	    wfDlsDefaultNbPeerIp
    		IpAddress
        }

    wfDlsDefaultNbDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created. Users perform an SNMP SET
                operation on this object in order to create/delete a DLSw Default NetBIOS
                record"
        DEFVAL	{ created }
        ::= { wfDlsDefaultNbEntry 1 }

    wfDlsDefaultNbName OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (16))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The NetBIOS name of the destination station"
        ::= { wfDlsDefaultNbEntry 2 }

    wfDlsDefaultNbPeerIp OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The peer IP address to use for this NetBIOS name"
        ::= { wfDlsDefaultNbEntry 3 }

    wfDlsLocalDeviceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDlsLocalDeviceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The configuration table for devices locally terminated through DLSw"
        ::= { wfDlsGroup 12 }

    wfDlsLocalDeviceEntry OBJECT-TYPE
        SYNTAX	WfDlsLocalDeviceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the DLSw Local Device table"
        INDEX	{ wfDlsLocalDeviceCct,
    		  wfDlsLocalDeviceAddr }
        ::= { wfDlsLocalDeviceTable 1 }

    WfDlsLocalDeviceEntry ::= SEQUENCE {
    	    wfDlsLocalDeviceDelete
    		INTEGER,
    	    wfDlsLocalDeviceDisable
    		INTEGER,
    	    wfDlsLocalDeviceState
    		INTEGER,
    	    wfDlsLocalDeviceCct
    		INTEGER,
    	    wfDlsLocalDeviceAddr
    		INTEGER,
    	    wfDlsLocalDeviceSourceMac
    		OCTET STRING,
    	    wfDlsLocalDeviceSourceSap
    		INTEGER,
    	    wfDlsLocalDeviceDestMac
    		OCTET STRING,
    	    wfDlsLocalDeviceDestSap
    		INTEGER,
    	    wfDlsLocalDeviceXidValue
    		OCTET STRING,
    	    wfDlsLocalDeviceCanureachTimer
    		INTEGER,
    	    wfDlsLocalDeviceCanureachRetries
    		Gauge,
    	    wfDlsLocalDeviceLSTimer
    		INTEGER,
    	    wfDlsLocalDeviceLSRetries
    		Gauge,
    	    wfDlsLocalDeviceRcvCredit
    		INTEGER,
    	    wfDlsLocalDeviceTxCredit
    		INTEGER,
    	    wfDlsLocalDeviceCurTimer2
    		INTEGER,
    	    wfDlsLocalDeviceCurRetries2
    		Gauge
        }

    wfDlsLocalDeviceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created. Users perform an SNMP SET
                operation on this object in order to create/delete a DLSw Local Device"
        DEFVAL	{ created }
        ::= { wfDlsLocalDeviceEntry 1 }

    wfDlsLocalDeviceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled. Users perform an SNMP SET
                operation on this object in order to enable/disable a DLSw Local Device"
        DEFVAL	{ enabled }
        ::= { wfDlsLocalDeviceEntry 2 }

    wfDlsLocalDeviceState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of DLSw"
        DEFVAL	{ notpresent }
        ::= { wfDlsLocalDeviceEntry 3 }

    wfDlsLocalDeviceCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit on which this device is configured. Valid range (1-1023)"
        ::= { wfDlsLocalDeviceEntry 4 }

    wfDlsLocalDeviceAddr OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The physical address for this device. Valid range is based on media"
        ::= { wfDlsLocalDeviceEntry 5 }

    wfDlsLocalDeviceSourceMac OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The source MAC address of an emulated Token Ring end station for this
                device.  Values are standard MSB Token Ring MAC addresses"
        ::= { wfDlsLocalDeviceEntry 6 }

    wfDlsLocalDeviceSourceSap OBJECT-TYPE
        SYNTAX	INTEGER(0..254)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The source SAP of an emulated Token Ring end station for this device.
                Values are standard SNA SAPs"
        DEFVAL	{ 4 }
        ::= { wfDlsLocalDeviceEntry 7 }

    wfDlsLocalDeviceDestMac OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The destination MAC address for this device. Values are standard MSB Token
                Ring MAC addresses"
        ::= { wfDlsLocalDeviceEntry 8 }

    wfDlsLocalDeviceDestSap OBJECT-TYPE
        SYNTAX	INTEGER(0..254)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The destination SAP for this device.  Values are standard SNA SAPs"
        DEFVAL	{ 4 }
        ::= { wfDlsLocalDeviceEntry 9 }

    wfDlsLocalDeviceXidValue OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The station XID value. Value must match the IDBLK and IDNUM on the host"
        ::= { wfDlsLocalDeviceEntry 10 }

    wfDlsLocalDeviceCanureachTimer OBJECT-TYPE
        SYNTAX	INTEGER(0..3600)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The time interval in seconds that a canureach is sent to the remote DLS
                peer to establish a session. A minimum value of 1 means that a canureach
                will be transmitted once a second, a maximum value of 3600 means that a
                canureach will be transmitted once an hour, and a value of 0 means that
                no canureach will be transmitted"
        DEFVAL	{ 30 }
        ::= { wfDlsLocalDeviceEntry 11 }

    wfDlsLocalDeviceCanureachRetries OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of times a canureach is sent to the remote DLS peer to
                establish a session.  A minimum value of 0 means that no canureach messages
                will be transmitted, a maximum value of 0xFFFFFFFF means that an infinite
                number of canureach messages will be transmitted for this connection.
                The default is set to inifinite: 4294967295  = 0xFFFFFFFF"
        DEFVAL	{ 10 }
        ::= { wfDlsLocalDeviceEntry 12 }

    wfDlsLocalDeviceLSTimer OBJECT-TYPE
        SYNTAX	INTEGER(0..3600)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The time interval in seconds that a connect request is sent to the local
                SDLC device to establish a session.  A minimum value of 1 means that a
                connect request will be sent once a second, a maximum value of 3600 means
                that a connect request will be sent once an hour, and a value of 0 means
                that no connect requests will be sent"
        DEFVAL	{ 30 }
        ::= { wfDlsLocalDeviceEntry 13 }

    wfDlsLocalDeviceLSRetries OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of times a connect request is sent to the local SDLC
                device to establish a session.  A minimum value of 0 means that no connect
                requests will be sent, a maximum value of 0xFFFFFFFF means that an infinite
                number of connect requests will be sent for this connection.
                The default is set to infinite: 4294967295 = 0xFFFFFFFF"
        DEFVAL	{ 10 }
        ::= { wfDlsLocalDeviceEntry 14 }

    wfDlsLocalDeviceRcvCredit OBJECT-TYPE
        SYNTAX	INTEGER(0..200)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive credit count. Maximum number of frames SDLC is allowed to send to
                DLS.  A minimum value of 1 means that DLS will only accept up to 1 frame
                from SDLC before it updates SDLCs credit.  A value of 0 means that DLS
                can receive an infinite number of frames from SDLC without the need to
                update SDLC's credit"
        DEFVAL	{ 10 }
        ::= { wfDlsLocalDeviceEntry 15 }

    wfDlsLocalDeviceTxCredit OBJECT-TYPE
        SYNTAX	INTEGER(0..200)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit credit count. Maximum number of frames DLS is allowed to send to
                SDLC.  A minimum value of 1 means that DLS can only send one frame to SDLC
                until it receives credit update from SDLC.  A value of 0 means that DLS can
                send an infinite number of frames to SDLC without the need to update SDLC's
                credit"
        DEFVAL	{ 10 }
        ::= { wfDlsLocalDeviceEntry 16 }

    wfDlsLocalDeviceCurTimer2 OBJECT-TYPE
        SYNTAX	INTEGER(0..4294967295)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The time interval in seconds that a canureach is sent to the remote DLS
                peer to establish a session. A minimum value of 1 means that a canureach
                will be transmitted once a second, a maximum value of 0xFFFFFFFF means that
                a canureach will be transmitted once every timer2 seconds, and a value
                of 0 means that no canureach will be transmitted"
        DEFVAL	{ 30 }
        ::= { wfDlsLocalDeviceEntry 17 }

    wfDlsLocalDeviceCurRetries2 OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of times a canureach is sent to the remote DLS peer to
                establish a session.  A minimum value of 0 means that no canureach messages
                will be transmitted, a maximum value of 0xFFFFFFFF means that an infinite
                number of canureach messages will be transmitted for this connection.
                The default is set to inifinite: 4294967295  = 0xFFFFFFFF"
        DEFVAL	{ 4294967295 }
        ::= { wfDlsLocalDeviceEntry 18 }

    wfDlsLocalCircuitTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDlsLocalCircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "communicate with each other via a virtual circuit gate"
        ::= { wfDlsGroup 13 }

    wfDlsLocalCircuitEntry OBJECT-TYPE
        SYNTAX	WfDlsLocalCircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the DLSw Local Circuit table"
        INDEX	{ wfDlsLocalCircuitCct }
        ::= { wfDlsLocalCircuitTable 1 }

    WfDlsLocalCircuitEntry ::= SEQUENCE {
    	    wfDlsLocalCircuitDelete
    		INTEGER,
    	    wfDlsLocalCircuitDisable
    		INTEGER,
    	    wfDlsLocalCircuitState
    		INTEGER,
    	    wfDlsLocalCircuitCct
    		INTEGER,
    	    wfDlsLocalCircuitClientCount
    		INTEGER,
    	    wfDlsLocalCircuitFrameCount
    		INTEGER,
    	    wfDlsLocalCircuitSlot
    		INTEGER,
    	    wfDlsLocalCctDefaultMac
    		OCTET STRING
        }

    wfDlsLocalCircuitDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfDlsLocalCircuitEntry 1 }

    wfDlsLocalCircuitDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfDlsLocalCircuitEntry 2 }

    wfDlsLocalCircuitState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit state"
        DEFVAL	{ down }
        ::= { wfDlsLocalCircuitEntry 3 }

    wfDlsLocalCircuitCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Local Circuit  ID"
        ::= { wfDlsLocalCircuitEntry 4 }

    wfDlsLocalCircuitClientCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of clients registerd"
        ::= { wfDlsLocalCircuitEntry 5 }

    wfDlsLocalCircuitFrameCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of frames passed"
        ::= { wfDlsLocalCircuitEntry 6 }

    wfDlsLocalCircuitSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Slot on which this cct resides"
        ::= { wfDlsLocalCircuitEntry 7 }

    wfDlsLocalCctDefaultMac OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Default Mac address associated with this circuit"
        ::= { wfDlsLocalCircuitEntry 8 }

    END  -- Wellfleet-DLS-MIB
-- @(#)WSCCS y/mibs-ds1.mib 1.1 8/30/95
Wellfleet-DS1-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:39:57 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfDs1Group
        FROM Wellfleet-COMMON-MIB;


    wfDs1Config OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1ConfigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS1 Configuration table"
        ::= { wfDs1Group 1 }

    wfDs1ConfigEntry OBJECT-TYPE
        SYNTAX	WfDs1ConfigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS1 configuration objects; wfDs1LineIndex
                corresponds to Wellfleet circuit number"
        INDEX	{ wfDs1LineIndex }
        ::= { wfDs1Config 1 }

    WfDs1ConfigEntry ::= SEQUENCE {
    	    wfDs1LineIndex
    		INTEGER,
    	    wfDs1TimeElapsed
    		INTEGER,
    	    wfDs1ValidIntervals
    		INTEGER,
    	    wfDs1LineType
    		INTEGER,
    	    wfDs1ZeroCoding
    		INTEGER,
    	    wfDs1SendCode
    		INTEGER,
    	    wfDs1CircuitIdentifier
    		DisplayString,
    	    wfDs1LoopbackConfig
    		INTEGER,
    	    wfDs1LineStatus
    		INTEGER
        }

    wfDs1LineIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDs1ConfigEntry 1 }

    wfDs1TimeElapsed OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "1..900 seconds within the current 15-minute interval"
        ::= { wfDs1ConfigEntry 2 }

    wfDs1ValidIntervals OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "0..96 previous intervals that valid data
                were collected. This is 96 unless the CSU
                device was brought on line within the last 24
                hours."
        ::= { wfDs1ConfigEntry 3 }

    wfDs1LineType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ds1ansi-esf(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the variety of DS1 implementing this circuit"
        ::= { wfDs1ConfigEntry 4 }

    wfDs1ZeroCoding OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ds1b8zs(2),
    		    ds1zbtsi(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the variety of Zero Code Suppression used on the link"
        ::= { wfDs1ConfigEntry 5 }

    wfDs1SendCode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ds1sendnocode(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the type of code being sent across the DS1 circuit by
                the CSU"
        ::= { wfDs1ConfigEntry 6 }

    wfDs1CircuitIdentifier OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the transmission vendor's circuit identifier"
        ::= { wfDs1ConfigEntry 7 }

    wfDs1LoopbackConfig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ds1noloop(1),
    		    ds1mgrpayloadloop(2),
    		    ds1mgrlineloop(3),
    		    ds1netreqpayloadloop(4),
    		    ds1netreqlineloop(5),
    		    ds1otherloop(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the loopback state of the CSU"
        ::= { wfDs1ConfigEntry 8 }

    wfDs1LineStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ds1noalarm(1),
    		    ds1farendalarm(2),
    		    ds1alarmindicationsignal(4),
    		    ds1lossofframe(8),
    		    ds1lossofsignal(16),
    		    ds1loopbackstate(32)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the state of the DS1 line"
        ::= { wfDs1ConfigEntry 9 }

    wfDs1Current OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1CurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS1 Current table"
        ::= { wfDs1Group 2 }

    wfDs1CurrentEntry OBJECT-TYPE
        SYNTAX	WfDs1CurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS1 current objects - wfDs1CurrentIndex
                corresponds to Wellfleet circuit number"
        INDEX	{ wfDs1CurrentIndex }
        ::= { wfDs1Current 1 }

    WfDs1CurrentEntry ::= SEQUENCE {
    	    wfDs1CurrentIndex
    		INTEGER,
    	    wfDs1CurrentESs
    		Counter,
    	    wfDs1CurrentSESs
    		Counter,
    	    wfDs1CurrentSEFs
    		Counter,
    	    wfDs1CurrentUASs
    		Counter,
    	    wfDs1CurrentBPVs
    		Counter,
    	    wfDs1CurrentCVs
    		Counter
        }

    wfDs1CurrentIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDs1CurrentEntry 1 }

    wfDs1CurrentESs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of errored seconds in the current interval"
        ::= { wfDs1CurrentEntry 2 }

    wfDs1CurrentSESs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of severely errored seconds in the
                current interval"
        ::= { wfDs1CurrentEntry 3 }

    wfDs1CurrentSEFs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of severely errored framing seconds in the current
                interval"
        ::= { wfDs1CurrentEntry 4 }

    wfDs1CurrentUASs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of unavailable seconds in the current interval"
        ::= { wfDs1CurrentEntry 5 }

    wfDs1CurrentBPVs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of bipolar violations in the current interval"
        ::= { wfDs1CurrentEntry 6 }

    wfDs1CurrentCVs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of code violation error events in the
                current interval"
        ::= { wfDs1CurrentEntry 7 }

    wfDs1Interval OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1IntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS1 Interval table"
        ::= { wfDs1Group 3 }

    wfDs1IntervalEntry OBJECT-TYPE
        SYNTAX	WfDs1IntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS1 interval objects - wfDs1IntervalIndex
                corresponds to Wellfleet circuit number,
                wfDs1IntervalNumber is the numbered previous
                15-minute interval"
        INDEX	{ wfDs1IntervalIndex,
    		  wfDs1IntervalNumber }
        ::= { wfDs1Interval 1 }

    WfDs1IntervalEntry ::= SEQUENCE {
    	    wfDs1IntervalIndex
    		INTEGER,
    	    wfDs1IntervalNumber
    		INTEGER,
    	    wfDs1IntervalESs
    		Gauge,
    	    wfDs1IntervalSESs
    		Gauge,
    	    wfDs1IntervalSEFs
    		Gauge,
    	    wfDs1IntervalUASs
    		Gauge,
    	    wfDs1IntervalBPVs
    		Gauge,
    	    wfDs1IntervalCVs
    		Gauge
        }

    wfDs1IntervalIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDs1IntervalEntry 1 }

    wfDs1IntervalNumber OBJECT-TYPE
        SYNTAX	INTEGER(1..96)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "1..96 where 1 is the most recent 15-minute interval and 96 is
                the least"
        ::= { wfDs1IntervalEntry 2 }

    wfDs1IntervalESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of errored seconds in the specified interval"
        ::= { wfDs1IntervalEntry 3 }

    wfDs1IntervalSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of severely errored seconds in the specified
                interval"
        ::= { wfDs1IntervalEntry 4 }

    wfDs1IntervalSEFs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of severely errored framing seconds in the specified
                interval"
        ::= { wfDs1IntervalEntry 5 }

    wfDs1IntervalUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of unavailable seconds in the specified interval"
        ::= { wfDs1IntervalEntry 6 }

    wfDs1IntervalBPVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of bipolar violations in the specified interval"
        ::= { wfDs1IntervalEntry 7 }

    wfDs1IntervalCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of code violation error events in the
                specified interval"
        ::= { wfDs1IntervalEntry 8 }

    wfDs1Total OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1TotalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS1 Total table"
        ::= { wfDs1Group 4 }

    wfDs1TotalEntry OBJECT-TYPE
        SYNTAX	WfDs1TotalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS1 total objects - wfDs1TotalIndex
                corresponds to Wellfleet circuit number"
        INDEX	{ wfDs1TotalIndex }
        ::= { wfDs1Total 1 }

    WfDs1TotalEntry ::= SEQUENCE {
    	    wfDs1TotalIndex
    		INTEGER,
    	    wfDs1TotalESs
    		Gauge,
    	    wfDs1TotalSESs
    		Gauge,
    	    wfDs1TotalSEFs
    		Gauge,
    	    wfDs1TotalUASs
    		Gauge,
    	    wfDs1TotalBPVs
    		Gauge,
    	    wfDs1TotalCVs
    		Gauge
        }

    wfDs1TotalIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDs1TotalEntry 1 }

    wfDs1TotalESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of errored seconds"
        ::= { wfDs1TotalEntry 2 }

    wfDs1TotalSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of severely errored seconds"
        ::= { wfDs1TotalEntry 3 }

    wfDs1TotalSEFs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of severely errored framing seconds"
        ::= { wfDs1TotalEntry 4 }

    wfDs1TotalUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total number of unavailable seconds"
        ::= { wfDs1TotalEntry 5 }

    wfDs1TotalBPVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of bipolar violations"
        ::= { wfDs1TotalEntry 6 }

    wfDs1TotalCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of code violation error events"
        ::= { wfDs1TotalEntry 7 }

    wfDs1FeCurrent OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1FeCurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS1 Far End Current table"
        ::= { wfDs1Group 5 }

    wfDs1FeCurrentEntry OBJECT-TYPE
        SYNTAX	WfDs1FeCurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS1 far end current objects
                wfDs1CurrentIndex corresponds to Wellfleet circuit
                number"
        INDEX	{ wfDs1FeCurrentIndex }
        ::= { wfDs1FeCurrent 1 }

    WfDs1FeCurrentEntry ::= SEQUENCE {
    	    wfDs1FeCurrentIndex
    		INTEGER,
    	    wfDs1FeCurrentESs
    		Counter,
    	    wfDs1FeCurrentSESs
    		Counter,
    	    wfDs1FeCurrentSEFs
    		Counter,
    	    wfDs1FeCurrentBPVs
    		Counter,
    	    wfDs1FeCurrentCVs
    		Counter
        }

    wfDs1FeCurrentIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDs1FeCurrentEntry 1 }

    wfDs1FeCurrentESs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of errored seconds in the current interval"
        ::= { wfDs1FeCurrentEntry 2 }

    wfDs1FeCurrentSESs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of severely errored seconds in the
                current interval"
        ::= { wfDs1FeCurrentEntry 3 }

    wfDs1FeCurrentSEFs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of severely errored framing seconds in the current
                interval"
        ::= { wfDs1FeCurrentEntry 4 }

    wfDs1FeCurrentBPVs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of bipolar violations in the current interval"
        ::= { wfDs1FeCurrentEntry 5 }

    wfDs1FeCurrentCVs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of code violation error events in the
                current interval"
        ::= { wfDs1FeCurrentEntry 6 }

    wfDs1FeInterval OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1FeIntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS1 Far End Interval table"
        ::= { wfDs1Group 6 }

    wfDs1FeIntervalEntry OBJECT-TYPE
        SYNTAX	WfDs1FeIntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS1 far end interval objects -
                wfDs1FeIntervalIndex corresponds to Wellfleet circuit
                number, wfDs1FeIntervalNumber is the numbered
                previous 15-minute interval"
        INDEX	{ wfDs1FeIntervalIndex,
    		  wfDs1FeIntervalNumber }
        ::= { wfDs1FeInterval 1 }

    WfDs1FeIntervalEntry ::= SEQUENCE {
    	    wfDs1FeIntervalIndex
    		INTEGER,
    	    wfDs1FeIntervalNumber
    		INTEGER,
    	    wfDs1FeIntervalESs
    		Gauge,
    	    wfDs1FeIntervalSESs
    		Gauge,
    	    wfDs1FeIntervalSEFs
    		Gauge,
    	    wfDs1FeIntervalBPVs
    		Gauge,
    	    wfDs1FeIntervalCVs
    		Gauge
        }

    wfDs1FeIntervalIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDs1FeIntervalEntry 1 }

    wfDs1FeIntervalNumber OBJECT-TYPE
        SYNTAX	INTEGER(1..96)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "1..96 where 1 is the most recent 15-minute interval and 96 is
                the least"
        ::= { wfDs1FeIntervalEntry 2 }

    wfDs1FeIntervalESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of errored seconds in the specified interval"
        ::= { wfDs1FeIntervalEntry 3 }

    wfDs1FeIntervalSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of severely errored seconds in the specified
                interval"
        ::= { wfDs1FeIntervalEntry 4 }

    wfDs1FeIntervalSEFs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of severely errored framing seconds in the specified
                interval"
        ::= { wfDs1FeIntervalEntry 5 }

    wfDs1FeIntervalBPVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of bipolar violations in the specified interval"
        ::= { wfDs1FeIntervalEntry 6 }

    wfDs1FeIntervalCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of code violation error events in the
                specified interval"
        ::= { wfDs1FeIntervalEntry 7 }

    wfDs1FeTotal OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1FeTotalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS1 Far End Total table"
        ::= { wfDs1Group 7 }

    wfDs1FeTotalEntry OBJECT-TYPE
        SYNTAX	WfDs1FeTotalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS1 far end total objects - wfDs1FeTotalIndex
                corresponds to Wellfleet circuit number"
        INDEX	{ wfDs1FeTotalIndex }
        ::= { wfDs1FeTotal 1 }

    WfDs1FeTotalEntry ::= SEQUENCE {
    	    wfDs1FeTotalIndex
    		INTEGER,
    	    wfDs1FeTotalESs
    		Gauge,
    	    wfDs1FeTotalSESs
    		Gauge,
    	    wfDs1FeTotalSEFs
    		Gauge,
    	    wfDs1FeTotalBPVs
    		Gauge,
    	    wfDs1FeTotalCVs
    		Gauge
        }

    wfDs1FeTotalIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDs1FeTotalEntry 1 }

    wfDs1FeTotalESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of errored seconds"
        ::= { wfDs1FeTotalEntry 2 }

    wfDs1FeTotalSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of severely errored seconds"
        ::= { wfDs1FeTotalEntry 3 }

    wfDs1FeTotalSEFs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of severely errored framing seconds"
        ::= { wfDs1FeTotalEntry 4 }

    wfDs1FeTotalBPVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of bipolar violations"
        ::= { wfDs1FeTotalEntry 5 }

    wfDs1FeTotalCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of code violation error events"
        ::= { wfDs1FeTotalEntry 6 }

    END  -- Wellfleet-DS1-MIB
-- @(#)WSCCS s/mibs-ds1e1.mib 1.2 10/9/95
Wellfleet-DS1E1-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:40:04 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfMcT1Group, wfDs1E1Group
        FROM Wellfleet-COMMON-MIB;


    wfDs1E1ModuleTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1E1ModuleEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This file describes the MIBS for managing the Multichannel T1 and E1
                link modules.

                 DS1E1 MOD record - Contains DS1E1 module Configuration parameters"
        ::= { wfDs1E1Group 1 }

    wfDs1E1ModuleEntry OBJECT-TYPE
        SYNTAX	WfDs1E1ModuleEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the DS1E1 Base table"
        INDEX	{ wfDs1E1ModuleSlot,
    		  wfDs1E1ModuleModule }
        ::= { wfDs1E1ModuleTable 1 }

    WfDs1E1ModuleEntry ::= SEQUENCE {
    	    wfDs1E1ModuleDelete
    		INTEGER,
    	    wfDs1E1ModuleSlot
    		INTEGER,
    	    wfDs1E1ModuleModule
    		INTEGER,
    	    wfDs1E1ModulePrimaryClock
    		INTEGER,
    	    wfDs1E1ModuleSecondaryClock
    		INTEGER,
    	    wfDs1E1ModuleCurrentClock
    		INTEGER,
    	    wfDs1E1ModuleExtClockOperational
    		INTEGER,
    	    wfDs1E1ModuleLoop1ClockOperational
    		INTEGER,
    	    wfDs1E1ModuleLoop2ClockOperational
		INTEGER,
	    wfDs1E1ModuleLoop3ClockOperational
		INTEGER,
	    wfDs1E1ModuleLoop4ClockOperational
    		INTEGER
        }

    wfDs1E1ModuleDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfDs1E1ModuleEntry 1 }

    wfDs1E1ModuleSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID slot, filled in by driver"
        ::= { wfDs1E1ModuleEntry 2 }

    wfDs1E1ModuleModule OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID slot, filled in by driver"
        ::= { wfDs1E1ModuleEntry 3 }

    wfDs1E1ModulePrimaryClock OBJECT-TYPE
        SYNTAX	INTEGER {
    		    external(1),
    		    loop1(2),
    		    loop2(3),
    		    internal(4),
		    loop3(5),
		    loop4(6)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the primary source for transmit timing. Both ports use the same
                transmit timing source.  The options for timing source are internal timing
                source, loop timing from either port and an external timing source."
        DEFVAL	{ loop1 }
        ::= { wfDs1E1ModuleEntry 4 }

    wfDs1E1ModuleSecondaryClock OBJECT-TYPE
        SYNTAX	INTEGER {
    		    external(1),
    		    loop1(2),
    		    loop2(3),
    		    internal(4),
		    loop3(5),
		    loop4(6)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the secondary source for transmit timing. During normal operation
                transmit timing is derived from the primary timing source. If the primary
                timing source fails, the software switches to secondary timing source."
        DEFVAL	{ internal }
        ::= { wfDs1E1ModuleEntry 5 }

    wfDs1E1ModuleCurrentClock OBJECT-TYPE
        SYNTAX	INTEGER {
    		    external(1),
    		    loop1(2),
    		    loop2(3),
    		    internal(4),
		    loop3(5),
		    loop4(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the clock source currently in use"
        ::= { wfDs1E1ModuleEntry 6 }

    wfDs1E1ModuleExtClockOperational OBJECT-TYPE
        SYNTAX	INTEGER {
    		    present(1),
    		    notpresent(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the External clock is operational"
        DEFVAL	{ present }
        ::= { wfDs1E1ModuleEntry 7 }

    wfDs1E1ModuleLoop1ClockOperational OBJECT-TYPE
        SYNTAX	INTEGER {
    		    present(1),
    		    notpresent(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the timing source from port 1 is operational"
        DEFVAL	{ present }
        ::= { wfDs1E1ModuleEntry 8 }

    wfDs1E1ModuleLoop2ClockOperational OBJECT-TYPE
        SYNTAX	INTEGER {
    		    present(1),
    		    notpresent(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the timing source from port 2 is operational"
        DEFVAL	{ present }
        ::= { wfDs1E1ModuleEntry 9 }

    wfDs1E1ModuleLoop3ClockOperational OBJECT-TYPE
	SYNTAX	INTEGER {
		    present(1),
		    notpresent(2)
		}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Indicates whether the timing source from port 3 is operational"
	DEFVAL	{ present }
	::= { wfDs1E1ModuleEntry 10 }

    wfDs1E1ModuleLoop4ClockOperational OBJECT-TYPE
	SYNTAX	INTEGER {
		    present(1),
		    notpresent(2)
		}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Indicates whether the timing source from port 4 is operational"
	DEFVAL	{ present }
	::= { wfDs1E1ModuleEntry 11 }

    wfDs1E1PortMapTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1E1PortMapEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "DS1E1  port map record - Used by the driver to identify the LineNumber
                for the Port. The only table indexed by slot.connector. Its purpose is
                to map slot.connector to a PortLineNumber."
        ::= { wfDs1E1Group 2 }

    wfDs1E1PortMapEntry OBJECT-TYPE
        SYNTAX	WfDs1E1PortMapEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the DS1E1 port table"
        INDEX	{ wfDs1E1PortMapSlot,
    		  wfDs1E1PortMapConnector }
        ::= { wfDs1E1PortMapTable 1 }

    WfDs1E1PortMapEntry ::= SEQUENCE {
    	    wfDs1E1PortMapDelete
    		INTEGER,
    	    wfDs1E1PortMapSlot
    		INTEGER,
    	    wfDs1E1PortMapConnector
    		INTEGER,
    	    wfDs1E1PortMapLineNumber
    		INTEGER,
    	    wfDs1E1PortMapDslId
    		INTEGER
        }

    wfDs1E1PortMapDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfDs1E1PortMapEntry 1 }

    wfDs1E1PortMapSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Slot, filled in by driver"
        ::= { wfDs1E1PortMapEntry 2 }

    wfDs1E1PortMapConnector OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Connector, filled in by driver"
        ::= { wfDs1E1PortMapEntry 3 }

    wfDs1E1PortMapLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "LineNumber off of which all other MIB instances are indexed."
        ::= { wfDs1E1PortMapEntry 4 }

    wfDs1E1PortMapDslId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "When this T1/E1 interface is configured for Primary Rate ISDN (PRI) this
                attribute provides the ID of this Digital Subscriber Loop (DSL) interface.
                Each T1 or E1 PRI interface on a particular slot is assigned a unique DSL
                ID."
        ::= { wfDs1E1PortMapEntry 5 }

    wfDs1E1PortTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1E1PortEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "DS1E1  port record - Contains MUNICH32 Configuration parameters
                "
        ::= { wfDs1E1Group 3 }

    wfDs1E1PortEntry OBJECT-TYPE
        SYNTAX	WfDs1E1PortEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the DS1E1 port table"
        INDEX	{ wfDs1E1PortLineNumber }
        ::= { wfDs1E1PortTable 1 }

    WfDs1E1PortEntry ::= SEQUENCE {
    	    wfDs1E1PortDelete
    		INTEGER,
    	    wfDs1E1PortDisable
    		INTEGER,
    	    wfDs1E1PortState
    		INTEGER,
    	    wfDs1E1PortLineNumber
    		INTEGER,
    	    wfDs1E1PortMtu
    		INTEGER,
    	    wfDs1E1PortSignalLevel
    		INTEGER,
    	    wfDs1E1PortSetupAlarmThreshold
    		INTEGER,
    	    wfDs1E1PortClearAlarmThreshold
    		INTEGER,
    	    wfDs1E1PortFdlTargetHdlcAddress
    		INTEGER,
    	    wfDs1E1PortAcceptLoopbackRequest
    		INTEGER,
    	    wfDs1E1PortLoopbackState
    		INTEGER,
    	    wfDs1E1PortBertMode
    		INTEGER,
    	    wfDs1E1PortBertTestPattern
    		INTEGER,
    	    wfDs1E1PortBertSendAlarm
    		INTEGER,
    	    wfDs1E1PortInternationalBit
    		INTEGER,
    	    wfDs1E1PortLineApplication
    		INTEGER,
    	    wfDs1E1PortLoggingEnableMask
		INTEGER,
	    wfDs1E1PortSendPrmCrAddressBit
		INTEGER,
	    wfDs1E1PortAcceptPrmCrAddressBit
    		INTEGER
        }

    wfDs1E1PortDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfDs1E1PortEntry 1 }

    wfDs1E1PortDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfDs1E1PortEntry 2 }

    wfDs1E1PortState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    yelalarm(2),
    		    aisalarm(3),
    		    redalarm(4),
    		    loopback(10),
    		    bert(11),
    		    init(15),
    		    notpresent(20)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line Driver state variable"
        DEFVAL	{ notpresent }
        ::= { wfDs1E1PortEntry 3 }

    wfDs1E1PortLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "LineNumber for this port. This value is assigned at configuration time
                and uniquely identifies this interface.  This LineNumber not equal to
                any of the LineNumbers assigned to the LogicalLines configured through
                this Port."
        ::= { wfDs1E1PortEntry 4 }

    wfDs1E1PortMtu OBJECT-TYPE
        SYNTAX	INTEGER(3..4608)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "MTU parameter. Obsoleted, it is no longer referenced."
        DEFVAL	{ 1600 }
        ::= { wfDs1E1PortEntry 5 }

    wfDs1E1PortSignalLevel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ds1minus15(1),
    		    ds1minus7point5(2),
    		    zeropoint0(3),
    		    dsx1pluspoint5(4),
    		    dsx1pluspoint8(5),
    		    dsx1plus1point1(6),
    		    dsx1plus1point5(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies T1 transmit power level, in terms of DB. They
                translate into cable length as follows:
                0.0dB -> 0-133   ft
                0.5dB -> 133-266 ft
                0.8dB -> 266-399 ft
                1.1dB -> 399-533 ft
                1.5dB -> 533-655 ft"
        DEFVAL	{ zeropoint0 }
        ::= { wfDs1E1PortEntry 6 }

    wfDs1E1PortSetupAlarmThreshold OBJECT-TYPE
        SYNTAX	INTEGER(2..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies setup time for performance failure conditions,
                in seconds. When a performance defect is present for greater
                than the time specified by this parameter a performance
                failure is registered and a message is logged."
        DEFVAL	{ 2 }
        ::= { wfDs1E1PortEntry 7 }

    wfDs1E1PortClearAlarmThreshold OBJECT-TYPE
        SYNTAX	INTEGER(2..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies clear time for performance failure conditions,
                in seconds. When a performance failure condition has been
                cleared for greater than the time specified by this parameter
                then the failure cleared condition is registered and a
                message is logged."
        DEFVAL	{ 2 }
        ::= { wfDs1E1PortEntry 8 }

    wfDs1E1PortFdlTargetHdlcAddress OBJECT-TYPE
        SYNTAX	INTEGER {
    		    az(1),
    		    by(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selects between the two FDL target address modes. This determines
                whether the near-end FDL will respond to HDLC address AZ or
                BY in the FDL messages received from the far-end."
        DEFVAL	{ by }
        ::= { wfDs1E1PortEntry 9 }

    wfDs1E1PortAcceptLoopbackRequest OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The DS1E1 link module is capable of detecting loop up and loop down
                codes received from the far end. This parameter enables and disables
                loop up/down code detection circuitry.  If enabled,  this interface
                will accept and comply with a request to go into loopback mode from
                a far end device."
        DEFVAL	{ enabled }
        ::= { wfDs1E1PortEntry 10 }

    wfDs1E1PortLoopbackState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    noloop(1),
    		    mgrreqpayloadloop(2),
    		    mgrreqlineloop(3),
    		    netreqpayloadloop(4),
    		    netreqlineloop(5),
    		    otherloop(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the current loopback state of this interface. The interface
                can be in one the following states:

                 Payload Loopback
                 Line Loopback
                 no loopback

                Payload or Line loopback modes can be initiated by either of two methods:

                Manager requested Loopback (MGRREQPAYLOADLOOP or MGRREQLINELOOP) is
                initiated by the Manager of this device.

                Network requested Loopback (NETREQPAYLOADLOOP or NETREQLINELOOP) is
                initiated by this interface receiving an in-band request on the network
                from the far end device."
        DEFVAL	{ noloop }
        ::= { wfDs1E1PortEntry 11 }

    wfDs1E1PortBertMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "An option to generate and analyze specific test patterns
                is provided in BERT mode of operation. Only one port
                can be in BERT mode at a time. This attribute selects
                normal or BERT mode of operation"
        DEFVAL	{ disabled }
        ::= { wfDs1E1PortEntry 12 }

    wfDs1E1PortBertTestPattern OBJECT-TYPE
        SYNTAX	INTEGER {
    		    zeros(1),
    		    ones(2),
    		    qrss(3),
    		    two15(4),
    		    two15inv(5),
    		    two20(6),
    		    two23(7),
    		    two23inv(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "When a port is in BERT mode, it is capable of generating
                a set of known patterns. This paramater selects between those
                patterns"
        DEFVAL	{ ones }
        ::= { wfDs1E1PortEntry 13 }

    wfDs1E1PortBertSendAlarm OBJECT-TYPE
        SYNTAX	INTEGER {
    		    aisalarm(1),
    		    yelalarm(2),
    		    disabled(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies a Alarm Indication Signal (AIS) (Blue Alarm) or yellow alarm to
                be transmitted while in BERT mode."
        DEFVAL	{ disabled }
        ::= { wfDs1E1PortEntry 14 }

    wfDs1E1PortInternationalBit OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies if the International bit should be set in
                the E1 frame"
        DEFVAL	{ disabled }
        ::= { wfDs1E1PortEntry 15 }

    wfDs1E1PortLineApplication OBJECT-TYPE
        SYNTAX	INTEGER {
    		    nonpri(1),
    		    pri(2),
    		    mixed(3),
		    frswpri(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the application that the LogicalLines of this Port will provide.
                NONPRI indicates that all of the LogicalLines will have a permanent Cct
                number and will not be used to dial to varying destinations.  PRI
                indicates that some or all of the ds0s of this port will be used for switched
                Ccts using ISDN. MIXED indicates that some of the ds0s are being used for
                switched Ccts using ISDN and some are being used for non PRI permanent
                connections for other applications such as leased lines or Frame Relay."
        DEFVAL	{ nonpri }
        ::= { wfDs1E1PortEntry 16 }

    wfDs1E1PortLoggingEnableMask OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies which catagories of extended event log messages are enabled for
                logging.  Current bit definitions are:

                     bit 31                       bit 0
                     +--------------------------------+
                     |                                |
                     +--------------------------------+

                     bit0      ISDN PRI debug messages
                     bit1-31   reserved"
        ::= { wfDs1E1PortEntry 17 }

    wfDs1E1PortSendPrmCrAddressBit OBJECT-TYPE
	SYNTAX	INTEGER {
		    prmCi(1),
		    prmCarrier(2)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Specifies the Performance message as originating from either a
		Carrier or Customer Installation (CI).  As the performance
		message is sent out the FDL, the PRM Opening Address C/R bit
		is either set (Carrier) or cleared (CI).  This feature is only
		supported by the QMCT1."
	DEFVAL	{ prmCi }
	::= { wfDs1E1PortEntry 18 }

    wfDs1E1PortAcceptPrmCrAddressBit OBJECT-TYPE
	SYNTAX	INTEGER {
		    prmCi(1),
		    prmCarrier(2)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Accepts only Performance messages originating from either a
		Carrier or Customer Installation (CI), as determined below.
		The PRM Opening Address C/R bit is read upon receiving a
		performance message.  If the Performance message does not
		originate from the expected source, it is discarded.  This
		feature is only supported by the QMCT1."
	DEFVAL	{ prmCi }
	::= { wfDs1E1PortEntry 19 }

    wfDs1E1ConfigTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1E1ConfigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "DS1E1 Configuration Table. This is a copy of the dsx1ConfigTable found
                in RFC1406. The table is indexed with PortLineNumber instead of ifIndex,
                however."
        ::= { wfDs1E1Group 4 }

    wfDs1E1ConfigEntry OBJECT-TYPE
        SYNTAX	WfDs1E1ConfigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the DS1E1 config table"
        INDEX	{ wfDs1E1ConfigPortLineNumber }
        ::= { wfDs1E1ConfigTable 1 }

    WfDs1E1ConfigEntry ::= SEQUENCE {
    	    wfDs1E1ConfigDelete
    		INTEGER,
    	    wfDs1E1ConfigPortLineNumber
    		INTEGER,
    	    wfDs1E1ConfigIfIndex
    		INTEGER,
    	    wfDs1E1ConfigTimeElapsed
    		INTEGER,
    	    wfDs1E1ConfigValidIntervals
    		INTEGER,
    	    wfDs1E1ConfigLineType
    		INTEGER,
    	    wfDs1E1ConfigLineCoding
    		INTEGER,
    	    wfDs1E1ConfigSendCode
    		INTEGER,
    	    wfDs1E1ConfigCircuitIdentifier
    		DisplayString,
    	    wfDs1E1ConfigLoopbackConfig
    		INTEGER,
    	    wfDs1E1ConfigLineStatus
    		INTEGER,
    	    wfDs1E1ConfigSignalMode
    		INTEGER,
    	    wfDs1E1ConfigTransmitClockSource
    		INTEGER,
    	    wfDs1E1ConfigFdl
    		INTEGER
        }

    wfDs1E1ConfigDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete attribute"
        DEFVAL	{ created }
        ::= { wfDs1E1ConfigEntry 1 }

    wfDs1E1ConfigPortLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The index ID for this record. It is the line number assigned to a port
                in the wfDs1E1PortMapEntry for a port.connector pair. Its channel field
                should be 0."
        ::= { wfDs1E1ConfigEntry 2 }

    wfDs1E1ConfigIfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Currently this is the sames as wfDs1E1LinePortIndex"
        ::= { wfDs1E1ConfigEntry 3 }

    wfDs1E1ConfigTimeElapsed OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of seconds that have elapsed since the beginning of the
                current error-measurement period. Only relevant when the
                wfDs1E1ConfigLineType is ESF and the wfDs1E1ConfigFdl is AT&T 54016."
        ::= { wfDs1E1ConfigEntry 4 }

    wfDs1E1ConfigValidIntervals OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of previous intervals for which valid data was collected. The
                value will be 96 unless the interface was brought on-line within the last
                24 hours, in which case the value will be the number of complete 15 minute
                intervals the since interface has been online. Only relevant when the
                wfDs1E1ConfigLineType is ESF and the wfDs1E1ConfigFdl is AT&T 54016."
        ::= { wfDs1E1ConfigEntry 5 }

    wfDs1E1ConfigLineType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unframedt1(1),
    		    esf(2),
    		    sf(3),
    		    e1(4),
    		    e1crc(5),
    		    e1mf(6),
    		    e1crcmf(7),
    		    unframede1(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute is used to configure the line framing type to match
                the carrier's framing. SF and ESF are T1 framing types and the main
                differences between the two are the number of frames in a superframe
                and the use of the f-bit. The E1, E1CRC, E1MF, and E1CRCMF are used
                for E1 lines."
        DEFVAL	{ esf }
        ::= { wfDs1E1ConfigEntry 6 }

    wfDs1E1ConfigLineCoding OBJECT-TYPE
        SYNTAX	INTEGER {
    		    jbzs(1),
    		    b8zs(2),
    		    hdb3(3),
    		    zbtsi(4),
    		    ami(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This variable describes the variety of Zero Code Suppression used on the
                link, which in turn affects a number of its characteristics. It should
                be set to match the carrier.

                AMI (alternate mark inversion) refers to a mode wherein no zero code
                suppression is present and the line encoding does not solve the problem
                directly.  In  this application, the higher layer must provide data
                which meets or exceeds the pulse density  requirements, such as inverting
                HDLC data. This could be used for T1 or E1 lines.

                B8ZS refers to the use of a specified pattern of normal bits and bipolar
                violations which are used to replace a sequence of eight zero bits. This
                can be used on T1 lines while HDB3 provides similar functionality for
                E1 links."
        DEFVAL	{ b8zs }
        ::= { wfDs1E1ConfigEntry 7 }

    wfDs1E1ConfigSendCode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    sendnocode(1),
    		    sendlinecode(2),
    		    sendpayloadcode(3),
    		    sendresetcode(4),
    		    sendqrs(5),
    		    send511pattern(6),
    		    send3in24pattern(7),
    		    sendothertestpattern(8)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This variable is currently read-only and it indicates what type of code is
                being sent across the DS1 interface by the device.  The values mean:

                  SENDNOCODE - sending looped or normal data

                  SENDLINECODE - sending a request for a line loopback

                  SENDPAYLOADCODE - sending a request for a payload loopback

                  SENDRESETCODE - sending a loopback termination request

                  SENDQRS - sending a Quasi-Random Signal (QRS) test pattern

                  SEND511PATTERN - sending a 511 bit fixed test pattern

                  SEND3IN24PATTERN - sending a fixed test pattern of 3 bits set in 24

                  SENDOTHERTESTPATTERN - sending a test pattern other than those
                                         described by this object"
        DEFVAL	{ sendnocode }
        ::= { wfDs1E1ConfigEntry 8 }

    wfDs1E1ConfigCircuitIdentifier OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute is not used and appears here as a place holder only. If it
                was implemented then it would contain the transmission vendor's circuit
                identifier, for the purpose of facilitating troubleshooting."
        ::= { wfDs1E1ConfigEntry 9 }

    wfDs1E1ConfigLoopbackConfig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    noloop(1),
    		    payloadloop(2),
    		    lineloop(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This variable represents the loopback configuration of the DS1 interface.
                The value NOLOOP indicates the port is not in loopback. The value
                PAYLOADLOOP indicates the port is in payload loopback which means that
                data is looped back after it goes through the framer. The value LINELOOP
                indicates the port is in line loopback which means that data is looped
                back before the framer."
        DEFVAL	{ noloop }
        ::= { wfDs1E1ConfigEntry 10 }

    wfDs1E1ConfigLineStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    noalarm(1),
    		    rcvfarendlof(2),
    		    xmtfarendlof(4),
    		    rcvais(8),
    		    xmtais(16),
    		    lossofframe(32),
    		    lossofsignal(64),
    		    loopbackstate(128),
    		    t16ais(256),
    		    rcvfarendlomf(512),
    		    xmtfarendlomf(1024),
    		    rcvtestcode(2048),
    		    otherfailure(4096)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This variable is a bit-map which indicates the Line Status of the
                interface.  It contains loopback, failure, received 'alarm'  and
                transmitted 'alarm' information.

                The bit definition as as follows with bit #0 being the LSB.

                bit  0  NOALARM - No alarm present, set only when none of the other bits are.
                     1  RCVFARENDLOF - Far end LOF (a.k.a., Yellow Alarm)
                     2  XMTFARENDLOF - Near end sending LOF Indication
                     3  RCVAIS - Far end sending AIS
                     4  XMTAIS - Near end sending AIS
                     5  LOSSOFFRAME - Near end LOF (a.k.a., Red Alarm)
                     6  LOSSOFSIGNAL - Near end Loss Of Signal
                     7  LOOPBACKSTATE - Near end is looped
                     8  T16AIS - E1 only, TS16 AIS
                     9  RCVFARENDLOMF - E1 only, Far End Sending TS16 LOMF
                    10  XMTFARENDLOMF - E1 only, Near End Sending TS16 LOMF
                    11  RCVTESTCODE -  Near End detects a test code
                    12  OTHERFAILURE - any line status not defined here'
                 "
        DEFVAL	{ noalarm }
        ::= { wfDs1E1ConfigEntry 11 }

    wfDs1E1ConfigSignalMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    robbedbit(2),
    		    bitoriented(3),
    		    messageoriented(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This attribute is not implemented and exists here only as a place holder."
        DEFVAL	{ none }
        ::= { wfDs1E1ConfigEntry 12 }

    wfDs1E1ConfigTransmitClockSource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    looptiming(1),
    		    localtiming(2),
    		    throughtiming(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The source of Tranmit Clock. LOOPTIMING indicates that the recovered
                receive clock is used as the transmit clock. LOCALTIMING indicates that
                a local clock source is used. Either the internal clock or the external
                clock through the extra connector on the board.  THROUGHTIMING indicates
                that recovered receive clock from another interface is used as the
                transmit clock."
        ::= { wfDs1E1ConfigEntry 13 }

    wfDs1E1ConfigFdl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ansi403(2),
    		    att54016(4),
    		    none(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute is used to configure the type facilities data link (FDL).
                The ANSI403 configures the port to use the FDL exchange described in
                the ANSI T1 403 specification. ATT54016 is used to configure the port
                for the for the FDL exchange listed in the AT&T 54016 document. NONE
                is used when no FDL is desired. The FDL can only be used when the line
                type is ESF."
        DEFVAL	{ ansi403 }
        ::= { wfDs1E1ConfigEntry 14 }

    wfDs1E1ActionTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1E1ActionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "DS1E1 configuration Action record - Contains MUNICH32 and Framer
                write only Configuration parameters"
        ::= { wfDs1E1Group 5 }

    wfDs1E1ActionEntry OBJECT-TYPE
        SYNTAX	WfDs1E1ActionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the DS1E1 Config table"
        INDEX	{ wfDs1E1ActionPortLineNumber }
        ::= { wfDs1E1ActionTable 1 }

    WfDs1E1ActionEntry ::= SEQUENCE {
    	    wfDs1E1ActionPortLineNumber
    		INTEGER,
    	    wfDs1E1ActionBertReset
    		INTEGER,
    	    wfDs1E1ActionBertErrorInsert
    		INTEGER,
    	    wfDs1E1ActionSendLoopCode
    		INTEGER,
    	    wfDs1E1ActionSendFdlLoopbackCode
		INTEGER,
	    wfDs1E1ActionSendFractionalLoopUpCode
		INTEGER,
	    wfDs1E1ActionSendFractionalLoopDownCode
		INTEGER,
	    wfDs1E1ActionClearFractionalLoopState
		INTEGER,
	    wfDs1E1ActionClearFdlStats
    		INTEGER
        }

    wfDs1E1ActionPortLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID LineNumber, filled in by driver"
        ::= { wfDs1E1ActionEntry 1 }

    wfDs1E1ActionBertReset OBJECT-TYPE
        SYNTAX	INTEGER {
    		    reset(1),
    		    noaction(21)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Reset counters on BERT device"
        DEFVAL	{ noaction }
        ::= { wfDs1E1ActionEntry 2 }

    wfDs1E1ActionBertErrorInsert OBJECT-TYPE
        SYNTAX	INTEGER {
    		    oneerror(1),
    		    errorperthousand(2),
    		    errorpermillion(3),
    		    disable(4),
    		    noaction(21)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates that an error be injected into the transmitted data
                stream while in BERT mode."
        DEFVAL	{ noaction }
        ::= { wfDs1E1ActionEntry 3 }

    wfDs1E1ActionSendLoopCode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    loopup(1),
    		    loopdown(2),
    		    noaction(21)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selects a  Loop Up/Down code to be sent to the remote end"
        DEFVAL	{ noaction }
        ::= { wfDs1E1ActionEntry 4 }

    wfDs1E1ActionSendFdlLoopbackCode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    lineloopci(1),
    		    lineloopia(2),
    		    lineloopib(3),
    		    deactivatell(4),
    		    payloadloop(5),
    		    deactivatepl(6),
    		    deactivateall(7),
    		    noaction(21)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selects an FDL code to be sent to the remote end."
        DEFVAL	{ noaction }
        ::= { wfDs1E1ActionEntry 5 }

    wfDs1E1ActionSendFractionalLoopUpCode OBJECT-TYPE
	SYNTAX	INTEGER {
		    noaction(33)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Selects Fractional Loop Up code to be sent to the remote end.
		Value passed through this attribute is the Logical Line number
		(1 through 24).  This feature is only supported by the QMCT1."
	DEFVAL	{ noaction }
	::= { wfDs1E1ActionEntry 6 }

    wfDs1E1ActionSendFractionalLoopDownCode OBJECT-TYPE
	SYNTAX	INTEGER {
		    noaction(33)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Selects Fractional Loop Down code to be sent to the remote
		end. Value passed through this attribute is the Logical Line
		number (1 through 24).  This feature is only supported by the
		QMCT1."
	DEFVAL	{ noaction }
	::= { wfDs1E1ActionEntry 7 }

    wfDs1E1ActionClearFractionalLoopState OBJECT-TYPE
	SYNTAX	INTEGER {
		    noaction(33)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Removes any Logical Line left in hardware Fractional T1
		loopback state.  The Logical Line number is passed as an
		argument.  This feature is only supported by the QMCT1."
	DEFVAL	{ noaction }
	::= { wfDs1E1ActionEntry 8 }

    wfDs1E1ActionClearFdlStats OBJECT-TYPE
	SYNTAX	INTEGER {
		    clrStats(1),
		    noaction(2)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Clears this port's FDL Statistics.  This feature is only
		supported by the QMCT1."
	DEFVAL	{ noaction }
	::= { wfDs1E1ActionEntry 9 }

    wfLogicalLineTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfLogicalLineEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "LogicalLine record - Contains configuration parameters and
                statistics for MUNICH32 which are LogicalLine specific."
        ::= { wfDs1E1Group 6 }

    wfLogicalLineEntry OBJECT-TYPE
        SYNTAX	WfLogicalLineEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the LOGICAL_LINE table"
        INDEX	{ wfLogicalLinePortLineNumber,
    		  wfLogicalLineIndex }
        ::= { wfLogicalLineTable 1 }

    WfLogicalLineEntry ::= SEQUENCE {
    	    wfLogicalLineDelete
    		INTEGER,
    	    wfLogicalLineDisable
    		INTEGER,
    	    wfLogicalLineState
    		INTEGER,
    	    wfLogicalLinePortLineNumber
    		INTEGER,
    	    wfLogicalLineIndex
    		INTEGER,
    	    wfLogicalLineCct
    		INTEGER,
    	    wfLogicalLineLineNumber
    		INTEGER,
    	    wfLogicalLineBofl
    		INTEGER,
    	    wfLogicalLineBoflTmo
    		INTEGER,
    	    wfLogicalLineFractionalLoopback
    		INTEGER,
    	    wfLogicalLineTimeSlotAssignment
    		DisplayString,
    	    wfLogicalLineMtu
    		INTEGER,
    	    wfLogicalLineMadr
    		OCTET STRING,
    	    wfLogicalLineWanProtocol
    		INTEGER,
    	    wfLogicalLineHdlcService
    		INTEGER,
    	    wfLogicalLineLocalHdlcAddress
    		INTEGER,
    	    wfLogicalLineRemoteHdlcAddress
    		INTEGER,
    	    wfLogicalLineRateAdaption
    		INTEGER,
    	    wfLogicalLineIFTF
    		INTEGER,
    	    wfLogicalLineCRCSize
    		INTEGER,
    	    wfLogicalLineRxOctets
    		Counter,
    	    wfLogicalLineRxFrames
    		Counter,
    	    wfLogicalLineTxOctets
    		Counter,
    	    wfLogicalLineTxFrames
    		Counter,
    	    wfLogicalLineRxErrors
    		Counter,
    	    wfLogicalLineTxErrors
    		Counter,
    	    wfLogicalLineLackRxResources
    		Counter,
    	    wfLogicalLineLackTxResources
    		Counter,
    	    wfLogicalLineTxUnderflows
    		Counter,
    	    wfLogicalLineRxOverflows
    		Counter,
    	    wfLogicalLineRxNullFrames
    		Counter,
    	    wfLogicalLineRxShortFrames
    		Counter,
    	    wfLogicalLineRxLossSyncs
    		Counter,
    	    wfLogicalLineRxCRCErrors
    		Counter,
    	    wfLogicalLineRxNonOctetBits
    		Counter,
    	    wfLogicalLineRxLongFrames
    		Counter,
    	    wfLogicalLineRxAbortFrames
    		Counter,
    	    wfLogicalLineRxDescOverflows
    		Counter,
    	    wfLogicalLineRxReplenMisses
    		Counter,
    	    wfLogicalLineRxIFCs
    		Counter,
    	    wfLogicalLineRxDropPackets
    		Counter,
    	    wfLogicalLineCfgTxQueueLength
    		INTEGER,
    	    wfLogicalLineCfgRxQueueLength
    		INTEGER,
    	    wfLogicalLineTxQueueLength
    		INTEGER,
    	    wfLogicalLineRxQueueLength
    		INTEGER,
    	    wfLogicalLineTxQueueEmpties
    		Counter,
    	    wfLogicalLineRxIntProcs
    		Counter,
    	    wfLogicalLineTxIntProcs
    		Counter,
    	    wfLogicalLineRxPktCorruptions
    		Counter,
    	    wfLogicalLineTurboBofl
    		INTEGER,
    	    wfLogicalLineBoflNum
    		INTEGER,
    	    wfLogicalLineBoflLen
    		INTEGER,
    	    wfLogicalLineOutQLen
    		Gauge,
    	    wfLogicalLineLastChange
    		TimeTicks,
    	    wfLogicalLineCfgMtu
    		INTEGER,
    	    wfLogicalLineRemoteLpbkDetection
    		INTEGER,
    	    wfLogicalLineLastState
    		INTEGER,
    	    wfLogicalLineRxIdles
    		Counter,
    	    wfLogicalLineRole
    		INTEGER,
    	    wfLogicalLineActiveCct
    		INTEGER,
    	    wfLogicalLineActualRateAdaption
		INTEGER,
	    wfLogicalLineBertMode
		INTEGER,
	    wfLogicalLineBertTestPattern
		INTEGER,
	    wfLogicalLineAcceptFracLoopCode
    		INTEGER
        }

    wfLogicalLineDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfLogicalLineEntry 1 }

    wfLogicalLineDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfLogicalLineEntry 2 }

    wfLogicalLineState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    lmiwait(4),
    		    loopback(5),
    		    linedieing(6),
    		    linedead(7),
    		    remoteloop(8),
    		    remotedeaf(9),
		    bert(10),
		    hwfrac(11),
    		    notpresent(20)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line Driver state variable"
        DEFVAL	{ notpresent }
        ::= { wfLogicalLineEntry 3 }

    wfLogicalLinePortLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID PortLineNumber, filled in by driver"
        ::= { wfLogicalLineEntry 4 }

    wfLogicalLineIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Index for this line instance, filled in by driver.
                The index corresponds to the position of the
                circuit, from 1 to 31, on the port."
        ::= { wfLogicalLineEntry 5 }

    wfLogicalLineCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Circuit number for this line instance"
        ::= { wfLogicalLineEntry 6 }

    wfLogicalLineLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "LineNumber for this logical line instance. This is the same line number
                contained in the PORT_TABLE with the channel field nonzero."
        ::= { wfLogicalLineEntry 7 }

    wfLogicalLineBofl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selects Breath of Life (BOFL) parameter. If selected, a BOFL
                packet is sent out on the wire as often as specifies by the
                wfLogicalLineBoflTmo parameter"
        DEFVAL	{ enabled }
        ::= { wfLogicalLineEntry 8 }

    wfLogicalLineBoflTmo OBJECT-TYPE
        SYNTAX	INTEGER(1..60)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the time-period between BOFL packets"
        DEFVAL	{ 5 }
        ::= { wfLogicalLineEntry 9 }

    wfLogicalLineFractionalLoopback OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Any Logical Line on this T1/E1 port is capable of being put into
                loopback, i.e. data coming into that circuit from the wire is
                mirrorred back onto the wire. This parameter enables or
                disables this loopback feature on any circuit."
        DEFVAL	{ disabled }
        ::= { wfLogicalLineEntry 10 }

    wfLogicalLineTimeSlotAssignment OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Lists the time-slots which constitute this channel. Read only attribute
                that contains a  list of time-slots from 1 to 31 used by the channel"
        ::= { wfLogicalLineEntry 11 }

    wfLogicalLineMtu OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Contains the largest frame size that can be received by the logical line.
                Anything larger than the MTU will be discarded. In all cases except when
                the wfLogicalLineWanProtocol is LAPB, this value will be the same as
                wfLogicalLineCfgMtu. In the LAPB case it will be twice wfLogicalLineCfgMtu
                with a maximum of 4608."
        ::= { wfLogicalLineEntry 12 }

    wfLogicalLineMadr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line MAC address, fixed - line driver fills in from the 48 bit
                address stored in the serial number prom."
        ::= { wfLogicalLineEntry 13 }

    wfLogicalLineWanProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    standard(1),
    		    passthru(2),
    		    ppp(3),
    		    smds(4),
    		    framerelay(5),
    		    x25(6),
    		    switch(7),
    		    sw(8),
    		    atm(9),
    		    lapb(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "WAN protocol selection is provided via this parameter. The
                supported protocols can be selected per circuit."
        DEFVAL	{ standard }
        ::= { wfLogicalLineEntry 14 }

    wfLogicalLineHdlcService OBJECT-TYPE
        SYNTAX	INTEGER {
    		    transparent(1),
    		    llc1(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "HDLC Service type for this line. Transparent is raw HDLC mode, LLC1 will
                prefix the HDLC address and control fields to the frame."
        DEFVAL	{ llc1 }
        ::= { wfLogicalLineEntry 15 }

    wfLogicalLineLocalHdlcAddress OBJECT-TYPE
        SYNTAX	INTEGER {
    		    dce(1),
    		    dte(3),
    		    seven(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute is only used if the Wan protocol is Wellfleet Standard
                Proprietary Point to Point.  This attribute is unused for other Wan
                protocols.

                The local HDLC address can take on values between 1 and 7. The default is
                7.  1 is refered to as DCE.  3 is refered to DTE.  All others are refered
                to as EXPLICIT.  EXPLICIT indicates that the user has explicitely selected
                the address."
        DEFVAL	{ seven }
        ::= { wfLogicalLineEntry 16 }

    wfLogicalLineRemoteHdlcAddress OBJECT-TYPE
        SYNTAX	INTEGER {
    		    dce(1),
    		    dte(3),
    		    seven(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute is only used if the Wan protocol is Wellfleet Standard
                Proprietary Point to Point.  This attribute is unused for other Wan
                protocols.

                The remote HDLC address can take on values between 1 and 7. The default is
                7.  1 is refered to as DCE.  3 is refered to DTE.  All others are refered
                to as EXPLICIT.  EXPLICIT indicates that the user has explicitely selected
                the address."
        DEFVAL	{ seven }
        ::= { wfLogicalLineEntry 17 }

    wfLogicalLineRateAdaption OBJECT-TYPE
        SYNTAX	INTEGER {
    		    adaption64k(1),
    		    adaption56kmsb(2),
    		    adaption56klsb(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Determines the number of bits and their bit positions
                within the time-slot. 64k selection uses all 8 bits in
                the time-slot. The two 56k selections use 7 of the 8
                bits in the time-slot. 56k_MSB does not use the most
                significant bit and 56k_LSB does not use the least
                significant bit in the time-slot."
        DEFVAL	{ adaption56klsb }
        ::= { wfLogicalLineEntry 18 }

    wfLogicalLineIFTF OBJECT-TYPE
        SYNTAX	INTEGER {
    		    flags(1),
    		    idles(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Determines the Interframe time fill character to be
                transmitted by the MUNICH. In case of IFTF_FLAGS, 0x7E
                is sent and in case of IFTF_IDLES 0xff is sent as the
                interframe timefill characters."
        DEFVAL	{ flags }
        ::= { wfLogicalLineEntry 19 }

    wfLogicalLineCRCSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    crc32(1),
    		    crc16(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Determines the CRC Size. When CRC32 is selected a 32 bit
                CRC is appended to the frame being transmitted and a 32
                bit CRC check is performed on the received frame. When
                CRC16 is selected, a 16 bit CRC is appended to the
                transmitted frame and a 16 bit CRC is performed. on the
                received frame."
        DEFVAL	{ crc16 }
        ::= { wfLogicalLineEntry 20 }

    wfLogicalLineRxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets received without error"
        ::= { wfLogicalLineEntry 21 }

    wfLogicalLineRxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received without error"
        ::= { wfLogicalLineEntry 22 }

    wfLogicalLineTxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets transmitted without error"
        ::= { wfLogicalLineEntry 23 }

    wfLogicalLineTxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames transmitted without error"
        ::= { wfLogicalLineEntry 24 }

    wfLogicalLineRxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of receive errors"
        ::= { wfLogicalLineEntry 25 }

    wfLogicalLineTxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmission errors"
        ::= { wfLogicalLineEntry 26 }

    wfLogicalLineLackRxResources OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Rx frames dropped due to lack of buffer resources"
        ::= { wfLogicalLineEntry 27 }

    wfLogicalLineLackTxResources OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Tx frames dropped due to lack of system resources"
        ::= { wfLogicalLineEntry 28 }

    wfLogicalLineTxUnderflows OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Tx frames dropped due to Transmit underflow"
        ::= { wfLogicalLineEntry 29 }

    wfLogicalLineRxOverflows OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Rx frames dropped due to Receive overflow"
        ::= { wfLogicalLineEntry 30 }

    wfLogicalLineRxNullFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of short frames received (with no data bytes)"
        ::= { wfLogicalLineEntry 31 }

    wfLogicalLineRxShortFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of short frames received whose length is either 1 or 2 data bytes."
        ::= { wfLogicalLineEntry 32 }

    wfLogicalLineRxLossSyncs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Loss of synchronization on receiver"
        ::= { wfLogicalLineEntry 33 }

    wfLogicalLineRxCRCErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "CRC error received"
        ::= { wfLogicalLineEntry 34 }

    wfLogicalLineRxNonOctetBits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Non-Octet bits received in frame"
        ::= { wfLogicalLineEntry 35 }

    wfLogicalLineRxLongFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Frame longer than MFL received"
        ::= { wfLogicalLineEntry 36 }

    wfLogicalLineRxAbortFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Aborted frame received"
        ::= { wfLogicalLineEntry 37 }

    wfLogicalLineRxDescOverflows OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Receive overflow on chip buffer"
        ::= { wfLogicalLineEntry 38 }

    wfLogicalLineRxReplenMisses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of number of packet buffer misses while attempting to
                replenish driver receive ring"
        ::= { wfLogicalLineEntry 39 }

    wfLogicalLineRxIFCs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times the device detects a change of interframe time-fill
                between incomming frames."
        ::= { wfLogicalLineEntry 40 }

    wfLogicalLineRxDropPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packets dropped after reception"
        ::= { wfLogicalLineEntry 41 }

    wfLogicalLineCfgTxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER(0..512)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured Transmit Queue Length. Values other than zero over-ride
                the router selected values. A value of zero has a special meaning.
                Zero causes router based default values to be used.  All values are
                accepted.  Care should be taken not to set this to a value which is
                much greater than the default.  The default can be read out of the
                wfLoigcalLineTxQueueLength attribute when the router is running with
                this attribute set to zero.  Sets to this attribute may take up to
                one minute to take effect."
        ::= { wfLogicalLineEntry 42 }

    wfLogicalLineCfgRxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER(0..512)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured Receive Queue Length. Values other than zero over-ride
                the router selected values. A value of zero has a special meaning.
                Zero cuases router based default values to be used. Values larger
                than the compiled ring size are truncated to the compiled ring
                size.  Sets to this attribute may take up to one minute to take effect."
        ::= { wfLogicalLineEntry 43 }

    wfLogicalLineTxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current hardware transmit queue length"
        ::= { wfLogicalLineEntry 44 }

    wfLogicalLineRxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current Receive queue length"
        ::= { wfLogicalLineEntry 45 }

    wfLogicalLineTxQueueEmpties OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the transmit ring is found
                empty when transmitting packets"
        ::= { wfLogicalLineEntry 46 }

    wfLogicalLineRxIntProcs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "DEBUG paramete - Receive Interrupt processing count"
        ::= { wfLogicalLineEntry 47 }

    wfLogicalLineTxIntProcs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "DEBUG parameter - Tx interrupt processing count"
        ::= { wfLogicalLineEntry 48 }

    wfLogicalLineRxPktCorruptions OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "DEBUG parameter - Corruption check on receive"
        ::= { wfLogicalLineEntry 49 }

    wfLogicalLineTurboBofl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DEBUG parameter - Turbo bofl enabled or disabled"
        DEFVAL	{ disabled }
        ::= { wfLogicalLineEntry 50 }

    wfLogicalLineBoflNum OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DEBUG parameter - Number of breath of life packets per breath
                of life"
        DEFVAL	{ 1 }
        ::= { wfLogicalLineEntry 51 }

    wfLogicalLineBoflLen OBJECT-TYPE
        SYNTAX	INTEGER(22..4450)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DEBUG parameter - breath of life packet length"
        DEFVAL	{ 200 }
        ::= { wfLogicalLineEntry 52 }

    wfLogicalLineOutQLen OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The instantaneous current length of the output packet queue (in packets)."
        ::= { wfLogicalLineEntry 53 }

    wfLogicalLineLastChange OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of SysUpTime at the time the interface entered it's current
                operational state (UP state).  SysUpTime is defined as the time (in
                hundredths of a second) since the network management portion of the
                system was last re-initialized.  Usually the time since boot."
        ::= { wfLogicalLineEntry 54 }

    wfLogicalLineCfgMtu OBJECT-TYPE
        SYNTAX	INTEGER(3..4608)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the largest frame size that can be received by the logical line.
                Anything larger than the MTU will be discarded."
        DEFVAL	{ 1600 }
        ::= { wfLogicalLineEntry 55 }

    wfLogicalLineRemoteLpbkDetection OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute enables Remote Loopback Detection. When enabled along with
                wfLogicalLineBofl,  the device driver will detect when it is receiving its
                own BOFL packets and will bring the interface down assuming that somewhere
                down stream the link has been put into loopback. "
        DEFVAL	{ disabled }
        ::= { wfLogicalLineEntry 56 }

    wfLogicalLineLastState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    lmiwait(4),
    		    loopback(5),
    		    linedieing(6),
    		    linedead(7),
    		    remoteloop(8),
    		    remotedeaf(9),
		    bert(10),
		    hwfrac(11),
    		    notpresent(20)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The state which the Logical Line driver was in prior to the most recent
                re-initialization."
        ::= { wfLogicalLineEntry 57 }

    wfLogicalLineRxIdles OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of received frames followed by ShortFrame errors reported by the
                hardware.  ShortFrame errors imediately after received frames actually
                indicates an Idle (all 1s) interframe time fill.  One ShortFrame is
                allowed per received frame without incrementing wfLogicalLineRxErrors
                or wfLogicalLineRxShortFrames.  Additional ShortFrames will not increment
                wfLogicalLineRxIdles but will increment both wfLogicalLineRxErrors and
                wfLogicalLineRxShortFrames."
        ::= { wfLogicalLineEntry 58 }

    wfLogicalLineRole OBJECT-TYPE
        SYNTAX	INTEGER {
    		    syncconnect(1),
    		    dchannel(2),
    		    bchannel(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the role of this Logical Line. This attribute directs the Logical
                Line to be either a normal permanent synchronous connection,  a Primary Rate
                ISDN 'D' channel or a Primary Rate ISDN 'B' channel."
        DEFVAL	{ syncconnect }
        ::= { wfLogicalLineEntry 59 }

    wfLogicalLineActiveCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Active CCT number for this LogicalLine. Used in ISDN PRI to indicate the
                CCT of the current call in progress."
        ::= { wfLogicalLineEntry 60 }

    wfLogicalLineActualRateAdaption OBJECT-TYPE
        SYNTAX	INTEGER {
    		    adaption64k(1),
    		    adaption56kmsb(2),
    		    adaption56klsb(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the current Rate Adaption in use. This may differ from the
                configured Rate Adaption in ISDN PRI applications.  This attribute indicates
                the number of bits and their bit positions within the time-slot. 64k
                selection uses all 8 bits in the time-slot. The two 56k selections use 7 of
                the 8 bits in the time-slot. 56k_MSB does not use the most significant bit
                and 56k_LSB does not use the least significant bit in the time-slot."
        ::= { wfLogicalLineEntry 61 }

    wfLogicalLineBertMode OBJECT-TYPE
	SYNTAX	INTEGER {
		    enabled(1),
		    disabled(2)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Enables BERT testing on a logical line level.  This feature is
		only supported by the QMCT1."
	DEFVAL	{ disabled }
	::= { wfLogicalLineEntry 62 }

    wfLogicalLineBertTestPattern OBJECT-TYPE
	SYNTAX	INTEGER {
		    zeros(1),
		    ones(2),
		    qrss(3),
		    two15(4),
		    two15inv(5),
		    two20(6),
		    two23(7),
		    two23inv(8)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Test pattern for BERT.  This feature is only supported by the
		QMCT1."
	DEFVAL	{ ones }
	::= { wfLogicalLineEntry 63 }

    wfLogicalLineAcceptFracLoopCode OBJECT-TYPE
	SYNTAX	INTEGER {
		    enabled(1),
		    disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Allows logical line to accept Fractional T1 Loop Code.  This
		feature is only supported by the QMCT1."
	DEFVAL	{ enabled }
	::= { wfLogicalLineEntry 64 }

    wfDs1E1FracTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1E1FracEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS1E1 fractional table identifies for each time-slot, the Logical
                Line to which the time-slot is currently bound."
        ::= { wfDs1E1Group 7 }

    wfDs1E1FracEntry OBJECT-TYPE
        SYNTAX	WfDs1E1FracEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the DS1E1 Fractional Table"
        INDEX	{ wfDs1E1FracPortLineNumber,
    		  wfDs1E1FracNumber }
        ::= { wfDs1E1FracTable 1 }

    WfDs1E1FracEntry ::= SEQUENCE {
    	    wfDs1E1FracDelete
    		INTEGER,
    	    wfDs1E1FracPortLineNumber
    		INTEGER,
    	    wfDs1E1FracNumber
    		INTEGER,
    	    wfDs1E1FracLogicalLineIndex
    		INTEGER
        }

    wfDs1E1FracDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfDs1E1FracEntry 1 }

    wfDs1E1FracPortLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line number with a zero channel number field. Identifies the port"
        ::= { wfDs1E1FracEntry 2 }

    wfDs1E1FracNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The time slot to be assigned"
        ::= { wfDs1E1FracEntry 3 }

    wfDs1E1FracLogicalLineIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This time slot is assigned to the Logical Line identified by this
                attribute."
        ::= { wfDs1E1FracEntry 4 }

    wfDs1E1CurrentTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1E1CurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Current AT&T FDL stats table."
        ::= { wfDs1E1Group 10 }

    wfDs1E1CurrentEntry OBJECT-TYPE
        SYNTAX	WfDs1E1CurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the DS1E1 Current table"
        INDEX	{ wfDs1E1CurrentPortLineNumber }
        ::= { wfDs1E1CurrentTable 1 }

    WfDs1E1CurrentEntry ::= SEQUENCE {
    	    wfDs1E1CurrentPortLineNumber
    		INTEGER,
    	    wfDs1E1CurrentESs
    		Gauge,
    	    wfDs1E1CurrentSESs
    		Gauge,
    	    wfDs1E1CurrentSEFSs
    		Gauge,
    	    wfDs1E1CurrentUASs
    		Gauge,
    	    wfDs1E1CurrentCSSs
    		Gauge,
    	    wfDs1E1CurrentPCVs
    		Gauge,
    	    wfDs1E1CurrentLESs
    		Gauge,
    	    wfDs1E1CurrentBESs
    		Gauge,
    	    wfDs1E1CurrentDMs
    		Gauge,
    	    wfDs1E1CurrentLCVs
    		Gauge
        }

    wfDs1E1CurrentPortLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The instance ID that identifies the port. The port line number with a zero
                channel number field as found in the port map table."
        ::= { wfDs1E1CurrentEntry 1 }

    wfDs1E1CurrentESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Errored Seconds, encountered by a DS1 interface in the
                current 15 minute interval."
        ::= { wfDs1E1CurrentEntry 2 }

    wfDs1E1CurrentSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Severely Errored Seconds encountered by a DS1 interface
                in the current 15 minute interval.'"
        ::= { wfDs1E1CurrentEntry 3 }

    wfDs1E1CurrentSEFSs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Severely Errored Framing Seconds encountered  by  a DS1
                interface in the current 15 minute interval."
        ::= { wfDs1E1CurrentEntry 4 }

    wfDs1E1CurrentUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Unavailable Seconds encountered by a DS1 interface in the
                current 15 minute interval."
        ::= { wfDs1E1CurrentEntry 5 }

    wfDs1E1CurrentCSSs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Controlled Slip Seconds encountered by a DS1 interface in the
                current 15 minute interval."
        ::= { wfDs1E1CurrentEntry 6 }

    wfDs1E1CurrentPCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Path Coding Violations encountered by a DS1 interface in the
                current 15 minute interval."
        ::= { wfDs1E1CurrentEntry 7 }

    wfDs1E1CurrentLESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Line Errored Seconds encountered by a DS1 interface in the
                current 15 minute interval.'"
        ::= { wfDs1E1CurrentEntry 8 }

    wfDs1E1CurrentBESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Bursty Errored Seconds (BESs) encountered by a DS1 interface
                in the current 15 minute interval."
        ::= { wfDs1E1CurrentEntry 9 }

    wfDs1E1CurrentDMs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Degraded Minutes (DMs) encountered by a DS1 interface in
                the current 15 minute interval.'"
        ::= { wfDs1E1CurrentEntry 10 }

    wfDs1E1CurrentLCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Line Code Violations (LCVs) encountered  by a DS1 interface in
                the current 15  minute interval.'"
        ::= { wfDs1E1CurrentEntry 11 }

    wfDs1E1IntervalTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1E1IntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "AT&T Interval stats"
        ::= { wfDs1E1Group 11 }

    wfDs1E1IntervalEntry OBJECT-TYPE
        SYNTAX	WfDs1E1IntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the DS1E1 Interval table"
        INDEX	{ wfDs1E1IntervalPortLineNumber,
    		  wfDs1E1IntervalNumber }
        ::= { wfDs1E1IntervalTable 1 }

    WfDs1E1IntervalEntry ::= SEQUENCE {
    	    wfDs1E1IntervalPortLineNumber
    		INTEGER,
    	    wfDs1E1IntervalNumber
    		INTEGER,
    	    wfDs1E1IntervalESs
    		Gauge,
    	    wfDs1E1IntervalSESs
    		Gauge,
    	    wfDs1E1IntervalSEFSs
    		Gauge,
    	    wfDs1E1IntervalUASs
    		Gauge,
    	    wfDs1E1IntervalCSSs
    		Gauge,
    	    wfDs1E1IntervalPCVs
    		Gauge,
    	    wfDs1E1IntervalLESs
    		Gauge,
    	    wfDs1E1IntervalBESs
    		Gauge,
    	    wfDs1E1IntervalDMs
    		Gauge,
    	    wfDs1E1IntervalLCVs
    		Gauge
        }

    wfDs1E1IntervalPortLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The instance ID that identifies the port. The port line number with a zero
                channel number field as found in the port map table."
        ::= { wfDs1E1IntervalEntry 1 }

    wfDs1E1IntervalNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A number between 1 and 96, where 1 is the most recently completed 15 minute
                interval and 96 is the least recently completed 15 minutes  interval (assuming
                that all 96 intervals are valid)."
        ::= { wfDs1E1IntervalEntry 2 }

    wfDs1E1IntervalESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Errored Seconds, encountered by a DS1 interface in the current
                15 minute interval."
        ::= { wfDs1E1IntervalEntry 3 }

    wfDs1E1IntervalSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Severely Errored Seconds encountered by a DS1 interface in one
                of the previous 15 minute intervals."
        ::= { wfDs1E1IntervalEntry 4 }

    wfDs1E1IntervalSEFSs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Severely Errored Framing Seconds encountered by a DS1 interface
                in one of the previous 15 minute intervals."
        ::= { wfDs1E1IntervalEntry 5 }

    wfDs1E1IntervalUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Unavailable Seconds encountered by a DS1 interface in one of the
                previous 15 minute intervals."
        ::= { wfDs1E1IntervalEntry 6 }

    wfDs1E1IntervalCSSs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Controlled Slip Seconds encountered by a DS1 interface in one
                of the previous 15 minute intervals."
        ::= { wfDs1E1IntervalEntry 7 }

    wfDs1E1IntervalPCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Path Coding Violations encountered by a DS1 interface in one of
                the previous 15 minute intervals."
        ::= { wfDs1E1IntervalEntry 8 }

    wfDs1E1IntervalLESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Line Errored Seconds encountered by a DS1 interface in one of
                the previous 15 minute intervals."
        ::= { wfDs1E1IntervalEntry 9 }

    wfDs1E1IntervalBESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Bursty Errored Seconds (BESs) encountered by a DS1 interface in
                one of the previous 15 minute intervals."
        ::= { wfDs1E1IntervalEntry 10 }

    wfDs1E1IntervalDMs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Degraded Minutes (DMs) encountered by a DS1 interface in one of
                the previous 15 minute intervals."
        ::= { wfDs1E1IntervalEntry 11 }

    wfDs1E1IntervalLCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Line Code Violations (LCVs) encountered by a DS1 interface in
                one of the previous 15 minute intervals."
        ::= { wfDs1E1IntervalEntry 12 }

    wfDs1E1TotalTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1E1TotalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "AT&T Total stats Table"
        ::= { wfDs1E1Group 12 }

    wfDs1E1TotalEntry OBJECT-TYPE
        SYNTAX	WfDs1E1TotalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the DS1E1 Total table"
        INDEX	{ wfDs1E1TotalPortLineNumber }
        ::= { wfDs1E1TotalTable 1 }

    WfDs1E1TotalEntry ::= SEQUENCE {
    	    wfDs1E1TotalPortLineNumber
    		INTEGER,
    	    wfDs1E1TotalESs
    		Gauge,
    	    wfDs1E1TotalSESs
    		Gauge,
    	    wfDs1E1TotalSEFSs
    		Gauge,
    	    wfDs1E1TotalUASs
    		Gauge,
    	    wfDs1E1TotalCSSs
    		Gauge,
    	    wfDs1E1TotalPCVs
    		Gauge,
    	    wfDs1E1TotalLESs
    		Gauge,
    	    wfDs1E1TotalBESs
    		Gauge,
    	    wfDs1E1TotalDMs
    		Gauge,
    	    wfDs1E1TotalLCVs
    		Gauge
        }

    wfDs1E1TotalPortLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The instance ID that identifies the port. The port line number with a zero
                channel number field as found in the port map table."
        ::= { wfDs1E1TotalEntry 1 }

    wfDs1E1TotalESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Errored Seconds, encountered by a DS1 interface in the current
                15 minute interval."
        ::= { wfDs1E1TotalEntry 2 }

    wfDs1E1TotalSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Severely Errored Seconds encountered by a DS1 interface in the
                previous 24-hour interval."
        ::= { wfDs1E1TotalEntry 3 }

    wfDs1E1TotalSEFSs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Severely Errored Framing Seconds encountered by a DS1 interface
                in the previous 24-hour interval."
        ::= { wfDs1E1TotalEntry 4 }

    wfDs1E1TotalUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Unavailable Seconds encountered by a DS1 interface in the
                previous 24-hour interval."
        ::= { wfDs1E1TotalEntry 5 }

    wfDs1E1TotalCSSs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Controlled Slip Seconds encountered by a DS1 interface in the
                previous 24-hour interval."
        ::= { wfDs1E1TotalEntry 6 }

    wfDs1E1TotalPCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Path Coding Violations encountered by a DS1 interface in the
                previous 24-hour interval."
        ::= { wfDs1E1TotalEntry 7 }

    wfDs1E1TotalLESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Line Errored Seconds encountered by a DS1 interface in the
                previous 24-hour interval."
        ::= { wfDs1E1TotalEntry 8 }

    wfDs1E1TotalBESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Bursty Errored Seconds (BESs) encountered by a DS1 interface
                in the previous 24-hour interval."
        ::= { wfDs1E1TotalEntry 9 }

    wfDs1E1TotalDMs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Degraded Minutes (DMs) encountered by a DS1 interface in the
                previous 24-hour interval."
        ::= { wfDs1E1TotalEntry 10 }

    wfDs1E1TotalLCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Line Code Violations (LCVs) encountered  by a DS1 interface in
                the previous 24-hour interval."
        ::= { wfDs1E1TotalEntry 11 }

    wfDs1E1AnsiTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1E1AnsiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ANSI Statistics line record - This table contains the
                performance parameters for the ANSI register set "
        ::= { wfMcT1Group 13 }

    wfDs1E1AnsiEntry OBJECT-TYPE
        SYNTAX	WfDs1E1AnsiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the DS1E1 Ansi table"
        INDEX	{ wfDs1E1AnsiPortLineNumber }
        ::= { wfDs1E1AnsiTable 1 }

    WfDs1E1AnsiEntry ::= SEQUENCE {
    	    wfDs1E1AnsiPortLineNumber
    		INTEGER,
    	    wfDs1E1AnsiCRCCounts
    		Counter,
    	    wfDs1E1AnsiBPVCounts
    		Counter,
    	    wfDs1E1AnsiOOFCounts
    		Counter,
    	    wfDs1E1AnsiFECounts
    		Counter,
    	    wfDs1E1AnsiESCounts
    		Counter,
    	    wfDs1E1AnsiSESCounts
    		Counter,
    	    wfDs1E1AnsiUASCounts
    		Counter,
    	    wfDs1E1AnsiPRMR0Counts
    		Counter,
    	    wfDs1E1AnsiPRMR1Counts
    		Counter,
    	    wfDs1E1AnsiPRMR2Counts
    		Counter,
    	    wfDs1E1AnsiPRMR3Counts
    		Counter,
    	    wfDs1E1AnsiPRMESCounts
    		Counter,
    	    wfDs1E1AnsiPRMSESCounts
    		Counter,
    	    wfDs1E1AnsiPRMECounts
    		Counter
        }

    wfDs1E1AnsiPortLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Slot, filled in by driver"
        ::= { wfDs1E1AnsiEntry 1 }

    wfDs1E1AnsiCRCCounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts CRC-6 error events"
        ::= { wfDs1E1AnsiEntry 2 }

    wfDs1E1AnsiBPVCounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts bipolar violations"
        ::= { wfDs1E1AnsiEntry 3 }

    wfDs1E1AnsiOOFCounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts out-of-frame error events"
        ::= { wfDs1E1AnsiEntry 4 }

    wfDs1E1AnsiFECounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts errors in the FPS framing pattern"
        ::= { wfDs1E1AnsiEntry 5 }

    wfDs1E1AnsiESCounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts errorred seconds"
        ::= { wfDs1E1AnsiEntry 6 }

    wfDs1E1AnsiSESCounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts severly errorred seconds"
        ::= { wfDs1E1AnsiEntry 7 }

    wfDs1E1AnsiUASCounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "counts unavailable seconds"
        ::= { wfDs1E1AnsiEntry 8 }

    wfDs1E1AnsiPRMR0Counts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts PRMs that ewre received in the FDL in
                the last four seconds"
        ::= { wfDs1E1AnsiEntry 9 }

    wfDs1E1AnsiPRMR1Counts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts PRMs that ewre received in the FDL in
                the last four seconds"
        ::= { wfDs1E1AnsiEntry 10 }

    wfDs1E1AnsiPRMR2Counts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts PRMs that ewre received in the FDL in
                the last four seconds"
        ::= { wfDs1E1AnsiEntry 11 }

    wfDs1E1AnsiPRMR3Counts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts PRMs that ewre received in the FDL in
                the last four seconds"
        ::= { wfDs1E1AnsiEntry 12 }

    wfDs1E1AnsiPRMESCounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts errorred seconds as reported in the Performance
                report messages"
        ::= { wfDs1E1AnsiEntry 13 }

    wfDs1E1AnsiPRMSESCounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts severely errorred seconds as reported in the
                Performance report messages"
        ::= { wfDs1E1AnsiEntry 14 }

    wfDs1E1AnsiPRMECounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts Performance report messages that are received
                in error"
        ::= { wfDs1E1AnsiEntry 15 }

    wfDs1E1BertStatsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1E1BertStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "BERT Counter line record - This table contains the
                statistics for the BERT tester."
        ::= { wfDs1E1Group 14 }

    wfDs1E1BertStatsEntry OBJECT-TYPE
        SYNTAX	WfDs1E1BertStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the DS1E1 Bert Stats table"
        INDEX	{ wfDs1E1BertStatsPortLineNumber }
        ::= { wfDs1E1BertStatsTable 1 }

    WfDs1E1BertStatsEntry ::= SEQUENCE {
    	    wfDs1E1BertStatsPortLineNumber
    		INTEGER,
    	    wfDs1E1BertStatsBitErrors
    		Counter,
    	    wfDs1E1BertStatsBits
    		Counter
        }

    wfDs1E1BertStatsPortLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Slot, filled in by driver"
        ::= { wfDs1E1BertStatsEntry 1 }

    wfDs1E1BertStatsBitErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Bit error counter"
        ::= { wfDs1E1BertStatsEntry 2 }

    wfDs1E1BertStatsBits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Bit counter"
        ::= { wfDs1E1BertStatsEntry 3 }

    wfDs1E1CurrentFramerStatsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1E1CurrentFramerStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Framer stats line record - This table contains the
                statistics for the Framer tester."
        ::= { wfDs1E1Group 15 }

    wfDs1E1CurrentFramerStatsEntry OBJECT-TYPE
        SYNTAX	WfDs1E1CurrentFramerStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the DS1E1 CurrentFramer Stats table"
        INDEX	{ wfDs1E1CurrentFramerStatsPortLineNumber }
        ::= { wfDs1E1CurrentFramerStatsTable 1 }

    WfDs1E1CurrentFramerStatsEntry ::= SEQUENCE {
    	    wfDs1E1CurrentFramerStatsPortLineNumber
    		INTEGER,
    	    wfDs1E1CurrentFramerStatsMediaType
    		INTEGER,
    	    wfDs1E1CurrentFramerStatsBpvCounts
    		Gauge,
    	    wfDs1E1CurrentFramerStatsCrc4Counts
    		Gauge,
    	    wfDs1E1CurrentFramerStatsFebeCounts
    		Gauge,
    	    wfDs1E1CurrentFramerStatsOofCounts
    		Gauge,
    	    wfDs1E1CurrentFramerStatsFeCounts
    		Gauge,
    	    wfDs1E1CurrentFramerStatsLossFrameFailures
    		Gauge,
    	    wfDs1E1CurrentFramerStatsLossSignalFailures
    		Gauge,
    	    wfDs1E1CurrentFramerStatsAlarmIndicationFailures
    		Gauge,
    	    wfDs1E1CurrentFramerStatsRemoteAlarmFailures
    		Gauge
        }

    wfDs1E1CurrentFramerStatsPortLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Slot, filled in by driver"
        ::= { wfDs1E1CurrentFramerStatsEntry 1 }

    wfDs1E1CurrentFramerStatsMediaType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    t1(1),
    		    e1(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The media type is either T1 or E1"
        ::= { wfDs1E1CurrentFramerStatsEntry 2 }

    wfDs1E1CurrentFramerStatsBpvCounts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "bipolar violations counter"
        ::= { wfDs1E1CurrentFramerStatsEntry 3 }

    wfDs1E1CurrentFramerStatsCrc4Counts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "CRC4 error counter"
        ::= { wfDs1E1CurrentFramerStatsEntry 4 }

    wfDs1E1CurrentFramerStatsFebeCounts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Far End Block Error counter"
        ::= { wfDs1E1CurrentFramerStatsEntry 5 }

    wfDs1E1CurrentFramerStatsOofCounts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Out of frame error counts. Out of frame is declared when at least two
                of four (or five) consecutive framing bits are in error."
        ::= { wfDs1E1CurrentFramerStatsEntry 6 }

    wfDs1E1CurrentFramerStatsFeCounts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Framing error counts. In ESF mode this is the number of errored
                superframes while in SF mode it is the number of incorrect framing
                bits."
        ::= { wfDs1E1CurrentFramerStatsEntry 7 }

    wfDs1E1CurrentFramerStatsLossFrameFailures OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Loss of frame failures. These occur when an out of frame event or
                carrier loss happens"
        ::= { wfDs1E1CurrentFramerStatsEntry 8 }

    wfDs1E1CurrentFramerStatsLossSignalFailures OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Loss of Signal failure happen when receive carrier is lost"
        ::= { wfDs1E1CurrentFramerStatsEntry 9 }

    wfDs1E1CurrentFramerStatsAlarmIndicationFailures OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Alarm Indication signal Failures occur when 2 consecutive frames have
                less than 3 zeros (total) in the data stream."
        ::= { wfDs1E1CurrentFramerStatsEntry 10 }

    wfDs1E1CurrentFramerStatsRemoteAlarmFailures OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Remote alarm failure happen when the yellow alarm is detected"
        ::= { wfDs1E1CurrentFramerStatsEntry 11 }

    wfDs1E1TotalFramerStatsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1E1TotalFramerStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Total framer stats line record - This table contains the
                statistics for the Framer."
        ::= { wfDs1E1Group 16 }

    wfDs1E1TotalFramerStatsEntry OBJECT-TYPE
        SYNTAX	WfDs1E1TotalFramerStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the DS1E1 TotalFramer Stats table"
        INDEX	{ wfDs1E1TotalFramerStatsPortLineNumber }
        ::= { wfDs1E1TotalFramerStatsTable 1 }

    WfDs1E1TotalFramerStatsEntry ::= SEQUENCE {
    	    wfDs1E1TotalFramerStatsPortLineNumber
    		INTEGER,
    	    wfDs1E1TotalFramerStatsMediaType
    		INTEGER,
    	    wfDs1E1TotalFramerStatsValidIntervals
    		Gauge,
    	    wfDs1E1TotalFramerStatsBpvCounts
    		Gauge,
    	    wfDs1E1TotalFramerStatsCrc4Counts
    		Gauge,
    	    wfDs1E1TotalFramerStatsFebeCounts
    		Gauge,
    	    wfDs1E1TotalFramerStatsOofCounts
    		Gauge,
    	    wfDs1E1TotalFramerStatsFeCounts
    		Gauge,
    	    wfDs1E1TotalFramerStatsLossFrameFailures
    		Gauge,
    	    wfDs1E1TotalFramerStatsLossSignalFailures
    		Gauge,
    	    wfDs1E1TotalFramerStatsAlarmIndicationFailures
    		Gauge,
    	    wfDs1E1TotalFramerStatsRemoteAlarmFailures
    		Gauge
        }

    wfDs1E1TotalFramerStatsPortLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Slot, filled in by driver"
        ::= { wfDs1E1TotalFramerStatsEntry 1 }

    wfDs1E1TotalFramerStatsMediaType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    t1(1),
    		    e1(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "bipolar violations counter"
        ::= { wfDs1E1TotalFramerStatsEntry 2 }

    wfDs1E1TotalFramerStatsValidIntervals OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of valid 15 minutes intervals in the last 24-hour period"
        ::= { wfDs1E1TotalFramerStatsEntry 3 }

    wfDs1E1TotalFramerStatsBpvCounts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "bipolar violations counter"
        ::= { wfDs1E1TotalFramerStatsEntry 4 }

    wfDs1E1TotalFramerStatsCrc4Counts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "CRC4 error counter"
        ::= { wfDs1E1TotalFramerStatsEntry 5 }

    wfDs1E1TotalFramerStatsFebeCounts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Far End Block Error counter"
        ::= { wfDs1E1TotalFramerStatsEntry 6 }

    wfDs1E1TotalFramerStatsOofCounts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Out of frame error counts. Out of frame is declared when at least two
                of four (or five) consecutive framing bits are in error."
        ::= { wfDs1E1TotalFramerStatsEntry 7 }

    wfDs1E1TotalFramerStatsFeCounts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Framing error counts. In ESF mode this is the number of errored
                superframes while in SF mode it is the number of incorrect framing
                bits."
        ::= { wfDs1E1TotalFramerStatsEntry 8 }

    wfDs1E1TotalFramerStatsLossFrameFailures OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Loss of frame failures. These occur when an out of frame event or
                carrier loss happens"
        ::= { wfDs1E1TotalFramerStatsEntry 9 }

    wfDs1E1TotalFramerStatsLossSignalFailures OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Loss of Signal failure happen when receive carrier is lost"
        ::= { wfDs1E1TotalFramerStatsEntry 10 }

    wfDs1E1TotalFramerStatsAlarmIndicationFailures OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Alarm Indication signal Failures occur when 2 consecutive frames have
                less than 3 zeros (total) in the data stream."
        ::= { wfDs1E1TotalFramerStatsEntry 11 }

    wfDs1E1TotalFramerStatsRemoteAlarmFailures OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Remote alarm failure happen when the yellow alarm is detected"
        ::= { wfDs1E1TotalFramerStatsEntry 12 }

    wfDs1E1IntervalFramerStatsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1E1IntervalFramerStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Interval Framer stats line record - This table contains the
                statistics for the Framer."
        ::= { wfDs1E1Group 17 }

    wfDs1E1IntervalFramerStatsEntry OBJECT-TYPE
        SYNTAX	WfDs1E1IntervalFramerStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the DS1E1 IntervalFramer Stats table"
        INDEX	{ wfDs1E1IntervalFramerStatsPortLineNumber,
    		  wfDs1E1IntervalFramerStatsIntervalNumber }
        ::= { wfDs1E1IntervalFramerStatsTable 1 }

    WfDs1E1IntervalFramerStatsEntry ::= SEQUENCE {
    	    wfDs1E1IntervalFramerStatsPortLineNumber
    		INTEGER,
    	    wfDs1E1IntervalFramerStatsIntervalNumber
    		INTEGER,
    	    wfDs1E1IntervalFramerStatsMediaType
    		INTEGER,
    	    wfDs1E1IntervalFramerStatsBpvCounts
    		Gauge,
    	    wfDs1E1IntervalFramerStatsCrc4Counts
    		Gauge,
    	    wfDs1E1IntervalFramerStatsFebeCounts
    		Gauge,
    	    wfDs1E1IntervalFramerStatsOofCounts
    		Gauge,
    	    wfDs1E1IntervalFramerStatsFeCounts
    		Gauge,
    	    wfDs1E1IntervalFramerStatsLossFrameFailures
    		Gauge,
    	    wfDs1E1IntervalFramerStatsLossSignalFailures
    		Gauge,
    	    wfDs1E1IntervalFramerStatsAlarmIndicationFailures
    		Gauge,
    	    wfDs1E1IntervalFramerStatsRemoteAlarmFailures
    		Gauge
        }

    wfDs1E1IntervalFramerStatsPortLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Slot, filled in by driver"
        ::= { wfDs1E1IntervalFramerStatsEntry 1 }

    wfDs1E1IntervalFramerStatsIntervalNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID interval number, filled in by driver"
        ::= { wfDs1E1IntervalFramerStatsEntry 2 }

    wfDs1E1IntervalFramerStatsMediaType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    t1(1),
    		    e1(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Media Type, T1 or E1"
        ::= { wfDs1E1IntervalFramerStatsEntry 3 }

    wfDs1E1IntervalFramerStatsBpvCounts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "bipolar violations counter"
        ::= { wfDs1E1IntervalFramerStatsEntry 4 }

    wfDs1E1IntervalFramerStatsCrc4Counts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "CRC4 error counter"
        ::= { wfDs1E1IntervalFramerStatsEntry 5 }

    wfDs1E1IntervalFramerStatsFebeCounts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Far End Block Error counter"
        ::= { wfDs1E1IntervalFramerStatsEntry 6 }

    wfDs1E1IntervalFramerStatsOofCounts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Out of frame error counts. Out of frame is declared when at least two
                of four (or five) consecutive framing bits are in error."
        ::= { wfDs1E1IntervalFramerStatsEntry 7 }

    wfDs1E1IntervalFramerStatsFeCounts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Framing error counts. In ESF mode this is the number of errored
                superframes while in SF mode it is the number of incorrect framing
                bits."
        ::= { wfDs1E1IntervalFramerStatsEntry 8 }

    wfDs1E1IntervalFramerStatsLossFrameFailures OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Loss of frame failures. These occur when an out of frame event or
                carrier loss happens"
        ::= { wfDs1E1IntervalFramerStatsEntry 9 }

    wfDs1E1IntervalFramerStatsLossSignalFailures OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Loss of Signal failure happen when receive carrier is lost"
        ::= { wfDs1E1IntervalFramerStatsEntry 10 }

    wfDs1E1IntervalFramerStatsAlarmIndicationFailures OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Alarm Indication signal Failures occur when 2 consecutive frames have
                less than 3 zeros (total) in the data stream."
        ::= { wfDs1E1IntervalFramerStatsEntry 11 }

    wfDs1E1IntervalFramerStatsRemoteAlarmFailures OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Remote alarm failure happen when the yellow alarm is detected"
        ::= { wfDs1E1IntervalFramerStatsEntry 12 }

    wfDs1E1ClockTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs1E1ClockEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "DS1E1  clock record - Contains Clock parameters supporting
		the QMCT1. "
        ::= { wfDs1E1Group 18 }

    wfDs1E1ClockEntry OBJECT-TYPE
        SYNTAX	WfDs1E1ClockEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the DS1E1 clock table"
        INDEX	{ wfDs1E1ClockPortLineNumber }
        ::= { wfDs1E1ClockTable 1 }

    WfDs1E1ClockEntry ::= SEQUENCE {
    	    wfDs1E1ClockDelete
    		INTEGER,
    	    wfDs1E1ClockPortLineNumber
    		INTEGER,
    	    wfDs1E1ClockPrimaryClock
    		INTEGER,
    	    wfDs1E1ClockSecondaryClock
    		INTEGER,
    	    wfDs1E1ClockCurrentClock
    		INTEGER,
    	    wfDs1E1ClockLoopClockOperational
    		INTEGER,
    	    wfDs1E1ClockExtClockOperational
    		INTEGER
        }

    wfDs1E1ClockDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete attribute"
        DEFVAL	{ created }
        ::= { wfDs1E1ClockEntry 1 }

    wfDs1E1ClockPortLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The index ID for this record. It is the line number assigned
		to a port in the wfDs1E1PortMapEntry for a port.connector pair.
		Its channel field should be 0."
        ::= { wfDs1E1ClockEntry 2 }

    wfDs1E1ClockPrimaryClock OBJECT-TYPE
        SYNTAX	INTEGER {
    		    internal(1),
    		    external(2),
    		    loop1(3),
    		    loop2(4),
		    loop3(5),
		    loop4(6)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the primary source for transmit timing for this
		port.  The options for timing source are internal timing
		source, loop timing from either port and an external timing
		source.  Note that the bit defines are equal to the Timing
		Register bit definitions plus 1."
        DEFVAL	{ internal }
        ::= { wfDs1E1ClockEntry 3 }

    wfDs1E1ClockSecondaryClock OBJECT-TYPE
        SYNTAX	INTEGER {
    		    internal(1),
    		    external(2),
    		    loop1(3),
    		    loop2(4),
		    loop3(5),
		    loop4(6)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the secondary source for transmit timing for this
		port."
        DEFVAL	{ internal }
        ::= { wfDs1E1ClockEntry 4 }

    wfDs1E1ClockCurrentClock OBJECT-TYPE
        SYNTAX	INTEGER {
    		    internal(1),
    		    external(2),
    		    loop1(3),
    		    loop2(4),
		    loop3(5),
		    loop4(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Specifies the current source for transmit timing for this
		port."
        ::= { wfDs1E1ClockEntry 5 }

    wfDs1E1ClockLoopClockOperational OBJECT-TYPE
        SYNTAX	INTEGER {
    		    present(1),
    		    notpresent(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies this ports Loop Clock Status, PRESENT (UP) or
		NOTPRESENT (DOWN)."
        DEFVAL	{ present }
        ::= { wfDs1E1ClockEntry 6 }

    wfDs1E1ClockExtClockOperational OBJECT-TYPE
        SYNTAX	INTEGER {
    		    present(1),
    		    notpresent(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the External clock is operational."
        DEFVAL	{ present }
        ::= { wfDs1E1ClockEntry 7 }

    END  -- Wellfleet-DS1E1-MIB
-- @(#)WSCCS a/mibs-ds3.mib 1.1 8/30/95
Wellfleet-DS3-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:40:18 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfDs3Group
        FROM Wellfleet-COMMON-MIB;


    wfDs3Config OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs3ConfigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS3 Configuration table"
        ::= { wfDs3Group 1 }

    wfDs3ConfigEntry OBJECT-TYPE
        SYNTAX	WfDs3ConfigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS3 configuration objects; wfDs3LineIndex
                corresponds to Wellfleet circuit number"
        INDEX	{ wfDs3LineIndex }
        ::= { wfDs3Config 1 }

    WfDs3ConfigEntry ::= SEQUENCE {
    	    wfDs3LineIndex
    		INTEGER,
    	    wfDs3TimeElapsed
    		INTEGER,
    	    wfDs3ValidIntervals
    		INTEGER,
    	    wfDs3LineType
    		INTEGER,
    	    wfDs3ZeroCoding
    		INTEGER,
    	    wfDs3SendCode
    		INTEGER,
    	    wfDs3CircuitIdentifier
    		DisplayString,
    	    wfDs3LoopbackConfig
    		INTEGER,
    	    wfDs3LineStatus
    		INTEGER
        }

    wfDs3LineIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDs3ConfigEntry 1 }

    wfDs3TimeElapsed OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "1..900 seconds within the current 15-minute interval"
        ::= { wfDs3ConfigEntry 2 }

    wfDs3ValidIntervals OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "0..96 previous intervals that valid data
                were collected. This is 96 unless the CSU
                device was brought on line within the last 24
                hours."
        ::= { wfDs3ConfigEntry 3 }

    wfDs3LineType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    ds3cbitparity(4),
    		    ds3clearchannel(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the variety of DS3 implementing this circuit"
        ::= { wfDs3ConfigEntry 4 }

    wfDs3ZeroCoding OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ds3b3zs(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the variety of Zero Code Suppression used on the link"
        ::= { wfDs3ConfigEntry 5 }

    wfDs3SendCode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ds3sendnocode(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the type of code being sent across the DS3 circuit by
                the CSU"
        ::= { wfDs3ConfigEntry 6 }

    wfDs3CircuitIdentifier OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the transmission vendor's circuit identifier"
        ::= { wfDs3ConfigEntry 7 }

    wfDs3LoopbackConfig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ds3noloop(1),
    		    ds3mgrpayloadloop(2),
    		    ds3mgrlineloop(3),
    		    ds3netreqpayloadloop(4),
    		    ds3netreqlineloop(5),
    		    ds3otherloop(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the loopback state of the CSU"
        ::= { wfDs3ConfigEntry 8 }

    wfDs3LineStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ds3noalarm(1),
    		    ds3farendalarm(2),
    		    ds3alarmindicationsignal(4),
    		    ds3lossofframe(8),
    		    ds3lossofsignal(16),
    		    ds3loopbackstate(32)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the state of the DS3 line"
        ::= { wfDs3ConfigEntry 9 }

    wfDs3Current OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs3CurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS3 Current table"
        ::= { wfDs3Group 2 }

    wfDs3CurrentEntry OBJECT-TYPE
        SYNTAX	WfDs3CurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS3 current objects - wfDs3CurrentIndex
                corresponds to Wellfleet circuit number"
        INDEX	{ wfDs3CurrentIndex }
        ::= { wfDs3Current 1 }

    WfDs3CurrentEntry ::= SEQUENCE {
    	    wfDs3CurrentIndex
    		INTEGER,
    	    wfDs3CurrentESs
    		Counter,
    	    wfDs3CurrentSESs
    		Counter,
    	    wfDs3CurrentSEFs
    		Counter,
    	    wfDs3CurrentUASs
    		Counter,
    	    wfDs3CurrentBPVs
    		Counter,
    	    wfDs3CurrentCVs
    		Counter
        }

    wfDs3CurrentIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDs3CurrentEntry 1 }

    wfDs3CurrentESs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of errored seconds in the current interval"
        ::= { wfDs3CurrentEntry 2 }

    wfDs3CurrentSESs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of severely errored seconds in the
                current interval"
        ::= { wfDs3CurrentEntry 3 }

    wfDs3CurrentSEFs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of severely errored framing seconds in the current
                interval"
        ::= { wfDs3CurrentEntry 4 }

    wfDs3CurrentUASs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of unavailable seconds in the current interval"
        ::= { wfDs3CurrentEntry 5 }

    wfDs3CurrentBPVs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of bipolar violations in the current interval"
        ::= { wfDs3CurrentEntry 6 }

    wfDs3CurrentCVs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of code violation error events in the
                current interval"
        ::= { wfDs3CurrentEntry 7 }

    wfDs3Interval OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs3IntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS3 Interval table"
        ::= { wfDs3Group 3 }

    wfDs3IntervalEntry OBJECT-TYPE
        SYNTAX	WfDs3IntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS3 interval objects - wfDs3IntervalIndex
                corresponds to Wellfleet circuit number,
                wfDs3IntervalNumber is the numbered previous
                15-minute interval"
        INDEX	{ wfDs3IntervalIndex,
    		  wfDs3IntervalNumber }
        ::= { wfDs3Interval 1 }

    WfDs3IntervalEntry ::= SEQUENCE {
    	    wfDs3IntervalIndex
    		INTEGER,
    	    wfDs3IntervalNumber
    		INTEGER,
    	    wfDs3IntervalESs
    		Gauge,
    	    wfDs3IntervalSESs
    		Gauge,
    	    wfDs3IntervalSEFs
    		Gauge,
    	    wfDs3IntervalUASs
    		Gauge,
    	    wfDs3IntervalBPVs
    		Gauge,
    	    wfDs3IntervalCVs
    		Gauge
        }

    wfDs3IntervalIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDs3IntervalEntry 1 }

    wfDs3IntervalNumber OBJECT-TYPE
        SYNTAX	INTEGER(1..96)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "1..96 where 1 is the most recent 15-minute interval and 96 is
                the least"
        ::= { wfDs3IntervalEntry 2 }

    wfDs3IntervalESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of errored seconds in the specified interval"
        ::= { wfDs3IntervalEntry 3 }

    wfDs3IntervalSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of severely errored seconds in the specified
                interval"
        ::= { wfDs3IntervalEntry 4 }

    wfDs3IntervalSEFs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of severely errored framing seconds in the specified
                interval"
        ::= { wfDs3IntervalEntry 5 }

    wfDs3IntervalUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of unavailable seconds in the specified interval"
        ::= { wfDs3IntervalEntry 6 }

    wfDs3IntervalBPVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of bipolar violations in the specified interval"
        ::= { wfDs3IntervalEntry 7 }

    wfDs3IntervalCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of code violation error events in the
                specified interval"
        ::= { wfDs3IntervalEntry 8 }

    wfDs3Total OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs3TotalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS3 Total table"
        ::= { wfDs3Group 4 }

    wfDs3TotalEntry OBJECT-TYPE
        SYNTAX	WfDs3TotalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS3 total objects - wfDs3TotalIndex
                corresponds to Wellfleet circuit number"
        INDEX	{ wfDs3TotalIndex }
        ::= { wfDs3Total 1 }

    WfDs3TotalEntry ::= SEQUENCE {
    	    wfDs3TotalIndex
    		INTEGER,
    	    wfDs3TotalESs
    		Gauge,
    	    wfDs3TotalSESs
    		Gauge,
    	    wfDs3TotalSEFs
    		Gauge,
    	    wfDs3TotalUASs
    		Gauge,
    	    wfDs3TotalBPVs
    		Gauge,
    	    wfDs3TotalCVs
    		Gauge
        }

    wfDs3TotalIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDs3TotalEntry 1 }

    wfDs3TotalESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of errored seconds"
        ::= { wfDs3TotalEntry 2 }

    wfDs3TotalSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of severely errored seconds"
        ::= { wfDs3TotalEntry 3 }

    wfDs3TotalSEFs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of severely errored framing seconds"
        ::= { wfDs3TotalEntry 4 }

    wfDs3TotalUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total number of unavailable seconds"
        ::= { wfDs3TotalEntry 5 }

    wfDs3TotalBPVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of bipolar violations"
        ::= { wfDs3TotalEntry 6 }

    wfDs3TotalCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of code violation error events"
        ::= { wfDs3TotalEntry 7 }

    wfDs3FeConfig OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs3FeConfigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS3 Far End Configuration table"
        ::= { wfDs3Group 5 }

    wfDs3FeConfigEntry OBJECT-TYPE
        SYNTAX	WfDs3FeConfigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS3 far end config objects -
                wfDs3FeIntervalIndex corresponds to Wellfleet circuit
                number"
        INDEX	{ wfDs3FeConfigIndex }
        ::= { wfDs3FeConfig 1 }

    WfDs3FeConfigEntry ::= SEQUENCE {
    	    wfDs3FeConfigIndex
    		INTEGER,
    	    wfDs3FarEndEquipCode
    		DisplayString,
    	    wfDs3FarEndLocationIDCode
    		DisplayString,
    	    wfDs3FarEndFrameIDCode
    		DisplayString,
    	    wfDs3FarEndUnitCode
    		DisplayString,
    	    wfDs3FarEndFacilityIDCode
    		DisplayString
        }

    wfDs3FeConfigIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDs3FeConfigEntry 1 }

    wfDs3FarEndEquipCode OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "equipment description code - C-bit parity only"
        ::= { wfDs3FeConfigEntry 2 }

    wfDs3FarEndLocationIDCode OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "equipment location code - C-bit parity only"
        ::= { wfDs3FeConfigEntry 3 }

    wfDs3FarEndFrameIDCode OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "code for the equipment location within a building"
        ::= { wfDs3FeConfigEntry 4 }

    wfDs3FarEndUnitCode OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "code for the equipment location within a bay"
        ::= { wfDs3FeConfigEntry 5 }

    wfDs3FarEndFacilityIDCode OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "path identification code"
        ::= { wfDs3FeConfigEntry 6 }

    wfDs3FeCurrent OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs3FeCurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS3 Far End Current table"
        ::= { wfDs3Group 6 }

    wfDs3FeCurrentEntry OBJECT-TYPE
        SYNTAX	WfDs3FeCurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS3 far end current objects
                wfDs3FeCurrentIndex corresponds to Wellfleet circuit
                number"
        INDEX	{ wfDs3FeCurrentIndex }
        ::= { wfDs3FeCurrent 1 }

    WfDs3FeCurrentEntry ::= SEQUENCE {
    	    wfDs3FeCurrentIndex
    		INTEGER,
    	    wfDs3FeCurrentESs
    		Counter,
    	    wfDs3FeCurrentSESs
    		Counter,
    	    wfDs3FeCurrentCVs
    		Counter
        }

    wfDs3FeCurrentIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDs3FeCurrentEntry 1 }

    wfDs3FeCurrentESs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of errored seconds in the current interval"
        ::= { wfDs3FeCurrentEntry 2 }

    wfDs3FeCurrentSESs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of severely errored seconds in the
                current interval"
        ::= { wfDs3FeCurrentEntry 3 }

    wfDs3FeCurrentCVs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of code violation error events in the
                current interval"
        ::= { wfDs3FeCurrentEntry 4 }

    wfDs3FeInterval OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs3FeIntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS3 Far End Interval table"
        ::= { wfDs3Group 7 }

    wfDs3FeIntervalEntry OBJECT-TYPE
        SYNTAX	WfDs3FeIntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS3 far end interval objects -
                wfDs3FeIntervalIndex corresponds to Wellfleet circuit
                number, wfDs3FeIntervalNumber is the numbered previous
                15-minute interval"
        INDEX	{ wfDs3FeIntervalIndex,
    		  wfDs3FeIntervalNumber }
        ::= { wfDs3FeInterval 1 }

    WfDs3FeIntervalEntry ::= SEQUENCE {
    	    wfDs3FeIntervalIndex
    		INTEGER,
    	    wfDs3FeIntervalNumber
    		INTEGER,
    	    wfDs3FeIntervalESs
    		Gauge,
    	    wfDs3FeIntervalSESs
    		Gauge,
    	    wfDs3FeIntervalCVs
    		Gauge
        }

    wfDs3FeIntervalIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDs3FeIntervalEntry 1 }

    wfDs3FeIntervalNumber OBJECT-TYPE
        SYNTAX	INTEGER(1..96)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "1..96 where 1 is the most recent 15-minute interval and 96 is
                the least"
        ::= { wfDs3FeIntervalEntry 2 }

    wfDs3FeIntervalESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of errored seconds in the specified interval"
        ::= { wfDs3FeIntervalEntry 3 }

    wfDs3FeIntervalSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of severely errored seconds in the
                specified interval"
        ::= { wfDs3FeIntervalEntry 4 }

    wfDs3FeIntervalCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of code violation error events in the
                specified interval"
        ::= { wfDs3FeIntervalEntry 5 }

    wfDs3FeTotal OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDs3FeTotalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS3 Far End Total table"
        ::= { wfDs3Group 8 }

    wfDs3FeTotalEntry OBJECT-TYPE
        SYNTAX	WfDs3FeTotalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit far end DS3 total objects - wfDs3FeTotalIndex
                corresponds to Wellfleet circuit number"
        INDEX	{ wfDs3FeTotalIndex }
        ::= { wfDs3FeTotal 1 }

    WfDs3FeTotalEntry ::= SEQUENCE {
    	    wfDs3FeTotalIndex
    		INTEGER,
    	    wfDs3FeTotalESs
    		Gauge,
    	    wfDs3FeTotalSESs
    		Gauge,
    	    wfDs3FeTotalCVs
    		Gauge
        }

    wfDs3FeTotalIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDs3FeTotalEntry 1 }

    wfDs3FeTotalESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of errored seconds"
        ::= { wfDs3FeTotalEntry 2 }

    wfDs3FeTotalSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of severely errored seconds"
        ::= { wfDs3FeTotalEntry 3 }

    wfDs3FeTotalCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of code violation error events"
        ::= { wfDs3FeTotalEntry 4 }

    END  -- Wellfleet-DS3-MIB
-- @(#)WSCCS q/mibs-dsx3.mib 1.1 8/30/95
Wellfleet-DSX3-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:40:23 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfDsx3Group
        FROM Wellfleet-COMMON-MIB;


    wfDsx3ConfigTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDsx3ConfigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS3/E3 Configuration table"
        ::= { wfDsx3Group 1 }

    wfDsx3ConfigEntry OBJECT-TYPE
        SYNTAX	WfDsx3ConfigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS3/E3 configuration objects; wfDsx3LineIndex
                corresponds to Wellfleet circuit number"
        INDEX	{ wfDsx3LineIndex }
        ::= { wfDsx3ConfigTable 1 }

    WfDsx3ConfigEntry ::= SEQUENCE {
    	    wfDsx3LineIndex
    		INTEGER,
    	    wfDsx3IfIndex
    		INTEGER,
    	    wfDsx3TimeElapsed
    		INTEGER,
    	    wfDsx3ValidIntervals
    		INTEGER,
    	    wfDsx3LineType
    		INTEGER,
    	    wfDsx3LineCoding
    		INTEGER,
    	    wfDsx3SendCode
    		INTEGER,
    	    wfDsx3CircuitIdentifier
    		DisplayString,
    	    wfDsx3LoopbackConfig
    		INTEGER,
    	    wfDsx3LineStatus
    		INTEGER,
    	    wfDsx3TransmitClockSource
    		INTEGER
        }

    wfDsx3LineIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDsx3ConfigEntry 1 }

    wfDsx3IfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this is value of ifIndex from the Interfaces table of
                MIB II (RFC 1213)."
        ::= { wfDsx3ConfigEntry 2 }

    wfDsx3TimeElapsed OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "0..899 seconds elapsed within the current 15-minute interval"
        ::= { wfDsx3ConfigEntry 3 }

    wfDsx3ValidIntervals OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "0..96 previous intervals that valid data were collected.
                This is 96 unless the device was brought on line within
                    the last 24 hours."
        ::= { wfDsx3ConfigEntry 4 }

    wfDsx3LineType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ds3other(1),
    		    ds3m23(2),
    		    ds3syntran(3),
    		    ds3cbitparity(4),
    		    ds3clearchannel(5),
    		    e3other(6),
    		    e3framed(7),
    		    e3plcp(8)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the variety of DS3/E3 application implementing this circuit"
        ::= { wfDsx3ConfigEntry 5 }

    wfDsx3LineCoding OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    b3zs(2),
    		    hdb3(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the variety of Zero Code Suppression used on the link"
        ::= { wfDsx3ConfigEntry 6 }

    wfDsx3SendCode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    nocode(1),
    		    linecode(2),
    		    payloadcode(3),
    		    resetcode(4),
    		    ds1loopcode(5),
    		    testpattern(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the type of code being sent across the DS3/E3 circuit by
                the device"
        ::= { wfDsx3ConfigEntry 7 }

    wfDsx3CircuitIdentifier OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the transmission vendor's circuit identifier"
        ::= { wfDsx3ConfigEntry 8 }

    wfDsx3LoopbackConfig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    noloop(1),
    		    payloadloop(2),
    		    lineloop(3),
    		    otherloop(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the loopback configuration of the DS3/E3 interface"
        ::= { wfDsx3ConfigEntry 9 }

    wfDsx3LineStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    noalarm(1),
    		    rcrai(2),
    		    txrai(4),
    		    rcais(8),
    		    txais(16),
    		    lof(32),
    		    los(64),
    		    loopback(128),
    		    rctestcode(256),
    		    otherfailure(512)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the status of the DS3/E3 line"
        ::= { wfDsx3ConfigEntry 10 }

    wfDsx3TransmitClockSource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    looptiming(1),
    		    localtiming(2),
    		    throughtiming(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the source of Transmit Clock for the DS3/E3 interface"
        ::= { wfDsx3ConfigEntry 11 }

    wfDsx3CurrentTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDsx3CurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS3/E3 Current table"
        ::= { wfDsx3Group 2 }

    wfDsx3CurrentEntry OBJECT-TYPE
        SYNTAX	WfDsx3CurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS3/E3 current objects - wfDsx3CurrentIndex
                corresponds to Wellfleet circuit number"
        INDEX	{ wfDsx3CurrentIndex }
        ::= { wfDsx3CurrentTable 1 }

    WfDsx3CurrentEntry ::= SEQUENCE {
    	    wfDsx3CurrentIndex
    		INTEGER,
    	    wfDsx3CurrentPESs
    		Gauge,
    	    wfDsx3CurrentPSESs
    		Gauge,
    	    wfDsx3CurrentSEFSs
    		Gauge,
    	    wfDsx3CurrentUASs
    		Gauge,
    	    wfDsx3CurrentLCVs
    		Gauge,
    	    wfDsx3CurrentPCVs
    		Gauge,
    	    wfDsx3CurrentLESs
    		Gauge,
    	    wfDsx3CurrentCCVs
    		Gauge,
    	    wfDsx3CurrentCESs
    		Gauge,
    	    wfDsx3CurrentCSESs
    		Gauge
        }

    wfDsx3CurrentIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDsx3CurrentEntry 1 }

    wfDsx3CurrentPESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of P-bit Errored Seconds in the current interval"
        ::= { wfDsx3CurrentEntry 2 }

    wfDsx3CurrentPSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of P-bit Severely Errored Seconds in the
                current interval"
        ::= { wfDsx3CurrentEntry 3 }

    wfDsx3CurrentSEFSs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of Severely Errored Framing Seconds in the
                current interval"
        ::= { wfDsx3CurrentEntry 4 }

    wfDsx3CurrentUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of Unavailable Seconds in the current interval"
        ::= { wfDsx3CurrentEntry 5 }

    wfDsx3CurrentLCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of Line Coding Violations in the current interval"
        ::= { wfDsx3CurrentEntry 6 }

    wfDsx3CurrentPCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of P-bit Coding Violations in the current interval"
        ::= { wfDsx3CurrentEntry 7 }

    wfDsx3CurrentLESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of Line Errored Seconds in the current interval"
        ::= { wfDsx3CurrentEntry 8 }

    wfDsx3CurrentCCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of C-bit Coding Violations in the current interval"
        ::= { wfDsx3CurrentEntry 9 }

    wfDsx3CurrentCESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of C-bit Errored Seconds in the current interval"
        ::= { wfDsx3CurrentEntry 10 }

    wfDsx3CurrentCSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of C-bit Severely Errored Seconds
                in the current interval"
        ::= { wfDsx3CurrentEntry 11 }

    wfDsx3IntervalTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDsx3IntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS3/E3 Interval table"
        ::= { wfDsx3Group 3 }

    wfDsx3IntervalEntry OBJECT-TYPE
        SYNTAX	WfDsx3IntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS3/E3 interval objects - wfDsx3IntervalIndex
                corresponds to Wellfleet circuit number,
                wfDsx3IntervalNumber is the numbered previous
                15-minute interval"
        INDEX	{ wfDsx3IntervalIndex,
    		  wfDsx3IntervalNumber }
        ::= { wfDsx3IntervalTable 1 }

    WfDsx3IntervalEntry ::= SEQUENCE {
    	    wfDsx3IntervalIndex
    		INTEGER,
    	    wfDsx3IntervalNumber
    		INTEGER,
    	    wfDsx3IntervalPESs
    		Gauge,
    	    wfDsx3IntervalPSESs
    		Gauge,
    	    wfDsx3IntervalSEFSs
    		Gauge,
    	    wfDsx3IntervalUASs
    		Gauge,
    	    wfDsx3IntervalLCVs
    		Gauge,
    	    wfDsx3IntervalPCVs
    		Gauge,
    	    wfDsx3IntervalLESs
    		Gauge,
    	    wfDsx3IntervalCCVs
    		Gauge,
    	    wfDsx3IntervalCESs
    		Gauge,
    	    wfDsx3IntervalCSESs
    		Gauge
        }

    wfDsx3IntervalIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDsx3IntervalEntry 1 }

    wfDsx3IntervalNumber OBJECT-TYPE
        SYNTAX	INTEGER(1..96)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "1..96 where 1 is the most recent 15-minute interval and 96 is
                the least"
        ::= { wfDsx3IntervalEntry 2 }

    wfDsx3IntervalPESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of P-bit Errored Seconds in the specified interval"
        ::= { wfDsx3IntervalEntry 3 }

    wfDsx3IntervalPSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of P-bit Severely Errored Seconds in the
                specified interval"
        ::= { wfDsx3IntervalEntry 4 }

    wfDsx3IntervalSEFSs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of Severely Errored Framing Seconds in the
                specified interval"
        ::= { wfDsx3IntervalEntry 5 }

    wfDsx3IntervalUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of Unavailable Seconds in the specified interval"
        ::= { wfDsx3IntervalEntry 6 }

    wfDsx3IntervalLCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of Line Coding Violations in the specified interval"
        ::= { wfDsx3IntervalEntry 7 }

    wfDsx3IntervalPCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of P-bit Coding Violations in the specified interval"
        ::= { wfDsx3IntervalEntry 8 }

    wfDsx3IntervalLESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of Line Errored Seconds in the specified interval"
        ::= { wfDsx3IntervalEntry 9 }

    wfDsx3IntervalCCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of C-bit Coding Violations in the specified interval"
        ::= { wfDsx3IntervalEntry 10 }

    wfDsx3IntervalCESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of C-bit Errored Seconds in the specified interval"
        ::= { wfDsx3IntervalEntry 11 }

    wfDsx3IntervalCSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of C-bit Severely Errored Seconds
                in the specified interval"
        ::= { wfDsx3IntervalEntry 12 }

    wfDsx3TotalTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDsx3TotalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS3/E3 Total table"
        ::= { wfDsx3Group 4 }

    wfDsx3TotalEntry OBJECT-TYPE
        SYNTAX	WfDsx3TotalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS3/E3 total objects - wfDsx3TotalIndex
                corresponds to Wellfleet circuit number"
        INDEX	{ wfDsx3TotalIndex }
        ::= { wfDsx3TotalTable 1 }

    WfDsx3TotalEntry ::= SEQUENCE {
    	    wfDsx3TotalIndex
    		INTEGER,
    	    wfDsx3TotalPESs
    		Gauge,
    	    wfDsx3TotalPSESs
    		Gauge,
    	    wfDsx3TotalSEFSs
    		Gauge,
    	    wfDsx3TotalUASs
    		Gauge,
    	    wfDsx3TotalLCVs
    		Gauge,
    	    wfDsx3TotalPCVs
    		Gauge,
    	    wfDsx3TotalLESs
    		Gauge,
    	    wfDsx3TotalCCVs
    		Gauge,
    	    wfDsx3TotalCESs
    		Gauge,
    	    wfDsx3TotalCSESs
    		Gauge
        }

    wfDsx3TotalIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDsx3TotalEntry 1 }

    wfDsx3TotalPESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of P-bit Errored Seconds in the last 24 hours"
        ::= { wfDsx3TotalEntry 2 }

    wfDsx3TotalPSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of P-bit Severely Errored Seconds in the
                last 24 hours"
        ::= { wfDsx3TotalEntry 3 }

    wfDsx3TotalSEFSs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of Severely Errored Framing Seconds in the
                last 24 hours"
        ::= { wfDsx3TotalEntry 4 }

    wfDsx3TotalUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of Unavailable Seconds in the last 24 hours"
        ::= { wfDsx3TotalEntry 5 }

    wfDsx3TotalLCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of Line Coding Violations in the last 24 hours"
        ::= { wfDsx3TotalEntry 6 }

    wfDsx3TotalPCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of P-bit Coding Violations in the last 24 hours"
        ::= { wfDsx3TotalEntry 7 }

    wfDsx3TotalLESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of Line Errored Seconds in the last 24 hours"
        ::= { wfDsx3TotalEntry 8 }

    wfDsx3TotalCCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of C-bit Coding Violations in the last 24 hours"
        ::= { wfDsx3TotalEntry 9 }

    wfDsx3TotalCESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of C-bit Errored Seconds in the last 24 hours"
        ::= { wfDsx3TotalEntry 10 }

    wfDsx3TotalCSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of C-bit Severely Errored Seconds
                in the last 24 hours"
        ::= { wfDsx3TotalEntry 11 }

    wfDsx3FarEndConfigTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDsx3FarEndConfigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS3/E3 Far End Configuration table"
        ::= { wfDsx3Group 5 }

    wfDsx3FarEndConfigEntry OBJECT-TYPE
        SYNTAX	WfDsx3FarEndConfigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS3/E3 far end config objects -
                wfDsx3FarEndLineIndex corresponds to Wellfleet circuit
                number"
        INDEX	{ wfDsx3FarEndLineIndex }
        ::= { wfDsx3FarEndConfigTable 1 }

    WfDsx3FarEndConfigEntry ::= SEQUENCE {
    	    wfDsx3FarEndLineIndex
    		INTEGER,
    	    wfDsx3FarEndEquipCode
    		DisplayString,
    	    wfDsx3FarEndLocationIDCode
    		DisplayString,
    	    wfDsx3FarEndFrameIDCode
    		DisplayString,
    	    wfDsx3FarEndUnitCode
    		DisplayString,
    	    wfDsx3FarEndFacilityIDCode
    		DisplayString
        }

    wfDsx3FarEndLineIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDsx3FarEndConfigEntry 1 }

    wfDsx3FarEndEquipCode OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "equipment description code - C-bit parity only"
        ::= { wfDsx3FarEndConfigEntry 2 }

    wfDsx3FarEndLocationIDCode OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "equipment location code - C-bit parity only"
        ::= { wfDsx3FarEndConfigEntry 3 }

    wfDsx3FarEndFrameIDCode OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "code for the equipment location within a building"
        ::= { wfDsx3FarEndConfigEntry 4 }

    wfDsx3FarEndUnitCode OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "code for the equipment location within a bay"
        ::= { wfDsx3FarEndConfigEntry 5 }

    wfDsx3FarEndFacilityIDCode OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "path identification code"
        ::= { wfDsx3FarEndConfigEntry 6 }

    wfDsx3FarEndCurrentTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDsx3FarEndCurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS3/E3 Far End Current table"
        ::= { wfDsx3Group 6 }

    wfDsx3FarEndCurrentEntry OBJECT-TYPE
        SYNTAX	WfDsx3FarEndCurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS3/E3 far end current objects
                wfDsx3FarEndCurrentIndex corresponds to Wellfleet circuit
                number"
        INDEX	{ wfDsx3FarEndCurrentIndex }
        ::= { wfDsx3FarEndCurrentTable 1 }

    WfDsx3FarEndCurrentEntry ::= SEQUENCE {
    	    wfDsx3FarEndCurrentIndex
    		INTEGER,
    	    wfDsx3FarEndTimeElapsed
    		INTEGER,
    	    wfDsx3FarEndValidIntervals
    		INTEGER,
    	    wfDsx3FarEndCurrentCESs
    		Gauge,
    	    wfDsx3FarEndCurrentCSESs
    		Gauge,
    	    wfDsx3FarEndCurrentCCVs
    		Gauge,
    	    wfDsx3FarEndCurrentUASs
    		Gauge
        }

    wfDsx3FarEndCurrentIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDsx3FarEndCurrentEntry 1 }

    wfDsx3FarEndTimeElapsed OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of seconds since the beginning of
                the far end current interval"
        ::= { wfDsx3FarEndCurrentEntry 2 }

    wfDsx3FarEndValidIntervals OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of previous far end intervals for
                which valid data is available"
        ::= { wfDsx3FarEndCurrentEntry 3 }

    wfDsx3FarEndCurrentCESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of C-bit Errored Seconds in
                the current far end interval"
        ::= { wfDsx3FarEndCurrentEntry 4 }

    wfDsx3FarEndCurrentCSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of C-bit Severely Errored Seconds
                in the current far end interval"
        ::= { wfDsx3FarEndCurrentEntry 5 }

    wfDsx3FarEndCurrentCCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of C-bit Coding Violations
                in the current far end interval"
        ::= { wfDsx3FarEndCurrentEntry 6 }

    wfDsx3FarEndCurrentUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of Unavailable Seconds
                in the current far end interval"
        ::= { wfDsx3FarEndCurrentEntry 7 }

    wfDsx3FarEndIntervalTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDsx3FarEndIntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS3/E3 Far End Interval table"
        ::= { wfDsx3Group 7 }

    wfDsx3FarEndIntervalEntry OBJECT-TYPE
        SYNTAX	WfDsx3FarEndIntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS3/E3 far end interval objects -
                wfDsx3FarEndIntervalIndex corresponds to Wellfleet circuit
                number, wfDsx3FarEndIntervalNumber is the numbered previous
                15-minute interval"
        INDEX	{ wfDsx3FarEndIntervalIndex,
    		  wfDsx3FarEndIntervalNumber }
        ::= { wfDsx3FarEndIntervalTable 1 }

    WfDsx3FarEndIntervalEntry ::= SEQUENCE {
    	    wfDsx3FarEndIntervalIndex
    		INTEGER,
    	    wfDsx3FarEndIntervalNumber
    		INTEGER,
    	    wfDsx3FarEndIntervalCESs
    		Gauge,
    	    wfDsx3FarEndIntervalCSESs
    		Gauge,
    	    wfDsx3FarEndIntervalCCVs
    		Gauge,
    	    wfDsx3FarEndIntervalUASs
    		Gauge
        }

    wfDsx3FarEndIntervalIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDsx3FarEndIntervalEntry 1 }

    wfDsx3FarEndIntervalNumber OBJECT-TYPE
        SYNTAX	INTEGER(1..96)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "1..96 where 1 is the most recent 15-minute interval and 96 is
                the least"
        ::= { wfDsx3FarEndIntervalEntry 2 }

    wfDsx3FarEndIntervalCESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of C-bit Errored Seconds in the specified interval"
        ::= { wfDsx3FarEndIntervalEntry 3 }

    wfDsx3FarEndIntervalCSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of C-bit Severely Errored Seconds in the
                specified interval"
        ::= { wfDsx3FarEndIntervalEntry 4 }

    wfDsx3FarEndIntervalCCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of C-bit Code Violation error events in the
                specified interval"
        ::= { wfDsx3FarEndIntervalEntry 5 }

    wfDsx3FarEndIntervalUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the count of Unavailable Seconds in the specified interval"
        ::= { wfDsx3FarEndIntervalEntry 6 }

    wfDsx3FarEndTotalTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDsx3FarEndTotalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The DS3/E3 Far End Total table"
        ::= { wfDsx3Group 8 }

    wfDsx3FarEndTotalEntry OBJECT-TYPE
        SYNTAX	WfDsx3FarEndTotalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit far end DS3/E3 total objects - wfDsx3FarEndTotalIndex
                corresponds to Wellfleet circuit number"
        INDEX	{ wfDsx3FarEndTotalIndex }
        ::= { wfDsx3FarEndTotalTable 1 }

    WfDsx3FarEndTotalEntry ::= SEQUENCE {
    	    wfDsx3FarEndTotalIndex
    		INTEGER,
    	    wfDsx3FarEndTotalCESs
    		Gauge,
    	    wfDsx3FarEndTotalCSESs
    		Gauge,
    	    wfDsx3FarEndTotalCCVs
    		Gauge,
    	    wfDsx3FarEndTotalUASs
    		Gauge
        }

    wfDsx3FarEndTotalIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfDsx3FarEndTotalEntry 1 }

    wfDsx3FarEndTotalCESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of C-bit Errored Seconds"
        ::= { wfDsx3FarEndTotalEntry 2 }

    wfDsx3FarEndTotalCSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of C-bit Severely Errored Seconds"
        ::= { wfDsx3FarEndTotalEntry 3 }

    wfDsx3FarEndTotalCCVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of C-bit Code Violation error events"
        ::= { wfDsx3FarEndTotalEntry 4 }

    wfDsx3FarEndTotalUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total count of Unavailable Seconds"
        ::= { wfDsx3FarEndTotalEntry 5 }

    wfAtmInterfaceDs3PlcpTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfAtmInterfaceDs3PlcpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Atm Interface DS3 PLCP table"
        ::= { wfDsx3Group 9 }

    wfAtmInterfaceDs3PlcpEntry OBJECT-TYPE
        SYNTAX	WfAtmInterfaceDs3PlcpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains ATM interface DS3 PLCP parameters
                and state variables, one entry per ATM interface port."
        INDEX	{ wfAtmInterfaceDs3PlcpIndex }
        ::= { wfAtmInterfaceDs3PlcpTable 1 }

    WfAtmInterfaceDs3PlcpEntry ::= SEQUENCE {
    	    wfAtmInterfaceDs3PlcpIndex
    		INTEGER,
    	    wfAtmInterfaceDs3PlcpSEFSs
    		Gauge,
    	    wfAtmInterfaceDs3PlcpAlarmState
    		INTEGER,
    	    wfAtmInterfaceDs3PlcpUASs
    		Gauge
        }

    wfAtmInterfaceDs3PlcpIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfAtmInterfaceDs3PlcpEntry 1 }

    wfAtmInterfaceDs3PlcpSEFSs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of DS3 PLCP Severely Errored Framing Second (SEFS)"
        ::= { wfAtmInterfaceDs3PlcpEntry 2 }

    wfAtmInterfaceDs3PlcpAlarmState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    noalarm(1),
    		    farendalarm(2),
    		    lof(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the state of the DS3 PLCP"
        ::= { wfAtmInterfaceDs3PlcpEntry 3 }

    wfAtmInterfaceDs3PlcpUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of Unavailable Seconds encountered by the PLCP"
        ::= { wfAtmInterfaceDs3PlcpEntry 4 }

    END  -- Wellfleet-DSX3-MIB
-- @(#)WSCCS b/mibs-dvmrp.mib 1.1 8/30/95
Wellfleet-DVMRP-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:40:29 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfDvmrpGroup
        FROM Wellfleet-COMMON-MIB;


    wfDvmrpBase	OBJECT IDENTIFIER ::= { wfDvmrpGroup 1 }

    wfDvmrpBaseCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This entry will provide the base configuration for the DVMRP
                multicast support on the router."
        DEFVAL	{ created }
        ::= { wfDvmrpBase 1 }

    wfDvmrpBaseEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable or disable DVMRP support in router"
        DEFVAL	{ enabled }
        ::= { wfDvmrpBase 2 }

    wfDvmrpBaseState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpres(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "State of DVMRP base module"
        DEFVAL	{ notpres }
        ::= { wfDvmrpBase 3 }

    wfDvmrpBaseFullUpdateInterval OBJECT-TYPE
        SYNTAX	INTEGER(10..2000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Full update rate. This value specifies, in seconds, how
                often routing messages containing complete routing tables are
                sent."
        DEFVAL	{ 60 }
        ::= { wfDvmrpBase 4 }

    wfDvmrpBaseTriggeredUpdateInterval OBJECT-TYPE
        SYNTAX	INTEGER(5..1000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Triggered update rate. This value specifies, in seconds,
                how often triggered routing messages are sent; this represents
                the minimum amount of time between these type of messages.
                Triggered updates are sent between full update; the timers
                restart when a full update is sent so this value should be less
                than the full update rate."
        DEFVAL	{ 5 }
        ::= { wfDvmrpBase 5 }

    wfDvmrpBaseLeafTimeout OBJECT-TYPE
        SYNTAX	INTEGER(25..4000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Leaf timeout. This value specifies, in seconds, the
                virtual interface hold down timer."
        DEFVAL	{ 200 }
        ::= { wfDvmrpBase 6 }

    wfDvmrpBaseNeighborTimeout OBJECT-TYPE
        SYNTAX	INTEGER(40..8000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Neighbor timeout. This value specifies, in seconds, how
                long a router neighbor is considered 'up' without confirmation."
        DEFVAL	{ 140 }
        ::= { wfDvmrpBase 7 }

    wfDvmrpBaseRouteExpirationTimeout OBJECT-TYPE
        SYNTAX	INTEGER(20..4000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Route Expiration timeout. This value specifies, in
                seconds, how long a route is considered valid without
                confirmation; this represents the duration of time that this
                route will be used."
        DEFVAL	{ 200 }
        ::= { wfDvmrpBase 8 }

    wfDvmrpBaseGarbageTimeout OBJECT-TYPE
        SYNTAX	INTEGER(40..8000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Garbage timeout. This value specifies, in seconds, how
                long a route exists without confirmation; this represents the
                duration of time that this route will be included in routing
                updates. This value must be greater than the route expiration
                timeout."
        DEFVAL	{ 340 }
        ::= { wfDvmrpBase 9 }

    wfDvmrpBaseEstimatedRoutes OBJECT-TYPE
        SYNTAX	INTEGER(10..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Estimated number of routes, per slot. This is used for
                pre-allocating routing tables. Note that routes are kept on a
                per-source network basis, independent of multicast group. This number
                must include a route for every local network that has a CCT configured
                for multicasting."
        DEFVAL	{ 25 }
        ::= { wfDvmrpBase 10 }

    wfDvmrpBaseNeighborProbeInterval OBJECT-TYPE
        SYNTAX	INTEGER(5..30)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Neighbor probe interval: how often to send a probe on VIFs"
        DEFVAL	{ 10 }
        ::= { wfDvmrpBase 11 }

    wfDvmrpBaseRouteSwitchTimeout OBJECT-TYPE
        SYNTAX	INTEGER(20..2000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Route switch timeout. How long to wait, without receiving a subsequent route update
                from the original neighbor, before switching to a different neighbor."
        DEFVAL	{ 140 }
        ::= { wfDvmrpBase 12 }

    wfDvmrpBaseActualRoutes OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of number of entries currently in route table"
        ::= { wfDvmrpBase 13 }

    wfDvmrpBaseDebugLevel OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Turn DVMRP log ON or OFF for DVMRP debuging messages
                The levels are:
                 ROUTE_UPDATE_LOG      0x0002  -  Displays all routing table events
                 CACHE_ADD_LOG         0x0004  -  Displays events relating to addition of
                                                  cache entry by the cache gate
                 CACHE_DELETE_LOG      0x0008  -  Displays all events relating to deletion
                                                  of cache entry
                 CACHE_CHANGE_LOG      0x0010  -  Displays all events relating to updates of
                                                  cache entries
                 CACHE_DATA_LOG        0x0020  -  Displays fragmentation events if
                                                  fragmentation is necessary
                 PRUNE_MSG_LOG         0x0040  -  Display router received pruning related
                                                  messages, including prunes, grafts,
                                                  graft_acks, and neighbor reset
                 PRUNE_XMIT_LOG        0x0080  -  Display a messaged when a initial prune
                                                  state is established for a (src, group).
                 IGMP_COM_LOG          0x0100  -  Display communication events between IGMP
                                                  and DVMRP, events including some hosts
                                                  joining a group, and all hosts leaving a
                                                  group.
                 DVMRP_XMIT_LOG        0x0200  -  Display transmission events by the router,
                                                  e.g, prune, grafts...
                 CACHE_COM_LOG         0x0400  -  Reserved, not being used now
                 CACHE_DBG_LOG         0x0800  -  Display general debugging messaages
                 MEM_DBG_LOG           0x1000  -  Display dvmrp memory usage activities
                 ALIAS_DBG_LOG         0x2000  -  Display dvmrp alias usage activities
                 CACHE_BASE_ADD_LOG    0x4000  -  Displays events relating to addition of
                                                  cache entry by the base gate
                 CACHE_VIF_ADD_LOG     0x8000  -  Displays events relating to addition of
                                                  cache entry by the vif gate
                 CACHE_BASE_DELETE_LOG 0x10000 -  Displays events relating to deletion of
                                                  cache entry by the base gate
                 CACHE_VIF_DELETE_LOG  0x20000 -  Displays events relating to deletion of
                                                  cache entry by the vif gate"
        ::= { wfDvmrpBase 14 }

    wfDvmrpBasePruningEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable or Disable Pruning functionality at the Base level"
        DEFVAL	{ enable }
        ::= { wfDvmrpBase 15 }

    wfDvmrpBaseFragmentMtuThreshold OBJECT-TYPE
        SYNTAX	INTEGER(910..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the default value is the CSMACD_MTU, and the MINiMUN is
                X25_DDN_MTU. Both are taken from dp.h"
        DEFVAL	{ 1514 }
        ::= { wfDvmrpBase 16 }

    wfDvmrpCircuitEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDvmrpCircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Circuit virtual interfaces (aka physical VIFs)"
        ::= { wfDvmrpGroup 2 }

    wfDvmrpCircuitEntry OBJECT-TYPE
        SYNTAX	WfDvmrpCircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "One instance of this object exists for every CCT that supports
                this feature. The instance ID for this object will be the circuit
                number."
        INDEX	{ wfDvmrpCircuitCCT }
        ::= { wfDvmrpCircuitEntryTable 1 }

    WfDvmrpCircuitEntry ::= SEQUENCE {
    	    wfDvmrpCircuitCreate
    		INTEGER,
    	    wfDvmrpCircuitEnable
    		INTEGER,
    	    wfDvmrpCircuitState
    		INTEGER,
    	    wfDvmrpCircuitCCT
    		INTEGER,
    	    wfDvmrpCircuitRouteEnable
    		INTEGER,
    	    wfDvmrpCircuitMetric
    		INTEGER,
    	    wfDvmrpCircuitRouteThreshold
    		INTEGER,
    	    wfDvmrpCircuitInPkts
    		Counter,
    	    wfDvmrpCircuitOutPkts
    		Counter,
    	    wfDvmrpCircuitInRouteUpdates
    		Counter,
    	    wfDvmrpCircuitOutRouteUpdates
    		Counter,
    	    wfDvmrpCircuitInPktDiscards
    		Counter,
    	    wfDvmrpCircuitOutPktDiscards
    		Counter,
    	    wfDvmrpCircuitFwdCacheSize
    		INTEGER,
    	    wfDvmrpCircuitFwdCacheTTL
    		INTEGER,
    	    wfDvmrpCircuitAdvertiseSelf
    		INTEGER,
    	    wfDvmrpCircuitFwdCacheEntries
    		INTEGER,
    	    wfDvmrpCircuitInPrunePkts
    		Counter,
    	    wfDvmrpCircuitOutPrunePkts
    		Counter,
    	    wfDvmrpCircuitInGraftPkts
    		Counter,
    	    wfDvmrpCircuitOutGraftPkts
    		Counter,
    	    wfDvmrpCircuitInGraftAckPkts
    		Counter,
    	    wfDvmrpCircuitOutGraftAckPkts
    		Counter
        }

    wfDvmrpCircuitCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create or delete"
        DEFVAL	{ created }
        ::= { wfDvmrpCircuitEntry 1 }

    wfDvmrpCircuitEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable or disable DVMRP on this circuit"
        DEFVAL	{ enabled }
        ::= { wfDvmrpCircuitEntry 2 }

    wfDvmrpCircuitState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    invalid(4),
    		    notpres(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the DVMRP interface. Invalid
                indicates an error in processing the configuration record."
        DEFVAL	{ notpres }
        ::= { wfDvmrpCircuitEntry 3 }

    wfDvmrpCircuitCCT OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This circuit number."
        ::= { wfDvmrpCircuitEntry 4 }

    wfDvmrpCircuitRouteEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/disble this circuit for routing. If enabled, this
                circuit will be used to propogate routing information,
                information about this circuit will be incorporated into routing
                updates, and multicast datagrams will be forwarded 'in native
                mode' (e.g. as multicast datagrams) via this circuit. If
                disabled, this circuit exists only to support unicast tunnels; in
                this case, all other paramters are ignored."
        DEFVAL	{ enabled }
        ::= { wfDvmrpCircuitEntry 5 }

    wfDvmrpCircuitMetric OBJECT-TYPE
        SYNTAX	INTEGER(1..31)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Metric. This value represents the cost of this interface;
                the cost of using this hop. This value must be smaller than the
                route infinity value"
        DEFVAL	{ 1 }
        ::= { wfDvmrpCircuitEntry 6 }

    wfDvmrpCircuitRouteThreshold OBJECT-TYPE
        SYNTAX	INTEGER(1..254)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Threshold. This value can be used to filter out datagrams
                that are being forwarded to a neighboring router; if the IP TTL
                is not >= the threshold, the datagram is dropped by this router"
        DEFVAL	{ 1 }
        ::= { wfDvmrpCircuitEntry 7 }

    wfDvmrpCircuitInPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of datagrams received on this interface"
        ::= { wfDvmrpCircuitEntry 8 }

    wfDvmrpCircuitOutPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of datagrams send on this interface"
        ::= { wfDvmrpCircuitEntry 9 }

    wfDvmrpCircuitInRouteUpdates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of DVMRP route update messages received"
        ::= { wfDvmrpCircuitEntry 10 }

    wfDvmrpCircuitOutRouteUpdates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of DVMRP route update messages sent"
        ::= { wfDvmrpCircuitEntry 11 }

    wfDvmrpCircuitInPktDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of inbound datagrams discarded due to route not found"
        ::= { wfDvmrpCircuitEntry 12 }

    wfDvmrpCircuitOutPktDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of outbound datagrams discarded due to route not found"
        ::= { wfDvmrpCircuitEntry 13 }

    wfDvmrpCircuitFwdCacheSize OBJECT-TYPE
        SYNTAX	INTEGER(32..512)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of entries allowed in the Forwarding table
                at one time.  there is a Forwarding table per vif"
        DEFVAL	{ 32 }
        ::= { wfDvmrpCircuitEntry 14 }

    wfDvmrpCircuitFwdCacheTTL OBJECT-TYPE
        SYNTAX	INTEGER(0..86400)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The time_to_live for the Forwarding table entries in seconds
                This timer is also used in the prune message the router send to
                it's neighbor."
        DEFVAL	{ 300 }
        ::= { wfDvmrpCircuitEntry 15 }

    wfDvmrpCircuitAdvertiseSelf OBJECT-TYPE
        SYNTAX	INTEGER {
    		    self(1),
    		    not(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If enabled the router will advertise itself as one of
                the source net. If not enabled the router wii not advertise
                itself as one of the source net."
        DEFVAL	{ self }
        ::= { wfDvmrpCircuitEntry 16 }

    wfDvmrpCircuitFwdCacheEntries OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The most up to date number of entries in the forwarding cache"
        ::= { wfDvmrpCircuitEntry 17 }

    wfDvmrpCircuitInPrunePkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of PRUNE datagrams received on this interface"
        ::= { wfDvmrpCircuitEntry 18 }

    wfDvmrpCircuitOutPrunePkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of PRUNE datagrams send on this interface"
        ::= { wfDvmrpCircuitEntry 19 }

    wfDvmrpCircuitInGraftPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of GRAFT datagrams received on this interface"
        ::= { wfDvmrpCircuitEntry 20 }

    wfDvmrpCircuitOutGraftPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of GRAFT datagrams send on this interface"
        ::= { wfDvmrpCircuitEntry 21 }

    wfDvmrpCircuitInGraftAckPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of GRAFT_ACK datagrams received on this interface"
        ::= { wfDvmrpCircuitEntry 22 }

    wfDvmrpCircuitOutGraftAckPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of GRAFT_ACK datagrams send on this interface"
        ::= { wfDvmrpCircuitEntry 23 }

    wfDvmrpTunnelEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDvmrpTunnelEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Tunnel virtual interfaces"
        ::= { wfDvmrpGroup 3 }

    wfDvmrpTunnelEntry OBJECT-TYPE
        SYNTAX	WfDvmrpTunnelEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This object is used to specify the set of 'multicast tunnels',
                unicast pipes that are used to send IP multicast datagrams to
                remote network multicast routers via intermediate routers that
                may not support this style of IP multicasting. One instance of
                this object exists for every separate tunnel destination. The
                instance identifier is the IP address of the
                remote router neighbor and the local circuit number."
        INDEX	{ wfDvmrpTunnelCCT,
    		  wfDvmrpTunnelLocalRouterIpAddress,
    		  wfDvmrpTunnelRemoteRouterIpAddress }
        ::= { wfDvmrpTunnelEntryTable 1 }

    WfDvmrpTunnelEntry ::= SEQUENCE {
    	    wfDvmrpTunnelCreate
    		INTEGER,
    	    wfDvmrpTunnelEnable
    		INTEGER,
    	    wfDvmrpTunnelState
    		INTEGER,
    	    wfDvmrpTunnelCCT
    		INTEGER,
    	    wfDvmrpTunnelRemoteRouterIpAddress
    		IpAddress,
    	    wfDvmrpTunnelEncapsMode
    		INTEGER,
    	    wfDvmrpTunnelMetric
    		INTEGER,
    	    wfDvmrpTunnelThreshold
    		INTEGER,
    	    wfDvmrpTunnelInPkts
    		Counter,
    	    wfDvmrpTunnelOutPkts
    		Counter,
    	    wfDvmrpTunnelInRouteUpdates
    		Counter,
    	    wfDvmrpTunnelOutRouteUpdates
    		Counter,
    	    wfDvmrpTunnelInPktDiscards
    		Counter,
    	    wfDvmrpTunnelOutPktDiscards
    		Counter,
    	    wfDvmrpTunnelLocalRouterIpAddress
    		IpAddress,
    	    wfDvmrpTunnelFwdCacheSize
    		INTEGER,
    	    wfDvmrpTunnelFwdCacheTTL
    		INTEGER,
    	    wfDvmrpTunnelFwdCacheEntries
    		INTEGER,
    	    wfDvmrpTunnelInPrunePkts
    		Counter,
    	    wfDvmrpTunnelOutPrunePkts
    		Counter,
    	    wfDvmrpTunnelInGraftPkts
    		Counter,
    	    wfDvmrpTunnelOutGraftPkts
    		Counter,
    	    wfDvmrpTunnelInGraftAckPkts
    		Counter,
    	    wfDvmrpTunnelOutGraftAckPkts
    		Counter
        }

    wfDvmrpTunnelCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "create/delete"
        DEFVAL	{ created }
        ::= { wfDvmrpTunnelEntry 1 }

    wfDvmrpTunnelEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable this tunnel interface"
        DEFVAL	{ enabled }
        ::= { wfDvmrpTunnelEntry 2 }

    wfDvmrpTunnelState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    invalid(4),
    		    notpres(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the DVMRP tunnel interface. Invalid
                indicates an error in processing the configuration record."
        DEFVAL	{ notpres }
        ::= { wfDvmrpTunnelEntry 3 }

    wfDvmrpTunnelCCT OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The multicast circuit associated with this tunnel."
        ::= { wfDvmrpTunnelEntry 4 }

    wfDvmrpTunnelRemoteRouterIpAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "(unicast) IP address of remote network router neighbor."
        ::= { wfDvmrpTunnelEntry 5 }

    wfDvmrpTunnelEncapsMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ipinip(1),
    		    lssr(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Will these tunnelled datagrams be encapsulated within an IP datagram, or will
                they be loosely encapsulated using the LSSR option (for the latter, refer to
                RFC 1075; this is needed for backward compatibility)"
        DEFVAL	{ ipinip }
        ::= { wfDvmrpTunnelEntry 6 }

    wfDvmrpTunnelMetric OBJECT-TYPE
        SYNTAX	INTEGER(1..31)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Cost of using this tunnel"
        DEFVAL	{ 1 }
        ::= { wfDvmrpTunnelEntry 7 }

    wfDvmrpTunnelThreshold OBJECT-TYPE
        SYNTAX	INTEGER(1..254)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Threshold for forwarding through this tunnel; if TTL < threshold, the
                datagram is dropped."
        DEFVAL	{ 1 }
        ::= { wfDvmrpTunnelEntry 8 }

    wfDvmrpTunnelInPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of datagrams received on this interface"
        ::= { wfDvmrpTunnelEntry 9 }

    wfDvmrpTunnelOutPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of datagrams send on this interface"
        ::= { wfDvmrpTunnelEntry 10 }

    wfDvmrpTunnelInRouteUpdates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of DVMRP route update messages received"
        ::= { wfDvmrpTunnelEntry 11 }

    wfDvmrpTunnelOutRouteUpdates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of DVMRP route update messages sent"
        ::= { wfDvmrpTunnelEntry 12 }

    wfDvmrpTunnelInPktDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of inbound datagrams discarded due to route not found or due to
                invalid inner address (dest address != multicast)"
        ::= { wfDvmrpTunnelEntry 13 }

    wfDvmrpTunnelOutPktDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of outbound datagrams discarded due to route not found"
        ::= { wfDvmrpTunnelEntry 14 }

    wfDvmrpTunnelLocalRouterIpAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "(unicast) IP address of local network router. To support multinet."
        ::= { wfDvmrpTunnelEntry 15 }

    wfDvmrpTunnelFwdCacheSize OBJECT-TYPE
        SYNTAX	INTEGER(32..512)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of entries allowed in the Forwarding table
                at one time.  there is a Forwarding table per vif"
        DEFVAL	{ 32 }
        ::= { wfDvmrpTunnelEntry 16 }

    wfDvmrpTunnelFwdCacheTTL OBJECT-TYPE
        SYNTAX	INTEGER(0..86400)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The time_to_live for the Forwarding table entries in seconds
                This timer is also used in the prune message the router send to
                it's neighbor."
        DEFVAL	{ 300 }
        ::= { wfDvmrpTunnelEntry 17 }

    wfDvmrpTunnelFwdCacheEntries OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The most up to date number of entries in the forwarding cache"
        ::= { wfDvmrpTunnelEntry 18 }

    wfDvmrpTunnelInPrunePkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of PRUNE datagrams received on this interface"
        ::= { wfDvmrpTunnelEntry 19 }

    wfDvmrpTunnelOutPrunePkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of PRUNE datagrams send on this interface"
        ::= { wfDvmrpTunnelEntry 20 }

    wfDvmrpTunnelInGraftPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of GRAFT datagrams received on this interface"
        ::= { wfDvmrpTunnelEntry 21 }

    wfDvmrpTunnelOutGraftPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of GRAFT datagrams send on this interface"
        ::= { wfDvmrpTunnelEntry 22 }

    wfDvmrpTunnelInGraftAckPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of GRAFT_ACK datagrams received on this interface"
        ::= { wfDvmrpTunnelEntry 23 }

    wfDvmrpTunnelOutGraftAckPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of GRAFT_ACK datagrams send on this interface"
        ::= { wfDvmrpTunnelEntry 24 }

    wfDvmrpRouteEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDvmrpRouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "MIB proxy: main DVMRP routing table"
        ::= { wfDvmrpGroup 4 }

    wfDvmrpRouteEntry OBJECT-TYPE
        SYNTAX	WfDvmrpRouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Supported by mib proxy. One entry exists for each active route."
        INDEX	{ wfDvmrpRouteSourceNetwork }
        ::= { wfDvmrpRouteEntryTable 1 }

    WfDvmrpRouteEntry ::= SEQUENCE {
    	    wfDvmrpRouteSourceNetwork
    		IpAddress,
    	    wfDvmrpRouteSourceMask
    		IpAddress,
    	    wfDvmrpRouteNextHopRouter
    		IpAddress,
    	    wfDvmrpRouteNextHopInterfaceCCT
    		INTEGER,
    	    wfDvmrpRouteNextHopInterfaceTunnelId
    		IpAddress,
    	    wfDvmrpRouteNextHopInterfaceLocalTunnelId
    		IpAddress,
    	    wfDvmrpRouteTimer
    		INTEGER,
    	    wfDvmrpRouteState
    		INTEGER,
    	    wfDvmrpRouteMetric
    		INTEGER
        }

    wfDvmrpRouteSourceNetwork OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A source of multicast datagrams"
        ::= { wfDvmrpRouteEntry 1 }

    wfDvmrpRouteSourceMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Mask for the specified source network"
        ::= { wfDvmrpRouteEntry 2 }

    wfDvmrpRouteNextHopRouter OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Next hop multicast router to the specified source
                network; we consider this neighboring router to be on the
                shortest path to the source. Note that this neighboring router
                may be a tunnel endpoint."
        ::= { wfDvmrpRouteEntry 3 }

    wfDvmrpRouteNextHopInterfaceCCT OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Next hop interface (CCT) to the specified source router; we
                consider this interface to be on the shortest path to the source."
        ::= { wfDvmrpRouteEntry 4 }

    wfDvmrpRouteNextHopInterfaceTunnelId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Next hop interface (tunnel id) to the specified source router; we
                consider this interface to be on the shortest path to the source."
        ::= { wfDvmrpRouteEntry 5 }

    wfDvmrpRouteNextHopInterfaceLocalTunnelId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Next hop interface (local tunnel id) to the specified source router; we
                consider this interface to be on the shortest path to the source."
        ::= { wfDvmrpRouteEntry 6 }

    wfDvmrpRouteTimer OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "route timer"
        ::= { wfDvmrpRouteEntry 7 }

    wfDvmrpRouteState OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Set of flags indicating state of entry. Note that the
                router uses this field as a bit mask.
                          0x8000 Network is local to this router
                          0x4000 Route is being timed
                          0x2000 Route is garbaged"
        ::= { wfDvmrpRouteEntry 8 }

    wfDvmrpRouteMetric OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current route metric"
        ::= { wfDvmrpRouteEntry 9 }

    wfDvmrpRouteInterfaceEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDvmrpRouteInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "MIB proxy: DVMRP VIF routing table"
        ::= { wfDvmrpGroup 5 }

    wfDvmrpRouteInterfaceEntry OBJECT-TYPE
        SYNTAX	WfDvmrpRouteInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Supported by mib proxy. One entry exists for each virtual interface on
                an active route. It is associated with a route via the source network/
                net mask fields. The instance ID includes tunnel ID, which is 0 for
                non-tunnel interfaces."
        INDEX	{ wfDvmrpRouteInterfaceSourceNetwork,
    		  wfDvmrpRouteInterfaceParentCCT,
    		  wfDvmrpRouteInterfaceParentLocalTunnelId,
    		  wfDvmrpRouteInterfaceParentTunnelId }
        ::= { wfDvmrpRouteInterfaceEntryTable 1 }

    WfDvmrpRouteInterfaceEntry ::= SEQUENCE {
    	    wfDvmrpRouteInterfaceSourceNetwork
    		IpAddress,
    	    wfDvmrpRouteInterfaceSourceMask
    		IpAddress,
    	    wfDvmrpRouteInterfaceNextHopInterfaceCCT
    		INTEGER,
    	    wfDvmrpRouteInterfaceNextHopInterfaceLocalTunnelId
    		IpAddress,
    	    wfDvmrpRouteInterfaceNextHopInterfaceTunnelId
    		IpAddress,
    	    wfDvmrpRouteInterfaceState
    		INTEGER,
    	    wfDvmrpRouteInterfaceDominantRouter
    		IpAddress,
    	    wfDvmrpRouteInterfaceSubordinateRouter
    		IpAddress,
    	    wfDvmrpRouteInterfaceHoldDownTimer
    		INTEGER,
    	    wfDvmrpRouteInterfaceSPInDiscards
    		Counter,
    	    wfDvmrpRouteInterfaceSPOutDiscards
    		Counter,
    	    wfDvmrpRouteInterfaceThresholdOutDiscards
    		Counter,
    	    wfDvmrpRouteInterfaceInSuccessfulPkts
    		Counter,
    	    wfDvmrpRouteInterfaceOutSuccessfulPkts
    		Counter,
    	    wfDvmrpRouteInterfaceParentCCT
    		INTEGER,
    	    wfDvmrpRouteInterfaceParentLocalTunnelId
    		IpAddress,
    	    wfDvmrpRouteInterfaceParentTunnelId
    		IpAddress
        }

    wfDvmrpRouteInterfaceSourceNetwork OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A source of multicast datagrams"
        ::= { wfDvmrpRouteInterfaceEntry 1 }

    wfDvmrpRouteInterfaceSourceMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Mask for the specified source network"
        ::= { wfDvmrpRouteInterfaceEntry 2 }

    wfDvmrpRouteInterfaceNextHopInterfaceCCT OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "circuit number with which this route is associated"
        ::= { wfDvmrpRouteInterfaceEntry 3 }

    wfDvmrpRouteInterfaceNextHopInterfaceLocalTunnelId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Tunnel ID for tunnelled interfaces. This value is zero
                for non-tunnelled interfaces, otherwise it contains the local IP
                address of the tunnel."
        ::= { wfDvmrpRouteInterfaceEntry 4 }

    wfDvmrpRouteInterfaceNextHopInterfaceTunnelId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Tunnel ID for tunnelled interfaces. This value is zero
                for non-tunnelled interfaces, otherwise it contains the remote IP
                address of the tunnel."
        ::= { wfDvmrpRouteInterfaceEntry 5 }

    wfDvmrpRouteInterfaceState OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "state of interface for this route. Note that the router
                uses this field as a bit mask.
                          0x8000 - interface is leaf
                          0x4000 - interface is child
                          0x2000 - interface is in hold-down state"
        ::= { wfDvmrpRouteInterfaceEntry 6 }

    wfDvmrpRouteInterfaceDominantRouter OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "dominant router address for virtual interface"
        ::= { wfDvmrpRouteInterfaceEntry 7 }

    wfDvmrpRouteInterfaceSubordinateRouter OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "subordinate router address for virtual interface"
        ::= { wfDvmrpRouteInterfaceEntry 8 }

    wfDvmrpRouteInterfaceHoldDownTimer OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current value of hold down timer, used to determine if
                interface is for leaf or non-leaf network. Non-leaf network means
                that a local network router considers us to be in the shortest
                path to the source (they have sent us a route update with metric
                >= infinity)."
        ::= { wfDvmrpRouteInterfaceEntry 9 }

    wfDvmrpRouteInterfaceSPInDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of inbound packets discarded because interface not on shortest path"
        ::= { wfDvmrpRouteInterfaceEntry 10 }

    wfDvmrpRouteInterfaceSPOutDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of outbound packets discarded because interface not on shortest path"
        ::= { wfDvmrpRouteInterfaceEntry 11 }

    wfDvmrpRouteInterfaceThresholdOutDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of outbound packets discarded because of threshold"
        ::= { wfDvmrpRouteInterfaceEntry 12 }

    wfDvmrpRouteInterfaceInSuccessfulPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of inbound packets accepted for forwarding"
        ::= { wfDvmrpRouteInterfaceEntry 13 }

    wfDvmrpRouteInterfaceOutSuccessfulPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of outbound packets accepted for forwarding"
        ::= { wfDvmrpRouteInterfaceEntry 14 }

    wfDvmrpRouteInterfaceParentCCT OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "circuit number with which this route is associated;parent VIF"
        ::= { wfDvmrpRouteInterfaceEntry 15 }

    wfDvmrpRouteInterfaceParentLocalTunnelId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Tunnel ID for tunnelled interfaces. This value is zero
                for non-tunnelled interfaces, otherwise it contains the local IP
                address of the tunnel; parent VIF."
        ::= { wfDvmrpRouteInterfaceEntry 16 }

    wfDvmrpRouteInterfaceParentTunnelId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Tunnel ID for tunnelled interfaces. This value is zero
                for non-tunnelled interfaces, otherwise it contains the remote IP
                address of the tunnel; parent VIF."
        ::= { wfDvmrpRouteInterfaceEntry 17 }

    wfDvmrpNeighboringRouterEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDvmrpNeighboringRouterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "MIB proxy: DVMRP neighbor table"
        ::= { wfDvmrpGroup 6 }

    wfDvmrpNeighboringRouterEntry OBJECT-TYPE
        SYNTAX	WfDvmrpNeighboringRouterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This entry is used to indentify the known neighboring routers for
                a circuit. This object will be indentified by circuit number,
                tunnel id (to identify local interface), and the IP address of the neighbor. "
        INDEX	{ wfDvmrpNeighboringRouterCCT,
    		  wfDvmrpNeighboringRouterLocalTunnelId,
    		  wfDvmrpNeighboringRouterTunnelId,
    		  wfDvmrpNeighboringRouterIpAddr }
        ::= { wfDvmrpNeighboringRouterEntryTable 1 }

    WfDvmrpNeighboringRouterEntry ::= SEQUENCE {
    	    wfDvmrpNeighboringRouterCCT
    		INTEGER,
    	    wfDvmrpNeighboringRouterLocalTunnelId
    		IpAddress,
    	    wfDvmrpNeighboringRouterTunnelId
    		IpAddress,
    	    wfDvmrpNeighboringRouterIpAddr
    		IpAddress,
    	    wfDvmrpNeighboringRouterState
    		INTEGER,
    	    wfDvmrpNeighboringRouterTimer
    		INTEGER
        }

    wfDvmrpNeighboringRouterCCT OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Local circuit number"
        ::= { wfDvmrpNeighboringRouterEntry 1 }

    wfDvmrpNeighboringRouterLocalTunnelId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Tunnel Id for interface. This value is zero for non-
                tunnelled interfaces, otherwise it contains the IP address of the
                local tunnel endpoint."
        ::= { wfDvmrpNeighboringRouterEntry 2 }

    wfDvmrpNeighboringRouterTunnelId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Tunnel Id for interface. This value is zero for non-
                tunnelled interfaces, otherwise it contains the IP address of the
                remote tunnel endpoint."
        ::= { wfDvmrpNeighboringRouterEntry 3 }

    wfDvmrpNeighboringRouterIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "IP address of neighboring router"
        ::= { wfDvmrpNeighboringRouterEntry 4 }

    wfDvmrpNeighboringRouterState OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "State of neighbor. The router uses this as a bit mask.
                0x8000 - Neighbor is being timed"
        ::= { wfDvmrpNeighboringRouterEntry 5 }

    wfDvmrpNeighboringRouterTimer OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current value of neighbor timer"
        ::= { wfDvmrpNeighboringRouterEntry 6 }

    END  -- Wellfleet-DVMRP-MIB
-- @(#)WSCCS o/mibs-e1.mib 1.1 8/30/95
Wellfleet-E1-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:40:37 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfLine
        FROM Wellfleet-COMMON-MIB;


    wfE1Table OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfE1Entry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "E1 line record"
        ::= { wfLine 11 }

    wfE1Entry OBJECT-TYPE
        SYNTAX	WfE1Entry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the E1 table"
        INDEX	{ wfE1Slot,
    		  wfE1Connector }
        ::= { wfE1Table 1 }

    WfE1Entry ::= SEQUENCE {
    	    wfE1Delete
    		INTEGER,
    	    wfE1Disable
    		INTEGER,
    	    wfE1State
    		INTEGER,
    	    wfE1Slot
    		INTEGER,
    	    wfE1Connector
    		INTEGER,
    	    wfE1Madr
    		OCTET STRING,
    	    wfE1HDB3Support
    		INTEGER,
    	    wfE1ClockMode
    		INTEGER,
    	    wfE1MiniDacs
    		DisplayString,
    	    wfE1BipolarVios
    		Counter,
    	    wfE1FrameErrs
    		Counter,
    	    wfE1RcvRemAlms
    		Counter,
    	    wfE1RcvMfmAlms
    		Counter,
    	    wfE1MfsErrs
    		Counter,
    	    wfE1SyncLoss
    		Counter,
    	    wfE1RcvSig1s
    		Counter,
    	    wfE1RcvUnfrm1s
    		Counter,
    	    wfE1LineType
    		INTEGER,
    	    wfE1CRC4Errors
    		Counter
        }

    wfE1Delete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "create/delete parameter, dflt = created"
        DEFVAL	{ created }
        ::= { wfE1Entry 1 }

    wfE1Disable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable parameter, dflt = enabled"
        DEFVAL	{ enabled }
        ::= { wfE1Entry 2 }

    wfE1State OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "line driver state variable, Not Present, Init, Up"
        DEFVAL	{ notpresent }
        ::= { wfE1Entry 3 }

    wfE1Slot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "instance ID Slot, filled in by driver"
        ::= { wfE1Entry 4 }

    wfE1Connector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "instance ID Connector, filled in by driver"
        ::= { wfE1Entry 5 }

    wfE1Madr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line mac address, filled in by driver"
        ::= { wfE1Entry 6 }

    wfE1HDB3Support OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "HDB3 Support - Enables or disables high density bipolar coding"
        DEFVAL	{ disabled }
        ::= { wfE1Entry 7 }

    wfE1ClockMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    internal(1),
    		    slave(2),
    		    manual(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Clock Mode - Specifies the source of the E1 transmit clock"
        DEFVAL	{ internal }
        ::= { wfE1Entry 8 }

    wfE1MiniDacs OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "MiniDacs Configuration - assigns each E1 channel to a specific
                function"
        ::= { wfE1Entry 9 }

    wfE1BipolarVios OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Bipolar Violations"
        ::= { wfE1Entry 10 }

    wfE1FrameErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Frame errors"
        ::= { wfE1Entry 11 }

    wfE1RcvRemAlms OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of remote alarms received"
        ::= { wfE1Entry 12 }

    wfE1RcvMfmAlms OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Multiframe Alarms Received"
        ::= { wfE1Entry 13 }

    wfE1MfsErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of instances of CAS Multiframe resync criteria met"
        ::= { wfE1Entry 14 }

    wfE1SyncLoss OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of instances of sync loss"
        ::= { wfE1Entry 15 }

    wfE1RcvSig1s OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of instances of receive signalling all 1's"
        ::= { wfE1Entry 16 }

    wfE1RcvUnfrm1s OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of instances of Receive unframed all 1's"
        ::= { wfE1Entry 17 }

    wfE1LineType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    e1(1),
    		    e1crc4(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable CRC-4"
        DEFVAL	{ e1 }
        ::= { wfE1Entry 18 }

    wfE1CRC4Errors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of CRC-4 Errors"
        ::= { wfE1Entry 19 }

    END  -- Wellfleet-E1-MIB
-- @(#)WSCCS y/mibs-egp.mib 1.1 8/30/95
Wellfleet-EGP-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:40:42 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfEgpGroup
        FROM Wellfleet-COMMON-MIB;


    wfEgp		OBJECT IDENTIFIER ::= { wfEgpGroup 1 }

    wfEgpDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter for determining whether
                or not EGP is configured on this slot."
        DEFVAL	{ created }
        ::= { wfEgp 1 }

    wfEgpDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for determining whether
                or not to startup EGP."
        DEFVAL	{ enabled }
        ::= { wfEgp 2 }

    wfEgpInMsgs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The aggregate number of EGP messages received in the box
                without error. This is part of the EGP group in Mib2. "
        ::= { wfEgp 3 }

    wfEgpInErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of all EGP messages received in the box
                that had errors. This is part of the EGP group in Mib2. "
        ::= { wfEgp 4 }

    wfEgpOutMsgs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of EGP locally generated messages from
                the box. This is part of the EGP group in Mib2. "
        ::= { wfEgp 5 }

    wfEgpOutErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of locally generated EGP messages from
                the box that had errors. This is part of the EGP group in
                Mib2. "
        ::= { wfEgp 6 }

    wfEgpLocalAs OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The NIC-assigned decimal number that identifies the local
                autonomous system."
        ::= { wfEgp 7 }

    wfEgpNeighTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfEgpNeighEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The EGP Neighbor table contains information regarding this EGP
                router's EGP neighbors on a particular interface. This table
                follows the egpNeighTable exactly as specified in he EGP group
                in Mib 2."
        ::= { wfEgpGroup 2 }

    wfEgpNeighEntry OBJECT-TYPE
        SYNTAX	WfEgpNeighEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the EGP Neighbor table"
        INDEX	{ wfEgpNeighAddr }
        ::= { wfEgpNeighTable 1 }

    WfEgpNeighEntry ::= SEQUENCE {
    	    wfEgpNeighState
    		INTEGER,
    	    wfEgpNeighAddr
    		IpAddress,
    	    wfEgpNeighAs
    		INTEGER,
    	    wfEgpNeighInMsgs
    		Counter,
    	    wfEgpNeighInErrs
    		Counter,
    	    wfEgpNeighOutMsgs
    		Counter,
    	    wfEgpNeighOutErrs
    		Counter,
    	    wfEgpNeighInErrMsgs
    		Counter,
    	    wfEgpNeighOutErrMsgs
    		Counter,
    	    wfEgpNeighStateUps
    		Counter,
    	    wfEgpNeighStateDowns
    		Counter,
    	    wfEgpNeighIntervalHello
    		INTEGER,
    	    wfEgpNeighIntervalPoll
    		INTEGER,
    	    wfEgpNeighMode
    		INTEGER,
    	    wfEgpNeighEvent
    		INTEGER,
    	    wfEgpNeighBadAsns
    		Counter,
    	    wfEgpNeighBadCodes
    		Counter,
    	    wfEgpNeighBadHellos
    		Counter,
    	    wfEgpNeighBadIHUs
    		Counter,
    	    wfEgpNeighBadStatuses
    		Counter,
    	    wfEgpNeighBadChecksums
    		Counter,
    	    wfEgpNeighBadTypes
    		Counter,
    	    wfEgpNeighBadVersions
    		Counter,
    	    wfEgpNeighCmdOutOfSeqs
    		Counter,
    	    wfEgpNeighCmdRejects
    		Counter
        }

    wfEgpNeighState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    idle(1),
    		    acquisition(2),
    		    down(3),
    		    up(4),
    		    cease(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The EGP state of the local system with respect to this
                entry's EGP neighbor.  Each EGP state is represented by a
                value that is one greater than the numerical value associated
                with said state in RFC 904."
        ::= { wfEgpNeighEntry 1 }

    wfEgpNeighAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address of this entry's EGP neighbor."
        ::= { wfEgpNeighEntry 2 }

    wfEgpNeighAs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The NIC-assigned decimal number that identifies the remote
                autonomous system (AS) of this EGP peer. Zero should be
                specified if the AS number of the neighbor is not yet known."
        ::= { wfEgpNeighEntry 3 }

    wfEgpNeighInMsgs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of EGP messages received without error from
                this EGP peer. "
        ::= { wfEgpNeighEntry 4 }

    wfEgpNeighInErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of EGP messages received from this EGP peer
                that proved to be in error (e.g., bad EGP checksum)."
        ::= { wfEgpNeighEntry 5 }

    wfEgpNeighOutMsgs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of locally generated EGP messages to this
                EGP peer."
        ::= { wfEgpNeighEntry 6 }

    wfEgpNeighOutErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of locally generated EGP messages not sent
                to this EGP peer due to resource limitations within
                an EGP entity."
        ::= { wfEgpNeighEntry 7 }

    wfEgpNeighInErrMsgs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of EGP-defined error messages received
                from this EGP peer."
        ::= { wfEgpNeighEntry 8 }

    wfEgpNeighOutErrMsgs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of EGP-defined error messages sent to
                this EGP peer."
        ::= { wfEgpNeighEntry 9 }

    wfEgpNeighStateUps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of EGP state transitions to the UP state
                with this EGP peer."
        ::= { wfEgpNeighEntry 10 }

    wfEgpNeighStateDowns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of EGP state transitions from the UP state
                to any other state with this EGP peer."
        ::= { wfEgpNeighEntry 11 }

    wfEgpNeighIntervalHello OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The interval between EGP Hello command retransmissions (in
                seconds).  This represents the t1 timer as defined in RFC 904."
        ::= { wfEgpNeighEntry 12 }

    wfEgpNeighIntervalPoll OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The interval between EGP poll command retransmissions (in
                seconds).  This represents the t3 timer as defined in RFC 904."
        ::= { wfEgpNeighEntry 13 }

    wfEgpNeighMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    passive(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The polling mode of this EGP entity, either passive
                or active."
        ::= { wfEgpNeighEntry 14 }

    wfEgpNeighEvent OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The EGP event that occurred on the local interface with respect
                to this entry's EGP neighbor.  "
        ::= { wfEgpNeighEntry 15 }

    wfEgpNeighBadAsns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received EGP messages that contained an
                unrecognized AS number in the EGP header."
        ::= { wfEgpNeighEntry 16 }

    wfEgpNeighBadCodes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received EGP messages that contained an
                unrecognized value in the Code field in the EGP header."
        ::= { wfEgpNeighEntry 17 }

    wfEgpNeighBadHellos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of unexpected Hello neighbor reachability
                messages received by EGP.  A Hello message is unexpected
                when received from a passive peer."
        ::= { wfEgpNeighEntry 18 }

    wfEgpNeighBadIHUs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of unexpected I Hear You neighbor reachability
                messages received by EGP.  A I Hear You message is unexpected
                when received in the absence of a prior Hello message."
        ::= { wfEgpNeighEntry 19 }

    wfEgpNeighBadStatuses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received EGP messages that contained an
                unrecognized value in the Status field in the EGP header."
        ::= { wfEgpNeighEntry 20 }

    wfEgpNeighBadChecksums OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received EGP messages that contained a
                faulty checksum in the EGP header."
        ::= { wfEgpNeighEntry 21 }

    wfEgpNeighBadTypes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received EGP messages that contained an
                unrecognized value in the Type field in the EGP header."
        ::= { wfEgpNeighEntry 22 }

    wfEgpNeighBadVersions OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received EGP messages that contained an
                invalid EGP Version number in the EGP header. This EGP
                implementation supports EGP Version 2."
        ::= { wfEgpNeighEntry 23 }

    wfEgpNeighCmdOutOfSeqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times EGP received an out-of-sequence command
                message.  An out-of-sequence message indicates that a prior
                message, issued by an EGP peer, has been missed."
        ::= { wfEgpNeighEntry 24 }

    wfEgpNeighCmdRejects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times EGP refused to respond to a received
                command. Such refusal could be generated by receipt of a
                neighbor acquisition message from an unknown AS, or by
                receipt of a faulty EGP message (for example, one with a
                bad checksum) from a known neighbor."
        ::= { wfEgpNeighEntry 25 }

    wfEgpCfgNeighTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfEgpCfgNeighEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table is used to configure the parameters for a relationship
                with a particular local EGP neighbor. This table is proprietary
                and not part of the standard EGP MIB. "
        ::= { wfEgpGroup 3 }

    wfEgpCfgNeighEntry OBJECT-TYPE
        SYNTAX	WfEgpCfgNeighEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the EGP Cfg Neighbor table"
        INDEX	{ wfEgpCfgNeighRemoteAddr }
        ::= { wfEgpCfgNeighTable 1 }

    WfEgpCfgNeighEntry ::= SEQUENCE {
    	    wfEgpCfgNeighDelete
    		INTEGER,
    	    wfEgpCfgNeighDisable
    		INTEGER,
    	    wfEgpCfgNeighState
    		INTEGER,
    	    wfEgpCfgNeighLocalAddr
    		IpAddress,
    	    wfEgpCfgNeighRemoteAddr
    		IpAddress,
    	    wfEgpCfgNeighGatewayMode
    		INTEGER,
    	    wfEgpCfgNeighAcqMode
    		INTEGER,
    	    wfEgpCfgNeighPollMode
    		INTEGER,
    	    wfEgpCfgNeighHelloTimer
    		INTEGER,
    	    wfEgpCfgNeighPollTimer
    		INTEGER
        }

    wfEgpCfgNeighDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Users perform an SNMP SET
                operation on this object to create/delete an EGP
                neighbor relationship with the specified local IP
                address. "
        DEFVAL	{ created }
        ::= { wfEgpCfgNeighEntry 1 }

    wfEgpCfgNeighDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Users perforn an SNMP SET
                operation on this object to enable/disable an EGP
                Neighbor relationship with the specified local IP address.
                Default is enabled.
                This variable is also used to trigger operator-initiated
                Start and Stop events in the EGP FSM.  It takes the place
                of the egpNeighEventTrigger variable. When set, this variable
                causes a Start or Stop event on the specified neighbor, as
                specified on pages 8-10 of RFC 904. Briefly, a Start event
                causes an Idle peer to begin neighbor acquisition and a
                non-Idle peer to reinitiate neighbor acquisition.  A stop
                event causes a non-Idle peer to return to the Idle state
                until a Start event occurs, either via egpNeighEventTrigger
                or otherwise. This parameter is part of MIB 2.
                NOTE: The FSM is only affected if EGP is Enabled on the
                slot."
        DEFVAL	{ enabled }
        ::= { wfEgpCfgNeighEntry 2 }

    wfEgpCfgNeighState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This parameter relfects the current state of the specified
                EGP neighbor relationship with specfied local IP address. "
        DEFVAL	{ notpresent }
        ::= { wfEgpCfgNeighEntry 3 }

    wfEgpCfgNeighLocalAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address of the local interface that provides the
                EGP connection to the remote autonomous system."
        ::= { wfEgpCfgNeighEntry 4 }

    wfEgpCfgNeighRemoteAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address of the remote interface that provides the
                EGP connection to the remote autonomous system."
        ::= { wfEgpCfgNeighEntry 5 }

    wfEgpCfgNeighGatewayMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    noncore(1),
    		    core(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter specifies the EGP gateway mode of this IP
                interface. The two modes are core and non-core. When the
                interface is configured in non-core mode, it will advertise
                and forward only traffic that originated or is destined
                for a local network within its AS. When configured for
                this mode, certain EGP Export Route Filters are auto-
                matically configured for this interface. When the interface
                is configured in Core mode, it can advertise and forward
                traffic to networks interior or exterior to its local AS.
                The default is Core mode."
        DEFVAL	{ core }
        ::= { wfEgpCfgNeighEntry 6 }

    wfEgpCfgNeighAcqMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    passive(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter specifies which of the two neighbors will
                initiate EGP connections. This configures the mode for the
                local EGP neighbor.  Note: At least one neighbor must be
                in the Active mode."
        DEFVAL	{ passive }
        ::= { wfEgpCfgNeighEntry 7 }

    wfEgpCfgNeighPollMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    passive(2),
    		    both(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter specifies the type of neighbor reachability
                algorithm this local EGP neighbor will execute.  "
        DEFVAL	{ both }
        ::= { wfEgpCfgNeighEntry 8 }

    wfEgpCfgNeighHelloTimer OBJECT-TYPE
        SYNTAX	INTEGER(30..120)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter specifies the interval between EGP Hello
                command retransmissions (in seconds) by the local EGP neighbor.
                This represents the t1 timer as defined in RFC 904."
        DEFVAL	{ 60 }
        ::= { wfEgpCfgNeighEntry 9 }

    wfEgpCfgNeighPollTimer OBJECT-TYPE
        SYNTAX	INTEGER(120..480)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter specifies the interval between EGP poll
                command retransmissions (in hundredths of a second) by the
                local EGP neighbor. This represents the t3 timer as defined
                in RFC 904."
        DEFVAL	{ 180 }
        ::= { wfEgpCfgNeighEntry 10 }

    END  -- Wellfleet-EGP-MIB
-- @(#)WSCCS o/mibs-fakevent.mib 1.1 8/30/95
Wellfleet-FAKE-EVENT-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:40:48 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfSnmpGroup
        FROM Wellfleet-COMMON-MIB;


    wfFakeEvent	OBJECT IDENTIFIER ::= { wfSnmpGroup 4 }

    wfFakeEventString OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A dummy display string. While no string will actually be kept here, the
                full identifier (object id + attribute id + instance ID ) will be used to
                wrap event strings passed from the system logger into an SNMP Trap message."
        ::= { wfFakeEvent 1 }

    wfLogTrapSeverity OBJECT-TYPE
        SYNTAX	INTEGER {
    		    fault(1),
    		    warning(2),
    		    informational(3),
    		    trace(4),
    		    debug(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object is used for wrapping log event severity information
                in a log event specific trap.  The severity information is the thrid
                variable binding in a log event specific trap."
        ::= { wfFakeEvent 2 }

    END  -- Wellfleet-FAKE-EVENT-MIB
-- @(#)WSCCS l/mibs-fddi.mib 1.1 8/30/95
Wellfleet-FDDI-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:40:52 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfLine, wfFddiGroup
        FROM Wellfleet-COMMON-MIB;


    wfFddiSmtGroup	OBJECT IDENTIFIER ::= { wfFddiGroup 1 }
    wfFddiMacGroup	OBJECT IDENTIFIER ::= { wfFddiGroup 2 }
    wfFddiPathGroup	OBJECT IDENTIFIER ::= { wfFddiGroup 3 }
    wfFddiPortGroup	OBJECT IDENTIFIER ::= { wfFddiGroup 4 }


    wfFddiTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFddiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "FDDI line record"
        ::= { wfLine 4 }

    wfFddiEntry OBJECT-TYPE
        SYNTAX	WfFddiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the FDDI table"
        INDEX	{ wfFDDISlot,
    		  wfFDDINode }
        ::= { wfFddiTable 1 }

    WfFddiEntry ::= SEQUENCE {
    	    wfFDDIDelete
    		INTEGER,
    	    wfFDDIEnable
    		INTEGER,
    	    wfFDDIState
    		INTEGER,
    	    wfFDDISlot
    		INTEGER,
    	    wfFDDINode
    		INTEGER,
    	    wfFDDICct
    		INTEGER,
    	    wfFDDIBofl
    		INTEGER,
    	    wfFDDIBoflTmo
    		INTEGER,
    	    wfFDDIMtu
    		INTEGER,
    	    wfFDDIMadr
    		OCTET STRING,
    	    wfFDDIOctetsRxOk
    		Counter,
    	    wfFDDIFramesRxOk
    		Counter,
    	    wfFDDIOctetsTxOk
    		Counter,
    	    wfFDDIFramesTxOk
    		Counter,
    	    wfFDDICrcErrRx
    		Counter,
    	    wfFDDIOverrunRx
    		Counter,
    	    wfFDDIParityErrRx
    		Counter,
    	    wfFDDIMacErrRx
    		Counter,
    	    wfFDDIRingErrRx
    		Counter,
    	    wfFDDISmtRingErrRx
    		Counter,
    	    wfFDDIRingOverrunRx
    		Counter,
    	    wfFDDISmtRingOverrunRx
    		Counter,
    	    wfFDDIAbortTx
    		Counter,
    	    wfFDDIUnderrunTx
    		Counter,
    	    wfFDDIParityErrTx
    		Counter,
    	    wfFDDIRingErrTx
    		Counter,
    	    wfFDDIPortOpErr
    		Counter,
    	    wfFDDIInternOpErr
    		Counter,
    	    wfFDDIHostErr
    		Counter,
    	    wfFDDISmtConnectionPolicy
    		INTEGER,
    	    wfFDDISmtTNotify
    		INTEGER,
    	    wfFDDIMacTReq
    		INTEGER,
    	    wfFDDIMacTMax
    		INTEGER,
    	    wfFDDIMacTvxValue
    		INTEGER,
    	    wfFDDIMacTMin
    		INTEGER,
    	    wfFDDIHardwareFilter
    		INTEGER,
    	    wfFDDISmtEnable
    		INTEGER,
    	    wfFDDITxQueueLength
    		INTEGER,
    	    wfFDDIRxQueueLength
    		INTEGER,
    	    wfFDDITxClipFrames
    		Counter,
    	    wfFDDIRxReplenMisses
    		Counter,
    	    wfFDDICfgTxQueueLength
    		INTEGER,
    	    wfFDDICfgRxQueueLength
    		INTEGER,
    	    wfFDDILineNumber
    		INTEGER,
    	    wfFDDIForcePeerTree
    		INTEGER,
    	    wfFDDIInvalidFrameStatusRx
    		Counter,
    	    wfFDDIRxOversizedFrames
    		Counter,
    	    wfFDDIRxSmtOversizedFrames
    		Counter,
    	    wfFDDIRxUndersizedFrames
    		Counter,
    	    wfFDDIRxSmtUndersizedFrames
    		Counter,
    	    wfFDDIModule
    		INTEGER,
    	    wfFDDIActualNode
    		INTEGER,
    	    wfFDDILastChange
    		TimeTicks,
    	    wfFDDIOutQLen
    		Gauge,
    	    wfFDDIRxSmtOctets
    		Counter,
    	    wfFDDIRxSmtFrames
    		Counter,
    	    wfFDDIIntProcessings
    		Counter,
    	    wfFDDITxProcessings
    		Counter,
    	    wfFDDIRxProcessings
    		Counter,
    	    wfFDDITxRNRProcessings
    		Counter,
    	    wfFDDISmtRxProcessings
    		Counter,
    	    wfFDDIPhyALogPtr
    		INTEGER,
    	    wfFDDIPhyBLogPtr
    		INTEGER,
    	    wfFDDIPromiscuous
    		INTEGER
        }

    wfFDDIDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/delete parameter, default = create."
        DEFVAL	{ create }
        ::= { wfFddiEntry 1 }

    wfFDDIEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/disable parameter, default = enable."
        DEFVAL	{ enable }
        ::= { wfFddiEntry 2 }

    wfFDDIState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line driver state variable, not present, init, down, up."
        DEFVAL	{ notpresent }
        ::= { wfFddiEntry 3 }

    wfFDDISlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID slot - filled in by driver."
        ::= { wfFddiEntry 4 }

    wfFDDINode OBJECT-TYPE
        SYNTAX	INTEGER(1..44)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID node - filled in by driver. For the ASN
                this attribute is an encoded value and is equal to
                'module'*10 + 'node'. Where 'module' is defined in
                attribute 50 and 'node' is defined in attribute 51
                of this table. For non-ASN platforms this attribute
                indicates the physical node number on the slot"
        ::= { wfFddiEntry 5 }

    wfFDDICct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Cct number for this line instance."
        ::= { wfFddiEntry 6 }

    wfFDDIBofl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Breath-Of-Life (BOFL) function, when enabled, will disable
                the LLC interface when the FDDI becomes non-operational
                (i.e., link unavailable) and the following conditions are true:

                1. The wfFddiMacMaUnitDataEnable attribute is enabled.
                2. The BOFL timer expired (specified by wfFDDIBoflTmo).

                If this attribute is disabled, the LLC interface will be
                terminated immediately after the link becomes unavailable. "
        DEFVAL	{ enable }
        ::= { wfFddiEntry 7 }

    wfFDDIBoflTmo OBJECT-TYPE
        SYNTAX	INTEGER(0..3600)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the time value (in seconds) of the BOFL timer. The BOFL
                timer will be set to the value of this attribute when the following
                conditions are true:

                1. The wfFDDIBofl attribute is enabled.
                2. The link becomes unavailable.

                Upon expiration of the BOFL timer, the LLC interface will be
                disabled.

                Note also that the BOFL timer will be disabled if the link becomes
                operational (available) before the timer expires.."
        DEFVAL	{ 3 }
        ::= { wfFddiEntry 8 }

    wfFDDIMtu OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(4495)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The MTU is the maximum allowed frame length on the wire, excluding
                frame delimiters (i.e. preamble, ending delimiter).

                The MTU of an FDDI frame includes:
                   FC (1 octet) + DA (6 octets) + SA (6 octets) +
                   INFO (<= 4478 octets) +
                   FCS (4 octets)  = 4495 octets"
        DEFVAL	{ default }
        ::= { wfFddiEntry 9 }

    wfFDDIMadr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "PROM-based MAC address, fixed - line driver fills in."
        ::= { wfFddiEntry 10 }

    wfFDDIOctetsRxOk OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of bytes received without error. This byte count
                only includes LLC frames (i.e. no MAC and SMT frames)."
        ::= { wfFddiEntry 11 }

    wfFDDIFramesRxOk OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received without error. This frame count
                only includes LLC frames (i.e. no MAC and SMT frames)."
        ::= { wfFddiEntry 12 }

    wfFDDIOctetsTxOk OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of bytes transmitted without error. This byte count
                only includes LLC and SMT frames (i.e. no MAC frames)."
        ::= { wfFddiEntry 13 }

    wfFDDIFramesTxOk OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames transmitted without error. This frame count
                only includes LLC and SMT frames (i.e. no MAC frames )."
        ::= { wfFddiEntry 14 }

    wfFDDICrcErrRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received with CRC errors."
        ::= { wfFddiEntry 15 }

    wfFDDIOverrunRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received with internal overrun errors."
        ::= { wfFddiEntry 16 }

    wfFDDIParityErrRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received with parity errors."
        ::= { wfFddiEntry 17 }

    wfFDDIMacErrRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received with MAC errors."
        ::= { wfFddiEntry 18 }

    wfFDDIRingErrRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of receive ring error events."
        ::= { wfFddiEntry 19 }

    wfFDDISmtRingErrRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of SMT receive ring error events."
        ::= { wfFddiEntry 20 }

    wfFDDIRingOverrunRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of LLC receive ring overrun events."
        ::= { wfFddiEntry 21 }

    wfFDDISmtRingOverrunRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of SMT receive ring overrun events."
        ::= { wfFddiEntry 22 }

    wfFDDIAbortTx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmit frames with internal abort errors."
        ::= { wfFddiEntry 23 }

    wfFDDIUnderrunTx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmit frames aborted with underrun errors."
        ::= { wfFddiEntry 24 }

    wfFDDIParityErrTx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmit frames aborted with parity errors."
        ::= { wfFddiEntry 25 }

    wfFDDIRingErrTx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of LLC/SMT transmit ring error events."
        ::= { wfFddiEntry 26 }

    wfFDDIPortOpErr OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of port operation error events."
        ::= { wfFddiEntry 27 }

    wfFDDIInternOpErr OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of internal operation error events."
        ::= { wfFddiEntry 28 }

    wfFDDIHostErr OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of host error events."
        ::= { wfFddiEntry 29 }

    wfFDDISmtConnectionPolicy OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(65381)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A value that indicates the connection policies
                enforced at the station. A station sets the
                corresponding policy for each of the connection
                types that it rejects. The letter designations, X
                and Y, in the 'rejectX-Y' names have the following
                significance: X represents the PC-Type of the
                local PORT and Y represents a PC-Neighbor in the
                evaluation of Connection-Policy (PC-Type, PC-
                Neighbor) that is done to determine the setting of
                T-Val(3) in the PC-Signaling sequence.

                The value is a sum. This value initially takes
                the value zero, then for each of the connection
                policies currently enforced on the node, 2 raised
                to a power is added to the sum. The powers are
                according to the following table:

                       Policy   Power
                    rejectA-A   0
                    rejectA-B   1
                    rejectA-S   2
                    rejectA-M   3
                    rejectB-A   4
                    rejectB-B   5
                    rejectB-S   6
                    rejectB-M   7
                    rejectS-A   8
                    rejectS-B   9
                    rejectS-S   10
                    rejectS-M   11
                    rejectM-A   12
                    rejectM-B   13
                    rejectM-S   14
                    rejectM-M   15"
        DEFVAL	{ default }
        ::= { wfFddiEntry 30 }

    wfFDDISmtTNotify OBJECT-TYPE
        SYNTAX	INTEGER(2..30)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The timer used in the Neighbor Notification protocol, reported
                in seconds and ranging from 2 to 30 seconds."
        DEFVAL	{ 22 }
        ::= { wfFddiEntry 31 }

    wfFDDIMacTReq OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(2062500)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the maximum time value of 'wfFddiPathMaxTReq' that
                shall be used by any MAC that is configured in this path. The
                operational value of 'wfFddiPathMaxTReq' is managed by setting
                this attribute. This attribute has the time value range of:

                     wfFddiPathTvxLowerBound < wfFddiMacTReq <=
                     wfFddiPathTMaxLowerBound.

                Time specified in octet units. The default value of this attribute
                is 165 msec. The name of this attribute in the IETF MIB is
                FddiMibPATHMaxTReq.

                To convert 165 milliseconds to octet units of 80 nanaseconds:

                T_Req Nanaoseconds =
                         ((165 * 1000 * 1000) / 80) = 2062500

                To convert 2062500 octet units of 80 nanoseconds to milliseconds:

                T_Req Milliseconds =
                         ((2062500 / 12.5) / 1000)  = 165"
        DEFVAL	{ default }
        ::= { wfFddiEntry 32 }

    wfFDDIMacTMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The requested maximum TTRT to be supported by a MAC represented
                in unsigned integer specifying time in octet units (80 nanoseconds)."
        ::= { wfFddiEntry 33 }

    wfFDDIMacTvxValue OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The requested value of TvxValue represented in unsigned integer
                specifying time in octet units (80 nanoseconds)."
        ::= { wfFddiEntry 34 }

    wfFDDIMacTMin OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(50000)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The requested minimum TTRT to be requested by a MAC represented
                in unsigned integer specifying time in octet units (80 nanoseconds)."
        DEFVAL	{ default }
        ::= { wfFddiEntry 35 }

    wfFDDIHardwareFilter OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Hardware filter (CAM) parameter."
        DEFVAL	{ disable }
        ::= { wfFddiEntry 36 }

    wfFDDISmtEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable Station Management periodic timer and NIF protocol."
        DEFVAL	{ enable }
        ::= { wfFddiEntry 37 }

    wfFDDITxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current Transmit Queue Length"
        ::= { wfFddiEntry 38 }

    wfFDDIRxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current Receive Queue Length"
        ::= { wfFddiEntry 39 }

    wfFDDITxClipFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames clipped in driver's transmit routine due to transmit
                congestion."
        ::= { wfFddiEntry 40 }

    wfFDDIRxReplenMisses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packet buffer misses while attempting to replenish driver
                receive ring."
        ::= { wfFddiEntry 41 }

    wfFDDICfgTxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured Transmit Queue Length. Values other than zero over-ride
                the router selected values. A value of zero has a special meaning.
                Zero causes router based default values to be used. Values larger
                than the compiled ring size are truncated to the compiled ring
                size."
        ::= { wfFddiEntry 42 }

    wfFDDICfgRxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured Receive Queue Length. Values other than zero over-ride
                the router selected values. A value of zero has a special meaning.
                Zero cuases router based default values to be used. Values larger
                than the compiled ring size are truncated to the compiled ring
                size."
        ::= { wfFddiEntry 43 }

    wfFDDILineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Logical line number associated with this driver entity."
        ::= { wfFddiEntry 44 }

    wfFDDIForcePeerTree OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute allows all FDDI Peer/Tree connections
                to reach the 'Thru' state. This is done to give the
                user some flexibility and allow them to Daisy Chain
                their Phy connections, mixing Tree & Peer connections.
                This type of daisy chaining DOES NOT conform to the
                SMT standard and is NOT recommended as it may result in
                a less than optimum token path. Normally when we have a
                Peer/Tree connection mix, we will wrap the connection,
                favoring PHY B."
        DEFVAL	{ disable }
        ::= { wfFddiEntry 45 }

    wfFDDIInvalidFrameStatusRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A count of the number of badly formed frames received off
                of the FDDI ring. These are frames which do not contain a
                valid Frame Status field of at least 3 control indicator
                symbols (i.e. E, A, C, flags)."
        ::= { wfFddiEntry 46 }

    wfFDDIRxOversizedFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of LLC frames received whose length exceeded the MTU."
        ::= { wfFddiEntry 47 }

    wfFDDIRxSmtOversizedFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of SMT frames received whose length exceeded the MTU."
        ::= { wfFddiEntry 48 }

    wfFDDIRxUndersizedFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of LLC frames received whose length was less than 20 bytes
                including the FC byte and a 4 byte CRC."
        ::= { wfFddiEntry 49 }

    wfFDDIRxSmtUndersizedFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of SMT frames received whose length was less than 37 bytes
                including the FC byte and a 4 byte CRC."
        ::= { wfFddiEntry 50 }

    wfFDDIModule OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Module number for ASN platform, filled in by driver. For non-ASN
                platforms this attribute will not be used."
        ::= { wfFddiEntry 51 }

    wfFDDIActualNode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Actual Node number for ASN platform, filled in by
                driver. For non-ASN platforms, this attribute will not
                be used."
        ::= { wfFddiEntry 52 }

    wfFDDILastChange OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of SysUpTime at the time the interface entered it's current
                operational state (UP state).  SysUpTime is defined as the time (in
                hundredths of a second) since the network management portion of the
                system was last re-initialized.  Usually the time since boot."
        ::= { wfFddiEntry 53 }

    wfFDDIOutQLen OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The instantaneous current length of the output packet queue (in packets)."
        ::= { wfFddiEntry 54 }

    wfFDDIRxSmtOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of bytes received without error. This byte count
                only includes SMT frames (i.e. no MAC and LLC frames)."
        ::= { wfFddiEntry 55 }

    wfFDDIRxSmtFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received without error. This frame count
                only includes SMT frames (i.e. no MAC and LLC frames)."
        ::= { wfFddiEntry 56 }

    wfFDDIIntProcessings OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts the number of times the interrupt service
                routine has been called "
        ::= { wfFddiEntry 57 }

    wfFDDITxProcessings OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts the number of times the transmit routine
                fsi_xmt_oper_act(), has been called "
        ::= { wfFddiEntry 58 }

    wfFDDIRxProcessings OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts the number of times RINT processing takes place
                in the interrupt service routine. "
        ::= { wfFddiEntry 59 }

    wfFDDITxRNRProcessings OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts the number of times the transmit complete routine
                fsi_xmt_cmpl(), has been called "
        ::= { wfFddiEntry 60 }

    wfFDDISmtRxProcessings OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts the number of time RINT was processing was performed on the
                SMT receive ring."
        ::= { wfFddiEntry 61 }

    wfFDDIPhyALogPtr OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Address of the Debug Phy Event Buffer for Phy A. This
                attribute is strictly for diagnostic purposes. The size
                of the buffer is 1028 bytes."
        ::= { wfFddiEntry 62 }

    wfFDDIPhyBLogPtr OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Address of the Debug Phy Event Buffer for Phy B. This
                attribute is strictly for diagnostic purposes. The size
                of the buffer is 1028 bytes."
        ::= { wfFddiEntry 63 }

    wfFDDIPromiscuous OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "For now this attribute is used only in BNX code !!!
                The promiscuous parameter allows address filtering based on the
                destination MAC addresses.  When enabled, all frames are received,
                disabled indicates only frames destined for this local address
                and any functional group address are received."
        DEFVAL	{ enable }
        ::= { wfFddiEntry 64 }

    wfFddiSmtTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFddiSmtEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A list of SMT entries."
        ::= { wfFddiSmtGroup 2 }

    wfFddiSmtEntry OBJECT-TYPE
        SYNTAX	WfFddiSmtEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A SMT entry containing information common to a given SMT."
        INDEX	{ wfFddiSmtSlot,
    		  wfFddiSmtNode }
        ::= { wfFddiSmtTable 1 }

    WfFddiSmtEntry ::= SEQUENCE {
    	    wfFddiSmtSlot
    		INTEGER,
    	    wfFddiSmtNode
    		INTEGER,
    	    wfFddiSmtCct
    		INTEGER,
    	    wfFddiSmtStationId
    		OCTET STRING,
    	    wfFddiSmtOpVersionId
    		INTEGER,
    	    wfFddiSmtMacCt
    		INTEGER,
    	    wfFddiSmtNonMasterCt
    		INTEGER,
    	    wfFddiSmtEcmState
    		INTEGER,
    	    wfFddiSmtCfState
    		INTEGER,
    	    wfFddiSmtBypassPresent
    		INTEGER,
    	    wfFddiSmtRemoteDisconnectFlag
    		INTEGER,
    	    wfFddiSmtStationStatus
    		INTEGER,
    	    wfFddiSmtPeerWrapFlag
    		INTEGER
        }

    wfFddiSmtSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number associated with an SMT entity."
        ::= { wfFddiSmtEntry 1 }

    wfFddiSmtNode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Node/connector number associated with an SMT entity."
        ::= { wfFddiSmtEntry 2 }

    wfFddiSmtCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit number associated with an SMT entity."
        ::= { wfFddiSmtEntry 3 }

    wfFddiSmtStationId OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Unique identifier of an FDDI station."
        ::= { wfFddiSmtEntry 4 }

    wfFddiSmtOpVersionId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The version that this station is using for its operation."
        ::= { wfFddiSmtEntry 5 }

    wfFddiSmtMacCt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of MACs in a station."
        ::= { wfFddiSmtEntry 6 }

    wfFddiSmtNonMasterCt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of non master ports (A, B, or S PORTs) in a station."
        ::= { wfFddiSmtEntry 7 }

    wfFddiSmtEcmState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    out(1),
    		    in(2),
    		    trace(3),
    		    leave(4),
    		    pathtest(5),
    		    insert(6),
    		    check(7),
    		    deinsert(8)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the current state of the ECM state machine."
        ::= { wfFddiSmtEntry 8 }

    wfFddiSmtCfState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    isolated(1),
    		    wraps(2),
    		    wrapa(3),
    		    wrapb(4),
    		    wrapab(5),
    		    thru(6),
    		    locala(7),
    		    localb(8),
    		    localab(9),
    		    locals(10),
    		    cwrapa(11),
    		    cwrapb(12),
    		    cwraps(13)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The attachment configuration for a station."
        ::= { wfFddiSmtEntry 9 }

    wfFddiSmtBypassPresent OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A flag indicating if the station has an optical bypass on its
                A/B port pair."
        ::= { wfFddiSmtEntry 10 }

    wfFddiSmtRemoteDisconnectFlag OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A flag indicating that the station was remotely disconnected
                from the network as a result of receiving an 'wfFddiSmtStationAction'
                disconnect in a Parameter Management Frame. A station requires
                a Connect Action to rejoin & clear the flag."
        ::= { wfFddiSmtEntry 11 }

    wfFddiSmtStationStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    concatenated(1),
    		    seperated(2),
    		    thru(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This variable indicates the current state of the primary and
                secondary paths within this station."
        ::= { wfFddiSmtEntry 12 }

    wfFddiSmtPeerWrapFlag OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This variable assumes the value of the 'PeerWrapFlag' in CFM."
        ::= { wfFddiSmtEntry 13 }

    wfFddiSmtExtTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFddiSmtExtEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A list of SMT extension entries."
        ::= { wfFddiSmtGroup 3 }

    wfFddiSmtExtEntry OBJECT-TYPE
        SYNTAX	WfFddiSmtExtEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A SMT entry containing information common to a given SMT."
        INDEX	{ wfFddiSmtExtSlot,
    		  wfFddiSmtExtNode }
        ::= { wfFddiSmtExtTable 1 }

    WfFddiSmtExtEntry ::= SEQUENCE {
    	    wfFddiSmtDelete
    		INTEGER,
    	    wfFddiSmtExtSlot
    		INTEGER,
    	    wfFddiSmtExtNode
    		INTEGER,
    	    wfFddiSmtExtCct
    		INTEGER,
    	    wfFddiSmtHiVersionId
    		INTEGER,
    	    wfFddiSmtLoVersionId
    		INTEGER,
    	    wfFddiSmtManufacturerData
    		OCTET STRING,
    	    wfFddiSmtUserData
    		DisplayString,
    	    wfFddiSmtMibVersionId
    		INTEGER,
    	    wfFddiSmtMasterCts
    		INTEGER,
    	    wfFddiSmtAvailablePaths
    		INTEGER,
    	    wfFddiSmtConfigCapabilities
    		INTEGER,
    	    wfFddiSmtConfigPolicy
    		INTEGER,
    	    wfFddiSmtStatRptPolicy
    		INTEGER,
    	    wfFddiSmtTraceMaxExpiration
    		INTEGER,
    	    wfFddiSmtTimeStamp
    		OCTET STRING,
    	    wfFddiSmtTransitionTimeStamp
    		OCTET STRING,
    	    wfFddiSmtDatProtocol
    		INTEGER
        }

    wfFddiSmtDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/delete parameter, default = create."
        DEFVAL	{ created }
        ::= { wfFddiSmtExtEntry 1 }

    wfFddiSmtExtSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number associated with an SMT entity."
        ::= { wfFddiSmtExtEntry 2 }

    wfFddiSmtExtNode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Node/connector number associated with an SMT entity."
        ::= { wfFddiSmtExtEntry 3 }

    wfFddiSmtExtCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit number associated with an SMT entity."
        ::= { wfFddiSmtExtEntry 4 }

    wfFddiSmtHiVersionId OBJECT-TYPE
        SYNTAX	INTEGER {
    		    id(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The highest version of SMT that this station supports."
        DEFVAL	{ id }
        ::= { wfFddiSmtExtEntry 5 }

    wfFddiSmtLoVersionId OBJECT-TYPE
        SYNTAX	INTEGER {
    		    id(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The lowest version of SMT that this station supports."
        DEFVAL	{ id }
        ::= { wfFddiSmtExtEntry 6 }

    wfFddiSmtManufacturerData OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Contains 32 Octets of manufacturer data. The first component,
                manufacturing OUI, is the 3 octet Organizationally Unique
                Identifier (OUI) assigned by IEEE. The second component,
                ManufacturerData, is the manufacturers data (29 octets)."
        ::= { wfFddiSmtExtEntry 7 }

    wfFddiSmtUserData OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Contains 32 Octets of user defined information in ascii format."
        ::= { wfFddiSmtExtEntry 8 }

    wfFddiSmtMibVersionId OBJECT-TYPE
        SYNTAX	INTEGER {
    		    id(1)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The version of the FDDI MIB of this station."
        DEFVAL	{ id }
        ::= { wfFddiSmtExtEntry 9 }

    wfFddiSmtMasterCts OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of M ports in a node."
        ::= { wfFddiSmtExtEntry 10 }

    wfFddiSmtAvailablePaths OBJECT-TYPE
        SYNTAX	INTEGER {
    		    p(1),
    		    s(2),
    		    l(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A bit string that indicates the path types that are available
                in the station.

                The value initially takes the value 0, then for each type of
                path that this node has available, 2 raised to a power is added
                to the sum. The powers are according to the following table:

                     Path    Power
                     ----    -----
                     Primary   0
                     Secondary 1
                     Local     2

                For example, a station having Primary and Local paths available
                would have a value of 5 (2**0 + 2**2)."
        DEFVAL	{ p }
        ::= { wfFddiSmtExtEntry 11 }

    wfFddiSmtConfigCapabilities OBJECT-TYPE
        SYNTAX	INTEGER {
    		    avail(1),
    		    ab(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A bit string which indicates the configuration capabilities of
                a node.

                The 'Hold Available' bit indicates the support of the optional
                Hold function, which is controlled by 'wfFddiSmtConfigPolicy'.
                The 'CF-Wrap-AB' bit indicates that the station has the capability
                of performing a wrab_ab.

                The value is a sum. This value initially takes the value 0, then
                for each of the configuration policies currently enforced on the
                node, 2 raised to a power is added to the sum. The powers are
                according to the following table:

                Policy          Power
                ------          -----
                HoldAvailable     0
                CF_Wrap-AB        1"
        ::= { wfFddiSmtExtEntry 12 }

    wfFddiSmtConfigPolicy OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A bit string representing the configuration policies currently
                desired in a node. 'Hold' is one of the terms used for the
                'Hold' flag."
        ::= { wfFddiSmtExtEntry 13 }

    wfFddiSmtStatRptPolicy OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If ENABLED, indicates that the node will generate Status Report Frames
                (SRF) for its implemented events."
        DEFVAL	{ enable }
        ::= { wfFddiSmtExtEntry 14 }

    wfFddiSmtTraceMaxExpiration OBJECT-TYPE
        SYNTAX	INTEGER(6001..256000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum propogation time for a Trace on an FDDI topology. The
                value is stored in milliseconds."
        DEFVAL	{ 7000 }
        ::= { wfFddiSmtExtEntry 15 }

    wfFddiSmtTimeStamp OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Holds the time of creation of the last Status Report Frame (SRF)."
        ::= { wfFddiSmtExtEntry 16 }

    wfFddiSmtTransitionTimeStamp OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Holds the time of occurrence of the last condition or event."
        ::= { wfFddiSmtExtEntry 17 }

    wfFddiSmtDatProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "SMT will implement an optional ANSI duplicate address test
                involving periodic transmission of NSA NIF frames addressed
                to itself if enabled by this attribute."
        DEFVAL	{ enable }
        ::= { wfFddiSmtExtEntry 18 }

    wfFddiSmtActionTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFddiSmtActionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A list of SMT action entries."
        ::= { wfFddiSmtGroup 4 }

    wfFddiSmtActionEntry OBJECT-TYPE
        SYNTAX	WfFddiSmtActionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An SMT entry containing actions common to a given SMT."
        INDEX	{ wfFddiSmtActionSlot,
    		  wfFddiSmtActionNode }
        ::= { wfFddiSmtActionTable 1 }

    WfFddiSmtActionEntry ::= SEQUENCE {
    	    wfFddiSmtActionDelete
    		INTEGER,
    	    wfFddiSmtActionSlot
    		INTEGER,
    	    wfFddiSmtActionNode
    		INTEGER,
    	    wfFddiSmtActionCct
    		INTEGER,
    	    wfFddiSmtStationAction
    		INTEGER
        }

    wfFddiSmtActionDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/delete parameter, default = create."
        DEFVAL	{ created }
        ::= { wfFddiSmtActionEntry 1 }

    wfFddiSmtActionSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number associated with an SMT action entity."
        ::= { wfFddiSmtActionEntry 2 }

    wfFddiSmtActionNode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Node/connector number associated with an SMT action entity."
        ::= { wfFddiSmtActionEntry 3 }

    wfFddiSmtActionCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit number associated with an SMT action entity."
        ::= { wfFddiSmtActionEntry 4 }

    wfFddiSmtStationAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    connect(2),
    		    disconnect(3),
    		    pathtest(4),
    		    selftest(5),
    		    disablea(6),
    		    disableb(7),
    		    disablem(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object when read, always returns a value of other(1).
                The behavior of setting this variable to each of the acceptable
                values is as follows:

                Other:       Results in a BadValue error

                Connect:     Generates a connect signal to ECM
                             to begin a connection sequence. The
                             'wfFddiSmtRemoteDisconnectFlag' is
                             cleared on the setting of this
                             variable to 1.

                Disconnect:  Generates a disconnect signal to
                             ECM and sets the
                             'wfFddiSmtRemoteDisconnectFlag'
                             to TRUE.

                Path_Test:   Initiates a station path test.
                             The 'PathTest' variable is set
                             to 'Testing'. The results of
                             this action are not specified
                             in the standard.

                Self_test:   Initiates a station self test.
                             The results of this action are
                             not specified in the standard.
                Disable_A:   Disable_A causes a PC_Disable on the
                             A port if the A port mode is peer.

                Disable_B:   Disable_B causes a PC_Disable on the
                             B port if the B port mode is peer.

                Disable_M:   Disable_M causes a PC_Disable on all
                             M ports.

                Attempts to set this object to all other values results in a
                BadValue error. Agents may elect to return a BadValue error on
                attempts to set this variable to PathTest or SelfTest."
        ::= { wfFddiSmtActionEntry 5 }

    wfFddiMacTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFddiMacEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A list of MAC entries."
        ::= { wfFddiMacGroup 2 }

    wfFddiMacEntry OBJECT-TYPE
        SYNTAX	WfFddiMacEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A MAC entry containing information common to a given MAC."
        INDEX	{ wfFddiMacSlot,
    		  wfFddiMacNode }
        ::= { wfFddiMacTable 1 }

    WfFddiMacEntry ::= SEQUENCE {
    	    wfFddiMacSlot
    		INTEGER,
    	    wfFddiMacNode
    		INTEGER,
    	    wfFddiMacCct
    		INTEGER,
    	    wfFddiMacUpstreamNbr
    		OCTET STRING,
    	    wfFddiMacDownstreamNbr
    		OCTET STRING,
    	    wfFddiMacSmtAddress
    		OCTET STRING,
    	    wfFddiMacTNeg
    		INTEGER,
    	    wfFddiMacRmtState
    		INTEGER,
    	    wfFddiMacOldUpstreamNbr
    		OCTET STRING,
    	    wfFddiMacOldDownstreamNbr
    		OCTET STRING,
    	    wfFddiMacTokenCts
    		OCTET STRING,
    	    wfFddiMacErrorCts
    		OCTET STRING,
    	    wfFddiMacLostCts
    		OCTET STRING,
    	    wfFddiMacDaFlag
    		INTEGER,
    	    wfFddiMacUnaDaFlag
    		INTEGER,
    	    wfFddiMacFrameErrorFlag
    		INTEGER,
    	    wfFddiMacMaUnitDataAvailable
    		INTEGER,
    	    wfFddiMacDownstreamPortType
    		INTEGER
        }

    wfFddiMacSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number associated with a MAC entity."
        ::= { wfFddiMacEntry 1 }

    wfFddiMacNode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Node/connector number associated with a MAC entity."
        ::= { wfFddiMacEntry 2 }

    wfFddiMacCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit number associated with a MAC entity."
        ::= { wfFddiMacEntry 3 }

    wfFddiMacUpstreamNbr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The MAC's upstream neighbor's long individual MAC address. It
                may be determined by the Neighbor Information Frame protocol.
                The value shall be reported as '00 00 00 00 00 00' if it is
                unknown. SMT uses the MSB form for representation of 48-bit
                addresses."
        ::= { wfFddiMacEntry 4 }

    wfFddiMacDownstreamNbr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The MAC's downstream neighbor's long individual MAC address. It
                may be determined by the Neighbor Information Frame protocol.
                The value shall be reported as '00 00 00 00 00 00' if it is
                unknown. SMT uses the MSB form for representation of 48-bit
                addresses."
        ::= { wfFddiMacEntry 5 }

    wfFddiMacSmtAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The 48 bit individual address of the MAC used for SMT frames.
                SMT uses the MSB form for representation of 48-bit addresses."
        ::= { wfFddiMacEntry 6 }

    wfFddiMacTNeg OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The negotiated TTRT during the claim process represented as an
                unsigned integer specifying time in nanoseconds."
        ::= { wfFddiMacEntry 7 }

    wfFddiMacRmtState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    isolated(1),
    		    nonop(2),
    		    ringop(3),
    		    detect(4),
    		    nonopdup(5),
    		    ringopdup(6),
    		    directed(7),
    		    trace(8)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the current state of the Ring Management state machine."
        ::= { wfFddiMacEntry 8 }

    wfFddiMacOldUpstreamNbr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The previous value of the MAC's upstream neighbor's long
                individual MAC address. It has an initial value of the
                SMT-Unknown-MAC Address and is only modified as specified by
                the Neighbor Information Frame protocol. SMT uses the MSB
                form for representation of 48-bit addresses."
        ::= { wfFddiMacEntry 9 }

    wfFddiMacOldDownstreamNbr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The previous value of the MAC's downstream neighbor's long
                individual MAC address. It has an initial value of the
                SMT-Unknown-MAC Address and is only modified as specified by
                the Neighbor Information Frame protocol. SMT uses the MSB
                form for representation of 48-bit addresses."
        ::= { wfFddiMacEntry 10 }

    wfFddiMacTokenCts OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A count that should as closely as possible match the number
                of times the station has received a token (total of
                non-restricted and restricted) on this MAC. This count is
                valuable for determination of network load."
        ::= { wfFddiMacEntry 11 }

    wfFddiMacErrorCts OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A count of the number of frames that were detected in error by
                this MAC that had not been detected in error by another MAC."
        ::= { wfFddiMacEntry 12 }

    wfFddiMacLostCts OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A count of the number of instances that this MAC detected a
                format error during frame reception such that the frame was
                stripped."
        ::= { wfFddiMacEntry 13 }

    wfFddiMacDaFlag OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Duplicate Address Flag. An RMT flag used to indicate that the
                MAC under control has the same address as another MAC on the FDDI."
        ::= { wfFddiMacEntry 14 }

    wfFddiMacUnaDaFlag OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A flag, UNDA_Flag, set when the upstream neighbor reports a
                duplicate address condition. Cleared once the condition clears."
        ::= { wfFddiMacEntry 15 }

    wfFddiMacFrameErrorFlag OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the MAC Frame Error Condition is present when set.
                Cleared when the condition clears and on station initialization."
        ::= { wfFddiMacEntry 16 }

    wfFddiMacMaUnitDataAvailable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A flag indicating that the MAC is available for the transmission
                and reception of Protocol Data Units (PDUs). The MAC and LLC
                interface will be established when the wfFddiMacMaUnitDataEnable
                attribute is enabled."
        ::= { wfFddiMacEntry 17 }

    wfFddiMacDownstreamPortType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    typea(1),
    		    typeb(2),
    		    types(3),
    		    typem(4),
    		    typenone(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the PC-Type of the first port that is downstream of
                this MAC (the exit port)."
        ::= { wfFddiMacEntry 18 }

    wfFddiMacExtTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFddiMacExtEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A list of MAC extension entries."
        ::= { wfFddiMacGroup 3 }

    wfFddiMacExtEntry OBJECT-TYPE
        SYNTAX	WfFddiMacExtEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A MAC entry containing information common to a given MAC."
        INDEX	{ wfFddiMacExtSlot,
    		  wfFddiMacExtNode }
        ::= { wfFddiMacExtTable 1 }

    WfFddiMacExtEntry ::= SEQUENCE {
    	    wfFddiMacDelete
    		INTEGER,
    	    wfFddiMacExtSlot
    		INTEGER,
    	    wfFddiMacExtNode
    		INTEGER,
    	    wfFddiMacExtCct
    		INTEGER,
    	    wfFddiMacFrameStatusFunctions
    		INTEGER,
    	    wfFddiMacBridgeFunctions
    		INTEGER,
    	    wfFddiMacTMaxCapability
    		INTEGER,
    	    wfFddiMacTvxCapability
    		INTEGER,
    	    wfFddiMacAvailablePaths
    		INTEGER,
    	    wfFddiMacCurrentPath
    		INTEGER,
    	    wfFddiMacDupAddrTest
    		INTEGER,
    	    wfFddiMacRequestedPaths
    		INTEGER,
    	    wfFddiMacCopiedCts
    		Counter,
    	    wfFddiMacFrameErrorThreshold
    		INTEGER,
    	    wfFddiMacFrameErrorRatio
    		INTEGER,
    	    wfFddiMacHardwarePresent
    		INTEGER,
    	    wfFddiMacMaUnitDataEnable
    		INTEGER,
    	    wfFddiMacTvxExpiredCts
    		Counter,
    	    wfFddiMacLateCts
    		Counter,
    	    wfFddiMacRingOpCts
    		Counter,
    	    wfFddiMacDuplicateTokenCts
    		Counter
        }

    wfFddiMacDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/delete parameter, default = create."
        DEFVAL	{ created }
        ::= { wfFddiMacExtEntry 1 }

    wfFddiMacExtSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number associated with a MAC entity."
        ::= { wfFddiMacExtEntry 2 }

    wfFddiMacExtNode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Node/connector number associated with a MAC entity."
        ::= { wfFddiMacExtEntry 3 }

    wfFddiMacExtCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit number associated with a MAC entity."
        ::= { wfFddiMacExtEntry 4 }

    wfFddiMacFrameStatusFunctions OBJECT-TYPE
        SYNTAX	INTEGER {
    		    repeat(1),
    		    set(2),
    		    clear(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the MAC's optional Frame Status processing functions.

                   The value is a sum. This value initially takes the value 0,
                   then for each function present, 2 raised to a power is added
                   to the sum. The powers are according to the following table:

                   function        power
                   --------        -----
                   fs-repeating      0
                   fs-setting        1
                   fs-clearing       2"
        ::= { wfFddiMacExtEntry 5 }

    wfFddiMacBridgeFunctions OBJECT-TYPE
        SYNTAX	INTEGER {
    		    transparent(1),
    		    srcroute(2),
    		    srt(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the MAC's optional bridging functions.

                   The value is a sum. This value initially takes the value zero,
                   then for each function present, 2 raised to a power is added to
                   the sum. The powers are according to the following table:

                        Function        Power
                        --------        ----
                           tb             0 -- Transparent bridging active
                           sr             1 -- Src routing active
                          srt             2 -- Src routing transparent active"
        ::= { wfFddiMacExtEntry 6 }

    wfFddiMacTMaxCapability OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(1336934400)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the maximum time value (in nanoseconds) of 'wfFddiMacTMax'
                that this MAC can support."
        DEFVAL	{ default }
        ::= { wfFddiMacExtEntry 7 }

    wfFddiMacTvxCapability OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(5222400)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the maximum time value (in nanoseconds) of 'wfFddiMacTvxValue'
                that this MAC can support."
        DEFVAL	{ default }
        ::= { wfFddiMacExtEntry 8 }

    wfFddiMacAvailablePaths OBJECT-TYPE
        SYNTAX	INTEGER {
    		    p(1),
    		    s(2),
    		    l(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the paths available for this MAC.

                   The value is a sum. This value initially takes the value 0, then
                   for each type of PATH that this MAC has available, 2 raised to a
                   power is added to the sum. The powers are according to the
                   following table:

                   Path        Power
                   ----        -----
                   Primary       0
                   Secondary     1
                   Local         2"
        DEFVAL	{ p }
        ::= { wfFddiMacExtEntry 9 }

    wfFddiMacCurrentPath OBJECT-TYPE
        SYNTAX	INTEGER {
    		    isolated(1),
    		    local(2),
    		    secondary(3),
    		    primary(4),
    		    concatenated(5),
    		    thru(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the Path into which this MAC is currently inserted."
        DEFVAL	{ isolated }
        ::= { wfFddiMacExtEntry 10 }

    wfFddiMacDupAddrTest OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    pass(2),
    		    fail(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Duplicate Address test flag."
        DEFVAL	{ none }
        ::= { wfFddiMacExtEntry 11 }

    wfFddiMacRequestedPaths OBJECT-TYPE
        SYNTAX	INTEGER {
    		    local(1),
    		    salt(2),
    		    palt(4),
    		    calt(8),
    		    spref(16),
    		    ppref(32),
    		    cpref(64),
    		    thru(128)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Contains a list of Permitted Paths which specifies the Path(s)
                into which the MAC may be inserted.

                The value is a sum which represents the individual paths that
                are desired. This value initially takes the value zero, then
                for each type of PATH that this node is, 2 raised to a power is
                added to the sum. The powers are according to the following table:

                                       Path  Power
                                       ----  -----
                                      local    0
                        secondary-alternate    1
                          primary-alternate    2
                     concatenated-alternate    3
                        secondary-preferred    4
                          primary-preferred    5
                     concatenated-preferred    6
                                       thru    7"
        DEFVAL	{ palt }
        ::= { wfFddiMacExtEntry 12 }

    wfFddiMacCopiedCts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A count that should as closely as possible match the number of
                frames addressed to (A bit set) and successfully copied into
                the station's receive buffers (C bit set) by this MAC."
        ::= { wfFddiMacExtEntry 13 }

    wfFddiMacFrameErrorThreshold OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the Mac Frame Error Threshold for determining when
                a MAC Frame Error Condition report will be generated (via an SRF
                Frame). If Mac Frame Error Ratio is greater than Mac Frame Error
                Threshold then the Mac Frame Error Condition exists. This Mac Frame
                Error Ratio is calculated periodically based on the attributes
                wfFddiMacErrorCts and wfFddiMacLostCts. A low value of Mac Frame
                Error Threshold will generate more frequent Mac Frame Error
                conditions if the wfFddiMacErrorCts and wfFddiMacLostCts counters
                are periodically increased. Therefore the user should set the Mac
                Frame Error Threshold (1..65535) in accordance with the volatility
                of the ring."
        DEFVAL	{ 1 }
        ::= { wfFddiMacExtEntry 14 }

    wfFddiMacFrameErrorRatio OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This variable is the value of the ratio:

                ((delta wfFddiMacLostCts + delta wfFddiMacErrorCts) /
                 (delta wfFddiMacFrameCts + delta wfFddiMacLostCts))
                  2**16)"
        ::= { wfFddiMacExtEntry 15 }

    wfFddiMacHardwarePresent OBJECT-TYPE
        SYNTAX	INTEGER {
    		    notpresent(1),
    		    present(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This variable indicates the presence of underlying hardware
                support for this MAC object."
        DEFVAL	{ present }
        ::= { wfFddiMacExtEntry 16 }

    wfFddiMacMaUnitDataEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A configurable attribute that specifies whether the MAC will be
                available for the transmission and reception of Protocol Data Units
                (PDUs). If enabled, the interface to the MAC entity will be available
                for the exchange of PDUs between the MAC and the local LLC entity
                when the ring becomes operational (i.e., LLC interface is established).
                Setting this attribute has no effect on the transfer and reception of
                MAC or SMT frames."
        DEFVAL	{ enable }
        ::= { wfFddiMacExtEntry 17 }

    wfFddiMacTvxExpiredCts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A count that should as closely as possible match the number
                of times that TVX has expired."
        ::= { wfFddiMacExtEntry 18 }

    wfFddiMacLateCts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A count that should as closely as possible match the number of
                TRT expirations since this MAC was reset or a token was received."
        ::= { wfFddiMacExtEntry 19 }

    wfFddiMacRingOpCts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of the number of times the ring has entered the
                'Ring Operational' state from the `Ring Not Operational' state.
                This count is updated when a SM_MA_STATUS Indication of a change
                in the Ring_Operational state occurs. Because of implementatio
                considerations, this count may be less than the actual RingOp_Ct.
                It is not a requirement that this count be exact."
        ::= { wfFddiMacExtEntry 20 }

    wfFddiMacDuplicateTokenCts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of the number of times a Duplicate Token has been detected."
        ::= { wfFddiMacExtEntry 21 }

    wfFddiPathTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFddiPathEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A list of PATH entries."
        ::= { wfFddiPathGroup 2 }

    wfFddiPathEntry OBJECT-TYPE
        SYNTAX	WfFddiPathEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A PATH entry containing information common to a given PATH."
        INDEX	{ wfFddiPathSlot,
    		  wfFddiPathNode }
        ::= { wfFddiPathTable 1 }

    WfFddiPathEntry ::= SEQUENCE {
    	    wfFddiPathSlot
    		INTEGER,
    	    wfFddiPathNode
    		INTEGER,
    	    wfFddiPathCct
    		INTEGER,
    	    wfFddiPathConfiguration
    		OCTET STRING
        }

    wfFddiPathSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number associated with a PATH entity."
        ::= { wfFddiPathEntry 1 }

    wfFddiPathNode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Node/connector number associated with a PATH entity."
        ::= { wfFddiPathEntry 2 }

    wfFddiPathCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit number associated with a PATH entity."
        ::= { wfFddiPathEntry 3 }

    wfFddiPathConfiguration OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A circular list of resources on the path where each entry
                in the list consists of a resource type identifier (MAC
                or PORT), an index, and its CurrentPath. If the path is
                available to a resource in the node (as indicated by
                'wfFddiPortAvailablePaths' or 'wfFddiMacAvailablePaths')
                then that resource shall be included in the list. If the
                path is not available to a resource or the underlying
                hardware is not present, then that resource shall not be
                included in the list. Resources currently inserted in the
                Path shall appear in the list once in token order. Resources
                not currently inserted in the Path shall appear once in any
                position supported by the implementation."
        ::= { wfFddiPathEntry 4 }

    wfFddiPathExtTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFddiPathExtEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A list of PATH extension entries."
        ::= { wfFddiPathGroup 3 }

    wfFddiPathExtEntry OBJECT-TYPE
        SYNTAX	WfFddiPathExtEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A PATH entry containing information common to a given PATH."
        INDEX	{ wfFddiPathExtSlot,
    		  wfFddiPathExtNode }
        ::= { wfFddiPathExtTable 1 }

    WfFddiPathExtEntry ::= SEQUENCE {
    	    wfFddiPathDelete
    		INTEGER,
    	    wfFddiPathExtSlot
    		INTEGER,
    	    wfFddiPathExtNode
    		INTEGER,
    	    wfFddiPathExtCct
    		INTEGER,
    	    wfFddiPathTvxLowerBound
    		INTEGER,
    	    wfFddiPathTMaxLowerBound
    		INTEGER,
    	    wfFddiPathMaxTReq
    		INTEGER
        }

    wfFddiPathDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/delete parameter, default = create."
        DEFVAL	{ created }
        ::= { wfFddiPathExtEntry 1 }

    wfFddiPathExtSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number associated with a Path entity."
        ::= { wfFddiPathExtEntry 2 }

    wfFddiPathExtNode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Node/connector number associated with a Path entity."
        ::= { wfFddiPathExtEntry 3 }

    wfFddiPathExtCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit number associated with a Path entity."
        ::= { wfFddiPathExtEntry 4 }

    wfFddiPathTvxLowerBound OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(2500000)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the minimum time value of 'wfFddiMacTvxValue'
                that shall be used  by any MAC that is configured in this
                path. The operational value of 'wfFddiMacTvxValue' is
                managed by setting this variable. This variable has the
                time value range of:
                     0 < wfFddiPathTvxLowerBound < wfFddiPathMaxTReq
                Changes to this attribute shall either satisfy the time
                value relationship:
                     wfFddiPathTvxLowerBound <= wfFddiMacTvxCapability
                of each of the MACS currently on the path, or be
                considered out of range. Time specified in nanoseconds.
                The initial value of wfFddiPathTvxLowerBound shall be
                2.500 msec."
        DEFVAL	{ default }
        ::= { wfFddiPathExtEntry 5 }

    wfFddiPathTMaxLowerBound OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(165000000)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the minimum time value of 'wfFddiMACTMax' that
                shall be used by any MAC that is configured in this path.
                The operational value of 'wfFddiMacTMax' is managed by setting
                this attribute. This attribute has the time value range of:
                     wfFddiPathMaxTReq <= wfFddiPathTMaxLowerBound
                and an absolute time value range of
                     10msec <= wfFddiPathTMaxLowerBound.
                Changes to this aattribute shall either satisfy the time
                value relationship:
                     wfFddiPathTMaxLowerBound < wfFddiMacTMaxCapability
                of each of the MACs currently on the path, or be
                considered out of range. Time specified in nanoseconds.
                The initial value of wfFddiPathTMaxLowerBound shall be
                165 msec."
        DEFVAL	{ default }
        ::= { wfFddiPathExtEntry 6 }

    wfFddiPathMaxTReq OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This variable is the T_Req_value passed to the MAC. Without
                having detected a duplicate, the time value of this variable
                shall assume the maximum supported time value which is less
                than or equal to the time value of wfFDDIMacTReq. When a MAC
                has an address detected as a duplicate, it may use a time
                value for this variable greater than the time value of
                wfFddiPathTMaxLowerBound. A station shall cause claim when the
                new T_Req may cause the value of T_Neg to change in the claim
                process (i.e., time value new T_Req < T_Neg, or old T_Req =
                T_Neg). This value is encoded in nanoseconds. The name of
                this attribute in the IETF MIB is FddiMibMACTReq."
        ::= { wfFddiPathExtEntry 7 }

    wfFddiPortTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFddiPortEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A list of PORT entries."
        ::= { wfFddiPortGroup 2 }

    wfFddiPortEntry OBJECT-TYPE
        SYNTAX	WfFddiPortEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A PORT entry containing information common to a given PORT."
        INDEX	{ wfFddiPortSlot,
    		  wfFddiPortNode,
    		  wfFddiPortIndex }
        ::= { wfFddiPortTable 1 }

    WfFddiPortEntry ::= SEQUENCE {
    	    wfFddiPortSlot
    		INTEGER,
    	    wfFddiPortNode
    		INTEGER,
    	    wfFddiPortCct
    		INTEGER,
    	    wfFddiPortIndex
    		INTEGER,
    	    wfFddiPortPcType
    		INTEGER,
    	    wfFddiPortPcNeighbor
    		INTEGER,
    	    wfFddiPortPcmState
    		INTEGER,
    	    wfFddiPortRequestedPaths
    		INTEGER,
    	    wfFddiPortBsFlag
    		INTEGER,
    	    wfFddiPortLerFlag
    		INTEGER,
    	    wfFddiPortConnectState
    		INTEGER,
    	    wfFddiPortMacIndicated
    		INTEGER
        }

    wfFddiPortSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number associated with a PORT entity."
        ::= { wfFddiPortEntry 1 }

    wfFddiPortNode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Node/connector number associated with a PORT entity."
        ::= { wfFddiPortEntry 2 }

    wfFddiPortCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit number associated with a PORT entity."
        ::= { wfFddiPortEntry 3 }

    wfFddiPortIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A unique value for each PORT associated with each
                slot/connector pair."
        ::= { wfFddiPortEntry 4 }

    wfFddiPortPcType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    a(1),
    		    b(2),
    		    s(3),
    		    m(4),
    		    none(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The physical connector type of the local PORT."
        ::= { wfFddiPortEntry 5 }

    wfFddiPortPcNeighbor OBJECT-TYPE
        SYNTAX	INTEGER {
    		    a(1),
    		    b(2),
    		    s(3),
    		    m(4),
    		    unknown(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The physical connector type of the remote PORT."
        ::= { wfFddiPortEntry 6 }

    wfFddiPortPcmState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    off(1),
    		    break(2),
    		    trace(3),
    		    connect(4),
    		    next(5),
    		    signal(6),
    		    join(7),
    		    verify(8),
    		    active(9),
    		    maint(10)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "State of Physical State Machine."
        ::= { wfFddiPortEntry 7 }

    wfFddiPortRequestedPaths OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This variable is a list of permitted paths where each list
                element defines the Port's permitted paths. The first octet
                corresponds to 'none', the second octet to 'tree' and the
                third octet to 'peer'."
        ::= { wfFddiPortEntry 8 }

    wfFddiPortBsFlag OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Break State Flag - A PCM flag used to indicate that the PCM
                state Machine is not leaving the Break State in an expected
                time interval & a problem is suspected."
        ::= { wfFddiPortEntry 9 }

    wfFddiPortLerFlag OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The condition becomes active when the value of
                'wfFddiPortLerEstimate' is <= 'wfFddiPortLerAlarm'. This will
                 be reported with Status Report Frames (SRF)."
        ::= { wfFddiPortEntry 10 }

    wfFddiPortConnectState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    disabled(1),
    		    connecting(2),
    		    standby(3),
    		    active(4),
    		    unknown(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A variable from PCM to other management entities indicating
                the state of the connection."
        ::= { wfFddiPortEntry 11 }

    wfFddiPortMacIndicated OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ff(1),
    		    ft(2),
    		    tf(3),
    		    tt(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The indications (T_Val(9), R_Val(9)) in PC-Signalling, of the
                intent to place a MAC in the output token path to a PORT."
        ::= { wfFddiPortEntry 12 }

    wfFddiPortExtTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFddiPortExtEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A list of PORT extension entries."
        ::= { wfFddiPortGroup 3 }

    wfFddiPortExtEntry OBJECT-TYPE
        SYNTAX	WfFddiPortExtEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A PORT entry containing information common to a given PORT."
        INDEX	{ wfFddiPortExtSlot,
    		  wfFddiPortExtNode,
    		  wfFddiPortExtIndex }
        ::= { wfFddiPortExtTable 1 }

    WfFddiPortExtEntry ::= SEQUENCE {
    	    wfFddiPortDelete
    		INTEGER,
    	    wfFddiPortExtSlot
    		INTEGER,
    	    wfFddiPortExtNode
    		INTEGER,
    	    wfFddiPortExtCct
    		INTEGER,
    	    wfFddiPortExtIndex
    		INTEGER,
    	    wfFddiPortConnectionPolicies
    		INTEGER,
    	    wfFddiPortCurrentPath
    		INTEGER,
    	    wfFddiPortMacPlacement
    		INTEGER,
    	    wfFddiPortAvailablePaths
    		INTEGER,
    	    wfFddiPortPmdClass
    		INTEGER,
    	    wfFddiPortConnectionCapabilities
    		INTEGER,
    	    wfFddiPortEbErrorCts
    		INTEGER,
    	    wfFddiPortLctFailCts
    		Counter,
    	    wfFddiPortLerEstimate
    		INTEGER,
    	    wfFddiPortLemRejectCts
    		Counter,
    	    wfFddiPortLemCts
    		Counter,
    	    wfFddiPortLerCutOff
    		INTEGER,
    	    wfFddiPortLerAlarm
    		INTEGER,
    	    wfFddiPortPcWithhold
    		INTEGER,
    	    wfFddiPortHardwarePresent
    		INTEGER
        }

    wfFddiPortDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/delete parameter, default = create."
        DEFVAL	{ created }
        ::= { wfFddiPortExtEntry 1 }

    wfFddiPortExtSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number associated with a Port entity."
        ::= { wfFddiPortExtEntry 2 }

    wfFddiPortExtNode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Node/connector number associated with a Port entity."
        ::= { wfFddiPortExtEntry 3 }

    wfFddiPortExtCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit number associated with a Port entity."
        ::= { wfFddiPortExtEntry 4 }

    wfFddiPortExtIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A unique value for each PORT associated with each
                slot/connector pair."
        ::= { wfFddiPortExtEntry 5 }

    wfFddiPortConnectionPolicies OBJECT-TYPE
        SYNTAX	INTEGER {
    		    maclct(1),
    		    macloop(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A value representing the PORT's connection policies desired in
                the node. The value of 'pc-mac-lct' (i.e. PCM MAC LinkConfidence
                Test) is a term used in the PC_MAC_LCT Flag. The value of
                'pc-mac-loop' is a term used in the PC_MAC_LOOP flag.

                The value is a sum. This value initially takes the value zero,
                then for each PORT policy, 2 raised to a power is added to the
                sum. The powers are according to the following table:

                             Policy  Power
                             ------  -----
                         pc-mac-lct    0
                        pc-mac-loop    1"
        DEFVAL	{ maclct }
        ::= { wfFddiPortExtEntry 6 }

    wfFddiPortCurrentPath OBJECT-TYPE
        SYNTAX	INTEGER {
    		    isolated(1),
    		    local(2),
    		    secondary(3),
    		    primary(4),
    		    concatenated(5),
    		    thru(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the Path(s) into which this PORT is currently inserted."
        DEFVAL	{ isolated }
        ::= { wfFddiPortExtEntry 7 }

    wfFddiPortMacPlacement OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the MAC, if any, whose transmit path exits the station
                via this PORT. The value shall be zero if there is no MAC associated
                with the PORT."
        ::= { wfFddiPortExtEntry 8 }

    wfFddiPortAvailablePaths OBJECT-TYPE
        SYNTAX	INTEGER {
    		    p(1),
    		    s(2),
    		    l(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the Paths which are available to this Port. In the
                absence of faults, the A & B ports will always have both the
                Primary & Secondary paths available.

                The value is a sum. This value initially takes the value 0,
                then for each type of PATH that this port has available, 2
                raised to a power is added to the sum. The powers are according
                to the following table:

                      Path           Power
                      ----           -----
                     Primary           0
                   Secondary           1
                       Local           2"
        ::= { wfFddiPortExtEntry 9 }

    wfFddiPortPmdClass OBJECT-TYPE
        SYNTAX	INTEGER {
    		    multimode(1),
    		    mode1(2),
    		    mode2(3),
    		    sonet(4),
    		    fiber(5),
    		    twistedpair(6),
    		    unknown(7),
    		    unspecified(8)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the Path(s) into which this PORT is currently inserted."
        ::= { wfFddiPortExtEntry 10 }

    wfFddiPortConnectionCapabilities OBJECT-TYPE
        SYNTAX	INTEGER {
    		    maclct(1),
    		    macloop(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A value that indicates the connection capabilities of the port.
                The 'pc-mac-lct' bit indicates that the station has the capability
                of setting the PC_MAC_LCT Flag. The 'pc-mac-loop' bit indicates
                that the station has the capability of setting the PC_MAC_LOOP Flag.

                The value is a sum. This value initially takes the value zero,
                then for each PORT policy, 2 raised to a power is added to the
                sum. The powers are according to the following table:

                         Capability  Power
                         ----------  -----
                         pc-mac-lct    0
                        pc-mac-loop    1"
        DEFVAL	{ maclct }
        ::= { wfFddiPortExtEntry 11 }

    wfFddiPortEbErrorCts OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of the number of elasticity buffer errors for a
                particular PHY. The elasticity buffer is used to account for
                clock tolerances between stations"
        ::= { wfFddiPortExtEntry 12 }

    wfFddiPortLctFailCts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The count of the consecutive times the link confidence test
                (LCT) has failed during Connection Management."
        ::= { wfFddiPortExtEntry 13 }

    wfFddiPortLerEstimate OBJECT-TYPE
        SYNTAX	INTEGER(4..15)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A long term average of the link error rate. It ranges from
                10**-4 to 10**-15 and is reported as the absolute value of the
                base 10 logarithm."
        DEFVAL	{ 15 }
        ::= { wfFddiPortExtEntry 14 }

    wfFddiPortLemRejectCts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A link error monitoring count of the times that a link has
                been rejected."
        ::= { wfFddiPortExtEntry 15 }

    wfFddiPortLemCts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The aggregate link error moniitor error count, set to 0 only
                on station initialization."
        ::= { wfFddiPortExtEntry 16 }

    wfFddiPortLerCutOff OBJECT-TYPE
        SYNTAX	INTEGER(4..15)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The link err rate estimate at which a link connection will be
                broken. It ranges from 10**-4 to 10**-15 and is reported as the
                absolute value of the base 10 logarithm."
        DEFVAL	{ 7 }
        ::= { wfFddiPortExtEntry 17 }

    wfFddiPortLerAlarm OBJECT-TYPE
        SYNTAX	INTEGER(4..15)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The link err rate estimate at which a link connection will
                generate an alarm. It ranges from 10**-4 to 10**-15 and is
                reported as the absolute value of the base 10 logarithm of
                the estimate."
        DEFVAL	{ 8 }
        ::= { wfFddiPortExtEntry 18 }

    wfFddiPortPcWithhold OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    mtom(2),
    		    otherincompatible(3),
    		    pathnotavailable(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A variable from PCM to other management entities containing
                the reason for withholding a connection."
        DEFVAL	{ none }
        ::= { wfFddiPortExtEntry 19 }

    wfFddiPortHardwarePresent OBJECT-TYPE
        SYNTAX	INTEGER {
    		    notpresent(1),
    		    present(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This variable indicates the presence of underlying hardware
                support for this port object."
        DEFVAL	{ present }
        ::= { wfFddiPortExtEntry 20 }

    wfFddiPortActionTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFddiPortActionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A list of Port Action entries."
        ::= { wfFddiPortGroup 4 }

    wfFddiPortActionEntry OBJECT-TYPE
        SYNTAX	WfFddiPortActionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A PORT entry containing actions common to a given PORT."
        INDEX	{ wfFddiPortActionSlot,
    		  wfFddiPortActionNode,
    		  wfFddiPortActionIndex }
        ::= { wfFddiPortActionTable 1 }

    WfFddiPortActionEntry ::= SEQUENCE {
    	    wfFddiPortActionDelete
    		INTEGER,
    	    wfFddiPortActionSlot
    		INTEGER,
    	    wfFddiPortActionNode
    		INTEGER,
    	    wfFddiPortActionCct
    		INTEGER,
    	    wfFddiPortActionIndex
    		INTEGER,
    	    wfFddiPortAction
    		INTEGER
        }

    wfFddiPortActionDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/delete parameter, default = create."
        DEFVAL	{ created }
        ::= { wfFddiPortActionEntry 1 }

    wfFddiPortActionSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number associated with a PORT action entity."
        ::= { wfFddiPortActionEntry 2 }

    wfFddiPortActionNode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Node/connector number associated with a PORT action entity."
        ::= { wfFddiPortActionEntry 3 }

    wfFddiPortActionCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit number associated with a PORT action entity."
        ::= { wfFddiPortActionEntry 4 }

    wfFddiPortActionIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A unique value for each PORT associated with each
                slot/connector pair."
        ::= { wfFddiPortActionEntry 5 }

    wfFddiPortAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    maint(2),
    		    enable(3),
    		    disable(4),
    		    start(5),
    		    stop(6)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Causes a control signal to be generated with a control_action
                of 'Signal' and the 'variable' parameter set with the
                appropriate value (i.e. PC_Maint, PC_Enable, PC_Disable, PC_Start,
                or PC_Stop). These signals are used to initiate a state change
                within Connection Management"
        ::= { wfFddiPortActionEntry 6 }

    END  -- Wellfleet-FDDI-MIB
-- @(#)WSCCS c/mibs-fr.mib 1.1 8/30/95
Wellfleet-FR-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:41:07 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfFrameRelayGroup
        FROM Wellfleet-COMMON-MIB;


    wfFrDlcmiTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFrDlcmiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Parameters for the Data Link Connection Management Interface"
        ::= { wfFrameRelayGroup 1 }

    wfFrDlcmiEntry OBJECT-TYPE
        SYNTAX	WfFrDlcmiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The parameters for a particular Data Link Connection Management Interface"
        INDEX	{ wfFr1DlcmiCircuit }
        ::= { wfFrDlcmiTable 1 }

    WfFrDlcmiEntry ::= SEQUENCE {
    	    wfFr1DlcmiDelete
    		INTEGER,
    	    wfFr1DlcmiDisable
    		INTEGER,
    	    wfFr1DlcmiState
    		INTEGER,
    	    wfFr1DlcmiCircuit
    		INTEGER,
    	    wfFr1DlcmiManagementType
    		INTEGER,
    	    wfFr1DlcmiStatus
    		INTEGER,
    	    wfFr1DlcmiAddress
    		INTEGER,
    	    wfFr1DlcmiAddressLen
    		INTEGER,
    	    wfFr1DlcmiPollingInterval
    		INTEGER,
    	    wfFr1DlcmiFullEnquiryInterval
    		INTEGER,
    	    wfFr1DlcmiErrorThreshold
    		INTEGER,
    	    wfFr1DlcmiMonitoredEvents
    		INTEGER,
    	    wfFr1DlcmiMaxSupportedVCs
    		INTEGER,
    	    wfFr1DlcmiMulticast
    		INTEGER,
    	    wfFr1DlcmiSeqCount
    		INTEGER,
    	    wfFr1DlcmiLastReceived
    		INTEGER,
    	    wfFr1DlcmiPassiveSeqCount
    		INTEGER,
    	    wfFr1DlcmiPassiveReceived
    		INTEGER,
    	    wfFr1DlcmiPolls
    		INTEGER,
    	    wfFr1DlcmiAlarmTimer
    		INTEGER,
    	    wfFr1ErrType
    		INTEGER,
    	    wfFr1ErrData
    		OCTET STRING,
    	    wfFr1ErrTime
    		TimeTicks,
    	    wfFr1ErrDiscards
    		Counter,
    	    wfFr1ErrDrops
    		Counter
        }

    wfFr1DlcmiDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to delete this frame relay interface"
        DEFVAL	{ created }
        ::= { wfFrDlcmiEntry 1 }

    wfFr1DlcmiDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates when a dlcmi entry is to be enabled or disabled."
        DEFVAL	{ enabled }
        ::= { wfFrDlcmiEntry 2 }

    wfFr1DlcmiState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of Frame Relay. The not present state is not actually
                valid except when the record is first added.  It is included for
                consistency."
        DEFVAL	{ notpresent }
        ::= { wfFrDlcmiEntry 3 }

    wfFr1DlcmiCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier.  The circuit number of this entry"
        ::= { wfFrDlcmiEntry 4 }

    wfFr1DlcmiManagementType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    lmi(2),
    		    t1617d(3),
    		    t1617b(4),
    		    annexa(5),
    		    lmiswitch(6),
    		    annexdswitch(7),
    		    annexaswitch(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This variable indicates which Data Link Connection Management
                scheme is active (and by implication, what DLCI it uses)."
        DEFVAL	{ t1617d }
        ::= { wfFrDlcmiEntry 5 }

    wfFr1DlcmiStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    start(1),
    		    running(2),
    		    fault(3),
    		    recovered(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the status of the interface.
                FR1_STATUS_START is the state during rebooting or initial
                 start of circuit
                FR1_STATUS_RUNNING1 is the sate after the circuit is up (either LMI
                 successful or there is no DLCMI and the system just comes up).
                FR1_STATUS_FAULT is a transient state indicating that errors have
                 caused the circuit to be disabled until DLCMI recovery.
                FR1_STATUS_RECOVERED indicates that an the system has been in the
                 FR_STATUS_FAULT mode before, but has since recovered."
        DEFVAL	{ start }
        ::= { wfFrDlcmiEntry 6 }

    wfFr1DlcmiAddress OBJECT-TYPE
        SYNTAX	INTEGER {
    		    q921(1),
    		    q922march90(2),
    		    q922november90(3),
    		    q922(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This states which address format is in use on the FR interface.
                The default is Q922"
        DEFVAL	{ q922 }
        ::= { wfFrDlcmiEntry 7 }

    wfFr1DlcmiAddressLen OBJECT-TYPE
        SYNTAX	INTEGER {
    		    twobyte(2),
    		    threebyte(3),
    		    fourbyte(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This variable states the address length in octets. In the case
                of Q922 format, the length indicates the entire length of the
                address includeding the control portion."
        DEFVAL	{ twobyte }
        ::= { wfFrDlcmiEntry 8 }

    wfFr1DlcmiPollingInterval OBJECT-TYPE
        SYNTAX	INTEGER(5..30)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of seconds between successive status enquiry messages"
        DEFVAL	{ 10 }
        ::= { wfFrDlcmiEntry 9 }

    wfFr1DlcmiFullEnquiryInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of status enquiry intervals that pass before issuance
                of a full status enquiry message."
        DEFVAL	{ 6 }
        ::= { wfFrDlcmiEntry 10 }

    wfFr1DlcmiErrorThreshold OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum number of unanswered Status Enquiries the
                equipment shall accept before declaring the interface down."
        DEFVAL	{ 3 }
        ::= { wfFrDlcmiEntry 11 }

    wfFr1DlcmiMonitoredEvents OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the number of status polling intervals over
                which the error threshold is counted.  For example, if
                within 'MonitoredEvents' number of events the station
                receives 'ErrorThreshold' number of errors, the
                interface is marked as down."
        DEFVAL	{ 4 }
        ::= { wfFrDlcmiEntry 12 }

    wfFr1DlcmiMaxSupportedVCs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of Virtual Circuits allowed for
                this interface.  Usually dictated by the Frame Relay
                network. The system sets this initially."
        ::= { wfFrDlcmiEntry 13 }

    wfFr1DlcmiMulticast OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This indicates whether the frame relay provider offers a multicast"
        DEFVAL	{ disabled }
        ::= { wfFrDlcmiEntry 14 }

    wfFr1DlcmiSeqCount OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This station's sequence counter. It represents the next
                value to send."
        DEFVAL	{ 1 }
        ::= { wfFrDlcmiEntry 15 }

    wfFr1DlcmiLastReceived OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The sequence number just received from the switch."
        DEFVAL	{ 1 }
        ::= { wfFrDlcmiEntry 16 }

    wfFr1DlcmiPassiveSeqCount OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This station's sequence counter for answering status enquiry."
        DEFVAL	{ 1 }
        ::= { wfFrDlcmiEntry 17 }

    wfFr1DlcmiPassiveReceived OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The sequence number just received from the enquring station."
        DEFVAL	{ 1 }
        ::= { wfFrDlcmiEntry 18 }

    wfFr1DlcmiPolls OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the counter of where we are in the polling cycle."
        ::= { wfFrDlcmiEntry 19 }

    wfFr1DlcmiAlarmTimer OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is a counter of 1/2 second timeouts. When it reaches
                2 x the polling interval, an enquiry message is sent."
        ::= { wfFrDlcmiEntry 20 }

    wfFr1ErrType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unknown(1),
    		    short(2),
    		    long(3),
    		    illegaldlci(4),
    		    unknowndlci(5),
    		    protoerr(6),
    		    unknownie(7),
    		    sequenceerr(8),
    		    unknownrpt(9),
    		    reset(10),
    		    cntrl(11)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicate the type of the last specific monitored error."
        ::= { wfFrDlcmiEntry 21 }

    wfFr1ErrData OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Contains as much of the error packet as possible."
        ::= { wfFrDlcmiEntry 22 }

    wfFr1ErrTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The time the last error occurred."
        ::= { wfFrDlcmiEntry 23 }

    wfFr1ErrDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of inbound frames dropped because of format or other
                errors or because the VC was not known."
        ::= { wfFrDlcmiEntry 24 }

    wfFr1ErrDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of outbound frames dropped. Usually this is due the
                specified DLCI being unknown or a broadcast packet is too long"
        ::= { wfFrDlcmiEntry 25 }

    wfFrCircuitTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFrCircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Frame Relay Circuit table gives information about a virtual circuits."
        ::= { wfFrameRelayGroup 2 }

    wfFrCircuitEntry OBJECT-TYPE
        SYNTAX	WfFrCircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Frame Relay Circuit table."
        INDEX	{ wfFr1CircuitNumber,
    		  wfFr1CircuitDlci }
        ::= { wfFrCircuitTable 1 }

    WfFrCircuitEntry ::= SEQUENCE {
    	    wfFr1CircuitDelete
    		INTEGER,
    	    wfFr1CircuitNumber
    		INTEGER,
    	    wfFr1CircuitDlci
    		INTEGER,
    	    wfFr1CircuitState
    		INTEGER,
    	    wfFr1CircuitStateSet
    		INTEGER,
    	    wfFr1CircuitReceivedFECNs
    		Counter,
    	    wfFr1CircuitReceivedBECNs
    		Counter,
    	    wfFr1CircuitSentFrames
    		Counter,
    	    wfFr1CircuitSentOctets
    		Counter,
    	    wfFr1CircuitReceivedFrames
    		Counter,
    	    wfFr1CircuitReceivedOctets
    		Counter,
    	    wfFr1CircuitCreationTime
    		TimeTicks,
    	    wfFr1CircuitLastTimeChange
    		TimeTicks,
    	    wfFr1CircuitCommittedBurst
    		INTEGER,
    	    wfFr1CircuitExcessBurst
    		INTEGER,
    	    wfFr1CircuitThroughput
    		INTEGER,
    	    wfFr1CircuitMulticast
    		INTEGER,
    	    wfFr1CircuitDiscards
    		Counter,
    	    wfFr1CircuitDrops
    		Counter,
    	    wfFr1CircuitSubCct
    		INTEGER,
    	    wfFr1CircuitMode
    		INTEGER
        }

    wfFr1CircuitDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2),
    		    system(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to delete this frame relay interface."
        DEFVAL	{ created }
        ::= { wfFrCircuitEntry 1 }

    wfFr1CircuitNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier.  The circuit number of this interface."
        ::= { wfFrCircuitEntry 2 }

    wfFr1CircuitDlci OBJECT-TYPE
        SYNTAX	INTEGER {
    		    twobyteminimum(16),
    		    twobytemaximum(1007),
    		    threebyteminimum(1024),
    		    threebytemaximum(64511),
    		    fourbyteminimum(131072),
    		    fourbytemaximum(8257535)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier.  This indicates which virtual circuit."
        ::= { wfFrCircuitEntry 3 }

    wfFr1CircuitState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    invalid(1),
    		    active(2),
    		    inactive(3),
    		    xoff(4),
    		    control(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the state of the particular virtual circuit."
        DEFVAL	{ invalid }
        ::= { wfFrCircuitEntry 4 }

    wfFr1CircuitStateSet OBJECT-TYPE
        SYNTAX	INTEGER {
    		    invalid(1),
    		    active(2),
    		    inactive(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "User access for setting the state of a virtual circuit"
        DEFVAL	{ invalid }
        ::= { wfFrCircuitEntry 5 }

    wfFr1CircuitReceivedFECNs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received indicating forward congestion."
        ::= { wfFrCircuitEntry 6 }

    wfFr1CircuitReceivedBECNs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received indicating backward congestion."
        ::= { wfFrCircuitEntry 7 }

    wfFr1CircuitSentFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of frames sent from this virtual circuit."
        ::= { wfFrCircuitEntry 8 }

    wfFr1CircuitSentOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of octets sent from this virtual circuit."
        ::= { wfFrCircuitEntry 9 }

    wfFr1CircuitReceivedFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of frames received from this virtual circuit."
        ::= { wfFrCircuitEntry 10 }

    wfFr1CircuitReceivedOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of octets received from this virtual circuit."
        ::= { wfFrCircuitEntry 11 }

    wfFr1CircuitCreationTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of sysUpTime when the vc was created."
        ::= { wfFrCircuitEntry 12 }

    wfFr1CircuitLastTimeChange OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of sysUpTime when last there was a change in vc state."
        ::= { wfFrCircuitEntry 13 }

    wfFr1CircuitCommittedBurst OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the maximum amount of data, in bits, that the network
                agrees to transfer under normal conditions, during the measurement
                interval.  Wellfleet does not presently support this."
        ::= { wfFrCircuitEntry 14 }

    wfFr1CircuitExcessBurst OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates teh maximum amount of uncommitted data bits that the network
                will attempt to deliver over the measurement interval.  Wellfleet
                does not presently support this."
        ::= { wfFrCircuitEntry 15 }

    wfFr1CircuitThroughput OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the average number of 'Frame Relay Information Field'
                bits transferred per second across a user network interface in one
                direction, measured over the measurement interval.  Wellfleet
                does not presently support this."
        ::= { wfFrCircuitEntry 16 }

    wfFr1CircuitMulticast OBJECT-TYPE
        SYNTAX	INTEGER {
    		    multicast(1),
    		    unicast(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this DLCI is used for multicast or single destination."
        DEFVAL	{ unicast }
        ::= { wfFrCircuitEntry 17 }

    wfFr1CircuitDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of inbound frames discarded because of format errors,
                because the VC is inactive or because the protocol was not registered
                for this circuit."
        ::= { wfFrCircuitEntry 18 }

    wfFr1CircuitDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates how many outbound frames were dropped. Usually these are
                dropped because the VC is not active."
        ::= { wfFrCircuitEntry 19 }

    wfFr1CircuitSubCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Circuit number to use for this VC when configured in hybrid
                (for bridging) or direct access (VC as a circuit) mode."
        ::= { wfFrCircuitEntry 20 }

    wfFr1CircuitMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    group(1),
    		    hybrid(2),
    		    direct(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The mode of the given VC.
                GROUP - treats the VC as one of many vc's on a circuit.
                HYBRID - treats the VC as one of many vc's on a circuit for
                  protocol traffic, but as a separate circuit for bridging.
                DIRECT - treats the VC as a separate circuit for all applications."
        DEFVAL	{ group }
        ::= { wfFrCircuitEntry 21 }

    END  -- Wellfleet-FR-MIB
-- @(#)WSCCS a/mibs-fr2.mib 1.2 9/26/95
Wellfleet-FR2-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:41:14 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfFrameRelay2Group
        FROM Wellfleet-COMMON-MIB;


    wfFrIfDlcmiTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFrIfDlcmiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Parameters for the Data Link Connection Management Interface"
        ::= { wfFrameRelay2Group 1 }

    wfFrIfDlcmiEntry OBJECT-TYPE
        SYNTAX	WfFrIfDlcmiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The parameters for a particular Data Link Connection Management Interface"
        INDEX	{ wfFrDlcmiLineNumber,
    		  wfFrDlcmiLLIndex }
        ::= { wfFrIfDlcmiTable 1 }

    WfFrIfDlcmiEntry ::= SEQUENCE {
    	    wfFrDlcmiDelete
    		INTEGER,
    	    wfFrDlcmiDisable
    		INTEGER,
    	    wfFrDlcmiLineNumber
    		INTEGER,
    	    wfFrDlcmiLLIndex
    		INTEGER,
    	    wfFrDlcmiCircuit
    		INTEGER,
    	    wfFrDlcmiManagementType
    		INTEGER,
    	    wfFrDlcmiStatus
    		INTEGER,
    	    wfFrDlcmiAddress
    		INTEGER,
    	    wfFrDlcmiAddressLen
    		INTEGER,
    	    wfFrDlcmiPollingInterval
    		INTEGER,
    	    wfFrDlcmiFullEnquiryInterval
    		INTEGER,
    	    wfFrDlcmiErrorThreshold
    		INTEGER,
    	    wfFrDlcmiMonitoredEvents
    		INTEGER,
    	    wfFrDlcmiMaxSupportedVCs
    		INTEGER,
    	    wfFrDlcmiVCsConfigured
    		INTEGER,
    	    wfFrDlcmiMulticast
    		INTEGER,
    	    wfFrDlcmiSeqCount
    		INTEGER,
    	    wfFrDlcmiLastReceived
    		INTEGER,
    	    wfFrDlcmiPassiveSeqCount
    		INTEGER,
    	    wfFrDlcmiPassiveReceived
    		INTEGER,
    	    wfFrDlcmiPolls
    		INTEGER,
    	    wfFrDlcmiCongestionDisable
    		INTEGER,
    	    wfFrDlcmiCongestionTmr
    		INTEGER,
    	    wfFrDlcmiCongestionCtr
    		INTEGER,
    	    wfFrErrType
    		INTEGER,
    	    wfFrErrData
    		OCTET STRING,
    	    wfFrErrTime
    		TimeTicks,
    	    wfFrErrDiscards
    		Counter,
    	    wfFrErrDrops
    		Counter,
    	    wfFrErrFaults
    		Counter,
    	    wfFrErrFaultTime
    		TimeTicks
        }

    wfFrDlcmiDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to delete this frame relay interface"
        DEFVAL	{ created }
        ::= { wfFrIfDlcmiEntry 1 }

    wfFrDlcmiDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates when a dlcmi entry is to be enabled or disabled."
        DEFVAL	{ enabled }
        ::= { wfFrIfDlcmiEntry 2 }

    wfFrDlcmiLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The line number on which this frame relay interface resides.
                This is the first of two instance identifiers."
        ::= { wfFrIfDlcmiEntry 3 }

    wfFrDlcmiLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Lower layer index uniquely identifies the lower layer in
                cases where the lower layer may be something other than the
                physical layer.  For example if Frame Relay is running over
                an ATM VC, the LLIndex identifies the ATM VC."
        ::= { wfFrIfDlcmiEntry 4 }

    wfFrDlcmiCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit number of this entry"
        ::= { wfFrIfDlcmiEntry 5 }

    wfFrDlcmiManagementType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    lmi(2),
    		    t1617d(3),
    		    t1617b(4),
    		    annexa(5),
    		    lmiswitch(6),
    		    annexdswitch(7),
    		    annexaswitch(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This variable indicates which Data Link Connection Management
                scheme is active (and by implication, what DLCI it uses)."
        DEFVAL	{ t1617d }
        ::= { wfFrIfDlcmiEntry 6 }

    wfFrDlcmiStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    running(1),
    		    fault(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the state of the interface. It is called status
                because this is what it was called in the rfc.
                 FR_STATUS_RUNNING is the sate after the circuit is up (either LMI
                  successful or there is no DLCMI and the system just comes up).
                 FR_STATUS_FAULT is a transient state indicating that errors have
                  caused the circuit to be disabled until DLCMI recovery.
                 FR_STATUS_INITIALIZING is a transient state indicating that
                  the interface is trying to come up.
                 FR_STATUS_NOTPRESENT indicates that the interface is not present.
                  Likely this will never be seen except upon initial
                  configuration."
        DEFVAL	{ notpresent }
        ::= { wfFrIfDlcmiEntry 7 }

    wfFrDlcmiAddress OBJECT-TYPE
        SYNTAX	INTEGER {
    		    q921(1),
    		    q922march90(2),
    		    q922november90(3),
    		    q922(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This states which address format is in use on the FR interface.
                The default is Q922"
        DEFVAL	{ q922 }
        ::= { wfFrIfDlcmiEntry 8 }

    wfFrDlcmiAddressLen OBJECT-TYPE
        SYNTAX	INTEGER {
    		    twobyte(2),
    		    threebyte(3),
    		    fourbyte(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This variable states the address length in octets. In the case
                of Q922 format, the length indicates the entire length of the
                address includeding the control portion."
        DEFVAL	{ twobyte }
        ::= { wfFrIfDlcmiEntry 9 }

    wfFrDlcmiPollingInterval OBJECT-TYPE
        SYNTAX	INTEGER(5..30)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of seconds between successive status enquiry messages"
        DEFVAL	{ 10 }
        ::= { wfFrIfDlcmiEntry 10 }

    wfFrDlcmiFullEnquiryInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of status enquiry intervals that pass before issuance
                of a full status enquiry message."
        DEFVAL	{ 6 }
        ::= { wfFrIfDlcmiEntry 11 }

    wfFrDlcmiErrorThreshold OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum number of unanswered Status Enquiries the
                equipment shall accept before declaring the interface down."
        DEFVAL	{ 3 }
        ::= { wfFrIfDlcmiEntry 12 }

    wfFrDlcmiMonitoredEvents OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the number of status polling intervals over
                which the error threshold is counted.  For example, if
                within 'MonitoredEvents' number of events the station
                receives 'ErrorThreshold' number of errors, the
                interface is marked as down."
        DEFVAL	{ 4 }
        ::= { wfFrIfDlcmiEntry 13 }

    wfFrDlcmiMaxSupportedVCs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of Virtual Circuits allowed for
                this interface.  Usually dictated by the Frame Relay
                network. The system sets this initially."
        ::= { wfFrIfDlcmiEntry 14 }

    wfFrDlcmiVCsConfigured OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of VCs that are presently configured on the
                interface."
        ::= { wfFrIfDlcmiEntry 15 }

    wfFrDlcmiMulticast OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This indicates whether the frame relay provider offers a multicast"
        DEFVAL	{ disabled }
        ::= { wfFrIfDlcmiEntry 16 }

    wfFrDlcmiSeqCount OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This station's sequence counter. It represents the next
                value to send."
        DEFVAL	{ 1 }
        ::= { wfFrIfDlcmiEntry 17 }

    wfFrDlcmiLastReceived OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The sequence number just received from the switch."
        DEFVAL	{ 1 }
        ::= { wfFrIfDlcmiEntry 18 }

    wfFrDlcmiPassiveSeqCount OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This station's sequence counter for answering status enquiry."
        DEFVAL	{ 1 }
        ::= { wfFrIfDlcmiEntry 19 }

    wfFrDlcmiPassiveReceived OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The sequence number just received from the enquring station."
        DEFVAL	{ 1 }
        ::= { wfFrIfDlcmiEntry 20 }

    wfFrDlcmiPolls OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the counter of where we are in the polling cycle."
        ::= { wfFrIfDlcmiEntry 21 }

    wfFrDlcmiCongestionDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This indicates whether the VCs should use the congestion algorithm or
                not.  Each VC may be configured to run the algorithm to override this
                setting.  Those VCs which are configured via the DLCMI interface, will
                use this setting as their default."
        DEFVAL	{ disabled }
        ::= { wfFrIfDlcmiEntry 22 }

    wfFrDlcmiCongestionTmr OBJECT-TYPE
        SYNTAX	INTEGER {
    		    half(1),
    		    one(2),
    		    oneandhalf(3),
    		    two(4),
    		    twoandhalf(5),
    		    three(6),
    		    threeandhalf(7),
    		    four(8),
    		    fourandhalf(9),
    		    five(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the time period over which congestion notifications are counted.
                It is also the period during which the VC will cease sending information
                before resuming transmission if no congestion notifications are received.
                The timer is kept in 1/2 second intervals."
        DEFVAL	{ one }
        ::= { wfFrIfDlcmiEntry 23 }

    wfFrDlcmiCongestionCtr OBJECT-TYPE
        SYNTAX	INTEGER(1..500)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This represents the number of congestion notifications, when received
                within wfFrDlcmiCongestionTmr time, will result in the VC ceasing
                transmissions."
        DEFVAL	{ 20 }
        ::= { wfFrIfDlcmiEntry 24 }

    wfFrErrType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unknown(1),
    		    short(2),
    		    long(3),
    		    illegaldlci(4),
    		    unknowndlci(5),
    		    protoerr(6),
    		    unknownie(7),
    		    sequenceerr(8),
    		    unknownrpt(9),
    		    reset(10),
    		    cntrl(11)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicate the type of the last specific monitored error."
        ::= { wfFrIfDlcmiEntry 25 }

    wfFrErrData OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Contains as much of the error packet as possible."
        ::= { wfFrIfDlcmiEntry 26 }

    wfFrErrTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The time the last error occurred."
        ::= { wfFrIfDlcmiEntry 27 }

    wfFrErrDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of inbound frames dropped because of format or other
                errors or because the VC was not known."
        ::= { wfFrIfDlcmiEntry 28 }

    wfFrErrDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of outbound frames dropped. Usually this is due the
                specified DLCI being unknown or a broadcast packet is too long"
        ::= { wfFrIfDlcmiEntry 29 }

    wfFrErrFaults OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times that the Interface has come down due
                to errors since the system started.  The value is reset when
                a restart parameter is modified."
        ::= { wfFrIfDlcmiEntry 30 }

    wfFrErrFaultTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The time at which the interface last went down."
        ::= { wfFrIfDlcmiEntry 31 }

    wfFrVCircuitTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFrVCircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Frame Relay Circuit table gives information about a virtual circuits."
        ::= { wfFrameRelay2Group 2 }

    wfFrVCircuitEntry OBJECT-TYPE
        SYNTAX	WfFrVCircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Frame Relay Circuit table."
        INDEX	{ wfFrCircuitLineNumber,
    		  wfFrCircuitLLIndex,
    		  wfFrCircuitDlci }
        ::= { wfFrVCircuitTable 1 }

    WfFrVCircuitEntry ::= SEQUENCE {
    	    wfFrCircuitDelete
    		INTEGER,
    	    wfFrCircuitLineNumber
    		INTEGER,
    	    wfFrCircuitLLIndex
    		INTEGER,
    	    wfFrCircuitNumber
    		INTEGER,
    	    wfFrCircuitDlci
    		INTEGER,
    	    wfFrCircuitState
    		INTEGER,
    	    wfFrCircuitStateSet
    		INTEGER,
    	    wfFrCircuitReceivedFECNs
    		Counter,
    	    wfFrCircuitReceivedBECNs
    		Counter,
    	    wfFrCircuitSentFrames
    		Counter,
    	    wfFrCircuitSentOctets
    		Counter,
    	    wfFrCircuitReceivedFrames
    		Counter,
    	    wfFrCircuitReceivedOctets
    		Counter,
    	    wfFrCircuitCreationTime
    		TimeTicks,
    	    wfFrCircuitLastTimeChange
    		TimeTicks,
    	    wfFrCircuitCommittedBurst
    		INTEGER,
    	    wfFrCircuitExcessBurst
    		INTEGER,
    	    wfFrCircuitThroughput
    		INTEGER,
    	    wfFrCircuitMulticast
    		INTEGER,
    	    wfFrCircuitType
    		INTEGER,
    	    wfFrCircuitDiscards
    		Counter,
    	    wfFrCircuitDrops
    		Counter,
    	    wfFrCircuitSubCct
    		INTEGER,
    	    wfFrCircuitMode
    		INTEGER,
    	    wfFrCircuitCongestionDisable
    		INTEGER,
    	    wfFrCircuitCongestionState
    		INTEGER,
    	    wfFrCircuitCongestionTmr
    		INTEGER,
    	    wfFrCircuitCongestionCtr
    		INTEGER
        }

    wfFrCircuitDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to delete this frame relay interface."
        DEFVAL	{ created }
        ::= { wfFrVCircuitEntry 1 }

    wfFrCircuitLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This is the line number on which the associated Frame
                Relay interface resides."
        ::= { wfFrVCircuitEntry 2 }

    wfFrCircuitLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Lower layer index uniquely identifies the lower layer in
                cases where the lower layer may be something other than the
                physical layer.  For example if Frame Relay is running over
                an ATM VC, the LLIndex identifies the ATM VC."
        ::= { wfFrVCircuitEntry 3 }

    wfFrCircuitNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The circuit number of this interface."
        ::= { wfFrVCircuitEntry 4 }

    wfFrCircuitDlci OBJECT-TYPE
        SYNTAX	INTEGER {
    		    twobyteminimum(16),
    		    twobytemaximum(1007),
    		    threebyteminimum(1024),
    		    threebytemaximum(64511),
    		    fourbyteminimum(131072),
    		    fourbytemaximum(8257535)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "One of three instance identifier. This is the Frame Relay 'address'
                of the virtual circuit."
        ::= { wfFrVCircuitEntry 5 }

    wfFrCircuitState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    invalid(1),
    		    active(2),
    		    inactive(3),
    		    xoff(4),
    		    control(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the state of the particular virtual circuit."
        DEFVAL	{ invalid }
        ::= { wfFrVCircuitEntry 6 }

    wfFrCircuitStateSet OBJECT-TYPE
        SYNTAX	INTEGER {
    		    invalid(1),
    		    active(2),
    		    inactive(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "User access for setting the state of a virtual circuit"
        DEFVAL	{ invalid }
        ::= { wfFrVCircuitEntry 7 }

    wfFrCircuitReceivedFECNs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received indicating forward congestion."
        ::= { wfFrVCircuitEntry 8 }

    wfFrCircuitReceivedBECNs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received indicating backward congestion."
        ::= { wfFrVCircuitEntry 9 }

    wfFrCircuitSentFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of frames sent from this virtual circuit."
        ::= { wfFrVCircuitEntry 10 }

    wfFrCircuitSentOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of octets sent from this virtual circuit."
        ::= { wfFrVCircuitEntry 11 }

    wfFrCircuitReceivedFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of frames received from this virtual circuit."
        ::= { wfFrVCircuitEntry 12 }

    wfFrCircuitReceivedOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of octets received from this virtual circuit."
        ::= { wfFrVCircuitEntry 13 }

    wfFrCircuitCreationTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of sysUpTime when the vc was created."
        ::= { wfFrVCircuitEntry 14 }

    wfFrCircuitLastTimeChange OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of sysUpTime when last there was a change in vc state."
        ::= { wfFrVCircuitEntry 15 }

    wfFrCircuitCommittedBurst OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the maximum amount of data, in bits, that the network
                agrees to transfer under normal conditions, during the measurement
                interval.  Wellfleet does not presently support this."
        ::= { wfFrVCircuitEntry 16 }

    wfFrCircuitExcessBurst OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates teh maximum amount of uncommitted data bits that the network
                will attempt to deliver over the measurement interval.  Wellfleet
                does not presently support this."
        ::= { wfFrVCircuitEntry 17 }

    wfFrCircuitThroughput OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the average number of 'Frame Relay Information Field'
                bits transferred per second across a user network interface in one
                direction, measured over the measurement interval.  Wellfleet
                does not presently support this."
        ::= { wfFrVCircuitEntry 18 }

    wfFrCircuitMulticast OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unicast(1),
    		    multicast(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this DLCI is used for multicast or single destination."
        DEFVAL	{ unicast }
        ::= { wfFrVCircuitEntry 19 }

    wfFrCircuitType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    static(1),
    		    dynamic(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indication of whether the VC was manually created (static),
                or dynamically created (dynamic) via the data link control
                management interface."
        DEFVAL	{ static }
        ::= { wfFrVCircuitEntry 20 }

    wfFrCircuitDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of inbound frames discarded because of format errors,
                because the VC is inactive or because the protocol was not registered
                for this circuit."
        ::= { wfFrVCircuitEntry 21 }

    wfFrCircuitDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates how many outbound frames were dropped. Usually these are
                dropped because the VC is not active."
        ::= { wfFrVCircuitEntry 22 }

    wfFrCircuitSubCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Circuit number to use for this VC when configured in hybrid
                (for bridging) or direct access (VC as a circuit) mode."
        ::= { wfFrVCircuitEntry 23 }

    wfFrCircuitMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    group(1),
    		    hybrid(2),
    		    direct(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The mode of the given VC.
                GROUP - treats the VC as one of many vc's on a circuit.
                HYBRID - treats the VC as one of many vc's on a circuit for
                  protocol traffic, but as a separate circuit for bridging.
                DIRECT - treats the VC as a separate circuit for all applications."
        DEFVAL	{ group }
        ::= { wfFrVCircuitEntry 24 }

    wfFrCircuitCongestionDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2),
    		    inherit(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This indicates whether the congestion algorithm should be used
                for this VC.  If this is not set, the value is inherited from the
                DLCMI record."
        DEFVAL	{ inherit }
        ::= { wfFrVCircuitEntry 25 }

    wfFrCircuitCongestionState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    forwarding(1),
    		    congested(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is used to indicate whether or not the VC is in a congested
                state.  If it is, no traffic will be sent on this VC."
        DEFVAL	{ forwarding }
        ::= { wfFrVCircuitEntry 26 }

    wfFrCircuitCongestionTmr OBJECT-TYPE
        SYNTAX	INTEGER {
    		    half(1),
    		    one(2),
    		    oneandhalf(3),
    		    two(4),
    		    twoandhalf(5),
    		    three(6),
    		    threeandhalf(7),
    		    four(8),
    		    fourandhalf(9),
    		    five(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the time period over which congestion notifications are
                counted.  It is also the period during which the VC will cease
                sending information before resuming transmission if no
                congestion notifications are received."
        DEFVAL	{ one }
        ::= { wfFrVCircuitEntry 27 }

    wfFrCircuitCongestionCtr OBJECT-TYPE
        SYNTAX	INTEGER(1..500)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This represents the number of congestion notifications, when
                received within wfFrCircuitCongestionTmr time, that will result
                in the VC ceasing transmissions."
        DEFVAL	{ 20 }
        ::= { wfFrVCircuitEntry 28 }

    wfFrCircuitErrorTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFrCctErrorEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE! NOTE!"
        ::= { wfFrameRelay2Group 4 }

    wfFrCctErrorEntry OBJECT-TYPE
        SYNTAX	WfFrCctErrorEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Frame Relay Circuit Error table."
        INDEX	{ wfFrCctErrorCct }
        ::= { wfFrCircuitErrorTable 1 }

    WfFrCctErrorEntry ::= SEQUENCE {
    	    wfFrCctErrorCct
    		INTEGER,
    	    wfFrCctErrorDrops
    		Counter,
    	    wfFrCctErrorDiscards
    		Counter
        }

    wfFrCctErrorCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance Identifier - indicates the frame relay circuit number"
        ::= { wfFrCctErrorEntry 1 }

    wfFrCctErrorDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames that were dropped at the
                circuit level.  Generally this is because the particular
                protocol (within the inbound frame) was not registered
                for this circuit."
        ::= { wfFrCctErrorEntry 2 }

    wfFrCctErrorDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames that were discarded at the
                circuit level.  Generally this is because the outbound
                frame was too long, or too short."
        ::= { wfFrCctErrorEntry 3 }

    wfFrServiceRecordTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFrServiceRecordEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Frame Relay service records group virtual circuits together."
        ::= { wfFrameRelay2Group 5 }

    wfFrServiceRecordEntry OBJECT-TYPE
        SYNTAX	WfFrServiceRecordEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Frame Relay Service Record table."
        INDEX	{ wfFrServiceRecordLineNumber,
    		  wfFrServiceRecordLLIndex,
    		  wfFrServiceRecordCircuitNumber }
        ::= { wfFrServiceRecordTable 1 }

    WfFrServiceRecordEntry ::= SEQUENCE {
    	    wfFrServiceRecordDelete
    		INTEGER,
    	    wfFrServiceRecordLineNumber
    		INTEGER,
    	    wfFrServiceRecordLLIndex
    		INTEGER,
    	    wfFrServiceRecordCircuitNumber
    		INTEGER,
    	    wfFrServiceRecordDefaultFlag
    		INTEGER,
    	    wfFrServiceRecordNumberVCs
    		INTEGER,
    	    wfFrServiceRecordName
    		DisplayString,
    	    wfFrServiceRecordState
    		INTEGER,
    		wfFrServiceRecordPreMultiCircuit
		INTEGER
        }

    wfFrServiceRecordDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to delete this frame relay service record."
        DEFVAL	{ created }
        ::= { wfFrServiceRecordEntry 1 }

    wfFrServiceRecordLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This is the line number on which the associated Frame
                Relay interface resides."
        ::= { wfFrServiceRecordEntry 2 }

    wfFrServiceRecordLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Lower layer index uniquely identifies the lower layer in
                cases where the lower layer may be something other than the
                physical layer.  For example if Frame Relay is running over
                an ATM VC, the LLIndex identifies the ATM VC."
        ::= { wfFrServiceRecordEntry 3 }

    wfFrServiceRecordCircuitNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The circuit number of this interface."
        ::= { wfFrServiceRecordEntry 4 }

    wfFrServiceRecordDefaultFlag OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Identifies default service record for VCs added via the
                frame relay switch."
        DEFVAL	{ false }
        ::= { wfFrServiceRecordEntry 5 }

    wfFrServiceRecordNumberVCs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of virtual circuit associated with a service record."
        ::= { wfFrServiceRecordEntry 6 }

    wfFrServiceRecordName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "User name for circuit"
        ::= { wfFrServiceRecordEntry 7 }

    wfFrServiceRecordState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    inactive(1),
    		    active(2),
    		    invalid(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Used to identify new service record instances"
        DEFVAL	{ inactive }
        ::= { wfFrServiceRecordEntry 8 }

     wfFrServiceRecordPreMultiCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "circuit number prior to enabling multiline, allows
		 restoration of pre-multiline circuit"
        ::= { wfFrServiceRecordEntry 9 }


    END  -- Wellfleet-FR2-MIB
-- @(#)WSCCS c/mibs-frsw.mib 1.5 10/16/95
Wellfleet-FRSW-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:41:23 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfFrswGroup
        FROM Wellfleet-COMMON-MIB;


    wfFrSwDlcmiTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFrSwDlcmiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Parameters for the Data Link Connection
                Management Interface corresponding to any
                interface.  Incorporates the Error table."
        ::= { wfFrswGroup 1 }

    wfFrSwDlcmiEntry OBJECT-TYPE
        SYNTAX	WfFrSwDlcmiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The parameters for a particular Data Link Connection
                Management Interface."
        INDEX	{ wfFrSwDlcmiCircuit }
        ::= { wfFrSwDlcmiTable 1 }

    WfFrSwDlcmiEntry ::= SEQUENCE {
    	    wfFrSwDlcmiDelete
    		INTEGER,
    	    wfFrSwDlcmiState
    		INTEGER,
    	    wfFrSwDlcmiNniEnable
    		INTEGER,
    	    wfFrSwDlcmiCircuit
    		INTEGER,
    	    wfFrSwDlcmiManagementType
    		INTEGER,
    	    wfFrSwL3NetAddress
    		IpAddress,
    	    wfFrSwDlcmiAddressLen
    		INTEGER,
    	    wfFrSwDlcmiControlByteDisable
    		INTEGER,
    	    wfFrSwDlcmiPollingInterval
    		INTEGER,
    	    wfFrSwDlcmiFullEnquiryInterval
    		INTEGER,
    	    wfFrSwDlcmiErrorThreshold
    		INTEGER,
    	    wfFrSwDlcmiMonitoredEvents
    		INTEGER,
    	    wfFrSwDlcmiRecoveryCounts
    		INTEGER,
    	    wfFrSwDlcmiMaxSupportedVCs
    		INTEGER,
    	    wfFrSwDlcmiVCsInUse
    		INTEGER,
    	    wfFrSwSwitchHdrErrors
    		Counter,
    	    wfFrSwDlcmiSequenceCount
    		INTEGER,
    	    wfFrSwDlcmiLastReceived
    		INTEGER,
    	    wfFrSwDlcmiActiveSeqCount
    		INTEGER,
    	    wfFrSwDlcmiActiveReceived
    		INTEGER,
    	    wfFrSwDlcmiPolls
    		Counter,
    	    wfFrSwDlcmiAlarmTimer
    		INTEGER,
    	    wfFrSwErrType
    		INTEGER,
    	    wfFrSwErrData
    		OCTET STRING,
    	    wfFrSwErrTime
    		TimeTicks,
    	    wfFrSwBcMeasurementInterval
    		INTEGER,
    	    wfFrSwDlcmiMcastNoBufferErrors
    		Counter,
    	    wfFrSwDlcmiFrameTooShortErrors
    		Counter,
    	    wfFrSwDlcmiFrameTooLongErrors
    		Counter,
    	    wfFrSwDlcmiIllegalDlciErrors
    		Counter,
    	    wfFrSwDlcmiUnknownDlciErrors
    		Counter,
    	    wfFrSwDlcmiProtocolErrors
    		Counter,
    	    wfFrSwDlcmiUnknownIEErrors
    		Counter,
    	    wfFrSwDlcmiSequenceErrors
    		Counter,
    	    wfFrSwDlcmiUnknownRPTErrors
    		Counter,
    	    wfFrSwDlcmiControlByteErrors
    		Counter,
    	    wfFrSwDlcmiFormatErrors
    		Counter,
    	    wfFrSwDlcmiOtherErrors
    		Counter,
    	    wfFrSwDlcmiStatus
    		INTEGER,
    	    wfFrSwDlcmiNewVCs
    		Counter,
    	    wfFrSwDlcmiDeletedVCs
    		Counter,
    	    wfFrSwDlcmiFullStatusSeq
    		Counter,
    	    wfFrSwDlcmiBidirect
    		INTEGER,
    	    wfFrSwDlcmiDteStatus
    		INTEGER,
    	    wfFrSwDlcmiDteSeqCount
    		INTEGER,
    	    wfFrSwDlcmiDteReceived
    		INTEGER,
    	    wfFrSwDlcmiDteLastReceived
    		INTEGER,
    	    wfFrSwDlcmiDtePolls
    		Counter,
    	    wfFrSwDlcmiDtePollingInterval
    		INTEGER,
    	    wfFrSwDlcmiDteFullEnquiryInterval
    		INTEGER,
    	    wfFrSwDlcmiDteErrorThreshold
    		INTEGER,
    	    wfFrSwDlcmiCrossNetEnable
    		INTEGER,
    	    wfFrSwDlcmiCrossNetPollingInterval
    		INTEGER,
    	    wfFrSwDlcmiCrossNetErrorThreshold
    		INTEGER,
    	    wfFrSwDlcmiCrossNetAsyncUpdateEnable
    		INTEGER,
    	    wfFrSwDlcmiBcMeasurementEnable
    		INTEGER,
    	    wfFrSwDlcmiAsyncUpdateEnable
    		INTEGER,
            wfFrSwDlcmiCrossNetListenEnable
		INTEGER
        }

    wfFrSwDlcmiDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to delete this frame relay interface."
        DEFVAL	{ created }
        ::= { wfFrSwDlcmiEntry 1 }

    wfFrSwDlcmiState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates which state of DLCMI the interface is in"
        DEFVAL	{ init }
        ::= { wfFrSwDlcmiEntry 2 }

    wfFrSwDlcmiNniEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether a NNI is enabled for this entry."
        DEFVAL	{ disabled }
        ::= { wfFrSwDlcmiEntry 3 }

    wfFrSwDlcmiCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier; the circuit number of this entry."
        ::= { wfFrSwDlcmiEntry 4 }

    wfFrSwDlcmiManagementType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    lmi(2),
    		    t1617d(3),
    		    t1617b(4),
    		    annexa(5),
    		    lmiswitch(6),
    		    annexdswitch(7),
    		    annexaswitch(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the Data Link Connection Management scheme
                that is active."
        DEFVAL	{ t1617d }
        ::= { wfFrSwDlcmiEntry 5 }

    wfFrSwL3NetAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates level 3 (IP) address of this frame relay interface"
        ::= { wfFrSwDlcmiEntry 6 }

    wfFrSwDlcmiAddressLen OBJECT-TYPE
        SYNTAX	INTEGER {
    		    twobyte(2),
    		    threebyte(3),
    		    fourbyte(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the address length, including the
                control portion."
        DEFVAL	{ twobyte }
        ::= { wfFrSwDlcmiEntry 7 }

    wfFrSwDlcmiControlByteDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates inclusion of control byte in q922 format."
        DEFVAL	{ disabled }
        ::= { wfFrSwDlcmiEntry 8 }

    wfFrSwDlcmiPollingInterval OBJECT-TYPE
        SYNTAX	INTEGER(5..30)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of seconds between successive status enquiry
                messages."
        DEFVAL	{ 15 }
        ::= { wfFrSwDlcmiEntry 9 }

    wfFrSwDlcmiFullEnquiryInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of status enquiries before a full
                status enquiry. (For bidirectional procedures.)"
        DEFVAL	{ 6 }
        ::= { wfFrSwDlcmiEntry 10 }

    wfFrSwDlcmiErrorThreshold OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number errors monitored before declaring
                the interface down."
        DEFVAL	{ 3 }
        ::= { wfFrSwDlcmiEntry 11 }

    wfFrSwDlcmiMonitoredEvents OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the events over which error threshold is kept."
        DEFVAL	{ 4 }
        ::= { wfFrSwDlcmiEntry 12 }

    wfFrSwDlcmiRecoveryCounts OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of correct polling
                cycles during recovery."
        ::= { wfFrSwDlcmiEntry 13 }

    wfFrSwDlcmiMaxSupportedVCs OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(100)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the maximum number of VCs allowed."
        DEFVAL	{ default }
        ::= { wfFrSwDlcmiEntry 14 }

    wfFrSwDlcmiVCsInUse OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of VCs that are currently
                configured on this interface."
        ::= { wfFrSwDlcmiEntry 15 }

    wfFrSwSwitchHdrErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames dropped because they were
                received on the remote side with an invalid switch header."
        ::= { wfFrSwDlcmiEntry 16 }

    wfFrSwDlcmiSequenceCount OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates this switch's sequence counter; value of
                next to send."
        DEFVAL	{ 1 }
        ::= { wfFrSwDlcmiEntry 17 }

    wfFrSwDlcmiLastReceived OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the sequence number just received from
                the end station."
        DEFVAL	{ 1 }
        ::= { wfFrSwDlcmiEntry 18 }

    wfFrSwDlcmiActiveSeqCount OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the switch's sequence counter for sending
                status enquiry. (For bidirectional procedures.)"
        DEFVAL	{ 1 }
        ::= { wfFrSwDlcmiEntry 19 }

    wfFrSwDlcmiActiveReceived OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the sequence number just received from the
                enquiring station. (For bidirectional procedures.)"
        DEFVAL	{ 1 }
        ::= { wfFrSwDlcmiEntry 20 }

    wfFrSwDlcmiPolls OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the counter of where we are in the polling cycle."
        ::= { wfFrSwDlcmiEntry 21 }

    wfFrSwDlcmiAlarmTimer OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counter of 1/2 second timeouts. Indicates
                when to expect poll."
        ::= { wfFrSwDlcmiEntry 22 }

    wfFrSwErrType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    reset(1),
    		    other(2),
    		    short(3),
    		    long(4),
    		    illegaldlci(5),
    		    unknowndlci(6),
    		    protoerr(7),
    		    unknownie(8),
    		    sequenceerr(9),
    		    unknownrpt(10),
    		    byteerr(11),
    		    hdrerr(12),
    		    formaterr(13)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the type of the last specific monitored error."
        DEFVAL	{ reset }
        ::= { wfFrSwDlcmiEntry 23 }

    wfFrSwErrData OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Contains as much of the error packet as possible."
        ::= { wfFrSwDlcmiEntry 24 }

    wfFrSwErrTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the time the last error occurred."
        ::= { wfFrSwDlcmiEntry 25 }

    wfFrSwBcMeasurementInterval OBJECT-TYPE
        SYNTAX	INTEGER(100..2000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the Committed Burst sample window interval in msec"
        DEFVAL	{ 500 }
        ::= { wfFrSwDlcmiEntry 26 }

    wfFrSwDlcmiMcastNoBufferErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of times a multicast failed partially
                or wholly because there are insufficient buffers available
                to create multiple copies of a multicast frame"
        ::= { wfFrSwDlcmiEntry 27 }

    wfFrSwDlcmiFrameTooShortErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames dropped that
                are too short to be accepted."
        ::= { wfFrSwDlcmiEntry 28 }

    wfFrSwDlcmiFrameTooLongErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames dropped that
                are too long to be accepted."
        ::= { wfFrSwDlcmiEntry 29 }

    wfFrSwDlcmiIllegalDlciErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames dropped that
                had an invalid DLCI value."
        ::= { wfFrSwDlcmiEntry 30 }

    wfFrSwDlcmiUnknownDlciErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames dropped which
                had an unknown DLCI value."
        ::= { wfFrSwDlcmiEntry 31 }

    wfFrSwDlcmiProtocolErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames dropped because
                of a DLCMI protocol violation."
        ::= { wfFrSwDlcmiEntry 32 }

    wfFrSwDlcmiUnknownIEErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames dropped that
                had an unknown information element."
        ::= { wfFrSwDlcmiEntry 33 }

    wfFrSwDlcmiSequenceErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames dropped because
                of a DLCMI sequence error."
        ::= { wfFrSwDlcmiEntry 34 }

    wfFrSwDlcmiUnknownRPTErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames dropped which
                had an unknown report type."
        ::= { wfFrSwDlcmiEntry 35 }

    wfFrSwDlcmiControlByteErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames dropped that
                had an unsupported control byte."
        ::= { wfFrSwDlcmiEntry 36 }

    wfFrSwDlcmiFormatErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames dropped due to
                a frame format error."
        ::= { wfFrSwDlcmiEntry 37 }

    wfFrSwDlcmiOtherErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames dropped due to unknown
                or other errors not counted by any error counter."
        ::= { wfFrSwDlcmiEntry 38 }

    wfFrSwDlcmiStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    running(1),
    		    recovered(2),
    		    fault(3),
    		    start(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates which state of execution the DLCMI gate is in"
        DEFVAL	{ start }
        ::= { wfFrSwDlcmiEntry 39 }

    wfFrSwDlcmiNewVCs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of newly added PVCs that we have not yet told the
                CPE about, by means of a full-status message."
        ::= { wfFrSwDlcmiEntry 40 }

    wfFrSwDlcmiDeletedVCs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of deletedly added PVCs that we have not yet told the
                CPE about, by means of a full-status message."
        ::= { wfFrSwDlcmiEntry 41 }

    wfFrSwDlcmiFullStatusSeq OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the expected sequence number for the next Status Enquiry
                message that will prove that the CPE received our last Full Status
                Message and knows about the deleted PVCs."
        ::= { wfFrSwDlcmiEntry 42 }

    wfFrSwDlcmiBidirect OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to delete this frame relay interface."
        DEFVAL	{ disable }
        ::= { wfFrSwDlcmiEntry 43 }

    wfFrSwDlcmiDteStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    running(1),
    		    recovered(2),
    		    fault(3),
    		    start(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates which state of execution the DLCMI gate is in for
                bidirectional procedures."
        DEFVAL	{ start }
        ::= { wfFrSwDlcmiEntry 44 }

    wfFrSwDlcmiDteSeqCount OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the switch's sequence counter for sending
                status enquiry. (For bidirectional procedures.)"
        DEFVAL	{ 1 }
        ::= { wfFrSwDlcmiEntry 45 }

    wfFrSwDlcmiDteReceived OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the sequence number just received from the
                enquiring station. (For bidirectional procedures.)"
        DEFVAL	{ 1 }
        ::= { wfFrSwDlcmiEntry 46 }

    wfFrSwDlcmiDteLastReceived OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the sequence number just received from
                the end station."
        DEFVAL	{ 1 }
        ::= { wfFrSwDlcmiEntry 47 }

    wfFrSwDlcmiDtePolls OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the counter of where we are in the polling cycle."
        ::= { wfFrSwDlcmiEntry 48 }

    wfFrSwDlcmiDtePollingInterval OBJECT-TYPE
        SYNTAX	INTEGER(5..30)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of seconds between successive status enquiry
                messages."
        DEFVAL	{ 10 }
        ::= { wfFrSwDlcmiEntry 49 }

    wfFrSwDlcmiDteFullEnquiryInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of status enquiries before a full
                status enquiry. (For bidirectional procedures.)"
        DEFVAL	{ 6 }
        ::= { wfFrSwDlcmiEntry 50 }

    wfFrSwDlcmiDteErrorThreshold OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number errors monitored before declaring
                the interface down."
        DEFVAL	{ 3 }
        ::= { wfFrSwDlcmiEntry 51 }

    wfFrSwDlcmiCrossNetEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to delete this frame relay interface."
        DEFVAL	{ disable }
        ::= { wfFrSwDlcmiEntry 52 }

    wfFrSwDlcmiCrossNetPollingInterval OBJECT-TYPE
        SYNTAX	INTEGER(5..86400)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of seconds between successive status enquiry
                messages."
        DEFVAL	{ 120 }
        ::= { wfFrSwDlcmiEntry 53 }

    wfFrSwDlcmiCrossNetErrorThreshold OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number missed heartbeat polls before
                declaring the cross-net PVC inactive."
        DEFVAL	{ 3 }
        ::= { wfFrSwDlcmiEntry 54 }

    wfFrSwDlcmiCrossNetAsyncUpdateEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether we are to send to the other end
                of the network, status updates for dlcis as soon as
                there is a change of status for the dlci."
        DEFVAL	{ disabled }
        ::= { wfFrSwDlcmiEntry 55 }

    wfFrSwDlcmiBcMeasurementEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether Committed Burst Measurement is enabled
                for this interface. If this attribute is set to DISABLE then
                DE bit setting in Frame Relay frames at this interface is disabled."
        DEFVAL	{ enable }
        ::= { wfFrSwDlcmiEntry 56 }

    wfFrSwDlcmiAsyncUpdateEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the link management entity should
                send an asynchronous single PVC update message
                when the state of a PVC is changed by a technician
                or by cross-net polling procedures. "
        DEFVAL	{ disabled }
        ::= { wfFrSwDlcmiEntry 57 }

    wfFrSwDlcmiCrossNetListenEnable
	OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the link management entity should
		 make a judgement of the PVC's status based on Cross
		 Net updates."
        DEFVAL	{ disabled }
        ::= { wfFrSwDlcmiEntry 58 }


    wfFrSwCctTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFrSwCctEntry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "Frame Relay Circuit table gives information
                about a virtual circuit."
        ::= { wfFrswGroup 2 }

    wfFrSwCctEntry OBJECT-TYPE
        SYNTAX	WfFrSwCctEntry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "An entry in the Frame Relay (Virtual) Circuit table."
        INDEX	{ wfFrSwCctNumber,
    		  wfFrSwCctDlci }
        ::= { wfFrSwCctTable 1 }

    WfFrSwCctEntry ::= SEQUENCE {
    	    wfFrSwCctDelete
    		INTEGER,
    	    wfFrSwCctNumber
    		INTEGER,
    	    wfFrSwCctDlci
    		INTEGER,
    	    wfFrSwCctState
    		INTEGER,
    	    wfFrSwCctMulticast
    		INTEGER,
    	    wfFrSwCctInBc
    		INTEGER,
    	    wfFrSwCctOutBc
    		INTEGER,
    	    wfFrSwCctInBe
    		INTEGER,
    	    wfFrSwCctOutBe
    		INTEGER,
    	    wfFrSwCctInThroughput
    		INTEGER,
    	    wfFrSwCctOutThroughput
    		INTEGER,
    	    wfFrSwCctCreationTime
    		TimeTicks,
    	    wfFrSwCctLastTimeChange
    		TimeTicks,
    	    wfFrSwCctLocalSentNonDEFrames
    		Counter,
    	    wfFrSwCctLocalSentNonDEOctets
    		Counter,
    	    wfFrSwCctLocalSentDEFrames
    		Counter,
    	    wfFrSwCctLocalSentDEOctets
    		Counter,
    	    wfFrSwCctLocalSetFECNFrames
    		Counter,
    	    wfFrSwCctLocalSetFECNOctets
    		Counter,
    	    wfFrSwCctLocalSetBECNFrames
    		Counter,
    	    wfFrSwCctLocalSetBECNOctets
    		Counter,
    	    wfFrSwCctLocalSetDEFrames
    		Counter,
    	    wfFrSwCctLocalSetDEOctets
    		Counter,
    	    wfFrSwCctLocalDropNonDEFrames
    		Counter,
    	    wfFrSwCctLocalDropNonDEOctets
    		Counter,
    	    wfFrSwCctLocalDropDEFrames
    		Counter,
    	    wfFrSwCctLocalDropDEOctets
    		Counter,
    	    wfFrSwCctInactiveVCDropFrames
    		Counter,
    	    wfFrSwCctInactiveVCDropOctets
    		Counter,
    	    wfFrSwCctLocalRecvNonDEFrames
    		Counter,
    	    wfFrSwCctLocalRecvNonDEOctets
    		Counter,
    	    wfFrSwCctLocalRecvDEFrames
    		Counter,
    	    wfFrSwCctLocalRecvDEOctets
    		Counter,
    	    wfFrSwCctLocalRecvFECNFrames
    		Counter,
    	    wfFrSwCctLocalRecvFECNOctets
    		Counter,
    	    wfFrSwCctLocalRecvBECNFrames
    		Counter,
    	    wfFrSwCctLocalRecvBECNOctets
    		Counter,
    	    wfFrSwCctLocalRecentNonDEOctets
    		Counter,
    	    wfFrSwCctRemoteSentNonDEFrames
    		Counter,
    	    wfFrSwCctRemoteSentNonDEOctets
    		Counter,
    	    wfFrSwCctRemoteSentDEFrames
    		Counter,
    	    wfFrSwCctRemoteSentDEOctets
    		Counter,
    	    wfFrSwCctRemoteSetFECNFrames
    		Counter,
    	    wfFrSwCctRemoteSetFECNOctets
    		Counter,
    	    wfFrSwCctRemoteSetBECNFrames
    		Counter,
    	    wfFrSwCctRemoteSetBECNOctets
    		Counter,
    	    wfFrSwCctRemoteDropNonDEFrames
    		Counter,
    	    wfFrSwCctRemoteDropNonDEOctets
    		Counter,
    	    wfFrSwCctRemoteDropDEFrames
    		Counter,
    	    wfFrSwCctRemoteDropDEOctets
    		Counter,
    	    wfFrSwCctRemoteRecvNonDEFrames
    		Counter,
    	    wfFrSwCctRemoteRecvNonDEOctets
    		Counter,
    	    wfFrSwCctRemoteRecvDEFrames
    		Counter,
    	    wfFrSwCctRemoteRecvDEOctets
    		Counter,
    	    wfFrSwCctRemoteRecvFECNFrames
    		Counter,
    	    wfFrSwCctRemoteRecvFECNOctets
    		Counter,
    	    wfFrSwCctRemoteRecvBECNFrames
    		Counter,
    	    wfFrSwCctRemoteRecvBECNOctets
    		Counter,
    	    wfFrSwCctLocalBecnState
    		INTEGER,
    	    wfFrSwCctRemoteBecnState
    		INTEGER,
    	    wfFrSwCctLocalOrRemoteConnection
    		INTEGER,
    	    wfFrSwCctInBcOctets
    		INTEGER,
    	    wfFrSwCctStateSet
    		INTEGER,
    	    wfFrSwCctReportedStatus
    		INTEGER,
    	    wfFrSwCctReceivedStatus
    		INTEGER,
    	    wfFrSwCctCrossNetStatus
    		INTEGER,
    	    wfFrSwCctXNetSent
    		INTEGER,
    	    wfFrSwCctXNetReceived
    		INTEGER,
    	    wfFrSwCctXNetErrors
    		Counter
        }

    wfFrSwCctDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2),
    		    system(3)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Indication to delete this frame relay interface."
        DEFVAL	{ created }
        ::= { wfFrSwCctEntry 1 }

    wfFrSwCctNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Instance identifier; the circuit number of this interface."
        ::= { wfFrSwCctEntry 2 }

    wfFrSwCctDlci OBJECT-TYPE
        SYNTAX	INTEGER {
    		    twobyteminimum(16),
    		    twobytemaximum(1007),
    		    threebyteminimum(1024),
    		    threebytemaximum(64511),
    		    fourbyteminimum(131072),
    		    fourbytemaximum(8257535)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Instance identifier; this indicates the virtual
                circuit identifier"
        ::= { wfFrSwCctEntry 3 }

    wfFrSwCctState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    invalid(1),
    		    active(2),
    		    inactive(3),
    		    control(4),
    		    user(5)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates whether the particular virtual circuit is
                operational."
        DEFVAL	{ invalid }
        ::= { wfFrSwCctEntry 4 }

    wfFrSwCctMulticast OBJECT-TYPE
        SYNTAX	INTEGER {
    		    multicast(1),
    		    unicast(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Indicates whether this dlci is used for multicast
                or single destination."
        DEFVAL	{ unicast }
        ::= { wfFrSwCctEntry 5 }

    wfFrSwCctInBc OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the Incoming Committed Burst bits
                for this virtual circuit."
        ::= { wfFrSwCctEntry 6 }

    wfFrSwCctOutBc OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the Outgoing Committed Burst bits
                for this virtual circuit."
        ::= { wfFrSwCctEntry 7 }

    wfFrSwCctInBe OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Indicates the Incoming Excess Burst bits
                for this virtual circuit."
        ::= { wfFrSwCctEntry 8 }

    wfFrSwCctOutBe OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Indicates the Outgoing Excess Burst bits
                for this virtual circuit."
        ::= { wfFrSwCctEntry 9 }

    wfFrSwCctInThroughput OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Indicates the incoming throughput in bits/sec for this virtual circuit."
        ::= { wfFrSwCctEntry 10 }

    wfFrSwCctOutThroughput OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Indicates the outgoing throughput in bits/sec for this virtual circuit."
        ::= { wfFrSwCctEntry 11 }

    wfFrSwCctCreationTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the value of sysUpTime when the VC
                was created."
        ::= { wfFrSwCctEntry 12 }

    wfFrSwCctLastTimeChange OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the value of sysUpTime when last there was a
                change in VC state."
        ::= { wfFrSwCctEntry 13 }

    wfFrSwCctLocalSentNonDEFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames without the DE bit sent on this
                virtual circuit  over the local interface."
        ::= { wfFrSwCctEntry 14 }

    wfFrSwCctLocalSentNonDEOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets without DE bit sent on this
                virtual circuit over the local interface."
        ::= { wfFrSwCctEntry 15 }

    wfFrSwCctLocalSentDEFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames with DE bit set sent on this virtual
                circuit over the local interface."
        ::= { wfFrSwCctEntry 16 }

    wfFrSwCctLocalSentDEOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets with DE bit set sent on this
                virtual circuit over the local interface."
        ::= { wfFrSwCctEntry 17 }

    wfFrSwCctLocalSetFECNFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames sent to the local
                interface on which this switch set the FECN bit ."
        ::= { wfFrSwCctEntry 18 }

    wfFrSwCctLocalSetFECNOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets in frames sent to the
                local interface on which this switch set the FECN bit."
        ::= { wfFrSwCctEntry 19 }

    wfFrSwCctLocalSetBECNFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames sent to the local
                interface on which this switch set the BECN bit."
        ::= { wfFrSwCctEntry 20 }

    wfFrSwCctLocalSetBECNOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets in frames sent to the
                local interface on which this switch set the BECN bit."
        ::= { wfFrSwCctEntry 21 }

    wfFrSwCctLocalSetDEFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames sent to the local
                interface on which this switch set the DE bit."
        ::= { wfFrSwCctEntry 22 }

    wfFrSwCctLocalSetDEOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets in frames sent to the
                local interface on which this switch set the DE bit."
        ::= { wfFrSwCctEntry 23 }

    wfFrSwCctLocalDropNonDEFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames received over the local
                interface which were discarded, excluding any frames
                with the DE bit set."
        ::= { wfFrSwCctEntry 24 }

    wfFrSwCctLocalDropNonDEOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets in frames received over
                the local interface which were discarded, excluding any
                frames with the DE bit set."
        ::= { wfFrSwCctEntry 25 }

    wfFrSwCctLocalDropDEFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames received over the local
                interface, having the DE bit set, which were discarded."
        ::= { wfFrSwCctEntry 26 }

    wfFrSwCctLocalDropDEOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets in frames received over
                the local interface, having the DE bit set, which
                were discarded."
        ::= { wfFrSwCctEntry 27 }

    wfFrSwCctInactiveVCDropFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates how many frames were discarded because the
                virtual circuit was inactive."
        ::= { wfFrSwCctEntry 28 }

    wfFrSwCctInactiveVCDropOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates how many Octets were discarded because the
                virtual circuit was inactive."
        ::= { wfFrSwCctEntry 29 }

    wfFrSwCctLocalRecvNonDEFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames received on this
                virtual circuit over the local interface."
        ::= { wfFrSwCctEntry 30 }

    wfFrSwCctLocalRecvNonDEOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets received on
                this virtual circuit over the local interface."
        ::= { wfFrSwCctEntry 31 }

    wfFrSwCctLocalRecvDEFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames received over the
                local interface with the DE bit set."
        ::= { wfFrSwCctEntry 32 }

    wfFrSwCctLocalRecvDEOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets in frames received
                over the local interface with the DE bit set."
        ::= { wfFrSwCctEntry 33 }

    wfFrSwCctLocalRecvFECNFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames received over the
                local interface with the FECN bit set."
        ::= { wfFrSwCctEntry 34 }

    wfFrSwCctLocalRecvFECNOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets in frames received
                over the local interface with the FECN bit set."
        ::= { wfFrSwCctEntry 35 }

    wfFrSwCctLocalRecvBECNFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames received over the
                local interface with the BECN bit set."
        ::= { wfFrSwCctEntry 36 }

    wfFrSwCctLocalRecvBECNOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets in frames received
                over the local interface with the BECN bit set."
        ::= { wfFrSwCctEntry 37 }

    wfFrSwCctLocalRecentNonDEOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets received over the local
                interface during the most recent sampling period."
        ::= { wfFrSwCctEntry 38 }

    wfFrSwCctRemoteSentNonDEFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of Non DE set frames sent over the remote interface."
        ::= { wfFrSwCctEntry 39 }

    wfFrSwCctRemoteSentNonDEOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of Non DE set octets sent over the remote interface."
        ::= { wfFrSwCctEntry 40 }

    wfFrSwCctRemoteSentDEFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of DE set frames sent over the remote interface."
        ::= { wfFrSwCctEntry 41 }

    wfFrSwCctRemoteSentDEOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of DE set octets sent over the remote interface."
        ::= { wfFrSwCctEntry 42 }

    wfFrSwCctRemoteSetFECNFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames sent to the remote
                interface on which this switch set the FECN bit."
        ::= { wfFrSwCctEntry 43 }

    wfFrSwCctRemoteSetFECNOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets in frames sent to the remote
                interface that on which this switch set the FECN bit."
        ::= { wfFrSwCctEntry 44 }

    wfFrSwCctRemoteSetBECNFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames sent to the remote
                interface on which this switch set the BECN bit."
        ::= { wfFrSwCctEntry 45 }

    wfFrSwCctRemoteSetBECNOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets in frames sent to the
                remote interface on which this switch set the BECN bit."
        ::= { wfFrSwCctEntry 46 }

    wfFrSwCctRemoteDropNonDEFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames received over the
                remote interface which were discarded, excluding
                any frames with the DE bit set."
        ::= { wfFrSwCctEntry 47 }

    wfFrSwCctRemoteDropNonDEOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets in frames received
                over the remote interface which were discarded,
                excluding any frames with the DE bit set."
        ::= { wfFrSwCctEntry 48 }

    wfFrSwCctRemoteDropDEFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames received over
                the remote interface, having the DE bit set,
                which were discarded."
        ::= { wfFrSwCctEntry 49 }

    wfFrSwCctRemoteDropDEOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets in frames received over
                the remote interface, having the DE bit set,
                which were discarded."
        ::= { wfFrSwCctEntry 50 }

    wfFrSwCctRemoteRecvNonDEFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames received on this virtual
                circuit over the remote interface."
        ::= { wfFrSwCctEntry 51 }

    wfFrSwCctRemoteRecvNonDEOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets received on this
                virtual circuit over the remote interface."
        ::= { wfFrSwCctEntry 52 }

    wfFrSwCctRemoteRecvDEFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames received over the
                remote interface with the DE bit set."
        ::= { wfFrSwCctEntry 53 }

    wfFrSwCctRemoteRecvDEOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets in frames received over
                the remote interface with the DE bit set."
        ::= { wfFrSwCctEntry 54 }

    wfFrSwCctRemoteRecvFECNFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames received over the
                remote interface with the FECN bit set."
        ::= { wfFrSwCctEntry 55 }

    wfFrSwCctRemoteRecvFECNOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets in frames received over
                the remote interface with the FECN bit set."
        ::= { wfFrSwCctEntry 56 }

    wfFrSwCctRemoteRecvBECNFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of frames received over the
                remote interface with the BECN bit set."
        ::= { wfFrSwCctEntry 57 }

    wfFrSwCctRemoteRecvBECNOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the number of octets in frames received over
                the remote interface with the BECN bit set."
        ::= { wfFrSwCctEntry 58 }

    wfFrSwCctLocalBecnState OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the local BECN state"
        ::= { wfFrSwCctEntry 59 }

    wfFrSwCctRemoteBecnState OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the remote BECN state"
        ::= { wfFrSwCctEntry 60 }

    wfFrSwCctLocalOrRemoteConnection OBJECT-TYPE
        SYNTAX	INTEGER {
    		    local(1),
    		    remote(2)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates whether this connection is Local to Local Connection
                or Local to Remote connection."
        DEFVAL	{ remote }
        ::= { wfFrSwCctEntry 61 }

    wfFrSwCctInBcOctets OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates the Incoming Committed Burst in octets
                for this virtual circuit."
        ::= { wfFrSwCctEntry 62 }

    wfFrSwCctStateSet OBJECT-TYPE
        SYNTAX	INTEGER {
    		    inactive(1),
    		    active(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "User access for setting the state of a virtual circuit"
        DEFVAL	{ active }
        ::= { wfFrSwCctEntry 63 }

    wfFrSwCctReportedStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    acked(1),
    		    unacked(2),
    		    unreported(3)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Record keeping for circuit status"
        DEFVAL	{ unreported }
        ::= { wfFrSwCctEntry 64 }

    wfFrSwCctReceivedStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    inactive(1),
    		    active(2)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "State of a virtual circuit as reported by the network at an NNI"
        DEFVAL	{ active }
        ::= { wfFrSwCctEntry 65 }

    wfFrSwCctCrossNetStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    inactive(1),
    		    active(2)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "State of a virtual circuit as reported by the other end of the network
                under bidirectional signalling."
        DEFVAL	{ active }
        ::= { wfFrSwCctEntry 66 }

    wfFrSwCctXNetSent OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unsent(1),
    		    sent(2)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Whether we have sent a cross net status message for this VC yet."
        DEFVAL	{ unsent }
        ::= { wfFrSwCctEntry 67 }

    wfFrSwCctXNetReceived OBJECT-TYPE
        SYNTAX	INTEGER {
    		    recv(1),
    		    unrecv(2)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Whether we have received a cross net status message for this VC during
                the current polling interval. "
        DEFVAL	{ unrecv }
        ::= { wfFrSwCctEntry 68 }

    wfFrSwCctXNetErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "This is the count of the consecutive errors (usually timeouts) against
                this VC in cross-network heartbeat polling  "
        ::= { wfFrSwCctEntry 69 }

    wfFrSwTupleTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFrSwTupleEntry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "The Parameters for the Tuple table, identifying
                the endpoints of virtual circuits as pairs of IP
                addresses and DLCI."
        ::= { wfFrswGroup 3 }

    wfFrSwTupleEntry OBJECT-TYPE
        SYNTAX	WfFrSwTupleEntry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "The parameters for a particular Tuple."
        INDEX	{ wfFrSwTupleIpAddrA,
    		  wfFrSwTupleDlciA,
    		  wfFrSwTupleIpAddrB,
    		  wfFrSwTupleDlciB }
        ::= { wfFrSwTupleTable 1 }

    WfFrSwTupleEntry ::= SEQUENCE {
    	    wfFrSwTupleDelete
    		INTEGER,
    	    wfFrSwTupleIpAddrA
    		IpAddress,
    	    wfFrSwTupleDlciA
    		INTEGER,
    	    wfFrSwTupleIpAddrB
    		IpAddress,
    	    wfFrSwTupleDlciB
    		INTEGER
        }

    wfFrSwTupleDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Indication to delete this tuple."
        DEFVAL	{ created }
        ::= { wfFrSwTupleEntry 1 }

    wfFrSwTupleIpAddrA OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Instance indentifier; indicates the IP address
                associated with endpoint 'A' of a virtual circuit."
        ::= { wfFrSwTupleEntry 2 }

    wfFrSwTupleDlciA OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Instance identfier; indicates the DLCI associated
                with endpoint 'A' of a virtual circuit."
        ::= { wfFrSwTupleEntry 3 }

    wfFrSwTupleIpAddrB OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Instance identfier; indicates the IP address
                associated with endpoint 'B' of a virtual circuit."
        ::= { wfFrSwTupleEntry 4 }

    wfFrSwTupleDlciB OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Instance identifier; Indicates the DLCI associated
                with endpoint 'B' of a virtual circuit."
        ::= { wfFrSwTupleEntry 5 }

    wfFrSwMcastTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFrSwMcastEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The list of multicast addresses"
        ::= { wfFrswGroup 4 }

    wfFrSwMcastEntry OBJECT-TYPE
        SYNTAX	WfFrSwMcastEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The parameters for a particular Multicast address."
        INDEX	{ wfFrSwMcastIndex }
        ::= { wfFrSwMcastTable 1 }

    WfFrSwMcastEntry ::= SEQUENCE {
    	    wfFrSwMcastDelete
    		INTEGER,
    	    wfFrSwMcastIndex
    		INTEGER,
    	    wfFrSwMcastIpAddr
    		IpAddress,
    	    wfFrSwMcastDlci
    		INTEGER,
    	    wfFrSwMcastIndividualDlci
    		INTEGER
        }

    wfFrSwMcastDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to delete this multicast instance."
        DEFVAL	{ created }
        ::= { wfFrSwMcastEntry 1 }

    wfFrSwMcastIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Index of this multicast DLCI instance"
        ::= { wfFrSwMcastEntry 2 }

    wfFrSwMcastIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "IP address of the interface in which this multicast DLCI is defined."
        ::= { wfFrSwMcastEntry 3 }

    wfFrSwMcastDlci OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Identifies the multicast DLCI with which the IndividualDlci is associated."
        ::= { wfFrSwMcastEntry 4 }

    wfFrSwMcastIndividualDlci OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the DLCI associated with the above multicast DLCI."
        ::= { wfFrSwMcastEntry 5 }

    wfFrSwUsage	OBJECT IDENTIFIER ::= { wfFrswGroup 5 }

    wfFrSwUsageEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable FRSW billing."
        DEFVAL	{ enabled }
        ::= { wfFrSwUsage 1 }

    wfFrSwUsageVolume OBJECT-TYPE
        SYNTAX	INTEGER(0..14)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the file system volume number to which the
                billing usage data files will be written.  The volume
                number corresponds to the slot number on which the
                volume resides.
                Note: Value 0 has the special meaning that no
                      'Store' and 'Flush' operations will take
                      place.  This translates to no Billing data
                      will be written to the local file system.
                      'Update' operations will still be performed on
                      each local slot.  Full Billing statistics
                      will still be available in the wfFrSwUsageTable
                      MIB."
        ::= { wfFrSwUsage 2 }

    wfFrSwUsageVolumeBackup OBJECT-TYPE
        SYNTAX	INTEGER(0..14)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the backup volume if wfFrSwUsageVolume
                becomes inoperative.
                Note: This feature is not implemented in this release."
        ::= { wfFrSwUsage 3 }

    wfFrSwUsageDirectory OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The name of the directory where the billing usage data
                files are stored. "
        ::= { wfFrSwUsage 4 }

    wfFrSwUsageFilePrefix OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The base name of billing usage data files."
        ::= { wfFrSwUsage 5 }

    wfFrSwUsageTimerInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..60)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This number determines the timer interval (number
                of seconds) unit for the Billing process to perform
                its various timer driven tasks. i.e. updating billing
                usage data, writing billing usage data to file system
                and file system management activities."
        DEFVAL	{ 20 }
        ::= { wfFrSwUsage 6 }

    wfFrSwUsageUpdateInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This number specifies the interval (number of minutes)
                for the Billing process to collect and update billing
                usage data in the wfFrSwUsage MIB.   Note: When converted to seconds, this must be a multiple
                of wfFrSwUsageTimerInterval."
        DEFVAL	{ 10 }
        ::= { wfFrSwUsage 7 }

    wfFrSwUsageStoreInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This number specifies the interval (number of minutes)
                for the Billing process to write billing usage data on
                to the file system from the wfFrSwUsage MIB.
                Note: When converted to seconds, this must be a multiple
                of wfFrSwUsageTimerInterval."
        DEFVAL	{ 10 }
        ::= { wfFrSwUsage 8 }

    wfFrSwUsageFlushInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This number specifies the interval (number of minutes)
                for the Billing process to write billing usage data on
                to the file system from the wfFrSwUsage MIB follow
                by zeroing the wfFrSwUsage MIB.
                Note: When converted to seconds, this must be a multiple of
                wfFrSwUsageTimerInterval."
        DEFVAL	{ 60 }
        ::= { wfFrSwUsage 9 }

    wfFrSwUsageCleanupInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the interval (number of minutes) for the Billing
                process to check and delete old billing usage data files.
                Note: When converted to seconds, this must be a multilple
                of wfFrSwUsageTimerInterval."
        DEFVAL	{ 60 }
        ::= { wfFrSwUsage 10 }

    wfFrSwUsageLocalTimeZone OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates local time zone of the switch"
        ::= { wfFrSwUsage 11 }

    wfFrSwUsageUpdateTimeStamp OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time stamp of last wfFrSwUsageUpdateInterval timer
                expiration or the starting time of the current
                wfFrSwUsageUpdateInterval.  This value is number
                of seconds since midnight Jan 1, 1976 (GMT)."
        ::= { wfFrSwUsage 12 }

    wfFrSwUsageStoreTimeStamp OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time stamp of last wfFrSwUsageStoreInterval
                timer expiration or the starting time of the current
                wfFrSwUsageStoreInterval.  This value is number
                of seconds since midnight Jan. 1, 1976 (GMT).   "
        ::= { wfFrSwUsage 13 }

    wfFrSwUsageFlushTimeStamp OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time stamp of last wfFrSwUsageFlushInterval
                timer expiration or the starting time of the current
                wfFrSwUsageFlushInterval.  This value is
                number of seconds since midnight Jan. 1, 1976 (GMT)."
        ::= { wfFrSwUsage 14 }

    wfFrSwUsageCleanupTimeStamp OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time stamp of last wfFrSwUsageCleanupInterval
                timer expiration or the starting time of the current
                wfFrSwUsageCleanupInterval.  This value is number
                of seconds since midnight Jan. 1, 1976 (GMT)."
        ::= { wfFrSwUsage 15 }

    wfFrSwUsageUpdateData OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Setting this attribute to a non-zero value will cause
                an immediate updating of the billing usage data.
                Once activated, this attribute should be reset to zero
                to allow subsequent activations.  "
        ::= { wfFrSwUsage 16 }

    wfFrSwUsageStoreData OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Setting this attribute to a non-zero value will cause
                an immediate updating and writing of the billing
                usage data. Once activated, this attribute should
                be reset to zero to allow subsequent activations. "
        ::= { wfFrSwUsage 17 }

    wfFrSwUsageFlushData OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Setting this attribute to a non-zero value will cause
                an immediate updating and writing of the billing usage
                data and followed by zeroing the wfFrSwBillingUsage
                MIB. Once activated, this attribute should be reset
                to zero to allow subsequent activations. "
        ::= { wfFrSwUsage 18 }

    wfFrSwUsageFileCleanup OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Setting this attribute to a non-zero value will cause
                an immediate checking and deleting old billing usage
                data files. Once activated, this attribute should
                be reset to zero to allow subsequent activations. "
        ::= { wfFrSwUsage 19 }

    wfFrSwUsageState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current state FRSW billing."
        DEFVAL	{ notpresent }
        ::= { wfFrSwUsage 20 }

    wfFrSwUsageCurVolume OBJECT-TYPE
        SYNTAX	INTEGER(0..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current file system volume number used. This
                number is the same as wfFrSwUsageVolume except
                when the user sets wfFrSwUsageVolume to an
                invalid number."
        ::= { wfFrSwUsage 21 }

    wfFrSwUsageCurVolumeBackup OBJECT-TYPE
        SYNTAX	INTEGER(0..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "curent backup file system volume number used. This
                number is the same as wfFrSwUsageVolumeBackUp except
                when the user sets wfFrSwUsageVolume to an
                invalid number.
                Note: This feature is not implemented in this release."
        ::= { wfFrSwUsage 22 }

    wfFrSwUsageCurDirectory OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current directory name used. This number is the
                same as wfFrSwUsageDirectory except when the user
                sets wfFrSwUsageDirectory to an invalid name."
        ::= { wfFrSwUsage 23 }

    wfFrSwUsageCurFilePrefix OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current base file name used. This number is the
                same as wfFrSwUsageFilePrefix except when the user
                sets wfFrSwUsageFilePrefix to an invalid name."
        ::= { wfFrSwUsage 24 }

    wfFrSwUsageCurTimerInterval OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(20)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current timer interval number used. This number is
                the same as wfFrSwUsageTimerInterval except when the
                user sets wfFrSwUsageTimerInterval to an invalid value."
        DEFVAL	{ default }
        ::= { wfFrSwUsage 25 }

    wfFrSwUsageCurUpdateInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current update interval number used. This number is
                the same as wfFrSwUsageUpdateInterval except when the
                user sets wfFrSwUsageUpdateInterval to an invalid value."
        DEFVAL	{ 10 }
        ::= { wfFrSwUsage 26 }

    wfFrSwUsageCurStoreInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current store timer interval number used. This
                number is the same as wfFrSwUsageStoreInterval
                except when the user sets wfFrSwUsageStoreInterval
                to an invalid value."
        DEFVAL	{ 10 }
        ::= { wfFrSwUsage 27 }

    wfFrSwUsageCurFlushInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current flush timer interval number used. This
                number is the same as wfFrSwUsageFlushInterval
                except when the user sets wfFrSwUsageFlushInterval
                to an invalid value."
        DEFVAL	{ 60 }
        ::= { wfFrSwUsage 28 }

    wfFrSwUsageCurCleanupInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current file cleanup timer interval number used. This
                number is the same as wfFrSwUsageCleanupInterval
                except when the user sets wfFrSwUsageCleanupInterval
                to an invalid value."
        DEFVAL	{ 60 }
        ::= { wfFrSwUsage 29 }

    wfFrSwUsageDebug OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable printing of debug edl (trap)
                messages.
                NOTE:  Do not enable this attribute in operational enviornment
                       as it will likely flood the logging facility.  This
                       attribute is reserved for specialized debugging in a
                       controlled lab enviornment."
        DEFVAL	{ disabled }
        ::= { wfFrSwUsage 30 }

    wfFrSwUsageCurDebug OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current debug value used. This value is the
                same as wfFrSwUsageDebug except when the user
                sets wfFrSwUsageDeubg to an invalid value."
        DEFVAL	{ disabled }
        ::= { wfFrSwUsage 31 }

    wfFrSwUsageSwitchId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "switch id used in the billing usage data file."
        ::= { wfFrSwUsage 32 }

    wfFrSwUsageNumEntries OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of entries in wfFrSwUsageTable"
        ::= { wfFrSwUsage 33 }

    wfFrSwUsageTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFrSwUsageEntry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "The Billing usage table."
        ::= { wfFrswGroup 6 }

    wfFrSwUsageEntry OBJECT-TYPE
        SYNTAX	WfFrSwUsageEntry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "The parameters for Billing Usage."
        INDEX	{ wfFrSwUsageCircuitNumber,
    		  wfFrSwUsageDlci }
        ::= { wfFrSwUsageTable 1 }

    WfFrSwUsageEntry ::= SEQUENCE {
    	    wfFrSwUsageDelete
    		INTEGER,
    	    wfFrSwUsageCircuitNumber
    		INTEGER,
    	    wfFrSwUsageDlci
    		INTEGER,
    	    wfFrSwUsageIPAddress
    		IpAddress,
    	    wfFrSwUsageStartTimeStampHigh
    		INTEGER,
    	    wfFrSwUsageStartTimeStampLow
    		INTEGER,
    	    wfFrSwUsageEndTimeStampHigh
    		INTEGER,
    	    wfFrSwUsageEndTimeStampLow
    		INTEGER,
    	    wfFrSwUsageSentNonDEFramesHigh
    		INTEGER,
    	    wfFrSwUsageSentNonDEFramesLow
    		INTEGER,
    	    wfFrSwUsageSentNonDEOctetsHigh
    		INTEGER,
    	    wfFrSwUsageSentNonDEOctetsLow
    		INTEGER,
    	    wfFrSwUsageSentDEFramesHigh
    		INTEGER,
    	    wfFrSwUsageSentDEFramesLow
    		INTEGER,
    	    wfFrSwUsageSentDEOctetsHigh
    		INTEGER,
    	    wfFrSwUsageSentDEOctetsLow
    		INTEGER,
    	    wfFrSwUsageLastNonDEFramesHigh
    		INTEGER,
    	    wfFrSwUsageLastNonDEFramesLow
    		INTEGER,
    	    wfFrSwUsageLastNonDEOctetsHigh
    		INTEGER,
    	    wfFrSwUsageLastNonDEOctetsLow
    		INTEGER,
    	    wfFrSwUsageLastDEFramesHigh
    		INTEGER,
    	    wfFrSwUsageLastDEFramesLow
    		INTEGER,
    	    wfFrSwUsageLastDEOctetsHigh
    		INTEGER,
    	    wfFrSwUsageLastDEOctetsLow
    		INTEGER,
    	    wfFrSwUsageRemoteIPAddress
    		IpAddress,
    	    wfFrSwUsageRemoteDlci
    		INTEGER
        }

    wfFrSwUsageDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Indicates status of this entry. FRSW_USAGE_CREATED
                is the normal case.  FRSW_USAGE_DELETED means the
                corresponding tuple and vc instances were deleted
                some time during this collection interval.  This
                billing instance will be deleted at the end of
                the next wfFrSwUsageFlush period after this
                billing record is written out to the file system."
        DEFVAL	{ created }
        ::= { wfFrSwUsageEntry 1 }

    wfFrSwUsageCircuitNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Instance identifier; the circuit number of this
                interface. "
        ::= { wfFrSwUsageEntry 2 }

    wfFrSwUsageDlci OBJECT-TYPE
        SYNTAX	INTEGER {
    		    twobyteminimum(16),
    		    twobytemaximum(1007),
    		    threebyteminimum(1024),
    		    threebytemaximum(64511),
    		    fourbyteminimum(131072),
    		    fourbytemaximum(8257535)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Instance identifier; this indicates which virtual
                circuit. "
        ::= { wfFrSwUsageEntry 3 }

    wfFrSwUsageIPAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "(Local) IP address corresponding to
                wfFrSwUsageCircuitNumber of this virtual circuit. "
        ::= { wfFrSwUsageEntry 4 }

    wfFrSwUsageStartTimeStampHigh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Time stamp of the starting time (the high 32 bits)
                of last billing usage interval.  This value is the
                number of 1/100th seconds since midnight Jan 1, 1976 (GMT)."
        ::= { wfFrSwUsageEntry 5 }

    wfFrSwUsageStartTimeStampLow OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Time stamp of the starting time (the low 32 bits)
                of last billing usage interval.  This value is the
                number of 1/100th seconds since midnight Jan 1, 1976 (GMT)."
        ::= { wfFrSwUsageEntry 6 }

    wfFrSwUsageEndTimeStampHigh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Time stamp of the ending time (the high 32 bits)
                of last billing usage interval.  This value is the
                number of 1/100th seconds since midnight Jan 1, 1976 (GMT)."
        ::= { wfFrSwUsageEntry 7 }

    wfFrSwUsageEndTimeStampLow OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Time stamp of the ending time (the low 32 bits)
                of last billing usage interval.  This value is the
                number of 1/100th seconds since midnight Jan 1, 1976 (GMT)."
        ::= { wfFrSwUsageEntry 8 }

    wfFrSwUsageSentNonDEFramesHigh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Number (the high 32 bits) of local frames sent
                from this virtual circuit between
                wfFrSwUsageStartTimeStamp and
                wfFrSwUsageEndTimeStamp."
        ::= { wfFrSwUsageEntry 9 }

    wfFrSwUsageSentNonDEFramesLow OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Number (the low 32 bits) of local frames sent
                from this virtual circuit between
                wfFrSwUsageStartTimeStamp
                and wfFrSwUsageEndTimeStamp."
        ::= { wfFrSwUsageEntry 10 }

    wfFrSwUsageSentNonDEOctetsHigh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Number (the high 32 bits) of local octets sent from
                this virtual circuit between
                wfFrSwUsageStartTimeStamp and
                wfFrSwUsageEndTimeStamp."
        ::= { wfFrSwUsageEntry 11 }

    wfFrSwUsageSentNonDEOctetsLow OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Number (the low 32 bits) of local octets sent from
                this virtual circuit between
                wfFrSwUsageStartTimeStamp and
                wfFrSwUsageEndTimeStamp."
        ::= { wfFrSwUsageEntry 12 }

    wfFrSwUsageSentDEFramesHigh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Number (the high 32 bits) of local frames with DE
                bit sent from this virtual circuit between
                wfFrSwUsageStartTimeStamp and
                wfFrSwUsageEndTimeStamp."
        ::= { wfFrSwUsageEntry 13 }

    wfFrSwUsageSentDEFramesLow OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Number (the low 32 bits) of local frames with DE
                bit sent from this virtual circuit between
                wfFrSwUsageStartTimeStamp
                and wfFrSwUsageEndTimeStamp."
        ::= { wfFrSwUsageEntry 14 }

    wfFrSwUsageSentDEOctetsHigh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Number (the high 32 bits) of local octets with
                DE bit sent from this virtual circuit between
                wfFrSwUsageStartTimeStamp and
                wfFrSwUsageEndTimeStamp."
        ::= { wfFrSwUsageEntry 15 }

    wfFrSwUsageSentDEOctetsLow OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Number (the low 32 bits) of local octets with
                DE bit sent from this virtual circuit between
                wfFrSwUsageStartTimeStamp and
                wfFrSwUsageEndTimeStamp."
        ::= { wfFrSwUsageEntry 16 }

    wfFrSwUsageLastNonDEFramesHigh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The (high 32 bits) value of
                wfFrSwCctLocalSentNonDEFrames value at
                wfFrSwUsageEndTimeStamp.
                Note:  Since wfFrSwCctLocalSentNonDEFrames
                is a 32-bit COUNTER, this is really a counter
                keeping track of number of times
                wfFrSwCctLocalSentNonDEFrames has wrapped
                around."
        ::= { wfFrSwUsageEntry 17 }

    wfFrSwUsageLastNonDEFramesLow OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The (low 32 bits) value of
                wfFrSwCctLocalSentNonDEFrames value at
                wfFrSwUsageEndTimeStamp.  "
        ::= { wfFrSwUsageEntry 18 }

    wfFrSwUsageLastNonDEOctetsHigh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The (high 32 bits) value of
                wfFrSwCctLocalSentNonDEOctets value at
                wfFrSwUsageEndTimeStamp.
                Note:  Since wfFrSwCctLocalSentNonDEOctets
                is a 32-bit COUNTER, this is really a counter
                keeping track of number of times
                wfFrSwCctLocalSentNonDEOctets has wrapped around."
        ::= { wfFrSwUsageEntry 19 }

    wfFrSwUsageLastNonDEOctetsLow OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The (low 32 bits) value of
                wfFrSwCctLocalSentNonDEOctets value at
                wfFrSwUsageEndTimeStamp.  "
        ::= { wfFrSwUsageEntry 20 }

    wfFrSwUsageLastDEFramesHigh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The (high 32 bits) value of
                wfFrSwCctLocalSentDEFrames value at
                wfFrSwUsageEndTimeStamp.
                Note:  Since wfFrSwCctLocalSentNonDEFrames
                is a 32-bit COUNTER, this is really a counter
                keeping track of number of times
                wfFrSwCctLocalSentDEFrames has wrapped
                around."
        ::= { wfFrSwUsageEntry 21 }

    wfFrSwUsageLastDEFramesLow OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The (low 32 bits) value of
                wfFrSwCctLocalSentDEFrames value at
                wfFrSwUsageEndTimeStamp.  "
        ::= { wfFrSwUsageEntry 22 }

    wfFrSwUsageLastDEOctetsHigh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The (high 32 bits) value of
                wfFrSwCctLocalSentDEOctets value
                at wfFrSwUsageEndTimeStamp.
                Note:  Since wfFrSwCctLocalSentDEOctets
                is a 32-bit COUNTER, this is really a counter
                keeping track of number of times
                wfFrSwCctLocalSentDEOctets has wrapped around."
        ::= { wfFrSwUsageEntry 23 }

    wfFrSwUsageLastDEOctetsLow OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The (low 32 bits) value of
                wfFrSwCctLocalSentDEOctets value
                at wfFrSwUsageEndTimeStamp.  "
        ::= { wfFrSwUsageEntry 24 }

    wfFrSwUsageRemoteIPAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "IP address of the other side (remote) of this PVC endpoint."
        ::= { wfFrSwUsageEntry 25 }

    wfFrSwUsageRemoteDlci OBJECT-TYPE
        SYNTAX	INTEGER {
    		    twobyteminimum(16),
    		    twobytemaximum(1007),
    		    threebyteminimum(1024),
    		    threebytemaximum(64511),
    		    fourbyteminimum(131072),
    		    fourbytemaximum(8257535)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "DLCI number of the other side (remote) of this PVC endpoint."
        ::= { wfFrSwUsageEntry 26 }

    wfFrSwVcTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFrSwVcEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Frame Relay Virtual Circuit table gives information
                about a virtual circuit."
        ::= { wfFrswGroup 7 }

    wfFrSwVcEntry OBJECT-TYPE
        SYNTAX	WfFrSwVcEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Frame Relay (Virtual) Circuit table."
        INDEX	{ wfFrSwVcCircuit,
    		  wfFrSwVcDlci }
        ::= { wfFrSwVcTable 1 }

    WfFrSwVcEntry ::= SEQUENCE {
    	    wfFrSwVcDelete
    		INTEGER,
    	    wfFrSwVcCircuit
    		INTEGER,
    	    wfFrSwVcDlci
    		INTEGER,
    	    wfFrSwVcState
    		INTEGER,
    	    wfFrSwVcStateSet
    		INTEGER,
    	    wfFrSwVcMulticast
    		INTEGER,
    	    wfFrSwVcInBe
    		INTEGER,
    	    wfFrSwVcOutBe
    		INTEGER,
    	    wfFrSwVcInThroughput
    		INTEGER,
    	    wfFrSwVcOutThroughput
    		INTEGER,
    	    wfFrSwVcOutBc
    		INTEGER,
    	    wfFrSwVcInBc
    		INTEGER,
    	    wfFrSwVcInBcOctets
    		INTEGER,
    	    wfFrSwVcBecnState
    		INTEGER,
    	    wfFrSwVcReportedStatus
    		INTEGER,
    	    wfFrSwVcReceivedStatus
    		INTEGER,
    	    wfFrSwVcCrossNetStatus
    		INTEGER,
    	    wfFrSwVcXNetSent
    		INTEGER,
    	    wfFrSwVcXNetReceived
    		INTEGER,
    	    wfFrSwVcCalledIpAddr
    		IpAddress,
    	    wfFrSwVcCalledDlci
    		INTEGER,
    	    wfFrSwVcTrfPriority
    		INTEGER,
    	    wfFrSwVcCreationTime
    		TimeTicks,
    	    wfFrSwVcLastTimeChange
    		TimeTicks,
    	    wfFrSwVcTxNonDeFrames
    		Counter,
    	    wfFrSwVcTxNonDeOctets
    		Counter,
    	    wfFrSwVcTxDeFrames
    		Counter,
    	    wfFrSwVcTxDeOctets
    		Counter,
    	    wfFrSwVcSetFecnFrames
    		Counter,
    	    wfFrSwVcSetFecnOctets
    		Counter,
    	    wfFrSwVcSetBecnFrames
    		Counter,
    	    wfFrSwVcSetBecnOctets
    		Counter,
    	    wfFrSwVcSetDeFrames
    		Counter,
    	    wfFrSwVcSetDeOctets
    		Counter,
    	    wfFrSwVcDropNonDeFrames
    		Counter,
    	    wfFrSwVcDropNonDeOctets
    		Counter,
    	    wfFrSwVcDropDeFrames
    		Counter,
    	    wfFrSwVcDropDeOctets
    		Counter,
    	    wfFrSwVcInactiveVcDropFrames
    		Counter,
    	    wfFrSwVcInactiveVcDropOctets
    		Counter,
    	    wfFrSwVcRecvNonDeFrames
    		Counter,
    	    wfFrSwVcRecvNonDeOctets
    		Counter,
    	    wfFrSwVcRecvDeFrames
    		Counter,
    	    wfFrSwVcRecvDeOctets
    		Counter,
    	    wfFrSwVcRecvFecnFrames
    		Counter,
    	    wfFrSwVcRecvFecnOctets
    		Counter,
    	    wfFrSwVcRecvBecnFrames
    		Counter,
    	    wfFrSwVcRecvBecnOctets
    		Counter,
    	    wfFrSwVcRecentNonDeOctets
    		Counter,
    	    wfFrSwVcXNetErrors
    		Counter,
    	    wfFrSwVcDropExcessBurstFrames
    		Counter,
    	    wfFrSwVcDropExcessBurstOctets
    		Counter
        }

    wfFrSwVcDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2),
    		    system(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to delete this virtual circuit."
        DEFVAL	{ created }
        ::= { wfFrSwVcEntry 1 }

    wfFrSwVcCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier; the circuit number of this interface
                (logical port)."
        ::= { wfFrSwVcEntry 2 }

    wfFrSwVcDlci OBJECT-TYPE
        SYNTAX	INTEGER {
    		    twobyteminimum(16),
    		    twobytemaximum(1007),
    		    threebyteminimum(1024),
    		    threebytemaximum(64511),
    		    fourbyteminimum(131072),
    		    fourbytemaximum(8257535)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier; this indicates the virtual
                circuit identifier"
        ::= { wfFrSwVcEntry 3 }

    wfFrSwVcState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    invalid(1),
    		    active(2),
    		    inactive(3),
    		    control(4),
    		    user(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the particular virtual circuit is
                operational."
        DEFVAL	{ invalid }
        ::= { wfFrSwVcEntry 4 }

    wfFrSwVcStateSet OBJECT-TYPE
        SYNTAX	INTEGER {
    		    inactive(1),
    		    active(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "User access for setting the state of a virtual circuit"
        DEFVAL	{ active }
        ::= { wfFrSwVcEntry 5 }

    wfFrSwVcMulticast OBJECT-TYPE
        SYNTAX	INTEGER {
    		    multicast(1),
    		    unicast(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this dlci is used for multicast
                or a single destination."
        DEFVAL	{ unicast }
        ::= { wfFrSwVcEntry 6 }

    wfFrSwVcInBe OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the Incoming Excess Burst bits
                for this virtual circuit."
        DEFVAL	{ 2147483647 }
        ::= { wfFrSwVcEntry 7 }

    wfFrSwVcOutBe OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the Outgoing Excess Burst bits
                for this virtual circuit."
        ::= { wfFrSwVcEntry 8 }

    wfFrSwVcInThroughput OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the incoming throughput in bits/sec
                for this virtual circuit."
        ::= { wfFrSwVcEntry 9 }

    wfFrSwVcOutThroughput OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the outgoing throughput in bits/sec
                for this virtual circuit."
        ::= { wfFrSwVcEntry 10 }

    wfFrSwVcOutBc OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the Outgoing Committed Burst bits
                for this virtual circuit."
        ::= { wfFrSwVcEntry 11 }

    wfFrSwVcInBc OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the Incoming Committed Burst bits
                for this virtual circuit."
        ::= { wfFrSwVcEntry 12 }

    wfFrSwVcInBcOctets OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the Incoming Committed Burst in octets
                for this virtual circuit."
        ::= { wfFrSwVcEntry 13 }

    wfFrSwVcBecnState OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the BECN state"
        ::= { wfFrSwVcEntry 14 }

    wfFrSwVcReportedStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    acked(1),
    		    unacked(2),
    		    unreported(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Record keeping for circuit status"
        DEFVAL	{ unreported }
        ::= { wfFrSwVcEntry 15 }

    wfFrSwVcReceivedStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    inactive(1),
    		    active(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "State of a virtual circuit as reported by the network at an NNI"
        DEFVAL	{ active }
        ::= { wfFrSwVcEntry 16 }

    wfFrSwVcCrossNetStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    inactive(1),
    		    active(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "State of a virtual circuit as reported by
                the other end of the network under
                bidirectional signalling."
        DEFVAL	{ active }
        ::= { wfFrSwVcEntry 17 }

    wfFrSwVcXNetSent OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unsent(1),
    		    sent(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Whether we have sent a cross net status
                message for this VC yet."
        DEFVAL	{ unsent }
        ::= { wfFrSwVcEntry 18 }

    wfFrSwVcXNetReceived OBJECT-TYPE
        SYNTAX	INTEGER {
    		    recv(1),
    		    unrecv(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Whether we have received a cross net status
                message for this VC during the current
                polling interval."
        DEFVAL	{ unrecv }
        ::= { wfFrSwVcEntry 19 }

    wfFrSwVcCalledIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the IP address associated with
                destination of a virtual circuit."
        ::= { wfFrSwVcEntry 20 }

    wfFrSwVcCalledDlci OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the DLCI associated with
                destination of a virtual circuit."
        ::= { wfFrSwVcEntry 21 }

    wfFrSwVcTrfPriority OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    default(999)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the traffic priority level of all the
                incoming packets on this VC.
                FRSW_VCPRIORITY_DEFAULT - Set all incoming user
                traffic packets to the default priority used by the port.
                FRSW_VCPRIORITY_ONE - Set all incoming packets to priority 1.
                FRSW_VCPRIORITY_TWO - Set all incoming packets to priority 2.
                FRSW_VCPRIORITY_THREE - Set all incoming packets to priority 3.
                Priority 0 is reserved for network critical packets like
                OSPF, FR LMI and SMDS heartbeat and is not available for
                user traffic."
        DEFVAL	{ default }
        ::= { wfFrSwVcEntry 22 }

    wfFrSwVcCreationTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the value of sysUpTime when the VC
                was created."
        ::= { wfFrSwVcEntry 23 }

    wfFrSwVcLastTimeChange OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the value of sysUpTime when last
                there was a change in VC state."
        ::= { wfFrSwVcEntry 24 }

    wfFrSwVcTxNonDeFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames without the
                DE bit sent on this virtual circuit over
                the interface."
        ::= { wfFrSwVcEntry 25 }

    wfFrSwVcTxNonDeOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of octets without DE bit
                sent on this virtual circuit over the interface."
        ::= { wfFrSwVcEntry 26 }

    wfFrSwVcTxDeFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames with DE bit
                set sent on this virtual circuit over the interface."
        ::= { wfFrSwVcEntry 27 }

    wfFrSwVcTxDeOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of octets with DE bit set
                sent on this virtual circuit over the interface."
        ::= { wfFrSwVcEntry 28 }

    wfFrSwVcSetFecnFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames sent to the
                interface on which this switch set the FECN bit."
        ::= { wfFrSwVcEntry 29 }

    wfFrSwVcSetFecnOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of octets in frames sent
                to the interface on which this switch set the
                FECN bit."
        ::= { wfFrSwVcEntry 30 }

    wfFrSwVcSetBecnFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames sent to the
                interface on which this switch set the BECN bit."
        ::= { wfFrSwVcEntry 31 }

    wfFrSwVcSetBecnOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of octets in frames sent to the
                interface on which this switch set the BECN bit."
        ::= { wfFrSwVcEntry 32 }

    wfFrSwVcSetDeFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames sent to the
                interface on which this switch set the DE bit."
        ::= { wfFrSwVcEntry 33 }

    wfFrSwVcSetDeOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of octets in frames sent to the
                interface on which this switch set the DE bit."
        ::= { wfFrSwVcEntry 34 }

    wfFrSwVcDropNonDeFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames received over the
                interface which were discarded, excluding any frames
                with the DE bit set."
        ::= { wfFrSwVcEntry 35 }

    wfFrSwVcDropNonDeOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of octets in frames received over
                the interface which were discarded, excluding any
                frames with the DE bit set."
        ::= { wfFrSwVcEntry 36 }

    wfFrSwVcDropDeFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames received over the
                interface, having the DE bit set, which were discarded."
        ::= { wfFrSwVcEntry 37 }

    wfFrSwVcDropDeOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of octets in frames received over
                the interface, having the DE bit set, which
                were discarded."
        ::= { wfFrSwVcEntry 38 }

    wfFrSwVcInactiveVcDropFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates how many frames were discarded because the
                virtual circuit was inactive."
        ::= { wfFrSwVcEntry 39 }

    wfFrSwVcInactiveVcDropOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates how many Octets were discarded because the
                virtual circuit was inactive."
        ::= { wfFrSwVcEntry 40 }

    wfFrSwVcRecvNonDeFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames received on this
                virtual circuit over the interface."
        ::= { wfFrSwVcEntry 41 }

    wfFrSwVcRecvNonDeOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of octets received on
                this virtual circuit over the interface."
        ::= { wfFrSwVcEntry 42 }

    wfFrSwVcRecvDeFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames received over the
                interface with the DE bit set."
        ::= { wfFrSwVcEntry 43 }

    wfFrSwVcRecvDeOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of octets in frames received
                over the interface with the DE bit set."
        ::= { wfFrSwVcEntry 44 }

    wfFrSwVcRecvFecnFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames received over the
                interface with the FECN bit set."
        ::= { wfFrSwVcEntry 45 }

    wfFrSwVcRecvFecnOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of octets in frames received
                over the interface with the FECN bit set."
        ::= { wfFrSwVcEntry 46 }

    wfFrSwVcRecvBecnFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of frames received over the
                interface with the BECN bit set."
        ::= { wfFrSwVcEntry 47 }

    wfFrSwVcRecvBecnOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of octets in frames received
                over the interface with the BECN bit set."
        ::= { wfFrSwVcEntry 48 }

    wfFrSwVcRecentNonDeOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of octets received over the
                interface during the most recent sampling period."
        ::= { wfFrSwVcEntry 49 }

    wfFrSwVcXNetErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the count of the consecutive errors
                (usually timeouts) against this VC in cross-network
                heartbeat polling."
        ::= { wfFrSwVcEntry 50 }

    wfFrSwVcDropExcessBurstFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of Excess Burst Frames dropped
                on this virtual circuit."
        ::= { wfFrSwVcEntry 51 }

    wfFrSwVcDropExcessBurstOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of Excess Burst Octets dropped
                on this virtual circuit."
        ::= { wfFrSwVcEntry 52 }

    wfFrSwIsdnBaseTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFrSwIsdnBaseEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"This is a FRSW over ISDN configuration table.  This
		 table specifies whether the Calling Party (ANI) or Called
		 Party (DNIS) ISDN Phone Number should be used to map
		 the ISDN call to a particular FRSW UNI.  The table is
		 indexed by the Slot Number where the PRI(s) exist."
	::= { wfFrswGroup 8 }

    wfFrSwIsdnBaseEntry OBJECT-TYPE
	SYNTAX	WfFrSwIsdnBaseEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"Instance Id for this table."
	INDEX	{ wfFrSwIsdnBaseSlotNum }
	::= { wfFrSwIsdnBaseTable 1 }

    WfFrSwIsdnBaseEntry ::= SEQUENCE {
	wfFrSwIsdnBaseDelete
		INTEGER,
	wfFrSwIsdnBaseSlotNum
		INTEGER,
	wfFrSwIsdnBaseAssocType
		INTEGER
      }

    wfFrSwIsdnBaseDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Indication to delete this FRSW ISDN interface. "
	DEFVAL	{ created }
	::= { wfFrSwIsdnBaseEntry 1 }

    wfFrSwIsdnBaseSlotNum OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This number is the Slot Number for the PRI interface(s)
		 that are being configured for FRSW ISDN.  There will be
		 one of these tables for every slot where an FRSW ISDN
		 PRI Interface exists."
	::= { wfFrSwIsdnBaseEntry 2 }

    wfFrSwIsdnBaseAssocType OBJECT-TYPE
	SYNTAX	INTEGER {
		dnis(1),
		ani(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Indicates which ISDN Phone Number (ANI or DNIS)
		 to use to do the ISDN call to FRSW UNI mapping."
	DEFVAL	{ dnis }
	::= { wfFrSwIsdnBaseEntry 3 }

    wfFrSwIsdnAssocTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFrSwIsdnAssocEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"This table defines the Association Table
		 to be used for the FRSW over ISDN application.
		 The table contains a list of ISDN Phone
		 Numbers and the associated FRSW UNI Index Number.
		 The table is indexed by the Slot Number and the
		 ISDN Phone Number."
	::= { wfFrswGroup 9 }

    wfFrSwIsdnAssocEntry OBJECT-TYPE
	SYNTAX	WfFrSwIsdnAssocEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"Instance Id for this table."
	INDEX	{ wfFrSwIsdnAssocSlotNum,
		wfFrSwIsdnAssocNum }
	::= { wfFrSwIsdnAssocTable 1 }

    WfFrSwIsdnAssocEntry ::= SEQUENCE {
	wfFrSwIsdnAssocDelete
		INTEGER,
	wfFrSwIsdnAssocSlotNum
		INTEGER,
	wfFrSwIsdnAssocNum
		OCTET STRING,
	wfFrSwIsdnAssocScrnEnable
		INTEGER,
	wfFrSwIsdnAssocIndex
		INTEGER
      }

    wfFrSwIsdnAssocDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Indication to delete this Association Instance."
	DEFVAL	{ created }
	::= { wfFrSwIsdnAssocEntry 1 }

    wfFrSwIsdnAssocSlotNum OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Slot with which this ISDN Phone Number is associated."
	::= { wfFrSwIsdnAssocEntry 2 }

    wfFrSwIsdnAssocNum OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"ISDN Phone Number that is used to look up the
		 appropriate FRSW UNI Index.  This number is
		 compared with either the Calling Party Number (ANI)
		 Information Element or the Called Party Number (DNIS)
		 Information Element contained in the ISDN Call
		 Setup Message."
	::= { wfFrSwIsdnAssocEntry 3 }

    wfFrSwIsdnAssocScrnEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),
		disabled(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Indicate whether allowed screening should be
		 enabled or disabled for all of the UNIs
		 contained in the FRSW UNI Index."
	DEFVAL	{ disabled }
	::= { wfFrSwIsdnAssocEntry 4 }

    wfFrSwIsdnAssocIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"A number that indicates the FRSW UNI Index that is
		 is associated with the ISDN Phone Number.  This
		 FRSW UNI Index is used as a key to obtain the UNIs and
		 the Screening information from the wfFrSwIsdnScrnEntry and
		 wfFrSwIsdnUniEntry mibs.  The default for the index is
		 2**31 - 1 = 2147483647 = 0x7FFFFFFF, which represents
		 an unconfigured index number."
        DEFVAL { 2147483647 }
	::= { wfFrSwIsdnAssocEntry 5 }

    wfFrSwIsdnUniTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFrSwIsdnUniEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"This table is used by the FRSW over ISDN
		 application.  The table defines a list
		 of FRSW UNIs that are to be collected into
		 a hunt group identifiable by an Index Number."
	::= { wfFrswGroup 10 }

    wfFrSwIsdnUniEntry OBJECT-TYPE
	SYNTAX	WfFrSwIsdnUniEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"Instance Id for this table."
	INDEX	{ wfFrSwIsdnUniIndex,
		wfFrSwIsdnUniNum }
	::= { wfFrSwIsdnUniTable 1 }

    WfFrSwIsdnUniEntry ::= SEQUENCE {
	wfFrSwIsdnUniDelete
		INTEGER,
	wfFrSwIsdnUniIndex
		INTEGER,
	wfFrSwIsdnUniNum
		INTEGER
      }

    wfFrSwIsdnUniDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Indication to delete this FRSW UNI Index
		 Instance."
	DEFVAL	{ created }
	::= { wfFrSwIsdnUniEntry 1 }

    wfFrSwIsdnUniIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"FRSW UNI Index -- a number that identifies
		 a group of related FRSW UNIs that are
		 collected together as a hunt group.  This number
		 ties this entry to an entry in
		 wfFrSwIsdnAssocEntry."
	::= { wfFrSwIsdnUniEntry 2 }

    wfFrSwIsdnUniNum OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"A FRSW UNI/Circuit."
	::= { wfFrSwIsdnUniEntry 3 }

    wfFrSwIsdnScrnTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF WfFrSwIsdnScrnEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"This is the incoming call screening table
		 for the FRSW over ISDN application.  The table
		 consists of a FRSW UNI Index and a list of allowable
		 ISDN Phone numbers for that FRSW UNI Index.
		 The table is indexed by both the FRSW UNI Index
		 and the ISDN Phone Number.
                 This table is referenced only when the
		 wfFrSwIsdnAssocScrnEnable is set to
		 Enabled for this FRSW UNI Index."
	::= { wfFrswGroup 11 }

    wfFrSwIsdnScrnEntry OBJECT-TYPE
	SYNTAX	WfFrSwIsdnScrnEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" Instance Id for this table. "
	INDEX	{ wfFrSwIsdnScrnIndex,
		wfFrSwIsdnScrnNum }
	::= { wfFrSwIsdnScrnTable 1 }

    WfFrSwIsdnScrnEntry ::= SEQUENCE {
	wfFrSwIsdnScrnDelete
		INTEGER,
	wfFrSwIsdnScrnIndex
		INTEGER,
	wfFrSwIsdnScrnNum
		OCTET STRING
    }

    wfFrSwIsdnScrnDelete OBJECT-TYPE
	SYNTAX	INTEGER {
		created(1),
		deleted(2)
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		" Indication to delete this Scrn Instance. "
	DEFVAL	{ created }
	::= { wfFrSwIsdnScrnEntry 1 }

    wfFrSwIsdnScrnIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"FRSW UNI Index - A number that ties this
		 entry to an entry in wfFrSwIsdnAssocEntry."
	::= { wfFrSwIsdnScrnEntry 2 }

    wfFrSwIsdnScrnNum OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"ISDN Phone Number of a user authorized to
		 access the UNIs contained in the FRSW
		 UNI Index. "
	::= { wfFrSwIsdnScrnEntry 3 }


    END  -- Wellfleet-FRSW-MIB
-- @(#)WSCCS i/mibs-fsm.mib 1.1 8/30/95
Wellfleet-FSM-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:41:41 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfFileSystemGroup
        FROM Wellfleet-COMMON-MIB;


    wfFsBase	OBJECT IDENTIFIER ::= { wfFileSystemGroup 1 }

    wfFsVolLastUpdated OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Date and time the volume table was last updated"
        ::= { wfFsBase 1 }

    wfFsVols OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of rows in the volume table"
        ::= { wfFsBase 2 }

    wfFsVolTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFsVolEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Volume table"
        ::= { wfFileSystemGroup 2 }

    wfFsVolEntry OBJECT-TYPE
        SYNTAX	WfFsVolEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A row in the Volume table"
        INDEX	{ wfFsVolID }
        ::= { wfFsVolTable 1 }

    WfFsVolEntry ::= SEQUENCE {
    	    wfFsVolID
    		INTEGER,
    	    wfFsSlot
    		INTEGER,
    	    wfFsType
    		INTEGER,
    	    wfFsRemoveable
    		INTEGER,
    	    wfFsAccess
    		INTEGER,
    	    wfFsState
    		INTEGER,
    	    wfFsSize
    		Gauge,
    	    wfFsFreeSize
    		Gauge,
    	    wfFsContigFree
    		Gauge,
    	    wfFsNumFiles
    		Gauge,
    	    wfFsLastWritten
    		OCTET STRING,
    	    wfFsBecameActive
    		OCTET STRING,
    	    wfFsAction
    		INTEGER,
    	    wfFsActionArg
    		OBJECT IDENTIFIER,
    	    wfFsPercentDone
    		INTEGER
        }

    wfFsVolID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Volume number"
        ::= { wfFsVolEntry 1 }

    wfFsSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Processor owning the volume"
        ::= { wfFsVolEntry 2 }

    wfFsType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    dos(1),
    		    nvfs(2),
    		    unix(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Type of volume - DOS, NVFS or UNIX"
        ::= { wfFsVolEntry 3 }

    wfFsRemoveable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    remove(1),
    		    fixed(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Can this file system be removed or is it a fixed file system"
        ::= { wfFsVolEntry 4 }

    wfFsAccess OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unknown(1),
    		    readonly(2),
    		    readwrite(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Read only or read-write file system. DOS file systems are always set
                to unknown since we can't tell what the state is until we actually
                try to write to the disk."
        ::= { wfFsVolEntry 5 }

    wfFsState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ok(1),
    		    corrupt(2),
    		    busy(3),
    		    present(4),
    		    incomplete(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The state that the file system is in. If it is corrupted then it is
                unusable, if it is busy, the MIB is being updated.  Floppy not present is
                a state used in DOS only and means that the floppy isn't there or we
                couldn't mount it.  Incomplete means that we got a mount for a DOS floppy
                duing boot, but because of 30 second timeouts in DOS, we are not willing
                to take the hit during boot.  Fill in minimal information and let Site
                Manager do the 'DIR' that will fill in the rest."
        ::= { wfFsVolEntry 6 }

    wfFsSize OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Physical size in bytes"
        ::= { wfFsVolEntry 7 }

    wfFsFreeSize OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total available bytes"
        ::= { wfFsVolEntry 8 }

    wfFsContigFree OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The amount of contiguous bytes free. In DOS and UNIX, contiguous = free.
                In NVFS, this may not be true."
        ::= { wfFsVolEntry 9 }

    wfFsNumFiles OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of files on this volume"
        ::= { wfFsVolEntry 10 }

    wfFsLastWritten OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The last time a write request was written to this volume"
        ::= { wfFsVolEntry 11 }

    wfFsBecameActive OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The date and time this volume became active"
        ::= { wfFsVolEntry 12 }

    wfFsAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    dir(1),
    		    format(2),
    		    compact(3),
    		    purge(4),
    		    partcre(5),
    		    partdel(6)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "When set, performs a volume command (compact, format, dir, purge)"
        ::= { wfFsVolEntry 13 }

    wfFsActionArg OBJECT-TYPE
        SYNTAX	OBJECT IDENTIFIER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Optional argument for directory action for viewing file hierarchies"
        ::= { wfFsVolEntry 14 }

    wfFsPercentDone OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Percent of task completed"
        ::= { wfFsVolEntry 15 }

    wfFsDirBase	OBJECT IDENTIFIER ::= { wfFileSystemGroup 3 }

    wfFsDirEntries OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of entries in the directory table"
        ::= { wfFsDirBase 1 }

    wfFsDirLastUpdated OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time the directory table was last updated"
        ::= { wfFsDirBase 2 }

    wfFsDirTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFsDirEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Directory table"
        ::= { wfFileSystemGroup 5 }

    wfFsDirEntry OBJECT-TYPE
        SYNTAX	WfFsDirEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the directory table"
        INDEX	{ wfFsDirVolID,
    		  wfFsDirFileIndex }
        ::= { wfFsDirTable 1 }

    WfFsDirEntry ::= SEQUENCE {
    	    wfFsDirVolID
    		INTEGER,
    	    wfFsDirFileIndex
    		OBJECT IDENTIFIER,
    	    wfFsDirFileName
    		DisplayString,
    	    wfFsDirCreated
    		OCTET STRING,
    	    wfFsDirFileSize
    		Gauge,
    	    wfFsDirFileMask
    		Gauge
        }

    wfFsDirVolID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Volume number that this directory entry is contained on"
        ::= { wfFsDirEntry 1 }

    wfFsDirFileIndex OBJECT-TYPE
        SYNTAX	OBJECT IDENTIFIER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Hierarchical file index"
        ::= { wfFsDirEntry 2 }

    wfFsDirFileName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Name of the file"
        ::= { wfFsDirEntry 3 }

    wfFsDirCreated OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "When the file was created"
        ::= { wfFsDirEntry 4 }

    wfFsDirFileSize OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size of the file"
        ::= { wfFsDirEntry 5 }

    wfFsDirFileMask OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Access mode on file for UNIX and DOS file systems"
        ::= { wfFsDirEntry 6 }

    END  -- Wellfleet-FSM-MIB
-- @(#)WSCCS m/mibs-ftp.mib 1.1 8/30/95
Wellfleet-FTP-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:41:47 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfFtpGroup
        FROM Wellfleet-COMMON-MIB;


    wfFtp		OBJECT IDENTIFIER ::= { wfFtpGroup 1 }

    wfFtpDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform a set operation on this object
                in order to create/delete WfFTP. "
        DEFVAL	{ created }
        ::= { wfFtp 1 }

    wfFtpDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables or Disables FTP Subsystem"
        DEFVAL	{ enabled }
        ::= { wfFtp 2 }

    wfFtpDefaultVolume OBJECT-TYPE
        SYNTAX	INTEGER {
    		    volume1(1),
    		    volume2(2),
    		    volume3(3),
    		    volume4(4),
    		    volume5(5),
    		    volume6(6),
    		    volume8(8),
    		    volume9(9),
    		    volume10(10),
    		    volume11(11),
    		    volume12(12),
    		    volume13(13),
    		    volumea(65),
    		    volume1a(100),
    		    volume1b(101),
    		    volume2a(200),
    		    volume2b(201),
    		    volume3a(300),
    		    volume3b(301),
    		    volume4a(400),
    		    volume4b(401)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The file system volume number to which transferred files will
                be written and from which they will be retrieved. The volume
                number corresponds to the slot number on which the volume
                resides. On systems with a floppy disk, volumeA(65) should be
                used."
        DEFVAL	{ volume2 }
        ::= { wfFtp 3 }

    wfFtpLoginRetries OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of ftp login retries allowed after a login failure.
                Default is 3"
        DEFVAL	{ 3 }
        ::= { wfFtp 4 }

    wfFtpIdleTimeOut OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Time out in seconds to close the FTP control connection
                if the connection remains idle."
        DEFVAL	{ 900 }
        ::= { wfFtp 5 }

    wfFtpMaxSessions OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of FTP sessions allowed at one time"
        DEFVAL	{ 3 }
        ::= { wfFtp 6 }

    wfFtpType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ascii(1),
    		    binary(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Current data transmission type"
        DEFVAL	{ binary }
        ::= { wfFtp 7 }

    wfFtpCtrlIpTos OBJECT-TYPE
        SYNTAX	INTEGER {
    		    normal(1),
    		    lowdelay(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Type Of Service value set in the IP datagram specifies
                to the Internet transport layer how the datagram should
                be handled. For FTP control connection low delay is the default"
        DEFVAL	{ lowdelay }
        ::= { wfFtp 8 }

    wfFtpDataIpTos OBJECT-TYPE
        SYNTAX	INTEGER {
    		    normal(1),
    		    highthroughput(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Type Of Service value set in the IP datagram specifies
                to the Internet transport layer how the datagram should
                be handled. For FTP data transfers high throughput is the default"
        DEFVAL	{ highthroughput }
        ::= { wfFtp 9 }

    wfFtpTcpWindowSize OBJECT-TYPE
        SYNTAX	INTEGER(5000..64000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The size in bytes of the windows used for WfFTP TCP connections"
        DEFVAL	{ 60000 }
        ::= { wfFtp 10 }

    wfFtpLogins OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of attempted logins"
        ::= { wfFtp 11 }

    wfFtpManagerLoginFails OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of manager logins that failed"
        ::= { wfFtp 12 }

    wfFtpOtherLoginFails OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of logins other than manager logins that failed"
        ::= { wfFtp 13 }

    wfFtpXfers OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Transfers in Progress"
        ::= { wfFtp 14 }

    wfFtpInFiles OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of files Successfully received"
        ::= { wfFtp 15 }

    wfFtpOutFiles OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of files Successfully sent"
        ::= { wfFtp 16 }

    wfFtpInErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of errors logged during in bound transfer"
        ::= { wfFtp 17 }

    wfFtpOutErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of errors logged during out bound transfer"
        ::= { wfFtp 18 }

    wfFtpAborts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transfer aborts"
        ::= { wfFtp 19 }

    wfFtpInXferRate OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Average transfer rate in kbytes per second for receiving data"
        ::= { wfFtp 20 }

    wfFtpOutXferRate OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Average transfer rate in kbytes per second for sending data"
        ::= { wfFtp 21 }

    END  -- Wellfleet-FTP-MIB
-- @(#)WSCCS q/mibs-gamestat.mib 1.1 8/30/95
Wellfleet-GAME-STATS-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:41:52 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfGameGroup
        FROM Wellfleet-COMMON-MIB;


    wfKernelTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfKernelEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table of kernel statistics, indexed by slot number"
        ::= { wfGameGroup 1 }

    wfKernelEntry OBJECT-TYPE
        SYNTAX	WfKernelEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A particular interface"
        INDEX	{ wfKernelSlot }
        ::= { wfKernelTable 1 }

    WfKernelEntry ::= SEQUENCE {
    	    wfKernelSlot
    		INTEGER,
    	    wfKernelMemorySize
    		INTEGER,
    	    wfKernelMemoryFree
    		INTEGER,
    	    wfKernelMemorySegsTotal
    		INTEGER,
    	    wfKernelMemorySegsFree
    		INTEGER,
    	    wfKernelMemoryMaxSegFree
    		INTEGER,
    	    wfKernelBuffersTotal
    		INTEGER,
    	    wfKernelBuffersFree
    		INTEGER,
    	    wfKernelTasksTotal
    		INTEGER,
    	    wfKernelTasksInQueue
    		INTEGER,
    	    wfKernelTimersTotal
    		INTEGER,
    	    wfKernelTimersActive
    		INTEGER,
    	    wfKernelBufOwnerTask1
    		DisplayString,
    	    wfKernelBufOwnerTask1Bufs
    		INTEGER,
    	    wfKernelBufOwnerTask2
    		DisplayString,
    	    wfKernelBufOwnerTask2Bufs
    		INTEGER,
    	    wfKernelBufOwnerTask3
    		DisplayString,
    	    wfKernelBufOwnerTask3Bufs
    		INTEGER,
    	    wfKernelBufOwnerTask4
    		DisplayString,
    	    wfKernelBufOwnerTask4Bufs
    		INTEGER,
    	    wfKernelBufOwnerTask5
    		DisplayString,
    	    wfKernelBufOwnerTask5Bufs
    		INTEGER,
    	    wfKernelBufOwnerTask6
    		DisplayString,
    	    wfKernelBufOwnerTask6Bufs
    		INTEGER,
    	    wfKernelBufOwnerTask7
    		DisplayString,
    	    wfKernelBufOwnerTask7Bufs
    		INTEGER,
    	    wfKernelBufOwnerTask8
    		DisplayString,
    	    wfKernelBufOwnerTask8Bufs
    		INTEGER,
    	    wfKernelBufOwnerTask9
    		DisplayString,
    	    wfKernelBufOwnerTask9Bufs
    		INTEGER,
    	    wfKernelBufOwnerTask10
    		DisplayString,
    	    wfKernelBufOwnerTask10Bufs
    		INTEGER,
    	    wfKernelMemOwnerTask1
    		DisplayString,
    	    wfKernelMemOwnerTask1Size
    		INTEGER,
    	    wfKernelMemOwnerTask2
    		DisplayString,
    	    wfKernelMemOwnerTask2Size
    		INTEGER,
    	    wfKernelMemOwnerTask3
    		DisplayString,
    	    wfKernelMemOwnerTask3Size
    		INTEGER,
    	    wfKernelMemOwnerTask4
    		DisplayString,
    	    wfKernelMemOwnerTask4Size
    		INTEGER,
    	    wfKernelMemOwnerTask5
    		DisplayString,
    	    wfKernelMemOwnerTask5Size
    		INTEGER,
    	    wfKernelMemOwnerTask6
    		DisplayString,
    	    wfKernelMemOwnerTask6Size
    		INTEGER,
    	    wfKernelMemOwnerTask7
    		DisplayString,
    	    wfKernelMemOwnerTask7Size
    		INTEGER,
    	    wfKernelMemOwnerTask8
    		DisplayString,
    	    wfKernelMemOwnerTask8Size
    		INTEGER,
    	    wfKernelMemOwnerTask9
    		DisplayString,
    	    wfKernelMemOwnerTask9Size
    		INTEGER,
    	    wfKernelMemOwnerTask10
    		DisplayString,
    	    wfKernelMemOwnerTask10Size
    		INTEGER,
    	    wfKernelAliasBuffsDropped
    		INTEGER
        }

    wfKernelSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The slot number indexes the kernel statistics table"
        ::= { wfKernelEntry 1 }

    wfKernelMemorySize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total size of allocatable memory, in bytes"
        ::= { wfKernelEntry 2 }

    wfKernelMemoryFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The amount of memory which hasn't been allocated yet, in bytes"
        ::= { wfKernelEntry 3 }

    wfKernelMemorySegsTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of memory segments in the kernel"
        ::= { wfKernelEntry 4 }

    wfKernelMemorySegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated memory segments in the kernel"
        ::= { wfKernelEntry 5 }

    wfKernelMemoryMaxSegFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size of the largest unallocated memory segment"
        ::= { wfKernelEntry 6 }

    wfKernelBuffersTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of packet buffers"
        ::= { wfKernelEntry 7 }

    wfKernelBuffersFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packet buffers in the free pool"
        ::= { wfKernelEntry 8 }

    wfKernelTasksTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of tasks running"
        ::= { wfKernelEntry 9 }

    wfKernelTasksInQueue OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of tasks awaiting scheduling"
        ::= { wfKernelEntry 10 }

    wfKernelTimersTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of timers available"
        ::= { wfKernelEntry 11 }

    wfKernelTimersActive OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of timers in use by tasks"
        ::= { wfKernelEntry 12 }

    wfKernelBufOwnerTask1 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns many buffers"
        ::= { wfKernelEntry 13 }

    wfKernelBufOwnerTask1Bufs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of buffers owned by the task"
        ::= { wfKernelEntry 14 }

    wfKernelBufOwnerTask2 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns many buffers"
        ::= { wfKernelEntry 15 }

    wfKernelBufOwnerTask2Bufs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of buffers owned by the task"
        ::= { wfKernelEntry 16 }

    wfKernelBufOwnerTask3 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns many buffers"
        ::= { wfKernelEntry 17 }

    wfKernelBufOwnerTask3Bufs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of buffers owned by the task"
        ::= { wfKernelEntry 18 }

    wfKernelBufOwnerTask4 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns many buffers"
        ::= { wfKernelEntry 19 }

    wfKernelBufOwnerTask4Bufs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of buffers owned by the task"
        ::= { wfKernelEntry 20 }

    wfKernelBufOwnerTask5 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns many buffers"
        ::= { wfKernelEntry 21 }

    wfKernelBufOwnerTask5Bufs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of buffers owned by the task"
        ::= { wfKernelEntry 22 }

    wfKernelBufOwnerTask6 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns many buffers"
        ::= { wfKernelEntry 23 }

    wfKernelBufOwnerTask6Bufs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of buffers owned by the task"
        ::= { wfKernelEntry 24 }

    wfKernelBufOwnerTask7 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns many buffers"
        ::= { wfKernelEntry 25 }

    wfKernelBufOwnerTask7Bufs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of buffers owned by the task"
        ::= { wfKernelEntry 26 }

    wfKernelBufOwnerTask8 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns many buffers"
        ::= { wfKernelEntry 27 }

    wfKernelBufOwnerTask8Bufs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of buffers owned by the task"
        ::= { wfKernelEntry 28 }

    wfKernelBufOwnerTask9 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns many buffers"
        ::= { wfKernelEntry 29 }

    wfKernelBufOwnerTask9Bufs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of buffers owned by the task"
        ::= { wfKernelEntry 30 }

    wfKernelBufOwnerTask10 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns many buffers"
        ::= { wfKernelEntry 31 }

    wfKernelBufOwnerTask10Bufs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of buffers owned by the task"
        ::= { wfKernelEntry 32 }

    wfKernelMemOwnerTask1 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns a sizable amount of memory"
        ::= { wfKernelEntry 33 }

    wfKernelMemOwnerTask1Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Amount of memory owned by the task"
        ::= { wfKernelEntry 34 }

    wfKernelMemOwnerTask2 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns a sizable amount of memory"
        ::= { wfKernelEntry 35 }

    wfKernelMemOwnerTask2Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Amount of memory owned by the task"
        ::= { wfKernelEntry 36 }

    wfKernelMemOwnerTask3 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns a sizable amount of memory"
        ::= { wfKernelEntry 37 }

    wfKernelMemOwnerTask3Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Amount of memory owned by the task"
        ::= { wfKernelEntry 38 }

    wfKernelMemOwnerTask4 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns a sizable amount of memory"
        ::= { wfKernelEntry 39 }

    wfKernelMemOwnerTask4Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Amount of memory owned by the task"
        ::= { wfKernelEntry 40 }

    wfKernelMemOwnerTask5 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns a sizable amount of memory"
        ::= { wfKernelEntry 41 }

    wfKernelMemOwnerTask5Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Amount of memory owned by the task"
        ::= { wfKernelEntry 42 }

    wfKernelMemOwnerTask6 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns a sizable amount of memory"
        ::= { wfKernelEntry 43 }

    wfKernelMemOwnerTask6Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Amount of memory owned by the task"
        ::= { wfKernelEntry 44 }

    wfKernelMemOwnerTask7 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns a sizable amount of memory"
        ::= { wfKernelEntry 45 }

    wfKernelMemOwnerTask7Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Amount of memory owned by the task"
        ::= { wfKernelEntry 46 }

    wfKernelMemOwnerTask8 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns a sizable amount of memory"
        ::= { wfKernelEntry 47 }

    wfKernelMemOwnerTask8Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Amount of memory owned by the task"
        ::= { wfKernelEntry 48 }

    wfKernelMemOwnerTask9 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns a sizable amount of memory"
        ::= { wfKernelEntry 49 }

    wfKernelMemOwnerTask9Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Amount of memory owned by the task"
        ::= { wfKernelEntry 50 }

    wfKernelMemOwnerTask10 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation address of task which owns a sizable amount of memory"
        ::= { wfKernelEntry 51 }

    wfKernelMemOwnerTask10Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Amount of memory owned by the task"
        ::= { wfKernelEntry 52 }

    wfKernelAliasBuffsDropped OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of alias buffers dropped due to lack of copy buffers"
        ::= { wfKernelEntry 53 }

    wfKernParamTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfKernParamEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table of kernel parameter records, indexed by slot number"
        ::= { wfGameGroup 2 }

    wfKernParamEntry OBJECT-TYPE
        SYNTAX	WfKernParamEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A particular interface"
        INDEX	{ wfKernParamSlot }
        ::= { wfKernParamTable 1 }

    WfKernParamEntry ::= SEQUENCE {
    	    wfKernParamSlot
    		INTEGER,
    	    wfKernParamTotMem
    		INTEGER,
    	    wfKernParamLocMem
    		INTEGER,
    	    wfKernParamGlobMem
    		INTEGER
        }

    wfKernParamSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The slot number indexes the kernel parameter table"
        ::= { wfKernParamEntry 1 }

    wfKernParamTotMem OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The size of total Physical memory in Kbytes"
        ::= { wfKernParamEntry 2 }

    wfKernParamLocMem OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The size of Local memory in Kbytes"
        ::= { wfKernParamEntry 3 }

    wfKernParamGlobMem OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The size of Global memory in Kbytes"
        ::= { wfKernParamEntry 4 }

    wfKernCfgParamTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfKernCfgParamEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table of kernel configurable parameter records, indexed by slot number"
        ::= { wfGameGroup 3 }

    wfKernCfgParamEntry OBJECT-TYPE
        SYNTAX	WfKernCfgParamEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A particular interface"
        INDEX	{ wfKernCfgParamSlot }
        ::= { wfKernCfgParamTable 1 }

    WfKernCfgParamEntry ::= SEQUENCE {
    	    wfKernCfgParamDelete
    		INTEGER,
    	    wfKernCfgParamSlot
    		INTEGER,
    	    wfKernCfgParamStatus
    		INTEGER,
    	    wfKernCfgParamLocMem
    		INTEGER,
    	    wfKernCfgParamGlobMem
    		INTEGER,
    	    wfKernCfgParamGlobMemReset
    		INTEGER
        }

    wfKernCfgParamDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete a kernel configurable parameter record."
        DEFVAL	{ created }
        ::= { wfKernCfgParamEntry 1 }

    wfKernCfgParamSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The slot number indexes the kernel configurable parameters record"
        ::= { wfKernCfgParamEntry 2 }

    wfKernCfgParamStatus OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Status of last kernel configurable parameter change request."
        ::= { wfKernCfgParamEntry 3 }

    wfKernCfgParamLocMem OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The amount of configured local memory in Kbytes"
        ::= { wfKernCfgParamEntry 4 }

    wfKernCfgParamGlobMem OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The amount of configured global memory in kbytes"
        ::= { wfKernCfgParamEntry 5 }

    wfKernCfgParamGlobMemReset OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Reset the slot back to the software default global memory size.
                The software default value for global memory allocation will
                now be used on this slot for all memory configurations."
        DEFVAL	{ off }
        ::= { wfKernCfgParamEntry 6 }

    wfKernelSysCfgTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfKernelSysCfgEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table of kernel's system configuration records, indexed by slot number"
        ::= { wfGameGroup 5 }

    wfKernelSysCfgEntry OBJECT-TYPE
        SYNTAX	WfKernelSysCfgEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A particular interface"
        INDEX	{ wfKernelSysCfgSlot }
        ::= { wfKernelSysCfgTable 1 }

    WfKernelSysCfgEntry ::= SEQUENCE {
    	    wfKernelSysCfgDelete
    		INTEGER,
    	    wfKernelSysCfgSlot
    		INTEGER,
    	    wfKernelSysCfgLogging
    		INTEGER
        }

    wfKernelSysCfgDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete a kernel configurable parameter record."
        DEFVAL	{ created }
        ::= { wfKernelSysCfgEntry 1 }

    wfKernelSysCfgSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The slot number indexes the kernel's system configuration record"
        ::= { wfKernelSysCfgEntry 2 }

    wfKernelSysCfgLogging OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Status of last kernel configurable parameter change request."
        DEFVAL	{ on }
        ::= { wfKernelSysCfgEntry 3 }

    END  -- Wellfleet-GAME-STATS-MIB
-- @(#)WSCCS i/mibs-hardware.mib 1.2 10/9/95
Wellfleet-HARDWARE-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:42:01 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfHardwareConfig
        FROM Wellfleet-COMMON-MIB;


    wfHwBase	OBJECT IDENTIFIER ::= { wfHardwareConfig 1 }

    wfHwBpIdOpt OBJECT-TYPE
        SYNTAX	INTEGER {
    		    acefn(1),
    		    aceln(2),
    		    acecn(3),
    		    afn(4),
    		    in(5),
    		    an(16),
    		    sys5000(5000),
    		    freln(16640),
    		    frecn(16896),
    		    frerbln(17152),
    		    asn(20480),
    		    asnzcable(20736),
    		    asnbcable(20992)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The BackPlane identification number."
        ::= { wfHwBase 1 }

    wfHwBpRev OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The revision level of the BackPlane. High byte is in upper 2 bytes."
        ::= { wfHwBase 2 }

    wfHwBpSerialNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The serial number of the BackPlane."
        ::= { wfHwBase 3 }

    wfBCNPwrSupply1 OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ok(1),
    		    fail(2),
    		    notpresent(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Status of BCN Hot-Swappable Power Supply 1"
        DEFVAL	{ notpresent }
        ::= { wfHwBase 4 }

    wfBCNPwrSupply2 OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ok(1),
    		    fail(2),
    		    notpresent(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Status of BCN Hot-Swappable Power Supply 2"
        DEFVAL	{ notpresent }
        ::= { wfHwBase 5 }

    wfBCNPwrSupply3 OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ok(1),
    		    fail(2),
    		    notpresent(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Status of BCN Hot-Swappable Power Supply 3"
        DEFVAL	{ notpresent }
        ::= { wfHwBase 6 }

    wfBCNPwrSupply4 OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ok(1),
    		    fail(2),
    		    notpresent(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Status of BCN Hot-Swappable Power Supply 4"
        DEFVAL	{ notpresent }
        ::= { wfHwBase 7 }

    wfBCNFanStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ok(1),
    		    fail(2),
    		    notpresent(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Status of BCN Fan Tray"
        DEFVAL	{ notpresent }
        ::= { wfHwBase 8 }

    wfBCNTemperature OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ok(1),
    		    caution(2),
    		    notpresent(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Status of BCN Temperature sensor"
        DEFVAL	{ notpresent }
        ::= { wfHwBase 9 }

    wfHwTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfHwEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Hardware Table  - indexed by slot number"
        ::= { wfHardwareConfig 2 }

    wfHwEntry OBJECT-TYPE
        SYNTAX	WfHwEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Hardware specific information about a slot."
        INDEX	{ wfHwSlot }
        ::= { wfHwTable 1 }

    WfHwEntry ::= SEQUENCE {
    	    wfHwSlot
    		INTEGER,
    	    wfHwModIdOpt
    		INTEGER,
    	    wfHwModRev
    		OCTET STRING,
    	    wfHwModSerialNumber
    		OCTET STRING,
    	    wfHwMotherBdIdOpt
    		INTEGER,
    	    wfHwMotherBdRev
    		OCTET STRING,
    	    wfHwMotherBdSerialNumber
    		OCTET STRING,
    	    wfHwDaughterBdIdOpt
    		INTEGER,
    	    wfHwDaughterBdRev
    		OCTET STRING,
    	    wfHwDaughterBdSerialNumber
    		OCTET STRING,
    	    wfHwBabyBdIdOpt
    		INTEGER,
    	    wfHwBabyBdRev
    		OCTET STRING,
    	    wfHwBabyBdSerialNumber
    		OCTET STRING,
    	    wfHwDiagPromRev
    		OCTET STRING,
    	    wfHwDiagPromDate
    		DisplayString,
    	    wfHwDiagPromSource
    		DisplayString,
    	    wfHwBootPromRev
    		OCTET STRING,
    	    wfHwBootPromDate
    		DisplayString,
    	    wfHwBootPromSource
    		DisplayString,
    	    wfHwSparePromRev
    		OCTET STRING,
    	    wfHwSparePromDate
    		DisplayString,
    	    wfHwSparePromSource
    		DisplayString,
    	    wfHwFileSysPresent
    		INTEGER,
    	    wfHwFileSysPresent2
    		INTEGER,
    	    wfHwConfigServer
    		INTEGER,
    	    wfHwConfigFile
    		DisplayString,
    	    wfHwConfigDateAndTime
    		OCTET STRING,
    	    wfHwActiveImageName
    		DisplayString,
    	    wfHwActiveImageSource
    		DisplayString,
    	    wfHwActiveImageDate
    		DisplayString,
    	    wfHwMotherBdMemorySize
    		INTEGER,
    	    wfHwFastPacketCacheSize
    		INTEGER,
    	    wfHwModDaughterBd1IdOpt
    		INTEGER,
    	    wfHwModDaughterBd1AwRev
    		OCTET STRING,
    	    wfHwModDaughterBd1Rev
    		OCTET STRING,
    	    wfHwModDaughterBd1SerialNumber
    		OCTET STRING,
    	    wfHwModDaughterBd2IdOpt
    		INTEGER,
    	    wfHwModDaughterBd2AwRev
    		OCTET STRING,
    	    wfHwModDaughterBd2Rev
    		OCTET STRING,
    	    wfHwModDaughterBd2SerialNumber
    		OCTET STRING
        }

    wfHwSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A unique value for each slot.
                Its value ranges between 1 and 14.
                There are products in this family that contain 1, 5, and 14 slots."
        ::= { wfHwEntry 1 }

    wfHwModIdOpt OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enet1(1),
    		    enet2(8),
    		    sync1(16),
    		    sync1a(17),
    		    t11(24),
    		    dse1(32),
    		    dse1a(33),
    		    dst416(40),
    		    sst416a(41),
    		    dst4(42),
    		    sst4a(43),
    		    sst416(44),
    		    stok416(45),
    		    sst4(46),
    		    stok4(47),
    		    floppy(48),
    		    necfloppy(49),
    		    t12(56),
    		    t12a(57),
    		    st1(58),
    		    t156k(60),
    		    e1(61),
    		    st156k(62),
    		    se1(63),
    		    t12n(64),
    		    st1n(65),
    		    t156kn(66),
    		    st156kn(67),
    		    e1n(68),
    		    se1n(69),
    		    sync(80),
    		    sync2a(81),
    		    cmcfddi(88),
    		    iphfddi(89),
    		    dt(104),
    		    dsde1(112),
    		    dsde1a(113),
    		    enet(114),
    		    dse2(116),
    		    dse2a(117),
    		    sse(118),
    		    ssea(119),
    		    dsde10bt(120),
    		    enet3(132),
    		    dsde2(156),
    		    oldqenf(160),
    		    denf(161),
    		    qenf(162),
    		    qef(164),
    		    def(165),
    		    mct1(168),
    		    smct1(169),
    		    dtok(176),
    		    mce1(184),
    		    smce1(185),
    		    mce1ii75(188),
    		    smce1ii75(189),
    		    mce1ii120(190),
    		    smce1ii120(191),
    		    wffddi2m(192),
    		    wffddi1m(193),
    		    wffddi2s(194),
    		    wffddi1s(195),
    		    wffddi2mf(196),
    		    wffddi1mf(197),
    		    wffddi2sf(198),
    		    wffddi1sf(199),
    		    fmdset(200),
    		    fmdst(201),
    		    fmdse(202),
    		    fmsst(203),
    		    fmsse(204),
    		    fnsdse(208),
    		    fnsdsdt(216),
    		    fnsdst(217),
    		    dhssi(224),
    		    shssi(225),
    		    esafnf(232),
    		    esafdsenf(233),
    		    esafssenf(234),
    		    esafdenf(235),
    		    esaf(236),
    		    esafdse(237),
    		    esafsse(238),
    		    esafde(239),
    		    qtok(256),
    		    asn(511),
    		    anseds(1024),
    		    ansedst(1025),
    		    ansedsh(1026),
    		    ansedsi(1027),
    		    ansedsti(1028),
    		    ansedshi(1029),
    		    ansets(1030),
    		    ansetst(1031),
    		    ansetsh(1032),
    		    andeds(1033),
    		    andedst(1034),
    		    andedsh(1035),
    		    andstx(1036),
    		    andst(1037),
    		    andsti(1038),
    		    antst(1039),
    		    antstx(1040),
    		    ansdsedst(1041),
    		    ansdsedstx(1042),
    		    ansedsi2(1043),
    		    ansedsti2(1044),
    		    ansedshi2(1045),
    		    andsti2(1046),
    		    ansedsg(1047),
    		    ansedsgx(1048),
    		    ansetsg(1049),
    		    andedsg(1050),
    		    ansedsgi(1051),
    		    ansetsgx(1052),
    		    andedsgx(1053),
    		    ansedsgix(1054),
    		    ansedsx(1055),
    		    ansetsx(1056),
    		    andedsx(1057),
    		    ansedstx(1058),
    		    ansetstx(1059),
    		    andedstx(1060),
    		    andsti2x(1061),
    		    ansedsi2x(1062),
    		    ansedsti2x(1063),
    		    atmalc(4096),
    		    atmalctaxi100(4097),
    		    atmalcsonetmm(4098),
    		    atmalcsonetsm(4099),
    		    osync(4352),
    		    comp(4353),
    		    comp128(4354),
    		    atmcoc3mm(4608),
    		    atmcoc3sm(4609),
    		    atmcoc3utp5(4610),
    		    de100(4864),
    		    atmcds3(5120),
    		    atmce3(5121),
		    qmct1rj45(5376),
		    qmct1db15(5377),
    		    srml(8448),
		    atm5000ah(524288),
    		    qe(1048799),
    		    qehwf(1048798),
    		    qefddi2m(1048831),
    		    qefddi2mhwf(1048830),
    		    qefddi2s(1048823),
    		    qefddi2shwf(1048822),
    		    qefddi1m(1048815),
    		    qefddi1mhwf(1048814),
    		    qefddi1s(1048807),
    		    qefddi1shwf(1048806),
    		    qecddi2stp(1048827),
    		    qecddi2stphwf(1048826),
    		    qecddi1stp(1048811),
    		    qecddi1stphwf(1048810),
    		    qecddi2utp(1048763),
    		    qecddi2utphwf(1048762),
    		    qecddi1utp(1048747),
    		    qecddi1utphwf(1048746),
    		    enet3atm(1048832),
    		    enet3enet(1048833),
    		    enet3fddi(1048834),
    		    enet3tok(1048835),
    		    enet3tokf(1048836),
    		    enet3sync(1048837),
    		    enet3only(1048863),
    		    fddiatm(1048864),
    		    fddienet(1048865),
    		    fddifddi(1048866),
    		    fdditok(1048867),
    		    fdditokf(1048868),
    		    fddisync(1048869),
    		    fddionly(1048895),
    		    tok3atm(1048896),
    		    tok3enet(1048897),
    		    tok3fddi(1048898),
    		    tok3tok(1048899),
    		    tok3tokf(1048900),
    		    tok3sync(1048901),
    		    tok3only(1048927),
    		    tokf3atm(1048928),
    		    tokf3enet(1048929),
    		    tokf3fddi(1048930),
    		    tokf3tok(1048931),
    		    tokf3tokf(1048932),
    		    tokf3sync(1048933),
    		    tokf3only(1048959),
    		    enet3datm(1048960),
    		    enet3denet(1048961),
    		    enet3dfddi(1048962),
    		    enet3dtok(1048963),
    		    enet3dtokf(1048964),
    		    enet3dsync(1048965),
    		    enet3donly(1048991),
    		    chipcomfenet(1049089),
    		    chipcomffddi(1049090),
    		    chipcomftok(1049091),
    		    chipcomftokf(1049092),
    		    chipcomfdsync(1049093),
    		    chipcomfisdn(1049094),
    		    chipcomffddis(1049095),
    		    chipcomfonly(1049119),
    		    chipcomenet(1049217),
    		    chipcomfddi(1049218),
    		    chipcomtok(1049219),
    		    chipcomtokf(1049220),
    		    chipcomdsync(1049221),
    		    chipcomisdn(1049222),
    		    chipcomfddis(1049223),
    		    chipcomonly(1049247)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The module identification number.

                     Port Configurations
                 HWStat Name  Enet Sync Async Token Framer Fiber
                 ------ ------------ ------ ---- ----- ----- ------ -----
                    1 ENET-1  2 0 0 0 0 0
                    8 ENET-2  2 0 0 0 0 0

                   16 SYNC-1  0 4 1 0 0 0
                   17 SYNC-1 [1] 0 4 1 0 0 0

                   24 T1-1  0 2 1 0 2 0

                   32 DSE-1  1 2 1 0 0 0
                   33 DSE-1  [1] 1 2 1 0 0 0

                   40 DST-4/16 0 2 1 1 0 0
                   41 SST-4/16  [1] 0 1 1 1 0 0
                   42 DST-4  0 2 1 1 0 0
                   43 SST-4   [1] 0 1 1 1 0 0
                   44 SST-4/16 0 1 1 1 0 0
                   45 STOK-4/16 [3] 0 0 0 1 0 0
                   46 SST-4  0 1 1 1 0 0
                   47 STOK-4   [3] 0 0 0 1 0 0

                   48 FLOPPY    0 0 0 0 0 0

                   56 T1-2  0 2 1 0 2 0
                   57 T1-2  0 2 1 0 2 0
                   58 ST1  0 1 1 0 1 0
                   60 T1-56K  0 1 1 0 1 0
                   61 E1 [3] 0 2 0 0 2 0
                   62 ST1-56K  0 1 1 0 1 0
                   63 SE1 [3] 0 1 0 0 1 0

                   64 T1-2n  0 2 1 0 2 0
                   65 ST1n  0 1 1 0 1 0
                   66 T1-56Kn  0 1 1 0 1 0
                   67 ST1-56Kn 0 1 1 0 1 0
                   68 E1n [3] 0 2 0 0 2 0
                   69 SE1n [3] 0 1 0 0 1 0

                   80 SYNC-2  0 4 1 0 0 0
                   81 SYNC-2  [1] 0 4 1 0 0 0

                   88 CMC-FDDI    [6] 0 0 0 0 0 1
                   89 IPHASE-FDDI [6] 0 0 0 0 0 1

                  112 DSDE-1  2 2 1 0 0 0
                  113 DSDE-1  [1] 2 2 1 0 0 0
                  114 ENET  2 0 0 0 0 0
                  116 DSE-2  1 2 1 0 0 0
                  117 DSE-2   [1] 1 2 1 0 0 0
                  118 SSE  1 1 1 0 0 0
                  119 SSE     [1] 1 1 1 0 0 0

                  132 ENET-3 [2] 2 0 0 0 0 0

                  156 DSDE-2 [2] 2 2 1 0 0 0

                  160 QE/NF  4 0 0 0 0 0
                  161 DE/NF [5] 2 0 0 0 0 0
                  162 QE/NF  4 0 0 0 0 0
                  164 QE/F [4] 4 0 0 0 0 0
                  165 DE/F [4,5] 2 0 0 0 0 0

                      168    MCT1            0    2 Munich   0       0       2       0
                      169    SMCT1           0    1 Munich   0       0       1       0

                  176 DTOK  0 0 0 2 0 0

                      184    MCE1            0    2 Munich   0       0       2       0
                      185    SMCE1           0    1 Munich   0       0       1       0
                      188    MCE1II75        0    2 Munich   0       0       2       0
                      189    SMCE1II75       0    1 Munich   0       0       1       0
                      190    MCE1II120       0    2 Munich   0       0       2       0
                      191    SMCE1II120      0    1 Munich   0       0       1       0

                  192 WF_FDDI_2M 0 0 0 0 0 1
                  193 WF_FDDI_1M 0 0 0 0 0 1
                  194 WF_FDDI_2S 0 0 0 0 0 1
                  195 WF_FDDI_1S 0 0 0 0 0 1
                  196 WF_FDDI_2MF 0 0 0 0 0 1
                  197 WF_FDDI_1MF 0 0 0 0 0 1
                  198 WF_FDDI_2SF 0 0 0 0 0 1
                  199 WF_FDDI_1SF 0 0 0 0 0 1

                  200 HW_MODULE_FMDSET  [7] 1 2 0 1 0 0
                  201 HW_MODULE_FMDST   [7] 0 2 0 1 0 0
                  202 HW_MODULE_FMDSE   [7] 1 2 0 0 0 0
                  203 HW_MODULE_FMSST   [7] 0 1 0 1 0 0
                  204 HW_MODULE_FMSSE   [7] 1 1 0 0 0 0

                  208 FNSDSE   [7] 1 2 0 0 0 0
                  216 FNSDSDT  [7] 0 2 0 2 0 0
                  217 FNSDST   [7] 0 2 0 1 0 0

                      224    DHSSI           0    2 hssi     0       0       0       0
                      225    SHSSI           0    1 hssi     0       0       0       0

                      232    ESAF_NF         2       2       0       0       0       0
                      233    ESAF_DSE_NF     1       2       0       0       0       0
                      234    ESAF_SSE_NF     1       1       0       0       0       0
                      235    ESAF_DE_NF      2       0       0       0       0       0
                      236    ESAF [2]        2       2       0       0       0       0
                      237    ESAF_DSE [2]    1       2       0       0       0       0
                      238    ESAF_SSE [2]    1       1       0       0       0       0
                      239    ESAF_DE [2]     2       0       0       0       0       0

                      256    QTOK  0 0 0 4 0 0

                 ASN (Barracuda)

                  511    ASN[8]


                 AN Module IDs (Piranha, Guppy...)

                 ID      Mnemonic        ENET    SYNC    ISDN    TR      HUB     DCM
                 --      --------        ----    ----    ----    --      ---     ---
                 1024    ANSEDS          1       2       0       0       0       N

                 1025    ANSEDST         1       2       0       1       0       N

                 1026    ANSEDSH         1       2       0       0       12      N

                 1027    ANSEDSI         1       2       1       0       0       N

                 1028    ANSEDSTI        1       2       1       1       0       N

                 1029    ANSEDSHI        1       2       1       0       12      N

                 1030    ANSETS          1       3       0       0       0       N

                 1031    ANSETST         1       3       0       1       0       N

                 1032    ANSETSH         1       3       0       0       12      N

                 1033    ANDEDS          2       2       0       0       0       N

                 1034    ANDEDST         2       2       0       1       0       N

                 1035    ANDEDSH         2       2       0       0       12      N

                 1036    ANDSTX          0       2       0       1       0       Y
                 (formerly ANDS)

                 1037    ANDST           0       2       0       1       0       N

                 1038    ANDSTI          0       2       1       1       0       N

                 1039    ANTST           0       3       0       1       0       N

                 1040    ANTSTX          0       3       0       1       0       Y
                 (formerly ANSDSEDS)

                 1041    ANSDSEDST       1       2       0       1       0       N

                 1042    ANSDSEDSTX      1       2       0       1       0       Y
                 (formerly ANSDSEDSH)

                 1043    ANSEDSI2        1       2       1       0       0       N

                 1044    ANSEDSTI2       1       2       1       1       0       N

                 1045    ANSEDSHI2       1       2       1       0       12      N

                 1046    ANDSTI2         0       2       1       1       0       N

                 1047    ANSEDSG         1       2       0       0       8       N

                 1048    ANSEDSGX        1       2       0       0       8       Y

                 1049    ANSETSG         1       3       0       0       8       N

                 1050    ANDEDSG         2       2       0       0       8       N

                 1051    ANSEDSGI        1       2       1       0       8       N

                 1052    ANSETSGX        1       3       0       0       8       Y

                 1053    ANDEDSGX        2       2       0       0       8       Y

                 1054    ANSEDSGIX       1       2       1       0       8       Y

                 1055    ANSEDSX         1       2       0       0       0       Y

                 1056    ANSETSX         1       3       0       0       0       Y

                 1057    ANDEDSX         2       2       0       0       0       Y

                 1058    ANSEDSTX        1       2       0       1       0       Y

                 1059    ANSETSTX        1       3       0       1       0       Y

                 1060    ANDEDSTX        2       2       0       1       0       Y

                 1061    ANDSTI2X        0       2       1       0       0       Y

                 1062    ANSEDSI2X       1       2       1       0       0       Y

                 1063    ANSEDSTI2X      1       2       1       1       0       Y


                     4096    ATMALC          0       0       0       0       0       0
                     4097    ATMALCTAXI100   0       0       0       0       0       1
                     4098    ATMALCSONETMM   0       0       0       0       1       1 [9]
                     4099    ATMALCSONETSM   0       0       0       0       1       1 [9]
                     4352    OSYNC           0       8       0       0       0       0
                     4353    OSYNC_COMP (32) 0       8       0       0       0       0
                     4354    OSYNC_COMP128   0       8       0       0       0       0

                     4608    ATMCOC3MM       0       0       0       0       1       1 [10]
                     4609    ATMCOC3SM       0       0       0       0       1       1 [10]
                     4610    ATMCOC3UTP5     0       0       0       0       1       0 [10]

                     4864    DE100           2       0       0       0       0       0

                     5120    ATMCDS3         0       0       0       0       1       0 [10]
                     5121    ATMCE3          0       0       0       0       1       0 [10]

                 8448 SRML  0 0 0 0 0 0


                 NOTES:
                  [1] Indicates Module has COM Port 1 configured for ASYNC.
                   The AM8530's port B is configured for COM1.

                  [2] This Module contains the DEFA - Hardware Filtering.  CAMS
                   must be programmed (can contain 2 - 6 CAMS onboard).

                  [3] The AM8530 has been removed (depopulated) from this module.
                   Programming this device should not be performed.

                  [4] Contains Dual Defa hardware. (Can be depopulated)

                  [5] Depop'd two ports of hardware to make Dual Ethernet module.

                  [6] These are FDDI modules.  The ID cannot be read from the Link
                   module I/O space.

                     [7] These are AFN Platform Integrated 'Modules' - Cannot be detached
                             or be used by any other platform.

                 [8] Module IDs from 1280(0x500) to 2559(0x9ff) are used
                  for the ASN Net Modules. Module ID 512(0x200) is
                  used for the ASN SPEX. These IDs are documented in
                  MODULE.mdl. A module ID of 511(0x1ff) in
                  'wfHwEntry.wfHwModIdOpt' indicates that it is an
                  ASN platform and the user should refer to
                  'wfHwModuleEntry.wfHwModuleModIdOpt' for Module ID details

                     [9]     ATMALC link modules. The physical option for SONET includes a
                             framer and the medium is fiber optics. Only one port per physical
                             daughtercard per link module.

                     [10]    ARE UTOPIA link modules. "
        ::= { wfHwEntry 2 }

    wfHwModRev OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The revision level of the module. High byte is in upper 2 bytes."
        ::= { wfHwEntry 3 }

    wfHwModSerialNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The serial number of the module."
        ::= { wfHwEntry 4 }

    wfHwMotherBdIdOpt OBJECT-TYPE
        SYNTAX	INTEGER {
    		    sysctrl(1),
    		    ace12(2),
    		    ace25(3),
    		    ace32(4),
    		    afn(5),
    		    in(6),
    		    sysctrl2(7),
    		    an(16),
    		    fre(256),
    		    fre2(768),
    		    o60(769),
    		    asn(1024),
    		    are(1280),
    		    srmf(8704)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The mother board identification number."
        ::= { wfHwEntry 5 }

    wfHwMotherBdRev OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The revision level of the mother board. High byte is in upper 2 bytes."
        ::= { wfHwEntry 6 }

    wfHwMotherBdSerialNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The serial number of the mother board."
        ::= { wfHwEntry 7 }

    wfHwDaughterBdIdOpt OBJECT-TYPE
        SYNTAX	INTEGER {
    		    sysctrl(1),
    		    ace68020mhz12(2),
    		    ace68020mhz25(3),
    		    ace68030mhz32(4),
    		    fre68040mhz25(4352),
    		    fre68040mhz33(4608)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The daughter board identification number."
        ::= { wfHwEntry 8 }

    wfHwDaughterBdRev OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The revision level of the daughter board. High byte is in upper 2 bytes."
        ::= { wfHwEntry 9 }

    wfHwDaughterBdSerialNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The serial number of the daughter board."
        ::= { wfHwEntry 10 }

    wfHwBabyBdIdOpt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The baby board identification number."
        ::= { wfHwEntry 11 }

    wfHwBabyBdRev OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The revision level of the baby board. High byte is in upper 2 bytes."
        ::= { wfHwEntry 12 }

    wfHwBabyBdSerialNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The serial number of the baby board."
        ::= { wfHwEntry 13 }

    wfHwDiagPromRev OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The revision level of the Diagnostic PROM. Major revision level
                is in the upper 2 bytes, minor revision level in the lower 2 bytes."
        ::= { wfHwEntry 14 }

    wfHwDiagPromDate OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The creation date of the Diagnostic PROM"
        ::= { wfHwEntry 15 }

    wfHwDiagPromSource OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The origin of the Diagnostic PROM contents"
        ::= { wfHwEntry 16 }

    wfHwBootPromRev OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The revision level of the BOOT PROM. Major revision level
                is in the upper 2 bytes, minor revision level in the lower 2 bytes."
        ::= { wfHwEntry 17 }

    wfHwBootPromDate OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The creation date of the Boot PROM"
        ::= { wfHwEntry 18 }

    wfHwBootPromSource OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The origin of the Boot PROM contents"
        ::= { wfHwEntry 19 }

    wfHwSparePromRev OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The revision level of the BOOT PROM. Major revision level
                is in the upper 2 bytes, minor revision level in the lower 2 bytes."
        ::= { wfHwEntry 20 }

    wfHwSparePromDate OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The creation date of the Spare PROM"
        ::= { wfHwEntry 21 }

    wfHwSparePromSource OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The origin of the Spare PROM contents"
        ::= { wfHwEntry 22 }

    wfHwFileSysPresent OBJECT-TYPE
        SYNTAX	INTEGER {
    		    filesys(1),
    		    nofilesys(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flag indicating presence of File System on this slot."
        DEFVAL	{ nofilesys }
        ::= { wfHwEntry 23 }

    wfHwFileSysPresent2 OBJECT-TYPE
        SYNTAX	INTEGER {
    		    filesys(1),
    		    nofilesys(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flag indicating presence of File System (Syscon2 volume#2) on this slot."
        DEFVAL	{ nofilesys }
        ::= { wfHwEntry 24 }

    wfHwConfigServer OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The slot number from which this slot was served its
                configuration.  If the value for this attribute is 0, this
                slot obtained its configuration from a file system resource
                (not necessarily local); If the value for this attribute is
                -1, this slot does not participate in the boot process (e.g.
                SRM). A positive value indicates that the configuration was
                obtained from memory from the slot indicated by the value of
                this attribute."
        ::= { wfHwEntry 25 }

    wfHwConfigFile OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The name of the config file the active configuration was
                derived from.  This does NOT necessarily reflect the
                current configuration!"
        ::= { wfHwEntry 26 }

    wfHwConfigDateAndTime OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The 11 octet date and time that a configuration was
                loaded on/served to this slot. Octet map: 1-2 Year,
                3 Month, 4 Day, 5 Hour, 6 Minutes, 7 Seconds,
                8 Deci-seconds, 9 Direction from GMT ('+'|`-'), 10 GMT Hour
                Offset, 11 GMT Minute Offset."
        ::= { wfHwEntry 27 }

    wfHwActiveImageName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "If slot was booted from a local source: this is the name of the active
                image, which is in the form of <volume>:<image name>.
                If slot was booted from a network source: this is the full pathname
                where the active image was found on the remote server."
        ::= { wfHwEntry 28 }

    wfHwActiveImageSource OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The origin of the active image"
        ::= { wfHwEntry 29 }

    wfHwActiveImageDate OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The date which the active image was created"
        ::= { wfHwEntry 30 }

    wfHwMotherBdMemorySize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total installed dram size in kilobytes."
        ::= { wfHwEntry 31 }

    wfHwFastPacketCacheSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The size of the installed fast packet cache in kilobytes."
        ::= { wfHwEntry 32 }

    wfHwModDaughterBd1IdOpt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Link module daughter board #1 identification number"
        ::= { wfHwEntry 33 }

    wfHwModDaughterBd1AwRev OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Link module daughter board #1 artwork revision level"
        ::= { wfHwEntry 34 }

    wfHwModDaughterBd1Rev OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Link module daughter board #1 board revision level"
        ::= { wfHwEntry 35 }

    wfHwModDaughterBd1SerialNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Link module daughter board #1 serial number"
        ::= { wfHwEntry 36 }

    wfHwModDaughterBd2IdOpt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Link module daughter board #2 identification number"
        ::= { wfHwEntry 37 }

    wfHwModDaughterBd2AwRev OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Link module daughter board #2 artwork revision level"
        ::= { wfHwEntry 38 }

    wfHwModDaughterBd2Rev OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Link module daughter board #2 board revision level"
        ::= { wfHwEntry 39 }

    wfHwModDaughterBd2SerialNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Link module daughter board #2 serial number"
        ::= { wfHwEntry 40 }

    END  -- Wellfleet-HARDWARE-MIB
-- @(#)WSCCS u/mibs-heapstat.mib 1.1 8/30/95
Wellfleet-MIB-HEAP-STATS-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:45:20 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfMibHeapGroup
        FROM Wellfleet-COMMON-MIB;


    wfMibHeapTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfMibHeapEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table of MIB Heap Manager Stats, indexed by slot number"
        ::= { wfMibHeapGroup 1 }

    wfMibHeapEntry OBJECT-TYPE
        SYNTAX	WfMibHeapEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A particular interface"
        INDEX	{ wfMibHeapSlot }
        ::= { wfMibHeapTable 1 }

    WfMibHeapEntry ::= SEQUENCE {
    	    wfMibHeapSlot
    		INTEGER,
    	    wfMibHeapMemorySize
    		INTEGER,
    	    wfMibHeapBoundrySize
    		INTEGER,
    	    wfMibHeapPageSize
    		INTEGER,
    	    wfMibHeapTotalPages
    		INTEGER,
    	    wfMibHeapTotalSegs
    		INTEGER,
    	    wfMibHeapSegsFree
    		INTEGER,
    	    wfMibHeapSmlstSeg
    		INTEGER,
    	    wfMibHeapLrgstSeg
    		INTEGER,
    	    wfMibHeapStartSize
    		INTEGER,
    	    wfMibHeapSize1
    		INTEGER,
    	    wfMibHeapSize1SegsFree
    		INTEGER,
    	    wfMibHeapSize1SegsTotal
    		INTEGER,
    	    wfMibHeapSize1Pages
    		INTEGER,
    	    wfMibHeapSize2
    		INTEGER,
    	    wfMibHeapSize2SegsFree
    		INTEGER,
    	    wfMibHeapSize2SegsTotal
    		INTEGER,
    	    wfMibHeapSize2Pages
    		INTEGER,
    	    wfMibHeapSize3
    		INTEGER,
    	    wfMibHeapSize3SegsFree
    		INTEGER,
    	    wfMibHeapSize3SegsTotal
    		INTEGER,
    	    wfMibHeapSize3Pages
    		INTEGER,
    	    wfMibHeapSize4
    		INTEGER,
    	    wfMibHeapSize4SegsFree
    		INTEGER,
    	    wfMibHeapSize4SegsTotal
    		INTEGER,
    	    wfMibHeapSize4Pages
    		INTEGER,
    	    wfMibHeapSize5
    		INTEGER,
    	    wfMibHeapSize5SegsFree
    		INTEGER,
    	    wfMibHeapSize5SegsTotal
    		INTEGER,
    	    wfMibHeapSize5Pages
    		INTEGER,
    	    wfMibHeapSize6
    		INTEGER,
    	    wfMibHeapSize6SegsFree
    		INTEGER,
    	    wfMibHeapSize6SegsTotal
    		INTEGER,
    	    wfMibHeapSize6Pages
    		INTEGER,
    	    wfMibHeapSize7
    		INTEGER,
    	    wfMibHeapSize7SegsFree
    		INTEGER,
    	    wfMibHeapSize7SegsTotal
    		INTEGER,
    	    wfMibHeapSize7Pages
    		INTEGER,
    	    wfMibHeapSize8
    		INTEGER,
    	    wfMibHeapSize8SegsFree
    		INTEGER,
    	    wfMibHeapSize8SegsTotal
    		INTEGER,
    	    wfMibHeapSize8Pages
    		INTEGER,
    	    wfMibHeapSize9
    		INTEGER,
    	    wfMibHeapSize9SegsFree
    		INTEGER,
    	    wfMibHeapSize9SegsTotal
    		INTEGER,
    	    wfMibHeapSize9Pages
    		INTEGER,
    	    wfMibHeapSize10
    		INTEGER,
    	    wfMibHeapSize10SegsFree
    		INTEGER,
    	    wfMibHeapSize10SegsTotal
    		INTEGER,
    	    wfMibHeapSize10Pages
    		INTEGER
        }

    wfMibHeapSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The slot number indexes the mib heap statistics table"
        ::= { wfMibHeapEntry 1 }

    wfMibHeapMemorySize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total amount of memory allocated by the mib heap manager in bytes"
        ::= { wfMibHeapEntry 2 }

    wfMibHeapBoundrySize OBJECT-TYPE
        SYNTAX	INTEGER(128..512)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The boundry size reflects the largest segment which will be
                allocated on a page basis. Allocations requests larger than
                the boundry size are allocated one to a page."
        DEFVAL	{ 256 }
        ::= { wfMibHeapEntry 3 }

    wfMibHeapPageSize OBJECT-TYPE
        SYNTAX	INTEGER(512..16384)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The page size allocated by the mib heap manager in bytes"
        DEFVAL	{ 1024 }
        ::= { wfMibHeapEntry 4 }

    wfMibHeapTotalPages OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of pages currently allocated by the mib heap manager"
        ::= { wfMibHeapEntry 5 }

    wfMibHeapTotalSegs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total amount of allocatable segments within the mib heap manager"
        ::= { wfMibHeapEntry 6 }

    wfMibHeapSegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total amount of unallocated segments within the mib heap manager"
        ::= { wfMibHeapEntry 7 }

    wfMibHeapSmlstSeg OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Smallest memory segment allocated by the mib in bytes"
        ::= { wfMibHeapEntry 8 }

    wfMibHeapLrgstSeg OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Largest memory segment allocated by the mib in bytes"
        ::= { wfMibHeapEntry 9 }

    wfMibHeapStartSize OBJECT-TYPE
        SYNTAX	INTEGER(4..4096)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Segment size to start displaying in the mib heap stats"
        DEFVAL	{ 12 }
        ::= { wfMibHeapEntry 10 }

    wfMibHeapSize1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size of memory segment in the mib heap page table"
        ::= { wfMibHeapEntry 11 }

    wfMibHeapSize1SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments of a given memory segment size"
        ::= { wfMibHeapEntry 12 }

    wfMibHeapSize1SegsTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of allocatable segments of a given memory segment size"
        ::= { wfMibHeapEntry 13 }

    wfMibHeapSize1Pages OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of pages allocated for a given memory segment size"
        ::= { wfMibHeapEntry 14 }

    wfMibHeapSize2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size of memory segment in the mib heap page table"
        ::= { wfMibHeapEntry 15 }

    wfMibHeapSize2SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments of a given memory segment size"
        ::= { wfMibHeapEntry 16 }

    wfMibHeapSize2SegsTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of allocatable segments of a given memory segment size"
        ::= { wfMibHeapEntry 17 }

    wfMibHeapSize2Pages OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of pages allocated for a given memory segment size"
        ::= { wfMibHeapEntry 18 }

    wfMibHeapSize3 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size of memory segment in the mib heap page table"
        ::= { wfMibHeapEntry 19 }

    wfMibHeapSize3SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments of a given memory segment size"
        ::= { wfMibHeapEntry 20 }

    wfMibHeapSize3SegsTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of allocatable segments of a given memory segment size"
        ::= { wfMibHeapEntry 21 }

    wfMibHeapSize3Pages OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of pages allocated for a given memory segment size"
        ::= { wfMibHeapEntry 22 }

    wfMibHeapSize4 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size of memory segment in the mib heap page table"
        ::= { wfMibHeapEntry 23 }

    wfMibHeapSize4SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments of a given memory segment size"
        ::= { wfMibHeapEntry 24 }

    wfMibHeapSize4SegsTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of allocatable segments of a given memory segment size"
        ::= { wfMibHeapEntry 25 }

    wfMibHeapSize4Pages OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of pages allocated for a given memory segment size"
        ::= { wfMibHeapEntry 26 }

    wfMibHeapSize5 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size of memory segment in the mib heap page table"
        ::= { wfMibHeapEntry 27 }

    wfMibHeapSize5SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments of a given memory segment size"
        ::= { wfMibHeapEntry 28 }

    wfMibHeapSize5SegsTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of allocatable segments of a given memory segment size"
        ::= { wfMibHeapEntry 29 }

    wfMibHeapSize5Pages OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of pages allocated for a given memory segment size"
        ::= { wfMibHeapEntry 30 }

    wfMibHeapSize6 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size of memory segment in the mib heap page table"
        ::= { wfMibHeapEntry 31 }

    wfMibHeapSize6SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments of a given memory segment size"
        ::= { wfMibHeapEntry 32 }

    wfMibHeapSize6SegsTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of allocatable segments of a given memory segment size"
        ::= { wfMibHeapEntry 33 }

    wfMibHeapSize6Pages OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of pages allocated for a given memory segment size"
        ::= { wfMibHeapEntry 34 }

    wfMibHeapSize7 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size of memory segment in the mib heap page table"
        ::= { wfMibHeapEntry 35 }

    wfMibHeapSize7SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments of a given memory segment size"
        ::= { wfMibHeapEntry 36 }

    wfMibHeapSize7SegsTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of allocatable segments of a given memory segment size"
        ::= { wfMibHeapEntry 37 }

    wfMibHeapSize7Pages OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of pages allocated for a given memory segment size"
        ::= { wfMibHeapEntry 38 }

    wfMibHeapSize8 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size of memory segment in the mib heap page table"
        ::= { wfMibHeapEntry 39 }

    wfMibHeapSize8SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments of a given memory segment size"
        ::= { wfMibHeapEntry 40 }

    wfMibHeapSize8SegsTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of allocatable segments of a given memory segment size"
        ::= { wfMibHeapEntry 41 }

    wfMibHeapSize8Pages OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of pages allocated for a given memory segment size"
        ::= { wfMibHeapEntry 42 }

    wfMibHeapSize9 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size of memory segment in the mib heap page table"
        ::= { wfMibHeapEntry 43 }

    wfMibHeapSize9SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments of a given memory segment size"
        ::= { wfMibHeapEntry 44 }

    wfMibHeapSize9SegsTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of allocatable segments of a given memory segment size"
        ::= { wfMibHeapEntry 45 }

    wfMibHeapSize9Pages OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of allocatable segments of a given memory segment size"
        ::= { wfMibHeapEntry 46 }

    wfMibHeapSize10 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size of memory segment in the mib heap page table"
        ::= { wfMibHeapEntry 47 }

    wfMibHeapSize10SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments of a given memory segment size"
        ::= { wfMibHeapEntry 48 }

    wfMibHeapSize10SegsTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of allocatable segments of a given memory segment size"
        ::= { wfMibHeapEntry 49 }

    wfMibHeapSize10Pages OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of allocatable segments of a given memory segment size"
        ::= { wfMibHeapEntry 50 }

    wfMibHeapPageTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfMibHeapPageEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table of MIB Heap Manager Page Table Stats, indexed by slot number"
        ::= { wfMibHeapGroup 2 }

    wfMibHeapPageEntry OBJECT-TYPE
        SYNTAX	WfMibHeapPageEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A particular interface"
        INDEX	{ wfMibHeapPageSlot }
        ::= { wfMibHeapPageTable 1 }

    WfMibHeapPageEntry ::= SEQUENCE {
    	    wfMibHeapPageSlot
    		INTEGER,
    	    wfMibHeapPageListOffset
    		INTEGER,
    	    wfMibHeapPageSegSize
    		INTEGER,
    	    wfMibHeapPageTotal
    		INTEGER,
    	    wfMibHeapPageMemoryTotal
    		INTEGER,
    	    wfMibHeapPageSegsTotal
    		INTEGER,
    	    wfMibHeapPageSegsAllocd
    		INTEGER,
    	    wfMibHeapPageSegsFree
    		INTEGER,
    	    wfMibHeapPage1Size
    		INTEGER,
    	    wfMibHeapPage1SegsFree
    		INTEGER,
    	    wfMibHeapPage1SegsMax
    		INTEGER,
    	    wfMibHeapPage2Size
    		INTEGER,
    	    wfMibHeapPage2SegsFree
    		INTEGER,
    	    wfMibHeapPage2SegsMax
    		INTEGER,
    	    wfMibHeapPage3Size
    		INTEGER,
    	    wfMibHeapPage3SegsFree
    		INTEGER,
    	    wfMibHeapPage3SegsMax
    		INTEGER,
    	    wfMibHeapPage4Size
    		INTEGER,
    	    wfMibHeapPage4SegsFree
    		INTEGER,
    	    wfMibHeapPage4SegsMax
    		INTEGER,
    	    wfMibHeapPage5Size
    		INTEGER,
    	    wfMibHeapPage5SegsFree
    		INTEGER,
    	    wfMibHeapPage5SegsMax
    		INTEGER,
    	    wfMibHeapPage6PageSize
    		INTEGER,
    	    wfMibHeapPage6SegsFree
    		INTEGER,
    	    wfMibHeapPage6SegsMax
    		INTEGER,
    	    wfMibHeapPage7Size
    		INTEGER,
    	    wfMibHeapPage7SegsFree
    		INTEGER,
    	    wfMibHeapPage7SegsMax
    		INTEGER,
    	    wfMibHeapPage8Size
    		INTEGER,
    	    wfMibHeapPage8SegsFree
    		INTEGER,
    	    wfMibHeapPage8SegsMax
    		INTEGER,
    	    wfMibHeapPage9Size
    		INTEGER,
    	    wfMibHeapPage9SegsFree
    		INTEGER,
    	    wfMibHeapPage9SegsMax
    		INTEGER,
    	    wfMibHeapPage10Size
    		INTEGER,
    	    wfMibHeapPage10SegsFree
    		INTEGER,
    	    wfMibHeapPage10SegsMax
    		INTEGER
        }

    wfMibHeapPageSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The slot number indexes the mib heap statistics table"
        ::= { wfMibHeapPageEntry 1 }

    wfMibHeapPageListOffset OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The offset into the page list to start displaying"
        ::= { wfMibHeapPageEntry 2 }

    wfMibHeapPageSegSize OBJECT-TYPE
        SYNTAX	INTEGER(2..4096)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Segment size can be set from 4 to 4096 and the
                page statstics then gathered for that segment size"
        DEFVAL	{ 12 }
        ::= { wfMibHeapPageEntry 3 }

    wfMibHeapPageTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of pages allocated for the given memory segment size"
        ::= { wfMibHeapPageEntry 4 }

    wfMibHeapPageMemoryTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total amount of memory allocated of a given segment size in bytes"
        ::= { wfMibHeapPageEntry 5 }

    wfMibHeapPageSegsTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total amount of allocable segments for a given segment size"
        ::= { wfMibHeapPageEntry 6 }

    wfMibHeapPageSegsAllocd OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total amount of segments allocated for a given segment size"
        ::= { wfMibHeapPageEntry 7 }

    wfMibHeapPageSegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total amount of unallocated segments for a given segment size"
        ::= { wfMibHeapPageEntry 8 }

    wfMibHeapPage1Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size in bytes of a given page"
        ::= { wfMibHeapPageEntry 9 }

    wfMibHeapPage1SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments for the given page"
        ::= { wfMibHeapPageEntry 10 }

    wfMibHeapPage1SegsMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum amount of allocable segments for the given page"
        ::= { wfMibHeapPageEntry 11 }

    wfMibHeapPage2Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size in bytes of a given page"
        ::= { wfMibHeapPageEntry 12 }

    wfMibHeapPage2SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments for the given page"
        ::= { wfMibHeapPageEntry 13 }

    wfMibHeapPage2SegsMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of allocable segments for the given page"
        ::= { wfMibHeapPageEntry 14 }

    wfMibHeapPage3Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size in bytes of a given page"
        ::= { wfMibHeapPageEntry 15 }

    wfMibHeapPage3SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments for the given page"
        ::= { wfMibHeapPageEntry 16 }

    wfMibHeapPage3SegsMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of allocable segments for the given page"
        ::= { wfMibHeapPageEntry 17 }

    wfMibHeapPage4Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size in bytes of a given page"
        ::= { wfMibHeapPageEntry 18 }

    wfMibHeapPage4SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments for the given page"
        ::= { wfMibHeapPageEntry 19 }

    wfMibHeapPage4SegsMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of allocable segments for the given page"
        ::= { wfMibHeapPageEntry 20 }

    wfMibHeapPage5Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size in bytes of a given page"
        ::= { wfMibHeapPageEntry 21 }

    wfMibHeapPage5SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments for the given page"
        ::= { wfMibHeapPageEntry 22 }

    wfMibHeapPage5SegsMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of allocable segments for the given page"
        ::= { wfMibHeapPageEntry 23 }

    wfMibHeapPage6PageSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size in bytes of a given page"
        ::= { wfMibHeapPageEntry 24 }

    wfMibHeapPage6SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments for the given page"
        ::= { wfMibHeapPageEntry 25 }

    wfMibHeapPage6SegsMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of allocable segments for the given page"
        ::= { wfMibHeapPageEntry 26 }

    wfMibHeapPage7Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size in bytes of a given page"
        ::= { wfMibHeapPageEntry 27 }

    wfMibHeapPage7SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments for the given page"
        ::= { wfMibHeapPageEntry 28 }

    wfMibHeapPage7SegsMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of allocable segments for the given page"
        ::= { wfMibHeapPageEntry 29 }

    wfMibHeapPage8Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size in bytes of a given page"
        ::= { wfMibHeapPageEntry 30 }

    wfMibHeapPage8SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments for the given page"
        ::= { wfMibHeapPageEntry 31 }

    wfMibHeapPage8SegsMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of allocable segments for the given page"
        ::= { wfMibHeapPageEntry 32 }

    wfMibHeapPage9Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size in bytes of a given page"
        ::= { wfMibHeapPageEntry 33 }

    wfMibHeapPage9SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments for the given page"
        ::= { wfMibHeapPageEntry 34 }

    wfMibHeapPage9SegsMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of allocable segments for the given page"
        ::= { wfMibHeapPageEntry 35 }

    wfMibHeapPage10Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Size in bytes of a given page"
        ::= { wfMibHeapPageEntry 36 }

    wfMibHeapPage10SegsFree OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of unallocated segments for the given page"
        ::= { wfMibHeapPageEntry 37 }

    wfMibHeapPage10SegsMax OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of allocable segments for the given page"
        ::= { wfMibHeapPageEntry 38 }

    END  -- Wellfleet-MIB-HEAP-STATS-MIB
-- @(#)WSCCS r/mibs-hssi.mib 1.1 8/30/95
Wellfleet-HSSI-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:42:20 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfLine
        FROM Wellfleet-COMMON-MIB;


    wfHssiTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfHssiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "HSSI line record"
        ::= { wfLine 7 }

    wfHssiEntry OBJECT-TYPE
        SYNTAX	WfHssiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the HSSI table"
        INDEX	{ wfHssiSlot,
    		  wfHssiConnector }
        ::= { wfHssiTable 1 }

    WfHssiEntry ::= SEQUENCE {
    	    wfHssiDelete
    		INTEGER,
    	    wfHssiDisable
    		INTEGER,
    	    wfHssiState
    		INTEGER,
    	    wfHssiSlot
    		INTEGER,
    	    wfHssiConnector
    		INTEGER,
    	    wfHssiCct
    		INTEGER,
    	    wfHssiBofl
    		INTEGER,
    	    wfHssiBoflTmo
    		INTEGER,
    	    wfHssiMtu
    		INTEGER,
    	    wfHssiMadr
    		OCTET STRING,
    	    wfHssiService
    		INTEGER,
    	    wfHssiWanProtocol
    		INTEGER,
    	    wfHssiTransmissionInterface
    		INTEGER,
    	    wfHssiExternalClkSpeed
    		INTEGER,
    	    wfHssiCrcSize
    		INTEGER,
    	    wfHssiInternalClkTestMode
    		INTEGER,
    	    wfHssiRxOctets
    		Counter,
    	    wfHssiRxFrames
    		Counter,
    	    wfHssiTxOctets
    		Counter,
    	    wfHssiTxFrames
    		Counter,
    	    wfHssiInDiscards
    		Counter,
    	    wfHssiInErrors
    		Counter,
    	    wfHssiOutDiscards
    		Counter,
    	    wfHssiOutErrors
    		Counter,
    	    wfHssiRxLongFrames
    		Counter,
    	    wfHssiTxClipFrames
    		Counter,
    	    wfHssiRxReplenMisses
    		Counter,
    	    wfHssiLastRxErrorCtrl
    		INTEGER,
    	    wfHssiRxCrcErrors
    		Counter,
    	    wfHssiRxOverruns
    		Counter,
    	    wfHssiRxAborts
    		Counter,
    	    wfHssiLastTxErrorCtrl
    		INTEGER,
    	    wfHssiTxAborts
    		Counter,
    	    wfHssiTxUnderruns
    		Counter,
    	    wfHssiRxRingErrors
    		Counter,
    	    wfHssiLastRxRingState
    		INTEGER,
    	    wfHssiRxRingOverruns
    		Counter,
    	    wfHssiTxRingErrors
    		Counter,
    	    wfHssiLastTxRingState
    		INTEGER,
    	    wfHssiPortOpErrors
    		Counter,
    	    wfHssiInternOpErrors
    		Counter,
    	    wfHssiHostErrors
    		Counter,
    	    wfHssiRxProcessings
    		Counter,
    	    wfHssiTxProcessings
    		Counter,
    	    wfHssiTxCmplProcessings
    		Counter,
    	    wfHssiIntrProcessings
    		Counter,
    	    wfHssiBoflNum
    		INTEGER,
    	    wfHssiBoflLen
    		INTEGER,
    	    wfHssiRxBufferLength
    		INTEGER,
    	    wfHssiMemPageLength
    		INTEGER,
    	    wfHssiRxRingLength
    		INTEGER,
    	    wfHssiTxRingLength
    		INTEGER,
    	    wfHssiRxFifoWatermark
    		INTEGER,
    	    wfHssiTxFifoWatermark
    		INTEGER,
    	    wfHssiMaxRxMemory
    		INTEGER,
    	    wfHssiLinkInterface
    		INTEGER,
    	    wfHssiTurboBofl
    		INTEGER,
    	    wfHssiCfgRxQueueLength
    		INTEGER,
    	    wfHssiCfgTxQueueLength
    		INTEGER,
    	    wfHssiLineNumber
    		INTEGER,
    	    wfHssiCfgCngstCtlEnable
    		INTEGER,
    	    wfHssiLastChange
    		TimeTicks,
    	    wfHssiOutQLen
    		Gauge
        }

    wfHssiDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfHssiEntry 1 }

    wfHssiDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfHssiEntry 2 }

    wfHssiState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    lmiwait(2),
    		    boflwait(3),
    		    cawait(4),
    		    init(5),
    		    notpresent(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line Driver state variable, Not Present, Init, Down, Up"
        DEFVAL	{ notpresent }
        ::= { wfHssiEntry 3 }

    wfHssiSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Slot, filled in by driver"
        ::= { wfHssiEntry 4 }

    wfHssiConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Connector, filled in by driver"
        ::= { wfHssiEntry 5 }

    wfHssiCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "CCT number for this line instance"
        ::= { wfHssiEntry 6 }

    wfHssiBofl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "breath of life parameter"
        DEFVAL	{ enabled }
        ::= { wfHssiEntry 7 }

    wfHssiBoflTmo OBJECT-TYPE
        SYNTAX	INTEGER(1..60)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "breath of life frequency in seconds"
        DEFVAL	{ 1 }
        ::= { wfHssiEntry 8 }

    wfHssiMtu OBJECT-TYPE
        SYNTAX	INTEGER(3..4608)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "MTU parameter, this is buffer size for HSSI media, fixed"
        DEFVAL	{ 4608 }
        ::= { wfHssiEntry 9 }

    wfHssiMadr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line MAC address, fixed - line driver fills in from the 48 bit
                address stored in the serial number prom for this connector."
        ::= { wfHssiEntry 10 }

    wfHssiService OBJECT-TYPE
        SYNTAX	INTEGER {
    		    transparent(1),
    		    undefined(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Service type for this circuit. Transparent is raw HDLC mode, and is the
                only service provided on the current HSSI product"
        DEFVAL	{ transparent }
        ::= { wfHssiEntry 11 }

    wfHssiWanProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    standard(1),
    		    passthru(2),
    		    ppp(3),
    		    smds(4),
    		    framerelay(5),
    		    atm(6),
    		    sw(7),
    		    switch(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "WAN protocol selection is provided via this parameter. The
                supported protocols can be selected per interface."
        DEFVAL	{ standard }
        ::= { wfHssiEntry 12 }

    wfHssiTransmissionInterface OBJECT-TYPE
        SYNTAX	INTEGER {
    		    dsone(1),
    		    dsthree(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "T1 or T3,  in the future OC1, OC3 and OC12.  Used for MIB selection"
        DEFVAL	{ dsthree }
        ::= { wfHssiEntry 13 }

    wfHssiExternalClkSpeed OBJECT-TYPE
        SYNTAX	INTEGER(307200..52638515)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "External Clock Speed, Used in the future for route selection"
        DEFVAL	{ 46359642 }
        ::= { wfHssiEntry 14 }

    wfHssiCrcSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    crc16bit(1),
    		    crc32bit(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "CRC size parameter, 16 bit standard CCITT or extended 32 bit CRC"
        DEFVAL	{ crc32bit }
        ::= { wfHssiEntry 15 }

    wfHssiInternalClkTestMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables internal transmit clock generation. Should NEVER be enabled for
                normal operation."
        DEFVAL	{ disabled }
        ::= { wfHssiEntry 16 }

    wfHssiRxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of bytes received without error"
        ::= { wfHssiEntry 17 }

    wfHssiRxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received without error"
        ::= { wfHssiEntry 18 }

    wfHssiTxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of bytes transmitted without error"
        ::= { wfHssiEntry 19 }

    wfHssiTxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames transmitted without error"
        ::= { wfHssiEntry 20 }

    wfHssiInDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of error-free inbound packets discarded. Usually due to lack of
                memory resources."
        ::= { wfHssiEntry 21 }

    wfHssiInErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of inbound packets not delivered to higher-layer protocol because
                of errors."
        ::= { wfHssiEntry 22 }

    wfHssiOutDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of error-free outbound packets discarded. Usually due to lack of
                transmission bandwidth."
        ::= { wfHssiEntry 23 }

    wfHssiOutErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of outbound packets that could not be transmitted because of
                errors."
        ::= { wfHssiEntry 24 }

    wfHssiRxLongFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Long frames dropped on receive because of length"
        ::= { wfHssiEntry 25 }

    wfHssiTxClipFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames clipped in the transmit routine"
        ::= { wfHssiEntry 26 }

    wfHssiRxReplenMisses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of failed attempts by the line driver to aquire a packet buffer"
        ::= { wfHssiEntry 27 }

    wfHssiLastRxErrorCtrl OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Last errored receive descriptor's control field"
        ::= { wfHssiEntry 28 }

    wfHssiRxCrcErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received with CRC errors"
        ::= { wfHssiEntry 29 }

    wfHssiRxOverruns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received with fifo overrun errors"
        ::= { wfHssiEntry 30 }

    wfHssiRxAborts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received with abort status"
        ::= { wfHssiEntry 31 }

    wfHssiLastTxErrorCtrl OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Last errored transmit descriptor's control field"
        ::= { wfHssiEntry 32 }

    wfHssiTxAborts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmit frames with internal abort errors"
        ::= { wfHssiEntry 33 }

    wfHssiTxUnderruns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmit frames aborted with underrun errors"
        ::= { wfHssiEntry 34 }

    wfHssiRxRingErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of receive ring error events"
        ::= { wfHssiEntry 35 }

    wfHssiLastRxRingState OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Last 8 bit value from the recv ring state register"
        ::= { wfHssiEntry 36 }

    wfHssiRxRingOverruns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of receive ring overrun events"
        ::= { wfHssiEntry 37 }

    wfHssiTxRingErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmit ring error events"
        ::= { wfHssiEntry 38 }

    wfHssiLastTxRingState OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Last 8 bit value from the transmit ring state register"
        ::= { wfHssiEntry 39 }

    wfHssiPortOpErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of port operation error events"
        ::= { wfHssiEntry 40 }

    wfHssiInternOpErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of internal operation error events"
        ::= { wfHssiEntry 41 }

    wfHssiHostErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of parity errs on host accesses to directly accessable registers."
        ::= { wfHssiEntry 42 }

    wfHssiRxProcessings OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of receive frame processings (RINT)"
        ::= { wfHssiEntry 43 }

    wfHssiTxProcessings OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmit processings, invokations of transmit routine"
        ::= { wfHssiEntry 44 }

    wfHssiTxCmplProcessings OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmit complete processings (TINT)"
        ::= { wfHssiEntry 45 }

    wfHssiIntrProcessings OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Interrupt processings,  invokations of intr routine"
        ::= { wfHssiEntry 46 }

    wfHssiBoflNum OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of breath of life packets per breath of life"
        DEFVAL	{ 5 }
        ::= { wfHssiEntry 47 }

    wfHssiBoflLen OBJECT-TYPE
        SYNTAX	INTEGER(22..4450)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "breath of life packet length"
        DEFVAL	{ 100 }
        ::= { wfHssiEntry 48 }

    wfHssiRxBufferLength OBJECT-TYPE
        SYNTAX	INTEGER {
    		    length4k(64),
    		    length8k(128)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Performance tunning parameter controls Receive buffer size."
        DEFVAL	{ length4k }
        ::= { wfHssiEntry 49 }

    wfHssiMemPageLength OBJECT-TYPE
        SYNTAX	INTEGER {
    		    length32(1),
    		    length256(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Performance tunning parameter controls device memory access burst length."
        DEFVAL	{ length32 }
        ::= { wfHssiEntry 50 }

    wfHssiRxRingLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current Receive Queue Length."
        ::= { wfHssiEntry 51 }

    wfHssiTxRingLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current Transmit Queue Length."
        ::= { wfHssiEntry 52 }

    wfHssiRxFifoWatermark OBJECT-TYPE
        SYNTAX	INTEGER(2..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Performance tunning parameter controls the receive watermark."
        DEFVAL	{ 2 }
        ::= { wfHssiEntry 53 }

    wfHssiTxFifoWatermark OBJECT-TYPE
        SYNTAX	INTEGER(2..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Performance tunning parameter controls the transmit watermark."
        DEFVAL	{ 16 }
        ::= { wfHssiEntry 54 }

    wfHssiMaxRxMemory OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Performance tunning parameter controls fifo area allowed for receive."
        DEFVAL	{ 1 }
        ::= { wfHssiEntry 55 }

    wfHssiLinkInterface OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(1),
    		    ace25(2),
    		    ace32(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Only for DEBUG."
        DEFVAL	{ default }
        ::= { wfHssiEntry 56 }

    wfHssiTurboBofl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Only for DEBUG, Turbo breath of life parameter"
        DEFVAL	{ disabled }
        ::= { wfHssiEntry 57 }

    wfHssiCfgRxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured Receive Queue Length. Values other than zero over-ride the
                router selected values.  A value of zero has a special meaning.  Zero
                causes router based default values to be used.  Values larger than the
                compiled ring size are truncated to the compiled ring size. "
        ::= { wfHssiEntry 58 }

    wfHssiCfgTxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured Transmit Queue Length. Values other than zero over-ride the
                router selected values.  A value of zero has a special meaning.  Zero
                causes router based default values to be used.  Values larger than the
                compiled ring size are truncated to the compiled ring size. "
        ::= { wfHssiEntry 59 }

    wfHssiLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "line number for this line instance"
        ::= { wfHssiEntry 60 }

    wfHssiCfgCngstCtlEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured Congestion Control Enable. Enable or disable BNX switch
                congestion control on this HSSI port. Note that this has relevance only
                in the BNX switch and (currently) Frame Relay and SMDS switching
                functionality. If enabled, congestion control will monitor the levels of
                traffic and congestion and mark and drop certain packets as per of
                Frame Relay or SMDS protocols. See BNX doc for details on the
                congestion control strategy."
        DEFVAL	{ disable }
        ::= { wfHssiEntry 61 }

    wfHssiLastChange OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of SysUpTime at the time the interface entered it's current
                operational state (UP state).  SysUpTime is defined as the time (in
                hundredths of a second) since the network management portion of the
                system was last re-initialized.  Usually the time since boot."
        ::= { wfHssiEntry 62 }

    wfHssiOutQLen OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The instantaneous current length of the output packet queue (in packets)."
        ::= { wfHssiEntry 63 }

    END  -- Wellfleet-HSSI-MIB
-- @(#)WSCCS h/mibs-hwf.mib 1.1 8/30/95
Wellfleet-HWF-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:42:27 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfHwFGroup
        FROM Wellfleet-COMMON-MIB;


    wfHwfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfHwfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The following table will contain information about a collection of
                Hardware Filter (HWF) driver records.

                Only one HWF driver may be spawned, by the loader, on a given slot.
                Hence, only the slot number is used as the instance identifier into
                the table."
        ::= { wfHwFGroup 1 }

    wfHwfEntry OBJECT-TYPE
        SYNTAX	WfHwfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Slot number used as instance identifier."
        INDEX	{ wfHwfSlot }
        ::= { wfHwfTable 1 }

    WfHwfEntry ::= SEQUENCE {
    	    wfHwfDelete
    		INTEGER,
    	    wfHwfEnable
    		INTEGER,
    	    wfHwfState
    		INTEGER,
    	    wfHwfSlot
    		INTEGER,
    	    wfHwfAvailableLines
    		INTEGER
        }

    wfHwfDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/delete parameter."
        DEFVAL	{ created }
        ::= { wfHwfEntry 1 }

    wfHwfEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/disable parameter."
        DEFVAL	{ enabled }
        ::= { wfHwfEntry 2 }

    wfHwfState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Driver state variable."
        DEFVAL	{ notpresent }
        ::= { wfHwfEntry 3 }

    wfHwfSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number -- instance ID."
        ::= { wfHwfEntry 4 }

    wfHwfAvailableLines OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of available lines on module."
        ::= { wfHwfEntry 5 }

    wfHwfLineTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfHwfLineEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The following table will contain information about a collection of
                Hardware Filter (HWF) line records."
        ::= { wfHwFGroup 2 }

    wfHwfLineEntry OBJECT-TYPE
        SYNTAX	WfHwfLineEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Slot number and line number used as instance identifier."
        INDEX	{ wfHwfLineSlot,
    		  wfHwfLineNumber }
        ::= { wfHwfLineTable 1 }

    WfHwfLineEntry ::= SEQUENCE {
    	    wfHwfLineState
    		INTEGER,
    	    wfHwfLineSlot
    		INTEGER,
    	    wfHwfLineNumber
    		INTEGER,
    	    wfHwfLineCct
    		INTEGER,
    	    wfHwfLineCapableMaxTblSize
    		INTEGER,
    	    wfHwfLineCurrentTblSize
    		INTEGER,
    	    wfHwfLineCurrentUsedEntries
    		INTEGER,
    	    wfHwfLineDroppedFrames
    		INTEGER
        }

    wfHwfLineState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    operational(1),
    		    disabled(2),
    		    full(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "State of filtering hardware on a per line basis."
        DEFVAL	{ disabled }
        ::= { wfHwfLineEntry 1 }

    wfHwfLineSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number -- instance ID."
        ::= { wfHwfLineEntry 2 }

    wfHwfLineNumber OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4),
    		    five(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line number -- instance ID."
        ::= { wfHwfLineEntry 3 }

    wfHwfLineCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit number associated with a line."
        ::= { wfHwfLineEntry 4 }

    wfHwfLineCapableMaxTblSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This attribute specifies the maximum number of table entries
                capable of being used by a line based upon actual hardware
                filter devices present and available."
        ::= { wfHwfLineEntry 5 }

    wfHwfLineCurrentTblSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current capacity of the hardware filter table. Hardware filter
                table resources are dynamically allocated (in increments of 256)
                on an as-needed basis up to the available table size."
        ::= { wfHwfLineEntry 6 }

    wfHwfLineCurrentUsedEntries OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of hardware filter table entries used."
        ::= { wfHwfLineEntry 7 }

    wfHwfLineDroppedFrames OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames dropped because of hardware filter match."
        ::= { wfHwfLineEntry 8 }

    END  -- Wellfleet-HWF-MIB
-- @(#)WSCCS v/mibs-hwmo.mib 1.1 8/30/95
Wellfleet-HWMO-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:42:35 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfHardwareConfig
        FROM Wellfleet-COMMON-MIB;


    wfMod		OBJECT IDENTIFIER ::= { wfHardwareConfig 3 }

    wfModState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    init(1)
    		}
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "State of this record"
        ::= { wfMod 1 }

    wfModSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Instance of this record"
        ::= { wfMod 2 }

    wfModIdOpt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "actual module ID and Option"
        ::= { wfMod 3 }

    wfModRev OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "actual module Revision"
        ::= { wfMod 4 }

    wfModProm OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "module PROM"
        ::= { wfMod 5 }

    wfModMidr OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "module ID register"
        ::= { wfMod 6 }

    wfModMled OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "module LED register"
        ::= { wfMod 7 }

    wfModMisr OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "module MISR register"
        ::= { wfMod 8 }

    wfModSnprom OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "module SNPROM"
        ::= { wfMod 9 }

    wfModMadr1 OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "SNPROM MAC address connector 1"
        ::= { wfMod 10 }

    wfModMadr2 OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "SNPROM MAC address connector 2"
        ::= { wfMod 11 }

    wfModMadr3 OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "SNPROM MAC address connector 3"
        ::= { wfMod 12 }

    wfModMadr4 OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "SNPROM MAC address connector 4"
        ::= { wfMod 13 }

    wfModLance1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "LANCE line 1"
        ::= { wfMod 14 }

    wfModLance2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "LANCE line 2"
        ::= { wfMod 15 }

    wfModMk50251 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "MK5025 line 1"
        ::= { wfMod 16 }

    wfModMk50252 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "MK5025 line 2"
        ::= { wfMod 17 }

    wfModMk50253 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "MK5025 line 3"
        ::= { wfMod 18 }

    wfModMk50254 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "MK5025 line 4"
        ::= { wfMod 19 }

    wfModSicr OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "SYNC interface control register"
        ::= { wfMod 20 }

    wfModSbrr OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "SYNC baudrate register"
        ::= { wfMod 21 }

    wfMod8530 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "8530 DUART"
        ::= { wfMod 22 }

    wfModCar OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "CAM assembly register"
        ::= { wfMod 23 }

    wfModDefaA OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "DEFA A chip"
        ::= { wfMod 24 }

    wfModCamALock OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "CAM A lock"
        ::= { wfMod 25 }

    wfModCamAUnlock OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "CAM A unlock"
        ::= { wfMod 26 }

    wfModDefaB OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "DEFA B chip"
        ::= { wfMod 27 }

    wfModCamBLock OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "CAM B lock"
        ::= { wfMod 28 }

    wfModCamBUnlock OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "CAM B unlock"
        ::= { wfMod 29 }

    wfModIlacc1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ILACC line 1"
        ::= { wfMod 30 }

    wfModIlacc2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ILACC line 2"
        ::= { wfMod 31 }

    wfModIlacc3 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ILACC line 3"
        ::= { wfMod 32 }

    wfModIlacc4 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ILACC line 4"
        ::= { wfMod 33 }

    wfModTms3801 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "TOKEN ring chip line 1"
        ::= { wfMod 34 }

    wfModTms3802 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "TOKEN ring chip line 2"
        ::= { wfMod 35 }

    wfModTocr OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "TOKEN control register"
        ::= { wfMod 36 }

    wfModTsra OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "TOKEN source route accelerator"
        ::= { wfMod 37 }

    wfModMuxram1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "T1 mux RAM active"
        ::= { wfMod 38 }

    wfModMuxram2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "T1 mux RAM inactive"
        ::= { wfMod 39 }

    wfModTicr OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "T1 interface control register"
        ::= { wfMod 40 }

    wfModFramer1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "T1 framer line 1"
        ::= { wfMod 41 }

    wfModFramer2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "T1 framer line 2"
        ::= { wfMod 42 }

    wfModFsi1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "FDDI FSI line 1"
        ::= { wfMod 43 }

    wfModMac1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "FDDI MAC line 1"
        ::= { wfMod 44 }

    wfModElmA1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "FDDI ELM A line 1"
        ::= { wfMod 45 }

    wfModElmB1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "FDDI ELM B line 1"
        ::= { wfMod 46 }

    wfModMcr1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "FDDI Module control register line 1"
        ::= { wfMod 47 }

    wfModHssiFsi1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "HSSI FSI line 1"
        ::= { wfMod 48 }

    wfModHssiFsi2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "HSSI FSI line 2"
        ::= { wfMod 49 }

    wfModHssiUga1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "HSSI UGA-330-2 line 1"
        ::= { wfMod 50 }

    wfModHssiUga2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "HSSI UGA-330-2 line 2"
        ::= { wfMod 51 }

    wfModHicr OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "HSSI Control Register address"
        ::= { wfMod 52 }

    wfModHicrData OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "HSSI Last value written to the HICR"
        ::= { wfMod 53 }

    wfModHlsr OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "HSSI Line Status Register address"
        ::= { wfMod 54 }

    wfModHlsrData OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "HSSI Last value read from HLSR"
        ::= { wfMod 55 }

    wfModMCR0 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Module Control Register 0"
        ::= { wfMod 56 }

    wfModMCR1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Module Control Register 1"
        ::= { wfMod 57 }

    wfModCcr0 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Command Control Register 0"
        ::= { wfMod 58 }

    wfModCcr1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Command Control Register 1"
        ::= { wfMod 59 }

    wfModFcr OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Framer Command Register"
        ::= { wfMod 60 }

    wfModMar0 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Munich action request 0"
        ::= { wfMod 61 }

    wfModMar1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Munich action request 1"
        ::= { wfMod 62 }

    wfModBert OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "BERT Register"
        ::= { wfMod 63 }

    wfModMgbc OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Module Global bus-error clear"
        ::= { wfMod 64 }

    wfModClr0 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Clear Munich interrupt 0"
        ::= { wfMod 65 }

    wfModClr1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Clear Munich interrupt 1"
        ::= { wfMod 66 }

    wfModCclk OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Clear external clock interrupt"
        ::= { wfMod 67 }

    wfModCLoopup0 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Clear Port 0 loop up interrupt"
        ::= { wfMod 68 }

    wfModCLoopup1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Clear Port 1 loop up interrupt"
        ::= { wfMod 69 }

    wfModCLoopdn0 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Clear Port 0 loop down interrupt"
        ::= { wfMod 70 }

    wfModCLoopdn1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Clear Port 1 loop down interrupt"
        ::= { wfMod 71 }

    wfModDuart OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "8530 DUART"
        ::= { wfMod 72 }

    wfModLEDC OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "LED control register"
        ::= { wfMod 73 }

    wfModMadr5 OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "SNPROM MAC address connector 5 - IN Platform"
        ::= { wfMod 74 }

    wfModDefaC OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "DEFA C chip  - IN Platform"
        ::= { wfMod 75 }

    wfModCamel1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "IFDDI CAMEL line 1"
        ::= { wfMod 76 }

    wfModTms3803 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "TOKEN ring chip line 3"
        ::= { wfMod 77 }

    wfModTms3804 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "TOKEN ring chip line 4"
        ::= { wfMod 78 }

    wfModMusicSRT1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Music SRT chip line 1"
        ::= { wfMod 79 }

    wfModMusicSRT2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Music SRT chip line 2"
        ::= { wfMod 80 }

    wfModMusicSRT3 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Music SRT chip line 3"
        ::= { wfMod 81 }

    wfModMusicSRT4 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Music SRT chip line 4"
        ::= { wfMod 82 }

    wfModClrQ1Reset OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Clear QUICC-1 reset"
        ::= { wfMod 83 }

    wfModClrQ2Reset OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Clear QUICC-2 reset"
        ::= { wfMod 84 }

    wfModQ1Dram OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "QUICC-1 DRAM"
        ::= { wfMod 85 }

    wfModQ2Dram OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "QUICC-2 DRAM"
        ::= { wfMod 86 }

    wfModQ1DPram OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "QUICC-1 DPRAM"
        ::= { wfMod 87 }

    wfModQ2DPram OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "QUICC-2 DPRAM"
        ::= { wfMod 88 }

    wfModQ1StickyBit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "QUICC-1 Sticky Bit Write Address base"
        ::= { wfMod 89 }

    wfModQ2StickyBit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "QUICC-2 Sticky Bit Write Address base"
        ::= { wfMod 90 }

    wfModQ1Int7 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "QUICC-1 Interrupt COP high"
        ::= { wfMod 91 }

    wfModQ2Int7 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "QUICC-2 Interrupt COP high"
        ::= { wfMod 92 }

    wfModApplyQ1Reset OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Apply QUICC-1 reset"
        ::= { wfMod 93 }

    wfModApplyQ2Reset OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Apply QUICC-2 reset"
        ::= { wfMod 94 }

    END  -- Wellfleet-HWMO-MIB
-- @(#)WSCCS t/mibs-if.mib 1.1 8/30/95
Wellfleet-IF-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:42:42 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfIfGroup
        FROM Wellfleet-COMMON-MIB;


    wfIf		OBJECT IDENTIFIER ::= { wfIfGroup 1 }

    wfIfNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of possible active interfaces"
        ::= { wfIf 1 }

    wfIfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table containing active interfaces"
        ::= { wfIfGroup 2 }

    wfIfEntry OBJECT-TYPE
        SYNTAX	WfIfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A particular interface"
        INDEX	{ wfIfIndex }
        ::= { wfIfTable 1 }

    WfIfEntry ::= SEQUENCE {
    	    wfIfIndex
    		INTEGER,
    	    wfIfDescr
    		DisplayString,
    	    wfIfType
    		INTEGER,
    	    wfIfMtu
    		INTEGER,
    	    wfIfSpeed
    		Gauge,
    	    wfIfPhysAddress
    		OCTET STRING,
    	    wfIfAdminStatus
    		INTEGER,
    	    wfIfOperStatus
    		INTEGER,
    	    wfIfLastChange
    		TimeTicks,
    	    wfIfInOctets
    		Counter,
    	    wfIfInUcastPkts
    		Counter,
    	    wfIfInNUCastPkts
    		Counter,
    	    wfIfInDiscards
    		Counter,
    	    wfIfInErrors
    		Counter,
    	    wfIfInUnknownProtos
    		Counter,
    	    wfIfOutOctets
    		Counter,
    	    wfIfOutUcastPkts
    		Counter,
    	    wfIfOutNUcastPkts
    		Counter,
    	    wfIfOutDiscards
    		Counter,
    	    wfIfOutErrors
    		Counter,
    	    wfIfOutQLen
    		Gauge,
    	    wfIfSpecific
    		OBJECT IDENTIFIER
        }

    wfIfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 1 }

    wfIfDescr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 2 }

    wfIfType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 3 }

    wfIfMtu OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 4 }

    wfIfSpeed OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 5 }

    wfIfPhysAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 6 }

    wfIfAdminStatus OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 7 }

    wfIfOperStatus OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 8 }

    wfIfLastChange OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 9 }

    wfIfInOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 10 }

    wfIfInUcastPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 11 }

    wfIfInNUCastPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 12 }

    wfIfInDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 13 }

    wfIfInErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 14 }

    wfIfInUnknownProtos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 15 }

    wfIfOutOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 16 }

    wfIfOutUcastPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 17 }

    wfIfOutNUcastPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 18 }

    wfIfOutDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 19 }

    wfIfOutErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 20 }

    wfIfOutQLen OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 21 }

    wfIfSpecific OBJECT-TYPE
        SYNTAX	OBJECT IDENTIFIER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corresponds to same attribute of MIB-II's ifTable"
        ::= { wfIfEntry 22 }

    END  -- Wellfleet-IF-MIB
-- @(#)WSCCS h/mibs-igmp.mib 1.2 10/26/95
Wellfleet-IGMP-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:42:48 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfIgmpGroup
        FROM Wellfleet-COMMON-MIB;


    wfIgmpBase	OBJECT IDENTIFIER ::= { wfIgmpGroup 1 }

    wfIgmpBaseCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform a set operation on this
                object in order to create/delete IGMP."
        DEFVAL	{ created }
        ::= { wfIgmpBase 1 }

    wfIgmpBaseEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable Parameter indicates whether
                this IGMP record is enabled or disabled."
        DEFVAL	{ enabled }
        ::= { wfIgmpBase 2 }

    wfIgmpBaseState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpres(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the entire IGMP."
        DEFVAL	{ notpres }
        ::= { wfIgmpBase 3 }

    wfIgmpBaseEstimatedGroups OBJECT-TYPE
        SYNTAX	INTEGER(5..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of estimated groups that will
                be used through this router."
        DEFVAL	{ 20 }
        ::= { wfIgmpBase 4 }

    wfIgmpBaseVersionThreshold OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The time (in seconds) that will pass after
                the last old style query before we will try
                to become the igmp designated querier"
        DEFVAL	{ 540 }
        ::= { wfIgmpBase 5 }

    wfIgmpBaseDebug OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is a debug field for IGMP. Setting bits
                cause igmp to gernerate certain log messages.
                This field will NOT restart IGMP.
                The follow bits maybe set in any combination:
                Bit 1 : log igmp recieve messages
                Bit 2 : log igmp sending messages
                Bit 3 : log notification for other types of igmp messages"
        ::= { wfIgmpBase 6 }

    wfIgmpIfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIgmpIfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "List of configured IGMP interfaces"
        ::= { wfIgmpGroup 2 }

    wfIgmpIfEntry OBJECT-TYPE
        SYNTAX	WfIgmpIfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A description of an IGMP interface"
        INDEX	{ wfIgmpIfCctno }
        ::= { wfIgmpIfTable 1 }

    WfIgmpIfEntry ::= SEQUENCE {
    	    wfIgmpIfCreate
    		INTEGER,
    	    wfIgmpIfEnable
    		INTEGER,
    	    wfIgmpIfState
    		INTEGER,
    	    wfIgmpDesignatedRouter
    		IpAddress,
    	    wfIgmpIfQueryRate
    		INTEGER,
    	    wfIgmpIfMembershipTimeout
    		INTEGER,
    	    wfIgmpIfDRTimeout
    		INTEGER,
    	    wfIgmpIfLocalIpAddress
    		IpAddress,
    	    wfIgmpIfCctno
    		INTEGER,
    	    wfIgmpIfInDatagrams
    		Counter,
    	    wfIgmpIfOutQueries
    		Counter,
    	    wfIgmpIfInQueries
    		Counter,
    	    wfIgmpIfDiscards
    		Counter,
    	    wfIgmpIfNetVersion
    		INTEGER,
    	    wfIgmpIfMaxHostResponse
    		INTEGER,
            wfIgmpIfRoutingProtocol
                INTEGER
        }

    wfIgmpIfCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this IGMP If record is to be deleted or created"
        DEFVAL	{ created }
        ::= { wfIgmpIfEntry 1 }

    wfIgmpIfEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this IGMP intf record is to be enabled or disabled"
        DEFVAL	{ enabled }
        ::= { wfIgmpIfEntry 2 }

    wfIgmpIfState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    invalid(4),
    		    notpres(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the IGMP interface. Invalid indicates an error in
                processing the cfg record"
        DEFVAL	{ notpres }
        ::= { wfIgmpIfEntry 3 }

    wfIgmpDesignatedRouter OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current Igmp Designated Router. If there are multipule
                routers on a multi-access network, this is the router sending
                the igmp host queries."
        ::= { wfIgmpIfEntry 4 }

    wfIgmpIfQueryRate OBJECT-TYPE
        SYNTAX	INTEGER(0..4096)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Query rate. This value specifies, in seconds, how often a local group
                membership is queried.  If set to 0, no queries will be sent out this
                interface, and it should mean that there are no hosts on that interface
                that want to multicast.  This does not mean no multicast traffic will go
                out this port, as routed mutilcast traffic may use this interface"
        DEFVAL	{ 120 }
        ::= { wfIgmpIfEntry 5 }

    wfIgmpIfMembershipTimeout OBJECT-TYPE
        SYNTAX	INTEGER(30..8192)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Membership timeout. This value specifies, in seconds, the amount of
                time that a local group membership is valid without confirmation.
                The suggested value is (2*QueryRate)+20"
        DEFVAL	{ 260 }
        ::= { wfIgmpIfEntry 6 }

    wfIgmpIfDRTimeout OBJECT-TYPE
        SYNTAX	INTEGER(10..8192)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Designated Router Timeout. This value specifies, in seconds, the
                amount of time from the last host query message that will be used
                to determine the loss of the IGMP designated router. "
        DEFVAL	{ 140 }
        ::= { wfIgmpIfEntry 7 }

    wfIgmpIfLocalIpAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "IP Address currently in use on this circuit. This is the IP address
                that being used to generate and multicast traffic"
        ::= { wfIgmpIfEntry 8 }

    wfIgmpIfCctno OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Circuit IGMP should be running on"
        ::= { wfIgmpIfEntry 9 }

    wfIgmpIfInDatagrams OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of input datagrams received from interfaces."
        ::= { wfIgmpIfEntry 10 }

    wfIgmpIfOutQueries OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Host Membership Query messages sent out of this
                interface."
        ::= { wfIgmpIfEntry 11 }

    wfIgmpIfInQueries OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Host Membership Query messages that have been
                received on this interface."
        ::= { wfIgmpIfEntry 12 }

    wfIgmpIfDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IGMP messages received on this interface that
                were discarded due to bad checksums, illegal message types,
                bad values in fields, etc."
        ::= { wfIgmpIfEntry 13 }

    wfIgmpIfNetVersion OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the version of igmp that this router believes is
                running on this network. A value of 1 means IGMPv1 (old
                igmp) and a value of 2 means IGMPv2 (new igmp)."
        ::= { wfIgmpIfEntry 14 }

    wfIgmpIfMaxHostResponse OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the amount of time in 10th of seconds that a host
                is supposed to take to respond to a query. This will
                value will be placed in the code feild of the igmp
                query packet."
        DEFVAL	{ 100 }
        ::= { wfIgmpIfEntry 15 }

    wfIgmpIfRoutingProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
                     dvmrp(2),
                     pim(3),
                     cbt(4),
                     mospf(5)
                }
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This has the value of the multicast protocol running
                 on this interface.  A value means there is no
                 multicast protocol up on this interface."
        ::= { wfIgmpIfEntry 16 }



    wfIgmpGroupTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIgmpGroupEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The list of elements in IGMP host table"
        ::= { wfIgmpGroup 3 }

    wfIgmpGroupEntry OBJECT-TYPE
        SYNTAX	WfIgmpGroupEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A description of a route"
        INDEX	{ wfIgmpCct,
    		  wfIgmpGroupAddress }
        ::= { wfIgmpGroupTable 1 }

    WfIgmpGroupEntry ::= SEQUENCE {
    	    wfIgmpGroupAddress
    		IpAddress,
    	    wfIgmpCct
    		INTEGER,
    	    wfIgmpTimeLeft
    		INTEGER
        }

    wfIgmpGroupAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the group address"
        ::= { wfIgmpGroupEntry 1 }

    wfIgmpCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the circuit for this group"
        ::= { wfIgmpGroupEntry 2 }

    wfIgmpTimeLeft OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "how long until this group times out."
        ::= { wfIgmpGroupEntry 3 }

    END  -- Wellfleet-IGMP-MIB
-- @(#)WSCCS k/mibs-int_serv.mib 1.1 8/30/95
Wellfleet-INT-SERV-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:42:54 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfIntegratedServicesGroup
        FROM Wellfleet-COMMON-MIB;


    wfReservationsResourcesGroup
                OBJECT IDENTIFIER ::= { wfIntegratedServicesGroup 2 }
    wfTxLineRscGroup
                OBJECT IDENTIFIER ::= { wfReservationsResourcesGroup 1 }
    wfReservationsFlowspecGroup
                OBJECT IDENTIFIER ::= { wfIntegratedServicesGroup 3 }


    wfTxLineRscTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfTxLineRscEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains information about line resources and guaranteed
                service traffic on a per-line basis for outbound traffic."
        ::= { wfTxLineRscGroup 1 }

    wfTxLineRscEntry OBJECT-TYPE
        SYNTAX	WfTxLineRscEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                ""
        INDEX	{ wfTxLineRscLineNumber }
        ::= { wfTxLineRscTable 1 }

    WfTxLineRscEntry ::= SEQUENCE {
    	    wfTxLineRscKillReservations
    		INTEGER,
    	    wfTxLineRscLineNumber
    		INTEGER,
    	    wfTxLineRscReservableBandwidth
    		Gauge,
    	    wfTxLineRscReservedBandwidth
    		Gauge,
    	    wfTxLineRscGuaranteedFlows
    		Gauge,
    	    wfTxLineRscGuaranteedPackets
    		Counter,
    	    wfTxLineRscGuaranteedBytes
    		Counter,
    	    wfTxLineRscGuaranteedPolicedPackets
    		Counter,
    	    wfTxLineRscGuaranteedPolicedBytes
    		Counter,
    	    wfTxLineRscGuaranteedBandwidth
    		Gauge,
    	    wfTxLineRscGuaranteedAvgBandwidth
    		Gauge,
    	    wfTxLineRscGuaranteedMaxBandwidth
    		Gauge,
    	    wfTxLineRscGuaranteedAvgPacketDelay
    		Gauge,
    	    wfTxLineRscGuaranteedMaxPacketDelay
    		Gauge,
    	    wfTxLineRscUnreservedPolicedPackets
    		Counter,
    	    wfTxLineRscUnreservedPolicedBytes
    		Counter
        }

    wfTxLineRscKillReservations OBJECT-TYPE
        SYNTAX	INTEGER {
    		    keep(1),
    		    kill(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Kill all reservations on this line."
        DEFVAL	{ keep }
        ::= { wfTxLineRscEntry 1 }

    wfTxLineRscLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line number"
        ::= { wfTxLineRscEntry 2 }

    wfTxLineRscReservableBandwidth OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "amount of reservable bandwidth left on this line
                (bits per second)"
        ::= { wfTxLineRscEntry 3 }

    wfTxLineRscReservedBandwidth OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "amount of reserved bandwidth on this line (bits per second)"
        ::= { wfTxLineRscEntry 4 }

    wfTxLineRscGuaranteedFlows OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of guaranteed-service flows"
        ::= { wfTxLineRscEntry 5 }

    wfTxLineRscGuaranteedPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of guaranteed-service packets that have exited this line"
        ::= { wfTxLineRscEntry 6 }

    wfTxLineRscGuaranteedBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of guaranteed-service bytes that have exited this line"
        ::= { wfTxLineRscEntry 7 }

    wfTxLineRscGuaranteedPolicedPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of guaranteed-service packets that were policed (dropped)"
        ::= { wfTxLineRscEntry 8 }

    wfTxLineRscGuaranteedPolicedBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of guaranteed-service bytes that were policed (dropped)"
        ::= { wfTxLineRscEntry 9 }

    wfTxLineRscGuaranteedBandwidth OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Guaranteed service bandwidth measured over the last
                bandwidth interval"
        ::= { wfTxLineRscEntry 10 }

    wfTxLineRscGuaranteedAvgBandwidth OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Guaranteed service average bandwidth"
        ::= { wfTxLineRscEntry 11 }

    wfTxLineRscGuaranteedMaxBandwidth OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Guaranteed service maximum bandwidth"
        ::= { wfTxLineRscEntry 12 }

    wfTxLineRscGuaranteedAvgPacketDelay OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Guaranteed service average packet delay"
        ::= { wfTxLineRscEntry 13 }

    wfTxLineRscGuaranteedMaxPacketDelay OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Guaranteed service maximum packet delay"
        ::= { wfTxLineRscEntry 14 }

    wfTxLineRscUnreservedPolicedPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of unreserved packets that were policed (dropped).
                If priority queueing is also enabled, this statistic is
                not maintained.  See wfCctOptsEntry."
        ::= { wfTxLineRscEntry 15 }

    wfTxLineRscUnreservedPolicedBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of unreserved bytes that were policed (dropped).
                If priority queueing is also enabled, this statistic is
                not maintained.  See wfCctOptsEntry."
        ::= { wfTxLineRscEntry 16 }

    wfTxLineRscCfgTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfTxLineRscCfgEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains resource reservation configuration information
                on a per-line basis for outbound traffic."
        ::= { wfTxLineRscGroup 3 }

    wfTxLineRscCfgEntry OBJECT-TYPE
        SYNTAX	WfTxLineRscCfgEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                ""
        INDEX	{ wfTxLineRscCfgLineNumber }
        ::= { wfTxLineRscCfgTable 1 }

    WfTxLineRscCfgEntry ::= SEQUENCE {
    	    wfTxLineRscCfgDelete
    		INTEGER,
    	    wfTxLineRscCfgLineNumber
    		INTEGER,
    	    wfTxLineRscCfgEstBandwidth
    		INTEGER,
    	    wfTxLineRscCfgResvBandwidth
    		INTEGER,
    	    wfTxLineRscCfgResvTrafficAlgorithm
    		INTEGER,
    	    wfTxLineRscCfgResvPolicingAlgorithm
    		INTEGER,
    	    wfTxLineRscCfgBandwidthInterval
    		INTEGER,
    	    wfTxLineRscCfgInflateReservations
    		INTEGER,
    	    wfTxLineRscCfgUnreservedPolicingAlgorithm
    		INTEGER,
    	    wfTxLineRscCfgUnreservedQueueLength
    		INTEGER,
    	    wfTxLineRscCfgMultiLineSelectAlgorithm
    		INTEGER,
    	    wfTxLineRscCfgMultiLineThresholdBandwidth
    		INTEGER,
    	    wfTxLineRscCfgResvLatency
    		INTEGER
        }

    wfTxLineRscCfgDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Creation and deletion flag for this record"
        DEFVAL	{ created }
        ::= { wfTxLineRscCfgEntry 1 }

    wfTxLineRscCfgLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line number"
        ::= { wfTxLineRscCfgEntry 2 }

    wfTxLineRscCfgEstBandwidth OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Estimated usable bandwidth by this router in bits per second."
        ::= { wfTxLineRscCfgEntry 3 }

    wfTxLineRscCfgResvBandwidth OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Reservable bandwidth on this line."
        ::= { wfTxLineRscCfgEntry 4 }

    wfTxLineRscCfgResvTrafficAlgorithm OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    priority(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "reserved-traffic queueing algorithm:
                none - schedule as best-effort
                priority - schedule ahead of best-effort"
        DEFVAL	{ priority }
        ::= { wfTxLineRscCfgEntry 5 }

    wfTxLineRscCfgResvPolicingAlgorithm OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    lbucket(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "reserved-traffic policing algorithm:
                none - no policing
                lbucket - leaky bucket policing"
        DEFVAL	{ none }
        ::= { wfTxLineRscCfgEntry 6 }

    wfTxLineRscCfgBandwidthInterval OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Interval over which bandwidth is measured, in seconds. Default
                is ten seconds."
        DEFVAL	{ default }
        ::= { wfTxLineRscCfgEntry 7 }

    wfTxLineRscCfgInflateReservations OBJECT-TYPE
        SYNTAX	INTEGER(0..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Any reservation made on this line will be inflated by
                this percentage."
        ::= { wfTxLineRscCfgEntry 8 }

    wfTxLineRscCfgUnreservedPolicingAlgorithm OBJECT-TYPE
        SYNTAX	INTEGER {
    		    qlimit(1),
    		    lbucket(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Policing algorithm for unreserved traffic.
                qlimit (1) limits the number of buffers (packets)
                of unreserved traffic that will be queued up.
                lbucket (2) applies a leaky bucket algorithm based on
                the bandwidth that is not guaranteed.  The leaky bucket
                algorithm does not allow the unreserved traffic to take
                advantage of unused reserved bandwidth."
        DEFVAL	{ qlimit }
        ::= { wfTxLineRscCfgEntry 9 }

    wfTxLineRscCfgUnreservedQueueLength OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(20)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If the unreserved policing algorithm is qlimit,
                this is the maximum number of best-effort packets
                that will be held for transmission.  This parameter
                affects the amount best-effort traffic will be clipped
                when congestion occurs.  Overriden by priority queueing
                limits, if configured."
        DEFVAL	{ default }
        ::= { wfTxLineRscCfgEntry 10 }

    wfTxLineRscCfgMultiLineSelectAlgorithm OBJECT-TYPE
        SYNTAX	INTEGER {
    		    first(1),
    		    round(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This algorithm influences how the circuit resource manager
                will select which line will be used for a new resource
                request. first (1) does a first-fit.  round (2) does a
                round-robin.  If first-fit is selected and the
                ThresholdBandwidth parameter is non-zero, a first-fit
                algorithm is done until a line reaches its threshold.
                The algorithm then moves to the the next line.  Once all
                lines are at their threshold, the algorithm is simply
                first-fit.  All lines for a circuit should select the
                same algorithm.  If any one specifies first-fit, first-fit
                will be used."
        DEFVAL	{ first }
        ::= { wfTxLineRscCfgEntry 11 }

    wfTxLineRscCfgMultiLineThresholdBandwidth OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If the multi-line selection algorithm is threshold,
                this is the threshold value for this line.  It must
                be less than the reservable bandwidth value."
        ::= { wfTxLineRscCfgEntry 12 }

    wfTxLineRscCfgResvLatency OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum latency acceptable for a reserved flow packet. This
                parameter limits the amount of unreserved data that the link
                scheduler can put onto the driver transmit ring.  When the data on
                the transmit ring reaches a size where additional unreserved data
                would take longer than the value of this parameter to clock out, no
                more data will be enqueued.
                Reduce this parameter to obtain better delay characteristics for
                reserved flows, but note that this will result in somewhat reduced
                overall throughput.  Units are milliseconds."
        DEFVAL	{ 50 }
        ::= { wfTxLineRscCfgEntry 13 }

    wfFlowspecSt2V3Table OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfFlowspecSt2V3Entry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the ST-2 version 3 flowspec.

                            The FlowSpec is used to convey stream service requirements
                            end-to-end.  We expect that other versions of FlowSpec will
                            be needed in the future, which may or may not be subsets or
                            supersets of the version described here.  PBytes will allow
                            new constraints to be added to the end without having to
                            simultaneously update all implementations in the field.
                            Implementations are expected to be able to process in a
                            graceful manner a Version 4 (or higher) structure that has
                            more elements than shown here."
        ::= { wfReservationsFlowspecGroup 1 }

    wfFlowspecSt2V3Entry OBJECT-TYPE
        SYNTAX	WfFlowspecSt2V3Entry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                ""
        INDEX	{ wfFlowspecSt2V3Index }
        ::= { wfFlowspecSt2V3Table 1 }

    WfFlowspecSt2V3Entry ::= SEQUENCE {
    	    wfFlowspecSt2V3Index
    		INTEGER,
    	    wfFlowspecSt2V3Version
    		INTEGER,
    	    wfFlowspecSt2V3DutyFactor
    		INTEGER,
    	    wfFlowspecSt2V3ErrorRate
    		INTEGER,
    	    wfFlowspecSt2V3Precedence
    		INTEGER,
    	    wfFlowspecSt2V3Reliability
    		INTEGER,
    	    wfFlowspecSt2V3Tradeoffs
    		INTEGER,
    	    wfFlowspecSt2V3RecoveryTimeout
    		INTEGER,
    	    wfFlowspecSt2V3LimitOnCost
    		INTEGER,
    	    wfFlowspecSt2V3LimitOnDelay
    		INTEGER,
    	    wfFlowspecSt2V3LimitOnPDUBytes
    		INTEGER,
    	    wfFlowspecSt2V3LimitOnPDURate
    		INTEGER,
    	    wfFlowspecSt2V3MinBytesXRate
    		INTEGER,
    	    wfFlowspecSt2V3AccdMeanDelay
    		INTEGER,
    	    wfFlowspecSt2V3AccdDelayVariance
    		INTEGER,
    	    wfFlowspecSt2V3DesPDUBytes
    		INTEGER,
    	    wfFlowspecSt2V3DesPDURate
    		INTEGER
        }

    wfFlowspecSt2V3Index OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "flowspec index"
        ::= { wfFlowspecSt2V3Entry 1 }

    wfFlowspecSt2V3Version OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Version identifies the version of the FlowSpec.  Version
                3 is defined here."
        ::= { wfFlowspecSt2V3Entry 2 }

    wfFlowspecSt2V3DutyFactor OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "DutyFactor is the estimated proportion of the time that
                the requested bandwidth will actually be in use.  Zero is
                taken to represent 256 and signify a duty factor of 1.
                Other values are to be divided by 256 to yield the duty
                factor."
        ::= { wfFlowspecSt2V3Entry 3 }

    wfFlowspecSt2V3ErrorRate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ErrorRate expresses the error rate as the negative
                exponent of 10 in the error rate.  One (1) represents a
                bit error rate of 0.1 and 10 represents 0.0000000001."
        ::= { wfFlowspecSt2V3Entry 4 }

    wfFlowspecSt2V3Precedence OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Precedence is the precedence of the connection being
                established.  Zero represents the lowest precedence.
                Note that non-zero values of this parameter should be
                subject to authentication and authorization checks, which
                are not specified here.  In general, the distinction
                between precedence and priority is that precedence
                specifies streams that are permitted to take previously
                committed resources from another stream, while priority
                identifies those PDUs that a stream is most willing to
                have dropped when the stream exceeds its guaranteed
                limits."
        ::= { wfFlowspecSt2V3Entry 5 }

    wfFlowspecSt2V3Reliability OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reliability is modified by each intervening ST agent as a
                measure of the probability that a given offered data
                packet will be forwarded and not dropped.  Zero is taken
                to represent 256 and signify a probability of 1.  Other
                values are to be divided by 256 to yield the probability."
        ::= { wfFlowspecSt2V3Entry 6 }

    wfFlowspecSt2V3Tradeoffs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Tradeoffs is incompletely defined at this time.  Bits
                currently specified are as follows:

                   The most significant bit in the field, bit 0 in the
                   Figure 24, when one (1) means that each ST agent must
                   'implement' all constraints in the FlowSpec even if
                   they are not shown in the figure, e.g., when the
                   FlowSpec has been extended.  When zero (0), unknown
                   constraints may be ignored.

                   The second most significant bit in the field, bit 1,
                   when one (1) means that one or more constraints are
                   unknown and have been ignored.  When zero (0), all
                   constraints are known and have been processed.

                   The third most significant bit in the field, bit 2, is
                   used for RevChrg;  see Section 3.6.5 (page 46).

                   Other bits are currently unspecified, and should be
                   set to zero (0) by the origin ST agent and not changed
                   by other agents unless those agents know their
                   meaning."
        ::= { wfFlowspecSt2V3Entry 7 }

    wfFlowspecSt2V3RecoveryTimeout OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "RecoveryTimeout specifies the nominal number of
                milliseconds that the application is willing to wait for
                a failed system component to be detected and any
                corrective action to be taken."
        ::= { wfFlowspecSt2V3Entry 8 }

    wfFlowspecSt2V3LimitOnCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "LimitOnCost specifies the maximum cost that the origin is
                willing to expend.  A value of zero indicates that the
                application is not willing to incur any direct charges
                for the resources used by the stream.  The meaning of
                non-zero values is left for further study."
        ::= { wfFlowspecSt2V3Entry 9 }

    wfFlowspecSt2V3LimitOnDelay OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "LimitOnDelay specifies the maximum end-to-end delay, in
                milliseconds, that can be tolerated by the origin."
        ::= { wfFlowspecSt2V3Entry 10 }

    wfFlowspecSt2V3LimitOnPDUBytes OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "LimitOnPDUBytes is the smallest packet size, in terms of
                ST-user data bytes, that can be tolerated by the origin."
        ::= { wfFlowspecSt2V3Entry 11 }

    wfFlowspecSt2V3LimitOnPDURate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "LimitOnPDURate is the lowest packet rate that can be
                tolerated by the origin, expressed as tenths of a packet
                per second."
        ::= { wfFlowspecSt2V3Entry 12 }

    wfFlowspecSt2V3MinBytesXRate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "MinBytesXRate is the minimum bandwidth that can be
                tolerated by the origin, expressed as a product of bytes
                and tenths of a packet per second."
        ::= { wfFlowspecSt2V3Entry 13 }

    wfFlowspecSt2V3AccdMeanDelay OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "AccdMeanDelay is modified by each intervening ST agent.
                This provides a means of reporting the total expected
                delay, in milliseconds, for a data packet.  Note that it
                is implicitly assumed that the requested mean delay is
                zero and there is no limit on the mean delay, so there
                are no parameters to specify these explicitly."
        ::= { wfFlowspecSt2V3Entry 14 }

    wfFlowspecSt2V3AccdDelayVariance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "AccdDelayVariance is also modified by each intervening ST
                agent as a measure, in milliseconds squared, of the
                packet dispersion.  This quantity can be used by the
                target or origin in determining whether the resulting
                stream has an adequate quality of service to support the
                application.  Note that it is implicitly assumed that the
                requested delay variance is zero and there is no limit on
                the delay variance, so there are no parameters to specify
                these explicitly."
        ::= { wfFlowspecSt2V3Entry 15 }

    wfFlowspecSt2V3DesPDUBytes OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "DesPDUBytes is the desired PDU size in bytes.  This is
                not necessarily the same as the minimum necessary PDU
                size.  This value may be made smaller by intervening ST
                agents so long as it is not made smaller than
                LimitOnPDUBytes.  The *PDUBytes limits measure the size
                of the PDUs of next-higher protocol layer, i.e., the user
                information contained in a data packet.  An ST agent must
                account for both the ST Header (including possible IP
                encapsulation) and any local network headers and trailers
                when comparing a network's MTU with *PDUBytes.  In an
                ACCEPT message, the value of this field will be no larger
                than the MTU of the path to the specified target."
        ::= { wfFlowspecSt2V3Entry 16 }

    wfFlowspecSt2V3DesPDURate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "DesPDURate is the requested PDU rate, expressed as tenths
                of a packet per second.  This value may be made smaller
                by intervening ST agents so long as it is not made
                smaller than LimitOnPDURate."
        ::= { wfFlowspecSt2V3Entry 17 }

    END  -- Wellfleet-INT-SERV-MIB
-- @(#)WSCCS d/mibs-ip.mib 1.4 10/17/95
Wellfleet-IP-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:43:00 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfIpGroup, wfRipGroup, wfUdpGroup
        FROM Wellfleet-COMMON-MIB;


    wfIpBase	OBJECT IDENTIFIER ::= { wfIpGroup 1 }

    wfIpBaseCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform a set operation on this
                object in order to create/delete IP."
        DEFVAL	{ created }
        ::= { wfIpBase 1 }

    wfIpBaseEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform a set operation on this
                object in order to enable/disable IP."
        DEFVAL	{ enabled }
        ::= { wfIpBase 2 }

    wfIpBaseState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpres(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the entire IP."
        DEFVAL	{ notpres }
        ::= { wfIpBase 3 }

    wfIpBaseForwarding OBJECT-TYPE
        SYNTAX	INTEGER {
    		    forwarding(1),
    		    notforwarding(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The indication of whether this entity is acting
                as an IP gateway in respect to the forwarding of
                datagrams received by, but not addressed to, this
                entity.  IP gateways forward datagrams.  IP hosts
                do not (except those source-routed via the host).

                Note that for some managed nodes, this object may
                take on only a subset of the values possible.
                Accordingly, it is appropriate for an agent to
                return a `badValue' response if a management
                station attempts to change this object to an
                inappropriate value."
        DEFVAL	{ forwarding }
        ::= { wfIpBase 4 }

    wfIpBaseDefaultTTL OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The default value inserted into the Time-To-Live
                field of the IP header of datagrams originated at
                this entity, whenever a TTL value is not supplied
                by the transport layer protocol."
        DEFVAL	{ 30 }
        ::= { wfIpBase 5 }

    wfIpBaseRipDiameter OBJECT-TYPE
        SYNTAX	INTEGER(0..15)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Diameter of the RIP network.  1 less than 'infinity"
        DEFVAL	{ 15 }
        ::= { wfIpBase 6 }

    wfIpBaseRouteCache OBJECT-TYPE
        SYNTAX	INTEGER {
    		    dflt(60)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The interval at which routing entries are flushed from the
                forwarding tables."
        DEFVAL	{ dflt }
        ::= { wfIpBase 7 }

    wfIpBaseMibTables OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    route(2),
    		    fwd(3),
    		    both(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configures which routing MIB tables are maintained by
                IP.  Previously, only the wfIpBaseRtTable was maintained.
                In order to support variable length subnets, the wfIpForwardTable
                was implemented.  Supporting both these tables requires
                memory usage.  The user can now configure which tables to
                maintain to reduce memory usage if needed.  In the absence
                of variable length subnetting, these tables would maintain
                identical information."
        DEFVAL	{ route }
        ::= { wfIpBase 8 }

    wfIpBaseNetworks OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of networks (including subnets) in the routing table"
        ::= { wfIpBase 9 }

    wfIpBaseZeroSubnetEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter indicates whether or not 0 subnets are allowed.
                If they are not allowed, interfaces configured with a 0
                subnet will not be allowed."
        DEFVAL	{ disabled }
        ::= { wfIpBase 10 }

    wfIpBaseEstimatedNetworks OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter indicates the estimated number of networks
                that the router will need to keep in its routing table."
        ::= { wfIpBase 11 }

    wfIpBaseHosts OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This parameter indicates the number of hosts known by IP"
        ::= { wfIpBase 12 }

    wfIpBaseEstimatedHosts OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter indicates the estimated number of hosts
                that the router will need to keep in its hosts table."
        ::= { wfIpBase 13 }

    wfIpBaseDefaultOverSubnetEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter indicates whether or not default route
                for subnets in subnetted network is allowed."
        DEFVAL	{ disabled }
        ::= { wfIpBase 14 }

    wfIpBaseMaxPolicyRules OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(32)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter indicates the maximum number of policy rules
                that can be configured per type (ACCEPT or ANNOUNCE) per
                protocol.  In order to configure more policy rules, this
                parameter must be changed."
        DEFVAL	{ default }
        ::= { wfIpBase 15 }

    wfIpBaseRouteFilterSupport OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter indicates whether or not route filters are
                 supported."
        DEFVAL	{ enabled }
        ::= { wfIpBase 16 }

    wfIpBaseRtEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpBaseRtEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The list of elements in IP's routing table"
        ::= { wfIpGroup 2 }

    wfIpBaseRtEntry OBJECT-TYPE
        SYNTAX	WfIpBaseRtEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A description of a route"
        INDEX	{ wfIpBaseRouteDest }
        ::= { wfIpBaseRtEntryTable 1 }

    WfIpBaseRtEntry ::= SEQUENCE {
    	    wfIpBaseRouteDest
    		IpAddress,
    	    wfIpBaseRouteIfIndex
    		INTEGER,
    	    wfIpBaseRouteMetric1
    		INTEGER,
    	    wfIpBaseRouteMetric2
    		INTEGER,
    	    wfIpBaseRouteMetric3
    		INTEGER,
    	    wfIpBaseRouteMetric4
    		INTEGER,
    	    wfIpBaseRouteNextHop
    		IpAddress,
    	    wfIpBaseRouteType
    		INTEGER,
    	    wfIpBaseRouteProto
    		INTEGER,
    	    wfIpBaseRouteAge
    		INTEGER,
    	    wfIpBaseRouteMask
    		IpAddress,
    	    wfIpBaseRouteMetric5
    		INTEGER,
    	    wfIpBaseRouteInfo
    		OBJECT IDENTIFIER
        }

    wfIpBaseRouteDest OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The destination IP address of this route. An
                entry with a value of 0.0.0.0 is considered a
                default route.  Multiple routes to a single
                destination can appear in the table, but access to
                such multiple entries is dependent on the table-
                access mechanisms defined by the network
                management protocol in use."
        ::= { wfIpBaseRtEntry 1 }

    wfIpBaseRouteIfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The index value which uniquely identifies the
                local interface through which the next hop of this
                route should be reached.  The interface identified
                by a particular value of this index is the same
                interface as identified by the same value of
                ifIndex."
        ::= { wfIpBaseRtEntry 2 }

    wfIpBaseRouteMetric1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The primary routing metric for this route. The
                semantics of this metric are determined by the
                routing-protocol specified in the route's
                ipRouteProto value.  If this metric is not used,
                its value should be set to -1."
        ::= { wfIpBaseRtEntry 3 }

    wfIpBaseRouteMetric2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "An alternate routing metric for this route. The
                semantics of this metric are determined by the
                routing-protocol specified in the route's
                ipRouteProto value.  If this metric is not used,
                its value should be set to -1."
        ::= { wfIpBaseRtEntry 4 }

    wfIpBaseRouteMetric3 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "An alternate routing metric for this route. The
                semantics of this metric are determined by the
                routing-protocol specified in the route's
                ipRouteProto value.  If this metric is not used,
                its value should be set to -1."
        ::= { wfIpBaseRtEntry 5 }

    wfIpBaseRouteMetric4 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "An alternate routing metric for this route. The
                semantics of this metric are determined by the
                routing-protocol specified in the route's
                ipRouteProto value.  If this metric is not used,
                its value should be set to -1."
        ::= { wfIpBaseRtEntry 6 }

    wfIpBaseRouteNextHop OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address of the next hop of this route.
                (In the case of a route bound to an interface
                which is realized via a broadcast media, the value
                of this field is the agent's IP address on that
                interface.)"
        ::= { wfIpBaseRtEntry 7 }

    wfIpBaseRouteType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    invalid(2),
    		    direct(3),
    		    indirect(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The type of route. Note that the values
                direct(3) and indirect(4) refer to the notion of
                direct and indirect routing in the IP
                architecture.

                Setting this object to the value invalid(2) has
                the effect of invalidating the corresponding entry
                in the ipRouteTable object.  That is, it
                effectively dissasociates the destination
                identified with said entry from the route
                identified with said entry.  It is an
                implementation-specific matter as to whether the
                agent removes an invalidated entry from the table.
                nagement stations must be prepared
                to receive tabular information from agents that
                corresponds to entries not currently in use.
                Proper interpretation of such entries requires
                examination of the relevant ipRouteType object."
        ::= { wfIpBaseRtEntry 8 }

    wfIpBaseRouteProto OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    local(2),
    		    netmgmt(3),
    		    icmp(4),
    		    egp(5),
    		    ggp(6),
    		    hello(7),
    		    rip(8),
    		    is(9),
    		    ospf(13),
    		    bgp(14)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The routing mechanism via which this route was
                learned.  Inclusion of values for gateway routing
                protocols is not intended to imply that hosts
                should support those protocols."
        ::= { wfIpBaseRtEntry 9 }

    wfIpBaseRouteAge OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of seconds since this route was last
                updated or otherwise determined to be correct.
                Note that no semantics of `too old' can be implied
                except through knowledge of the routing protocol
                by which the route was learned."
        ::= { wfIpBaseRtEntry 10 }

    wfIpBaseRouteMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicate the mask to be logical-ANDed with the
                destination address before being compared to the
                value in the ipRouteDest field.  For those systems
                that do not support arbitrary subnet masks, an
                agent constructs the value of the ipRouteMask by
                determining whether the value of the correspondent
                ipRouteDest field belong to a class-A, B, or C
                network, and then using one of:

                     mask           network
                     255.0.0.0      class-A
                     255.255.0.0    class-B
                     255.255.255.0  class-C

                If the value of the ipRouteDest is 0.0.0.0 (a
                default route), then the mask value is also
                0.0.0.0.  It should be noted that all IP routing
                subsystems implicitly use this mechanism."
        ::= { wfIpBaseRtEntry 11 }

    wfIpBaseRouteMetric5 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "An alternate routing metric for this route. The
                semantics of this metric are determined by the
                routing-protocol specified in the route's
                ipRouteProto value.  If this metric is not used,
                its value should be set to -1."
        ::= { wfIpBaseRtEntry 12 }

    wfIpBaseRouteInfo OBJECT-TYPE
        SYNTAX	OBJECT IDENTIFIER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A user-defined string which describes this Route entry"
        ::= { wfIpBaseRtEntry 13 }

    wfIpBaseHostEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpBaseHostEntry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "The list of elements in IP's host table"
        ::= { wfIpGroup 3 }

    wfIpBaseHostEntry OBJECT-TYPE
        SYNTAX	WfIpBaseHostEntry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "A description of a resolved host"
        INDEX	{ wfIpBaseNetToMediaIfIndex,
    		  wfIpBaseNetToMediaNetAddress }
        ::= { wfIpBaseHostEntryTable 1 }

    WfIpBaseHostEntry ::= SEQUENCE {
    	    wfIpBaseNetToMediaIfIndex
    		INTEGER,
    	    wfIpBaseNetToMediaPhysAddress
    		OCTET STRING,
    	    wfIpBaseNetToMediaNetAddress
    		IpAddress,
    	    wfIpBaseNetToMediaType
    		INTEGER
        }

    wfIpBaseNetToMediaIfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The interface on which this entry's equivalence
                is effective.  The interface identified by a
                particular value of this index is the same
                interface as identified by the same value of
                ifIndex."
        ::= { wfIpBaseHostEntry 1 }

    wfIpBaseNetToMediaPhysAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The media-dependent `physical' address."
        ::= { wfIpBaseHostEntry 2 }

    wfIpBaseNetToMediaNetAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The IpAddress corresponding to the media-dependent `physical' address."
        ::= { wfIpBaseHostEntry 3 }

    wfIpBaseNetToMediaType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    invalid(2),
    		    dynamic(3),
    		    static(4)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "The type of mapping.
                Setting this object to the value invalid(2) has
                the effect of invalidating the corresponding entry
                in the ipNetToMediaTable.  That is, it effectively
                dissasociates the interface identified with said
                entry from the mapping identified with said entry.
                It is an implementation-specific matter as to
                whether the agent removes an invalidated entry
                from the table.  Accordingly, management stations
                must be prepared to receive tabular information
                from agents that corresponds to entries not
                currently in use.  Proper interpretation of such
                entries requires examination of the relevant
                ipNetToMediaType object."
        ::= { wfIpBaseHostEntry 4 }

    wfIpInterfaceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The list of configured IP interface"
        ::= { wfIpGroup 4 }

    wfIpInterfaceEntry OBJECT-TYPE
        SYNTAX	WfIpInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An IP interface description"
        INDEX	{ wfIpInterfaceAddr,
    		  wfIpInterfaceCircuit }
        ::= { wfIpInterfaceTable 1 }

    WfIpInterfaceEntry ::= SEQUENCE {
    	    wfIpInterfaceCreate
    		INTEGER,
    	    wfIpInterfaceEnable
    		INTEGER,
    	    wfIpInterfaceState
    		INTEGER,
    	    wfIpInterfaceAddr
    		IpAddress,
    	    wfIpInterfaceCircuit
    		INTEGER,
    	    wfIpInterfaceMask
    		IpAddress,
    	    wfIpInterfaceCost
    		INTEGER,
    	    wfIpInterfaceCfgBcastAddr
    		IpAddress,
    	    wfIpInterfaceBcastAddr
    		IpAddress,
    	    wfIpInterfaceMTUDiscovery
    		INTEGER,
    	    wfIpInterfaceAMR
    		INTEGER,
    	    wfIpInterfaceASB
    		INTEGER,
    	    wfIpInterfaceAddressResolutionType
    		INTEGER,
    	    wfIpInterfaceProxy
    		INTEGER,
    	    wfIpInterfaceHostCache
    		INTEGER,
    	    wfIpInterfaceUdpXsumOn
    		INTEGER,
    	    wfIpInterfaceCfgMacAddress
    		OCTET STRING,
    	    wfIpInterfaceMacAddress
    		OCTET STRING,
    	    wfIpInterfaceReasmMaxSize
    		INTEGER,
    	    wfIpInterfaceMaxInfo
    		INTEGER,
    	    wfIpInterfaceInReceives
    		Counter,
    	    wfIpInterfaceInHdrErrors
    		Counter,
    	    wfIpInterfaceInAddrErrors
    		Counter,
    	    wfIpInterfaceForwDatagrams
    		Counter,
    	    wfIpInterfaceInUnknownProtos
    		Counter,
    	    wfIpInterfaceInDiscards
    		Counter,
    	    wfIpInterfaceInDelivers
    		Counter,
    	    wfIpInterfaceOutRequests
    		Counter,
    	    wfIpInterfaceOutDiscards
    		Counter,
    	    wfIpInterfaceOutNoRoutes
    		Counter,
    	    wfIpInterfaceReasmTimeout
    		INTEGER,
    	    wfIpInterfaceReasmReqds
    		Counter,
    	    wfIpInterfaceReasmOKs
    		Counter,
    	    wfIpInterfaceReasmFails
    		Counter,
    	    wfIpInterfaceFragOKs
    		Counter,
    	    wfIpInterfaceFragFails
    		Counter,
    	    wfIpInterfaceFragCreates
    		Counter,
    	    wfIpInterfaceIcmpInMsgs
    		Counter,
    	    wfIpInterfaceIcmpInErrors
    		Counter,
    	    wfIpInterfaceIcmpInDestUnreachs
    		Counter,
    	    wfIpInterfaceIcmpInTimeExcds
    		Counter,
    	    wfIpInterfaceIcmpInParmProbs
    		Counter,
    	    wfIpInterfaceIcmpInSrcQuenchs
    		Counter,
    	    wfIpInterfaceIcmpInRedirects
    		Counter,
    	    wfIpInterfaceIcmpInEchos
    		Counter,
    	    wfIpInterfaceIcmpInEchoReps
    		Counter,
    	    wfIpInterfaceIcmpInTimestamps
    		Counter,
    	    wfIpInterfaceIcmpInTimestampReps
    		Counter,
    	    wfIpInterfaceIcmpInAddrMasks
    		Counter,
    	    wfIpInterfaceIcmpInAddrMaskReps
    		Counter,
    	    wfIpInterfaceIcmpOutMsgs
    		Counter,
    	    wfIpInterfaceIcmpOutErrors
    		Counter,
    	    wfIpInterfaceIcmpOutDestUnreachs
    		Counter,
    	    wfIpInterfaceIcmpOutTimeExcds
    		Counter,
    	    wfIpInterfaceIcmpOutParmProbs
    		Counter,
    	    wfIpInterfaceIcmpOutSrcQuenchs
    		Counter,
    	    wfIpInterfaceIcmpOutRedirects
    		Counter,
    	    wfIpInterfaceIcmpOutEchos
    		Counter,
    	    wfIpInterfaceIcmpOutEchoReps
    		Counter,
    	    wfIpInterfaceIcmpOutTimestamps
    		Counter,
    	    wfIpInterfaceIcmpOutTimestampReps
    		Counter,
    	    wfIpInterfaceIcmpOutAddrMasks
    		Counter,
    	    wfIpInterfaceIcmpOutAddrMaskReps
    		Counter,
    	    wfIpInterfaceTrEndStation
    		INTEGER,
    	    wfIpInterfaceSMDSGroupAddress
    		OCTET STRING,
    	    wfIpInterfaceSMDSArpReqAddress
    		OCTET STRING,
    	    wfIpInterfaceFRBcastDlci
    		INTEGER,
    	    wfIpInterfaceFRMcast1Dlci
    		INTEGER,
    	    wfIpInterfaceFRMcast2Dlci
    		INTEGER,
    	    wfIpInterfaceRedirect
    		INTEGER,
    	    wfIpInterfaceEnetArpEncaps
    		INTEGER,
    	    wfIpInterfaceCacheMisses
    		Counter,
    	    wfIpInterfaceCacheNetworks
    		Gauge,
    	    wfIpInterfaceCacheRemoves
    		Counter,
    	    wfIpInterfaceSlotMask
    		Gauge,
    	    wfIpInterfaceEnableSecurity
    		INTEGER,
    	    wfIpInterfaceStripSecurity
    		INTEGER,
    	    wfIpInterfaceRequireOutSecurity
    		INTEGER,
    	    wfIpInterfaceRequireInSecurity
    		INTEGER,
    	    wfIpInterfaceMinLevel
    		INTEGER,
    	    wfIpInterfaceMaxLevel
    		INTEGER,
    	    wfIpInterfaceMustOutAuthority
    		OCTET STRING,
    	    wfIpInterfaceMayOutAuthority
    		OCTET STRING,
    	    wfIpInterfaceMustInAuthority
    		OCTET STRING,
    	    wfIpInterfaceMayInAuthority
    		OCTET STRING,
    	    wfIpInterfaceImplicitLabelEnabled
    		INTEGER,
    	    wfIpInterfaceImplicitAuth
    		OCTET STRING,
    	    wfIpInterfaceImplicitLevel
    		INTEGER,
    	    wfIpInterfaceDefaultLabelEnabled
    		INTEGER,
    	    wfIpInterfaceDefaultAuth
    		OCTET STRING,
    	    wfIpInterfaceDefaultLevel
    		INTEGER,
    	    wfIpInterfaceErrorLabelEnabled
    		INTEGER,
    	    wfIpInterfaceErrorAuth
    		OCTET STRING,
    	    wfIpInterfaceDropRxAuths
    		Counter,
    	    wfIpInterfaceDropRxFormats
    		Counter,
    	    wfIpInterfaceDropRxLevels
    		Counter,
    	    wfIpInterfaceDropRxNoIpsos
    		Counter,
    	    wfIpInterfaceDropTxAuths
    		Counter,
    	    wfIpInterfaceDropTxLevels
    		Counter,
    	    wfIpInterfaceDropTxNoIpsos
    		Counter,
    	    wfIpInterfaceDropTxNoIpsoRooms
    		Counter,
    	    wfIpInterfaceICMPInAdminProhib
    		Counter,
    	    wfIpInterfaceICMPOutAdminProhib
    		Counter,
    	    wfIpInterfaceFwdCacheSize
    		INTEGER,
    	    wfIpInterfaceTunnelInfo
    		OCTET STRING,
    	    wfIpInterfaceIcmpInRdiscSolicit
    		Counter,
    	    wfIpInterfaceIcmpInRdiscAdvert
    		Counter,
    	    wfIpInterfaceIcmpOutRdiscAdvert
    		Counter,
    	    wfIpInterfaceRoutingDiscards
    		Counter,
    	    wfIpInterfaceUnnumAssocAddr
    		IpAddress,
    	    wfIpInterfaceUnnumAssocAlt
    		INTEGER,
    	    wfIpInterfaceAtmArpMode
    		INTEGER,
    	    wfIpInterfaceAtmArpServerAddress
    		OCTET STRING,
    	    wfIpInterfaceAtmArpServerVcAgingEnable
    		INTEGER,
    	    wfIpInterfaceAtmArpServerRegInterval
    		INTEGER,
    	    wfIpInterfaceAtmArpServerConnState
    		INTEGER,
    	    wfIpInterfaceAtmArpAttemptedCalls
    		Counter,
    	    wfIpInterfaceAtmArpFailRetryCalls
    		Counter,
    	    wfIpInterfaceAtmArpFailNoRetryCalls
    		Counter,
    	    wfIpInterfaceAtmArpSuccessfulCalls
    		Counter,
    	    wfIpInterfaceAtmArpAcceptedCalls
    		Counter,
    	    wfIpInterfaceAtmArpOpenSvcs
    		Counter,
    	    wfIpInterfaceAtmArpMisc
    		INTEGER,
    	    wfIpInterfaceAtmArpMisc2
    		INTEGER,
    	    wfIpInterfaceMcastInPkts
    		Counter,
    	    wfIpInterfaceMcastOutPkts
    		Counter,
    	    wfIpInterfaceTrEsArpType
    		INTEGER
        }

    wfIpInterfaceCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform a set operation on this
                object in order to create/delete an IP interface."
        DEFVAL	{ create }
        ::= { wfIpInterfaceEntry 1 }

    wfIpInterfaceEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform a set operation on this
                object in order to enable/disable an IP interface."
        DEFVAL	{ enable }
        ::= { wfIpInterfaceEntry 2 }

    wfIpInterfaceState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    invalid(4),
    		    notpres(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "INvalid indicates an error in processing the cfg record"
        DEFVAL	{ notpres }
        ::= { wfIpInterfaceEntry 3 }

    wfIpInterfaceAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP Address to which this entry's addressing information
                pertains"
        ::= { wfIpInterfaceEntry 4 }

    wfIpInterfaceCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Circuit Number that this interface runs over"
        ::= { wfIpInterfaceEntry 5 }

    wfIpInterfaceMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The subnet mask associated with the IP address of
                this entry.  The value of the mask is an IP
                address with all the network bits set to 1 and all
                the hosts bits set to 0."
        ::= { wfIpInterfaceEntry 6 }

    wfIpInterfaceCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Cost metric associated with the IP Address of this entry"
        DEFVAL	{ 1 }
        ::= { wfIpInterfaceEntry 7 }

    wfIpInterfaceCfgBcastAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The user can specifcy a broadcast address for a NWIF"
        ::= { wfIpInterfaceEntry 8 }

    wfIpInterfaceBcastAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of the broadcast address used for sending datagrams on
                the (logical) interface associated with the IP
                address of this entry. This value applies to
                both the subnet and network broadcasts addresses
                used by the entity on this (logical) interface.
                This is value used by the software"
        ::= { wfIpInterfaceEntry 9 }

    wfIpInterfaceMTUDiscovery OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Whether MTU discovery option is on/off"
        DEFVAL	{ off }
        ::= { wfIpInterfaceEntry 10 }

    wfIpInterfaceAMR OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Whether Address Mask Reply is ON/OFF"
        DEFVAL	{ off }
        ::= { wfIpInterfaceEntry 11 }

    wfIpInterfaceASB OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Whether All-Subnet Broadcasts Are excepted and Sent out this NWIF"
        DEFVAL	{ off }
        ::= { wfIpInterfaceEntry 12 }

    wfIpInterfaceAddressResolutionType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    arp(1),
    		    ddn(3),
    		    pdn(4),
    		    inarp(5),
    		    arpinarp(6),
    		    none(7),
    		    bfeddn(8),
    		    probe(9),
    		    arpprobe(10),
    		    atmarp(11)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates which Address Resolution Type to use"
        DEFVAL	{ arp }
        ::= { wfIpInterfaceEntry 13 }

    wfIpInterfaceProxy OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates Whether Proxy is on this Interface or not"
        DEFVAL	{ off }
        ::= { wfIpInterfaceEntry 14 }

    wfIpInterfaceHostCache OBJECT-TYPE
        SYNTAX	INTEGER {
    		    cacheoff(1),
    		    cache120(120),
    		    cache180(180),
    		    cache240(240),
    		    cache300(300),
    		    cache600(600),
    		    cache900(900),
    		    cache1200(1200)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Whether the Host Cache (Address Aging) is on or not.
                A Range of discrete values is specified as well as a
                value meaning  don't age"
        DEFVAL	{ cacheoff }
        ::= { wfIpInterfaceEntry 15 }

    wfIpInterfaceUdpXsumOn OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Whether to turn UDP checksum verification on
                for UDP packets recieved and transmitted by
                this router"
        DEFVAL	{ on }
        ::= { wfIpInterfaceEntry 16 }

    wfIpInterfaceCfgMacAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The desired mac set by the user"
        ::= { wfIpInterfaceEntry 17 }

    wfIpInterfaceMacAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The MAC Address for this Interface- actual one used"
        ::= { wfIpInterfaceEntry 18 }

    wfIpInterfaceReasmMaxSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The size of the largest IP datagram which this
                entity can re-assemble from incoming IP fragmented
                datagrams received on this interface."
        ::= { wfIpInterfaceEntry 19 }

    wfIpInterfaceMaxInfo OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum size of the INFO (non-MAC) field that
                this port will receive or transmit."
        ::= { wfIpInterfaceEntry 20 }

    wfIpInterfaceInReceives OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of input datagrams received from interfaces,
                including those received in error."
        ::= { wfIpInterfaceEntry 21 }

    wfIpInterfaceInHdrErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of input datagrams discarded due to
                errors in their IP headers, including bad
                checksums, version number mismatch, other format
                errors, time-to-live exceeded, errors discovered
                in processing their IP options, etc."
        ::= { wfIpInterfaceEntry 22 }

    wfIpInterfaceInAddrErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of input datagrams discarded because
                the IP address in their IP header's destination
                field was not a valid address to be received at
                this entity.  This count includes invalid
                addresses (e.g., 0.0.0.0) and addresses of
                unsupported Classes (e.g., Class E).  For entities
                which are not IP Gateways and therefore do not
                forward datagrams, this counter includes datagrams
                discarded because the destination address was not
                a local address."
        ::= { wfIpInterfaceEntry 23 }

    wfIpInterfaceForwDatagrams OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of input datagrams for which this
                entity was not their final IP destination, as a
                result of which an attempt was made to find a
                route to forward them to that final destination.
                In entities which do not act as IP Gateways, this
                counter will include only those packets which were
                Source-Routed via this entity, and the Source-
                Route option processing was successful."
        ::= { wfIpInterfaceEntry 24 }

    wfIpInterfaceInUnknownProtos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of locally-addressed datagrams
                received successfully but discarded because of an
                unknown or unsupported protocol."
        ::= { wfIpInterfaceEntry 25 }

    wfIpInterfaceInDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of input IP datagrams for which no
                problems were encountered to prevent their
                continued processing, but which were discarded
                (e.g., for lack of buffer space).  Note that this
                counter does not include any datagrams discarded
                while awaiting re-assembly."
        ::= { wfIpInterfaceEntry 26 }

    wfIpInterfaceInDelivers OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of input datagrams successfully
                delivered to IP user-protocols (including ICMP)."
        ::= { wfIpInterfaceEntry 27 }

    wfIpInterfaceOutRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of IP datagrams which local IP
                user-protocols (including ICMP) supplied to IP in
                requests for transmission.  Note that this counter
                does not include any datagrams counted in
                ipForwDatagrams."
        ::= { wfIpInterfaceEntry 28 }

    wfIpInterfaceOutDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of output IP datagrams for which no
                problem was encountered to prevent their
                transmission to their destination, but which were
                discarded (e.g., for lack of buffer space).  Note
                that this counter would include datagrams counted
                in ipForwDatagrams if any such packets met this
                (discretionary) discard criterion."
        ::= { wfIpInterfaceEntry 29 }

    wfIpInterfaceOutNoRoutes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IP datagrams discarded because no
                route could be found to transmit them to their
                destination.  Note that this counter includes any
                packets counted in ipForwDatagrams which meet this
                `no-route' criterion.  Note that this includes any
                datagarms which a host cannot route because all of
                its default gateways are down."
        ::= { wfIpInterfaceEntry 30 }

    wfIpInterfaceReasmTimeout OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of seconds which received
                fragments are held while they are awaiting
                reassembly at this entity."
        ::= { wfIpInterfaceEntry 31 }

    wfIpInterfaceReasmReqds OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IP fragments received which needed
                to be reassembled at this entity."
        ::= { wfIpInterfaceEntry 32 }

    wfIpInterfaceReasmOKs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IP datagrams successfully reassembled."
        ::= { wfIpInterfaceEntry 33 }

    wfIpInterfaceReasmFails OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of failures detected by the IP re-
                assembly algorithm (for whatever reason: timed
                out, errors, etc).  Note that this is not
                necessarily a count of discarded IP fragments
                since some algorithms (notably the algorithm in
                RFC 815) can lose track of the number of fragments
                by combining them as they are received."
        ::= { wfIpInterfaceEntry 34 }

    wfIpInterfaceFragOKs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IP datagrams that have been
                successfully fragmented at this entity."
        ::= { wfIpInterfaceEntry 35 }

    wfIpInterfaceFragFails OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IP datagrams that have been
                discarded because they needed to be fragmented at
                this entity but could not be, e.g., because their
                Don't Fragment flag was set."
        ::= { wfIpInterfaceEntry 36 }

    wfIpInterfaceFragCreates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IP datagram fragments that have
                been generated as a result of fragmentation at
                this entity."
        ::= { wfIpInterfaceEntry 37 }

    wfIpInterfaceIcmpInMsgs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of ICMP messages which includes
                all those counted by wfIpInterfaceIcmpInErrors."
        ::= { wfIpInterfaceEntry 38 }

    wfIpInterfaceIcmpInErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP messages which the entity
                received but determined as having ICMP-specific
                errors (bad ICMP checksums, bad length, etc.)."
        ::= { wfIpInterfaceEntry 39 }

    wfIpInterfaceIcmpInDestUnreachs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Destination Unreachable messages received."
        ::= { wfIpInterfaceEntry 40 }

    wfIpInterfaceIcmpInTimeExcds OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Time Exceeded messages received."
        ::= { wfIpInterfaceEntry 41 }

    wfIpInterfaceIcmpInParmProbs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Parameter Problem messages received."
        ::= { wfIpInterfaceEntry 42 }

    wfIpInterfaceIcmpInSrcQuenchs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Source Quench messages received."
        ::= { wfIpInterfaceEntry 43 }

    wfIpInterfaceIcmpInRedirects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Redirect messages received."
        ::= { wfIpInterfaceEntry 44 }

    wfIpInterfaceIcmpInEchos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Echo (request) messages received."
        ::= { wfIpInterfaceEntry 45 }

    wfIpInterfaceIcmpInEchoReps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Echo Reply messages received."
        ::= { wfIpInterfaceEntry 46 }

    wfIpInterfaceIcmpInTimestamps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Timestamp (request) messages received."
        ::= { wfIpInterfaceEntry 47 }

    wfIpInterfaceIcmpInTimestampReps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Timestamp Reply messages received."
        ::= { wfIpInterfaceEntry 48 }

    wfIpInterfaceIcmpInAddrMasks OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Address Mask Request messages received."
        ::= { wfIpInterfaceEntry 49 }

    wfIpInterfaceIcmpInAddrMaskReps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Address Mask Reply messages received."
        ::= { wfIpInterfaceEntry 50 }

    wfIpInterfaceIcmpOutMsgs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of ICMP messages which this
                entity attempted to send.  Note that this counter
                includes all those counted by icmpOutErrors."
        ::= { wfIpInterfaceEntry 51 }

    wfIpInterfaceIcmpOutErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP messages which this entity did
                not send due to problems discovered within ICMP
                such as a lack of buffers.  This value should not
                include errors discovered outside the ICMP layer
                such as the inability of IP to route the resultant
                datagram.  In some implementations there may be no
                types of error which contribute to this counter's
                value."
        ::= { wfIpInterfaceEntry 52 }

    wfIpInterfaceIcmpOutDestUnreachs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Destination Unreachable messages sent."
        ::= { wfIpInterfaceEntry 53 }

    wfIpInterfaceIcmpOutTimeExcds OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Time Exceeded messages sent."
        ::= { wfIpInterfaceEntry 54 }

    wfIpInterfaceIcmpOutParmProbs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Parameter Problem messages sent."
        ::= { wfIpInterfaceEntry 55 }

    wfIpInterfaceIcmpOutSrcQuenchs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Source Quench messages sent."
        ::= { wfIpInterfaceEntry 56 }

    wfIpInterfaceIcmpOutRedirects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Redirect messages sent. For a
                host, this object will always be zero, since hosts
                do not send redirects."
        ::= { wfIpInterfaceEntry 57 }

    wfIpInterfaceIcmpOutEchos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Echo (request) messages sent."
        ::= { wfIpInterfaceEntry 58 }

    wfIpInterfaceIcmpOutEchoReps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Echo Reply messages sent."
        ::= { wfIpInterfaceEntry 59 }

    wfIpInterfaceIcmpOutTimestamps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Timestamp (request) messages sent."
        ::= { wfIpInterfaceEntry 60 }

    wfIpInterfaceIcmpOutTimestampReps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Timestamp Reply messages sent."
        ::= { wfIpInterfaceEntry 61 }

    wfIpInterfaceIcmpOutAddrMasks OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Address Mask Request messages sent."
        ::= { wfIpInterfaceEntry 62 }

    wfIpInterfaceIcmpOutAddrMaskReps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Address Mask Reply messages sent."
        ::= { wfIpInterfaceEntry 63 }

    wfIpInterfaceTrEndStation OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Use Source Routing over token ring selection. Only applies
                if pam type is TRING."
        DEFVAL	{ off }
        ::= { wfIpInterfaceEntry 64 }

    wfIpInterfaceSMDSGroupAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The SMDS group address"
        ::= { wfIpInterfaceEntry 65 }

    wfIpInterfaceSMDSArpReqAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The SMDS arp req address"
        ::= { wfIpInterfaceEntry 66 }

    wfIpInterfaceFRBcastDlci OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Frame Relay broadcast dlci"
        ::= { wfIpInterfaceEntry 67 }

    wfIpInterfaceFRMcast1Dlci OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Frame Relay multicast dlci #1"
        ::= { wfIpInterfaceEntry 68 }

    wfIpInterfaceFRMcast2Dlci OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Frame Relay multicast dlci #2"
        ::= { wfIpInterfaceEntry 69 }

    wfIpInterfaceRedirect OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates Whether we're sending out redirects on this Interface or not"
        DEFVAL	{ on }
        ::= { wfIpInterfaceEntry 70 }

    wfIpInterfaceEnetArpEncaps OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enet(1),
    		    snap(2),
    		    both(3),
    		    probelsap(4),
    		    probeenet(5),
    		    probeboth(6),
    		    arpenetprobelsap(7),
    		    arpsnapprobelsap(8),
    		    arpbothprobelsap(9)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The data link encapsulation type to use for ARP packets
                if the the media is ethernet."
        DEFVAL	{ enet }
        ::= { wfIpInterfaceEntry 71 }

    wfIpInterfaceCacheMisses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of FFT cache misses (i.e how many times did the
                cache gate have to do a look up in the RNP because the FFT
                didn't have the destination network"
        ::= { wfIpInterfaceEntry 72 }

    wfIpInterfaceCacheNetworks OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Between 0 and wfIpInterfaceFwdCacheSize"
        ::= { wfIpInterfaceEntry 73 }

    wfIpInterfaceCacheRemoves OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of networks which have been flushed from the FFT
                because of aging"
        ::= { wfIpInterfaceEntry 74 }

    wfIpInterfaceSlotMask OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Slot mask for which slots a circuit-less interface is eligible
                to run on.  The most significant bit represents slot 1, the
                next most significant bit represents slot 2, and so on...
                Slots can be 1-14.  This is only valid if wfIpInterfaceCircuit
                is 0."
        DEFVAL	{ 4294705152 }
        ::= { wfIpInterfaceEntry 75 }

    wfIpInterfaceEnableSecurity OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables RIPSO on this interface"
        DEFVAL	{ disable }
        ::= { wfIpInterfaceEntry 76 }

    wfIpInterfaceStripSecurity OBJECT-TYPE
        SYNTAX	INTEGER {
    		    incoming(1),
    		    outgoing(2),
    		    all(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines which packets will have security option removed.
                This is a bit mask."
        ::= { wfIpInterfaceEntry 77 }

    wfIpInterfaceRequireOutSecurity OBJECT-TYPE
        SYNTAX	INTEGER {
    		    forwarded(1),
    		    originated(2),
    		    all(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines which types of outbound packets are required to have a
                security option. This is a bit mask."
        DEFVAL	{ all }
        ::= { wfIpInterfaceEntry 78 }

    wfIpInterfaceRequireInSecurity OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether or not incoming packets must have security
                option. This is a bit mask."
        ::= { wfIpInterfaceEntry 79 }

    wfIpInterfaceMinLevel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unclassified(171),
    		    confidential(150),
    		    secret(90),
    		    topsecret(61)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the minimum level allowed for packets transmitted or
                received via this interface.
                  IP_NWIF_LEVEL_UNCLASSIFIED 171 0x000000AB
                   IP_NWIF_LEVEL_CONFIDENTIAL 150 0x00000096
                   IP_NWIF_LEVEL_SECRET 90        0x0000005A
                  IP_NWIF_LEVEL_TOPSECRET 61     0x0000003D"
        DEFVAL	{ unclassified }
        ::= { wfIpInterfaceEntry 80 }

    wfIpInterfaceMaxLevel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unclassified(171),
    		    confidential(150),
    		    secret(90),
    		    topsecret(61)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the maximum level allowed for packets transmitted or
                received via this interface.
                  IP_NWIF_LEVEL_UNCLASSIFIED 171 0x000000AB
                   IP_NWIF_LEVEL_CONFIDENTIAL 150 0x00000096
                   IP_NWIF_LEVEL_SECRET 90        0x0000005A
                  IP_NWIF_LEVEL_TOPSECRET 61     0x0000003D"
        DEFVAL	{ topsecret }
        ::= { wfIpInterfaceEntry 81 }

    wfIpInterfaceMustOutAuthority OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the authority bits that must be set in packets
                transmitted via this interface. This is a bit map. Zero is
                valid.  Authorities have been defined for the first octet. This is
                represented by the following 'bit mask' values.

                       IP_NWIF_AUTH_NONE      0  (0x00)
                       IP_NWIF_AUTH_GENSER  128  (0x80)
                       IP_NWIF_AUTH_SIOPESI  64  (0x40)
                       IP_NWIF_AUTH_SCI      32  (0x20)
                       IP_NWIF_AUTH_NSA      16  (0x10)
                       IP_NWIF_AUTH_DOE       8  (0x08)
                       IP_NWIF_AUTH_ALL     248  (0xF8)

                If no value is specified, the software will default to IP_NWIF_AUTH_NONE."
        ::= { wfIpInterfaceEntry 82 }

    wfIpInterfaceMayOutAuthority OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the authority bits that may be set in packets
                transmitted via this interface. This is a bit map. Zero is
                valid.  Authorities have been defined for the first octet. This is
                represented by the following 'bit mask' values.

                       IP_NWIF_AUTH_NONE      0  (0x00)
                       IP_NWIF_AUTH_GENSER  128  (0x80)
                       IP_NWIF_AUTH_SIOPESI  64  (0x40)
                       IP_NWIF_AUTH_SCI      32  (0x20)
                       IP_NWIF_AUTH_NSA      16  (0x10)
                       IP_NWIF_AUTH_DOE       8  (0x08)
                       IP_NWIF_AUTH_ALL     248  (0xF8)

                If no value is specified, the software will default to IP_NWIF_AUTH_ALL."
        ::= { wfIpInterfaceEntry 83 }

    wfIpInterfaceMustInAuthority OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the authority bits that must be set in packets
                received via this interface. This is a bit map. Zero is
                valid.  Authorities have been defined for the first octet. This is
                represented by the following 'bit mask' values.

                       IP_NWIF_AUTH_NONE      0  (0x00)
                       IP_NWIF_AUTH_GENSER  128  (0x80)
                       IP_NWIF_AUTH_SIOPESI  64  (0x40)
                       IP_NWIF_AUTH_SCI      32  (0x20)
                       IP_NWIF_AUTH_NSA      16  (0x10)
                       IP_NWIF_AUTH_DOE       8  (0x08)
                       IP_NWIF_AUTH_ALL     248  (0xF8)

                If no value is specified, the software will default to IP_NWIF_AUTH_NONE."
        ::= { wfIpInterfaceEntry 84 }

    wfIpInterfaceMayInAuthority OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the authority bits that may be set in packets
                received via this interface. This is a bit map. Zero is
                valid.  Authorities have been defined for the first octet. This is
                represented by the following 'bit mask' values.

                       IP_NWIF_AUTH_NONE      0  (0x00)
                       IP_NWIF_AUTH_GENSER  128  (0x80)
                       IP_NWIF_AUTH_SIOPESI  64  (0x40)
                       IP_NWIF_AUTH_SCI      32  (0x20)
                       IP_NWIF_AUTH_NSA      16  (0x10)
                       IP_NWIF_AUTH_DOE       8  (0x08)
                       IP_NWIF_AUTH_ALL     248  (0xF8)

                If no value is specified, the software will default to IP_NWIF_AUTH_ALL."
        ::= { wfIpInterfaceEntry 85 }

    wfIpInterfaceImplicitLabelEnabled OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Should an implicit label be associated with any inbound unlabelled datagrams?"
        DEFVAL	{ enabled }
        ::= { wfIpInterfaceEntry 86 }

    wfIpInterfaceImplicitAuth OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the authority bits in the implicit label associated with
                an unlabelled inbound datagram. This is a bit map. 'NONE' means
                that a 3-byte option label (no authority byte) is used. This field only
                has meaning if implicit labelling is enabled (wfIpInterfaceImplicitLabelEnabled =
                IP_NWIF_LABEL_ENABLED).

                The octets indicate auth values. Authorities have been defined
                for the first octet. This is represented by the following 'bit mask'
                values:

                         IP_NWIF_AUTH_NONE         0   (0x00)
                         IP_NWIF_AUTH_GENSER     128   (0x80)
                         IP_NWIF_AUTH_SIOPESI     64   (0x40)
                         IP_NWIF_AUTH_SCI         32   (0x20)
                         IP_NWIF_AUTH_NSA         16   (0x10)
                         IP_NWIF_AUTH_DOE          8   (0x08)
                         IP_NWIF_AUTH_ALL        248   (0xF8)

                If no value is specified and implicit labelling is enabled,
                the software defaults to IP_NWIF_AUTH_NONE.
                "
        ::= { wfIpInterfaceEntry 87 }

    wfIpInterfaceImplicitLevel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unclassified(171),
    		    confidential(150),
    		    secret(90),
    		    topsecret(61)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the classification level byte in the implicit label
                associated with an unlabelled inbound datagram.
                 IP_NWIF_LEVEL_UNCLASSIFIED 171 0x000000AB
                  IP_NWIF_LEVEL_CONFIDENTIAL 150 0x00000096
                  IP_NWIF_LEVEL_SECRET 90        0x0000005A
                 IP_NWIF_LEVEL_TOPSECRET 61     0x0000003D"
        DEFVAL	{ unclassified }
        ::= { wfIpInterfaceEntry 88 }

    wfIpInterfaceDefaultLabelEnabled OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Should a default label be associated with any not-yet-labelled oubound datagrams?"
        DEFVAL	{ enabled }
        ::= { wfIpInterfaceEntry 89 }

    wfIpInterfaceDefaultAuth OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the authority bits in the default label associated with
                a not-yet-labelled outbound datagram. This is a bit map. 'NONE' means
                that a 3-byte option label (no authority byte) is used. This field only
                has meaning if default labelling is enabled (wfIpInterfaceDefaultLabelEnabled =
                IP_NWIF_LABEL_ENABLED).

                The octets indicate auth values. Authorities have been defined
                for the first octet. This is represented by the following 'bit mask'
                values:

                         IP_NWIF_AUTH_NONE         0   (0x00)
                         IP_NWIF_AUTH_GENSER     128   (0x80)
                         IP_NWIF_AUTH_SIOPESI     64   (0x40)
                         IP_NWIF_AUTH_SCI         32   (0x20)
                         IP_NWIF_AUTH_NSA         16   (0x10)
                         IP_NWIF_AUTH_DOE          8   (0x08)
                         IP_NWIF_AUTH_ALL        248   (0xF8)

                If no value is specified and default labelling is enabled,
                the software defaults to IP_NWIF_AUTH_NONE.
                "
        ::= { wfIpInterfaceEntry 90 }

    wfIpInterfaceDefaultLevel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unclassified(171),
    		    confidential(150),
    		    secret(90),
    		    topsecret(61)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the classification level byte to use in the default label
                associated with a not-yet-labelled outbound datagram.
                 IP_NWIF_LEVEL_UNCLASSIFIED 171 0x000000AB
                  IP_NWIF_LEVEL_CONFIDENTIAL 150 0x00000096
                  IP_NWIF_LEVEL_SECRET 90        0x0000005A
                 IP_NWIF_LEVEL_TOPSECRET 61     0x0000003D"
        DEFVAL	{ unclassified }
        ::= { wfIpInterfaceEntry 91 }

    wfIpInterfaceErrorLabelEnabled OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Should an error label be associated with any outbound ICMP error packets?"
        DEFVAL	{ enabled }
        ::= { wfIpInterfaceEntry 92 }

    wfIpInterfaceErrorAuth OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the authority bits in the error label associated with
                any outbount ICMP error packets. This is a bit map. 'NONE' means
                that a 3-byte option label (no authority byte) is used. This field only
                has meaning if error labelling is enabled (wfIpInterfaceErrorLabelEnabled =
                IP_NWIF_LABEL_ENABLED).

                The octets indicate auth values. Authorities have been defined
                for the first octet. This is represented by the following 'bit mask'
                values:

                         IP_NWIF_AUTH_NONE         0   (0x00)
                         IP_NWIF_AUTH_GENSER     128   (0x80)
                         IP_NWIF_AUTH_SIOPESI     64   (0x40)
                         IP_NWIF_AUTH_SCI         32   (0x20)
                         IP_NWIF_AUTH_NSA         16   (0x10)
                         IP_NWIF_AUTH_DOE          8   (0x08)
                         IP_NWIF_AUTH_ALL        248   (0xF8)

                If no value is specified and error labelling is enabled,
                the software defaults to IP_NWIF_AUTH_NONE
                "
        ::= { wfIpInterfaceEntry 93 }

    wfIpInterfaceDropRxAuths OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of received packets dropped because the authority flag(s) were not
                sufficient. This could mean that the 'must' flags were not all there, or
                that the flags other than the 'may' flags were specified."
        ::= { wfIpInterfaceEntry 94 }

    wfIpInterfaceDropRxFormats OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of received packets dropped because the security option format
                was invalid."
        ::= { wfIpInterfaceEntry 95 }

    wfIpInterfaceDropRxLevels OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of received packets dropped because the classification level was
                out of range."
        ::= { wfIpInterfaceEntry 96 }

    wfIpInterfaceDropRxNoIpsos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of received packets dropped because no IP security label was present."
        ::= { wfIpInterfaceEntry 97 }

    wfIpInterfaceDropTxAuths OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmitted packets dropped because the authority flag(s) were not
                sufficient. This could mean that the 'must' flags were not all there, or
                that the flags other than the 'may' flags were specified."
        ::= { wfIpInterfaceEntry 98 }

    wfIpInterfaceDropTxLevels OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmitted packets dropped because the classification level was
                out of range."
        ::= { wfIpInterfaceEntry 99 }

    wfIpInterfaceDropTxNoIpsos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packets not transmitted because no IP security label was present."
        ::= { wfIpInterfaceEntry 100 }

    wfIpInterfaceDropTxNoIpsoRooms OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packets not transmitted because there was not enough space left
                in the IP header to insert an IP security option."
        ::= { wfIpInterfaceEntry 101 }

    wfIpInterfaceICMPInAdminProhib OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of ICMP dest unreachable/communication administratively prohibited
                messages received. Note: may be sent by BFE or another system"
        ::= { wfIpInterfaceEntry 102 }

    wfIpInterfaceICMPOutAdminProhib OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of ICMP dest unreachable/communication administratively prohibited
                messages sent."
        ::= { wfIpInterfaceEntry 103 }

    wfIpInterfaceFwdCacheSize OBJECT-TYPE
        SYNTAX	INTEGER(64..2147483647)
	ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of entries allowed in the Forwarding
                Table at one time.  There is a forwarding table per interface."
        DEFVAL	{ 128 }
        ::= { wfIpInterfaceEntry 104 }

    wfIpInterfaceTunnelInfo OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If non-null and if wfIpInterfaceCircuit is zero, this string
                contains encoded information for setting up this interface
                as a tunnel endpoint.  Currently, no underlying code has been
                implemented for this feature."
        ::= { wfIpInterfaceEntry 105 }

    wfIpInterfaceIcmpInRdiscSolicit OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Router Discovery Solicit messages received."
        ::= { wfIpInterfaceEntry 106 }

    wfIpInterfaceIcmpInRdiscAdvert OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Router Discovery Advertisement messages received."
        ::= { wfIpInterfaceEntry 107 }

    wfIpInterfaceIcmpOutRdiscAdvert OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP Address Mask Reply messages sent."
        ::= { wfIpInterfaceEntry 108 }

    wfIpInterfaceRoutingDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of routing entries which were chosen to
                be discarded even though they are valid"
        ::= { wfIpInterfaceEntry 109 }

    wfIpInterfaceUnnumAssocAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Associated IP address used by unnumbered interfaces
                when sourcing a packet.  Rip also uses this attribute to
                make decisions about advertising subnets over unnumbered
                interfaces.  Rip will advertise subnets over the unnumbered
                interface if they have the same mask as the associated address."
        ::= { wfIpInterfaceEntry 110 }

    wfIpInterfaceUnnumAssocAlt OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is disabled.
                Users perform a set operation on this object in order to
                enable/disable the option to automatically assign an
                alternate unnumbered associated address in the event that
                the primary associated address interface has gone down"
        DEFVAL	{ disable }
        ::= { wfIpInterfaceEntry 111 }

    wfIpInterfaceAtmArpMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    client(1),
    		    server(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether ATMARP is a client or running
                as a server"
        DEFVAL	{ client }
        ::= { wfIpInterfaceEntry 112 }

    wfIpInterfaceAtmArpServerAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The ATMARP server address"
        ::= { wfIpInterfaceEntry 113 }

    wfIpInterfaceAtmArpServerVcAgingEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the ATMARP server VC should be
                aged (for client operation)"
        DEFVAL	{ enable }
        ::= { wfIpInterfaceEntry 114 }

    wfIpInterfaceAtmArpServerRegInterval OBJECT-TYPE
        SYNTAX	INTEGER {
    		    clientdefault(900),
    		    serverdefault(1200)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "For client operation, the interval between registration
                refreshes. For a server. this will be the duration a
                registration is valid. (in seconds)"
        DEFVAL	{ clientdefault }
        ::= { wfIpInterfaceEntry 115 }

    wfIpInterfaceAtmArpServerConnState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    init(1),
    		    wereserver(2),
    		    noservercfg(1028),
    		    closednotreg(4),
    		    openingnotreg(20),
    		    opennotregxxx(36),
    		    openfailnotreg(52),
    		    closedregingxxx(260),
    		    openingregingxxx(276),
    		    openreging(292),
    		    openfailregingxxx(308),
    		    closedreg(516),
    		    openingreg(532),
    		    openreg(548),
    		    openfailreg(564),
    		    closedregfail(772),
    		    openingregfail(788),
    		    openregfailxxx(804),
    		    openfailregfail(820),
    		    closednotregarp(12),
    		    openingnotregarp(28),
    		    opennotregarpxxx(44),
    		    openfailnotregarp(60),
    		    closedregingarpxxx(268),
    		    openingregingarpxxx(284),
    		    openregingarp(300),
    		    openfailregingarpxxx(316),
    		    closedregarp(524),
    		    openingregarp(540),
    		    openregarpxxx(556),
    		    openfailregarp(572),
    		    closedregfailarp(780),
    		    openingregfailarp(796),
    		    openregfailarpxxx(812),
    		    openfailregfailarp(828)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the state of the connection to the ATMARP
                server. This field should be interpreted as follows
                (bit 31 is msb, bit 0 is lsb):

                bits 0-3 are bits for determining ATMARP initialization,
                client/server, and if the client has ARP requests to send
                to the server:

                0x001 INIT
                0x002 WERESERVER
                0x--4 CLIENT
                0x--8 HAVEARPTOSEND

                bits 4-7 represent the state of the VC to the server:
                0x-0- CLOSED
                0x-1- OPENING
                0x-2- OPEN
                0x-3- OPENFAILED

                bits 8-11 represent the state of registration to the server:
                0x0-- NOTREGISTERED
                0x1-- REGISTERING
                0x2-- REGISTERED
                0x3-- REGISTRATIONFAILED
                0x4-- NOSERVER"
        DEFVAL	{ init }
        ::= { wfIpInterfaceEntry 116 }

    wfIpInterfaceAtmArpAttemptedCalls OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of calls ATMARP has
                attempted"
        ::= { wfIpInterfaceEntry 117 }

    wfIpInterfaceAtmArpFailRetryCalls OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of attempted calls
                that have failed, but were retried"
        ::= { wfIpInterfaceEntry 118 }

    wfIpInterfaceAtmArpFailNoRetryCalls OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of attempted calls
                that have failed, and were not retried"
        ::= { wfIpInterfaceEntry 119 }

    wfIpInterfaceAtmArpSuccessfulCalls OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of originated calls
                completed successfully"
        ::= { wfIpInterfaceEntry 120 }

    wfIpInterfaceAtmArpAcceptedCalls OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of received calls
                that were accepted"
        ::= { wfIpInterfaceEntry 121 }

    wfIpInterfaceAtmArpOpenSvcs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of currently open calls"
        ::= { wfIpInterfaceEntry 122 }

    wfIpInterfaceAtmArpMisc OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Not in use."
        ::= { wfIpInterfaceEntry 123 }

    wfIpInterfaceAtmArpMisc2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Not in use."
        ::= { wfIpInterfaceEntry 124 }

    wfIpInterfaceMcastInPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of multicast packets received by the interface"
        ::= { wfIpInterfaceEntry 125 }

    wfIpInterfaceMcastOutPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of multicast packets transmitted by the interface"
        ::= { wfIpInterfaceEntry 126 }

    wfIpInterfaceTrEsArpType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ste(1),
    		    are(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Token Ring End Station ARP type ARE / STE"
        DEFVAL	{ ste }
        ::= { wfIpInterfaceEntry 127 }

    wfIpStaticRouteTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpStaticRouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The list of static routes"
        ::= { wfIpGroup 5 }

    wfIpStaticRouteEntry OBJECT-TYPE
        SYNTAX	WfIpStaticRouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A static route definition"
        INDEX	{ wfIpSrIpAddress,
    		  wfIpSrIpNetMask,
    		  wfIpSrIpAddressRt }
        ::= { wfIpStaticRouteTable 1 }

    WfIpStaticRouteEntry ::= SEQUENCE {
    	    wfIpSrCreate
    		INTEGER,
    	    wfIpSrEnable
    		INTEGER,
    	    wfIpSrIpAddress
    		IpAddress,
    	    wfIpSrIpNetMask
    		IpAddress,
    	    wfIpSrCost
    		INTEGER,
    	    wfIpSrNextHopAddr
    		IpAddress,
    	    wfIpSrNextHopMask
    		IpAddress,
    	    wfIpSrPreference
    		INTEGER,
    	    wfIpSrIpAddressRt
    		INTEGER,
    	    wfIpSrValid
    		INTEGER,
    	    wfIpSrUnnumCct
    		INTEGER
        }

    wfIpSrCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform a set operation on this
                object in order to create/delete the IP
                Static Route."
        DEFVAL	{ create }
        ::= { wfIpStaticRouteEntry 1 }

    wfIpSrEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform a set operation on this
                        object in order to enable/disable this IP
                        Static Route."
        DEFVAL	{ enable }
        ::= { wfIpStaticRouteEntry 2 }

    wfIpSrIpAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Address of this static route"
        ::= { wfIpStaticRouteEntry 3 }

    wfIpSrIpNetMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP Network Mask for this Static Route"
        ::= { wfIpStaticRouteEntry 4 }

    wfIpSrCost OBJECT-TYPE
        SYNTAX	INTEGER {
    		    cost(1)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Cost of this Static Route"
        DEFVAL	{ cost }
        ::= { wfIpStaticRouteEntry 5 }

    wfIpSrNextHopAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Next Hop IP Address"
        ::= { wfIpStaticRouteEntry 6 }

    wfIpSrNextHopMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Next Hop IP Netmask"
        ::= { wfIpStaticRouteEntry 7 }

    wfIpSrPreference OBJECT-TYPE
        SYNTAX	INTEGER {
    		    pref(16)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This Routes Preference"
        DEFVAL	{ pref }
        ::= { wfIpStaticRouteEntry 8 }

    wfIpSrIpAddressRt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Route Identifier Which numbered route this is to be"
        ::= { wfIpStaticRouteEntry 9 }

    wfIpSrValid OBJECT-TYPE
        SYNTAX	INTEGER {
    		    valid(1),
    		    invalid(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Whether this Static Route is valid or not"
        DEFVAL	{ valid }
        ::= { wfIpStaticRouteEntry 10 }

    wfIpSrUnnumCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "static route over the Unnumbered interface"
        ::= { wfIpStaticRouteEntry 11 }

    wfIpAdjacentHostTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpAdjacentHostEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The list of Adjacent Hosts (static IP-Mac resolutions)"
        ::= { wfIpGroup 6 }

    wfIpAdjacentHostEntry OBJECT-TYPE
        SYNTAX	WfIpAdjacentHostEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A description of an adjacent host"
        INDEX	{ wfIpAdjHostIpAddress }
        ::= { wfIpAdjacentHostTable 1 }

    WfIpAdjacentHostEntry ::= SEQUENCE {
    	    wfIpAdjHostCreate
    		INTEGER,
    	    wfIpAdjHostEnable
    		INTEGER,
    	    wfIpAdjHostIpAddress
    		IpAddress,
    	    wfIpAdjHostIntf
    		IpAddress,
    	    wfIpAdjHostIntfMask
    		IpAddress,
    	    wfIpAdjHostMacAddr
    		OCTET STRING,
    	    wfIpAdjHostEncaps
    		INTEGER,
    	    wfIpAdjHostValid
    		INTEGER,
    	    wfIpAdjHostX121Addr
    		DisplayString
        }

    wfIpAdjHostCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Whether to Delete this Adjacent Host"
        DEFVAL	{ create }
        ::= { wfIpAdjacentHostEntry 1 }

    wfIpAdjHostEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Whether to Disable this Host"
        DEFVAL	{ enable }
        ::= { wfIpAdjacentHostEntry 2 }

    wfIpAdjHostIpAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address of this Adjacent Host"
        ::= { wfIpAdjacentHostEntry 3 }

    wfIpAdjHostIntf OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Interface for this Adjacent Host"
        ::= { wfIpAdjacentHostEntry 4 }

    wfIpAdjHostIntfMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Network Mask of this Intf"
        ::= { wfIpAdjacentHostEntry 5 }

    wfIpAdjHostMacAddr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The LAN Address for this HOST"
        ::= { wfIpAdjacentHostEntry 6 }

    wfIpAdjHostEncaps OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enet(1),
    		    snap(2),
    		    pdn(3),
    		    ddn(4),
    		    null(5),
    		    snapip(6)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The encapsulation type of this entry"
        DEFVAL	{ enet }
        ::= { wfIpAdjacentHostEntry 7 }

    wfIpAdjHostValid OBJECT-TYPE
        SYNTAX	INTEGER {
    		    valid(1),
    		    invalid(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Whether the record passed validation or not"
        DEFVAL	{ valid }
        ::= { wfIpAdjacentHostEntry 8 }

    wfIpAdjHostX121Addr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "X.121 address of the Adjacent host, used for PDN/X.25, DDN/X.25 and
                BFE/X.25 connections. This field is not used for any other X.25
                connections."
        ::= { wfIpAdjacentHostEntry 9 }

    wfIpTrafficFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "IP Traffic Filters"
        ::= { wfIpGroup 7 }

    wfIpTrafficFilterEntry OBJECT-TYPE
        SYNTAX	WfIpTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A traffic filter definition"
        INDEX	{ wfIpTrafficFilterInterface,
    		  wfIpTrafficFilterCircuit,
    		  wfIpTrafficFilterRuleNumber,
    		  wfIpTrafficFilterFragment }
        ::= { wfIpTrafficFilterTable 1 }

    WfIpTrafficFilterEntry ::= SEQUENCE {
    	    wfIpTrafficFilterCreate
    		INTEGER,
    	    wfIpTrafficFilterEnable
    		INTEGER,
    	    wfIpTrafficFilterStatus
    		INTEGER,
    	    wfIpTrafficFilterCounter
    		Counter,
    	    wfIpTrafficFilterDefinition
    		Opaque,
    	    wfIpTrafficFilterReserved
    		INTEGER,
    	    wfIpTrafficFilterInterface
    		IpAddress,
    	    wfIpTrafficFilterCircuit
    		INTEGER,
    	    wfIpTrafficFilterRuleNumber
    		INTEGER,
    	    wfIpTrafficFilterFragment
    		INTEGER,
    	    wfIpTrafficFilterName
    		DisplayString
        }

    wfIpTrafficFilterCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the existence of the traffic filter rule:
                created - traffic filter exists
                        delete - traffic filter does not exist and can be deleted."
        DEFVAL	{ created }
        ::= { wfIpTrafficFilterEntry 1 }

    wfIpTrafficFilterEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether or not the traffic filter rule should be used:
                enabled - activate the rule.
                disabled - inactivate the rule."
        DEFVAL	{ enabled }
        ::= { wfIpTrafficFilterEntry 2 }

    wfIpTrafficFilterStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    error(2),
    		    inactive(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines the current status of the traffic filter:
                inactive - the rule is not in use.
                active - the rule is being used.
                error - the application detected an error in the rule."
        DEFVAL	{ inactive }
        ::= { wfIpTrafficFilterEntry 3 }

    wfIpTrafficFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets that have
                matched this rule."
        ::= { wfIpTrafficFilterEntry 4 }

    wfIpTrafficFilterDefinition OBJECT-TYPE
        SYNTAX	Opaque
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The filter rule definition."
        ::= { wfIpTrafficFilterEntry 5 }

    wfIpTrafficFilterReserved OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reserved field."
        ::= { wfIpTrafficFilterEntry 6 }

    wfIpTrafficFilterInterface OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network address of the IP
                interface to which this filter is applied."
        ::= { wfIpTrafficFilterEntry 7 }

    wfIpTrafficFilterCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ID of the Circuit to which the
                filter is applied."
        ::= { wfIpTrafficFilterEntry 8 }

    wfIpTrafficFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ID for the rule."
        ::= { wfIpTrafficFilterEntry 9 }

    wfIpTrafficFilterFragment OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fragment number - for large rules."
        ::= { wfIpTrafficFilterEntry 10 }

    wfIpTrafficFilterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "name of the rule number"
        ::= { wfIpTrafficFilterEntry 11 }

    wfIpForwardTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpForwardEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "IP Forwarding table
                The IP Forwarding Table obsoletes and replaces the wfIpBaseRt
                Table  It adds knowledge of the autonomous system of the next hop,
                multiple next hop support, policy routing support, and supernetting.
                This is based on the IP Forwarding MIB presented in RFC 1354.  It
                adds the network mask to the index."
        ::= { wfIpGroup 16 }

    wfIpForwardEntry OBJECT-TYPE
        SYNTAX	WfIpForwardEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A forwarding entry"
        INDEX	{ wfIpForwardDest,
    		  wfIpForwardMask,
    		  wfIpForwardProto,
    		  wfIpForwardPolicy,
    		  wfIpForwardNextHop }
        ::= { wfIpForwardTable 1 }

    WfIpForwardEntry ::= SEQUENCE {
    	    wfIpForwardDest
    		IpAddress,
    	    wfIpForwardMask
    		IpAddress,
    	    wfIpForwardPolicy
    		INTEGER,
    	    wfIpForwardNextHop
    		IpAddress,
    	    wfIpForwardIfIndex
    		INTEGER,
    	    wfIpForwardType
    		INTEGER,
    	    wfIpForwardProto
    		INTEGER,
    	    wfIpForwardAge
    		INTEGER,
    	    wfIpForwardInfo
    		OBJECT IDENTIFIER,
    	    wfIpForwardNextHopAS
    		INTEGER,
    	    wfIpForwardMetric1
    		INTEGER,
    	    wfIpForwardMetric2
    		INTEGER,
    	    wfIpForwardMetric3
    		INTEGER,
    	    wfIpForwardMetric4
    		INTEGER,
    	    wfIpForwardMetric5
    		INTEGER
        }

    wfIpForwardDest OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The destination IP address of this route. An
                entry  with  a value of 0.0.0.0 is considered a
                default route.

                This object may not take a Multicast (Class  D)
                address value.

                Any assignment (implicit or  otherwise)  of  an
                instance  of  this  object to a value x must be
                rejected if the bitwise logical-AND of  x  with
                the  value of the corresponding instance of the
                wfIpForwardMask object is not equal to x."
        ::= { wfIpForwardEntry 1 }

    wfIpForwardMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the mask to be logical-ANDed with the
                destination  address  before  being compared to
                the value  in  the  wfIpForwardDest  field.   For
                those  systems  that  do  not support arbitrary
                subnet masks, an agent constructs the value  of
                the  ipForwardMask  by  reference to the IP
                Address Class.

                Any assignment (implicit or  otherwise)  of  an
                instance  of  this  object to a value x must be
                rejected if the bitwise logical-AND of  x  with
                the  value of the corresponding instance of the
                wfIpForwardDest object is not equal to wfIpForwardDest."
        ::= { wfIpForwardEntry 2 }

    wfIpForwardPolicy OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The general set of conditions that would cause the
                selection of one multipath route (set of next hops for
                a given destination) is referred to as 'policy'.
                Unless the mechanism indicated by wfIpForwardProtocol
                specified otherwise, the policy specifier is the IP
                TOS field.  The encoding of IP TOS is ans specified by the
                following convention.  Zero indicated the default path if
                no more specific policy applies.


                         +-----+-----+-----+-----+-----+-----+-----+-----+
                         |                 |                       |     |
                         |   PRECEDENCE    |    TYPE OF SERVICE    |  0  |
                         |                 |                       |     |
                         +-----+-----+-----+-----+-----+-----+-----+-----+

                                  IP TOS                IP TOS
                             Field     Policy      Field     Policy
                             Contents    Code      Contents    Code
                             0 0 0 0  ==>   0      0 0 0 1  ==>   2
                             0 0 1 0  ==>   4      0 0 1 1  ==>   6
                             0 1 0 0  ==>   8      0 1 0 1  ==>  10
                             0 1 1 0  ==>  12      0 1 1 1  ==>  14
                             1 0 0 0  ==>  16      1 0 0 1  ==>  18
                             1 0 1 0  ==>  20      1 0 1 1  ==>  22
                             1 1 0 0  ==>  24      1 1 0 1  ==>  26
                             1 1 1 0  ==>  28      1 1 1 1  ==>  30

                         Protocols defining 'policy' otherwise must  ei-
                         ther define a set of values which are valid for
                         this  object  or  must  implement  an  integer-
                         instanced  policy table for which this object's
                         value acts as an index."
        ::= { wfIpForwardEntry 3 }

    wfIpForwardNextHop OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "On remote routes, the address of the next system
                en route;  Otherwise, 0.0.0.0"
        ::= { wfIpForwardEntry 4 }

    wfIpForwardIfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ifIndex value which uniquely identifies the
                local interface through which the next hop of this
                route should be reached."
        ::= { wfIpForwardEntry 5 }

    wfIpForwardType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    invalid(2),
    		    direct(3),
    		    indirect(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The type of route. Note that local(3) refers
                to  a route for which the next hop is the final
                destination; remote(4) refers to  a  route  for
                which  the  next  hop is not the final destination."
        ::= { wfIpForwardEntry 6 }

    wfIpForwardProto OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    local(2),
    		    netmgmt(3),
    		    icmp(4),
    		    egp(5),
    		    ggp(6),
    		    hello(7),
    		    rip(8),
    		    isis(9),
    		    esis(10),
    		    ospf(13),
    		    bgp(14),
    		    idpr(15)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The routing mechanism via which this route was
                learned.  Inclusion of values for gateway routing
                protocols is not intended to imply that hosts
                should support those protocols."
        ::= { wfIpForwardEntry 7 }

    wfIpForwardAge OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of seconds since this route was last
                updated or otherwise determined to be correct.
                Note that no semantics of `too old' can be implied
                except through knowledge of the routing protocol
                by which the route was learned."
        ::= { wfIpForwardEntry 8 }

    wfIpForwardInfo OBJECT-TYPE
        SYNTAX	OBJECT IDENTIFIER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A reference to MIB definitions specific to the
                particular  routing protocol which is responsible
                for this route, as determined by the  value
                specified  in the route's wfIpForwardProto value.
                If this information is not present,  its  value
                should be set to the OBJECT IDENTIFIER { 0 0 },
                which is a syntactically valid object  identifier,
                and any implementation conforming to ASN.1
                and the Basic Encoding Rules must  be  able  to
                generate and recognize this value."
        ::= { wfIpForwardEntry 9 }

    wfIpForwardNextHopAS OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Autonomous System Number of the Next Hop.
                When  this  is  unknown  or not relevant to the
                protocol indicated by ipForwardProto, zero."
        ::= { wfIpForwardEntry 10 }

    wfIpForwardMetric1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The primary routing metric for this route. The
                semantics of this metric are determined by the
                routing-protocol specified in the route's
                wfIpRouteProto value.  If this metric is not used,
                its value should be set to -1."
        ::= { wfIpForwardEntry 11 }

    wfIpForwardMetric2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "An alternate routing metric for this route. The
                semantics of this metric are determined by the
                routing-protocol specified in the route's
                wfIpRouteProto value.  If this metric is not used,
                its value should be set to -1."
        ::= { wfIpForwardEntry 12 }

    wfIpForwardMetric3 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "An alternate routing metric for this route. The
                semantics of this metric are determined by the
                routing-protocol specified in the route's
                wfIpRouteProto value.  If this metric is not used,
                its value should be set to -1."
        ::= { wfIpForwardEntry 13 }

    wfIpForwardMetric4 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "An alternate routing metric for this route. The
                semantics of this metric are determined by the
                routing-protocol specified in the route's
                wfIpRouteProto value.  If this metric is not used,
                its value should be set to -1."
        ::= { wfIpForwardEntry 14 }

    wfIpForwardMetric5 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "An alternate routing metric for this route. The
                semantics of this metric are determined by the
                routing-protocol specified in the route's
                wfIpRouteProto value.  If this metric is not used,
                its value should be set to -1."
        ::= { wfIpForwardEntry 15 }

    wfIpNetToMediaEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpNetToMediaEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The list of elements in IP's host table"
        ::= { wfIpGroup 18 }

    wfIpNetToMediaEntry OBJECT-TYPE
        SYNTAX	WfIpNetToMediaEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A description of a resolved host"
        INDEX	{ wfIpNetToMediaIfIndex,
    		  wfIpNetToMediaNetAddress }
        ::= { wfIpNetToMediaEntryTable 1 }

    WfIpNetToMediaEntry ::= SEQUENCE {
    	    wfIpNetToMediaIfIndex
    		INTEGER,
    	    wfIpNetToMediaPhysAddress
    		OCTET STRING,
    	    wfIpNetToMediaNetAddress
    		IpAddress,
    	    wfIpNetToMediaType
    		INTEGER
        }

    wfIpNetToMediaIfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The interface on which this entry's equivalence
                is effective.  The interface identified by a
                particular value of this index is the same
                interface as identified by the same value of
                ifIndex."
        ::= { wfIpNetToMediaEntry 1 }

    wfIpNetToMediaPhysAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The media-dependent `physical' address."
        ::= { wfIpNetToMediaEntry 2 }

    wfIpNetToMediaNetAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IpAddress corresponding to the media-dependent
                `physical' address."
        ::= { wfIpNetToMediaEntry 3 }

    wfIpNetToMediaType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    invalid(2),
    		    dynamic(3),
    		    static(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The type of mapping.
                Setting this object to the value invalid(2) has
                the effect of invalidating the corresponding entry
                in the ipNetToMediaTable.  That is, it effectively
                dissasociates the interface identified with said
                entry from the mapping identified with said entry.
                It is an implementation-specific matter as to
                whether the agent removes an invalidated entry
                from the table.  Accordingly, management stations
                must be prepared to receive tabular information
                from agents that corresponds to entries not
                currently in use.  Proper interpretation of such
                entries requires examination of the relevant
                ipNetToMediaType object."
        ::= { wfIpNetToMediaEntry 4 }

    wfUdp		OBJECT IDENTIFIER ::= { wfUdpGroup 1 }

    wfUdpInDatagrams OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of UDP datagrams delivered to UDP users."
        ::= { wfUdp 1 }

    wfUdpNoPorts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of received UDP datagrams for which there
                was no application at the destination port."
        ::= { wfUdp 2 }

    wfUdpInErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received UDP datagrams that could not be
                delivered for reasons other than the lack of an
                application at the destination port."
        ::= { wfUdp 3 }

    wfUdpOutDatagrams OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of UDP datagrams sent from this entity."
        ::= { wfUdp 4 }

    wfUdpTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfUdpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The UDP listener table contains information about this
                entity's UDP end-points on which a local application is
                currently accepting datagrams."
        ::= { wfUdpGroup 2 }

    wfUdpEntry OBJECT-TYPE
        SYNTAX	WfUdpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A particular entry"
        INDEX	{ wfUdpLocalAddress,
    		  wfUdpLocalPort }
        ::= { wfUdpTable 1 }

    WfUdpEntry ::= SEQUENCE {
    	    wfUdpLocalAddress
    		IpAddress,
    	    wfUdpLocalPort
    		INTEGER
        }

    wfUdpLocalAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The local IP address for this UDP listener. In the case
                of a UDP listener which is willing to accept datagrams
                for any IP interface asociated with the node, the value
                0.0.0.0 is used."
        ::= { wfUdpEntry 1 }

    wfUdpLocalPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The port value"
        ::= { wfUdpEntry 2 }

    wfRipIntfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfRipIntfEntry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "The list of configured RIP interfaces"
        ::= { wfRipGroup 1 }

    wfRipIntfEntry OBJECT-TYPE
        SYNTAX	WfRipIntfEntry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "A description of a RIP interface"
        INDEX	{ wfRipInterfaceIndex }
        ::= { wfRipIntfTable 1 }

    WfRipIntfEntry ::= SEQUENCE {
    	    wfRipInterfaceCreate
    		INTEGER,
    	    wfRipInterfaceEnable
    		INTEGER,
    	    wfRipInterfaceState
    		INTEGER,
    	    wfRipInterfaceIndex
    		IpAddress,
    	    wfRipInterfaceSupply
    		INTEGER,
    	    wfRipInterfaceListen
    		INTEGER,
    	    wfRipInterfaceDefaultRouteSupply
    		INTEGER,
    	    wfRipInterfaceDefaultRouteListen
    		INTEGER,
    	    wfRipInterfacePoisonedReversed
    		INTEGER
        }

    wfRipInterfaceCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform a set operation on this
                object in order to create/delete an RIP Interface instance."
        DEFVAL	{ create }
        ::= { wfRipIntfEntry 1 }

    wfRipInterfaceEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform a set operation on this
                object in order to enable/disable a RIP interface."
        DEFVAL	{ enable }
        ::= { wfRipIntfEntry 2 }

    wfRipInterfaceState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpres(4)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The current state of RIP on this interface."
        DEFVAL	{ notpres }
        ::= { wfRipIntfEntry 3 }

    wfRipInterfaceIndex OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The IP interface to run RIP on."
        ::= { wfRipIntfEntry 4 }

    wfRipInterfaceSupply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Transmit RIP packets."
        DEFVAL	{ enable }
        ::= { wfRipIntfEntry 5 }

    wfRipInterfaceListen OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Whether to listen to RIP packets"
        DEFVAL	{ enable }
        ::= { wfRipIntfEntry 6 }

    wfRipInterfaceDefaultRouteSupply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Transmit the default route, 0.0.0.0, in RIP packets."
        DEFVAL	{ disable }
        ::= { wfRipIntfEntry 7 }

    wfRipInterfaceDefaultRouteListen OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Receive the default route, 0.0.0.0, in RIP packets."
        DEFVAL	{ disable }
        ::= { wfRipIntfEntry 8 }

    wfRipInterfacePoisonedReversed OBJECT-TYPE
        SYNTAX	INTEGER {
    		    poisoned(1),
    		    actual(2),
    		    split(3)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Specifies how the router advertises routes
                it has learned from a neighboring router in
                periodic updates subsequently sent to the
                neighbor. If 'Poisoned', the node implements
                poisoned reverse. The router now advertises
                routes learned from a neighbor in RIP updates
                subsequently sent to that neighbor with a
                hop count of wfRipBaseRipNetworkDiameter
                plus 1, (thus declaring the destination
                unreachable). If 'Split', the router
                implements a split-horizon, and omits routes
                learned from a neighbor in RIP updates
                subsequently sent to that neighbor.  If
                'Actual', the learned cost of the route
                is advertised."
        DEFVAL	{ poisoned }
        ::= { wfRipIntfEntry 9 }

    wfRipInterfaceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfRipInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The list of configured RIP interfaces"
        ::= { wfRipGroup 2 }

    wfRipInterfaceEntry OBJECT-TYPE
        SYNTAX	WfRipInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A description of a RIP interface"
        INDEX	{ wfRipIntfIndex,
    		  wfRipIntfCct }
        ::= { wfRipInterfaceTable 1 }

    WfRipInterfaceEntry ::= SEQUENCE {
    	    wfRipIntfCreate
    		INTEGER,
    	    wfRipIntfEnable
    		INTEGER,
    	    wfRipIntfState
    		INTEGER,
    	    wfRipIntfIndex
    		IpAddress,
    	    wfRipIntfSupply
    		INTEGER,
    	    wfRipIntfListen
    		INTEGER,
    	    wfRipIntfDefaultRouteSupply
    		INTEGER,
    	    wfRipIntfDefaultRouteListen
    		INTEGER,
    	    wfRipIntfPoisonedReversed
    		INTEGER,
    	    wfRipIntfCct
    		INTEGER,
    	    wfRipIntfTTL
    		INTEGER,
    	    wfRipIntfBroadcastTimer
    		INTEGER,
    	    wfRipIntfTimeoutTimer
    		INTEGER,
    	    wfRipIntfHolddownTimer
    		INTEGER,
    	    wfRipIntfCompSwitch
    		INTEGER,
    	    wfRipIntfTriggeredUpdates
    		INTEGER,
    	    wfRipIntfAuthType
    		INTEGER,
    	    wfRipIntfAuthentication
    		OCTET STRING
        }

    wfRipIntfCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform a set operation on this
                object in order to create/delete an RIP Interface instance."
        DEFVAL	{ create }
        ::= { wfRipInterfaceEntry 1 }

    wfRipIntfEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform a set operation on this
                object in order to enable/disable a RIP interface."
        DEFVAL	{ enable }
        ::= { wfRipInterfaceEntry 2 }

    wfRipIntfState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpres(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of RIP on this interface."
        DEFVAL	{ notpres }
        ::= { wfRipInterfaceEntry 3 }

    wfRipIntfIndex OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP interface to run RIP on."
        ::= { wfRipInterfaceEntry 4 }

    wfRipIntfSupply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit RIP packets."
        DEFVAL	{ enable }
        ::= { wfRipInterfaceEntry 5 }

    wfRipIntfListen OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Whether to listen to RIP packets"
        DEFVAL	{ enable }
        ::= { wfRipInterfaceEntry 6 }

    wfRipIntfDefaultRouteSupply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2),
    		    generate(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit the default route, 0.0.0.0, in RIP packets."
        DEFVAL	{ disable }
        ::= { wfRipInterfaceEntry 7 }

    wfRipIntfDefaultRouteListen OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive the default route, 0.0.0.0, in RIP packets."
        DEFVAL	{ disable }
        ::= { wfRipInterfaceEntry 8 }

    wfRipIntfPoisonedReversed OBJECT-TYPE
        SYNTAX	INTEGER {
    		    poisoned(1),
    		    actual(2),
    		    split(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies how the router advertises routes
                it has learned from a neighboring router in
                periodic updates subsequently sent to the
                neighbor. If 'Poisoned', the node implements
                poisoned reverse. The router now advertises
                routes learned from a neighbor in RIP updates
                subsequently sent to that neighbor with a
                hop count of wfRipBaseRipNetworkDiameter
                plus 1, (thus declaring the destination
                unreachable). If 'Split', the router
                implements a split-horizon, and omits routes
                learned from a neighbor in RIP updates
                subsequently sent to that neighbor.  If
                'Actual', the learned cost of the route
                is advertised."
        DEFVAL	{ poisoned }
        ::= { wfRipInterfaceEntry 9 }

    wfRipIntfCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit number of the IP interface"
        ::= { wfRipInterfaceEntry 10 }

    wfRipIntfTTL OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Time To Live in the IP Header for RIP updates"
        DEFVAL	{ 1 }
        ::= { wfRipInterfaceEntry 11 }

    wfRipIntfBroadcastTimer OBJECT-TYPE
        SYNTAX	INTEGER(5..86400)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter allows the user to configure the
                frequency of full RIP updates.  The default is
                per the standard.  The minimum would be every
                5 seconds, with a maximum of 24 hours."
        DEFVAL	{ 30 }
        ::= { wfRipInterfaceEntry 12 }

    wfRipIntfTimeoutTimer OBJECT-TYPE
        SYNTAX	INTEGER(15..259200)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter allows the user to configure the
                time period which RIP will wait before timing out
                a route.  This time is typically 3 x the broadcast
                timer.  The default is 90 seconds with a maximum of 72
                hourts."
        DEFVAL	{ 90 }
        ::= { wfRipInterfaceEntry 13 }

    wfRipIntfHolddownTimer OBJECT-TYPE
        SYNTAX	INTEGER(15..259200)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter allows the user to configure the
                time period which unreachable routes will be held in
                the Routing Pool.  This time is typically 3 x the broadcast
                timer.  It allows RIP to advertise the unreachable routes
                to help convergence time."
        DEFVAL	{ 90 }
        ::= { wfRipInterfaceEntry 14 }

    wfRipIntfCompSwitch OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rip1(1),
    		    rip2(2),
    		    aggr(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter allows the user to configure which
                mode of RIP to run.  The default is to run RIP1.
                RIP2 mode runs RIP2.  This does not do automatic
                aggregation of subnets like RIP1 does.  RIP2_AGGR
                provides the automatic aggregation of subnets for
                RIP2."
        DEFVAL	{ rip1 }
        ::= { wfRipInterfaceEntry 15 }

    wfRipIntfTriggeredUpdates OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter allows the user to configure triggered
                updates.  By default this parameter is disabled to
                conform with previous release action."
        DEFVAL	{ disable }
        ::= { wfRipInterfaceEntry 16 }

    wfRipIntfAuthType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    simple(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the type of Authentication to be used with
                RIP.  This is only valid when running RIP2"
        DEFVAL	{ none }
        ::= { wfRipInterfaceEntry 17 }

    wfRipIntfAuthentication OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Contains the authentication if the Authentication Type
                is set to simple password.  This field contains up to
                16 characters."
        ::= { wfRipInterfaceEntry 18 }

    wfRdiscIntfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfRdiscIntfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The list of configured RDISC interfaces"
        ::= { wfIpGroup 17 }

    wfRdiscIntfEntry OBJECT-TYPE
        SYNTAX	WfRdiscIntfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A description of a RDISC interface"
        INDEX	{ wfRdiscInterfaceIndex }
        ::= { wfRdiscIntfTable 1 }

    WfRdiscIntfEntry ::= SEQUENCE {
    	    wfRdiscInterfaceCreate
    		INTEGER,
    	    wfRdiscInterfaceEnable
    		INTEGER,
    	    wfRdiscInterfaceState
    		INTEGER,
    	    wfRdiscInterfaceIndex
    		IpAddress,
    	    wfRdiscInterfaceBcast
    		INTEGER,
    	    wfRdiscInterfaceMinIntrvl
    		INTEGER,
    	    wfRdiscInterfaceMaxIntrvl
    		INTEGER,
    	    wfRdiscInterfaceLifetime
    		INTEGER,
    	    wfRdiscInterfacePref
    		INTEGER,
    	    wfRdiscInterfaceUnicastAdvt
    		Counter,
    	    wfRdiscInterfaceMulticastAdvt
    		Counter
        }

    wfRdiscInterfaceCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform a set operation on this
                object in order to create/delete an RDISC Interface instance."
        DEFVAL	{ create }
        ::= { wfRdiscIntfEntry 1 }

    wfRdiscInterfaceEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform a set operation on this
                object in order to enable/disable a RDISC interface."
        DEFVAL	{ enable }
        ::= { wfRdiscIntfEntry 2 }

    wfRdiscInterfaceState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpres(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of RDISC on this interface."
        DEFVAL	{ notpres }
        ::= { wfRdiscIntfEntry 3 }

    wfRdiscInterfaceIndex OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP interface to run RDISC on."
        ::= { wfRdiscIntfEntry 4 }

    wfRdiscInterfaceBcast OBJECT-TYPE
        SYNTAX	INTEGER {
    		    mcast(1),
    		    local(2),
    		    direct(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Type of broadcast addr to use in sending advertisements"
        DEFVAL	{ mcast }
        ::= { wfRdiscIntfEntry 5 }

    wfRdiscInterfaceMinIntrvl OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Min time Interval between RDisc Advertisements (seconds)"
        DEFVAL	{ 450 }
        ::= { wfRdiscIntfEntry 6 }

    wfRdiscInterfaceMaxIntrvl OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Max time Interval between RDisc Advertisements (seconds)"
        DEFVAL	{ 600 }
        ::= { wfRdiscIntfEntry 7 }

    wfRdiscInterfaceLifetime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Max time Interval between RDisc Advertisements (seconds)"
        DEFVAL	{ 1800 }
        ::= { wfRdiscIntfEntry 8 }

    wfRdiscInterfacePref OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Interface preference level (Higher is more prefered"
        ::= { wfRdiscIntfEntry 9 }

    wfRdiscInterfaceUnicastAdvt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Couter for number of unicast advertisements"
        ::= { wfRdiscIntfEntry 10 }

    wfRdiscInterfaceMulticastAdvt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Couter for number of multicast advertisements"
        ::= { wfRdiscIntfEntry 11 }

    END  -- Wellfleet-IP-MIB
-- @(#)WSCCS q/mibs-ipex.mib 1.1 8/30/95
Wellfleet-IPEX-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:43:20 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfIpexGroup
        FROM Wellfleet-COMMON-MIB;


    wfIpex		OBJECT IDENTIFIER ::= { wfIpexGroup 1 }

    wfIpexDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete IPEX."
        DEFVAL	{ created }
        ::= { wfIpex 1 }

    wfIpexDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable IPEX."
        DEFVAL	{ enabled }
        ::= { wfIpex 2 }

    wfIpexState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of IPEX."
        DEFVAL	{ down }
        ::= { wfIpex 3 }

    wfIpexMaxSlotSessions OBJECT-TYPE
        SYNTAX	INTEGER(1..4096)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of X.25 or LAPB sessions to support
                per slot"
        DEFVAL	{ 155 }
        ::= { wfIpex 4 }

    wfIpexTotalSessions OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A current count of the total number of IPEX
                translation sessions established"
        ::= { wfIpex 5 }

    wfIpexNptConfigured OBJECT-TYPE
        SYNTAX	INTEGER {
    		    configured(1),
    		    notconfigured(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A flag showing whether NPT (not IPEX) is configured"
        DEFVAL	{ notconfigured }
        ::= { wfIpex 6 }

    wfIpexNptPresent OBJECT-TYPE
        SYNTAX	INTEGER {
    		    present(1),
    		    absent(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A flag showing whether NPT (not IPEX) is present in the Router"
        DEFVAL	{ absent }
        ::= { wfIpex 7 }

    wfIpexMappingTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpexMappingEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table which contains the list of mappings between TCP connections
                and X.25 connections.  This is the configuration table in which
                each entry sets up the association between a TCP port number and a
                X.25 DTE address or connection.
                inst_id[] = wfIpexMappingSrcConnCct wfIpexMappingSrcConnType
                wfIpexMappingID"
        ::= { wfIpexGroup 2 }

    wfIpexMappingEntry OBJECT-TYPE
        SYNTAX	WfIpexMappingEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfIpexMappingTable."
        INDEX	{ wfIpexMappingSrcConnCct,
    		  wfIpexMappingSrcConnType,
    		  wfIpexMappingID1,
    		  wfIpexMappingID2 }
        ::= { wfIpexMappingTable 1 }

    WfIpexMappingEntry ::= SEQUENCE {
    	    wfIpexMappingDelete
    		INTEGER,
    	    wfIpexMappingDisable
    		INTEGER,
    	    wfIpexMappingSrcConnCct
    		INTEGER,
    	    wfIpexMappingSrcConnType
    		INTEGER,
    	    wfIpexMappingID1
    		INTEGER,
    	    wfIpexMappingID2
    		INTEGER,
    	    wfIpexMappingDstConnCct
    		INTEGER,
    	    wfIpexMappingDstConnType
    		INTEGER,
    	    wfIpexMappingLocalDTEAddr
    		DisplayString,
    	    wfIpexMappingRemoteDTEAddr
    		DisplayString,
    	    wfIpexMappingPvcLcn
    		INTEGER,
    	    wfIpexMappingRemoteIpAddr
    		IpAddress,
    	    wfIpexMappingRemoteTcpPort
    		INTEGER,
    	    wfIpexMappingTcpClientRcvWindow
    		INTEGER,
    	    wfIpexMappingSlotNumber
    		INTEGER,
    	    wfIpexMappingMsgHdrType
    		INTEGER,
    	    wfIpexMappingX25CUDF
    		OCTET STRING,
    	    wfIpexMappingSessionBOFL
    		INTEGER
        }

    wfIpexMappingDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete attribute. Default is created.
                Users perform an SNMP SET operation on this object in
                order to create/delete a translation mapping record."
        DEFVAL	{ created }
        ::= { wfIpexMappingEntry 1 }

    wfIpexMappingDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables or Disables this Mapping entry.
                Setting this attribute to DISABLED will disconnect
                all active Sessions pertaining to this Mapping entry"
        DEFVAL	{ enabled }
        ::= { wfIpexMappingEntry 2 }

    wfIpexMappingSrcConnCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit from which the connection attempt is
                received that initiates a translation session."
        ::= { wfIpexMappingEntry 3 }

    wfIpexMappingSrcConnType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    pvc(1),
    		    svc(2),
    		    dcesvc(4),
    		    lapb(8),
    		    tcp(16)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines the type of original connection attempt.
                Whether it is a PVC, SVC, DCE_SVC, LAPB or TCP"
        ::= { wfIpexMappingEntry 4 }

    wfIpexMappingID1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The translation mapping identifier which identifies the remote
                connection of the translation session.  This is an identifier
                that is available from the incoming connection attempt.

                For SVCs, the Mapping id is the Called DTE address in BCD format
                padded with nibbles of the value 0xF to a fixed size of 16 digits.
                For PVCs, the Mapping id is LCN.
                For connections from X.25 DCEs (AT&T terminals) and LAPB
                connections, there is no mapping identifier.
                Finally for TCP connections, the Mapping id is the remote
                TCP port number in the incoming connection.

                The Mapping ID is encoded in two long word integers, as follows:

                 ------------------------------------------------------------------
                 Type   Mapping ID                    Attributes
                                            wfIpexMappingID1         wfIpexMappingID2
                 ----   ----------          ---------------------------------------
                 SVC    Called DTE addr     first 8 nibbles         rest 8 nibbles
                        BCD format, padded with
                        trailing nibbles of F's
                 PVC    LCN                 LCN                     0
                 LAPB   'any addresses'     0                       0
                 DCE_SVC 'any addresses'    0                       0
                 TCP    Local Port Number port number       0
                 ------------------------------------------------------------------
                 "
        ::= { wfIpexMappingEntry 5 }

    wfIpexMappingID2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "(See description for wfIpexMappingID1 above)"
        ::= { wfIpexMappingEntry 6 }

    wfIpexMappingDstConnCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The circuit from which the connection to the destination
                is to be established to set up a translation session."
        ::= { wfIpexMappingEntry 7 }

    wfIpexMappingDstConnType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    pvc(1),
    		    svc(2),
    		    dcesvc(4),
    		    lapb(8),
    		    tcp(16)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines type of connection at the destination end. Whether
                it is a PVC, SVC, DCE_SVC, LAPB or TCP"
        DEFVAL	{ pvc }
        ::= { wfIpexMappingEntry 8 }

    wfIpexMappingLocalDTEAddr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Local DTE address (identifies the X.121 address
                of the X.25 interface on the IPEX).  This attribute
                is only used in the case of a SVC connection initiated
                from the IPEX to the terminal"
        ::= { wfIpexMappingEntry 9 }

    wfIpexMappingRemoteDTEAddr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Remote DTE address (identifies the X.121 address
                of the X.25 interface on the terminal).  This attribute
                is only used in the case of a SVC connection initiated
                from the IPEX to the terminal"
        ::= { wfIpexMappingEntry 10 }

    wfIpexMappingPvcLcn OBJECT-TYPE
        SYNTAX	INTEGER(1..4095)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The LCN of the PVC connection from the IPEX to the
                terminal (identifies the channel to be used to reset
                the PVC connection.  This attribute * is only used
                in the case of a PVC connection initiated from the
                IPEX to the terminal"
        DEFVAL	{ 1 }
        ::= { wfIpexMappingEntry 11 }

    wfIpexMappingRemoteIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The IP address of the remote host with which
                this translation session is established.  This
                attribute is only used in the case of a TCP
                connection initiated from the IPEX to a host"
        ::= { wfIpexMappingEntry 12 }

    wfIpexMappingRemoteTcpPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The remote TCP port number in the host to be used
                to establish a TCP connection from the IPEX to the
                host server.  This attribute is only used in the
                case of a TCP connection initiated from the IPEX
                to a host"
        ::= { wfIpexMappingEntry 13 }

    wfIpexMappingTcpClientRcvWindow OBJECT-TYPE
        SYNTAX	INTEGER(4096..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The size of the TCP client receive window for
                flow control between IPEX and TCP.  The size is
                in bytes"
        DEFVAL	{ 8192 }
        ::= { wfIpexMappingEntry 14 }

    wfIpexMappingSlotNumber OBJECT-TYPE
        SYNTAX	INTEGER(1..13)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The slot of the access (X.25 or LAPB) circuit
                on which the X.25 or LAPB connections will be
                established."
        ::= { wfIpexMappingEntry 15 }

    wfIpexMappingMsgHdrType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    short(2),
    		    full(3),
    		    ipex(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Message header type for Message Boundary Protocol.
                NONE  = Msg Boundary Protocol is off, no msg header.
                SHORT = Msg header contains a 2-byte long length field.
                LONG  = Msg header, 1-byte type + 1-byte version + 2-byte length.
                IPEX  = Ipex type message header."
        DEFVAL	{ short }
        ::= { wfIpexMappingEntry 16 }

    wfIpexMappingX25CUDF OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The X.25 Call User Data field (CUDF) in a X.25 Call
                Request packet header.  This attribute is only used
                in the case of a SVC connection initiated from the
                IPEX to the terminal.  It is used as the network
                layer protocol identifier of the X.25 connection."
        ::= { wfIpexMappingEntry 17 }

    wfIpexMappingSessionBOFL OBJECT-TYPE
        SYNTAX	INTEGER(1..300)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The timeout value for sending a Device UP message to the TCP remote
                This is applicable for IPEX_MSGHDR_TYPE_FULL only
                The value is in seconds"
        DEFVAL	{ 15 }
        ::= { wfIpexMappingEntry 18 }

    wfIpexSessionTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpexSessionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table that contains the information about the
                current active IPEX translation sessions.  The
                status and statistics information related to each
                translation session is provided here.
                inst_id[] = wfIpexSessionIndex"
        ::= { wfIpexGroup 3 }

    wfIpexSessionEntry OBJECT-TYPE
        SYNTAX	WfIpexSessionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfIpexSession."
        INDEX	{ wfIpexSessionSrcConnCct,
    		  wfIpexSessionIndex }
        ::= { wfIpexSessionTable 1 }

    WfIpexSessionEntry ::= SEQUENCE {
    	    wfIpexSessionState
    		INTEGER,
    	    wfIpexSessionSrcConnCct
    		INTEGER,
    	    wfIpexSessionIndex
    		INTEGER,
    	    wfIpexSessionSrcConnType
    		INTEGER,
    	    wfIpexSessionDstConnCct
    		INTEGER,
    	    wfIpexSessionDstConnType
    		INTEGER,
    	    wfIpexSessionLocalDTEAddr
    		DisplayString,
    	    wfIpexSessionRemoteDTEAddr
    		DisplayString,
    	    wfIpexSessionLCN
    		INTEGER,
    	    wfIpexSessionLocalIpAddr
    		IpAddress,
    	    wfIpexSessionLocalTcpPort
    		INTEGER,
    	    wfIpexSessionRemoteIpAddr
    		IpAddress,
    	    wfIpexSessionRemoteTcpPort
    		INTEGER,
    	    wfIpexSessionTcpClientRcvWindow
    		INTEGER,
    	    wfIpexSessionTcpRcvWin
    		Counter,
    	    wfIpexSessionTcpRcvSeq
    		Counter,
    	    wfIpexSessionTcpXmtWin
    		Counter,
    	    wfIpexSessionTcpXmtSeq
    		Counter,
    	    wfIpexSessionTcpXmtAck
    		Counter,
    	    wfIpexSessionTcpXmtRem
    		Counter,
    	    wfIpexSessionX25RcvWin
    		Counter,
    	    wfIpexSessionX25RcvSeq
    		Counter,
    	    wfIpexSessionX25XmtWin
    		Counter,
    	    wfIpexSessionX25XmtSeq
    		Counter,
    	    wfIpexSessionX25XmtAck
    		Counter,
    	    wfIpexSessionX25XmtRem
    		Counter
        }

    wfIpexSessionState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    x25up(1),
    		    tcpup(2),
    		    ccestab(3),
    		    notconn(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IPEX state of this translation session. These are the
                steady states of the IPEX state machine.  Transition
                states are not reflected."
        DEFVAL	{ notconn }
        ::= { wfIpexSessionEntry 1 }

    wfIpexSessionSrcConnCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit from which the original connection attempt
                is received that initiated a translation session."
        ::= { wfIpexSessionEntry 2 }

    wfIpexSessionIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The index of this translation session"
        ::= { wfIpexSessionEntry 3 }

    wfIpexSessionSrcConnType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    pvc(1),
    		    svc(2),
    		    dcesvc(4),
    		    lapb(8),
    		    tcp(16)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines type of original connection attempt. Whether
                it is a PVC, SVC, DCE_SVC, LAPB or TCP"
        ::= { wfIpexSessionEntry 4 }

    wfIpexSessionDstConnCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit from which the connection at the destination
                to be established to set up a translation session."
        ::= { wfIpexSessionEntry 5 }

    wfIpexSessionDstConnType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    pvc(1),
    		    svc(2),
    		    dcesvc(4),
    		    lapb(8),
    		    tcp(16)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines type of connection at the destination end. Whether
                it is a PVC, SVC, DCE_SVC, LAPB or TCP"
        DEFVAL	{ pvc }
        ::= { wfIpexSessionEntry 6 }

    wfIpexSessionLocalDTEAddr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Local DTE address (identifies the X.121 address
                of the X.25 interface on the IPEX).  This attribute
                is only used in the case of a SVC connection initiated
                from the IPEX to the terminal"
        ::= { wfIpexSessionEntry 7 }

    wfIpexSessionRemoteDTEAddr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Remote DTE address (identifies the X.121 address
                of the X.25 interface on the terminal).  This attribute
                is only used in the case of a SVC connection initiated
                from the IPEX to the terminal"
        ::= { wfIpexSessionEntry 8 }

    wfIpexSessionLCN OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The LCN of the PVC (identifies the channel to be used
                to establish a PVC connection from the IPEX to the
                terminal"
        DEFVAL	{ 1 }
        ::= { wfIpexSessionEntry 9 }

    wfIpexSessionLocalIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address of an interface on the IPEX to be
                used to establish a TCP connection with the host
                server.  This attribute is only used in the case
                of a TCP connection initiated from the IPEX to a
                host"
        ::= { wfIpexSessionEntry 10 }

    wfIpexSessionLocalTcpPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The local TCP port number in the IPEX to be used
                to establish a TCP connection to the host server
                This attribute is only used in the case of a TCP
                connection initiated from the IPEX to a host"
        ::= { wfIpexSessionEntry 11 }

    wfIpexSessionRemoteIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address of the remote host with which
                this translation session is established.  This
                attribute is only used in the case of a TCP
                connection initiated from the IPEX to a host"
        ::= { wfIpexSessionEntry 12 }

    wfIpexSessionRemoteTcpPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The remote TCP port number in the host to be used
                to establish a TCP connection from the IPEX to the
                host server.  This attribute is only used in the
                case of a TCP connection initiated from the IPEX
                to a host"
        ::= { wfIpexSessionEntry 13 }

    wfIpexSessionTcpClientRcvWindow OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The size of the TCP client receive window for
                flow control between IPEX and TCP.  The size is
                in bytes"
        ::= { wfIpexSessionEntry 14 }

    wfIpexSessionTcpRcvWin OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow stats: Tcp Rcv Win in bytes"
        ::= { wfIpexSessionEntry 15 }

    wfIpexSessionTcpRcvSeq OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow stats: Tcp Rcv Seq in bytes"
        ::= { wfIpexSessionEntry 16 }

    wfIpexSessionTcpXmtWin OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow stats: Tcp Xmt Win in bytes"
        ::= { wfIpexSessionEntry 17 }

    wfIpexSessionTcpXmtSeq OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow stats: Tcp Xmt Seq in bytes"
        ::= { wfIpexSessionEntry 18 }

    wfIpexSessionTcpXmtAck OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow stats: Tcp Xmt Ack in bytes"
        ::= { wfIpexSessionEntry 19 }

    wfIpexSessionTcpXmtRem OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow stats: Tcp Remaing to Xmt in bytes"
        ::= { wfIpexSessionEntry 20 }

    wfIpexSessionX25RcvWin OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow stats: X25 Rcv Win in messages"
        ::= { wfIpexSessionEntry 21 }

    wfIpexSessionX25RcvSeq OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow stats: X25 Rcv Seq in messages"
        ::= { wfIpexSessionEntry 22 }

    wfIpexSessionX25XmtWin OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow stats: X25 Xmt Win in packets"
        ::= { wfIpexSessionEntry 23 }

    wfIpexSessionX25XmtSeq OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow stats: X25 Xmt Seq in packets"
        ::= { wfIpexSessionEntry 24 }

    wfIpexSessionX25XmtAck OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow stats: X25 Xmt Ack in packets"
        ::= { wfIpexSessionEntry 25 }

    wfIpexSessionX25XmtRem OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flow stats: X25 Remaining to Xmt in bytes"
        ::= { wfIpexSessionEntry 26 }

    END  -- Wellfleet-IPEX-MIB
-- @(#)WSCCS j/mibs-ippolicy.mib 1.1 8/30/95
Wellfleet-IPPOLICY-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:43:28 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfIpPolicyGroup
        FROM Wellfleet-COMMON-MIB;


    wfIpRipAcceptTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpRipAcceptEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Table of Rip Accept Policy Rules"
        ::= { wfIpPolicyGroup 1 }

    wfIpRipAcceptEntry OBJECT-TYPE
        SYNTAX	WfIpRipAcceptEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Rip Accept Rule Table"
        INDEX	{ wfIpRipAcceptIndex }
        ::= { wfIpRipAcceptTable 1 }

    WfIpRipAcceptEntry ::= SEQUENCE {
    	    wfIpRipAcceptDelete
    		INTEGER,
    	    wfIpRipAcceptDisable
    		INTEGER,
    	    wfIpRipAcceptIndex
    		INTEGER,
    	    wfIpRipAcceptName
    		DisplayString,
    	    wfIpRipAcceptNetworks
    		OCTET STRING,
    	    wfIpRipAcceptAction
    		INTEGER,
    	    wfIpRipAcceptPreference
    		INTEGER,
    	    wfIpRipAcceptPrecedence
    		INTEGER,
    	    wfIpRipAcceptInject
    		OCTET STRING,
    	    wfIpRipAcceptGateway
    		OCTET STRING,
    	    wfIpRipAcceptInterface
    		OCTET STRING,
    	    wfIpRipAcceptApplyMask
    		IpAddress
        }

    wfIpRipAcceptDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter."
        DEFVAL	{ create }
        ::= { wfIpRipAcceptEntry 1 }

    wfIpRipAcceptDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter."
        DEFVAL	{ enable }
        ::= { wfIpRipAcceptEntry 2 }

    wfIpRipAcceptIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Rule index number"
        ::= { wfIpRipAcceptEntry 3 }

    wfIpRipAcceptName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rule name - user specified name for this rule"
        ::= { wfIpRipAcceptEntry 4 }

    wfIpRipAcceptNetworks OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Network identification list. This identifies which
                networks will match this rule.  If non-null, The octet
                string contains one or more 3-tuples of this form:

                 first octet:  exact (1) or range (2)
                 next 4 octets: network number
                 next 4 octets: network mask

                An entry with an 'exact' tag means to only match the
                specific network advertisement (number & mask).  An
                entry with a 'range' tag means to match any network
                number that falls in the range indicated by the number
                and mask.

                An 'exact' encoding of 0.0.0.0/0.0.0.0 means 'match the
                default route.  A 'range' encoding of 0.0.0.0/0.0.0.0 means
                'match any route'.

                A null string also means 'match any route'."
        ::= { wfIpRipAcceptEntry 5 }

    wfIpRipAcceptAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    accept(1),
    		    ignore(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "action. 'accept' means that the route should be
                considered for inclusion in the routing table.  'ignore'
                means don't consider the route"
        DEFVAL	{ accept }
        ::= { wfIpRipAcceptEntry 6 }

    wfIpRipAcceptPreference OBJECT-TYPE
        SYNTAX	INTEGER(0..16)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "preference. This is a metric to be used to compare
                the route to other routes to the same destination.  A
                value of 16 is 'most preferred'.  This parameter only has
                meaning if the action is 'accept'."
        DEFVAL	{ 1 }
        ::= { wfIpRipAcceptEntry 7 }

    wfIpRipAcceptPrecedence OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "precedence. This is a metric to be used to compare
                this policy rule to other rules that a given route may
                match.  A rule with a higher precedence value will be
                chosen over one with a smaller value.  In the case of
                a tie, the rule index is used (larger wins)."
        ::= { wfIpRipAcceptEntry 8 }

    wfIpRipAcceptInject OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "network injection list. this octet string should only be
                non-null if the action is 'accept' and if it is desired to
                insert networks into the routing table that differ from
                the actual advertised network.  For instance, if a number of
                networks in a certain range are learned, an aggregate
                advertisement could be inserted instead of the individual
                networks.

                If non-null, The octet string contains one or more 2-tuples
                of this form:

                 first 4 octets: network number
                 next 4 octets: network mask

                Upon receiving a route that matches this filter, all networks
                in this list will be considered for inclusion in the routing
                table.  If the list is null, the actual received network is
                considered.

                An encoding of 255.255.255.255/255.255.255.255 means 'match the
                actual received network.'  This allows insertion of an
                aggregate or default along with the actual network.

                Currently, this is only used for routes received via BGP."
        ::= { wfIpRipAcceptEntry 9 }

    wfIpRipAcceptGateway OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "RIP gateway list. This octet string contains the addresses
                of one or more routers that could send RIP updates to this
                router.  If a router address is included in this list,
                this filter applies to RIP advertisements from that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to RIP updates
                from any router."
        ::= { wfIpRipAcceptEntry 10 }

    wfIpRipAcceptInterface OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "RIP interface list. This octet string contains the
                addresses of one or more interfaces on this router.  If an
                interface address is included in this list, this filter
                applies to RIP advertisements received on that interface.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to RIP updates
                received on any interface."
        ::= { wfIpRipAcceptEntry 11 }

    wfIpRipAcceptApplyMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Injection Mask: If the 'action' is accept and the
                actual received network will be considered, this is an
                optional IP address mask that will be applied to the network
                number from the RIP update.  This is used to override the
                interface's subnet mask in the presence of networks with
                variable length subnet masks."
        ::= { wfIpRipAcceptEntry 12 }

    wfIpRipAnnounceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpRipAnnounceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Table of Rip Announce Route Policy Rules"
        ::= { wfIpPolicyGroup 2 }

    wfIpRipAnnounceEntry OBJECT-TYPE
        SYNTAX	WfIpRipAnnounceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Rip Announce Rule Table"
        INDEX	{ wfIpRipAnnounceIndex }
        ::= { wfIpRipAnnounceTable 1 }

    WfIpRipAnnounceEntry ::= SEQUENCE {
    	    wfIpRipAnnounceDelete
    		INTEGER,
    	    wfIpRipAnnounceDisable
    		INTEGER,
    	    wfIpRipAnnounceIndex
    		INTEGER,
    	    wfIpRipAnnounceName
    		DisplayString,
    	    wfIpRipAnnounceNetworks
    		OCTET STRING,
    	    wfIpRipAnnounceAction
    		INTEGER,
    	    wfIpRipAnnouncePrecedence
    		INTEGER,
    	    wfIpRipAnnounceRouteSource
    		INTEGER,
    	    wfIpRipAnnounceExtRouteSource
    		INTEGER,
    	    wfIpRipAnnounceAdvertise
    		OCTET STRING,
    	    wfIpRipAnnounceRipGateway
    		OCTET STRING,
    	    wfIpRipAnnounceRipInterface
    		OCTET STRING,
    	    wfIpRipAnnounceOspfRouterId
    		OCTET STRING,
    	    wfIpRipAnnounceOspfType
    		INTEGER,
    	    wfIpRipAnnounceOspfTag
    		OCTET STRING,
    	    wfIpRipAnnounceEgpPeer
    		OCTET STRING,
    	    wfIpRipAnnounceEgpPeerAs
    		OCTET STRING,
    	    wfIpRipAnnounceEgpGateway
    		OCTET STRING,
    	    wfIpRipAnnounceBgpPeer
    		OCTET STRING,
    	    wfIpRipAnnounceBgpPeerAs
    		OCTET STRING,
    	    wfIpRipAnnounceBgpNextHop
    		OCTET STRING,
    	    wfIpRipAnnounceInterface
    		OCTET STRING,
    	    wfIpRipAnnounceRipMetric
    		INTEGER
        }

    wfIpRipAnnounceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter."
        DEFVAL	{ create }
        ::= { wfIpRipAnnounceEntry 1 }

    wfIpRipAnnounceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter."
        DEFVAL	{ enable }
        ::= { wfIpRipAnnounceEntry 2 }

    wfIpRipAnnounceIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Rule index number"
        ::= { wfIpRipAnnounceEntry 3 }

    wfIpRipAnnounceName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rule name - user specified name for this rule"
        ::= { wfIpRipAnnounceEntry 4 }

    wfIpRipAnnounceNetworks OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Network identification list. This identifies which
                networks will match this rule.  If non-null, The octet
                string contains one or more 3-tuples of this form:

                 first octet:  exact (1) or range (2)
                 next 4 octets: network number
                 next 4 octets: network mask

                An entry with an 'exact' tag means to only match the
                specific network advertisement (number & mask).  An
                entry with a 'range' tag means to match any network
                number that falls in the range indicated by the number
                and mask.

                An 'exact' encoding of 0.0.0.0/0.0.0.0 means 'match the
                default route.  A 'range' encoding of 0.0.0.0/0.0.0.0 means
                'match any route'.

                A null string also means 'match any route'."
        ::= { wfIpRipAnnounceEntry 5 }

    wfIpRipAnnounceAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    announce(2),
    		    ignore(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "action. 'announce' means that the route should be
                advertised.  'ignore' means don't advertise the route."
        DEFVAL	{ announce }
        ::= { wfIpRipAnnounceEntry 6 }

    wfIpRipAnnouncePrecedence OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "precedence. This is a metric to be used to compare
                this policy rule to other rules that a given route may
                match.  A rule with a higher precedence value will be
                chosen over one with a smaller value.  In the case of
                a tie, the rule index is used (larger wins)."
        ::= { wfIpRipAnnounceEntry 7 }

    wfIpRipAnnounceRouteSource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    direct(1),
    		    static(2),
    		    rip(4),
    		    ospf(8),
    		    egp(16),
    		    bgp(32),
    		    any(63)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "route source. This parameter can contain one or more
                route source identifiers.  If the route source is in this
                bit map, then a route from that source that meets the other
                criteria of this filter will match the filter."
        DEFVAL	{ any }
        ::= { wfIpRipAnnounceEntry 8 }

    wfIpRipAnnounceExtRouteSource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    direct(1),
    		    static(2),
    		    rip(4),
    		    ospf(8),
    		    egp(16),
    		    bgp(32),
    		    any(63)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "external route source. This parameter can contain one
                or more external route source identifiers.  If the external
                route source is in this bit map, then a route from that
                external source that meets the other criteria of this
                filter will match the filter."
        DEFVAL	{ any }
        ::= { wfIpRipAnnounceEntry 9 }

    wfIpRipAnnounceAdvertise OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "network advertisement list. this octet string should
                only be non-null if the action is 'announce' and if it is
                desired to advertise networks that differ from the actual
                network in the routing table.  For instance, if a number of
                networks in a certain range are in the table, an aggregate
                could be advertised instead of the individual networks.

                If non-null, The octet string contains one or more 2-tuples
                of this form:

                 first 4 octets: network number
                 next 4 octets: network mask

                Upon receiving a route that matches this filter, all networks
                in this list will be advertised.  If the list is null, the
                actual network is advertised.

                An encoding of 255.255.255.255/255.255.255.255 means 'match
                the actual network.'  This allows advertisement of an aggregate
                or default along with the actual network."
        ::= { wfIpRipAnnounceEntry 10 }

    wfIpRipAnnounceRipGateway OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from RIP' gateway list. Only applicable for RIP sourced
                routes and if RIP is included as a route source.  This octet
                string contains the addresses of one or more routers that could
                send RIP updates to this router.  If a router address is
                included in this list, this filter applies to RIP
                advertisements from that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to RIP updates
                from any router."
        ::= { wfIpRipAnnounceEntry 11 }

    wfIpRipAnnounceRipInterface OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from RIP' interface list. Only applicable for RIP
                sourced routes and if RIP is included as a route source.
                This octet string contains the addresses of one or more
                interfaces on this router.  If an interface address is
                included in this list, this filter applies to RIP
                advertisements received on that interface.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to RIP updates
                received on any interface."
        ::= { wfIpRipAnnounceEntry 12 }

    wfIpRipAnnounceOspfRouterId OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from OSPF' Router ID list. Only applicable for OSPF sourced
                routes and if OSPF is included as a route source.  This octet
                string contains the router IDs of one or more OSPF routers.
                If a router ID is included in this list, this filter applies
                to OSPF advertisements authored by that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to OSPF updates
                from any router."
        ::= { wfIpRipAnnounceEntry 13 }

    wfIpRipAnnounceOspfType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    type1(1),
    		    type2(2),
    		    external(3),
    		    internal(4),
    		    any(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from OSPF' route type. Only applicable for OSPF sourced
                routes and if OSPF is included as a route source.  This
                parameter describes which types of OSPF routes match this
                filter.  'any' means match any route type.  'internal'
                means 'match any non-ASE'.  'external' means 'match any
                ASE'.  'type1' means 'match any external type 1'.  'type2'
                means 'match any external type 2"
        DEFVAL	{ any }
        ::= { wfIpRipAnnounceEntry 14 }

    wfIpRipAnnounceOspfTag OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from OSPF' ASE tag list. Only applicable for OSPF sourced
                ASE routes and if OSPF is included as a route source.  This
                octet string contains tag values that could be present in an
                OSPF ASE advertisement.  If a tag value is included in this
                list, this filter applies to OSPF ASE advertisements that
                contain this tag value.

                If non-null, The octet string contains one or more 4-octet
                tag values.  If null, this filter applies to OSPF ASEs with
                any tag value."
        ::= { wfIpRipAnnounceEntry 15 }

    wfIpRipAnnounceEgpPeer OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from EGP' Peer list. Only applicable for EGP sourced
                routes and if EGP is included as a route source.  This octet
                string contains the IP address of one or more EGP peers.
                If an EGP peer is included in this list, this filter applies
                to EGP advertisements authored by that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to EGP
                advertisements from any router."
        ::= { wfIpRipAnnounceEntry 16 }

    wfIpRipAnnounceEgpPeerAs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from EGP' Peer AS list. Only applicable for EGP sourced
                routes and if EGP is included as a route source.  This octet
                string contains Autonomous System Numbers.  If an AS number
                is included in this list, this filter applies to EGP
                advertisements received from EBP peers in that AS.

                If non-null, The octet string contains one or more 2-octet
                AS numbers.  If null, this filter applies to EGP advertisements
                from peers in any AS."
        ::= { wfIpRipAnnounceEntry 17 }

    wfIpRipAnnounceEgpGateway OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from EGP' Gateway list. Only applicable for EGP sourced
                routes and if EGP is included as a route source.  This octet
                string contains the IP address of one or more EGP gateways.
                If an EGP gateway is included in this list, this filter applies
                to EGP advertisements that use this gateway as the next hop.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to EGP
                advertisements with any gateway address."
        ::= { wfIpRipAnnounceEntry 18 }

    wfIpRipAnnounceBgpPeer OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from BGP' Peer list. Only applicable for BGP sourced
                routes and if BGP is included as a route source.  This octet
                string contains the IP address of one or more BGP peers.
                If a BGP peer is included in this list, this filter applies
                to BGP advertisements authored by that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to BGP
                advertisements from any router."
        ::= { wfIpRipAnnounceEntry 19 }

    wfIpRipAnnounceBgpPeerAs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from BGP' AS list. Only applicable for BGP sourced
                routes and if BGP is included as a route source.  This octet
                string contains Autonomous System Numbers.  If an AS number
                is included in this list, this filter applies to BGP
                advertisements received from BGP peers in that AS.

                If non-null, The octet string contains one or more 2-octet
                AS numbers.  If null, this filter applies to BGP advertisements
                from peers in any AS."
        ::= { wfIpRipAnnounceEntry 20 }

    wfIpRipAnnounceBgpNextHop OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from BGP' NextHop list. Only applicable for BGP sourced
                routes and if BGP is included as a route source.  This octet
                string contains IP addresses.  If an IP address
                is included in this list, this filter applies to BGP
                advertisements whose NEXT_HOP attribute matches this
                IP address.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to BGP
                advertisements with any NEXT_HOP attribute."
        ::= { wfIpRipAnnounceEntry 21 }

    wfIpRipAnnounceInterface OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "RIP outbound interface list. This is a list of outgoing RIP
                interfaces.  If an interface appears in this list, the filter
                applies to RIP advertisements sent via that interface.

                If non-null, The octet string contains one or more 4-octet IP
                addresses.  If null, this filter applies to any outbound
                RIP interface."
        ::= { wfIpRipAnnounceEntry 22 }

    wfIpRipAnnounceRipMetric OBJECT-TYPE
        SYNTAX	INTEGER(0..15)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "RIP metric. Only valid if the action is 'propagate'.
                This is an optional export metric to use when advertising
                a route that matches this filter.  If zero, the routing table
                metric calculated for RIP plus the interface cost is used."
        ::= { wfIpRipAnnounceEntry 23 }

    wfIpOspfAcceptTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpOspfAcceptEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Table of OSPF Accept Route Filter Rules"
        ::= { wfIpPolicyGroup 3 }

    wfIpOspfAcceptEntry OBJECT-TYPE
        SYNTAX	WfIpOspfAcceptEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the OSPF Accept Route Policy Table"
        INDEX	{ wfIpOspfAcceptIndex }
        ::= { wfIpOspfAcceptTable 1 }

    WfIpOspfAcceptEntry ::= SEQUENCE {
    	    wfIpOspfAcceptDelete
    		INTEGER,
    	    wfIpOspfAcceptDisable
    		INTEGER,
    	    wfIpOspfAcceptIndex
    		INTEGER,
    	    wfIpOspfAcceptName
    		DisplayString,
    	    wfIpOspfAcceptNetworks
    		OCTET STRING,
    	    wfIpOspfAcceptAction
    		INTEGER,
    	    wfIpOspfAcceptPreference
    		INTEGER,
    	    wfIpOspfAcceptPrecedence
    		INTEGER,
    	    wfIpOspfAcceptInject
    		OCTET STRING,
    	    wfIpOspfAcceptType
    		INTEGER,
    	    wfIpOspfAcceptTag
    		OCTET STRING
        }

    wfIpOspfAcceptDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter."
        DEFVAL	{ create }
        ::= { wfIpOspfAcceptEntry 1 }

    wfIpOspfAcceptDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter."
        DEFVAL	{ enable }
        ::= { wfIpOspfAcceptEntry 2 }

    wfIpOspfAcceptIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Rule index number"
        ::= { wfIpOspfAcceptEntry 3 }

    wfIpOspfAcceptName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rule name - user specified name for this rule"
        ::= { wfIpOspfAcceptEntry 4 }

    wfIpOspfAcceptNetworks OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Network identification list. This identifies which
                networks will match this rule.  If non-null, The octet
                string contains one or more 3-tuples of this form:

                 first octet:  exact (1) or range (2)
                 next 4 octets: network number
                 next 4 octets: network mask

                An entry with an 'exact' tag means to only match the
                specific network advertisement (number & mask).  An
                entry with a 'range' tag means to match any network
                number that falls in the range indicated by the number
                and mask.

                An 'exact' encoding of 0.0.0.0/0.0.0.0 means 'match the
                default route.  A 'range' encoding of 0.0.0.0/0.0.0.0 means
                'match any route'.

                A null string also means 'match any route'."
        ::= { wfIpOspfAcceptEntry 5 }

    wfIpOspfAcceptAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    accept(1),
    		    ignore(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "action. 'accept' means that the route should be
                considered for inclusion in the routing table.  'ignore'
                means don't consider the route"
        DEFVAL	{ accept }
        ::= { wfIpOspfAcceptEntry 6 }

    wfIpOspfAcceptPreference OBJECT-TYPE
        SYNTAX	INTEGER(0..16)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "preference. This is a metric to be used to compare
                the route to other routes to the same destination.  A
                value of 16 is 'most preferred'.  This parameter only has
                meaning if the action is 'accept'."
        DEFVAL	{ 1 }
        ::= { wfIpOspfAcceptEntry 7 }

    wfIpOspfAcceptPrecedence OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "precedence. This is a metric to be used to compare
                this policy rule to other rules that a given route may
                match.  A rule with a higher precedence value will be
                chosen over one with a smaller value.  In the case of
                a tie, the rule index is used (larger wins)."
        ::= { wfIpOspfAcceptEntry 8 }

    wfIpOspfAcceptInject OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "network injection list. this octet string should only be
                non-null if the action is 'accept' and if it is desired to
                insert networks into the routing table that differ from
                the actual advertised network.  For instance, if a number of
                networks in a certain range are learned, an aggregate
                advertisement could be inserted instead of the individual
                networks.

                If non-null, The octet string contains one or more 2-tuples
                of this form:

                 first 4 octets: network number
                 next 4 octets: network mask

                Upon receiving a route that matches this filter, all networks
                in this list will be considered for inclusion in the routing
                table.  If the list is null, the actual received network is
                considered.

                An encoding of 255.255.255.255/255.255.255.255 means 'match the
                actual received network.'  This allows insertion of an
                aggregate or default along with the actual network.

                Currently, this is only used for routes received via BGP."
        ::= { wfIpOspfAcceptEntry 9 }

    wfIpOspfAcceptType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    type1(1),
    		    type2(2),
    		    any(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "OSPF ASE type. This parameter describes which
                types of OSPF ASE routes match this filter.
                'any' means 'match either ASE type 1 or 2'.
                'type1' means 'match any external type 1'.
                'type2' means 'match any external type 2"
        DEFVAL	{ any }
        ::= { wfIpOspfAcceptEntry 10 }

    wfIpOspfAcceptTag OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "OSPF ASE tag list. This octet string contains tag
                values that could be present in an OSPF ASE
                advertisement.  If a tag value is included in this
                list, this filter applies to OSPF ASE advertisements that
                contain this tag value.

                If non-null, The octet string contains one or more 4-octet
                tag values.  If null, this filter applies to OSPF ASEs with
                any tag value."
        ::= { wfIpOspfAcceptEntry 11 }

    wfIpOspfAnnounceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpOspfAnnounceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Table of OSPF Announce Route Policy Rules"
        ::= { wfIpPolicyGroup 4 }

    wfIpOspfAnnounceEntry OBJECT-TYPE
        SYNTAX	WfIpOspfAnnounceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the OSPF Announce Route Filter Table"
        INDEX	{ wfIpOspfAnnounceIndex }
        ::= { wfIpOspfAnnounceTable 1 }

    WfIpOspfAnnounceEntry ::= SEQUENCE {
    	    wfIpOspfAnnounceDelete
    		INTEGER,
    	    wfIpOspfAnnounceDisable
    		INTEGER,
    	    wfIpOspfAnnounceIndex
    		INTEGER,
    	    wfIpOspfAnnounceName
    		DisplayString,
    	    wfIpOspfAnnounceNetworks
    		OCTET STRING,
    	    wfIpOspfAnnounceAction
    		INTEGER,
    	    wfIpOspfAnnouncePrecedence
    		INTEGER,
    	    wfIpOspfAnnounceRouteSource
    		INTEGER,
    	    wfIpOspfAnnounceExtRouteSource
    		INTEGER,
    	    wfIpOspfAnnounceAdvertise
    		OCTET STRING,
    	    wfIpOspfAnnounceRipGateway
    		OCTET STRING,
    	    wfIpOspfAnnounceRipInterface
    		OCTET STRING,
    	    wfIpOspfAnnounceOspfRouterId
    		OCTET STRING,
    	    wfIpOspfAnnounceOspfType
    		INTEGER,
    	    wfIpOspfAnnounceOspfTag
    		OCTET STRING,
    	    wfIpOspfAnnounceEgpPeer
    		OCTET STRING,
    	    wfIpOspfAnnounceEgpPeerAs
    		OCTET STRING,
    	    wfIpOspfAnnounceEgpGateway
    		OCTET STRING,
    	    wfIpOspfAnnounceBgpPeer
    		OCTET STRING,
    	    wfIpOspfAnnounceBgpPeerAs
    		OCTET STRING,
    	    wfIpOspfAnnounceBgpNextHop
    		OCTET STRING,
    	    wfIpOspfAnnounceType
    		INTEGER,
    	    wfIpOspfAnnounceTag
    		INTEGER,
    	    wfIpOspfAnnounceAutoTag
    		INTEGER,
    	    wfIpOspfAnnounceMetric
    		INTEGER
        }

    wfIpOspfAnnounceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter."
        DEFVAL	{ create }
        ::= { wfIpOspfAnnounceEntry 1 }

    wfIpOspfAnnounceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter."
        DEFVAL	{ enable }
        ::= { wfIpOspfAnnounceEntry 2 }

    wfIpOspfAnnounceIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Rule index number"
        ::= { wfIpOspfAnnounceEntry 3 }

    wfIpOspfAnnounceName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rule name - user specified name for this rule"
        ::= { wfIpOspfAnnounceEntry 4 }

    wfIpOspfAnnounceNetworks OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Network identification list. This identifies which
                networks will match this rule.  If non-null, The octet
                string contains one or more 3-tuples of this form:

                 first octet:  exact (1) or range (2)
                 next 4 octets: network number
                 next 4 octets: network mask

                An entry with an 'exact' tag means to only match the
                specific network advertisement (number & mask).  An
                entry with a 'range' tag means to match any network
                number that falls in the range indicated by the number
                and mask.

                An 'exact' encoding of 0.0.0.0/0.0.0.0 means 'match the
                default route.  A 'range' encoding of 0.0.0.0/0.0.0.0 means
                'match any route'.

                A null string also means 'match any route'."
        ::= { wfIpOspfAnnounceEntry 5 }

    wfIpOspfAnnounceAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    announce(2),
    		    ignore(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "action. 'announce' means that the route should be
                advertised.  'ignore' means don't advertise the route."
        DEFVAL	{ announce }
        ::= { wfIpOspfAnnounceEntry 6 }

    wfIpOspfAnnouncePrecedence OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "precedence. This is a metric to be used to compare
                this policy rule to other rules that a given route may
                match.  A rule with a higher precedence value will be
                chosen over one with a smaller value.  In the case of
                a tie, the rule index is used (larger wins)."
        ::= { wfIpOspfAnnounceEntry 7 }

    wfIpOspfAnnounceRouteSource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    direct(1),
    		    static(2),
    		    rip(4),
    		    egp(16),
    		    bgp(32),
    		    any(63)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "route source. This parameter can contain one or more
                route source identifiers.  If the route source is in this
                bit map, then a route from that source that meets the other
                criteria of this filter will match the filter."
        DEFVAL	{ any }
        ::= { wfIpOspfAnnounceEntry 8 }

    wfIpOspfAnnounceExtRouteSource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    any(63)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "external route source. This parameter can contain one
                or more external route source identifiers.  If the external
                route source is in this bit map, then a route from that
                external source that meets the other criteria of this
                filter will match the filter.  Not valid for OSPF announce rules."
        DEFVAL	{ any }
        ::= { wfIpOspfAnnounceEntry 9 }

    wfIpOspfAnnounceAdvertise OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "network advertisement list. this octet string should
                only be non-null if the action is 'announce' and if it is
                desired to advertise networks that differ from the actual
                network in the routing table.  For instance, if a number of
                networks in a certain range are in the table, an aggregate
                could be advertised instead of the individual networks.

                If non-null, The octet string contains one or more 2-tuples
                of this form:

                 first 4 octets: network number
                 next 4 octets: network mask

                Upon receiving a route that matches this filter, all networks
                in this list will be advertised.  If the list is null, the
                actual network is advertised.

                An encoding of 255.255.255.255/255.255.255.255 means 'match
                the actual network.'  This allows advertisement of an aggregate
                or default along with the actual network."
        ::= { wfIpOspfAnnounceEntry 10 }

    wfIpOspfAnnounceRipGateway OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from RIP' gateway list. Only applicable for RIP sourced
                routes and if RIP is included as a route source.  This octet
                string contains the addresses of one or more routers that could
                send RIP updates to this router.  If a router address is
                included in this list, this filter applies to RIP
                advertisements from that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to RIP updates
                from any router."
        ::= { wfIpOspfAnnounceEntry 11 }

    wfIpOspfAnnounceRipInterface OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from RIP' interface list. Only applicable for RIP
                sourced routes and if RIP is included as a route source.
                This octet string contains the addresses of one or more
                interfaces on this router.  If an interface address is
                included in this list, this filter applies to RIP
                advertisements received on that interface.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to RIP updates
                received on any interface."
        ::= { wfIpOspfAnnounceEntry 12 }

    wfIpOspfAnnounceOspfRouterId OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from OSPF' Router ID list. Only applicable for OSPF sourced
                routes and if OSPF is included as a route source.  This octet
                string contains the router IDs of one or more OSPF routers.
                If a router ID is included in this list, this filter applies
                to OSPF advertisements authored by that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to OSPF updates
                from any router."
        ::= { wfIpOspfAnnounceEntry 13 }

    wfIpOspfAnnounceOspfType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    type1(1),
    		    type2(2),
    		    external(3),
    		    internal(4),
    		    any(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from OSPF' route type. Only applicable for OSPF sourced
                routes and if OSPF is included as a route source.  This
                parameter describes which types of OSPF routes match this
                filter.  'any' means match any route type.  'internal'
                means 'match any non-ASE'.  'external' means 'match any
                ASE'.  'type1' means 'match any external type 1'.  'type2'
                means 'match any external type 2"
        DEFVAL	{ any }
        ::= { wfIpOspfAnnounceEntry 14 }

    wfIpOspfAnnounceOspfTag OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from OSPF' ASE tag list. Only applicable for OSPF sourced
                ASE routes and if OSPF is included as a route source.  This
                octet string contains tag values that could be present in an
                OSPF ASE advertisement.  If a tag value is included in this
                list, this filter applies to OSPF ASE advertisements that
                contain this tag value.

                If non-null, The octet string contains one or more 4-octet
                tag values.  If null, this filter applies to OSPF ASEs with
                any tag value."
        ::= { wfIpOspfAnnounceEntry 15 }

    wfIpOspfAnnounceEgpPeer OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from EGP' Peer list. Only applicable for EGP sourced
                routes and if EGP is included as a route source.  This octet
                string contains the IP address of one or more EGP peers.
                If an EGP peer is included in this list, this filter applies
                to EGP advertisements authored by that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to EGP
                advertisements from any router."
        ::= { wfIpOspfAnnounceEntry 16 }

    wfIpOspfAnnounceEgpPeerAs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from EGP' Peer AS list. Only applicable for EGP sourced
                routes and if EGP is included as a route source.  This octet
                string contains Autonomous System Numbers.  If an AS number
                is included in this list, this filter applies to EGP
                advertisements received from EBP peers in that AS.

                If non-null, The octet string contains one or more 2-octet
                AS numbers.  If null, this filter applies to EGP advertisements
                from peers in any AS."
        ::= { wfIpOspfAnnounceEntry 17 }

    wfIpOspfAnnounceEgpGateway OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from EGP' Gateway list. Only applicable for EGP sourced
                routes and if EGP is included as a route source.  This octet
                string contains the IP address of one or more EGP gateways.
                If an EGP gateway is included in this list, this filter applies
                to EGP advertisements that use this gateway as the next hop.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to EGP
                advertisements with any gateway address."
        ::= { wfIpOspfAnnounceEntry 18 }

    wfIpOspfAnnounceBgpPeer OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from BGP' Peer list. Only applicable for BGP sourced
                routes and if BGP is included as a route source.  This octet
                string contains the IP address of one or more BGP peers.
                If a BGP peer is included in this list, this filter applies
                to BGP advertisements authored by that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to BGP
                advertisements from any router."
        ::= { wfIpOspfAnnounceEntry 19 }

    wfIpOspfAnnounceBgpPeerAs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from BGP' AS list. Only applicable for BGP sourced
                routes and if BGP is included as a route source.  This octet
                string contains Autonomous System Numbers.  If an AS number
                is included in this list, this filter applies to BGP
                advertisements received from BGP peers in that AS.

                If non-null, The octet string contains one or more 2-octet
                AS numbers.  If null, this filter applies to BGP advertisements
                from peers in any AS."
        ::= { wfIpOspfAnnounceEntry 20 }

    wfIpOspfAnnounceBgpNextHop OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from BGP' NextHop list. Only applicable for BGP sourced
                routes and if BGP is included as a route source.  This octet
                string contains IP addresses.  If an IP address
                is included in this list, this filter applies to BGP
                advertisements whose NEXT_HOP attribute matches this
                IP address.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to BGP
                advertisements with any NEXT_HOP attribute."
        ::= { wfIpOspfAnnounceEntry 21 }

    wfIpOspfAnnounceType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    type1(1),
    		    type2(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "OSPF ASE type. The ASE type to use for routes that
                match this filter.  This is only applicable if the
                action is 'accept'.  A zero value means to use the
                default ASE type for the route source."
        ::= { wfIpOspfAnnounceEntry 22 }

    wfIpOspfAnnounceTag OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "OSPF ASE tag. The ASE tag value to use for routes
                that match this filter.  This is only applicable if the
                action is 'accept' and autotag is set to 'disable'."
        ::= { wfIpOspfAnnounceEntry 23 }

    wfIpOspfAnnounceAutoTag OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2),
    		    wf(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP/OSPF automatic tag generation: Only applicable
                if action is 'announce'.  if set to 'disable',
                the value in wfIpOspfAnnounceTag will be used for a tag.
                If set to 'enable', a tag will be generated according
                to the criteria in RFC 1403 (or any RFC that supercedes
                it)."
        DEFVAL	{ disable }
        ::= { wfIpOspfAnnounceEntry 24 }

    wfIpOspfAnnounceMetric OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The optional metric to apply to this route.
                Zero means : use the route's actual cost. Only
                valid for propagate."
        ::= { wfIpOspfAnnounceEntry 25 }

    wfIpEgpAcceptTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpEgpAcceptEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Table of EGP Accept Policy Rules"
        ::= { wfIpPolicyGroup 5 }

    wfIpEgpAcceptEntry OBJECT-TYPE
        SYNTAX	WfIpEgpAcceptEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Egp Accept Rule Table"
        INDEX	{ wfIpEgpAcceptIndex }
        ::= { wfIpEgpAcceptTable 1 }

    WfIpEgpAcceptEntry ::= SEQUENCE {
    	    wfIpEgpAcceptDelete
    		INTEGER,
    	    wfIpEgpAcceptDisable
    		INTEGER,
    	    wfIpEgpAcceptIndex
    		INTEGER,
    	    wfIpEgpAcceptName
    		DisplayString,
    	    wfIpEgpAcceptNetworks
    		OCTET STRING,
    	    wfIpEgpAcceptAction
    		INTEGER,
    	    wfIpEgpAcceptPreference
    		INTEGER,
    	    wfIpEgpAcceptPrecedence
    		INTEGER,
    	    wfIpEgpAcceptInject
    		OCTET STRING,
    	    wfIpEgpAcceptPeer
    		OCTET STRING,
    	    wfIpEgpAcceptAs
    		OCTET STRING,
    	    wfIpEgpAcceptGateway
    		OCTET STRING
        }

    wfIpEgpAcceptDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter."
        DEFVAL	{ create }
        ::= { wfIpEgpAcceptEntry 1 }

    wfIpEgpAcceptDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter."
        DEFVAL	{ enable }
        ::= { wfIpEgpAcceptEntry 2 }

    wfIpEgpAcceptIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Rule index number"
        ::= { wfIpEgpAcceptEntry 3 }

    wfIpEgpAcceptName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rule name - user specified name for this rule"
        ::= { wfIpEgpAcceptEntry 4 }

    wfIpEgpAcceptNetworks OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Network identification list. This identifies which
                networks will match this rule.  If non-null, The octet
                string contains one or more 3-tuples of this form:

                 first octet:  exact (1) or range (2)
                 next 4 octets: network number
                 next 4 octets: network mask

                An entry with an 'exact' tag means to only match the
                specific network advertisement (number & mask).  An
                entry with a 'range' tag means to match any network
                number that falls in the range indicated by the number
                and mask.

                An 'exact' encoding of 0.0.0.0/0.0.0.0 means 'match the
                default route.  A 'range' encoding of 0.0.0.0/0.0.0.0 means
                'match any route'.

                A null string also means 'match any route'."
        ::= { wfIpEgpAcceptEntry 5 }

    wfIpEgpAcceptAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    accept(1),
    		    ignore(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "action. 'accept' means that the route should be
                considered for inclusion in the routing table.  'ignore'
                means don't consider the route"
        DEFVAL	{ accept }
        ::= { wfIpEgpAcceptEntry 6 }

    wfIpEgpAcceptPreference OBJECT-TYPE
        SYNTAX	INTEGER(0..16)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "preference. This is a metric to be used to compare
                the route to other routes to the same destination.  A
                value of 16 is 'most preferred'.  This parameter only has
                meaning if the action is 'accept'."
        DEFVAL	{ 1 }
        ::= { wfIpEgpAcceptEntry 7 }

    wfIpEgpAcceptPrecedence OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "precedence. This is a metric to be used to compare
                this policy rule to other rules that a given route may
                match.  A rule with a higher precedence value will be
                chosen over one with a smaller value.  In the case of
                a tie, the rule index is used (larger wins)."
        ::= { wfIpEgpAcceptEntry 8 }

    wfIpEgpAcceptInject OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "network injection list. this octet string should only be
                non-null if the action is 'accept' and if it is desired to
                insert networks into the routing table that differ from
                the actual advertised network.  For instance, if a number of
                networks in a certain range are learned, an aggregate
                advertisement could be inserted instead of the individual
                networks.

                If non-null, The octet string contains one or more 2-tuples
                of this form:

                 first 4 octets: network number
                 next 4 octets: network mask

                Upon receiving a route that matches this filter, all networks
                in this list will be considered for inclusion in the routing
                table.  If the list is null, the actual received network is
                considered.

                An encoding of 255.255.255.255/255.255.255.255 means 'match the
                actual received network.'  This allows insertion of an
                aggregate or default along with the actual network.

                Currently, this is only used for routes received via BGP."
        ::= { wfIpEgpAcceptEntry 9 }

    wfIpEgpAcceptPeer OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "EGP Peer list. This octet string contains the
                IP addresses of one or more EGP peers.  If a peer
                address appears in this list, this filter applies
                to EGP advertisements from that peer.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to EGP
                advertisements from any EGP peer."
        ::= { wfIpEgpAcceptEntry 10 }

    wfIpEgpAcceptAs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "EGP Peer AS list. This octet string contains
                Autonomous System numbers.  If an AS appears in this
                list, this filter applies to EGP advertisements from
                peers in that AS.

                If non-null, The octet string contains one or more 2-octet
                AS numbers.  If null, this filter applies to EGP
                advertisements from peers in any AS."
        ::= { wfIpEgpAcceptEntry 11 }

    wfIpEgpAcceptGateway OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "EGP gateway list. This octet string contains the
                IP address of one or more EGP gateways.  If an EGP
                gateway is included in this list, this filter applies
                to EGP advertisements that use this gateway as the next hop.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to EGP
                advertisements with any gateway address."
        ::= { wfIpEgpAcceptEntry 12 }

    wfIpEgpAnnounceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpEgpAnnounceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Table of Egp Announce Route Policy Rules"
        ::= { wfIpPolicyGroup 6 }

    wfIpEgpAnnounceEntry OBJECT-TYPE
        SYNTAX	WfIpEgpAnnounceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Egp Announce Rule Table"
        INDEX	{ wfIpEgpAnnounceIndex }
        ::= { wfIpEgpAnnounceTable 1 }

    WfIpEgpAnnounceEntry ::= SEQUENCE {
    	    wfIpEgpAnnounceDelete
    		INTEGER,
    	    wfIpEgpAnnounceDisable
    		INTEGER,
    	    wfIpEgpAnnounceIndex
    		INTEGER,
    	    wfIpEgpAnnounceName
    		DisplayString,
    	    wfIpEgpAnnounceNetworks
    		OCTET STRING,
    	    wfIpEgpAnnounceAction
    		INTEGER,
    	    wfIpEgpAnnouncePrecedence
    		INTEGER,
    	    wfIpEgpAnnounceRouteSource
    		INTEGER,
    	    wfIpEgpAnnounceExtRouteSource
    		INTEGER,
    	    wfIpEgpAnnounceAdvertise
    		OCTET STRING,
    	    wfIpEgpAnnounceRipGateway
    		OCTET STRING,
    	    wfIpEgpAnnounceRipInterface
    		OCTET STRING,
    	    wfIpEgpAnnounceOspfRouterId
    		OCTET STRING,
    	    wfIpEgpAnnounceOspfType
    		INTEGER,
    	    wfIpEgpAnnounceOspfTag
    		OCTET STRING,
    	    wfIpEgpAnnounceEgpPeer
    		OCTET STRING,
    	    wfIpEgpAnnounceEgpPeerAs
    		OCTET STRING,
    	    wfIpEgpAnnounceEgpGateway
    		OCTET STRING,
    	    wfIpEgpAnnounceBgpPeer
    		OCTET STRING,
    	    wfIpEgpAnnounceBgpPeerAs
    		OCTET STRING,
    	    wfIpEgpAnnounceBgpNextHop
    		OCTET STRING,
    	    wfIpEgpAnnouncePeer
    		OCTET STRING,
    	    wfIpEgpAnnounceInterface
    		OCTET STRING,
    	    wfIpEgpAnnounceMetric
    		INTEGER
        }

    wfIpEgpAnnounceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter."
        DEFVAL	{ create }
        ::= { wfIpEgpAnnounceEntry 1 }

    wfIpEgpAnnounceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter."
        DEFVAL	{ enable }
        ::= { wfIpEgpAnnounceEntry 2 }

    wfIpEgpAnnounceIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Rule index number"
        ::= { wfIpEgpAnnounceEntry 3 }

    wfIpEgpAnnounceName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rule name - user specified name for this rule"
        ::= { wfIpEgpAnnounceEntry 4 }

    wfIpEgpAnnounceNetworks OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Network identification list. This identifies which
                networks will match this rule.  If non-null, The octet
                string contains one or more 3-tuples of this form:

                 first octet:  exact (1) or range (2)
                 next 4 octets: network number
                 next 4 octets: network mask

                An entry with an 'exact' tag means to only match the
                specific network advertisement (number & mask).  An
                entry with a 'range' tag means to match any network
                number that falls in the range indicated by the number
                and mask.

                An 'exact' encoding of 0.0.0.0/0.0.0.0 means 'match the
                default route.  A 'range' encoding of 0.0.0.0/0.0.0.0 means
                'match any route'.

                A null string also means 'match any route'."
        ::= { wfIpEgpAnnounceEntry 5 }

    wfIpEgpAnnounceAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    announce(2),
    		    ignore(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "action. 'announce' means that the route should be
                advertised.  'ignore' means don't advertise the route."
        DEFVAL	{ announce }
        ::= { wfIpEgpAnnounceEntry 6 }

    wfIpEgpAnnouncePrecedence OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "precedence. This is a metric to be used to compare
                this policy rule to other rules that a given route may
                match.  A rule with a higher precedence value will be
                chosen over one with a smaller value.  In the case of
                a tie, the rule index is used (larger wins)."
        ::= { wfIpEgpAnnounceEntry 7 }

    wfIpEgpAnnounceRouteSource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    direct(1),
    		    static(2),
    		    rip(4),
    		    ospf(8),
    		    egp(16),
    		    bgp(32),
    		    any(63)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "route source. This parameter can contain one or more
                route source identifiers.  If the route source is in this
                bit map, then a route from that source that meets the other
                criteria of this filter will match the filter."
        DEFVAL	{ any }
        ::= { wfIpEgpAnnounceEntry 8 }

    wfIpEgpAnnounceExtRouteSource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    direct(1),
    		    static(2),
    		    rip(4),
    		    ospf(8),
    		    egp(16),
    		    bgp(32),
    		    any(63)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "external route source. This parameter can contain one
                or more external route source identifiers.  If the external
                route source is in this bit map, then a route from that
                external source that meets the other criteria of this
                filter will match the filter."
        DEFVAL	{ any }
        ::= { wfIpEgpAnnounceEntry 9 }

    wfIpEgpAnnounceAdvertise OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "network advertisement list. this octet string should
                only be non-null if the action is 'announce' and if it is
                desired to advertise networks that differ from the actual
                network in the routing table.  For instance, if a number of
                networks in a certain range are in the table, an aggregate
                could be advertised instead of the individual networks.

                If non-null, The octet string contains one or more 2-tuples
                of this form:

                 first 4 octets: network number
                 next 4 octets: network mask

                Upon receiving a route that matches this filter, all networks
                in this list will be advertised.  If the list is null, the
                actual network is advertised.

                An encoding of 255.255.255.255/255.255.255.255 means 'match
                the actual network.'  This allows advertisement of an aggregate
                or default along with the actual network."
        ::= { wfIpEgpAnnounceEntry 10 }

    wfIpEgpAnnounceRipGateway OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from RIP' gateway list. Only applicable for RIP sourced
                routes and if RIP is included as a route source.  This octet
                string contains the addresses of one or more routers that could
                send RIP updates to this router.  If a router address is
                included in this list, this filter applies to RIP
                advertisements from that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to RIP updates
                from any router."
        ::= { wfIpEgpAnnounceEntry 11 }

    wfIpEgpAnnounceRipInterface OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from RIP' interface list. Only applicable for RIP
                sourced routes and if RIP is included as a route source.
                This octet string contains the addresses of one or more
                interfaces on this router.  If an interface address is
                included in this list, this filter applies to RIP
                advertisements received on that interface.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to RIP updates
                received on any interface."
        ::= { wfIpEgpAnnounceEntry 12 }

    wfIpEgpAnnounceOspfRouterId OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from OSPF' Router ID list. Only applicable for OSPF sourced
                routes and if OSPF is included as a route source.  This octet
                string contains the router IDs of one or more OSPF routers.
                If a router ID is included in this list, this filter applies
                to OSPF advertisements authored by that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to OSPF updates
                from any router."
        ::= { wfIpEgpAnnounceEntry 13 }

    wfIpEgpAnnounceOspfType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    type1(1),
    		    type2(2),
    		    external(3),
    		    internal(4),
    		    any(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from OSPF' route type. Only applicable for OSPF sourced
                routes and if OSPF is included as a route source.  This
                parameter describes which types of OSPF routes match this
                filter.  'any' means match any route type.  'internal'
                means 'match any non-ASE'.  'external' means 'match any
                ASE'.  'type1' means 'match any external type 1'.  'type2'
                means 'match any external type 2"
        DEFVAL	{ any }
        ::= { wfIpEgpAnnounceEntry 14 }

    wfIpEgpAnnounceOspfTag OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from OSPF' ASE tag list. Only applicable for OSPF sourced
                ASE routes and if OSPF is included as a route source.  This
                octet string contains tag values that could be present in an
                OSPF ASE advertisement.  If a tag value is included in this
                list, this filter applies to OSPF ASE advertisements that
                contain this tag value.

                If non-null, The octet string contains one or more 4-octet
                tag values.  If null, this filter applies to OSPF ASEs with
                any tag value."
        ::= { wfIpEgpAnnounceEntry 15 }

    wfIpEgpAnnounceEgpPeer OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from EGP' Peer list. Only applicable for EGP sourced
                routes and if EGP is included as a route source.  This octet
                string contains the IP address of one or more EGP peers.
                If an EGP peer is included in this list, this filter applies
                to EGP advertisements authored by that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to EGP
                advertisements from any router."
        ::= { wfIpEgpAnnounceEntry 16 }

    wfIpEgpAnnounceEgpPeerAs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from EGP' Peer AS list. Only applicable for EGP sourced
                routes and if EGP is included as a route source.  This octet
                string contains Autonomous System Numbers.  If an AS number
                is included in this list, this filter applies to EGP
                advertisements received from EBP peers in that AS.

                If non-null, The octet string contains one or more 2-octet
                AS numbers.  If null, this filter applies to EGP advertisements
                from peers in any AS."
        ::= { wfIpEgpAnnounceEntry 17 }

    wfIpEgpAnnounceEgpGateway OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from EGP' Gateway list. Only applicable for EGP sourced
                routes and if EGP is included as a route source.  This octet
                string contains the IP address of one or more EGP gateways.
                If an EGP gateway is included in this list, this filter applies
                to EGP advertisements that use this gateway as the next hop.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to EGP
                advertisements with any gateway address."
        ::= { wfIpEgpAnnounceEntry 18 }

    wfIpEgpAnnounceBgpPeer OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from BGP' Peer list. Only applicable for BGP sourced
                routes and if BGP is included as a route source.  This octet
                string contains the IP address of one or more BGP peers.
                If a BGP peer is included in this list, this filter applies
                to BGP advertisements authored by that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to BGP
                advertisements from any router."
        ::= { wfIpEgpAnnounceEntry 19 }

    wfIpEgpAnnounceBgpPeerAs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from BGP' AS list. Only applicable for BGP sourced
                routes and if BGP is included as a route source.  This octet
                string contains Autonomous System Numbers.  If an AS number
                is included in this list, this filter applies to BGP
                advertisements received from BGP peers in that AS.

                If non-null, The octet string contains one or more 2-octet
                AS numbers.  If null, this filter applies to BGP advertisements
                from peers in any AS."
        ::= { wfIpEgpAnnounceEntry 20 }

    wfIpEgpAnnounceBgpNextHop OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from BGP' NextHop list. Only applicable for BGP sourced
                routes and if BGP is included as a route source.  This octet
                string contains IP addresses.  If an IP address
                is included in this list, this filter applies to BGP
                advertisements whose NEXT_HOP attribute matches this
                IP address.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to BGP
                advertisements with any NEXT_HOP attribute."
        ::= { wfIpEgpAnnounceEntry 21 }

    wfIpEgpAnnouncePeer OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "EGP outbound peer list. This is a list of IP addresses
                of EGP peers.  If a peer appears in this list, the filter
                applies to EGP advertisements sent to that peer.

                If non-null, The octet string contains one or more 4-octet IP
                addresses.  If null, this filter applies to any EGP peer."
        ::= { wfIpEgpAnnounceEntry 22 }

    wfIpEgpAnnounceInterface OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "EGP outbound interface list. This is a list of outgoing
                interfaces.  If an interface appears in this list, the filter
                applies to EGP advertisements sent via that interface.

                If non-null, The octet string contains one or more 4-octet IP
                addresses.  If null, this filter applies to any outbound
                interface."
        ::= { wfIpEgpAnnounceEntry 23 }

    wfIpEgpAnnounceMetric OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "EGP metric. Only valid if the action is 'propagate'.
                This is an optional export metric to use when advertising
                a route that matches this filter.  If zero, the routing table
                metric calculated for EGP is used."
        ::= { wfIpEgpAnnounceEntry 24 }

    wfIpBgp3AcceptTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpBgp3AcceptEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The table of BGP-3 Accept Route Policy Rules"
        ::= { wfIpPolicyGroup 7 }

    wfIpBgp3AcceptEntry OBJECT-TYPE
        SYNTAX	WfIpBgp3AcceptEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the BGP-3 Accept Rule Table"
        INDEX	{ wfIpBgp3AcceptIndex }
        ::= { wfIpBgp3AcceptTable 1 }

    WfIpBgp3AcceptEntry ::= SEQUENCE {
    	    wfIpBgp3AcceptDelete
    		INTEGER,
    	    wfIpBgp3AcceptDisable
    		INTEGER,
    	    wfIpBgp3AcceptIndex
    		INTEGER,
    	    wfIpBgp3AcceptName
    		DisplayString,
    	    wfIpBgp3AcceptNetworks
    		OCTET STRING,
    	    wfIpBgp3AcceptAction
    		INTEGER,
    	    wfIpBgp3AcceptPreference
    		INTEGER,
    	    wfIpBgp3AcceptPrecedence
    		INTEGER,
    	    wfIpBgp3AcceptInject
    		OCTET STRING,
    	    wfIpBgp3AcceptPeerAs
    		OCTET STRING,
    	    wfIpBgp3AcceptPeerAddress
    		OCTET STRING,
    	    wfIpBgp3AcceptOrigAs
    		OCTET STRING,
    	    wfIpBgp3AcceptRouteOrigin
    		INTEGER,
    	    wfIpBgp3AcceptBgp3Preference
    		INTEGER,
    	    wfIpBgp3AcceptAsWeightClass
    		INTEGER
        }

    wfIpBgp3AcceptDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter."
        DEFVAL	{ create }
        ::= { wfIpBgp3AcceptEntry 1 }

    wfIpBgp3AcceptDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter."
        DEFVAL	{ enable }
        ::= { wfIpBgp3AcceptEntry 2 }

    wfIpBgp3AcceptIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Rule index number"
        ::= { wfIpBgp3AcceptEntry 3 }

    wfIpBgp3AcceptName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rule name - user specified name for this rule"
        ::= { wfIpBgp3AcceptEntry 4 }

    wfIpBgp3AcceptNetworks OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Network identification list. This identifies which
                networks will match this rule.  If non-null, The octet
                string contains one or more 3-tuples of this form:

                 first octet:  exact (1) or range (2)
                 next 4 octets: network number
                 next 4 octets: network mask

                An entry with an 'exact' tag means to only match the
                specific network advertisement (number & mask).  An
                entry with a 'range' tag means to match any network
                number that falls in the range indicated by the number
                and mask.

                An 'exact' encoding of 0.0.0.0/0.0.0.0 means 'match the
                default route.  A 'range' encoding of 0.0.0.0/0.0.0.0 means
                'match any route'.

                A null string also means 'match any route'."
        ::= { wfIpBgp3AcceptEntry 5 }

    wfIpBgp3AcceptAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    accept(1),
    		    ignore(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "action. 'accept' means that the route should be
                considered for inclusion in the routing table.  'ignore'
                means don't consider the route"
        DEFVAL	{ ignore }
        ::= { wfIpBgp3AcceptEntry 6 }

    wfIpBgp3AcceptPreference OBJECT-TYPE
        SYNTAX	INTEGER(0..16)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "preference. This is a metric to be used to compare
                the route to other routes to the same destination.  A
                value of 16 is 'most preferred'.  This parameter only has
                meaning if the action is 'accept'."
        DEFVAL	{ 1 }
        ::= { wfIpBgp3AcceptEntry 7 }

    wfIpBgp3AcceptPrecedence OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "precedence. This is a metric to be used to compare
                this policy rule to other rules that a given route may
                match.  A rule with a higher precedence value will be
                chosen over one with a smaller value.  In the case of
                a tie, the rule index is used (larger wins)."
        ::= { wfIpBgp3AcceptEntry 8 }

    wfIpBgp3AcceptInject OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "network injection list. this octet string should only be
                non-null if the action is 'accept' and if it is desired to
                insert networks into the routing table that differ from
                the actual advertised network.  For instance, if a number of
                networks in a certain range are learned, an aggregate
                advertisement could be inserted instead of the individual
                networks.

                If non-null, The octet string contains one or more 2-tuples
                of this form:

                 first 4 octets: network number
                 next 4 octets: network mask

                Upon receiving a route that matches this filter, all networks
                in this list will be considered for inclusion in the routing
                table.  If the list is null, the actual received network is
                considered.

                An encoding of 255.255.255.255/255.255.255.255 means 'match the
                actual received network.'  This allows insertion of an
                aggregate or default along with the actual network.

                Currently, this is only used for routes received via BGP."
        ::= { wfIpBgp3AcceptEntry 9 }

    wfIpBgp3AcceptPeerAs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP-3 Peer AS list. This octet string contains
                Autonomous System numbers.  If an AS appears in this
                list, this filter applies to BGP advertisements from
                peers in that AS.

                If non-null, The octet string contains one or more 2-octet
                AS numbers.  If null, this filter applies to BGP
                advertisements from peers in any AS."
        ::= { wfIpBgp3AcceptEntry 10 }

    wfIpBgp3AcceptPeerAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP-3 Peer list. This octet string contains the
                IP addresses of one or more BGP peers.  If a peer
                address appears in this list, this filter applies
                to BGP advertisements from that peer.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to BGP
                advertisements from any BGP peer."
        ::= { wfIpBgp3AcceptEntry 11 }

    wfIpBgp3AcceptOrigAs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP-3 Originating AS list. This octet string contains
                Autonomous System numbers.  If an AS appears in this
                list, this filter applies to BGP advertisements that have
                the AS as their originating AS.

                If non-null, The octet string contains one or more 2-octet
                AS numbers.  If null, this filter applies to BGP
                advertisements with any originating AS."
        ::= { wfIpBgp3AcceptEntry 12 }

    wfIpBgp3AcceptRouteOrigin OBJECT-TYPE
        SYNTAX	INTEGER {
    		    igp(1),
    		    egp(2),
    		    igporegp(3),
    		    incomplete(4),
    		    incompleteorigp(5),
    		    incompleteoregp(6),
    		    any(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP-3 ORIGIN path attribute. This is a bit map of the
                three possible origin types: IGP, EGP, and Incomplete.
                If the bit for a particular origin type is on, this filter
                applies to all advertisements with that ORIGIN path
                attribute."
        DEFVAL	{ any }
        ::= { wfIpBgp3AcceptEntry 13 }

    wfIpBgp3AcceptBgp3Preference OBJECT-TYPE
        SYNTAX	INTEGER(1..16)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP-3 preference. For routes that match this filter,
                this value is used for comparison against other BGP-3
                routes.  A larger value is more preferred.  Only valid
                if 'action' is 'accept'."
        DEFVAL	{ 1 }
        ::= { wfIpBgp3AcceptEntry 14 }

    wfIpBgp3AcceptAsWeightClass OBJECT-TYPE
        SYNTAX	INTEGER {
    		    class1(1),
    		    class2(2),
    		    class3(3),
    		    class4(4),
    		    class5(5),
    		    class6(6),
    		    class7(7),
    		    class8(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP AS Weight Class. For routes that match this filter,
                this value indicates which weight values should be used
                when calculating the AS path weight (see the AS weights
                table).  Only valid if 'action' is 'accept'."
        DEFVAL	{ class1 }
        ::= { wfIpBgp3AcceptEntry 15 }

    wfIpBgp3AnnounceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpBgp3AnnounceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The table of BGP-3 Announce Policy Rules"
        ::= { wfIpPolicyGroup 8 }

    wfIpBgp3AnnounceEntry OBJECT-TYPE
        SYNTAX	WfIpBgp3AnnounceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the BGP-3 Announce Rule Table"
        INDEX	{ wfIpBgp3AnnounceIndex }
        ::= { wfIpBgp3AnnounceTable 1 }

    WfIpBgp3AnnounceEntry ::= SEQUENCE {
    	    wfIpBgp3AnnounceDelete
    		INTEGER,
    	    wfIpBgp3AnnounceDisable
    		INTEGER,
    	    wfIpBgp3AnnounceIndex
    		INTEGER,
    	    wfIpBgp3AnnounceName
    		DisplayString,
    	    wfIpBgp3AnnounceNetworks
    		OCTET STRING,
    	    wfIpBgp3AnnounceAction
    		INTEGER,
    	    wfIpBgp3AnnouncePrecedence
    		INTEGER,
    	    wfIpBgp3AnnounceRouteSource
    		INTEGER,
    	    wfIpBgp3AnnounceExtRouteSource
    		INTEGER,
    	    wfIpBgp3AnnounceAdvertise
    		OCTET STRING,
    	    wfIpBgp3AnnounceRipGateway
    		OCTET STRING,
    	    wfIpBgp3AnnounceRipInterface
    		OCTET STRING,
    	    wfIpBgp3AnnounceOspfRouterId
    		OCTET STRING,
    	    wfIpBgp3AnnounceOspfType
    		INTEGER,
    	    wfIpBgp3AnnounceOspfTag
    		OCTET STRING,
    	    wfIpBgp3AnnounceEgpPeer
    		OCTET STRING,
    	    wfIpBgp3AnnounceEgpPeerAs
    		OCTET STRING,
    	    wfIpBgp3AnnounceEgpGateway
    		OCTET STRING,
    	    wfIpBgp3AnnounceBgpPeer
    		OCTET STRING,
    	    wfIpBgp3AnnounceBgpPeerAs
    		OCTET STRING,
    	    wfIpBgp3AnnounceBgpNextHop
    		OCTET STRING,
    	    wfIpBgp3AnnouncePeerAs
    		OCTET STRING,
    	    wfIpBgp3AnnouncePeer
    		OCTET STRING,
    	    wfIpBgp3AnnounceUseMetric
    		INTEGER,
    	    wfIpBgp3AnnounceInterAsMetric
    		INTEGER,
    	    wfIpBgp3AnnounceOrigin
    		INTEGER,
    	    wfIpBgp3AnnounceAsPath
    		OCTET STRING,
    	    wfIpBgp3AnnounceNextHop
    		IpAddress
        }

    wfIpBgp3AnnounceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter."
        DEFVAL	{ create }
        ::= { wfIpBgp3AnnounceEntry 1 }

    wfIpBgp3AnnounceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter."
        DEFVAL	{ enable }
        ::= { wfIpBgp3AnnounceEntry 2 }

    wfIpBgp3AnnounceIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Rule index number"
        ::= { wfIpBgp3AnnounceEntry 3 }

    wfIpBgp3AnnounceName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rule name - user specified name for this rule"
        ::= { wfIpBgp3AnnounceEntry 4 }

    wfIpBgp3AnnounceNetworks OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Network identification list. This identifies which
                networks will match this rule.  If non-null, The octet
                string contains one or more 3-tuples of this form:

                 first octet:  exact (1) or range (2)
                 next 4 octets: network number
                 next 4 octets: network mask

                An entry with an 'exact' tag means to only match the
                specific network advertisement (number & mask).  An
                entry with a 'range' tag means to match any network
                number that falls in the range indicated by the number
                and mask.

                An 'exact' encoding of 0.0.0.0/0.0.0.0 means 'match the
                default route.  A 'range' encoding of 0.0.0.0/0.0.0.0 means
                'match any route'.

                A null string also means 'match any route'."
        ::= { wfIpBgp3AnnounceEntry 5 }

    wfIpBgp3AnnounceAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    announce(2),
    		    ignore(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "action. 'announce' means that the route should be
                advertised.  'ignore' means don't advertise the route."
        DEFVAL	{ ignore }
        ::= { wfIpBgp3AnnounceEntry 6 }

    wfIpBgp3AnnouncePrecedence OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "precedence. This is a metric to be used to compare
                this policy rule to other rules that a given route may
                match.  A rule with a higher precedence value will be
                chosen over one with a smaller value.  In the case of
                a tie, the rule index is used (larger wins)."
        ::= { wfIpBgp3AnnounceEntry 7 }

    wfIpBgp3AnnounceRouteSource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    direct(1),
    		    static(2),
    		    rip(4),
    		    ospf(8),
    		    egp(16),
    		    bgp(32),
    		    any(63)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "route source. This parameter can contain one or more
                route source identifiers.  If the route source is in this
                bit map, then a route from that source that meets the other
                criteria of this filter will match the filter."
        DEFVAL	{ any }
        ::= { wfIpBgp3AnnounceEntry 8 }

    wfIpBgp3AnnounceExtRouteSource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    direct(1),
    		    static(2),
    		    rip(4),
    		    ospf(8),
    		    egp(16),
    		    bgp(32),
    		    any(63)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "external route source. This parameter can contain one
                or more external route source identifiers.  If the external
                route source is in this bit map, then a route from that
                external source that meets the other criteria of this
                filter will match the filter."
        DEFVAL	{ any }
        ::= { wfIpBgp3AnnounceEntry 9 }

    wfIpBgp3AnnounceAdvertise OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "network advertisement list. this octet string should
                only be non-null if the action is 'announce' and if it is
                desired to advertise networks that differ from the actual
                network in the routing table.  For instance, if a number of
                networks in a certain range are in the table, an aggregate
                could be advertised instead of the individual networks.

                If non-null, The octet string contains one or more 2-tuples
                of this form:

                 first 4 octets: network number
                 next 4 octets: network mask

                Upon receiving a route that matches this filter, all networks
                in this list will be advertised.  If the list is null, the
                actual network is advertised.

                An encoding of 255.255.255.255/255.255.255.255 means 'match
                the actual network.'  This allows advertisement of an aggregate
                or default along with the actual network."
        ::= { wfIpBgp3AnnounceEntry 10 }

    wfIpBgp3AnnounceRipGateway OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from RIP' gateway list. Only applicable for RIP sourced
                routes and if RIP is included as a route source.  This octet
                string contains the addresses of one or more routers that could
                send RIP updates to this router.  If a router address is
                included in this list, this filter applies to RIP
                advertisements from that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to RIP updates
                from any router."
        ::= { wfIpBgp3AnnounceEntry 11 }

    wfIpBgp3AnnounceRipInterface OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from RIP' interface list. Only applicable for RIP
                sourced routes and if RIP is included as a route source.
                This octet string contains the addresses of one or more
                interfaces on this router.  If an interface address is
                included in this list, this filter applies to RIP
                advertisements received on that interface.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to RIP updates
                received on any interface."
        ::= { wfIpBgp3AnnounceEntry 12 }

    wfIpBgp3AnnounceOspfRouterId OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from OSPF' Router ID list. Only applicable for OSPF sourced
                routes and if OSPF is included as a route source.  This octet
                string contains the router IDs of one or more OSPF routers.
                If a router ID is included in this list, this filter applies
                to OSPF advertisements authored by that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to OSPF updates
                from any router."
        ::= { wfIpBgp3AnnounceEntry 13 }

    wfIpBgp3AnnounceOspfType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    type1(1),
    		    type2(2),
    		    external(3),
    		    internal(4),
    		    any(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from OSPF' route type. Only applicable for OSPF sourced
                routes and if OSPF is included as a route source.  This
                parameter describes which types of OSPF routes match this
                filter.  'any' means match any route type.  'internal'
                means 'match any non-ASE'.  'external' means 'match any
                ASE'.  'type1' means 'match any external type 1'.  'type2'
                means 'match any external type 2"
        DEFVAL	{ any }
        ::= { wfIpBgp3AnnounceEntry 14 }

    wfIpBgp3AnnounceOspfTag OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from OSPF' ASE tag list. Only applicable for OSPF sourced
                ASE routes and if OSPF is included as a route source.  This
                octet string contains tag values that could be present in an
                OSPF ASE advertisement.  If a tag value is included in this
                list, this filter applies to OSPF ASE advertisements that
                contain this tag value.

                If non-null, The octet string contains one or more 4-octet
                tag values.  If null, this filter applies to OSPF ASEs with
                any tag value."
        ::= { wfIpBgp3AnnounceEntry 15 }

    wfIpBgp3AnnounceEgpPeer OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from EGP' Peer list. Only applicable for EGP sourced
                routes and if EGP is included as a route source.  This octet
                string contains the IP address of one or more EGP peers.
                If an EGP peer is included in this list, this filter applies
                to EGP advertisements authored by that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to EGP
                advertisements from any router."
        ::= { wfIpBgp3AnnounceEntry 16 }

    wfIpBgp3AnnounceEgpPeerAs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from EGP' Peer AS list. Only applicable for EGP sourced
                routes and if EGP is included as a route source.  This octet
                string contains Autonomous System Numbers.  If an AS number
                is included in this list, this filter applies to EGP
                advertisements received from EBP peers in that AS.

                If non-null, The octet string contains one or more 2-octet
                AS numbers.  If null, this filter applies to EGP advertisements
                from peers in any AS."
        ::= { wfIpBgp3AnnounceEntry 17 }

    wfIpBgp3AnnounceEgpGateway OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from EGP' Gateway list. Only applicable for EGP sourced
                routes and if EGP is included as a route source.  This octet
                string contains the IP address of one or more EGP gateways.
                If an EGP gateway is included in this list, this filter applies
                to EGP advertisements that use this gateway as the next hop.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to EGP
                advertisements with any gateway address."
        ::= { wfIpBgp3AnnounceEntry 18 }

    wfIpBgp3AnnounceBgpPeer OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from BGP' Peer list. Only applicable for BGP sourced
                routes and if BGP is included as a route source.  This octet
                string contains the IP address of one or more BGP peers.
                If a BGP peer is included in this list, this filter applies
                to BGP advertisements authored by that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to BGP
                advertisements from any router."
        ::= { wfIpBgp3AnnounceEntry 19 }

    wfIpBgp3AnnounceBgpPeerAs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from BGP' AS list. Only applicable for BGP sourced
                routes and if BGP is included as a route source.  This octet
                string contains Autonomous System Numbers.  If an AS number
                is included in this list, this filter applies to BGP
                advertisements received from BGP peers in that AS.

                If non-null, The octet string contains one or more 2-octet
                AS numbers.  If null, this filter applies to BGP advertisements
                from peers in any AS."
        ::= { wfIpBgp3AnnounceEntry 20 }

    wfIpBgp3AnnounceBgpNextHop OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from BGP' NextHop list. Only applicable for BGP sourced
                routes and if BGP is included as a route source.  This octet
                string contains IP addresses.  If an IP address
                is included in this list, this filter applies to BGP
                advertisements whose NEXT_HOP attribute matches this
                IP address.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to BGP
                advertisements with any NEXT_HOP attribute."
        ::= { wfIpBgp3AnnounceEntry 21 }

    wfIpBgp3AnnouncePeerAs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP-3 Outbound Peer AS list. This octet string
                contains Autonomous System Numbers.  If an AS number
                is included in this list, this filter applies to BGP
                advertisements being sent to BGP peers in that AS.

                If non-null, The octet string contains one or more 2-octet
                AS numbers.  If null, this filter applies to BGP advertisements
                going to peers in any AS."
        ::= { wfIpBgp3AnnounceEntry 22 }

    wfIpBgp3AnnouncePeer OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP-3 Outbound Peer list. This octet string contains the
                IP address of one or more BGP peers.  If a BGP peer is
                included in this list, this filter applies to BGP
                advertisements being sent to that peer.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to BGP
                advertisements being sent to any peer."
        ::= { wfIpBgp3AnnounceEntry 23 }

    wfIpBgp3AnnounceUseMetric OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    specified(2),
    		    originating(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Inter-AS Metric Selector. This parameter indicates
                whether or not an INTER_AS_METRIC will be advertised
                for a network matching this filter and, if advertised,
                what value to use.  'none' indicates that no metric will
                be advertised.  'specified' indicates that the value in
                wfIpBgp3AnnounceInterAsMetric will be used.  'originating'
                indicates that the metric from the originating
                protocol will be used.  Only valid if 'action' is
                'announce'."
        DEFVAL	{ none }
        ::= { wfIpBgp3AnnounceEntry 24 }

    wfIpBgp3AnnounceInterAsMetric OBJECT-TYPE
        SYNTAX	INTEGER(0..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specific Inter-AS Metric. If wfIpBgp3AnnounceUseMetric
                is set to 'specified', this is the value that will be used
                for the INTER_AS_METRIC.  Only valid if 'action' is
                'announce"
        ::= { wfIpBgp3AnnounceEntry 25 }

    wfIpBgp3AnnounceOrigin OBJECT-TYPE
        SYNTAX	INTEGER {
    		    igp(1),
    		    egp(2),
    		    incomplete(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "ORIGIN attribute override. If non-null, the ORIGIN
                attribute of a route matching this filter will be replaced
                with the indicated value.  Only valid if 'action' is
                'announce'."
        ::= { wfIpBgp3AnnounceEntry 26 }

    wfIpBgp3AnnounceAsPath OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "AS-path override. If non-null, the AS_PATH attribute
                of a route matching this filter will be replaced with
                the indicated AS path.  Each element of the AS path is
                2-octet AS number.  Only valid if 'action' is
                'announce'."
        ::= { wfIpBgp3AnnounceEntry 27 }

    wfIpBgp3AnnounceNextHop OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Announce Next Hop. If action is ANNOUNCE and this
                instance is non-zero, then overwrite Next Hop with
                specified value."
        ::= { wfIpBgp3AnnounceEntry 28 }

    wfIpBgp4AcceptTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpBgp4AcceptEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The table of BGP-4 Accept Route Policy Rules"
        ::= { wfIpPolicyGroup 9 }

    wfIpBgp4AcceptEntry OBJECT-TYPE
        SYNTAX	WfIpBgp4AcceptEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the BGP-4 Accept Rule Table"
        INDEX	{ wfIpBgp4AcceptIndex }
        ::= { wfIpBgp4AcceptTable 1 }

    WfIpBgp4AcceptEntry ::= SEQUENCE {
    	    wfIpBgp4AcceptDelete
    		INTEGER,
    	    wfIpBgp4AcceptDisable
    		INTEGER,
    	    wfIpBgp4AcceptIndex
    		INTEGER,
    	    wfIpBgp4AcceptName
    		DisplayString,
    	    wfIpBgp4AcceptNetworks
    		OCTET STRING,
    	    wfIpBgp4AcceptAction
    		INTEGER,
    	    wfIpBgp4AcceptPreference
    		INTEGER,
    	    wfIpBgp4AcceptPrecedence
    		INTEGER,
    	    wfIpBgp4AcceptInject
    		OCTET STRING,
    	    wfIpBgp4AcceptPeerAs
    		OCTET STRING,
    	    wfIpBgp4AcceptPeerAddress
    		OCTET STRING,
    	    wfIpBgp4AcceptOrigAs
    		OCTET STRING,
    	    wfIpBgp4AcceptRouteOrigin
    		INTEGER,
    	    wfIpBgp4AcceptAggrAs
    		OCTET STRING,
    	    wfIpBgp4AcceptAggrRouter
    		OCTET STRING,
    	    wfIpBgp4AcceptLocalPref
    		INTEGER,
    	    wfIpBgp4AcceptBgp4Preference
    		INTEGER,
    	    wfIpBgp4AcceptAsWeightClass
    		INTEGER,
    	    wfIpBgp4AcceptAsPatternMatch
    		DisplayString
        }

    wfIpBgp4AcceptDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter."
        DEFVAL	{ create }
        ::= { wfIpBgp4AcceptEntry 1 }

    wfIpBgp4AcceptDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter."
        DEFVAL	{ enable }
        ::= { wfIpBgp4AcceptEntry 2 }

    wfIpBgp4AcceptIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Rule index number"
        ::= { wfIpBgp4AcceptEntry 3 }

    wfIpBgp4AcceptName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rule name - user specified name for this rule"
        ::= { wfIpBgp4AcceptEntry 4 }

    wfIpBgp4AcceptNetworks OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Network identification list. This identifies which
                networks will match this rule.  If non-null, The octet
                string contains one or more 3-tuples of this form:

                 first octet:  exact (1) or range (2)
                 next 4 octets: network number
                 next 4 octets: network mask

                An entry with an 'exact' tag means to only match the
                specific network advertisement (number & mask).  An
                entry with a 'range' tag means to match any network
                number that falls in the range indicated by the number
                and mask.

                An 'exact' encoding of 0.0.0.0/0.0.0.0 means 'match the
                default route.  A 'range' encoding of 0.0.0.0/0.0.0.0 means
                'match any route'.

                A null string also means 'match any route'."
        ::= { wfIpBgp4AcceptEntry 5 }

    wfIpBgp4AcceptAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    accept(1),
    		    ignore(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "action. 'accept' means that the route should be
                considered for inclusion in the routing table.  'ignore'
                means don't consider the route"
        DEFVAL	{ ignore }
        ::= { wfIpBgp4AcceptEntry 6 }

    wfIpBgp4AcceptPreference OBJECT-TYPE
        SYNTAX	INTEGER(0..16)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "preference. This is a metric to be used to compare
                the route to other routes to the same destination.  A
                value of 16 is 'most preferred'.  This parameter only has
                meaning if the action is 'accept'."
        DEFVAL	{ 1 }
        ::= { wfIpBgp4AcceptEntry 7 }

    wfIpBgp4AcceptPrecedence OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "precedence. This is a metric to be used to compare
                this policy rule to other rules that a given route may
                match.  A rule with a higher precedence value will be
                chosen over one with a smaller value.  In the case of
                a tie, the rule index is used (larger wins)."
        ::= { wfIpBgp4AcceptEntry 8 }

    wfIpBgp4AcceptInject OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "network injection list. this octet string should only be
                non-null if the action is 'accept' and if it is desired to
                insert networks into the routing table that differ from
                the actual advertised network.  For instance, if a number of
                networks in a certain range are learned, an aggregate
                advertisement could be inserted instead of the individual
                networks.

                If non-null, The octet string contains one or more 2-tuples
                of this form:

                 first 4 octets: network number
                 next 4 octets: network mask

                Upon receiving a route that matches this filter, all networks
                in this list will be considered for inclusion in the routing
                table.  If the list is null, the actual received network is
                considered.

                An encoding of 255.255.255.255/255.255.255.255 means 'match the
                actual received network.'  This allows insertion of an
                aggregate or default along with the actual network.

                Currently, this is only used for routes received via BGP."
        ::= { wfIpBgp4AcceptEntry 9 }

    wfIpBgp4AcceptPeerAs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP-4 Peer AS list. This octet string contains
                Autonomous System numbers.  If an AS appears in this
                list, this filter applies to BGP advertisements from
                peers in that AS.

                If non-null, The octet string contains one or more 2-octet
                AS numbers.  If null, this filter applies to BGP
                advertisements from peers in any AS."
        ::= { wfIpBgp4AcceptEntry 10 }

    wfIpBgp4AcceptPeerAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP-4 Peer list. This octet string contains the
                IP addresses of one or more BGP peers.  If a peer
                address appears in this list, this filter applies
                to BGP advertisements from that peer.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to BGP
                advertisements from any BGP peer."
        ::= { wfIpBgp4AcceptEntry 11 }

    wfIpBgp4AcceptOrigAs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP-4 Originating AS list. This octet string contains
                Autonomous System numbers.  If an AS appears in this
                list, this filter applies to BGP advertisements that have
                the AS as their originating AS.

                If non-null, The octet string contains one or more 2-octet
                AS numbers.  If null, this filter applies to BGP
                advertisements with any originating AS."
        ::= { wfIpBgp4AcceptEntry 12 }

    wfIpBgp4AcceptRouteOrigin OBJECT-TYPE
        SYNTAX	INTEGER {
    		    igp(1),
    		    egp(2),
    		    igporegp(3),
    		    incomplete(4),
    		    incompleteorigp(5),
    		    incompleteoregp(6),
    		    any(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP-4 ORIGIN path attribute. This is a bit map of the
                three possible origin types: IGP, EGP, and Incomplete.
                If the bit for a particular origin type is on, this filter
                applies to all advertisements with that ORIGIN path
                attribute."
        DEFVAL	{ any }
        ::= { wfIpBgp4AcceptEntry 13 }

    wfIpBgp4AcceptAggrAs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP-4 Aggregator AS list. This octet string contains
                Autonomous System numbers.  If an AS appears in this
                list, this filter applies to BGP advertisements that contain
                the AS number in their AGGREGATOR path attribute.

                If non-null, The octet string contains one or more 2-octet
                AS numbers.  If null, this filter applies to BGP
                advertisements with any AS number in the AGGREGATOR
                path attribute."
        ::= { wfIpBgp4AcceptEntry 14 }

    wfIpBgp4AcceptAggrRouter OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP-4 Aggregator Router list. This octet string contains
                the IP addresses of one or more BGP routers.  If a router
                address appears in this list, this filter applies to BGP
                advertisements that contain the address in their AGGREGATOR
                path attribute.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to BGP
                advertisements with any router address in the AGGREGATOR
                path attribute."
        ::= { wfIpBgp4AcceptEntry 15 }

    wfIpBgp4AcceptLocalPref OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP-4 Local Preference override. If non-null,
                any route matching this filter takes is assigned a
                local preference of the indicated value.  This is used
                to override the calculated value for EBGP routes or
                the LOCAL_PREF path attribute for IBGP routes."
        ::= { wfIpBgp4AcceptEntry 16 }

    wfIpBgp4AcceptBgp4Preference OBJECT-TYPE
        SYNTAX	INTEGER(1..16)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP-4 preference. For routes that match this filter,
                this value is used for comparison against other BGP-4
                routes.  A larger value is more preferred.  Only valid
                if 'action' is 'accept'."
        DEFVAL	{ 1 }
        ::= { wfIpBgp4AcceptEntry 17 }

    wfIpBgp4AcceptAsWeightClass OBJECT-TYPE
        SYNTAX	INTEGER {
    		    class1(1),
    		    class2(2),
    		    class3(3),
    		    class4(4),
    		    class5(5),
    		    class6(6),
    		    class7(7),
    		    class8(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP AS Weight Class. For routes that match this filter,
                this value indicates which weight values should be used
                when calculating the AS path weight (see the AS weights
                table).  Only valid if 'action' is 'accept'."
        DEFVAL	{ class1 }
        ::= { wfIpBgp4AcceptEntry 18 }

    wfIpBgp4AcceptAsPatternMatch OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP AS_PATH Pattern Match string. This filter applies to BGP
                AS_PATH attribute and only routes which as_path matches
                the pattern string will be accepted. A pattern string can be
                any regular expression; this parameter is ignored if the string
                is malformed or not set."
        ::= { wfIpBgp4AcceptEntry 19 }

    wfIpBgp4AnnounceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpBgp4AnnounceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The table of BGP-4 Announce Policy Rules"
        ::= { wfIpPolicyGroup 10 }

    wfIpBgp4AnnounceEntry OBJECT-TYPE
        SYNTAX	WfIpBgp4AnnounceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the BGP-4 Announce Rule Table"
        INDEX	{ wfIpBgp4AnnounceIndex }
        ::= { wfIpBgp4AnnounceTable 1 }

    WfIpBgp4AnnounceEntry ::= SEQUENCE {
    	    wfIpBgp4AnnounceDelete
    		INTEGER,
    	    wfIpBgp4AnnounceDisable
    		INTEGER,
    	    wfIpBgp4AnnounceIndex
    		INTEGER,
    	    wfIpBgp4AnnounceName
    		DisplayString,
    	    wfIpBgp4AnnounceNetworks
    		OCTET STRING,
    	    wfIpBgp4AnnounceAction
    		INTEGER,
    	    wfIpBgp4AnnouncePrecedence
    		INTEGER,
    	    wfIpBgp4AnnounceRouteSource
    		INTEGER,
    	    wfIpBgp4AnnounceExtRouteSource
    		INTEGER,
    	    wfIpBgp4AnnounceAdvertise
    		OCTET STRING,
    	    wfIpBgp4AnnounceRipGateway
    		OCTET STRING,
    	    wfIpBgp4AnnounceRipInterface
    		OCTET STRING,
    	    wfIpBgp4AnnounceOspfRouterId
    		OCTET STRING,
    	    wfIpBgp4AnnounceOspfType
    		INTEGER,
    	    wfIpBgp4AnnounceOspfTag
    		OCTET STRING,
    	    wfIpBgp4AnnounceEgpPeer
    		OCTET STRING,
    	    wfIpBgp4AnnounceEgpPeerAs
    		OCTET STRING,
    	    wfIpBgp4AnnounceEgpGateway
    		OCTET STRING,
    	    wfIpBgp4AnnounceBgpPeer
    		OCTET STRING,
    	    wfIpBgp4AnnounceBgpPeerAs
    		OCTET STRING,
    	    wfIpBgp4AnnounceBgpNextHop
    		OCTET STRING,
    	    wfIpBgp4AnnouncePeerAs
    		OCTET STRING,
    	    wfIpBgp4AnnouncePeer
    		OCTET STRING,
    	    wfIpBgp4AnnounceUseMultiExitDisc
    		INTEGER,
    	    wfIpBgp4AnnounceMultiExitDisc
    		INTEGER,
    	    wfIpBgp4AnnounceOrigin
    		INTEGER,
    	    wfIpBgp4AnnounceAsPath
    		OCTET STRING,
    	    wfIpBgp4AnnounceLocalPrefOverride
    		INTEGER,
    	    wfIpBgp4AnnounceLocalPref
    		INTEGER,
    	    wfIpBgp4AnnounceNextHop
    		IpAddress,
    	    wfIpBgp4AnnounceAtomic
    		INTEGER,
    	    wfIpBgp4AnnounceAsPatternMatch
    		DisplayString
        }

    wfIpBgp4AnnounceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter."
        DEFVAL	{ create }
        ::= { wfIpBgp4AnnounceEntry 1 }

    wfIpBgp4AnnounceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter."
        DEFVAL	{ enable }
        ::= { wfIpBgp4AnnounceEntry 2 }

    wfIpBgp4AnnounceIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Rule index number"
        ::= { wfIpBgp4AnnounceEntry 3 }

    wfIpBgp4AnnounceName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rule name - user specified name for this rule"
        ::= { wfIpBgp4AnnounceEntry 4 }

    wfIpBgp4AnnounceNetworks OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Network identification list. This identifies which
                networks will match this rule.  If non-null, The octet
                string contains one or more 3-tuples of this form:

                 first octet:  exact (1) or range (2)
                 next 4 octets: network number
                 next 4 octets: network mask

                An entry with an 'exact' tag means to only match the
                specific network advertisement (number & mask).  An
                entry with a 'range' tag means to match any network
                number that falls in the range indicated by the number
                and mask.

                An 'exact' encoding of 0.0.0.0/0.0.0.0 means 'match the
                default route.  A 'range' encoding of 0.0.0.0/0.0.0.0 means
                'match any route'.

                A null string also means 'match any route'."
        ::= { wfIpBgp4AnnounceEntry 5 }

    wfIpBgp4AnnounceAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    announce(2),
    		    ignore(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "action. 'announce' means that the route should be
                advertised.  'ignore' means don't advertise the route."
        DEFVAL	{ ignore }
        ::= { wfIpBgp4AnnounceEntry 6 }

    wfIpBgp4AnnouncePrecedence OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "precedence. This is a metric to be used to compare
                this policy rule to other rules that a given route may
                match.  A rule with a higher precedence value will be
                chosen over one with a smaller value.  In the case of
                a tie, the rule index is used (larger wins)."
        ::= { wfIpBgp4AnnounceEntry 7 }

    wfIpBgp4AnnounceRouteSource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    direct(1),
    		    static(2),
    		    rip(4),
    		    ospf(8),
    		    egp(16),
    		    bgp(32),
    		    any(63)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "route source. This parameter can contain one or more
                route source identifiers.  If the route source is in this
                bit map, then a route from that source that meets the other
                criteria of this filter will match the filter."
        DEFVAL	{ any }
        ::= { wfIpBgp4AnnounceEntry 8 }

    wfIpBgp4AnnounceExtRouteSource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    direct(1),
    		    static(2),
    		    rip(4),
    		    ospf(8),
    		    egp(16),
    		    bgp(32),
    		    any(63)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "external route source. This parameter can contain one
                or more external route source identifiers.  If the external
                route source is in this bit map, then a route from that
                external source that meets the other criteria of this
                filter will match the filter."
        DEFVAL	{ any }
        ::= { wfIpBgp4AnnounceEntry 9 }

    wfIpBgp4AnnounceAdvertise OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "network advertisement list. this octet string should
                only be non-null if the action is 'announce' and if it is
                desired to advertise networks that differ from the actual
                network in the routing table.  For instance, if a number of
                networks in a certain range are in the table, an aggregate
                could be advertised instead of the individual networks.

                If non-null, The octet string contains one or more 2-tuples
                of this form:

                 first 4 octets: network number
                 next 4 octets: network mask

                Upon receiving a route that matches this filter, all networks
                in this list will be advertised.  If the list is null, the
                actual network is advertised.

                An encoding of 255.255.255.255/255.255.255.255 means 'match
                the actual network.'  This allows advertisement of an aggregate
                or default along with the actual network."
        ::= { wfIpBgp4AnnounceEntry 10 }

    wfIpBgp4AnnounceRipGateway OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from RIP' gateway list. Only applicable for RIP sourced
                routes and if RIP is included as a route source.  This octet
                string contains the addresses of one or more routers that could
                send RIP updates to this router.  If a router address is
                included in this list, this filter applies to RIP
                advertisements from that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to RIP updates
                from any router."
        ::= { wfIpBgp4AnnounceEntry 11 }

    wfIpBgp4AnnounceRipInterface OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from RIP' interface list. Only applicable for RIP
                sourced routes and if RIP is included as a route source.
                This octet string contains the addresses of one or more
                interfaces on this router.  If an interface address is
                included in this list, this filter applies to RIP
                advertisements received on that interface.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to RIP updates
                received on any interface."
        ::= { wfIpBgp4AnnounceEntry 12 }

    wfIpBgp4AnnounceOspfRouterId OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from OSPF' Router ID list. Only applicable for OSPF sourced
                routes and if OSPF is included as a route source.  This octet
                string contains the router IDs of one or more OSPF routers.
                If a router ID is included in this list, this filter applies
                to OSPF advertisements authored by that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to OSPF updates
                from any router."
        ::= { wfIpBgp4AnnounceEntry 13 }

    wfIpBgp4AnnounceOspfType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    type1(1),
    		    type2(2),
    		    external(3),
    		    internal(4),
    		    any(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from OSPF' route type. Only applicable for OSPF sourced
                routes and if OSPF is included as a route source.  This
                parameter describes which types of OSPF routes match this
                filter.  'any' means match any route type.  'internal'
                means 'match any non-ASE'.  'external' means 'match any
                ASE'.  'type1' means 'match any external type 1'.  'type2'
                means 'match any external type 2"
        DEFVAL	{ any }
        ::= { wfIpBgp4AnnounceEntry 14 }

    wfIpBgp4AnnounceOspfTag OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from OSPF' ASE tag list. Only applicable for OSPF sourced
                ASE routes and if OSPF is included as a route source.  This
                octet string contains tag values that could be present in an
                OSPF ASE advertisement.  If a tag value is included in this
                list, this filter applies to OSPF ASE advertisements that
                contain this tag value.

                If non-null, The octet string contains one or more 4-octet
                tag values.  If null, this filter applies to OSPF ASEs with
                any tag value."
        ::= { wfIpBgp4AnnounceEntry 15 }

    wfIpBgp4AnnounceEgpPeer OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from EGP' Peer list. Only applicable for EGP sourced
                routes and if EGP is included as a route source.  This octet
                string contains the IP address of one or more EGP peers.
                If an EGP peer is included in this list, this filter applies
                to EGP advertisements authored by that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to EGP
                advertisements from any router."
        ::= { wfIpBgp4AnnounceEntry 16 }

    wfIpBgp4AnnounceEgpPeerAs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from EGP' Peer AS list. Only applicable for EGP sourced
                routes and if EGP is included as a route source.  This octet
                string contains Autonomous System Numbers.  If an AS number
                is included in this list, this filter applies to EGP
                advertisements received from EBP peers in that AS.

                If non-null, The octet string contains one or more 2-octet
                AS numbers.  If null, this filter applies to EGP advertisements
                from peers in any AS."
        ::= { wfIpBgp4AnnounceEntry 17 }

    wfIpBgp4AnnounceEgpGateway OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from EGP' Gateway list. Only applicable for EGP sourced
                routes and if EGP is included as a route source.  This octet
                string contains the IP address of one or more EGP gateways.
                If an EGP gateway is included in this list, this filter applies
                to EGP advertisements that use this gateway as the next hop.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to EGP
                advertisements with any gateway address."
        ::= { wfIpBgp4AnnounceEntry 18 }

    wfIpBgp4AnnounceBgpPeer OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from BGP' Peer list. Only applicable for BGP sourced
                routes and if BGP is included as a route source.  This octet
                string contains the IP address of one or more BGP peers.
                If a BGP peer is included in this list, this filter applies
                to BGP advertisements authored by that router.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to BGP
                advertisements from any router."
        ::= { wfIpBgp4AnnounceEntry 19 }

    wfIpBgp4AnnounceBgpPeerAs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from BGP' AS list. Only applicable for BGP sourced
                routes and if BGP is included as a route source.  This octet
                string contains Autonomous System Numbers.  If an AS number
                is included in this list, this filter applies to BGP
                advertisements received from BGP peers in that AS.

                If non-null, The octet string contains one or more 2-octet
                AS numbers.  If null, this filter applies to BGP advertisements
                from peers in any AS."
        ::= { wfIpBgp4AnnounceEntry 20 }

    wfIpBgp4AnnounceBgpNextHop OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "from BGP' NextHop list. Only applicable for BGP sourced
                routes and if BGP is included as a route source.  This octet
                string contains IP addresses.  If an IP address
                is included in this list, this filter applies to BGP
                advertisements whose NEXT_HOP attribute matches this
                IP address.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to BGP
                advertisements with any NEXT_HOP attribute."
        ::= { wfIpBgp4AnnounceEntry 21 }

    wfIpBgp4AnnouncePeerAs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP-4 Outbound Peer AS list. This octet string
                contains Autonomous System Numbers.  If an AS number
                is included in this list, this filter applies to BGP
                advertisements being sent to BGP peers in that AS.

                If non-null, The octet string contains one or more 2-octet
                AS numbers.  If null, this filter applies to BGP advertisements
                going to peers in any AS."
        ::= { wfIpBgp4AnnounceEntry 22 }

    wfIpBgp4AnnouncePeer OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP-4 Outbound Peer list. This octet string contains the
                IP address of one or more BGP peers.  If a BGP peer is
                included in this list, this filter applies to BGP
                advertisements being sent to that peer.

                If non-null, The octet string contains one or more 4-octet
                IP addresses.  If null, this filter applies to BGP
                advertisements being sent to any peer."
        ::= { wfIpBgp4AnnounceEntry 23 }

    wfIpBgp4AnnounceUseMultiExitDisc OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    specified(2),
    		    originating(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Multi-Exit Discriminator Selector. This parameter
                indicates whether or not a MULTI_EXIT_DISC will be
                advertised for a network matching this filter and, if
                advertised, what value to use.  'none' indicates that no
                value will be advertised.  'specified' indicates that
                the value in wfIpBgp4AnnounceMultiExitDisc will be used.
                'originating' indicates that the metric from the
                originating protocol will be used.  Only valid if
                'action' is 'announce'."
        DEFVAL	{ none }
        ::= { wfIpBgp4AnnounceEntry 24 }

    wfIpBgp4AnnounceMultiExitDisc OBJECT-TYPE
        SYNTAX	INTEGER(0..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specific Multi-Exit Discriminator. If
                wfIpBgp4AnnounceUseMultiExitDisc is set to 'specified',
                this is the value that will be used for the
                MULTI_EXIT_DISC.  Only valid if 'action' is 'announce'."
        ::= { wfIpBgp4AnnounceEntry 25 }

    wfIpBgp4AnnounceOrigin OBJECT-TYPE
        SYNTAX	INTEGER {
    		    igp(1),
    		    egp(2),
    		    incomplete(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "ORIGIN attribute override. If non-null, the ORIGIN
                attribute of a route matching this filter will be replaced
                with the indicated value.  Only valid if 'action' is
                'announce'."
        ::= { wfIpBgp4AnnounceEntry 26 }

    wfIpBgp4AnnounceAsPath OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "AS-path override. If non-null, the AS_PATH attribute
                of a route matching this filter will be replaced with
                the indicated AS path.  A BGP-4 AS_PATH is composed of AS
                path segments.  Each AS path segment is represented by a
                triple: <path segment type, path segment length, path
                segment value>.

                The path segment type is a 1-octet long field with the
                following values defined:

                1: AS_SET: an unordered set of ASes a route in the UPDATE
                   message has traversed.

                2: AS_SEQUENCE: an ordered set of ASes a route in the
                   UPDATE message has traversed.

                The path segment length is a 1-octet long field containing
                the number of ASes in the path segment value field.

                The path segment value field contains one or more AS numbers,
                each encoded as a 2-octet long field.

                Only valid if 'action' is 'announce'."
        ::= { wfIpBgp4AnnounceEntry 27 }

    wfIpBgp4AnnounceLocalPrefOverride OBJECT-TYPE
        SYNTAX	INTEGER {
    		    false(1),
    		    true(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "local pref override. Only valid when advertise
                to an IBGP peer.  If this is false, the route
                weight value will be used to calculate the LOCAL_PREF
                path attribute.  If this is true, the value in
                wfIpBgp4AnnounceLocalPref will be used instead."
        DEFVAL	{ false }
        ::= { wfIpBgp4AnnounceEntry 28 }

    wfIpBgp4AnnounceLocalPref OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "local pref override value. Only valid when advertise
                to an IBGP peer. and if wfIpBgp4AnnounceLocalPrefOverride
                is set to IP_BGP4_ANNOUNCE_LOCAL_PREF_OVERRIDE_TRUE.
                If this case, this value is used as the LOCAL_PREF path
                attribute."
        ::= { wfIpBgp4AnnounceEntry 29 }

    wfIpBgp4AnnounceNextHop OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Announce Next Hop. If action is ANNOUNCE and this
                instance is non-zero, then overwrite Next Hop with
                specified value."
        ::= { wfIpBgp4AnnounceEntry 30 }

    wfIpBgp4AnnounceAtomic OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(1),
    		    force(2),
    		    ignore(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Announce Atomic aggregation"
        DEFVAL	{ default }
        ::= { wfIpBgp4AnnounceEntry 31 }

    wfIpBgp4AnnounceAsPatternMatch OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP AS_PATH Pattern Match string. This filter applies to BGP
                AS_PATH attribute and only routes which as_path matches
                the pattern string will be announced. A pattern string can be
                any regular expression; this parameter is ignored if the string
                is malformed or not set."
        ::= { wfIpBgp4AnnounceEntry 32 }

    END  -- Wellfleet-IPPOLICY-MIB
-- @(#)WSCCS t/mibs-ipx.mib 1.2 10/16/95
Wellfleet-IPX-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:43:50 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfIpxGroup
        FROM Wellfleet-COMMON-MIB;


    wfIpxBase	OBJECT IDENTIFIER ::= { wfIpxGroup 1 }

    wfIpxBaseDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete IPX."
        DEFVAL	{ created }
        ::= { wfIpxBase 1 }

    wfIpxBaseDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable IPX."
        DEFVAL	{ enabled }
        ::= { wfIpxBase 2 }

    wfIpxBaseState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    in(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The current state of the entire IPX."
        DEFVAL	{ notpresent }
        ::= { wfIpxBase 3 }

    wfIpxBaseCfgHostNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Host Number of Router and potential MAC address of box.
                This host number will be used to overide the default
                box generated hostnumber."
        ::= { wfIpxBase 4 }

    wfIpxBaseActiveHostNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "Host Number of Router and potential MAC address of box.
                This is not a restart variable because this will be
                filled in from the IPX code after reading it from
                either the configurable host number or from a box
                generated variable."
        ::= { wfIpxBase 5 }

    wfIpxBaseNetCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "Count the total number of nets in the box."
        ::= { wfIpxBase 6 }

    wfIpxBaseServiceCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "Count the total number of saps in the box."
        ::= { wfIpxBase 7 }

    wfIpxBaseLogFilter OBJECT-TYPE
        SYNTAX	INTEGER {
    		    debug(1),
    		    info(2),
    		    trace(16),
    		    debuginfo(3),
    		    debugtrace(17),
    		    infotrace(18),
    		    debuginfotrace(19)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Filter out some log messages, Default filters out
                debugs, info, and trace messages."
        DEFVAL	{ trace }
        ::= { wfIpxBase 8 }

    wfIpxBaseNetTblSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Tell me how much space to set aside when creating the
                forwarding and network tables."
        ::= { wfIpxBase 9 }

    wfIpxBaseRouterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "The Name of the Router, used for IPXWAN"
        ::= { wfIpxBase 10 }

    wfIpxBasePrimaryNetNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "The 'interfernal' network number, used for IPXWAN"
        ::= { wfIpxBase 11 }

    wfIpxBaseRipMethod OBJECT-TYPE
        SYNTAX	INTEGER {
    		    metric(1),
    		    tick(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Choose either Metric/Hops based or Tick based routing"
        DEFVAL	{ tick }
        ::= { wfIpxBase 12 }

    wfIpxBaseMaximumPath OBJECT-TYPE
        SYNTAX	INTEGER(0..1)
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Declare Maximum number equal costs paths allowed for a given destination network"
        DEFVAL	{ 1 }
        ::= { wfIpxBase 13 }

    wfIpxBaseHostCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "Count the total number of hosts in the box."
        ::= { wfIpxBase 14 }

    wfIpxBaseMultipleHostAddrs OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Allow the user to configure one host/mac addr for the whole box (default)
                where, if configured, the CfgHostNumber is used (becomes ActiveHostNubmer)
                otherwise if left unconfigured the ActiveHostNumber is discerned from the
                backplane serial number.  If Multiple host is Enabled and the host number is
                configured in the interface record the configured value is used as the
                hostid/mac addr of the interface (except Token Ring which can't go into
                promiscous mode, uses Token Ring Mac as hostid/mac of interface). If the
                host number in left unconfigured then the hostid/mac is gotten from the
                mac of the circuit."
        DEFVAL	{ enabled }
        ::= { wfIpxBase 15 }

    wfIpxBaseNovellCertificationConformance OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "enable/disable novell certification, disable/enable wellfleet specifics"
        DEFVAL	{ enabled }
        ::= { wfIpxBase 16 }

    wfIpxBaseTrigUpdateEn OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "enable/disable triggered rip updates for Goldman Sax"
        DEFVAL	{ enabled }
        ::= { wfIpxBase 17 }

    wfIpxBaseRtEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxBaseRtEntry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "The table of Elements in IPX's routing table"
        ::= { wfIpxGroup 2 }

    wfIpxBaseRtEntry OBJECT-TYPE
        SYNTAX	WfIpxBaseRtEntry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "An entry in the Routing Table"
        INDEX	{ wfIpxBaseRouteDest }
        ::= { wfIpxBaseRtEntryTable 1 }

    WfIpxBaseRtEntry ::= SEQUENCE {
    	    wfIpxBaseRouteDest
    		OCTET STRING,
    	    wfIpxBaseRouteIfIndex
    		INTEGER,
    	    wfIpxBaseRouteMetric
    		INTEGER,
    	    wfIpxBaseRouteNextHopNetwork
    		OCTET STRING,
    	    wfIpxBaseRouteNextHopHost
    		OCTET STRING,
    	    wfIpxBaseRouteType
    		INTEGER,
    	    wfIpxBaseRouteProto
    		INTEGER,
    	    wfIpxBaseRouteAge
    		INTEGER,
    	    wfIpxBaseRouteInfo
    		OCTET STRING
        }

    wfIpxBaseRouteDest OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Multiple routes to a single
                destination can appear in the table, but access to
                such multiple entries is dependent on the table-
                access mechanisms defined by the network
                management protocol in use."
        ::= { wfIpxBaseRtEntry 1 }

    wfIpxBaseRouteIfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The index value which uniquely identifies the
                local interface through which the next hop of this
                route should be reached.  The interface identified
                by a particular value of this index is the same
                interface as identified by the same value of
                ifIndex."
        ::= { wfIpxBaseRtEntry 2 }

    wfIpxBaseRouteMetric OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The primary routing metric for this route. The
                semantics of this metric are determined by the
                routing-protocol specified in the route's
                ipRouteProto value.  If this metric is not used,
                its value should be set to -1."
        ::= { wfIpxBaseRtEntry 3 }

    wfIpxBaseRouteNextHopNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "In the case of a route bound to an interface
                which is realized via a broadcast media, the value
                of this field is the agent's IPX address on that
                interface."
        ::= { wfIpxBaseRtEntry 4 }

    wfIpxBaseRouteNextHopHost OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Full network.host_id address of nexthop host for
                this network."
        ::= { wfIpxBaseRtEntry 5 }

    wfIpxBaseRouteType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    invalid(2),
    		    direct(3),
    		    indirect(4),
    		    static(5)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The type of route. Note that the values
                direct(3) and indirect(4) refer to the notion of
                direct and indirect routing in the IPX
                architecture.

                Setting this object to the value invalid(2) has
                the effect of invalidating the corresponding entry
                in the ipRouteTable object.  That is, it
                effectively dissasociates the destination
                identified with said entry from the route
                identified with said entry.  It is an
                implementation-specific matter as to whether the
                agent removes an invalidated entry from the table.
                nagement stations must be prepared
                to receive tabular information from agents that
                corresponds to entries not currently in use.
                Proper interpretation of such entries requires
                examination of the relevant ipRouteType object."
        ::= { wfIpxBaseRtEntry 6 }

    wfIpxBaseRouteProto OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    local(2),
    		    netmgmt(3),
    		    rip(4)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The routing mechanism via which this route was
                learned.  Inclusion of values for gateway routing
                protocols is not intended to imply that hosts
                should support those protocols."
        ::= { wfIpxBaseRtEntry 7 }

    wfIpxBaseRouteAge OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The number of seconds since this route was last
                updated or otherwise determined to be correct.
                Note that no semantics of `too old' can be implied
                except through knowledge of the routing protocol
                by which the route was learned."
        ::= { wfIpxBaseRtEntry 8 }

    wfIpxBaseRouteInfo OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "A user-defined string which describes this Route entry"
        ::= { wfIpxBaseRtEntry 9 }

    wfIpxBaseRt2EntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxBaseRt2Entry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "The table of Elements in IPX's routing table"
        ::= { wfIpxGroup 13 }

    wfIpxBaseRt2Entry OBJECT-TYPE
        SYNTAX	WfIpxBaseRt2Entry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "An entry in the Routing Table"
        INDEX	{ wfIpxBaseRoute2Proto,
    		  wfIpxBaseRoute2Dest,
    		  wfIpxBaseRoute2NextHopNetwork,
    		  wfIpxBaseRoute2NextHopHost }
        ::= { wfIpxBaseRt2EntryTable 1 }

    WfIpxBaseRt2Entry ::= SEQUENCE {
    	    wfIpxBaseRoute2Dest
    		OCTET STRING,
    	    wfIpxBaseRoute2IfIndex
    		INTEGER,
    	    wfIpxBaseRoute2Ticks
    		INTEGER,
    	    wfIpxBaseRoute2Hops
    		INTEGER,
    	    wfIpxBaseRoute2NextHopNetwork
    		OCTET STRING,
    	    wfIpxBaseRoute2NextHopHost
    		OCTET STRING,
    	    wfIpxBaseRoute2Type
    		INTEGER,
    	    wfIpxBaseRoute2Proto
    		INTEGER,
    	    wfIpxBaseRoute2Age
    		INTEGER,
    	    wfIpxBaseRoute2Info
    		OCTET STRING
        }

    wfIpxBaseRoute2Dest OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Multiple routes to a single
                destination can appear in the table, but access to
                such multiple entries is dependent on the table-
                access mechanisms defined by the network
                management protocol in use."
        ::= { wfIpxBaseRt2Entry 1 }

    wfIpxBaseRoute2IfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The index value which uniquely identifies the
                local interface through which the next hop of this
                route should be reached.  The interface identified
                by a particular value of this index is the same
                interface as identified by the same value of
                ifIndex."
        ::= { wfIpxBaseRt2Entry 2 }

    wfIpxBaseRoute2Ticks OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The primary routing metric (in ticks) for this route. The
                semantics of this metric are determined by the
                routing-protocol specified in the route's
                ipRouteProto value.  If this metric is not used,
                its value should be set to -1."
        ::= { wfIpxBaseRt2Entry 3 }

    wfIpxBaseRoute2Hops OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The primary routing metric (in hops) for this route. The
                semantics of this metric are determined by the
                routing-protocol specified in the route's
                ipRouteProto value.  If this metric is not used,
                its value should be set to -1."
        ::= { wfIpxBaseRt2Entry 4 }

    wfIpxBaseRoute2NextHopNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "In the case of a route bound to an interface
                which is realized via a broadcast media, the value
                of this field is the agent's IPX address on that
                interface."
        ::= { wfIpxBaseRt2Entry 5 }

    wfIpxBaseRoute2NextHopHost OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Full network.host_id address of nexthop host for
                this network."
        ::= { wfIpxBaseRt2Entry 6 }

    wfIpxBaseRoute2Type OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    invalid(2),
    		    direct(3),
    		    indirect(4),
    		    static(5)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The type of route. Note that the values
                direct(3) and indirect(4) refer to the notion of
                direct and indirect routing in the IPX
                architecture.

                Setting this object to the value invalid(2) has
                the effect of invalidating the corresponding entry
                in the ipRouteTable object.  That is, it
                effectively dissasociates the destination
                identified with said entry from the route
                identified with said entry.  It is an
                implementation-specific matter as to whether the
                agent removes an invalidated entry from the table.
                nagement stations must be prepared
                to receive tabular information from agents that
                corresponds to entries not currently in use.
                Proper interpretation of such entries requires
                examination of the relevant ipRouteType object."
        ::= { wfIpxBaseRt2Entry 7 }

    wfIpxBaseRoute2Proto OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    local(2),
    		    netmgmt(3),
    		    rip(4),
    		    nlsp(5)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The routing mechanism via which this route was
                learned.  Inclusion of values for gateway routing
                protocols is not intended to imply that hosts
                should support those protocols."
        ::= { wfIpxBaseRt2Entry 8 }

    wfIpxBaseRoute2Age OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The number of seconds since this route was last
                updated or otherwise determined to be correct.
                Note that no semantics of `too old' can be implied
                except through knowledge of the routing protocol
                by which the route was learned."
        ::= { wfIpxBaseRt2Entry 9 }

    wfIpxBaseRoute2Info OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "A user-defined string which describes this Route entry"
        ::= { wfIpxBaseRt2Entry 10 }

    wfIpxBaseSapEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxBaseSapEntry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "The table of Elements in IPX's SAP table"
        ::= { wfIpxGroup 3 }

    wfIpxBaseSapEntry OBJECT-TYPE
        SYNTAX	WfIpxBaseSapEntry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "An entry in the Routing Table"
        INDEX	{ wfIpxBaseSapIndex }
        ::= { wfIpxBaseSapEntryTable 1 }

    WfIpxBaseSapEntry ::= SEQUENCE {
    	    wfIpxBaseSapType
    		OCTET STRING,
    	    wfIpxBaseSapNetwork
    		OCTET STRING,
    	    wfIpxBaseSapHost
    		OCTET STRING,
    	    wfIpxBaseSapSocket
    		OCTET STRING,
    	    wfIpxBaseSapName
    		DisplayString,
    	    wfIpxBaseSapAge
    		INTEGER,
    	    wfIpxBaseSapHops
    		INTEGER,
    	    wfIpxBaseSapIndex
    		OCTET STRING,
    	    wfIpxBaseSapIntf
    		OCTET STRING
        }

    wfIpxBaseSapType OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Multiple routes to a single
                destination can appear in the table, but access to
                such multiple entries is dependent on the table-
                access mechanisms defined by the network
                management protocol in use."
        ::= { wfIpxBaseSapEntry 1 }

    wfIpxBaseSapNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The network address of this service."
        ::= { wfIpxBaseSapEntry 2 }

    wfIpxBaseSapHost OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The host address for this service."
        ::= { wfIpxBaseSapEntry 3 }

    wfIpxBaseSapSocket OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The socket for this particular service"
        ::= { wfIpxBaseSapEntry 4 }

    wfIpxBaseSapName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The server name."
        ::= { wfIpxBaseSapEntry 5 }

    wfIpxBaseSapAge OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The number of seconds  since  SAP entry has been updated."
        ::= { wfIpxBaseSapEntry 6 }

    wfIpxBaseSapHops OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The number of Hops away service is from router."
        ::= { wfIpxBaseSapEntry 7 }

    wfIpxBaseSapIndex OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (14))
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Index string comprised of type.network.hostid.socket
                used to uniquely index this server."
        ::= { wfIpxBaseSapEntry 8 }

    wfIpxBaseSapIntf OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Network Address of Nexthop Interface."
        ::= { wfIpxBaseSapEntry 9 }

    wfIpxInterfaceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxInterfaceEntry
        ACCESS	not-accessible
        STATUS	deprecated
        DESCRIPTION
                "The network interface record"
        ::= { wfIpxGroup 4 }

    wfIpxInterfaceEntry OBJECT-TYPE
        SYNTAX	WfIpxInterfaceEntry
        ACCESS	not-accessible
        STATUS	deprecated
        DESCRIPTION
                "An entry in the Routing Table"
        INDEX	{ wfIpxInterfaceNetworkNumber,
    		  wfIpxInterfaceCircuit }
        ::= { wfIpxInterfaceTable 1 }

    WfIpxInterfaceEntry ::= SEQUENCE {
    	    wfIpxInterfaceIndex
    		INTEGER,
    	    wfIpxInterfaceDelete
    		INTEGER,
    	    wfIpxInterfaceDisable
    		INTEGER,
    	    wfIpxInterfaceState
    		INTEGER,
    	    wfIpxInterfaceCircuit
    		INTEGER,
    	    wfIpxInterfaceNetworkNumber
    		OCTET STRING,
    	    wfIpxInterfaceCost
    		INTEGER,
    	    wfIpxInterfaceXsumOn
    		INTEGER,
    	    wfIpxInterfaceCfgEncaps
    		INTEGER,
    	    wfIpxInterfaceMacAddress
    		OCTET STRING,
    	    wfIpxInterfaceSMDSGroupAddress
    		OCTET STRING,
    	    wfIpxInterfaceMaxInfo
    		INTEGER,
    	    wfIpxInterfaceInReceives
    		Counter,
    	    wfIpxInterfaceInHdrErrors
    		Counter,
    	    wfIpxInterfaceInAddrErrors
    		Counter,
    	    wfIpxInterfaceForwDatagrams
    		Counter,
    	    wfIpxInterfaceInUnknownProtos
    		Counter,
    	    wfIpxInterfaceInDiscards
    		Counter,
    	    wfIpxInterfaceInDelivers
    		Counter,
    	    wfIpxInterfaceOutRequests
    		Counter,
    	    wfIpxInterfaceOutDiscards
    		Counter,
    	    wfIpxInterfaceOutNoRoutes
    		Counter,
    	    wfIpxInterfaceTrEndStation
    		INTEGER,
    	    wfIpxInterfaceNetbiosAccept
    		INTEGER,
    	    wfIpxInterfaceNetbiosDeliver
    		INTEGER,
    	    wfIpxInterfaceWanSapPeriod
    		INTEGER,
    	    wfIpxInterfaceFRBcast
    		OCTET STRING,
    	    wfIpxInterfaceFRMcast
    		OCTET STRING,
    	    wfIpxInterfaceEncaps
    		INTEGER,
    	    wfIpxInterfaceSplit
    		INTEGER,
    	    wfIpxInterfaceCacheHit
    		Counter,
    	    wfIpxInterfaceIpxWanDisable
    		INTEGER,
    	    wfIpxInterfaceIpxWanCommonNet
    		OCTET STRING,
    	    wfIpxInterfaceIpxWanTimeOut
    		INTEGER,
    	    wfIpxInterfaceIpxWanLinkRetry
    		INTEGER,
    	    wfIpxInterfaceWanRipPeriod
    		INTEGER,
    	    wfIpxInterfaceCfgHostNumber
    		OCTET STRING,
    	    wfIpxInterfaceActiveHostNumber
    		OCTET STRING
        }

    wfIpxInterfaceIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "A unique value for each IPX interface. Its value
                ranges between 1 and the value of MAXCIRCUITS."
        ::= { wfIpxInterfaceEntry 1 }

    wfIpxInterfaceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete an IPX interface."
        DEFVAL	{ created }
        ::= { wfIpxInterfaceEntry 2 }

    wfIpxInterfaceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an IPX interface."
        DEFVAL	{ enabled }
        ::= { wfIpxInterfaceEntry 3 }

    wfIpxInterfaceState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The current state of the IPX interface"
        DEFVAL	{ notpresent }
        ::= { wfIpxInterfaceEntry 4 }

    wfIpxInterfaceCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The Circuit Number that this interface runs over"
        ::= { wfIpxInterfaceEntry 5 }

    wfIpxInterfaceNetworkNumber OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The IPX Address to which this entry's
                addressing information pertains"
        ::= { wfIpxInterfaceEntry 6 }

    wfIpxInterfaceCost OBJECT-TYPE
        SYNTAX	INTEGER {
    		    cost(1)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "The Cost associated with the IPX Address of this entry"
        DEFVAL	{ cost }
        ::= { wfIpxInterfaceEntry 7 }

    wfIpxInterfaceXsumOn OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Flag for checksums"
        DEFVAL	{ enabled }
        ::= { wfIpxInterfaceEntry 8 }

    wfIpxInterfaceCfgEncaps OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ethernet(1),
    		    lsap(2),
    		    novell(3),
    		    snap(4),
    		    ppp(5)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "The encapsulation method associated with this interface
                chosen by the user but not necessarily the one used.
                (See wfIpxInterfaceEncaps)"
        DEFVAL	{ ethernet }
        ::= { wfIpxInterfaceEntry 9 }

    wfIpxInterfaceMacAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The MacAddress of this interface
                this port will receive or transmit."
        ::= { wfIpxInterfaceEntry 10 }

    wfIpxInterfaceSMDSGroupAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The SMDS group address"
        ::= { wfIpxInterfaceEntry 11 }

    wfIpxInterfaceMaxInfo OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The maximum size of the INFO (non-MAC) field
                that this port will receive or transmit."
        ::= { wfIpxInterfaceEntry 12 }

    wfIpxInterfaceInReceives OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The total number of input datagrams received from
                interfaces, including those received in error."
        ::= { wfIpxInterfaceEntry 13 }

    wfIpxInterfaceInHdrErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The number of input datagrams discarded due to
                errors in their IPX headers, including bad
                checksums, version number mismatch, other format
                errors, time-to-live exceeded, errors discovered
                in processing their IPX options, etc."
        ::= { wfIpxInterfaceEntry 14 }

    wfIpxInterfaceInAddrErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The number of input datagrams discarded because
                the IPX address in their IPX header's destination
                field was not a valid address to be received at
                this entity."
        ::= { wfIpxInterfaceEntry 15 }

    wfIpxInterfaceForwDatagrams OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The number of input datagrams for which this
                entity was not their final IPX destination, as a
                result of which an attempt was made to find a
                route to forward them to that final destination.
                In entities which do not act as IPX Gateways, this
                counter will include only those packets which were
                Source-Routed via this entity, and the Source-
                Route option processing was successful."
        ::= { wfIpxInterfaceEntry 16 }

    wfIpxInterfaceInUnknownProtos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The number of locally-addressed datagrams
                received successfully but discarded because of an
                unknown or unsupported protocol."
        ::= { wfIpxInterfaceEntry 17 }

    wfIpxInterfaceInDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The number of input IPX datagrams for which no
                problems were encountered to prevent their
                continued processing, but which were discarded
                (e.g., for lack of buffer space).  Note that this
                counter does not include any datagrams discarded
                while awaiting re-assembly."
        ::= { wfIpxInterfaceEntry 18 }

    wfIpxInterfaceInDelivers OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The total number of input datagrams successfully
                delivered to IPX user-protocols."
        ::= { wfIpxInterfaceEntry 19 }

    wfIpxInterfaceOutRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The total number of IPX datagrams which local IPX
                user-protocols supplied to IPX in
                requests for transmission.  Note that this counter
                does not include any datagrams counted in
                ipxForwDatagrams."
        ::= { wfIpxInterfaceEntry 20 }

    wfIpxInterfaceOutDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The number of output IPX datagrams for which no
                problem was encountered to prevent their
                transmission to their destination, but which were
                discarded (e.g., for lack of buffer space).  Note
                that this counter would include datagrams counted
                in ipForwDatagrams if any such packets met this
                (discretionary) discard criterion."
        ::= { wfIpxInterfaceEntry 21 }

    wfIpxInterfaceOutNoRoutes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The number of IPX datagrams discarded because no
                route could be found to transmit them to their
                destination.  Note that this counter includes any
                packets counted in ipForwDatagrams which meet this
                `no-route' criterion.  Note that this includes any
                datagarms which a host cannot route because all of
                its default gateways are down."
        ::= { wfIpxInterfaceEntry 22 }

    wfIpxInterfaceTrEndStation OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Source Routing flag"
        DEFVAL	{ disabled }
        ::= { wfIpxInterfaceEntry 23 }

    wfIpxInterfaceNetbiosAccept OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Accept NetBios All Networks Broadcast Packets"
        DEFVAL	{ enabled }
        ::= { wfIpxInterfaceEntry 24 }

    wfIpxInterfaceNetbiosDeliver OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Deliver NetBios All Networks Broadcast Packets"
        DEFVAL	{ enabled }
        ::= { wfIpxInterfaceEntry 25 }

    wfIpxInterfaceWanSapPeriod OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Configurable timer for SAP updates over LAN-WAN"
        DEFVAL	{ default }
        ::= { wfIpxInterfaceEntry 26 }

    wfIpxInterfaceFRBcast OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Configurable Frame Relay broadcast address"
        ::= { wfIpxInterfaceEntry 27 }

    wfIpxInterfaceFRMcast OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Configurable Frame Relay multicast address"
        ::= { wfIpxInterfaceEntry 28 }

    wfIpxInterfaceEncaps OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ethernet(1),
    		    lsap(2),
    		    novell(3),
    		    snap(4),
    		    ppp(5)
    		}
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The Active or final encapsulation method associated with
                this interface as determined by the router's implementation
                of encapsulation algorithms (rules, restrictions) based on media type."
        DEFVAL	{ ethernet }
        ::= { wfIpxInterfaceEntry 29 }

    wfIpxInterfaceSplit OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Enable or Disable Split Horizon algorithm for this interface
                Comes into to play for non full-meshed WAN networks (Frame Relay)"
        DEFVAL	{ enabled }
        ::= { wfIpxInterfaceEntry 30 }

    wfIpxInterfaceCacheHit OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "This counter was added for performance investigation under the same
                category as the number of Nets and number SAP counters.  THis counter
                Will provide information that will determine the usefullness of caching."
        ::= { wfIpxInterfaceEntry 31 }

    wfIpxInterfaceIpxWanDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Enable IPXWAN negotiations"
        DEFVAL	{ disabled }
        ::= { wfIpxInterfaceEntry 32 }

    wfIpxInterfaceIpxWanCommonNet OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Common network number for IPXWAN link"
        ::= { wfIpxInterfaceEntry 33 }

    wfIpxInterfaceIpxWanTimeOut OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(60)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "IPXWAN timer out period for negotiation"
        DEFVAL	{ default }
        ::= { wfIpxInterfaceEntry 34 }

    wfIpxInterfaceIpxWanLinkRetry OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(5)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "IPXWAN number of times to retry negotiation"
        DEFVAL	{ default }
        ::= { wfIpxInterfaceEntry 35 }

    wfIpxInterfaceWanRipPeriod OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Configurable timer for routing updates LAN-WAN"
        DEFVAL	{ default }
        ::= { wfIpxInterfaceEntry 36 }

    wfIpxInterfaceCfgHostNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Host Number and possible MAC address of interface.
                This host number will be used to overide the default
                cct generated hostnumber (if Multiple Host enabled).

                This field is not valid/used if the IpxBaseMultipleHost is
                not enabled, if the media is non-promiscuous (Token Ring)
                or if the field length is not 6 bytes."
        ::= { wfIpxInterfaceEntry 37 }

    wfIpxInterfaceActiveHostNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "Host Number and possible MAC address of interface.

                   This field will always be filled in by the router and
                   lists the HostNumber of each Interface."
        ::= { wfIpxInterfaceEntry 38 }

    wfIpxRipIntfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxRipIntfEntry
        ACCESS	not-accessible
        STATUS	deprecated
        DESCRIPTION
                "The list of RIP interfaces"
        ::= { wfIpxGroup 5 }

    wfIpxRipIntfEntry OBJECT-TYPE
        SYNTAX	WfIpxRipIntfEntry
        ACCESS	not-accessible
        STATUS	deprecated
        DESCRIPTION
                "An entry in the Routing Table"
        INDEX	{ wfIpxRipInterfaceIndex }
        ::= { wfIpxRipIntfTable 1 }

    WfIpxRipIntfEntry ::= SEQUENCE {
    	    wfIpxRipInterfaceDelete
    		INTEGER,
    	    wfIpxRipInterfaceDisable
    		INTEGER,
    	    wfIpxRipInterfaceState
    		INTEGER,
    	    wfIpxRipInterfaceIndex
    		OCTET STRING,
    	    wfIpxRipInterfaceSupply
    		INTEGER,
    	    wfIpxRipInterfaceListen
    		INTEGER
        }

    wfIpxRipInterfaceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete an RIP Interface instance."
        DEFVAL	{ created }
        ::= { wfIpxRipIntfEntry 1 }

    wfIpxRipInterfaceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an RIP instance."
        DEFVAL	{ enabled }
        ::= { wfIpxRipIntfEntry 2 }

    wfIpxRipInterfaceState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The current state of RIP on this interface."
        DEFVAL	{ notpresent }
        ::= { wfIpxRipIntfEntry 3 }

    wfIpxRipInterfaceIndex OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The IPX interface to run RIP on (instance id )."
        ::= { wfIpxRipIntfEntry 4 }

    wfIpxRipInterfaceSupply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Transmit RIP packets."
        DEFVAL	{ enabled }
        ::= { wfIpxRipIntfEntry 5 }

    wfIpxRipInterfaceListen OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Receive RIP packets."
        DEFVAL	{ enabled }
        ::= { wfIpxRipIntfEntry 6 }

    wfIpxAdjacentHostTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxAdjacentHostEntry
        ACCESS	not-accessible
        STATUS	deprecated
        DESCRIPTION
                "Table of configured Static Hosts
                This is implemented for hosts that are accessible over
                Frame Relay, SMDS etc.  where a corresponding DLCI address
                must be configured for a nexthop host."
        ::= { wfIpxGroup 6 }

    wfIpxAdjacentHostEntry OBJECT-TYPE
        SYNTAX	WfIpxAdjacentHostEntry
        ACCESS	not-accessible
        STATUS	deprecated
        DESCRIPTION
                "An entry in the Adjacent Host Table"
        INDEX	{ wfIpxAhTargHostNetwork,
    		  wfIpxAhTargHostId }
        ::= { wfIpxAdjacentHostTable 1 }

    WfIpxAdjacentHostEntry ::= SEQUENCE {
    	    wfIpxAhDelete
    		INTEGER,
    	    wfIpxAhDisable
    		INTEGER,
    	    wfIpxAhTargHostNetwork
    		OCTET STRING,
    	    wfIpxAhTargHostId
    		OCTET STRING,
    	    wfIpxAhNextHopIntf
    		OCTET STRING,
    	    wfIpxAhDlci
    		OCTET STRING
        }

    wfIpxAhDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete the IPX
                Static Host."
        DEFVAL	{ created }
        ::= { wfIpxAdjacentHostEntry 1 }

    wfIpxAhDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this IPX
                Static Route."
        DEFVAL	{ enabled }
        ::= { wfIpxAdjacentHostEntry 2 }

    wfIpxAhTargHostNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The network address of the static host."
        ::= { wfIpxAdjacentHostEntry 3 }

    wfIpxAhTargHostId OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The Address of this static host."
        ::= { wfIpxAdjacentHostEntry 4 }

    wfIpxAhNextHopIntf OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "The Next Hop Interface Network Address"
        ::= { wfIpxAdjacentHostEntry 5 }

    wfIpxAhDlci OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "The next Hop Host address"
        ::= { wfIpxAdjacentHostEntry 6 }

    wfIpxStaticRouteTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxStaticRouteEntry
        ACCESS	not-accessible
        STATUS	deprecated
        DESCRIPTION
                "The list of static routes used for Configuring IPX"
        ::= { wfIpxGroup 7 }

    wfIpxStaticRouteEntry OBJECT-TYPE
        SYNTAX	WfIpxStaticRouteEntry
        ACCESS	not-accessible
        STATUS	deprecated
        DESCRIPTION
                "An entry in the Routing Table"
        INDEX	{ wfIpxSrTargNetwork,
    		  wfIpxSrNextHopNetwork }
        ::= { wfIpxStaticRouteTable 1 }

    WfIpxStaticRouteEntry ::= SEQUENCE {
    	    wfIpxSrDelete
    		INTEGER,
    	    wfIpxSrDisable
    		INTEGER,
    	    wfIpxSrTargNetwork
    		OCTET STRING,
    	    wfIpxSrCost
    		INTEGER,
    	    wfIpxSrNextHopNetwork
    		OCTET STRING,
    	    wfIpxSrNextHopHost
    		OCTET STRING,
    	    wfIpxSrTargNetworkRt
    		INTEGER,
    	    wfIpxSrTickCost
    		OCTET STRING
        }

    wfIpxSrDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete the IPX
                Static Route."
        DEFVAL	{ created }
        ::= { wfIpxStaticRouteEntry 1 }

    wfIpxSrDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this IPX
                Static Route."
        DEFVAL	{ enabled }
        ::= { wfIpxStaticRouteEntry 2 }

    wfIpxSrTargNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The Address of this static route"
        ::= { wfIpxStaticRouteEntry 3 }

    wfIpxSrCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "The Cost of this Static Route in Hops"
        ::= { wfIpxStaticRouteEntry 4 }

    wfIpxSrNextHopNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The Next Hop IPX Address"
        ::= { wfIpxStaticRouteEntry 5 }

    wfIpxSrNextHopHost OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "The next Hop Host address"
        ::= { wfIpxStaticRouteEntry 6 }

    wfIpxSrTargNetworkRt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The Route Identifier Which numbered route this is to be"
        ::= { wfIpxStaticRouteEntry 7 }

    wfIpxSrTickCost OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "The Cost of this Static Route in Ticks"
        ::= { wfIpxStaticRouteEntry 8 }

    wfIpxNetBiosStaticRouteTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxNetBiosStaticRouteEntry
        ACCESS	not-accessible
        STATUS	deprecated
        DESCRIPTION
                "The list of static routes used for Configuring IPX"
        ::= { wfIpxGroup 8 }

    wfIpxNetBiosStaticRouteEntry OBJECT-TYPE
        SYNTAX	WfIpxNetBiosStaticRouteEntry
        ACCESS	not-accessible
        STATUS	deprecated
        DESCRIPTION
                "An entry in the Routing Table"
        INDEX	{ wfIpxNetBiosSrTargNetwork,
    		  wfIpxNetBiosSrIntf }
        ::= { wfIpxNetBiosStaticRouteTable 1 }

    WfIpxNetBiosStaticRouteEntry ::= SEQUENCE {
    	    wfIpxNetBiosSrDelete
    		INTEGER,
    	    wfIpxNetBiosSrDisable
    		INTEGER,
    	    wfIpxNetBiosSrTargNetwork
    		OCTET STRING,
    	    wfIpxNetBiosSrName
    		DisplayString,
    	    wfIpxNetBiosSrIntf
    		OCTET STRING,
    	    wfIpxNetBiosSrIndex
    		INTEGER
        }

    wfIpxNetBiosSrDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete the IPX NETBIOS
                Static Route."
        DEFVAL	{ created }
        ::= { wfIpxNetBiosStaticRouteEntry 1 }

    wfIpxNetBiosSrDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this IPX NETBIOS
                Static Route."
        DEFVAL	{ enabled }
        ::= { wfIpxNetBiosStaticRouteEntry 2 }

    wfIpxNetBiosSrTargNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The Address of this static route"
        ::= { wfIpxNetBiosStaticRouteEntry 3 }

    wfIpxNetBiosSrName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "The Name of the Target Server"
        ::= { wfIpxNetBiosStaticRouteEntry 4 }

    wfIpxNetBiosSrIntf OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The Interface Identifier for this static entry"
        ::= { wfIpxNetBiosStaticRouteEntry 5 }

    wfIpxNetBiosSrIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The Entry Index Which identifies this is entry"
        ::= { wfIpxNetBiosStaticRouteEntry 6 }

    wfIpxStaticSapTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxStaticSapEntry
        ACCESS	not-accessible
        STATUS	deprecated
        DESCRIPTION
                "The table of Static Services"
        ::= { wfIpxGroup 12 }

    wfIpxStaticSapEntry OBJECT-TYPE
        SYNTAX	WfIpxStaticSapEntry
        ACCESS	not-accessible
        STATUS	deprecated
        DESCRIPTION
                "An entry in the Routing Table"
        INDEX	{ wfIpxStaticSapIntf,
    		  wfIpxStaticSapCircuit,
    		  wfIpxStaticSapType,
    		  wfIpxStaticSapNetwork,
    		  wfIpxStaticSapSocket }
        ::= { wfIpxStaticSapTable 1 }

    WfIpxStaticSapEntry ::= SEQUENCE {
    	    wfIpxStaticSapDelete
    		INTEGER,
    	    wfIpxStaticSapDisable
    		INTEGER,
    	    wfIpxStaticSapType
    		OCTET STRING,
    	    wfIpxStaticSapNetwork
    		OCTET STRING,
    	    wfIpxStaticSapHost
    		OCTET STRING,
    	    wfIpxStaticSapSocket
    		OCTET STRING,
    	    wfIpxStaticSapName
    		DisplayString,
    	    wfIpxStaticSapHops
    		INTEGER,
    	    wfIpxStaticSapIndex
    		OCTET STRING,
    	    wfIpxStaticSapIntf
    		OCTET STRING,
    	    wfIpxStaticSapCircuit
    		INTEGER
        }

    wfIpxStaticSapDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete the IPX
                Static SAP."
        DEFVAL	{ created }
        ::= { wfIpxStaticSapEntry 1 }

    wfIpxStaticSapDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this IPX
                Static Route."
        DEFVAL	{ enabled }
        ::= { wfIpxStaticSapEntry 2 }

    wfIpxStaticSapType OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (2))
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "Multiple routes to a single
                destination can appear in the table, but access to
                such multiple entries is dependent on the table-
                access mechanisms defined by the network
                management protocol in use."
        ::= { wfIpxStaticSapEntry 3 }

    wfIpxStaticSapNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The network address of this service."
        ::= { wfIpxStaticSapEntry 4 }

    wfIpxStaticSapHost OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "The host address for this service."
        ::= { wfIpxStaticSapEntry 5 }

    wfIpxStaticSapSocket OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (2))
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The socket for this particular service"
        ::= { wfIpxStaticSapEntry 6 }

    wfIpxStaticSapName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "The server name."
        ::= { wfIpxStaticSapEntry 7 }

    wfIpxStaticSapHops OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "The number of Hops away service is from router."
        ::= { wfIpxStaticSapEntry 8 }

    wfIpxStaticSapIndex OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "Index string comprised of intf1.type.network.hostid.socket.
                Makes sorting easier and its a ah work around."
        ::= { wfIpxStaticSapEntry 9 }

    wfIpxStaticSapIntf OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "Network Address of Nexthop Interface."
        ::= { wfIpxStaticSapEntry 10 }

    wfIpxStaticSapCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "Circuit of Nexthop Interface."
        ::= { wfIpxStaticSapEntry 11 }

    wfIpxSapNetLvlFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxSapNetLvlFilter
        ACCESS	not-accessible
        STATUS	deprecated
        DESCRIPTION
                "The list of Network Level SAP Filters"
        ::= { wfIpxGroup 9 }

    wfIpxSapNetLvlFilter OBJECT-TYPE
        SYNTAX	WfIpxSapNetLvlFilter
        ACCESS	not-accessible
        STATUS	deprecated
        DESCRIPTION
                "An entry in the Filter Table"
        INDEX	{ wfIpxSapNetLvlIntf,
    		  wfIpxSapNetLvlIndex }
        ::= { wfIpxSapNetLvlFilterTable 1 }

    WfIpxSapNetLvlFilter ::= SEQUENCE {
    	    wfIpxSapNetLvlDelete
    		INTEGER,
    	    wfIpxSapNetLvlDisable
    		INTEGER,
    	    wfIpxSapNetLvlTargNetwork
    		OCTET STRING,
    	    wfIpxSapNetLvlType
    		OCTET STRING,
    	    wfIpxSapNetLvlAction
    		INTEGER,
    	    wfIpxSapNetLvlIntf
    		OCTET STRING,
    	    wfIpxSapNetLvlIndex
    		INTEGER
        }

    wfIpxSapNetLvlDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete the IPX
                Sap network level filter."
        DEFVAL	{ created }
        ::= { wfIpxSapNetLvlFilter 1 }

    wfIpxSapNetLvlDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this IPX
                network level SAP filter."
        DEFVAL	{ enabled }
        ::= { wfIpxSapNetLvlFilter 2 }

    wfIpxSapNetLvlTargNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "The Target Network address to monitor"
        ::= { wfIpxSapNetLvlFilter 3 }

    wfIpxSapNetLvlType OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "The Type of service to monitor"
        ::= { wfIpxSapNetLvlFilter 4 }

    wfIpxSapNetLvlAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    inactive(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "The Action to take Advertise or not Advertise"
        DEFVAL	{ active }
        ::= { wfIpxSapNetLvlFilter 5 }

    wfIpxSapNetLvlIntf OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The Interface identifier for this filter"
        ::= { wfIpxSapNetLvlFilter 6 }

    wfIpxSapNetLvlIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The Filter Index ."
        ::= { wfIpxSapNetLvlFilter 7 }

    wfIpxSapServtLvlFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxSapServLvlFilter
        ACCESS	not-accessible
        STATUS	deprecated
        DESCRIPTION
                "The list of Server Level SAP Filters"
        ::= { wfIpxGroup 10 }

    wfIpxSapServLvlFilter OBJECT-TYPE
        SYNTAX	WfIpxSapServLvlFilter
        ACCESS	not-accessible
        STATUS	deprecated
        DESCRIPTION
                "An entry in the Filter Table"
        INDEX	{ wfIpxSapServLvlIntf,
    		  wfIpxSapServLvlIndex }
        ::= { wfIpxSapServtLvlFilterTable 1 }

    WfIpxSapServLvlFilter ::= SEQUENCE {
    	    wfIpxSapServLvlDelete
    		INTEGER,
    	    wfIpxSapServLvlDisable
    		INTEGER,
    	    wfIpxSapServLvlTargServer
    		DisplayString,
    	    wfIpxSapServLvlType
    		OCTET STRING,
    	    wfIpxSapServLvlAction
    		INTEGER,
    	    wfIpxSapServLvlIntf
    		OCTET STRING,
    	    wfIpxSapServLvlIndex
    		INTEGER
        }

    wfIpxSapServLvlDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete the IPX
                server-level SAP filter."
        DEFVAL	{ created }
        ::= { wfIpxSapServLvlFilter 1 }

    wfIpxSapServLvlDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this IPX
                server-level SAP filter."
        DEFVAL	{ enabled }
        ::= { wfIpxSapServLvlFilter 2 }

    wfIpxSapServLvlTargServer OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "The Server Name to monitor."
        ::= { wfIpxSapServLvlFilter 3 }

    wfIpxSapServLvlType OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Type of service File server, Printer, etc..."
        ::= { wfIpxSapServLvlFilter 4 }

    wfIpxSapServLvlAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    inactive(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Associated Action (advertise or ignore )"
        DEFVAL	{ active }
        ::= { wfIpxSapServLvlFilter 5 }

    wfIpxSapServLvlIntf OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The Interface identifier for this filter"
        ::= { wfIpxSapServLvlFilter 6 }

    wfIpxSapServLvlIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The Filter Index ."
        ::= { wfIpxSapServLvlFilter 7 }

    wfIpxTrafficFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	deprecated
        DESCRIPTION
                "IPX Traffic Filters"
        ::= { wfIpxGroup 11 }

    wfIpxTrafficFilterEntry OBJECT-TYPE
        SYNTAX	WfIpxTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	deprecated
        DESCRIPTION
                "A traffic filter definition"
        INDEX	{ wfIpxTrafficFilterInterface,
    		  wfIpxTrafficFilterCircuit,
    		  wfIpxTrafficFilterRuleNumber,
    		  wfIpxTrafficFilterFragment }
        ::= { wfIpxTrafficFilterTable 1 }

    WfIpxTrafficFilterEntry ::= SEQUENCE {
    	    wfIpxTrafficFilterCreate
    		INTEGER,
    	    wfIpxTrafficFilterEnable
    		INTEGER,
    	    wfIpxTrafficFilterStatus
    		INTEGER,
    	    wfIpxTrafficFilterCounter
    		Counter,
    	    wfIpxTrafficFilterDefinition
    		Opaque,
    	    wfIpxTrafficFilterReserved
    		INTEGER,
    	    wfIpxTrafficFilterInterface
    		OCTET STRING,
    	    wfIpxTrafficFilterCircuit
    		INTEGER,
    	    wfIpxTrafficFilterRuleNumber
    		INTEGER,
    	    wfIpxTrafficFilterFragment
    		INTEGER,
    	    wfIpxTrafficFilterName
    		DisplayString
        }

    wfIpxTrafficFilterCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Defines the existence of the traffic filter rule:
                created - traffic filter exists
                delete - traffic filter does not exist and can be deleted."
        DEFVAL	{ created }
        ::= { wfIpxTrafficFilterEntry 1 }

    wfIpxTrafficFilterEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Defines whether or not the traffic filter rule should be used:
                enabled - activate the rule.
                disabled - inactivate the rule."
        DEFVAL	{ enabled }
        ::= { wfIpxTrafficFilterEntry 2 }

    wfIpxTrafficFilterStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    error(2),
    		    inactive(3)
    		}
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "Defines the current status of the traffic filter:
                inactive - the rule is not in use.
                active - the rule is being used.
                error - the application detected an error in the rule."
        DEFVAL	{ inactive }
        ::= { wfIpxTrafficFilterEntry 3 }

    wfIpxTrafficFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The number of received packets that have
                matched this rule."
        ::= { wfIpxTrafficFilterEntry 4 }

    wfIpxTrafficFilterDefinition OBJECT-TYPE
        SYNTAX	Opaque
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "The filter rule definition."
        ::= { wfIpxTrafficFilterEntry 5 }

    wfIpxTrafficFilterReserved OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "Reserved field."
        ::= { wfIpxTrafficFilterEntry 6 }

    wfIpxTrafficFilterInterface OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The network address of the IPX
                interface to which this filter is applied."
        ::= { wfIpxTrafficFilterEntry 7 }

    wfIpxTrafficFilterCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "The ID of the Circuit to which the
                filter is applied."
        ::= { wfIpxTrafficFilterEntry 8 }

    wfIpxTrafficFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "ID for the rule."
        ::= { wfIpxTrafficFilterEntry 9 }

    wfIpxTrafficFilterFragment OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	deprecated
        DESCRIPTION
                "Fragment number - for large rules."
        ::= { wfIpxTrafficFilterEntry 10 }

    wfIpxTrafficFilterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	deprecated
        DESCRIPTION
                "Name of the rule number."
        ::= { wfIpxTrafficFilterEntry 11 }

    wfIpxAggrStats	OBJECT IDENTIFIER ::= { wfIpxGroup 14 }

    wfIpxAggrInDatagrams OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams received"
        ::= { wfIpxAggrStats 1 }

    wfIpxAggrOutDatagrams OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams sent (includes datagrams
                forwarded)"
        ::= { wfIpxAggrStats 2 }

    wfIpxAggrFwdDatagrams OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams forwarded"
        ::= { wfIpxAggrStats 3 }

    wfIpxAggrInDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams queued for reception that
                were discarded for resource reasons"
        ::= { wfIpxAggrStats 4 }

    wfIpxAggrInHdrErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams discarded because of errors
                in the IPX header."
        ::= { wfIpxAggrStats 5 }

    wfIpxAggrInAddrErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total nmber of datagrams received whose destination
                address was invalid for this entity."
        ::= { wfIpxAggrStats 6 }

    wfIpxAggrInUnknownProtos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams received locally which
                specified an unknown or unsupported protocol."
        ::= { wfIpxAggrStats 7 }

    wfIpxAggrOutDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams queued for transmission
                that were discarded for resource reasons."
        ::= { wfIpxAggrStats 8 }

    wfIpxAggrOutNoRoutes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams queued for transmission thet
                were discarded because the destination was unreachable."
        ::= { wfIpxAggrStats 9 }

    END  -- Wellfleet-IPX-MIB
-- @(#)WSCCS m/mibs-ipxa.mib 1.2 10/16/95
Wellfleet-IPXA-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:44:03 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfIpxGroup
        FROM Wellfleet-COMMON-MIB;


    wfIpxBasicSysTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxBasicSysEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Wellfleet IPX Basic System Table"
        ::= { wfIpxGroup 15 }

    wfIpxBasicSysEntry OBJECT-TYPE
        SYNTAX	WfIpxBasicSysEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the IPX Circ Table"
        INDEX	{ wfIpxBasicSysInstance }
        ::= { wfIpxBasicSysTable 1 }

    WfIpxBasicSysEntry ::= SEQUENCE {
    	    wfIpxBasicSysDelete
    		INTEGER,
    	    wfIpxBasicSysDisable
    		INTEGER,
    	    wfIpxBasicSysState
    		INTEGER,
    	    wfIpxBasicSysInstance
    		INTEGER,
    	    wfIpxBasicSysPrimaryNetworkNumber
    		OCTET STRING,
    	    wfIpxBasicSysMultipleHostAddresses
    		INTEGER,
    	    wfIpxBasicSysCfgHostAddress
    		OCTET STRING,
    	    wfIpxBasicSysHostAddress
    		OCTET STRING,
    	    wfIpxBasicSysRouterName
    		DisplayString,
    	    wfIpxBasicSysInReceives
    		Counter,
    	    wfIpxBasicSysInHdrErrors
    		Counter,
    	    wfIpxBasicSysInUnknownSockets
    		Counter,
    	    wfIpxBasicSysInDiscards
    		Counter,
    	    wfIpxBasicSysInBadChecksums
    		Counter,
    	    wfIpxBasicSysInDelivers
    		Counter,
    	    wfIpxBasicSysNoRoutes
    		Counter,
    	    wfIpxBasicSysOutRequests
    		Counter,
    	    wfIpxBasicSysOutMalformedRequests
    		Counter,
    	    wfIpxBasicSysOutPackets
    		Counter,
    	    wfIpxBasicSysOpenEncapsFails
    		Counter,
    	    wfIpxBasicSysOutDiscards
    		Counter
        }

    wfIpxBasicSysDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete IPX."
        DEFVAL	{ created }
        ::= { wfIpxBasicSysEntry 1 }

    wfIpxBasicSysDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable IPX."
        DEFVAL	{ enabled }
        ::= { wfIpxBasicSysEntry 2 }

    wfIpxBasicSysState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the entire IPX Router."
        DEFVAL	{ notpresent }
        ::= { wfIpxBasicSysEntry 3 }

    wfIpxBasicSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier for the instance of IPX."
        ::= { wfIpxBasicSysEntry 4 }

    wfIpxBasicSysPrimaryNetworkNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The 'internal' network number, used for IPXWAN"
        ::= { wfIpxBasicSysEntry 5 }

    wfIpxBasicSysMultipleHostAddresses OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Allow the user to configure one host/mac addr for the whole box (default)
                where, if configured, the CfgHostAddress is used (becomes HostAddress)
                otherwise if left unconfigured the Host address is discerned from the
                backplane serial number.  If Multiple host is Enabled and the host number is
                configured in the interface record the configured value is used as the
                hostid/mac addr of the interface (except Token Ring which can't go into
                promiscous mode, uses Token Ring Mac as hostid/mac of interface). If the
                host number in left unconfigured then the hostid/mac is gotten from the
                mac of the circuit."
        DEFVAL	{ enabled }
        ::= { wfIpxBasicSysEntry 6 }

    wfIpxBasicSysCfgHostAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Host Number of Router and potential MAC address of box.
                This host number will be used to overide the default
                box generated host address."
        ::= { wfIpxBasicSysEntry 7 }

    wfIpxBasicSysHostAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Host Number of Router and potential MAC address of box.
                This is not a restart variable because this will be
                filled in from the IPX code after reading it from
                either the configurable host number or from a box
                generated variable."
        ::= { wfIpxBasicSysEntry 8 }

    wfIpxBasicSysRouterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Name of the Router, used for IPXWAN"
        ::= { wfIpxBasicSysEntry 9 }

    wfIpxBasicSysInReceives OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of IPX packets received, including errors"
        ::= { wfIpxBasicSysEntry 10 }

    wfIpxBasicSysInHdrErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IPX packets discarded due to errors in
                their headers, including any IPX packet with a size less
                than the minimum of 30 bytes"
        ::= { wfIpxBasicSysEntry 11 }

    wfIpxBasicSysInUnknownSockets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IPX packets discarded because the
                destination was the router and the socket was not known"
        ::= { wfIpxBasicSysEntry 12 }

    wfIpxBasicSysInDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IPX packets received but discarded due to
                reasons other than those accounted for by
                wfIpxBasicSysInHdrErrors , wfIpxBasicSysInUnknownSockets,
                wfIpxBasicSysAdvSysInDiscards, and wfIpxAdvSysInCompressDiscards"
        ::= { wfIpxBasicSysEntry 13 }

    wfIpxBasicSysInBadChecksums OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IPX packets received with incorrect checksums"
        ::= { wfIpxBasicSysEntry 14 }

    wfIpxBasicSysInDelivers OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IPX packets delivered locally"
        ::= { wfIpxBasicSysEntry 15 }

    wfIpxBasicSysNoRoutes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times no route to a destination was found"
        ::= { wfIpxBasicSysEntry 16 }

    wfIpxBasicSysOutRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IPX packets supplied locally for
                transmission, not including any packets counted in
                wfIpxAdvSysForwPackets"
        ::= { wfIpxBasicSysEntry 17 }

    wfIpxBasicSysOutMalformedRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of outgoing IPX packets discarded due to
                reasons other than those accounted for in
                wfIpxBasicSysOutMalformedRequest, wfIpxAdvSysOutFiltered,
                and wfIpxAdvSysOutCompressDiscards"
        ::= { wfIpxBasicSysEntry 18 }

    wfIpxBasicSysOutPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of IPX packets transmitted"
        ::= { wfIpxBasicSysEntry 19 }

    wfIpxBasicSysOpenEncapsFails OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IPX encaps open calls which failed"
        ::= { wfIpxBasicSysEntry 20 }

    wfIpxBasicSysOutDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of outgoing IPX packets discarded due to
                reasons other than those accounted for by
                wfIpxBasicSysOutMalformedRequests,
                wfIpxBasicSysAdvSysOutFiltered, and wfIpxAdvSysOutCompressDiscards"
        ::= { wfIpxBasicSysEntry 21 }

    wfIpxAdvSysTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxAdvSysEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Wellfleet IPX Advanced System Table"
        ::= { wfIpxGroup 16 }

    wfIpxAdvSysEntry OBJECT-TYPE
        SYNTAX	WfIpxAdvSysEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the IPX Circ Table"
        INDEX	{ wfIpxAdvSysInstance }
        ::= { wfIpxAdvSysTable 1 }

    WfIpxAdvSysEntry ::= SEQUENCE {
    	    wfIpxAdvSysDelete
    		INTEGER,
    	    wfIpxAdvSysInstance
    		INTEGER,
    	    wfIpxAdvSysRoutingMethod
    		INTEGER,
    	    wfIpxAdvSysLogFilter
    		INTEGER,
    	    wfIpxAdvSysMaximumPath
    		INTEGER,
    	    wfIpxAdvSysMaxPathSplits
    		INTEGER,
    	    wfIpxAdvSysMaxHops
    		INTEGER,
    	    wfIpxAdvSysInTooManyHops
    		Counter,
    	    wfIpxAdvSysInFiltered
    		Counter,
    	    wfIpxAdvSysInCompressDiscards
    		Counter,
    	    wfIpxAdvSysNETBIOSPackets
    		Counter,
    	    wfIpxAdvSysForwPackets
    		Counter,
    	    wfIpxAdvSysOutFiltered
    		Counter,
    	    wfIpxAdvSysOutCompressDiscards
    		Counter,
    	    wfIpxAdvSysNovellCertificationConformanceDisable
    		INTEGER,
    	    wfIpxAdvSysCircCount
    		Counter,
    	    wfIpxAdvSysCfgDestCount
    		INTEGER,
    	    wfIpxAdvSysDestCount
    		Counter,
    	    wfIpxAdvSysCfgServCount
    		INTEGER,
    	    wfIpxAdvSysServCount
    		Counter,
    	    wfIpxAdvSysCfgHostCount
    		INTEGER,
    	    wfIpxAdvSysHostCount
    		Counter,
    	    wfIpxAdvSysAgingFrequency
    		INTEGER,
    	    wfIpxAdvSysAgingPendingFrequency
    		INTEGER,
    	    wfIpxAdvSysDefaultRouteEnable
    		INTEGER,
    	    wfIpxAdvSysSapViaDefaultRouteEnable
    		INTEGER
        }

    wfIpxAdvSysDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete the IPX
                advanced system group."
        DEFVAL	{ created }
        ::= { wfIpxAdvSysEntry 1 }

    wfIpxAdvSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier for the instance of IPX."
        ::= { wfIpxAdvSysEntry 2 }

    wfIpxAdvSysRoutingMethod OBJECT-TYPE
        SYNTAX	INTEGER {
    		    hop(1),
    		    tick(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Choose either Tick or Hop based routing"
        DEFVAL	{ tick }
        ::= { wfIpxAdvSysEntry 3 }

    wfIpxAdvSysLogFilter OBJECT-TYPE
        SYNTAX	INTEGER {
    		    debug(1),
    		    info(2),
    		    trace(16),
    		    debuginfo(3),
    		    debugtrace(17),
    		    infotrace(18),
    		    debuginfotrace(19)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Filter out some log messages, Default filters out
                trace messages."
        DEFVAL	{ trace }
        ::= { wfIpxAdvSysEntry 4 }

    wfIpxAdvSysMaximumPath OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Declare Maximum number equal costs paths allowed for
                a given destination network"
        DEFVAL	{ 1 }
        ::= { wfIpxAdvSysEntry 5 }

    wfIpxAdvSysMaxPathSplits OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of paths with equal routing metric
                value which IPX may split between when forwarding packets"
        DEFVAL	{ 1 }
        ::= { wfIpxAdvSysEntry 6 }

    wfIpxAdvSysMaxHops OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of hops a packet may take"
        DEFVAL	{ 16 }
        ::= { wfIpxAdvSysEntry 7 }

    wfIpxAdvSysInTooManyHops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IPX packets discarded due to exceeding the
                maximum hop count."
        ::= { wfIpxAdvSysEntry 8 }

    wfIpxAdvSysInFiltered OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of incoming IPX packets discarded due to
                filtering, not including those counted in
                wfIpxTrafficFilterCounter"
        ::= { wfIpxAdvSysEntry 9 }

    wfIpxAdvSysInCompressDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Then number of incoming IPX packets discarded due to
                decompression errors."
        ::= { wfIpxAdvSysEntry 10 }

    wfIpxAdvSysNETBIOSPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of NETBIOS packets received"
        ::= { wfIpxAdvSysEntry 11 }

    wfIpxAdvSysForwPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IPX packets forwarded"
        ::= { wfIpxAdvSysEntry 12 }

    wfIpxAdvSysOutFiltered OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of outgoing IPX packets discarded due to filtering"
        ::= { wfIpxAdvSysEntry 13 }

    wfIpxAdvSysOutCompressDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of outgoing IPX packets discarded due to
                compression errors"
        ::= { wfIpxAdvSysEntry 14 }

    wfIpxAdvSysNovellCertificationConformanceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable Novell certification, disable/enable Wellfleet specifics"
        DEFVAL	{ enabled }
        ::= { wfIpxAdvSysEntry 15 }

    wfIpxAdvSysCircCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IPX Circuits (interfaces)."
        ::= { wfIpxAdvSysEntry 16 }

    wfIpxAdvSysCfgDestCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A value indicating the maximum destinations (networks) that
                the user expects the router to learn. This is used to
                pre-allocate table sizes for network tables. Changing this
                value can greatly effect the memory used by IPX, however it
                can also speed learning times."
        ::= { wfIpxAdvSysEntry 17 }

    wfIpxAdvSysDestCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of currently reachable destinations known to IPX"
        ::= { wfIpxAdvSysEntry 18 }

    wfIpxAdvSysCfgServCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A value indicating the maximum services that the user
                expects the router to learn. This is used to pre-allocate
                table sizes for service tables. Changing this value
                can greatly effect the memory used by IPX, however it
                can also speed learning times."
        ::= { wfIpxAdvSysEntry 19 }

    wfIpxAdvSysServCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of currently reachable services known to IPX"
        ::= { wfIpxAdvSysEntry 20 }

    wfIpxAdvSysCfgHostCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A value indicating the maximum next hop hosts that the user
                expects the router to learn. This is used to pre-allocate
                table sizes for host tables. Changing this value
                can greatly effect the memory used by IPX, however it
                can also speed learning times."
        ::= { wfIpxAdvSysEntry 21 }

    wfIpxAdvSysHostCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of currently reachable hosts known to IPX"
        ::= { wfIpxAdvSysEntry 22 }

    wfIpxAdvSysAgingFrequency OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The frequency, in seconds, for aging RIP and SAP
                information."
        DEFVAL	{ 10 }
        ::= { wfIpxAdvSysEntry 23 }

    wfIpxAdvSysAgingPendingFrequency OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of routes and services to age before pending."
        DEFVAL	{ 100 }
        ::= { wfIpxAdvSysEntry 24 }

    wfIpxAdvSysDefaultRouteEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter indicates whether or not default route is used
                for unknown networks."
        DEFVAL	{ enabled }
        ::= { wfIpxAdvSysEntry 25 }

    wfIpxAdvSysSapViaDefaultRouteEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter indicates whether or not a SAP advertisement
                can be learned from an interface if the network number advertised
                in the SAP advertisement is unreachable but default route is
                accessible from that interface.  Note that the router may not be
                compatible with other router implementations when this feature is
                enabled."
        DEFVAL	{ disabled }
        ::= { wfIpxAdvSysEntry 26 }

    wfIpxCircTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxCircEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Wellfleet IPX Circuit Table"
        ::= { wfIpxGroup 17 }

    wfIpxCircEntry OBJECT-TYPE
        SYNTAX	WfIpxCircEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the IPX Circuit Table"
        INDEX	{ wfIpxCircSysInstance,
    		  wfIpxCircIndex }
        ::= { wfIpxCircTable 1 }

    WfIpxCircEntry ::= SEQUENCE {
    	    wfIpxCircDelete
    		INTEGER,
    	    wfIpxCircDisable
    		INTEGER,
    	    wfIpxCircState
    		INTEGER,
    	    wfIpxCircSysInstance
    		INTEGER,
    	    wfIpxCircIndex
    		INTEGER,
    	    wfIpxCircIfIndex
    		INTEGER,
    	    wfIpxCircName
    		DisplayString,
    	    wfIpxCircCfgType
    		INTEGER,
    	    wfIpxCircLocalMaxPacketSize
    		INTEGER,
    	    wfIpxCircCfgCompressState
    		INTEGER,
    	    wfIpxCircCompressState
    		INTEGER,
    	    wfIpxCircCompressSlots
    		INTEGER,
    	    wfIpxCircCompressedSent
    		Counter,
    	    wfIpxCircCompressedInitSent
    		Counter,
    	    wfIpxCircCompressedRejectsSent
    		Counter,
    	    wfIpxCircUncompressedSent
    		Counter,
    	    wfIpxCircCompressedReceived
    		Counter,
    	    wfIpxCircCompressedInitReceived
    		Counter,
    	    wfIpxCircCompressedRejectsReceived
    		Counter,
    	    wfIpxCircUncompressedReceived
    		Counter,
    	    wfIpxCircMediaType
    		INTEGER,
    	    wfIpxCircCfgNetworkNumber
    		OCTET STRING,
    	    wfIpxCircNetworkNumber
    		OCTET STRING,
    	    wfIpxCircCommonNetworkNumber
    		OCTET STRING,
    	    wfIpxCircCfgHostAddress
    		OCTET STRING,
    	    wfIpxCircHostAddress
    		OCTET STRING,
    	    wfIpxCircMacAddress
    		OCTET STRING,
    	    wfIpxCircCfgBroadcastAddress
    		OCTET STRING,
    	    wfIpxCircBroadcastAddress
    		OCTET STRING,
    	    wfIpxCircCfgMulticastAddress
    		OCTET STRING,
    	    wfIpxCircMulticastAddress
    		OCTET STRING,
    	    wfIpxCircStateChanges
    		Counter,
    	    wfIpxCircInitFails
    		Counter,
    	    wfIpxCircDelay
    		INTEGER,
    	    wfIpxCircThroughput
    		INTEGER,
    	    wfIpxCircNeighRouterName
    		DisplayString,
    	    wfIpxCircNeighInternalNetNum
    		OCTET STRING,
    	    wfIpxCircCost
    		INTEGER,
    	    wfIpxCircChecksum
    		INTEGER,
    	    wfIpxCircCfgEncaps
    		INTEGER,
    	    wfIpxCircEncaps
    		INTEGER,
    	    wfIpxCircInTooManyHops
    		Counter,
    	    wfIpxCircInFiltered
    		Counter,
    	    wfIpxCircInHdrErrors
    		Counter,
    	    wfIpxCircInUnknownSockets
    		Counter,
    	    wfIpxCircNETBIOSPackets
    		Counter,
    	    wfIpxCircInBadChecksums
    		Counter,
    	    wfIpxCircInDelivers
    		Counter,
    	    wfIpxCircInDiscards
    		Counter,
    	    wfIpxCircNoRoutes
    		Counter,
    	    wfIpxCircOutRequests
    		Counter,
    	    wfIpxCircOutMalformedRequests
    		Counter,
    	    wfIpxCircOutDiscards
    		Counter,
    	    wfIpxCircOutFiltered
    		Counter,
    	    wfIpxCircDestCount
    		Counter,
    	    wfIpxCircServCount
    		Counter,
    	    wfIpxCircHostCount
    		Counter,
    	    wfIpxCircForwardCount
    		Counter,
    	    wfIpxCircTrEndStation
    		INTEGER,
    	    wfIpxCircNetbiosAccept
    		INTEGER,
    	    wfIpxCircNetbiosDeliver
    		INTEGER,
    	    wfIpxCircSMDSIndividualAddress
    		OCTET STRING,
    	    wfIpxCircType
    		INTEGER,
    	    wfIpxCircWatchdogSpoof
    		INTEGER,
    	    wfIpxCircOutWatchdogSpoofRsps
    		Counter,
    	    wfIpxCircCfgDelay
    		INTEGER,
    	    wfIpxCircCfgThroughput
    		INTEGER
        }

    wfIpxCircDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete this entry."
        DEFVAL	{ created }
        ::= { wfIpxCircEntry 1 }

    wfIpxCircDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an entry."
        DEFVAL	{ enabled }
        ::= { wfIpxCircEntry 2 }

    wfIpxCircState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of this entry"
        DEFVAL	{ notpresent }
        ::= { wfIpxCircEntry 3 }

    wfIpxCircSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxCircEntry 4 }

    wfIpxCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of this circuit, unique within the
                instance of RIP. This value corresponds to the IPX circuit
                identifier found in wfIpxCircIndex."
        ::= { wfIpxCircEntry 5 }

    wfIpxCircIfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The identifier of the DP circuit to which this IPX circuit
                is linked."
        ::= { wfIpxCircEntry 6 }

    wfIpxCircName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Name of this IPX circuit"
        ::= { wfIpxCircEntry 7 }

    wfIpxCircCfgType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    broadcast(2),
    		    pt(4),
    		    wanrip(8),
    		    unnumberedrip(16),
    		    dynamic(32),
    		    ws(64),
    		    nlsp(128)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The type assigned by the user to this IPX circuit.
                To enable IPXWAN negotiations on this (WAN) circuit,
                set one or more of WAN_RIP, UNNUMBERED_RIP, and
                WAN_NLSP."
        DEFVAL	{ dynamic }
        ::= { wfIpxCircEntry 8 }

    wfIpxCircLocalMaxPacketSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum size (including header), in bytes that the
                media supports on this DP circuit."
        ::= { wfIpxCircEntry 9 }

    wfIpxCircCfgCompressState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The configured compression state of this IPX circuit."
        DEFVAL	{ disabled }
        ::= { wfIpxCircEntry 10 }

    wfIpxCircCompressState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The actual compression state on this IPX circuit."
        DEFVAL	{ disabled }
        ::= { wfIpxCircEntry 11 }

    wfIpxCircCompressSlots OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of compression slots available on this circuit."
        DEFVAL	{ 16 }
        ::= { wfIpxCircEntry 12 }

    wfIpxCircCompressedSent OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of compressed packets sent."
        ::= { wfIpxCircEntry 13 }

    wfIpxCircCompressedInitSent OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of compression initialization packets sent."
        ::= { wfIpxCircEntry 14 }

    wfIpxCircCompressedRejectsSent OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of compressed packet rejected packets sent."
        ::= { wfIpxCircEntry 15 }

    wfIpxCircUncompressedSent OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of uncompressed packets sent without being compressed
                even though compression was turned on for this IPX circuit."
        ::= { wfIpxCircEntry 16 }

    wfIpxCircCompressedReceived OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of compressed packets received."
        ::= { wfIpxCircEntry 17 }

    wfIpxCircCompressedInitReceived OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of compression initialization packets received."
        ::= { wfIpxCircEntry 18 }

    wfIpxCircCompressedRejectsReceived OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of compressed packet rejected packets received."
        ::= { wfIpxCircEntry 19 }

    wfIpxCircUncompressedReceived OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of packets received without having been
                compressed even though compression was turned on for
                this IPX circuit."
        ::= { wfIpxCircEntry 20 }

    wfIpxCircMediaType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The media type used on this IPX circuit."
        ::= { wfIpxCircEntry 21 }

    wfIpxCircCfgNetworkNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The IPX network number assigned by the user to this
                IPX circuit."
        ::= { wfIpxCircEntry 22 }

    wfIpxCircNetworkNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IPX network number of this IPX circuit."
        ::= { wfIpxCircEntry 23 }

    wfIpxCircCommonNetworkNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The IPX common network number assigned to this IPX circuit."
        ::= { wfIpxCircEntry 24 }

    wfIpxCircCfgHostAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The IPX Host Address assigned by the user to this
                IPX circuit."
        ::= { wfIpxCircEntry 25 }

    wfIpxCircHostAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IPX Host Address of this IPX circuit."
        ::= { wfIpxCircEntry 26 }

    wfIpxCircMacAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IPX Host Address of this IPX circuit."
        ::= { wfIpxCircEntry 27 }

    wfIpxCircCfgBroadcastAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Broadcast Address assigned by the user to this
                IPX circuit."
        ::= { wfIpxCircEntry 28 }

    wfIpxCircBroadcastAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Broadcast Address of this IPX circuit."
        ::= { wfIpxCircEntry 29 }

    wfIpxCircCfgMulticastAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Multicast Address assigned by the user to this
                IPX circuit."
        ::= { wfIpxCircEntry 30 }

    wfIpxCircMulticastAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Multicast Address of this IPX circuit."
        ::= { wfIpxCircEntry 31 }

    wfIpxCircStateChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times this IPX circuit has changed state."
        ::= { wfIpxCircEntry 32 }

    wfIpxCircInitFails OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times that initialization of this
                circuit has failed."
        ::= { wfIpxCircEntry 33 }

    wfIpxCircDelay OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The period of time, in microseconds, that it takes to
                transmit one byte of data, excluding protocol headers,
                to a destination on the other end of this IPX circuit,
                if the IPX circuit is free of other traffic.  This
                value will be filled in by IPX to be either the value
                configured or a computed value."
        ::= { wfIpxCircEntry 34 }

    wfIpxCircThroughput OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The amount of data, in bits per second, that may flow
                through this IPX circuit if there is no other traffic.
                This value will be filled in by IPX to be either the value
                configured or a computed value."
        ::= { wfIpxCircEntry 35 }

    wfIpxCircNeighRouterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The name of the neighboring router on a IPXWAN circuit."
        ::= { wfIpxCircEntry 36 }

    wfIpxCircNeighInternalNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The internal network number of the neighboring router
                on an IPXWAN circuit."
        ::= { wfIpxCircEntry 37 }

    wfIpxCircCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The cost of this interface, in ticks or hops dependant on
                the wfIpxAdvSysRoutingMethod field."
        DEFVAL	{ 1 }
        ::= { wfIpxCircEntry 38 }

    wfIpxCircChecksum OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Whether or not to check checksums of packets coming into
                this IPX circuit."
        DEFVAL	{ disabled }
        ::= { wfIpxCircEntry 39 }

    wfIpxCircCfgEncaps OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ethernet(1),
    		    lsap(2),
    		    novell(3),
    		    snap(4),
    		    ppp(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The encapsulation assigned by the user to this
                IPX circuit."
        DEFVAL	{ ethernet }
        ::= { wfIpxCircEntry 40 }

    wfIpxCircEncaps OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ethernet(1),
    		    lsap(2),
    		    novell(3),
    		    snap(4),
    		    ppp(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The encapsulation used on this IPX circuit."
        DEFVAL	{ ethernet }
        ::= { wfIpxCircEntry 41 }

    wfIpxCircInTooManyHops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IPX packets discarded due to exceeding the
                maximum hops count set for this IPX circuit."
        ::= { wfIpxCircEntry 42 }

    wfIpxCircInFiltered OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of incoming IPX packets discarded due to
                filtering, not including those counted in
                wfIpxTrafficFilterCounter."
        ::= { wfIpxCircEntry 43 }

    wfIpxCircInHdrErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IPX packets discarded due to errors in
                their headers, including any IPX packet with a size less
                than the minimum of 30 bytes."
        ::= { wfIpxCircEntry 44 }

    wfIpxCircInUnknownSockets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IPX packets discarded because the
                destination socket was not known."
        ::= { wfIpxCircEntry 45 }

    wfIpxCircNETBIOSPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of NETBIOS packets received on this
                IPX circuit."
        ::= { wfIpxCircEntry 46 }

    wfIpxCircInBadChecksums OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IPX packets discarded because the
                checksum was incorrect."
        ::= { wfIpxCircEntry 47 }

    wfIpxCircInDelivers OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IPX packets delivered locally"
        ::= { wfIpxCircEntry 48 }

    wfIpxCircInDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IPX packets received but discarded due to
                reasons other than those accounted for by
                wfIpxCircInHdrErrors, wfIpxCircInUnknownSockets"
        ::= { wfIpxCircEntry 49 }

    wfIpxCircNoRoutes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times no route to a destination was
                found."
        ::= { wfIpxCircEntry 50 }

    wfIpxCircOutRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IPX packets supplied locally for
                transmission."
        ::= { wfIpxCircEntry 51 }

    wfIpxCircOutMalformedRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of IPX packets supplied locally that contained
                errors in their structure."
        ::= { wfIpxCircEntry 52 }

    wfIpxCircOutDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of outgoing IPX packets discarded due to
                reasons other than those accounted for in"
        ::= { wfIpxCircEntry 53 }

    wfIpxCircOutFiltered OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of outgoing IPX packets diecarded due to
                filtering."
        ::= { wfIpxCircEntry 54 }

    wfIpxCircDestCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of networks known to the IPX router
                from this IPX circuit."
        ::= { wfIpxCircEntry 55 }

    wfIpxCircServCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of services known to the IPX router
                from this IPX circuit."
        ::= { wfIpxCircEntry 56 }

    wfIpxCircHostCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of hosts known to the IPX router
                from this IPX circuit."
        ::= { wfIpxCircEntry 57 }

    wfIpxCircForwardCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of forward entries in the IPX router
                forwarding table for this IPX circuit."
        ::= { wfIpxCircEntry 58 }

    wfIpxCircTrEndStation OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Whether or not to do Source Routing, only valid
                on token ring media."
        DEFVAL	{ disabled }
        ::= { wfIpxCircEntry 59 }

    wfIpxCircNetbiosAccept OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Accept NetBios All Networks Broadcast Packets"
        DEFVAL	{ disabled }
        ::= { wfIpxCircEntry 60 }

    wfIpxCircNetbiosDeliver OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Deliver NetBios All Networks Broadcast Packets"
        DEFVAL	{ disabled }
        ::= { wfIpxCircEntry 61 }

    wfIpxCircSMDSIndividualAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The SMDS individual address for this IPX circuit."
        ::= { wfIpxCircEntry 62 }

    wfIpxCircType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    broadcast(2),
    		    pt(3),
    		    wanrip(4),
    		    unnumberedrip(5),
    		    dynamic(6),
    		    ws(7),
    		    nlsp(8)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The type of the circuit. If IPXWAN was enabled on
                this circuit, this attribute will indicate the
                negotiated routing type."
        ::= { wfIpxCircEntry 63 }

    wfIpxCircWatchdogSpoof OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Whether or not to do Watchdog Spoofing."
        DEFVAL	{ disabled }
        ::= { wfIpxCircEntry 64 }

    wfIpxCircOutWatchdogSpoofRsps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Watchdog response packets sent to
                IPX servers in response to Watchdog queries."
        ::= { wfIpxCircEntry 65 }

    wfIpxCircCfgDelay OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The period of time, in microseconds, that it takes to
                transmit one byte of data, excluding protocol headers,
                to a destination on the other end of this IPX circuit,
                if the IPX circuit is free of other traffic.  This
                value is assigned by the user."
        ::= { wfIpxCircEntry 66 }

    wfIpxCircCfgThroughput OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The amount of data, in bits per second, that may flow
                through this IPX circuit if there is no other traffic.
                This value is assigned by the user."
        ::= { wfIpxCircEntry 67 }

    wfIpxDestEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxDestEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "IPX Dest table, contains information about all known
                destinations."
        ::= { wfIpxGroup 18 }

    wfIpxDestEntry OBJECT-TYPE
        SYNTAX	WfIpxDestEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Destination table contains information about all known destinations"
        INDEX	{ wfIpxDestSysInstance,
    		  wfIpxDestNetNum }
        ::= { wfIpxDestEntryTable 1 }

    WfIpxDestEntry ::= SEQUENCE {
    	    wfIpxDestSysInstance
    		INTEGER,
    	    wfIpxDestNetNum
    		OCTET STRING,
    	    wfIpxDestProtocol
    		INTEGER,
    	    wfIpxDestTicks
    		INTEGER,
    	    wfIpxDestHopCount
    		INTEGER,
    	    wfIpxDestNextHopCircIndex
    		INTEGER,
    	    wfIpxDestNextHopHostAddress
    		OCTET STRING,
    	    wfIpxDestNextHopNetNum
    		OCTET STRING,
    	    wfIpxDestAge
    		INTEGER
        }

    wfIpxDestSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxDestEntry 1 }

    wfIpxDestNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of this circuit, unique within the
                instance. This value corresponds to the IPX circuit
                identifier found in wfIpxCircIndex."
        ::= { wfIpxDestEntry 2 }

    wfIpxDestProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    local(2),
    		    rip(3),
    		    nlsp(4),
    		    static(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The routing protocol from which knowledge of this
                destination was obtained."
        DEFVAL	{ other }
        ::= { wfIpxDestEntry 3 }

    wfIpxDestTicks OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The delay in ticks to reach this destination."
        ::= { wfIpxDestEntry 4 }

    wfIpxDestHopCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of hops necessary to reach the destination."
        ::= { wfIpxDestEntry 5 }

    wfIpxDestNextHopCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the IPX circuit used to reach
                the next hop."
        ::= { wfIpxDestEntry 6 }

    wfIpxDestNextHopHostAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Host address of the Next Hop."
        ::= { wfIpxDestEntry 7 }

    wfIpxDestNextHopNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IPX network number of the next hop."
        ::= { wfIpxDestEntry 8 }

    wfIpxDestAge OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current age of this entry, in seconds. Local,
                Static, and NLSP destinations are not aged."
        ::= { wfIpxDestEntry 9 }

    wfIpxUserStaticRouteEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxUserStaticRouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Wellfleet IPX Static Route Table"
        ::= { wfIpxGroup 19 }

    wfIpxUserStaticRouteEntry OBJECT-TYPE
        SYNTAX	WfIpxUserStaticRouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Static Routes table contains information about all
                destinations reached via user statically configured routes."
        INDEX	{ wfIpxUserStaticRouteSysInstance,
    		  wfIpxUserStaticRouteCircIndex,
    		  wfIpxUserStaticRouteNetNum }
        ::= { wfIpxUserStaticRouteEntryTable 1 }

    WfIpxUserStaticRouteEntry ::= SEQUENCE {
    	    wfIpxUserStaticRouteDelete
    		INTEGER,
    	    wfIpxUserStaticRouteDisable
    		INTEGER,
    	    wfIpxUserStaticRouteSysInstance
    		INTEGER,
    	    wfIpxUserStaticRouteCircIndex
    		INTEGER,
    	    wfIpxUserStaticRouteNetNum
    		OCTET STRING,
    	    wfIpxUserStaticRouteTicks
    		INTEGER,
    	    wfIpxUserStaticRouteHopCount
    		INTEGER,
    	    wfIpxUserStaticRouteNextHopHostAddress
    		OCTET STRING
        }

    wfIpxUserStaticRouteDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete this entry."
        DEFVAL	{ created }
        ::= { wfIpxUserStaticRouteEntry 1 }

    wfIpxUserStaticRouteDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an entry."
        DEFVAL	{ enabled }
        ::= { wfIpxUserStaticRouteEntry 2 }

    wfIpxUserStaticRouteSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxUserStaticRouteEntry 3 }

    wfIpxUserStaticRouteCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of this circuit, unique within the
                instance of RIP. This value corresponds to the IPX circuit
                identifier found in wfIpxCircIndex."
        ::= { wfIpxUserStaticRouteEntry 4 }

    wfIpxUserStaticRouteNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network number of this static route."
        ::= { wfIpxUserStaticRouteEntry 5 }

    wfIpxUserStaticRouteTicks OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The cost in ticks of this static route entry."
        ::= { wfIpxUserStaticRouteEntry 6 }

    wfIpxUserStaticRouteHopCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The hop count to this static route."
        ::= { wfIpxUserStaticRouteEntry 7 }

    wfIpxUserStaticRouteNextHopHostAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The next hop host address of this entry"
        ::= { wfIpxUserStaticRouteEntry 8 }

    wfIpxAutoStaticRouteEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxAutoStaticRouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Wellfleet IPX Automatic Static Route Table"
        ::= { wfIpxGroup 20 }

    wfIpxAutoStaticRouteEntry OBJECT-TYPE
        SYNTAX	WfIpxAutoStaticRouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Auto Static Routes table contains information about all
                destinations reached via Auto statically configured routes."
        INDEX	{ wfIpxAutoStaticRouteSysInstance,
    		  wfIpxAutoStaticRouteCircIndex,
    		  wfIpxAutoStaticRouteNetNum }
        ::= { wfIpxAutoStaticRouteEntryTable 1 }

    WfIpxAutoStaticRouteEntry ::= SEQUENCE {
    	    wfIpxAutoStaticRouteDelete
    		INTEGER,
    	    wfIpxAutoStaticRouteDisable
    		INTEGER,
    	    wfIpxAutoStaticRouteSysInstance
    		INTEGER,
    	    wfIpxAutoStaticRouteCircIndex
    		INTEGER,
    	    wfIpxAutoStaticRouteNetNum
    		OCTET STRING,
    	    wfIpxAutoStaticRouteTicks
    		INTEGER,
    	    wfIpxAutoStaticRouteHopCount
    		INTEGER,
    	    wfIpxAutoStaticRouteNextHopHostAddress
    		OCTET STRING
        }

    wfIpxAutoStaticRouteDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete this entry."
        DEFVAL	{ created }
        ::= { wfIpxAutoStaticRouteEntry 1 }

    wfIpxAutoStaticRouteDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an entry."
        DEFVAL	{ enabled }
        ::= { wfIpxAutoStaticRouteEntry 2 }

    wfIpxAutoStaticRouteSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxAutoStaticRouteEntry 3 }

    wfIpxAutoStaticRouteCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of this circuit, unique within the
                instance of RIP. This value corresponds to the IPX circuit
                identifier found in wfIpxCircIndex."
        ::= { wfIpxAutoStaticRouteEntry 4 }

    wfIpxAutoStaticRouteNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network number of this static route."
        ::= { wfIpxAutoStaticRouteEntry 5 }

    wfIpxAutoStaticRouteTicks OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The cost in ticks of this static route entry."
        ::= { wfIpxAutoStaticRouteEntry 6 }

    wfIpxAutoStaticRouteHopCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The hop count to this static route."
        ::= { wfIpxAutoStaticRouteEntry 7 }

    wfIpxAutoStaticRouteNextHopHostAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The next hop host address of this entry"
        ::= { wfIpxAutoStaticRouteEntry 8 }

    wfIpxStaticRouteMaskEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxStaticRouteMaskEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Wellfleet IPX Static Route Mask Table"
        ::= { wfIpxGroup 21 }

    wfIpxStaticRouteMaskEntry OBJECT-TYPE
        SYNTAX	WfIpxStaticRouteMaskEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The static route mask table only allows auto static route
                entries to be made when the net fits the netmask."
        INDEX	{ wfIpxStaticRouteMaskSysInstance,
    		  wfIpxStaticRouteMaskCircIndex,
    		  wfIpxStaticRouteMaskNetwork,
    		  wfIpxStaticRouteMaskNetworkMask }
        ::= { wfIpxStaticRouteMaskEntryTable 1 }

    WfIpxStaticRouteMaskEntry ::= SEQUENCE {
    	    wfIpxStaticRouteMaskDelete
    		INTEGER,
    	    wfIpxStaticRouteMaskDisable
    		INTEGER,
    	    wfIpxStaticRouteMaskSysInstance
    		INTEGER,
    	    wfIpxStaticRouteMaskCircIndex
    		INTEGER,
    	    wfIpxStaticRouteMaskNetwork
    		OCTET STRING,
    	    wfIpxStaticRouteMaskNetworkMask
    		OCTET STRING
        }

    wfIpxStaticRouteMaskDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete this entry."
        DEFVAL	{ created }
        ::= { wfIpxStaticRouteMaskEntry 1 }

    wfIpxStaticRouteMaskDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an entry."
        DEFVAL	{ enabled }
        ::= { wfIpxStaticRouteMaskEntry 2 }

    wfIpxStaticRouteMaskSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxStaticRouteMaskEntry 3 }

    wfIpxStaticRouteMaskCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of this circuit, unique within the
                instance of RIP. This value corresponds to the IPX circuit
                identifier found in wfIpxCircIndex."
        ::= { wfIpxStaticRouteMaskEntry 4 }

    wfIpxStaticRouteMaskNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network"
        ::= { wfIpxStaticRouteMaskEntry 5 }

    wfIpxStaticRouteMaskNetworkMask OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network mask."
        ::= { wfIpxStaticRouteMaskEntry 6 }

    wfIpxServEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxServEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Wellfleet IPX service Table"
        ::= { wfIpxGroup 22 }

    wfIpxServEntry OBJECT-TYPE
        SYNTAX	WfIpxServEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table of services, indexed by type and name.
                NOTE: In the instance id wfIpxServName is
                      prefixed by the service name's length."
        INDEX	{ wfIpxServSysInstance,
    		  wfIpxServType,
    		  wfIpxServName }
        ::= { wfIpxServEntryTable 1 }

    WfIpxServEntry ::= SEQUENCE {
    	    wfIpxServSysInstance
    		INTEGER,
    	    wfIpxServType
    		OCTET STRING,
    	    wfIpxServName
    		DisplayString,
    	    wfIpxServProtocol
    		INTEGER,
    	    wfIpxServNetNum
    		OCTET STRING,
    	    wfIpxServNode
    		OCTET STRING,
    	    wfIpxServSocket
    		OCTET STRING,
    	    wfIpxServHopCount
    		INTEGER,
    	    wfIpxServNextHopCircIndex
    		INTEGER,
    	    wfIpxServNextHopHostAddress
    		OCTET STRING,
    	    wfIpxServNextHopNetNum
    		OCTET STRING,
    	    wfIpxServAge
    		INTEGER
        }

    wfIpxServSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxServEntry 1 }

    wfIpxServType OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Service type."
        ::= { wfIpxServEntry 2 }

    wfIpxServName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Service name.
                NOTE: This is a variable length field, 2-47 chars."
        ::= { wfIpxServEntry 3 }

    wfIpxServProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    local(2),
    		    nlsp(4),
    		    static(5),
    		    sap(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The protocol from which knowledge of service was
                obtained."
        DEFVAL	{ other }
        ::= { wfIpxServEntry 4 }

    wfIpxServNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IPX network number portion of the IPX address of the
                service."
        ::= { wfIpxServEntry 5 }

    wfIpxServNode OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The node portion of the IPX address of the service."
        ::= { wfIpxServEntry 6 }

    wfIpxServSocket OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The socket portion of the IPX address of the service."
        ::= { wfIpxServEntry 7 }

    wfIpxServHopCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of hops to the service."
        ::= { wfIpxServEntry 8 }

    wfIpxServNextHopCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the IPX circuit used to reach
                the next hop."
        ::= { wfIpxServEntry 9 }

    wfIpxServNextHopHostAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Host address of the Next Hop."
        ::= { wfIpxServEntry 10 }

    wfIpxServNextHopNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IPX network number of the next hop."
        ::= { wfIpxServEntry 11 }

    wfIpxServAge OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current age of this entry, in seconds. Local,
                Static, and NLSP services are not aged."
        ::= { wfIpxServEntry 12 }

    wfIpxUserStaticServEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxUserStaticServEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Wellfleet IPX User Static Service Table"
        ::= { wfIpxGroup 23 }

    wfIpxUserStaticServEntry OBJECT-TYPE
        SYNTAX	WfIpxUserStaticServEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Static Servs table contains information about all
                destinations reached via user statically configured Servs.
                NOTE: In the instance id wfIpxUserStaticServName is
                      prefixed by the service name's length."
        INDEX	{ wfIpxUserStaticServSysInstance,
    		  wfIpxUserStaticServCircIndex,
    		  wfIpxUserStaticServName,
    		  wfIpxUserStaticServType }
        ::= { wfIpxUserStaticServEntryTable 1 }

    WfIpxUserStaticServEntry ::= SEQUENCE {
    	    wfIpxUserStaticServDelete
    		INTEGER,
    	    wfIpxUserStaticServDisable
    		INTEGER,
    	    wfIpxUserStaticServSysInstance
    		INTEGER,
    	    wfIpxUserStaticServCircIndex
    		INTEGER,
    	    wfIpxUserStaticServName
    		DisplayString,
    	    wfIpxUserStaticServType
    		OCTET STRING,
    	    wfIpxUserStaticServNetNum
    		OCTET STRING,
    	    wfIpxUserStaticServHostAddress
    		OCTET STRING,
    	    wfIpxUserStaticServSocket
    		OCTET STRING,
    	    wfIpxUserStaticServHopCount
    		INTEGER
        }

    wfIpxUserStaticServDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete this entry."
        DEFVAL	{ created }
        ::= { wfIpxUserStaticServEntry 1 }

    wfIpxUserStaticServDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an entry."
        DEFVAL	{ enabled }
        ::= { wfIpxUserStaticServEntry 2 }

    wfIpxUserStaticServSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxUserStaticServEntry 3 }

    wfIpxUserStaticServCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of this circuit, unique within the
                instance of RIP. This value corresponds to the IPX circuit
                identifier found in wfIpxCircIndex."
        ::= { wfIpxUserStaticServEntry 4 }

    wfIpxUserStaticServName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The service name.
                NOTE: This is a variable length field, 2-47 chars."
        ::= { wfIpxUserStaticServEntry 5 }

    wfIpxUserStaticServType OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (2))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The service type."
        ::= { wfIpxUserStaticServEntry 6 }

    wfIpxUserStaticServNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The network number of this static service."
        ::= { wfIpxUserStaticServEntry 7 }

    wfIpxUserStaticServHostAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The host address of this static service."
        ::= { wfIpxUserStaticServEntry 8 }

    wfIpxUserStaticServSocket OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The socket of this static service."
        ::= { wfIpxUserStaticServEntry 9 }

    wfIpxUserStaticServHopCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The hop count of this static service."
        DEFVAL	{ 1 }
        ::= { wfIpxUserStaticServEntry 10 }

    wfIpxAutoStaticServEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxAutoStaticServEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Wellfleet IPX Auto Static Service Table"
        ::= { wfIpxGroup 24 }

    wfIpxAutoStaticServEntry OBJECT-TYPE
        SYNTAX	WfIpxAutoStaticServEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Static Servs table contains information about all
                destinations reached via Auto statically configured Servs.
                NOTE: In the instance id wfIpxAutoStaticServName is
                      prefixed by the service name's length."
        INDEX	{ wfIpxAutoStaticServSysInstance,
    		  wfIpxAutoStaticServCircIndex,
    		  wfIpxAutoStaticServName,
    		  wfIpxAutoStaticServType }
        ::= { wfIpxAutoStaticServEntryTable 1 }

    WfIpxAutoStaticServEntry ::= SEQUENCE {
    	    wfIpxAutoStaticServDelete
    		INTEGER,
    	    wfIpxAutoStaticServDisable
    		INTEGER,
    	    wfIpxAutoStaticServSysInstance
    		INTEGER,
    	    wfIpxAutoStaticServCircIndex
    		INTEGER,
    	    wfIpxAutoStaticServName
    		DisplayString,
    	    wfIpxAutoStaticServType
    		OCTET STRING,
    	    wfIpxAutoStaticServNetNum
    		OCTET STRING,
    	    wfIpxAutoStaticServHostAddress
    		OCTET STRING,
    	    wfIpxAutoStaticServSocket
    		OCTET STRING,
    	    wfIpxAutoStaticServHopCount
    		INTEGER
        }

    wfIpxAutoStaticServDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Autos perform an SNMP SET operation on this
                object in order to create/delete this entry."
        DEFVAL	{ created }
        ::= { wfIpxAutoStaticServEntry 1 }

    wfIpxAutoStaticServDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Autos perform an SNMP SET operation on this
                object in order to enable/disable an entry."
        DEFVAL	{ enabled }
        ::= { wfIpxAutoStaticServEntry 2 }

    wfIpxAutoStaticServSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxAutoStaticServEntry 3 }

    wfIpxAutoStaticServCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of this circuit, unique within the
                instance of RIP. This value corresponds to the IPX circuit
                identifier found in wfIpxCircIndex."
        ::= { wfIpxAutoStaticServEntry 4 }

    wfIpxAutoStaticServName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The service name.
                NOTE: This is a variable length field, 2-47 chars."
        ::= { wfIpxAutoStaticServEntry 5 }

    wfIpxAutoStaticServType OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The service type."
        ::= { wfIpxAutoStaticServEntry 6 }

    wfIpxAutoStaticServNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network number of this static service."
        ::= { wfIpxAutoStaticServEntry 7 }

    wfIpxAutoStaticServHostAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The host address of this static service."
        ::= { wfIpxAutoStaticServEntry 8 }

    wfIpxAutoStaticServSocket OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The socket of this static service."
        ::= { wfIpxAutoStaticServEntry 9 }

    wfIpxAutoStaticServHopCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The hop count of this static service."
        DEFVAL	{ 1 }
        ::= { wfIpxAutoStaticServEntry 10 }

    wfIpxStaticServMaskEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxStaticServMaskEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Wellfleet IPX Static Service Mask Table"
        ::= { wfIpxGroup 25 }

    wfIpxStaticServMaskEntry OBJECT-TYPE
        SYNTAX	WfIpxStaticServMaskEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Static Servs table contains information about all
                destinations reached via Auto statically configured Servs."
        INDEX	{ wfIpxStaticServMaskSysInstance,
    		  wfIpxStaticServMaskCircIndex,
    		  wfIpxStaticServMaskNetwork,
    		  wfIpxStaticServMaskNetworkMask }
        ::= { wfIpxStaticServMaskEntryTable 1 }

    WfIpxStaticServMaskEntry ::= SEQUENCE {
    	    wfIpxStaticServMaskDelete
    		INTEGER,
    	    wfIpxStaticServMaskDisable
    		INTEGER,
    	    wfIpxStaticServMaskSysInstance
    		INTEGER,
    	    wfIpxStaticServMaskCircIndex
    		INTEGER,
    	    wfIpxStaticServMaskNetwork
    		OCTET STRING,
    	    wfIpxStaticServMaskNetworkMask
    		OCTET STRING
        }

    wfIpxStaticServMaskDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete this entry."
        DEFVAL	{ created }
        ::= { wfIpxStaticServMaskEntry 1 }

    wfIpxStaticServMaskDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an entry."
        DEFVAL	{ enabled }
        ::= { wfIpxStaticServMaskEntry 2 }

    wfIpxStaticServMaskSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxStaticServMaskEntry 3 }

    wfIpxStaticServMaskCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of this circuit, unique within the
                instance of RIP. This value corresponds to the IPX circuit
                identifier found in wfIpxCircIndex."
        ::= { wfIpxStaticServMaskEntry 4 }

    wfIpxStaticServMaskNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network"
        ::= { wfIpxStaticServMaskEntry 5 }

    wfIpxStaticServMaskNetworkMask OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network mask."
        ::= { wfIpxStaticServMaskEntry 6 }

    wfIpxStaticHostEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxStaticHostEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Wellfleet IPX Static Host Table"
        ::= { wfIpxGroup 26 }

    wfIpxStaticHostEntry OBJECT-TYPE
        SYNTAX	WfIpxStaticHostEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The static host entries define mappings from circindex
                and host address to wan physical layer address."
        INDEX	{ wfIpxStaticHostSysInstance,
    		  wfIpxStaticHostCircIndex,
    		  wfIpxStaticHostAddress }
        ::= { wfIpxStaticHostEntryTable 1 }

    WfIpxStaticHostEntry ::= SEQUENCE {
    	    wfIpxStaticHostDelete
    		INTEGER,
    	    wfIpxStaticHostDisable
    		INTEGER,
    	    wfIpxStaticHostSysInstance
    		INTEGER,
    	    wfIpxStaticHostCircIndex
    		INTEGER,
    	    wfIpxStaticHostAddress
    		OCTET STRING,
    	    wfIpxStaticHostWanAddress
    		OCTET STRING
        }

    wfIpxStaticHostDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete this entry."
        DEFVAL	{ created }
        ::= { wfIpxStaticHostEntry 1 }

    wfIpxStaticHostDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an entry."
        DEFVAL	{ enabled }
        ::= { wfIpxStaticHostEntry 2 }

    wfIpxStaticHostSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxStaticHostEntry 3 }

    wfIpxStaticHostCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of this circuit, unique within the
                instance of RIP. This value corresponds to the IPX circuit
                identifier found in wfIpxCircIndex."
        ::= { wfIpxStaticHostEntry 4 }

    wfIpxStaticHostAddress OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The host address of this static host."
        ::= { wfIpxStaticHostEntry 5 }

    wfIpxStaticHostWanAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The wan address of this host."
        ::= { wfIpxStaticHostEntry 6 }

    wfIpxUserStaticNETBIOSTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxUserStaticNETBIOSEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Wellfleet IPX User Static NetBIOS Route Table"
        ::= { wfIpxGroup 27 }

    wfIpxUserStaticNETBIOSEntry OBJECT-TYPE
        SYNTAX	WfIpxUserStaticNETBIOSEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Contains entries that map NetBIOS names to destination addresses."
        INDEX	{ wfIpxUserStaticNETBIOSSysInstance,
    		  wfIpxUserStaticNETBIOSName }
        ::= { wfIpxUserStaticNETBIOSTable 1 }

    WfIpxUserStaticNETBIOSEntry ::= SEQUENCE {
    	    wfIpxUserStaticNETBIOSDelete
    		INTEGER,
    	    wfIpxUserStaticNETBIOSDisable
    		INTEGER,
    	    wfIpxUserStaticNETBIOSSysInstance
    		INTEGER,
    	    wfIpxUserStaticNETBIOSName
    		DisplayString,
    	    wfIpxUserStaticNETBIOSDestNetwork
    		OCTET STRING
        }

    wfIpxUserStaticNETBIOSDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete this entry."
        DEFVAL	{ created }
        ::= { wfIpxUserStaticNETBIOSEntry 1 }

    wfIpxUserStaticNETBIOSDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an entry."
        DEFVAL	{ enabled }
        ::= { wfIpxUserStaticNETBIOSEntry 2 }

    wfIpxUserStaticNETBIOSSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxUserStaticNETBIOSEntry 3 }

    wfIpxUserStaticNETBIOSName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The destination name for this NetBIOS static route."
        ::= { wfIpxUserStaticNETBIOSEntry 4 }

    wfIpxUserStaticNETBIOSDestNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The destination network for this NetBIOS static route."
        ::= { wfIpxUserStaticNETBIOSEntry 5 }

    wfIpxAutoStaticNETBIOSTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxAutoStaticNETBIOSEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Wellfleet IPX Auto Static NetBIOS Route Table"
        ::= { wfIpxGroup 28 }

    wfIpxAutoStaticNETBIOSEntry OBJECT-TYPE
        SYNTAX	WfIpxAutoStaticNETBIOSEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Contains entries that map NetBIOS names to destination addresses."
        INDEX	{ wfIpxAutoStaticNETBIOSSysInstance,
    		  wfIpxAutoStaticNETBIOSDestNetwork }
        ::= { wfIpxAutoStaticNETBIOSTable 1 }

    WfIpxAutoStaticNETBIOSEntry ::= SEQUENCE {
    	    wfIpxAutoStaticNETBIOSDelete
    		INTEGER,
    	    wfIpxAutoStaticNETBIOSDisable
    		INTEGER,
    	    wfIpxAutoStaticNETBIOSSysInstance
    		INTEGER,
    	    wfIpxAutoStaticNETBIOSDestNetwork
    		OCTET STRING,
    	    wfIpxAutoStaticNETBIOSName
    		DisplayString
        }

    wfIpxAutoStaticNETBIOSDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete this entry."
        DEFVAL	{ created }
        ::= { wfIpxAutoStaticNETBIOSEntry 1 }

    wfIpxAutoStaticNETBIOSDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an entry."
        DEFVAL	{ enabled }
        ::= { wfIpxAutoStaticNETBIOSEntry 2 }

    wfIpxAutoStaticNETBIOSSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxAutoStaticNETBIOSEntry 3 }

    wfIpxAutoStaticNETBIOSDestNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The destination network for this NetBIOS static route."
        ::= { wfIpxAutoStaticNETBIOSEntry 4 }

    wfIpxAutoStaticNETBIOSName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The destination name for this NetBIOS static route."
        ::= { wfIpxAutoStaticNETBIOSEntry 5 }

    wfIpxRouteFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxRouteFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Wellfleet IPX Route Filter Table"
        ::= { wfIpxGroup 29 }

    wfIpxRouteFilterEntry OBJECT-TYPE
        SYNTAX	WfIpxRouteFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Each entry corresponds to one filter."
        INDEX	{ wfIpxRouteFilterSysInstance,
    		  wfIpxRouteFilterCircIndex,
    		  wfIpxRouteFilterRuleNumber }
        ::= { wfIpxRouteFilterTable 1 }

    WfIpxRouteFilterEntry ::= SEQUENCE {
    	    wfIpxRouteFilterDelete
    		INTEGER,
    	    wfIpxRouteFilterDisable
    		INTEGER,
    	    wfIpxRouteFilterSysInstance
    		INTEGER,
    	    wfIpxRouteFilterCircIndex
    		INTEGER,
    	    wfIpxRouteFilterRuleNumber
    		INTEGER,
    	    wfIpxRouteFilterNetwork
    		OCTET STRING,
    	    wfIpxRouteFilterNetworkMask
    		OCTET STRING,
    	    wfIpxRouteFilterMode
    		INTEGER,
    	    wfIpxRouteFilterAction
    		INTEGER,
    	    wfIpxRouteFilterProtocol
    		INTEGER,
    	    wfIpxRouteFilterCost
    		INTEGER,
    	    wfIpxRouteFilterCounter
    		Counter,
    	    wfIpxRouteFilterPriority
    		INTEGER
        }

    wfIpxRouteFilterDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete this entry."
        DEFVAL	{ created }
        ::= { wfIpxRouteFilterEntry 1 }

    wfIpxRouteFilterDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an entry."
        DEFVAL	{ enabled }
        ::= { wfIpxRouteFilterEntry 2 }

    wfIpxRouteFilterSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxRouteFilterEntry 3 }

    wfIpxRouteFilterCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of this circuit, unique within the
                instance of IPX. This value corresponds to the IPX circuit
                identifier found in wfIpxCircIndex."
        ::= { wfIpxRouteFilterEntry 4 }

    wfIpxRouteFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of the filter, unique within the
                IPX circuit."
        ::= { wfIpxRouteFilterEntry 5 }

    wfIpxRouteFilterNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The network"
        ::= { wfIpxRouteFilterEntry 6 }

    wfIpxRouteFilterNetworkMask OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The network mask"
        ::= { wfIpxRouteFilterEntry 7 }

    wfIpxRouteFilterMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    outbound(1),
    		    inbound(2),
    		    both(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The mode for filtering, Inbound, Outbound, or Both."
        DEFVAL	{ outbound }
        ::= { wfIpxRouteFilterEntry 8 }

    wfIpxRouteFilterAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    advertise(1),
    		    surpress(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The action for the filter."
        DEFVAL	{ advertise }
        ::= { wfIpxRouteFilterEntry 9 }

    wfIpxRouteFilterProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    any(1),
    		    local(2),
    		    rip(3),
    		    nlsp(4),
    		    static(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Apply this filter only to routes learned on protocol X when
                sending RIP updates. Does not apply to Inbound routes. A value
                of 1 (default) represents any protocol."
        DEFVAL	{ any }
        ::= { wfIpxRouteFilterEntry 10 }

    wfIpxRouteFilterCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Cost for routes matching this filter. A Zero cost indicates
                that the route's actual cost should be used. Value only used
                when action is Advertise."
        ::= { wfIpxRouteFilterEntry 11 }

    wfIpxRouteFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of packets matching this filter."
        ::= { wfIpxRouteFilterEntry 12 }

    wfIpxRouteFilterPriority OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Priority of this filter in relation to other filters of the
                same type."
        ::= { wfIpxRouteFilterEntry 13 }

    wfIpxServNetFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxServNetFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Wellfleet IPX Service Net Filter Table"
        ::= { wfIpxGroup 30 }

    wfIpxServNetFilterEntry OBJECT-TYPE
        SYNTAX	WfIpxServNetFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Each entry corresponds to one service filter."
        INDEX	{ wfIpxServNetFilterSysInstance,
    		  wfIpxServNetFilterCircIndex,
    		  wfIpxServNetFilterRuleNumber }
        ::= { wfIpxServNetFilterTable 1 }

    WfIpxServNetFilterEntry ::= SEQUENCE {
    	    wfIpxServNetFilterDelete
    		INTEGER,
    	    wfIpxServNetFilterDisable
    		INTEGER,
    	    wfIpxServNetFilterSysInstance
    		INTEGER,
    	    wfIpxServNetFilterCircIndex
    		INTEGER,
    	    wfIpxServNetFilterRuleNumber
    		INTEGER,
    	    wfIpxServNetFilterNetwork
    		OCTET STRING,
    	    wfIpxServNetFilterNetworkMask
    		OCTET STRING,
    	    wfIpxServNetFilterType
    		OCTET STRING,
    	    wfIpxServNetFilterMode
    		INTEGER,
    	    wfIpxServNetFilterAction
    		INTEGER,
    	    wfIpxServNetFilterProtocol
    		INTEGER,
    	    wfIpxServNetFilterCost
    		INTEGER,
    	    wfIpxServNetFilterCounter
    		Counter,
    	    wfIpxServNetFilterPriority
    		INTEGER
        }

    wfIpxServNetFilterDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete this entry."
        DEFVAL	{ created }
        ::= { wfIpxServNetFilterEntry 1 }

    wfIpxServNetFilterDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an entry."
        DEFVAL	{ enabled }
        ::= { wfIpxServNetFilterEntry 2 }

    wfIpxServNetFilterSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxServNetFilterEntry 3 }

    wfIpxServNetFilterCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of this circuit, unique within the
                instance of RIP. This value corresponds to the IPX circuit
                identifier found in wfIpxCircIndex."
        ::= { wfIpxServNetFilterEntry 4 }

    wfIpxServNetFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of the filter, unique within the
                IPX circuit."
        ::= { wfIpxServNetFilterEntry 5 }

    wfIpxServNetFilterNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The network."
        ::= { wfIpxServNetFilterEntry 6 }

    wfIpxServNetFilterNetworkMask OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The network mask."
        ::= { wfIpxServNetFilterEntry 7 }

    wfIpxServNetFilterType OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The service type."
        ::= { wfIpxServNetFilterEntry 8 }

    wfIpxServNetFilterMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    outbound(1),
    		    inbound(2),
    		    both(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The mode for filtering, Inbound, Outbound, or Both."
        DEFVAL	{ outbound }
        ::= { wfIpxServNetFilterEntry 9 }

    wfIpxServNetFilterAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    advertise(1),
    		    surpress(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The action for the filter."
        DEFVAL	{ advertise }
        ::= { wfIpxServNetFilterEntry 10 }

    wfIpxServNetFilterProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    any(1),
    		    local(2),
    		    nlsp(4),
    		    static(5),
    		    sap(6)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Apply this filter only to services learned on protocol X when
                sending SAP updates. Does not apply to Inbound services. A value
                of 1 (default) represents any protocol."
        DEFVAL	{ any }
        ::= { wfIpxServNetFilterEntry 11 }

    wfIpxServNetFilterCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Cost for services matching this filter. A Zero cost indicates
                that the service's actual cost should be used. Value only used
                when action is Advertise."
        ::= { wfIpxServNetFilterEntry 12 }

    wfIpxServNetFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of packets matching this filter."
        ::= { wfIpxServNetFilterEntry 13 }

    wfIpxServNetFilterPriority OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Priority of this filter in relation to other filters of the
                same type."
        ::= { wfIpxServNetFilterEntry 14 }

    wfIpxServNameFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxServNameFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Wellfleet IPX Service Name Filter Table"
        ::= { wfIpxGroup 31 }

    wfIpxServNameFilterEntry OBJECT-TYPE
        SYNTAX	WfIpxServNameFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Each entry corresponds to one service filter.
                NOTE: In the instance id wfIpxServNameFilterName is
                      prefixed by the service name's length."
        INDEX	{ wfIpxServNameFilterSysInstance,
    		  wfIpxServNameFilterCircIndex,
    		  wfIpxServNameFilterRuleNumber }
        ::= { wfIpxServNameFilterTable 1 }

    WfIpxServNameFilterEntry ::= SEQUENCE {
    	    wfIpxServNameFilterDelete
    		INTEGER,
    	    wfIpxServNameFilterDisable
    		INTEGER,
    	    wfIpxServNameFilterSysInstance
    		INTEGER,
    	    wfIpxServNameFilterCircIndex
    		INTEGER,
    	    wfIpxServNameFilterRuleNumber
    		INTEGER,
    	    wfIpxServNameFilterName
    		DisplayString,
    	    wfIpxServNameFilterType
    		OCTET STRING,
    	    wfIpxServNameFilterMode
    		INTEGER,
    	    wfIpxServNameFilterAction
    		INTEGER,
    	    wfIpxServNameFilterProtocol
    		INTEGER,
    	    wfIpxServNameFilterCost
    		INTEGER,
    	    wfIpxServNameFilterCounter
    		Counter,
    	    wfIpxServNameFilterPriority
    		INTEGER
        }

    wfIpxServNameFilterDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete this entry."
        DEFVAL	{ created }
        ::= { wfIpxServNameFilterEntry 1 }

    wfIpxServNameFilterDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an entry."
        DEFVAL	{ enabled }
        ::= { wfIpxServNameFilterEntry 2 }

    wfIpxServNameFilterSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxServNameFilterEntry 3 }

    wfIpxServNameFilterCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of this circuit, unique within the
                instance of RIP. This value corresponds to the IPX circuit
                identifier found in wfIpxCircIndex."
        ::= { wfIpxServNameFilterEntry 4 }

    wfIpxServNameFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of the filter, unique within the
                IPX circuit."
        ::= { wfIpxServNameFilterEntry 5 }

    wfIpxServNameFilterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The name of the service to be filtered.
                NOTE: This is a variable length field, 2-47 chars.
                      This field may be a regex matching pattern."
        ::= { wfIpxServNameFilterEntry 6 }

    wfIpxServNameFilterType OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The type of the service to be filtered."
        ::= { wfIpxServNameFilterEntry 7 }

    wfIpxServNameFilterMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    outbound(1),
    		    inbound(2),
    		    both(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The mode for filtering, Inbound, Outbound, or Both."
        DEFVAL	{ outbound }
        ::= { wfIpxServNameFilterEntry 8 }

    wfIpxServNameFilterAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    advertise(1),
    		    surpress(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The action for the filter."
        DEFVAL	{ advertise }
        ::= { wfIpxServNameFilterEntry 9 }

    wfIpxServNameFilterProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    any(1),
    		    local(2),
    		    nlsp(4),
    		    static(5),
    		    sap(6)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Apply this filter only to services learned on protocol X when
                sending SAP updates. Does not apply to Inbound services. A value
                of 1 (default) represents any protocol."
        DEFVAL	{ any }
        ::= { wfIpxServNameFilterEntry 10 }

    wfIpxServNameFilterCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Cost for services matching this filter. A Zero cost indicates
                that the service's actual cost should be used. Value only used
                when action is Advertise."
        ::= { wfIpxServNameFilterEntry 11 }

    wfIpxServNameFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of packets matching this filter."
        ::= { wfIpxServNameFilterEntry 12 }

    wfIpxServNameFilterPriority OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Priority of this filter in relation to other filters of the
                same type."
        ::= { wfIpxServNameFilterEntry 13 }

    wfIpxRipCircTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxRipCircEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "IPX RIP Circuit MIB"
        ::= { wfIpxGroup 32 }

    wfIpxRipCircEntry OBJECT-TYPE
        SYNTAX	WfIpxRipCircEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the IPX RIP circuit table"
        INDEX	{ wfIpxRipCircSysInstance,
    		  wfIpxRipCircIndex }
        ::= { wfIpxRipCircTable 1 }

    WfIpxRipCircEntry ::= SEQUENCE {
    	    wfIpxRipCircDelete
    		INTEGER,
    	    wfIpxRipCircDisable
    		INTEGER,
    	    wfIpxRipCircState
    		INTEGER,
    	    wfIpxRipCircSysInstance
    		INTEGER,
    	    wfIpxRipCircIndex
    		INTEGER,
    	    wfIpxRipCircMode
    		INTEGER,
    	    wfIpxRipCircPace
    		INTEGER,
    	    wfIpxRipCircUpdate
    		INTEGER,
    	    wfIpxRipCircAgeMultiplier
    		INTEGER,
    	    wfIpxRipCircPacketSize
    		INTEGER,
    	    wfIpxRipCircOutPackets
    		Counter,
    	    wfIpxRipCircInPackets
    		Counter,
    	    wfIpxRipCircBadPackets
    		Counter,
    	    wfIpxRipCircUseMulticast
    		INTEGER,
    	    wfIpxRipCircSplitHorizon
    		INTEGER,
    	    wfIpxRipCircGenAutoStaticRoutes
    		INTEGER,
    	    wfIpxRipCircImmedUpdate
    		INTEGER,
    	    wfIpxRipCircDefaultRouteSupply
    		INTEGER,
    	    wfIpxRipCircDefaultRouteListen
    		INTEGER
        }

    wfIpxRipCircDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete this entry."
        DEFVAL	{ created }
        ::= { wfIpxRipCircEntry 1 }

    wfIpxRipCircDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an entry."
        DEFVAL	{ enabled }
        ::= { wfIpxRipCircEntry 2 }

    wfIpxRipCircState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of this entry"
        DEFVAL	{ notpresent }
        ::= { wfIpxRipCircEntry 3 }

    wfIpxRipCircSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxRipCircEntry 4 }

    wfIpxRipCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of this circuit, unique within the
                instance of RIP. This value corresponds to the IPX circuit
                identifier found in wfIpxCircIndex."
        ::= { wfIpxRipCircEntry 5 }

    wfIpxRipCircMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    standard(1),
    		    listen(2),
    		    supply(3),
    		    auto(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Whether this RIP entry is in mode."
        DEFVAL	{ standard }
        ::= { wfIpxRipCircEntry 6 }

    wfIpxRipCircPace OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum pace, in packets/second, at which RIP
                packets may be sent on this circuit."
        DEFVAL	{ 18 }
        ::= { wfIpxRipCircEntry 7 }

    wfIpxRipCircUpdate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The RIP periodic update interval, in seconds"
        DEFVAL	{ 60 }
        ::= { wfIpxRipCircEntry 8 }

    wfIpxRipCircAgeMultiplier OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The holding multiplier for information received in
                RIP periodic updates."
        DEFVAL	{ 3 }
        ::= { wfIpxRipCircEntry 9 }

    wfIpxRipCircPacketSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Maximum RIP packet size used on this circuit"
        DEFVAL	{ 432 }
        ::= { wfIpxRipCircEntry 10 }

    wfIpxRipCircOutPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of locally created RIP packets sent out
                this IPX RIP circuit."
        ::= { wfIpxRipCircEntry 11 }

    wfIpxRipCircInPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of RIP packets received on this IPX circuit,
                destined locally."
        ::= { wfIpxRipCircEntry 12 }

    wfIpxRipCircBadPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of bad RIP packets received on this
                IPX circuit."
        ::= { wfIpxRipCircEntry 13 }

    wfIpxRipCircUseMulticast OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Use multicast address to send RIP packets."
        DEFVAL	{ yes }
        ::= { wfIpxRipCircEntry 14 }

    wfIpxRipCircSplitHorizon OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable split horizon on this RIP circuit."
        DEFVAL	{ enabled }
        ::= { wfIpxRipCircEntry 15 }

    wfIpxRipCircGenAutoStaticRoutes OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tell IPX to generate entries in the wfIpxAutoStaticRouteTable."
        DEFVAL	{ no }
        ::= { wfIpxRipCircEntry 16 }

    wfIpxRipCircImmedUpdate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable RIP immediate
                update on this particular circuit."
        DEFVAL	{ enable }
        ::= { wfIpxRipCircEntry 17 }

    wfIpxRipCircDefaultRouteSupply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Advertise the default route, 0xFFFFFFFE, in RIP packets."
        DEFVAL	{ disable }
        ::= { wfIpxRipCircEntry 18 }

    wfIpxRipCircDefaultRouteListen OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Accept the default route, 0xFFFFFFFE, in RIP packets."
        DEFVAL	{ disable }
        ::= { wfIpxRipCircEntry 19 }

    wfIpxSapCircTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxSapCircEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "IPX SAP Circuit MIB"
        ::= { wfIpxGroup 33 }

    wfIpxSapCircEntry OBJECT-TYPE
        SYNTAX	WfIpxSapCircEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the IPX SAP circuit table"
        INDEX	{ wfIpxSapCircSysInstance,
    		  wfIpxSapCircIndex }
        ::= { wfIpxSapCircTable 1 }

    WfIpxSapCircEntry ::= SEQUENCE {
    	    wfIpxSapCircDelete
    		INTEGER,
    	    wfIpxSapCircDisable
    		INTEGER,
    	    wfIpxSapCircState
    		INTEGER,
    	    wfIpxSapCircSysInstance
    		INTEGER,
    	    wfIpxSapCircIndex
    		INTEGER,
    	    wfIpxSapCircMode
    		INTEGER,
    	    wfIpxSapCircPace
    		INTEGER,
    	    wfIpxSapCircUpdate
    		INTEGER,
    	    wfIpxSapCircAgeMultiplier
    		INTEGER,
    	    wfIpxSapCircPacketSize
    		INTEGER,
    	    wfIpxSapCircGetNearestServerReply
    		INTEGER,
    	    wfIpxSapCircNSQAlphabetical
    		INTEGER,
    	    wfIpxSapCircOutPackets
    		Counter,
    	    wfIpxSapCircInPackets
    		Counter,
    	    wfIpxSapCircBadPackets
    		Counter,
    	    wfIpxSapCircUseMulticast
    		INTEGER,
    	    wfIpxSapCircSplitHorizon
    		INTEGER,
    	    wfIpxSapCircGenAutoStaticServices
    		INTEGER,
    	    wfIpxSapCircImmedUpdate
    		INTEGER
        }

    wfIpxSapCircDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete this entry."
        DEFVAL	{ created }
        ::= { wfIpxSapCircEntry 1 }

    wfIpxSapCircDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an entry."
        DEFVAL	{ enabled }
        ::= { wfIpxSapCircEntry 2 }

    wfIpxSapCircState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of this entry"
        DEFVAL	{ notpresent }
        ::= { wfIpxSapCircEntry 3 }

    wfIpxSapCircSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxSapCircEntry 4 }

    wfIpxSapCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of this circuit, unique within the
                instance of SAP. This value corresponds to the IPX circuit
                identifier found in wfIpxCircIndex."
        ::= { wfIpxSapCircEntry 5 }

    wfIpxSapCircMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    standard(1),
    		    listen(2),
    		    supply(3),
    		    auto(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Whether this SAP entry is in mode."
        DEFVAL	{ standard }
        ::= { wfIpxSapCircEntry 6 }

    wfIpxSapCircPace OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum pace, in packets/second, at which SAP
                packets may be sent on this circuit."
        DEFVAL	{ 18 }
        ::= { wfIpxSapCircEntry 7 }

    wfIpxSapCircUpdate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The SAP periodic update interval, in seconds"
        DEFVAL	{ 60 }
        ::= { wfIpxSapCircEntry 8 }

    wfIpxSapCircAgeMultiplier OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The holding multiplier for information received in
                SAP periodic updates."
        DEFVAL	{ 3 }
        ::= { wfIpxSapCircEntry 9 }

    wfIpxSapCircPacketSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Maximum SAP packet size used on this circuit"
        DEFVAL	{ 480 }
        ::= { wfIpxSapCircEntry 10 }

    wfIpxSapCircGetNearestServerReply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable responding to GNS requests on this circuit."
        DEFVAL	{ yes }
        ::= { wfIpxSapCircEntry 11 }

    wfIpxSapCircNSQAlphabetical OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Respond to NSQ in Alphabetical order, ie. first-best server."
        DEFVAL	{ yes }
        ::= { wfIpxSapCircEntry 12 }

    wfIpxSapCircOutPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of locally created SAP packets sent out
                this IPX SAP circuit."
        ::= { wfIpxSapCircEntry 13 }

    wfIpxSapCircInPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of SAP packets received on this IPX circuit,
                destined locally."
        ::= { wfIpxSapCircEntry 14 }

    wfIpxSapCircBadPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of bad SAP packets received on this
                IPX circuit."
        ::= { wfIpxSapCircEntry 15 }

    wfIpxSapCircUseMulticast OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Use multicast address to send SAP packets."
        DEFVAL	{ yes }
        ::= { wfIpxSapCircEntry 16 }

    wfIpxSapCircSplitHorizon OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable split horizon on this SAP circuit."
        DEFVAL	{ enabled }
        ::= { wfIpxSapCircEntry 17 }

    wfIpxSapCircGenAutoStaticServices OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tell IPX to generate entries in the wfIpxAutoStaticServTable."
        DEFVAL	{ no }
        ::= { wfIpxSapCircEntry 18 }

    wfIpxSapCircImmedUpdate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable SAP immediate
                update on this particular circuit."
        DEFVAL	{ enable }
        ::= { wfIpxSapCircEntry 19 }

    wfIpxHostEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxHostEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "IPX Host table, contains information about all known hosts."
        ::= { wfIpxGroup 34 }

    wfIpxHostEntry OBJECT-TYPE
        SYNTAX	WfIpxHostEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Host table contains information about all known hosts."
        INDEX	{ wfIpxHostSysInstance,
    		  wfIpxHostNextHopCircIndex,
    		  wfIpxHostHostAddress }
        ::= { wfIpxHostEntryTable 1 }

    WfIpxHostEntry ::= SEQUENCE {
    	    wfIpxHostSysInstance
    		INTEGER,
    	    wfIpxHostNextHopCircIndex
    		INTEGER,
    	    wfIpxHostHostAddress
    		OCTET STRING,
    	    wfIpxHostNetNum
    		OCTET STRING,
    	    wfIpxHostWanAddress
    		OCTET STRING,
    	    wfIpxHostProtocol
    		INTEGER,
    	    wfIpxHostAge
    		INTEGER
        }

    wfIpxHostSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxHostEntry 1 }

    wfIpxHostNextHopCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the IPX circuit used to reach
                the host."
        ::= { wfIpxHostEntry 2 }

    wfIpxHostHostAddress OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Host address of the Host."
        ::= { wfIpxHostEntry 3 }

    wfIpxHostNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network number of this host."
        ::= { wfIpxHostEntry 4 }

    wfIpxHostWanAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Wan Physical address of this Host.
                NOTE: Only valid on WAN media where there is no
                      one-to-one mapping of host address to physical
                      address."
        ::= { wfIpxHostEntry 5 }

    wfIpxHostProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    local(2),
    		    dynamic(3),
    		    static(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The routing protocol from which knowledge of this
                host was obtained."
        DEFVAL	{ other }
        ::= { wfIpxHostEntry 6 }

    wfIpxHostAge OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current age of this entry, in seconds. Local and
                Static hosts are not aged."
        ::= { wfIpxHostEntry 7 }

    wfIpxForwardEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxForwardEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "IPX Forward table, contains information about
                all known forward entries."
        ::= { wfIpxGroup 35 }

    wfIpxForwardEntry OBJECT-TYPE
        SYNTAX	WfIpxForwardEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Forward table contains information about all
                known forward entries."
        INDEX	{ wfIpxForwardSysInstance,
    		  wfIpxForwardCircIndex,
    		  wfIpxForwardNetNum }
        ::= { wfIpxForwardEntryTable 1 }

    WfIpxForwardEntry ::= SEQUENCE {
    	    wfIpxForwardSysInstance
    		INTEGER,
    	    wfIpxForwardCircIndex
    		INTEGER,
    	    wfIpxForwardNetNum
    		OCTET STRING,
    	    wfIpxForwardType
    		INTEGER,
    	    wfIpxForwardProtocol
    		INTEGER,
    	    wfIpxForwardCount
    		Counter
        }

    wfIpxForwardSysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the instance of IPX
                to which this entry corresponds."
        ::= { wfIpxForwardEntry 1 }

    wfIpxForwardCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier of the IPX circuit forward table
                in which this forward entry resides."
        ::= { wfIpxForwardEntry 2 }

    wfIpxForwardNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network number of this forward entry."
        ::= { wfIpxForwardEntry 3 }

    wfIpxForwardType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    local(2),
    		    remote(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The type of this forward entry."
        DEFVAL	{ other }
        ::= { wfIpxForwardEntry 4 }

    wfIpxForwardProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    local(2),
    		    rip(3),
    		    nlsp(4),
    		    static(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The routing protocol from which knowledge of this
                forward was obtained."
        DEFVAL	{ other }
        ::= { wfIpxForwardEntry 5 }

    wfIpxForwardCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of equal cost paths for this forward entry."
        ::= { wfIpxForwardEntry 6 }

    wfIpxTrafficFilter2Table OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpxTrafficFilter2Entry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "IPX Traffic Filters"
        ::= { wfIpxGroup 36 }

    wfIpxTrafficFilter2Entry OBJECT-TYPE
        SYNTAX	WfIpxTrafficFilter2Entry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A traffic filter definition"
        INDEX	{ wfIpxTrafficFilter2SysInstance,
    		  wfIpxTrafficFilter2CircIndex,
    		  wfIpxTrafficFilter2RuleNumber,
    		  wfIpxTrafficFilter2Fragment }
        ::= { wfIpxTrafficFilter2Table 1 }

    WfIpxTrafficFilter2Entry ::= SEQUENCE {
    	    wfIpxTrafficFilter2Create
    		INTEGER,
    	    wfIpxTrafficFilter2Enable
    		INTEGER,
    	    wfIpxTrafficFilter2Status
    		INTEGER,
    	    wfIpxTrafficFilter2Counter
    		Counter,
    	    wfIpxTrafficFilter2Definition
    		Opaque,
    	    wfIpxTrafficFilter2Reserved
    		INTEGER,
    	    wfIpxTrafficFilter2SysInstance
    		INTEGER,
    	    wfIpxTrafficFilter2CircIndex
    		INTEGER,
    	    wfIpxTrafficFilter2RuleNumber
    		INTEGER,
    	    wfIpxTrafficFilter2Fragment
    		INTEGER,
    	    wfIpxTrafficFilter2Name
    		DisplayString
        }

    wfIpxTrafficFilter2Create OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the existence of the traffic filter rule:
                created - traffic filter exists
                delete - traffic filter does not exist and can be deleted."
        DEFVAL	{ created }
        ::= { wfIpxTrafficFilter2Entry 1 }

    wfIpxTrafficFilter2Enable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether or not the traffic filter rule should be used:
                enabled - activate the rule.
                disabled - inactivate the rule."
        DEFVAL	{ enabled }
        ::= { wfIpxTrafficFilter2Entry 2 }

    wfIpxTrafficFilter2Status OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    error(2),
    		    inactive(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines the current status of the traffic filter:
                inactive - the rule is not in use.
                active - the rule is being used.
                error - the application detected an error in the rule."
        DEFVAL	{ inactive }
        ::= { wfIpxTrafficFilter2Entry 3 }

    wfIpxTrafficFilter2Counter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets that have
                matched this rule."
        ::= { wfIpxTrafficFilter2Entry 4 }

    wfIpxTrafficFilter2Definition OBJECT-TYPE
        SYNTAX	Opaque
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The filter rule definition."
        ::= { wfIpxTrafficFilter2Entry 5 }

    wfIpxTrafficFilter2Reserved OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reserved field."
        ::= { wfIpxTrafficFilter2Entry 6 }

    wfIpxTrafficFilter2SysInstance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique identifier for the instance of IPX."
        ::= { wfIpxTrafficFilter2Entry 7 }

    wfIpxTrafficFilter2CircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of this IPX circuit. This
                value corresponds to the IPX circuit
                identifier found in wfIpxCircIndex."
        ::= { wfIpxTrafficFilter2Entry 8 }

    wfIpxTrafficFilter2RuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ID for the rule."
        ::= { wfIpxTrafficFilter2Entry 9 }

    wfIpxTrafficFilter2Fragment OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fragment number - for large rules."
        ::= { wfIpxTrafficFilter2Entry 10 }

    wfIpxTrafficFilter2Name OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Name of the rule number."
        ::= { wfIpxTrafficFilter2Entry 11 }

    END  -- Wellfleet-IPXA-MIB
-- @(#)WSCCS n/mibs-iredund.mib 1.1 8/30/95
Wellfleet-IREDUND-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:44:24 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfIRedundGroup
        FROM Wellfleet-COMMON-MIB;


    wfIRedundIfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIRedundIfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "WF_IREDUND_INTERFACE_TABLE - Interface REDUNDANCY

                This tabulates the interfaces within an interface redundancy group.
                All interfaces are indexed according to their physical slot and
                connector designation.  All interfaces in the same circuit act as
                redundant (hot stand-by) interfaces for that circuit.

                At any given time, one hot stand-by interface is chosen to be the
                active interface for a circuit.  The active interface is the only
                interface that is reading and writing data to/from the media."
        ::= { wfIRedundGroup 1 }

    wfIRedundIfEntry OBJECT-TYPE
        SYNTAX	WfIRedundIfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Redundant interface entries."
        INDEX	{ wfIRedundIfSlot,
    		  wfIRedundIfPort }
        ::= { wfIRedundIfTable 1 }

    WfIRedundIfEntry ::= SEQUENCE {
    	    wfIRedundIfDelete
    		INTEGER,
    	    wfIRedundIfDisable
    		INTEGER,
    	    wfIRedundIfCct
    		INTEGER,
    	    wfIRedundIfSlot
    		INTEGER,
    	    wfIRedundIfPort
    		INTEGER,
    	    wfIRedundIfPrimary
    		INTEGER,
    	    wfIRedundIfActive
    		INTEGER
        }

    wfIRedundIfDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Creation and deletion flag for this record. When set, it will cause
                this entry to be deleted from the MIB."
        DEFVAL	{ created }
        ::= { wfIRedundIfEntry 1 }

    wfIRedundIfDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. A disabled interface will never be selected
                as the active interface for a circuit."
        DEFVAL	{ enabled }
        ::= { wfIRedundIfEntry 2 }

    wfIRedundIfCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The circuit number of the circuit to which the interface belongs.
                This interface will either act as the active interface for the
                the circuit or as a hot stand-by."
        ::= { wfIRedundIfEntry 3 }

    wfIRedundIfSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot ID of the interface, used as instance ID"
        ::= { wfIRedundIfEntry 4 }

    wfIRedundIfPort OBJECT-TYPE
        SYNTAX	INTEGER(1..44)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Port ID of the interface, used as instance ID"
        ::= { wfIRedundIfEntry 5 }

    wfIRedundIfPrimary OBJECT-TYPE
        SYNTAX	INTEGER {
    		    primary(1),
    		    nonprimary(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Primary flag, indicates if this has been chosen as the primary interface.
                Only one interface in any circuit can be selected as a PRIMARY interface.
                The PRIMARY interface will have priority when an active interface is
                selected for a circuit.  In general, if a PRIMARY circuit is available
                at active interface selection time, it will be chosen as the active
                interface."
        DEFVAL	{ nonprimary }
        ::= { wfIRedundIfEntry 6 }

    wfIRedundIfActive OBJECT-TYPE
        SYNTAX	INTEGER {
    		    notavailable(1),
    		    standby(2),
    		    active(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Active flag, indicates if this interface is the current active interface
                for the Interface Redundancy Group, or a standby interface, or not
                available to be used as active interface."
        DEFVAL	{ notavailable }
        ::= { wfIRedundIfEntry 7 }

    END  -- Wellfleet-IREDUND-MIB
-- @(#)WSCCS i/mibs-isdn.mib 1.2 10/5/95
Wellfleet-ISDN-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:44:31 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfIsdnGroup
        FROM Wellfleet-COMMON-MIB;


    wfModemIfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfModemIfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ISDN SYNC  line record"
        ::= { wfIsdnGroup 1 }

    wfModemIfEntry OBJECT-TYPE
        SYNTAX	WfModemIfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the MODEM_IF table"
        INDEX	{ wfModemIfSlot,
    		  wfModemIfConnector }
        ::= { wfModemIfTable 1 }

    WfModemIfEntry ::= SEQUENCE {
    	    wfModemIfDelete
    		INTEGER,
    	    wfModemIfSlot
    		INTEGER,
    	    wfModemIfConnectStatus
    		INTEGER,
    	    wfModemIfConnector
    		INTEGER,
    	    wfModemIfCct
    		INTEGER,
    	    wfModemIfConnectWhen
    		INTEGER,
    	    wfModemIfConnectionTime
    		INTEGER,
    	    wfModemIfMinDurationTime
    		INTEGER,
    	    wfModemIfInactivityTime
    		INTEGER,
    	    wfModemIfRetryDelayTime
    		INTEGER,
    	    wfModemIfLineBandwidth
    		INTEGER,
    	    wfModemIfChanAggrMax
    		INTEGER,
    	    wfModemIfChanAggrMin
    		INTEGER,
    	    wfModemIfChanMgmt
    		INTEGER,
    	    wfModemIfRestrictType
    		INTEGER,
    	    wfModemIfDialRetryCount
    		INTEGER,
    	    wfModemIfRetries
    		Counter,
    	    wfModemIfForceDial
    		INTEGER,
    	    wfModemIfForceHangup
    		INTEGER,
    	    wfModemIfBringUpHour
    		INTEGER,
    	    wfModemIfBringUpMinute
    		INTEGER,
    	    wfModemIfTakeDownHour
    		INTEGER,
    	    wfModemIfTakeDownMinute
    		INTEGER,
    	    wfModemIfConnectRmtStationNum
    		DisplayString,
    	    wfModemIfConnectSubAddr
    		DisplayString,
    	    wfModemIfMediaType
    		INTEGER,
    	    wfModemIfUpperLayerTimeOut
    		INTEGER,
    	    wfModemIfRingIndicator
    		INTEGER,
    	    wfModemIfFsmDebug
    		INTEGER
        }

    wfModemIfDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfModemIfEntry 1 }

    wfModemIfSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Slot, filled in by driver"
        ::= { wfModemIfEntry 2 }

    wfModemIfConnectStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    connected(1),
    		    disconnected(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Dial up connection status"
        ::= { wfModemIfEntry 3 }

    wfModemIfConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Connector, filled in by driver"
        ::= { wfModemIfEntry 4 }

    wfModemIfCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "CCT number for this line instance"
        ::= { wfModemIfEntry 5 }

    wfModemIfConnectWhen OBJECT-TYPE
        SYNTAX	INTEGER {
    		    data(1),
    		    enable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "when to connect line"
        DEFVAL	{ data }
        ::= { wfModemIfEntry 6 }

    wfModemIfConnectionTime OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "connection wait timer interval (Seconds)"
        DEFVAL	{ 60 }
        ::= { wfModemIfEntry 7 }

    wfModemIfMinDurationTime OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "min duration time for the call (Seconds)"
        DEFVAL	{ 180 }
        ::= { wfModemIfEntry 8 }

    wfModemIfInactivityTime OBJECT-TYPE
        SYNTAX	INTEGER(1..720)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "In the absence of data traffic, the timeout period
                before a dial line is disconnected.
                Value is in MINUTES (max 12 hours)"
        DEFVAL	{ 5 }
        ::= { wfModemIfEntry 9 }

    wfModemIfRetryDelayTime OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "delay to wait after retrys fails."
        DEFVAL	{ default }
        ::= { wfModemIfEntry 10 }

    wfModemIfLineBandwidth OBJECT-TYPE
        SYNTAX	INTEGER {
    		    bw56k(56),
    		    bw64k(64),
    		    bw484k(384),
    		    bw1536k(1536)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "requested bandwidth.  NULL_VAL = Default not to set bandwidth"
        ::= { wfModemIfEntry 11 }

    wfModemIfChanAggrMax OBJECT-TYPE
        SYNTAX	INTEGER(1..24)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "max number of chans to aggregate. NULL_VAL = Default not to used value."
        ::= { wfModemIfEntry 12 }

    wfModemIfChanAggrMin OBJECT-TYPE
        SYNTAX	INTEGER(1..24)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "min number of chans to aggregate. NULL_VAL = Default not to used value."
        ::= { wfModemIfEntry 13 }

    wfModemIfChanMgmt OBJECT-TYPE
        SYNTAX	INTEGER {
    		    disablemgmt(1),
    		    minmgmt(2),
    		    deltamgmt(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "channel mgmt type. NULL_VAL = no management"
        ::= { wfModemIfEntry 14 }

    wfModemIfRestrictType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    calls(1)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "call restriction type.
                NULL_VAL = Default not to restrict calls,
                1        = Allow defined inbound call numbers only"
        ::= { wfModemIfEntry 15 }

    wfModemIfDialRetryCount OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Redial count"
        DEFVAL	{ 3 }
        ::= { wfModemIfEntry 16 }

    wfModemIfRetries OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of retries attempted to connect a dialup line"
        ::= { wfModemIfEntry 17 }

    wfModemIfForceDial OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Force the modem to dial"
        DEFVAL	{ false }
        ::= { wfModemIfEntry 18 }

    wfModemIfForceHangup OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Force the modem to disconnect"
        DEFVAL	{ false }
        ::= { wfModemIfEntry 19 }

    wfModemIfBringUpHour OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Time of day hour to allow a line to dial"
        ::= { wfModemIfEntry 20 }

    wfModemIfBringUpMinute OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Time of day minute to allow a line to dial"
        ::= { wfModemIfEntry 21 }

    wfModemIfTakeDownHour OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Time of day hour to take down a dial line"
        ::= { wfModemIfEntry 22 }

    wfModemIfTakeDownMinute OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Time of day minute to take down a dial line"
        ::= { wfModemIfEntry 23 }

    wfModemIfConnectRmtStationNum OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Phone number connected to (V.25bis mode only)"
        ::= { wfModemIfEntry 24 }

    wfModemIfConnectSubAddr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Phone number sub address for isdn numbers"
        ::= { wfModemIfEntry 25 }

    wfModemIfMediaType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    raisedtr(1),
    		    v25bis(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "modem type"
        ::= { wfModemIfEntry 26 }

    wfModemIfUpperLayerTimeOut OBJECT-TYPE
        SYNTAX	INTEGER(1..60)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "time out value for upper layer protocol initialization (seconds)"
        DEFVAL	{ 40 }
        ::= { wfModemIfEntry 27 }

    wfModemIfRingIndicator OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Ring Indicator enable/disable  parameter"
        DEFVAL	{ enabled }
        ::= { wfModemIfEntry 28 }

    wfModemIfFsmDebug OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "FSM Debug indicator (for V25bis or RaiseDtr FSM)"
        DEFVAL	{ disabled }
        ::= { wfModemIfEntry 29 }

    wfIsdnMsgCtrTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIsdnMsgCtrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ISDN message counters, one entry per Digital Subscriber
                Loop (DSL), maintained by the Line Manager."
        ::= { wfIsdnGroup 4 }

    wfIsdnMsgCtrEntry OBJECT-TYPE
        SYNTAX	WfIsdnMsgCtrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the ISDN message counter table"
        INDEX	{ wfIsdnMsgCtrSlot,
    		  wfIsdnMsgCtrDslID }
        ::= { wfIsdnMsgCtrTable 1 }

    WfIsdnMsgCtrEntry ::= SEQUENCE {
    	    wfIsdnMsgCtrSlot
    		INTEGER,
    	    wfIsdnMsgCtrDslID
    		INTEGER,
    	    wfIsdnMsgCallProcInd
    		Counter,
    	    wfIsdnMsgClearConf
    		Counter,
    	    wfIsdnMsgClearInd
    		Counter,
    	    wfIsdnMsgConnectInd
    		Counter,
    	    wfIsdnMsgSetupInd
    		Counter,
    	    wfIsdnMsgRegisterConf
    		Counter,
    	    wfIsdnMsgMgmtInd
    		Counter,
    	    wfIsdnMsgDiscInd
    		Counter,
    	    wfIsdnMsgActInd
    		Counter,
    	    wfIsdnMsgDeactInd
    		Counter,
    	    wfIsdnMsgConnectConf
    		Counter,
    	    wfIsdnMsgAlertReq
    		Counter,
    	    wfIsdnMsgCallProcReq
    		Counter,
    	    wfIsdnMsgClearReq
    		Counter,
    	    wfIsdnMsgConnectReq
    		Counter,
    	    wfIsdnMsgSetupReq
    		Counter,
    	    wfIsdnMsgMgmtReq
    		Counter,
    	    wfIsdnMsgDiscReq
    		Counter,
    	    wfIsdnMsgActReq
    		Counter,
    	    wfIsdnMsgDeactReq
    		Counter,
    	    wfIsdnMsgAlertInd
    		Counter,
    	    wfIsdnMsgInfoInd
    		Counter
        }

    wfIsdnMsgCtrSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Digital Subscriber Loop (DSL) these counters
                apply to"
        ::= { wfIsdnMsgCtrEntry 1 }

    wfIsdnMsgCtrDslID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Digital Subscriber Loop (DSL) these counters
                apply to"
        ::= { wfIsdnMsgCtrEntry 2 }

    wfIsdnMsgCallProcInd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Call Proceeding Indication from the network"
        ::= { wfIsdnMsgCtrEntry 3 }

    wfIsdnMsgClearConf OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Release Complete from the network"
        ::= { wfIsdnMsgCtrEntry 4 }

    wfIsdnMsgClearInd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Release Indication from the network"
        ::= { wfIsdnMsgCtrEntry 5 }

    wfIsdnMsgConnectInd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Connect Indication from the network"
        ::= { wfIsdnMsgCtrEntry 6 }

    wfIsdnMsgSetupInd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Setup Indication from the network"
        ::= { wfIsdnMsgCtrEntry 7 }

    wfIsdnMsgRegisterConf OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Register Confirmation from the network"
        ::= { wfIsdnMsgCtrEntry 8 }

    wfIsdnMsgMgmtInd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Management Indication from the network"
        ::= { wfIsdnMsgCtrEntry 9 }

    wfIsdnMsgDiscInd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Disconnect Indication from the network"
        ::= { wfIsdnMsgCtrEntry 10 }

    wfIsdnMsgActInd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activation Indication from the driver"
        ::= { wfIsdnMsgCtrEntry 11 }

    wfIsdnMsgDeactInd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Deactivation Indication from the driver"
        ::= { wfIsdnMsgCtrEntry 12 }

    wfIsdnMsgConnectConf OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Connect Acknowledge from the network"
        ::= { wfIsdnMsgCtrEntry 13 }

    wfIsdnMsgAlertReq OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Alert Request to the network"
        ::= { wfIsdnMsgCtrEntry 14 }

    wfIsdnMsgCallProcReq OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Call Proceeding Request to the network"
        ::= { wfIsdnMsgCtrEntry 15 }

    wfIsdnMsgClearReq OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Clear Request to the network"
        ::= { wfIsdnMsgCtrEntry 16 }

    wfIsdnMsgConnectReq OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Connect Request to the network"
        ::= { wfIsdnMsgCtrEntry 17 }

    wfIsdnMsgSetupReq OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Setup Request to the network"
        ::= { wfIsdnMsgCtrEntry 18 }

    wfIsdnMsgMgmtReq OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Management Request to the network"
        ::= { wfIsdnMsgCtrEntry 19 }

    wfIsdnMsgDiscReq OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Disconnect Request to the network"
        ::= { wfIsdnMsgCtrEntry 20 }

    wfIsdnMsgActReq OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Activate Request to the driver"
        ::= { wfIsdnMsgCtrEntry 21 }

    wfIsdnMsgDeactReq OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Deactivate Request to the driver"
        ::= { wfIsdnMsgCtrEntry 22 }

    wfIsdnMsgAlertInd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Alert Indication from the network"
        ::= { wfIsdnMsgCtrEntry 23 }

    wfIsdnMsgInfoInd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Information Indication from the network"
        ::= { wfIsdnMsgCtrEntry 24 }

    wfIsdnHostActionTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIsdnHostActionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table is for debugging purposes only! It allows
                Host initiated call control actions."
        ::= { wfIsdnGroup 5 }

    wfIsdnHostActionEntry OBJECT-TYPE
        SYNTAX	WfIsdnHostActionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the host action table"
        INDEX	{ wfIsdnHostActSlot }
        ::= { wfIsdnHostActionTable 1 }

    WfIsdnHostActionEntry ::= SEQUENCE {
    	    wfIsdnHostActSlot
    		INTEGER,
    	    wfIsdnHostActDslId
    		INTEGER,
    	    wfIsdnHostActCallID
    		INTEGER,
    	    wfIsdnHostActMsgType
    		INTEGER,
    	    wfIsdnHostActCalledPtyType
    		INTEGER,
    	    wfIsdnHostActCalledPtyPlan
    		INTEGER,
    	    wfIsdnHostActCalledPtyNum
    		OCTET STRING,
    	    wfIsdnHostActCallingPtyType
    		INTEGER,
    	    wfIsdnHostActCallingPtyPlan
    		INTEGER,
    	    wfIsdnHostActCallingPtyNum
    		OCTET STRING,
    	    wfIsdnHostActCallingPtyPres
    		INTEGER,
    	    wfIsdnHostActChanPrefBit
    		INTEGER,
    	    wfIsdnHostActChanSelection
    		INTEGER,
    	    wfIsdnHostActCauseCode
    		INTEGER,
    	    wfIsdnHostActTransferCap
    		INTEGER,
    	    wfIsdnHostActCldSadType
    		INTEGER,
    	    wfIsdnHostActCldSadNum
    		OCTET STRING,
    	    wfIsdnHostActClgSadType
    		INTEGER,
    	    wfIsdnHostActClgSadNum
    		OCTET STRING
        }

    wfIsdnHostActSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the slot the interface is on"
        ::= { wfIsdnHostActionEntry 1 }

    wfIsdnHostActDslId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DSL id of the interface"
        ::= { wfIsdnHostActionEntry 2 }

    wfIsdnHostActCallID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Call ID"
        ::= { wfIsdnHostActionEntry 3 }

    wfIsdnHostActMsgType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    info(15),
    		    setup(28),
    		    disc(50),
    		    activate(82),
    		    deactivate(83)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "type of message to be sent to call control (or ME)"
        ::= { wfIsdnHostActionEntry 4 }

    wfIsdnHostActCalledPtyType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    intl(1),
    		    nat(2),
    		    loc(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "called party type"
        DEFVAL	{ nat }
        ::= { wfIsdnHostActionEntry 5 }

    wfIsdnHostActCalledPtyPlan OBJECT-TYPE
        SYNTAX	INTEGER {
    		    isdn(1),
    		    tele(2),
    		    pvt(9)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "called party plan"
        DEFVAL	{ isdn }
        ::= { wfIsdnHostActionEntry 6 }

    wfIsdnHostActCalledPtyNum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "called party number in ASCII digits"
        ::= { wfIsdnHostActionEntry 7 }

    wfIsdnHostActCallingPtyType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    intl(1),
    		    nat(2),
    		    loc(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "calling party type"
        DEFVAL	{ nat }
        ::= { wfIsdnHostActionEntry 8 }

    wfIsdnHostActCallingPtyPlan OBJECT-TYPE
        SYNTAX	INTEGER {
    		    isdn(1),
    		    tele(2),
    		    pvt(9)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "calling party plan"
        DEFVAL	{ isdn }
        ::= { wfIsdnHostActionEntry 9 }

    wfIsdnHostActCallingPtyNum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "calling party number in ASCII digits"
        ::= { wfIsdnHostActionEntry 10 }

    wfIsdnHostActCallingPtyPres OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rest(1),
    		    unavl(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "calling party presentation indicator"
        ::= { wfIsdnHostActionEntry 11 }

    wfIsdnHostActChanPrefBit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "channel preferred/exclusive bit"
        ::= { wfIsdnHostActionEntry 12 }

    wfIsdnHostActChanSelection OBJECT-TYPE
        SYNTAX	INTEGER {
    		    channelb1(1),
    		    channelb2(2),
    		    channel(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "channel selection"
        DEFVAL	{ channelb1 }
        ::= { wfIsdnHostActionEntry 13 }

    wfIsdnHostActCauseCode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    normal(16),
    		    rejected(21),
    		    unspecified(31),
    		    barred(54)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "cause code"
        DEFVAL	{ normal }
        ::= { wfIsdnHostActionEntry 14 }

    wfIsdnHostActTransferCap OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unrestricted(8),
    		    restricted(9)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transfer Capability required for Bearer Cap IE"
        DEFVAL	{ unrestricted }
        ::= { wfIsdnHostActionEntry 15 }

    wfIsdnHostActCldSadType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    user(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Called Party Subaddress Type"
        ::= { wfIsdnHostActionEntry 16 }

    wfIsdnHostActCldSadNum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Called Party subaddress Max length 20 octets"
        ::= { wfIsdnHostActionEntry 17 }

    wfIsdnHostActClgSadType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    user(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Calling party subaddress Type"
        ::= { wfIsdnHostActionEntry 18 }

    wfIsdnHostActClgSadNum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Called Party subaddress Max length 20 octets"
        ::= { wfIsdnHostActionEntry 19 }

    wfIsdnSwitchCfgTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIsdnSwitchCfgEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the Switchtype Configuration for the
                ISDN signaling stack."
        ::= { wfIsdnGroup 6 }

    wfIsdnSwitchCfgEntry OBJECT-TYPE
        SYNTAX	WfIsdnSwitchCfgEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the ISDN Switch table"
        INDEX	{ wfIsdnSwitchCfgSlot }
        ::= { wfIsdnSwitchCfgTable 1 }

    WfIsdnSwitchCfgEntry ::= SEQUENCE {
    	    wfIsdnSwitchCfgDelete
    		INTEGER,
    	    wfIsdnSwitchCfgSlot
    		INTEGER,
    	    wfIsdnSwitchCfgType
    		INTEGER,
    	    wfIsdnSwitchTestMode
    		INTEGER,
    	    wfIsdnSwitchIncomingFilter
    		INTEGER,
    	    wfIsdnSwitchTraceFacility
    		INTEGER,
    	    wfIsdnSwitchScreenedCalls
    		Counter,
    	    wfIsdnSwitchSendingComplete
    		INTEGER,
    	    wfIsdnSwitchGlobalRateAdaption
    		INTEGER
        }

    wfIsdnSwitchCfgDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create / Delete Parameter"
        DEFVAL	{ created }
        ::= { wfIsdnSwitchCfgEntry 1 }

    wfIsdnSwitchCfgSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot which has the ISDN interface"
        ::= { wfIsdnSwitchCfgEntry 2 }

    wfIsdnSwitchCfgType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    brinet3(1),
    		    briswissnet3(2),
    		    bri5ess(4),
    		    bridms100(7),
    		    brivn3(10),
    		    brikdd(11),
    		    brintt(12),
    		    brits013(14),
    		    brini1(15),
    		    pri4ess(17),
    		    pri5ess(18),
    		    pridms100(20),
    		    prikdd(21),
    		    printt(22),
    		    prinet5(27),
    		    prits014(29)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Type of switch from which the ISDN
                service is subscribed for this slot."
        ::= { wfIsdnSwitchCfgEntry 3 }

    wfIsdnSwitchTestMode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable engineering test mode"
        ::= { wfIsdnSwitchCfgEntry 4 }

    wfIsdnSwitchIncomingFilter OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Filter Calling address in the Incoming call"
        DEFVAL	{ off }
        ::= { wfIsdnSwitchCfgEntry 5 }

    wfIsdnSwitchTraceFacility OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable ISDN protocol stack message tracing
                facility - when this is enabled, all messages exchanged
                between Layer 2 and Layer 3 ISDN entities will be
                captured to the event log as TRACE messages"
        DEFVAL	{ disabled }
        ::= { wfIsdnSwitchCfgEntry 6 }

    wfIsdnSwitchScreenedCalls OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of incoming calls ignored because of screening, ie.
                the Calling Party number was not in the list of approved
                numbers"
        ::= { wfIsdnSwitchCfgEntry 7 }

    wfIsdnSwitchSendingComplete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Sending Complete IE is required to be sent in the Setup
                message indicating en-bloc sending. Enable this attribute to include
                Sending Complete IE if the Switch providing ISDN service requires
                it."
        DEFVAL	{ disabled }
        ::= { wfIsdnSwitchCfgEntry 8 }

    wfIsdnSwitchGlobalRateAdaption OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rate64(1),
    		    rate56(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Global Rate Adaption, If this value is configured request
                the configured Rate adpation when establishing connection."
        DEFVAL	{ rate64 }
        ::= { wfIsdnSwitchCfgEntry 9 }

    wfIsdnCallInfoTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIsdnCallInfoEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Call Information Table - contains data pertinent to a
                an active call, both incoming and outgoing, indexed by
                an internally generated call reference number."
        ::= { wfIsdnGroup 7 }

    wfIsdnCallInfoEntry OBJECT-TYPE
        SYNTAX	WfIsdnCallInfoEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the ISDN Call Info Table"
        INDEX	{ wfIsdnCallInfoSlot,
    		  wfIsdnCallInfoDslID,
    		  wfIsdnCallInfoCallID }
        ::= { wfIsdnCallInfoTable 1 }

    WfIsdnCallInfoEntry ::= SEQUENCE {
    	    wfIsdnCallInfoSlot
    		INTEGER,
    	    wfIsdnCallInfoDslID
    		INTEGER,
    	    wfIsdnCallInfoCallID
    		INTEGER,
    	    wfIsdnCallInfoBChannel
    		INTEGER,
    	    wfIsdnCallInfoCallState
    		INTEGER,
    	    wfIsdnCallInfoTransferCap
    		INTEGER,
    	    wfIsdnCallInfoCalledPtyNum
    		DisplayString,
    	    wfIsdnCallInfoCallingPtyNum
    		DisplayString,
    	    wfIsdnCallInfoDuration
    		INTEGER,
    	    wfIsdnCallInfoConnectTime
    		INTEGER,
    	    wfIsdnCallInfoRateAdaption
    		INTEGER,
    	    wfIsdnCallInfoCalledPtySub
    		DisplayString,
    	    wfIsdnCallInfoCallingPtySub
    		DisplayString
        }

    wfIsdnCallInfoSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The slot this call resides on"
        ::= { wfIsdnCallInfoEntry 1 }

    wfIsdnCallInfoDslID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Digital Subscriber Loop (DSL) this call resides on"
        ::= { wfIsdnCallInfoEntry 2 }

    wfIsdnCallInfoCallID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Call ID instance identifier - numbers in the
                range 0x0000 - 0x7FFF are assigned to
                incoming calls, 0x8000 - 0xFFFF
                are assigned to outgoing calls - this is used
                as a handle to manage an active call"
        ::= { wfIsdnCallInfoEntry 3 }

    wfIsdnCallInfoBChannel OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "B Channel this call resides on"
        ::= { wfIsdnCallInfoEntry 4 }

    wfIsdnCallInfoCallState OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line Manager Call State"
        ::= { wfIsdnCallInfoEntry 5 }

    wfIsdnCallInfoTransferCap OBJECT-TYPE
        SYNTAX	INTEGER {
    		    udi(8),
    		    rdi(9)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Transfer Capability value from the Bearer
                Capability Information Element"
        ::= { wfIsdnCallInfoEntry 6 }

    wfIsdnCallInfoCalledPtyNum OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Called Party Number"
        ::= { wfIsdnCallInfoEntry 7 }

    wfIsdnCallInfoCallingPtyNum OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Calling Party Number"
        ::= { wfIsdnCallInfoEntry 8 }

    wfIsdnCallInfoDuration OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Duration of the call in minutes"
        ::= { wfIsdnCallInfoEntry 9 }

    wfIsdnCallInfoConnectTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Start time of the call (HHMMSS)"
        ::= { wfIsdnCallInfoEntry 10 }

    wfIsdnCallInfoRateAdaption OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Rate adaption for this call in KBPS"
        ::= { wfIsdnCallInfoEntry 11 }

    wfIsdnCallInfoCalledPtySub OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Called Party Subaddress"
        ::= { wfIsdnCallInfoEntry 12 }

    wfIsdnCallInfoCallingPtySub OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Calling Party Subaddress"
        ::= { wfIsdnCallInfoEntry 13 }

    wfIsdnBriInterfaceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIsdnBriInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "
                   ISDN BRI D Channel MIB Record
                "
        ::= { wfIsdnGroup 9 }

    wfIsdnBriInterfaceEntry OBJECT-TYPE
        SYNTAX	WfIsdnBriInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the ISDN table"
        INDEX	{ wfIsdnBriSlot,
    		  wfIsdnBriConnector }
        ::= { wfIsdnBriInterfaceTable 1 }

    WfIsdnBriInterfaceEntry ::= SEQUENCE {
    	    wfIsdnBriDelete
    		INTEGER,
    	    wfIsdnBriDisable
    		INTEGER,
    	    wfIsdnBriState
    		INTEGER,
    	    wfIsdnBriSlot
    		INTEGER,
    	    wfIsdnBriConnector
    		INTEGER,
    	    wfIsdnBriCct
    		INTEGER,
    	    wfIsdnBriDslId
    		INTEGER,
    	    wfIsdnBriLineNumber
    		INTEGER,
    	    wfIsdnBriModule
    		INTEGER,
    	    wfIsdnBriActualConnector
    		INTEGER,
    	    wfIsdnBriTeState
    		INTEGER,
    	    wfIsdnBriMtu
    		INTEGER,
    	    wfIsdnBriBChanLoop
    		INTEGER,
    	    wfIsdnBriTimer3Tmo
    		INTEGER,
    	    wfIsdnBriTimer4Tmo
    		INTEGER,
    	    wfIsdnBriRxOctets
    		Counter,
    	    wfIsdnBriRxFrames
    		Counter,
    	    wfIsdnBriTxOctets
    		Counter,
    	    wfIsdnBriTxFrames
    		Counter,
    	    wfIsdnBriRxErrors
    		Counter,
    	    wfIsdnBriTxErrors
    		Counter,
    	    wfIsdnBriRxLackRescs
    		Counter,
    	    wfIsdnBriTxLackRescs
    		Counter,
    	    wfIsdnBriTxUnderFlows
    		Counter,
    	    wfIsdnBriTxDChanCollisions
    		Counter,
    	    wfIsdnBriRxOverFlows
    		Counter,
    	    wfIsdnBriRxTooLongFrames
    		Counter,
    	    wfIsdnBriRxBadCrcs
    		Counter,
    	    wfIsdnBriRxAborts
    		Counter,
    	    wfIsdnBriRxReplenMisses
    		Counter,
    	    wfIsdnBriTimer3Timeouts
    		Counter,
    	    wfIsdnBriTimer4Timeouts
    		Counter,
    	    wfIsdnBriLineType
    		INTEGER,
    	    wfIsdnBriMode
    		INTEGER
        }

    wfIsdnBriDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfIsdnBriInterfaceEntry 1 }

    wfIsdnBriDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfIsdnBriInterfaceEntry 2 }

    wfIsdnBriState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(20)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line Driver state variable, Not Present,
                Init, Down, Up"
        DEFVAL	{ notpresent }
        ::= { wfIsdnBriInterfaceEntry 3 }

    wfIsdnBriSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Slot, filled in by driver."
        ::= { wfIsdnBriInterfaceEntry 4 }

    wfIsdnBriConnector OBJECT-TYPE
        SYNTAX	INTEGER(1..44)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Connector, filled in by driver. For the ASN
                this attribute is an encoded value and is equal to
                'module'*10 + 'connector'. Where 'module' is defined in
                attribute 9 and 'connector' is defined in attribute 10
                of this table. For non-ASN platforms this attribute is
                the physical connector number on the slot."
        ::= { wfIsdnBriInterfaceEntry 5 }

    wfIsdnBriCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "CCT number for this interface instance"
        ::= { wfIsdnBriInterfaceEntry 6 }

    wfIsdnBriDslId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ID of this DSL interface. This stands for 'Digital Subscriber
                Loop' which is the physical link from the TE (us) to the NT
                (switch)."
        ::= { wfIsdnBriInterfaceEntry 7 }

    wfIsdnBriLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Line number for this line instance. This is assigned at
                configuration time and uniquely identifies this line"
        ::= { wfIsdnBriInterfaceEntry 8 }

    wfIsdnBriModule OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Module number for ASN platform, filled in by driver. For non-ASN
                platforms this attribute will not be used."
        ::= { wfIsdnBriInterfaceEntry 9 }

    wfIsdnBriActualConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Actual connector number for ASN platform, filled in
                by driver. For non-ASN platforms, this attribute will
                not be used."
        ::= { wfIsdnBriInterfaceEntry 10 }

    wfIsdnBriTeState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    inactive(1),
    		    sensing(2),
    		    deactivated(3),
    		    awaitsignal(4),
    		    identifyinput(5),
    		    synchronized(6),
    		    activated(7),
    		    lostframing(8)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "State of the S/T interface from the routers point of view. These states
                correspond to those described in the CCITT I.430 recommendation and
                with those described with relation to the ISAC-S."
        DEFVAL	{ inactive }
        ::= { wfIsdnBriInterfaceEntry 11 }

    wfIsdnBriMtu OBJECT-TYPE
        SYNTAX	INTEGER(3..1024)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Contains the largest frame size that can be received by this
                interface. Anything larger than the MTU will be discarded."
        DEFVAL	{ 400 }
        ::= { wfIsdnBriInterfaceEntry 12 }

    wfIsdnBriBChanLoop OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This allows us to put the B Channels into loopback at the S/T
                interface. This is usually used for Layer 1 conformance testing."
        DEFVAL	{ disabled }
        ::= { wfIsdnBriInterfaceEntry 13 }

    wfIsdnBriTimer3Tmo OBJECT-TYPE
        SYNTAX	INTEGER(1..30)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the amount of time in seconds for our T3 timer.
                The T3 timer is initiated by the host (i.e. the router). The T3 timer is
                started whenever the S/T interface is in a deactivated state and the host
                (i.e. the Router) wishes to activate the interface. As an example, for
                our application, the Router would activate the interface when there was
                data to be transmitted out that interface. At the point when we try
                activating the interface, the T3 timer is started. During the duration
                of the T3 timer, the router in trying to activate the interface will
                transmit INFO 1's out the S/T interface until either a signal is detected
                (from the network) or the T3 timer expires."
        DEFVAL	{ 10 }
        ::= { wfIsdnBriInterfaceEntry 14 }

    wfIsdnBriTimer4Tmo OBJECT-TYPE
        SYNTAX	INTEGER(500..1000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the amount of time in milliseconds for our T4 timer.
                The T4 timer is a debounce timer which is used to shield the
                upper layers from short glitches at the S/T interface. Spurious
                problems of short duration will not be reported to the upper
                layers until the T4 timer expires. The T4 timer is started when
                leaving state F7 or F8 upon the reception of INFO 0. The corresponding
                Deactivation Indication will be delivered to layer 2 only if layer 1
                does not enter an active state before expiration of this timer. (Note
                that a value of 0 indicates the timer is disabled)."
        DEFVAL	{ 750 }
        ::= { wfIsdnBriInterfaceEntry 15 }

    wfIsdnBriRxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets received without error"
        ::= { wfIsdnBriInterfaceEntry 16 }

    wfIsdnBriRxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received without error"
        ::= { wfIsdnBriInterfaceEntry 17 }

    wfIsdnBriTxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets transmitted without error"
        ::= { wfIsdnBriInterfaceEntry 18 }

    wfIsdnBriTxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames transmitted without error"
        ::= { wfIsdnBriInterfaceEntry 19 }

    wfIsdnBriRxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of receive errors"
        ::= { wfIsdnBriInterfaceEntry 20 }

    wfIsdnBriTxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of transmission errors"
        ::= { wfIsdnBriInterfaceEntry 21 }

    wfIsdnBriRxLackRescs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times a receive packet was discarded because
                there was no receive descriptor available."
        ::= { wfIsdnBriInterfaceEntry 22 }

    wfIsdnBriTxLackRescs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames clipped in driver's transmit routine due to
                transmit congestion."
        ::= { wfIsdnBriInterfaceEntry 23 }

    wfIsdnBriTxUnderFlows OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmission underflows, device FIFO went empty before
                driver could replenish with more data"
        ::= { wfIsdnBriInterfaceEntry 24 }

    wfIsdnBriTxDChanCollisions OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times a collison occurred on the S-Bus transmitting
                a frame greater than 32 bytes, so frame had to be retransmitted"
        ::= { wfIsdnBriInterfaceEntry 25 }

    wfIsdnBriRxOverFlows OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of receive overflows, device FIFO overflowed before the
                driver was able to read/empty the FIFO."
        ::= { wfIsdnBriInterfaceEntry 26 }

    wfIsdnBriRxTooLongFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received which were larger than the defined MTU"
        ::= { wfIsdnBriInterfaceEntry 27 }

    wfIsdnBriRxBadCrcs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of bad receive frames caused by FCS errors"
        ::= { wfIsdnBriInterfaceEntry 28 }

    wfIsdnBriRxAborts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of aborted frames due to being non octet aligned (i.e seven
                one's in a row received)"
        ::= { wfIsdnBriInterfaceEntry 29 }

    wfIsdnBriRxReplenMisses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packet buffer misses while attempting to replenish driver
                receive descriptor ring."
        ::= { wfIsdnBriInterfaceEntry 30 }

    wfIsdnBriTimer3Timeouts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Timer 3 timeout's detected. This indicates the number of
                times the Router tried to activate the S/T interface without success."
        ::= { wfIsdnBriInterfaceEntry 31 }

    wfIsdnBriTimer4Timeouts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Timer 4 timeout's detected. The T4 timer is started when
                leaving state F7 or F8 upon the reception of INFO 0. If layer 1 does not
                enter an active state before expiration of this timer, then a Deactivation
                Indication will be sent to layer 2."
        ::= { wfIsdnBriInterfaceEntry 32 }

    wfIsdnBriLineType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ptp(1),
    		    mtp(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BRI line type can be either Multipoint (passive bus configuration with
                more than one device connected) or Point-to-Point with a single device
                attached."
        DEFVAL	{ ptp }
        ::= { wfIsdnBriInterfaceEntry 33 }

    wfIsdnBriMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    dialup(1),
    		    leased(2),
    		    floatb(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute controls the operation of the Basic Rate Interface.
                DIALUP is the traditional mode of operation in which call setup
                signalling is done in concert with the ISDN switch.  LEASED is a
                special case of ISDN in which no signalling will be done with
                the switch and instead the switch is configured with nailed up
                connections to specific remote ISDN termination points."
        DEFVAL	{ dialup }
        ::= { wfIsdnBriInterfaceEntry 34 }

    wfIsdnBChanInterfaceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIsdnBChanInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "
                   ISDN Logical B channel MIB Record
                "
        ::= { wfIsdnGroup 10 }

    wfIsdnBChanInterfaceEntry OBJECT-TYPE
        SYNTAX	WfIsdnBChanInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the ISDN table"
        INDEX	{ wfIsdnBChanLineNumber,
    		  wfIsdnBChanIndex }
        ::= { wfIsdnBChanInterfaceTable 1 }

    WfIsdnBChanInterfaceEntry ::= SEQUENCE {
    	    wfIsdnBChanDelete
    		INTEGER,
    	    wfIsdnBChanLineNumber
    		INTEGER,
    	    wfIsdnBChanIndex
    		INTEGER,
    	    wfIsdnBChanDisable
    		INTEGER,
    	    wfIsdnBChanState
    		INTEGER,
    	    wfIsdnBChanCct
    		INTEGER,
    	    wfIsdnBChanWanProtocol
    		INTEGER,
    	    wfIsdnBChanBackupPool
    		INTEGER,
    	    wfIsdnBChanDemandPool
    		INTEGER,
    	    wfIsdnBChanDirectoryNum
    		DisplayString,
    	    wfIsdnBChanSpid
    		DisplayString,
    	    wfIsdnBChanActiveCct
    		INTEGER,
    	    wfIsdnBChanPriority
    		INTEGER,
    	    wfIsdnBchanMultilineMode
    		INTEGER
        }

    wfIsdnBChanDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfIsdnBChanInterfaceEntry 1 }

    wfIsdnBChanLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "line number for this line instance"
        ::= { wfIsdnBChanInterfaceEntry 2 }

    wfIsdnBChanIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..32)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "a unique one up type number to create a list"
        ::= { wfIsdnBChanInterfaceEntry 3 }

    wfIsdnBChanDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfIsdnBChanInterfaceEntry 4 }

    wfIsdnBChanState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line Driver state variable, Not Present,
                Init, Down, Up"
        DEFVAL	{ notpresent }
        ::= { wfIsdnBChanInterfaceEntry 5 }

    wfIsdnBChanCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "CCT number for this interface instance"
        ::= { wfIsdnBChanInterfaceEntry 6 }

    wfIsdnBChanWanProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ppp(1),
    		    framerelay(2),
    		    x25(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "WAN protocol selection is provided via this parameter. The
                supported protocols can be selected per interface."
        DEFVAL	{ ppp }
        ::= { wfIsdnBChanInterfaceEntry 7 }

    wfIsdnBChanBackupPool OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Backup pool id containing this line driver"
        ::= { wfIsdnBChanInterfaceEntry 8 }

    wfIsdnBChanDemandPool OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Dial on demand  pool id containing this line driver"
        ::= { wfIsdnBChanInterfaceEntry 9 }

    wfIsdnBChanDirectoryNum OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Directory Number associated with the interface"
        ::= { wfIsdnBChanInterfaceEntry 10 }

    wfIsdnBChanSpid OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Service Profile IDentifier - assigned by the Central Office on ordering
                ISDN service from a switch conforming to National ISDN."
        ::= { wfIsdnBChanInterfaceEntry 11 }

    wfIsdnBChanActiveCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "CCT number for this interface instance"
        ::= { wfIsdnBChanInterfaceEntry 12 }

    wfIsdnBChanPriority OBJECT-TYPE
        SYNTAX	INTEGER(1..50)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Priority associated with this ISDN B Channel"
        DEFVAL	{ 1 }
        ::= { wfIsdnBChanInterfaceEntry 13 }

    wfIsdnBchanMultilineMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    standard(1),
    		    master(2),
    		    slave(3),
    		    secondary(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This indicates the roll the B channel plays in
                a Bandwidth on Demand-Multiline Circuit. If this
                is not BOD, the mode is standard."
        DEFVAL	{ standard }
        ::= { wfIsdnBChanInterfaceEntry 14 }

    wfIsdnPoolTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIsdnPoolEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "
                   ISDN Pool MIB Record
                "
        ::= { wfIsdnGroup 11 }

    wfIsdnPoolEntry OBJECT-TYPE
        SYNTAX	WfIsdnPoolEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Pool table"
        INDEX	{ wfIsdnPoolType,
    		  wfIsdnPoolLineNumber,
    		  wfIsdnPoolId }
        ::= { wfIsdnPoolTable 1 }

    WfIsdnPoolEntry ::= SEQUENCE {
    	    wfIsdnPoolDelete
    		INTEGER,
    	    wfIsdnPoolType
    		INTEGER,
    	    wfIsdnPoolLineNumber
    		INTEGER,
    	    wfIsdnPoolId
    		INTEGER,
    	    wfIsdnPoolChannelCnt
    		INTEGER,
    	    wfIsdnPoolPriority
    		INTEGER,
    	    wfIsdnPoolChannelInUse
    		INTEGER
        }

    wfIsdnPoolDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfIsdnPoolEntry 1 }

    wfIsdnPoolType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    demand(1),
    		    backup(2),
    		    bandwidth(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Type of Pool . Backup or Demand"
        ::= { wfIsdnPoolEntry 2 }

    wfIsdnPoolLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "D channel line number associated with this pool instance"
        ::= { wfIsdnPoolEntry 3 }

    wfIsdnPoolId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "a unique pool ID"
        ::= { wfIsdnPoolEntry 4 }

    wfIsdnPoolChannelCnt OBJECT-TYPE
        SYNTAX	INTEGER(1..30)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of Channels allocated for this  Pool"
        DEFVAL	{ 1 }
        ::= { wfIsdnPoolEntry 5 }

    wfIsdnPoolPriority OBJECT-TYPE
        SYNTAX	INTEGER(1..50)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Priority of Lines in  Pool"
        DEFVAL	{ 1 }
        ::= { wfIsdnPoolEntry 6 }

    wfIsdnPoolChannelInUse OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Channels  in use from this  Pool."
        ::= { wfIsdnPoolEntry 7 }

    wfIsdnLocalPhoneNumTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIsdnLocalPhoneNumEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ISDN Local  phone number list "
        ::= { wfIsdnGroup 12 }

    wfIsdnLocalPhoneNumEntry OBJECT-TYPE
        SYNTAX	WfIsdnLocalPhoneNumEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in  table"
        INDEX	{ wfIsdnLocalPhoneNumLineNum,
    		  wfIsdnLocalPhoneNumIndex }
        ::= { wfIsdnLocalPhoneNumTable 1 }

    WfIsdnLocalPhoneNumEntry ::= SEQUENCE {
    	    wfIsdnLocalPhoneNumDelete
    		INTEGER,
    	    wfIsdnLocalPhoneNumLineNum
    		INTEGER,
    	    wfIsdnLocalPhoneNumIndex
    		INTEGER,
    	    wfIsdnLocalDirectoryNum
    		DisplayString,
    	    wfIsdnLocalSubAddr
    		DisplayString,
    	    wfIsdnLocalSpid
    		DisplayString,
    	    wfIsdnLocalAssignedChannel
    		INTEGER,
    	    wfIsdnLocalSpidStatus
    		INTEGER,
            wfIsdnLocalDirectoryNumType
    		INTEGER,
            wfIsdnLocalDirectoryNumPlan
    		INTEGER
        }

    wfIsdnLocalPhoneNumDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Delete this phone number from the list"
        DEFVAL	{ created }
        ::= { wfIsdnLocalPhoneNumEntry 1 }

    wfIsdnLocalPhoneNumLineNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "D Channel Line Number"
        ::= { wfIsdnLocalPhoneNumEntry 2 }

    wfIsdnLocalPhoneNumIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "a unique sequetial index to create a list"
        ::= { wfIsdnLocalPhoneNumEntry 3 }

    wfIsdnLocalDirectoryNum OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Directory Number (local phone number) assiciated with the interface"
        ::= { wfIsdnLocalPhoneNumEntry 4 }

    wfIsdnLocalSubAddr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Local Phone Number, the sub address portion"
        ::= { wfIsdnLocalPhoneNumEntry 5 }

    wfIsdnLocalSpid OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Service Profile IDentifier - assigned by the Central Office on ordering
                ISDN service from a switch conforming to National ISDN."
        ::= { wfIsdnLocalPhoneNumEntry 6 }

    wfIsdnLocalAssignedChannel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    channel1(1),
    		    channel2(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "for Swserv phone numbers, the delimiter portion"
        ::= { wfIsdnLocalPhoneNumEntry 7 }

    wfIsdnLocalSpidStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    accepted(1),
    		    rejected(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The status of SPID registration"
        ::= { wfIsdnLocalPhoneNumEntry 8 }

    wfIsdnLocalDirectoryNumType OBJECT-TYPE
        SYNTAX  INTEGER {
                    unknown(1),
                    international(16),
                    national(32),
                    specific(48),
                    subscriber(64),
                    abbreviated(96)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "For ISDN type number, it needs type of number
                UNKNOWN Type is 0, use 1 to satisfy MDL requirement
                This attribute value will be ANDED with  0xFFF0 before using it."
        DEFVAL  { unknown }
        ::= { wfIsdnLocalPhoneNumEntry 9 }

    wfIsdnLocalDirectoryNumPlan OBJECT-TYPE
        SYNTAX  INTEGER {
                    unknown(16),
                    telephony(01),
                    x121(03),
                    telex(04),
                    standard(08),
                    private(09)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "If Isdn and if type of number is UNKNOWN or INERNATIONAL or NATIONAL
                or SUBSCRIBER  then a plan number is needed. UNKNOWN is 0 ,
                using 16 (0x10)to satisfy MDL requirement. We will AND  this field with
                0x0F before using it."
        DEFVAL  { unknown }
        ::= { wfIsdnLocalPhoneNumEntry 10 }

    END  -- Wellfleet-ISDN-MIB
-- @(#)WSCCS t/mibs-lapb.mib 1.1 8/30/95
Wellfleet-LAPB-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:44:43 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfDataLink
        FROM Wellfleet-COMMON-MIB;


    wfLapbTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfLapbEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "**********************************************************************
                LAPB MIB record
                 *********************************************************************"
        ::= { wfDataLink 8 }

    wfLapbEntry OBJECT-TYPE
        SYNTAX	WfLapbEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the LAPB table"
        INDEX	{ wfLapbLineNumber,
    		  wfLapbLLIndex }
        ::= { wfLapbTable 1 }

    WfLapbEntry ::= SEQUENCE {
    	    wfLapbDelete
    		INTEGER,
    	    wfLapbDisable
    		INTEGER,
    	    wfLapbState
    		INTEGER,
    	    wfLapbLineNumber
    		INTEGER,
    	    wfLapbLLIndex
    		INTEGER,
    	    wfLapbCct
    		INTEGER,
    	    wfLapbStationType
    		INTEGER,
    	    wfLapbControlField
    		INTEGER,
    	    wfLapbN1FrameSize
    		INTEGER,
    	    wfLapbKWindowSize
    		INTEGER,
    	    wfLapbN2RxmitCount
    		INTEGER,
    	    wfLapbT1AckTimer
    		INTEGER,
    	    wfLapbT2AckDelayTimer
    		INTEGER,
    	    wfLapbT3DisconnectTimer
    		INTEGER,
    	    wfLapbT4IdleTimer
    		INTEGER,
    	    wfLapbActionInitiate
    		INTEGER,
    	    wfLapbXidDisable
    		INTEGER,
    	    wfLapbCommandAddress
    		INTEGER,
    	    wfLapbResponseAddress
    		INTEGER,
    	    wfLapbWanProtocol
    		INTEGER,
    	    wfLapbRxOctets
    		Counter,
    	    wfLapbRxFrames
    		Counter,
    	    wfLapbTxOctets
    		Counter,
    	    wfLapbTxFrames
    		Counter,
    	    wfLapbReXmits
    		Counter,
    	    wfLapbRejectsTx
    		Counter,
    	    wfLapbRejectsRx
    		Counter,
    	    wfLapbFrameRejectsTx
    		Counter,
    	    wfLapbFrameRejectsRx
    		Counter,
    	    wfLapbRRsTx
    		Counter,
    	    wfLapbRRsRx
    		Counter,
    	    wfLapbRNRsTx
    		Counter,
    	    wfLapbRNRsRx
    		Counter,
    	    wfLapbResets
    		Counter,
    	    wfLapbNormalDisc
    		Counter,
    	    wfLapbAbnormalDisc
    		Counter,
    	    wfLapbSetupAllowed
    		Counter,
    	    wfLapbSetupRefused
    		Counter,
    	    wfLapbNetworkType
    		INTEGER,
    	    wfLapbIdleRRFrames
    		INTEGER
        }

    wfLapbDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfLapbEntry 1 }

    wfLapbDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfLapbEntry 2 }

    wfLapbState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line Driver state variable, Not Present, DSR Wait,
                Init, Down, Up"
        DEFVAL	{ notpresent }
        ::= { wfLapbEntry 3 }

    wfLapbLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier, Line Number, filled in by LAPB"
        ::= { wfLapbEntry 4 }

    wfLapbLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier, Lower Layer Index, filled in by LAPB"
        ::= { wfLapbEntry 5 }

    wfLapbCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "CCT number for this LAPB subsystem, it is associated with the driver
                or application running underneath it."
        ::= { wfLapbEntry 6 }

    wfLapbStationType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    dte(1),
    		    dce(2),
    		    dxe(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Identifies the desired station type of this interface. A value
                of DxE indicates XID enabled but not negotiation has not yet
                taken place."
        DEFVAL	{ dte }
        ::= { wfLapbEntry 7 }

    wfLapbControlField OBJECT-TYPE
        SYNTAX	INTEGER {
    		    modulo8(1),
    		    modulo128(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter establishes the desired size of the
                sequence numbers used to number frames."
        DEFVAL	{ modulo8 }
        ::= { wfLapbEntry 8 }

    wfLapbN1FrameSize OBJECT-TYPE
        SYNTAX	INTEGER(3..4500)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The default maximum N1 frame size desired in number of bytes
                for a frame transmitted by the DxE.  This excludes flags and
                0 bits inserted for transparency."
        DEFVAL	{ 1600 }
        ::= { wfLapbEntry 9 }

    wfLapbKWindowSize OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The default transmit and receive window size for this Interface.
                This is the maximum number of unacknowledged sequence frames that
                may be outstanding from this DxE at any one time."
        DEFVAL	{ 7 }
        ::= { wfLapbEntry 10 }

    wfLapbN2RxmitCount OBJECT-TYPE
        SYNTAX	INTEGER(1..64)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The default N2 retry count indicates the number of retransmission
                attempts which will be tried per frame before a line is determined
                to be down.  The retry count is max attempts following expiration of
                the T1 timer."
        DEFVAL	{ 10 }
        ::= { wfLapbEntry 11 }

    wfLapbT1AckTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..9999)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The default T1 timer for this interface. This specifies the maximum
                time in tenths of seconds to wait for an acknowledgment of a frame."
        DEFVAL	{ 30 }
        ::= { wfLapbEntry 12 }

    wfLapbT2AckDelayTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..9999)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The default T2 timer for this interface. This specifies the maximum
                time in seconds to wait before sending an acknowledgment for a
                sequenced frame.  A value of one means there will be no delay in
                acknowledgment generation."
        DEFVAL	{ 1 }
        ::= { wfLapbEntry 13 }

    wfLapbT3DisconnectTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..9999)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The T3 timer for this interface. This specifies the time in seconds
                to wait before considering the link disconnected.  A value of one
                indicates the link will be considered disconnected upon completion of
                the frame exchange to disconnect the link."
        DEFVAL	{ 60 }
        ::= { wfLapbEntry 14 }

    wfLapbT4IdleTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..9999)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The T4 timer for this interface. This specifies the maximum time in
                seconds to allow without frames being exchanged on the data link.
                Not implemented for this project."
        DEFVAL	{ 1 }
        ::= { wfLapbEntry 15 }

    wfLapbActionInitiate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    passive(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This identifies the action LAPB will take to initiate link set-up."
        DEFVAL	{ active }
        ::= { wfLapbEntry 16 }

    wfLapbXidDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "XID enable/disable parameter. This parameter is used to enable
                or disable transmission/reception of Test XID frames."
        DEFVAL	{ disabled }
        ::= { wfLapbEntry 17 }

    wfLapbCommandAddress OBJECT-TYPE
        SYNTAX	INTEGER {
    		    dte(1),
    		    dce(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The local command address parameter contains the DTE or DCE
                value expressed as a single octet."
        DEFVAL	{ dte }
        ::= { wfLapbEntry 18 }

    wfLapbResponseAddress OBJECT-TYPE
        SYNTAX	INTEGER {
    		    dte(3),
    		    dce(1)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The local response address parameter contains the DTE or DCE
                value expressed as a single octet."
        DEFVAL	{ dte }
        ::= { wfLapbEntry 19 }

    wfLapbWanProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    standard(1),
    		    x25(6)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "WAN protocol selection is provided via this parameter. The
                supported protocols can be selected per interface."
        DEFVAL	{ standard }
        ::= { wfLapbEntry 20 }

    wfLapbRxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets received without error"
        ::= { wfLapbEntry 21 }

    wfLapbRxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received without error"
        ::= { wfLapbEntry 22 }

    wfLapbTxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets transmitted without error"
        ::= { wfLapbEntry 23 }

    wfLapbTxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames transmitted without error"
        ::= { wfLapbEntry 24 }

    wfLapbReXmits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of retransmission occurances"
        ::= { wfLapbEntry 25 }

    wfLapbRejectsTx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of reject frames which were transmitted"
        ::= { wfLapbEntry 26 }

    wfLapbRejectsRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of reject frames which were received"
        ::= { wfLapbEntry 27 }

    wfLapbFrameRejectsTx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Frame Rejects transmitted"
        ::= { wfLapbEntry 28 }

    wfLapbFrameRejectsRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Frame Rejects received"
        ::= { wfLapbEntry 29 }

    wfLapbRRsTx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Receiver Ready frames transmitted"
        ::= { wfLapbEntry 30 }

    wfLapbRRsRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Receiver Ready frames received"
        ::= { wfLapbEntry 31 }

    wfLapbRNRsTx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Receiver Not Ready frames transmitted"
        ::= { wfLapbEntry 32 }

    wfLapbRNRsRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Receiver Not Ready frames received"
        ::= { wfLapbEntry 33 }

    wfLapbResets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Link Connection Resets"
        ::= { wfLapbEntry 34 }

    wfLapbNormalDisc OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of normal link disconnections"
        ::= { wfLapbEntry 35 }

    wfLapbAbnormalDisc OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of abnormal link disconnections"
        ::= { wfLapbEntry 36 }

    wfLapbSetupAllowed OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of successful link connections"
        ::= { wfLapbEntry 37 }

    wfLapbSetupRefused OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of unsuccessful link connections"
        ::= { wfLapbEntry 38 }

    wfLapbNetworkType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    gosip(1),
    		    net2(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The types GOSIP and NET2 are used in conjunction with the X.25 network"
        DEFVAL	{ net2 }
        ::= { wfLapbEntry 39 }

    wfLapbIdleRRFrames OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "XID enable/disable parameter. This parameter is used to enable
                or disable transmission/reception of Test XID frames."
        DEFVAL	{ off }
        ::= { wfLapbEntry 40 }

    END  -- Wellfleet-LAPB-MIB
-- @(#)WSCCS x/mibs-llc.mib 1.1 8/30/95
Wellfleet-LLC-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:44:48 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfLlcGroup
        FROM Wellfleet-COMMON-MIB;


    wfLlc		OBJECT IDENTIFIER ::= { wfLlcGroup 1 }

    wfLlcBaseDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- Create/Delete parameter. Default is created.
                - Users perform an SNMP SET operation on this
                - object in order to create/delete LLC. "
        DEFVAL	{ created }
        ::= { wfLlc 1 }

    wfLlcBaseDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- Enable/Disable parameter. Default is disabled.
                - Users perform an SNMP SET operation on this
                - object in order to enable/disable LLC. "
        DEFVAL	{ enabled }
        ::= { wfLlc 2 }

    wfLlcBaseState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- The current state of LLC service"
        DEFVAL	{ down }
        ::= { wfLlc 3 }

    wfLlcInterfaceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfLlcInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table that contains information about every
                interface that is associated with this
                LLC"
        ::= { wfLlcGroup 2 }

    wfLlcInterfaceEntry OBJECT-TYPE
        SYNTAX	WfLlcInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfLlcInterface."
        INDEX	{ wfLlcInterfaceCircuit }
        ::= { wfLlcInterfaceTable 1 }

    WfLlcInterfaceEntry ::= SEQUENCE {
    	    wfLlcInterfaceDelete
    		INTEGER,
    	    wfLlcInterfaceDisable
    		INTEGER,
    	    wfLlcInterfaceState
    		INTEGER,
    	    wfLlcInterfaceCircuit
    		INTEGER,
    	    wfLlcInterfaceLlc2CctId
    		INTEGER,
    	    wfLlc1InterfaceMaxUinfoSize
    		INTEGER,
    	    wfLlc1InterfaceMaxRetry
    		INTEGER,
    	    wfLlc1InterfaceTAckWait
    		INTEGER,
    	    wfLlc2InterfaceMaxInfoSize
    		INTEGER,
    	    wfLlc2InterfaceK
    		INTEGER,
    	    wfLlc2InterfaceN2
    		INTEGER,
    	    wfLlc2InterfaceN3
    		INTEGER,
    	    wfLlc2InterfaceTAckWait
    		INTEGER,
    	    wfLlc2InterfaceTReject
    		INTEGER,
    	    wfLlc2InterfaceTRemoteBusy
    		INTEGER,
    	    wfLlc2InterfaceTRspAck
    		INTEGER,
    	    wfLlc2InterfaceTIdle
    		INTEGER,
    	    wfLlc2InterfaceTPollCycle
    		INTEGER,
    	    wfLlcInterfaceMaxNumOfSap
    		INTEGER,
    	    wfLlcInterfaceMaxNumOfLink
    		INTEGER,
    	    wfLlcInterfaceDupAddrCheck
    		INTEGER,
    	    wfLlc2InterfaceRW
    		INTEGER,
    	    wfLlc2InterfaceTW
    		INTEGER,
    	    wfLlcInterfaceEncapsType
    		INTEGER,
    	    wfLlcInterfaceSrbRingId
    		INTEGER,
    	    wfLlcInterfaceFrVMask
    		OCTET STRING,
    	    wfLlc2InterfaceDynWin
    		INTEGER
        }

    wfLlcInterfaceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- Create/Delete parameter. Default is created.
                - Users perform an SNMP SET operation on this
                - object in order to create/delete an interface. "
        DEFVAL	{ created }
        ::= { wfLlcInterfaceEntry 1 }

    wfLlcInterfaceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "-
                - Enable/Disable parameter. Default is enabled.
                - Users perform an SNMP SET operation on this
                - object in order to enable/disable an interface."
        DEFVAL	{ enabled }
        ::= { wfLlcInterfaceEntry 2 }

    wfLlcInterfaceState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the interface."
        DEFVAL	{ down }
        ::= { wfLlcInterfaceEntry 3 }

    wfLlcInterfaceCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The llc1 circuit of this interface."
        ::= { wfLlcInterfaceEntry 4 }

    wfLlcInterfaceLlc2CctId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The llc2 circuit number assigned for this slot, line, and llc1 cct."
        ::= { wfLlcInterfaceEntry 5 }

    wfLlc1InterfaceMaxUinfoSize OBJECT-TYPE
        SYNTAX	INTEGER(1..5128)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- Maximum number of octets in UI PDU. "
        DEFVAL	{ 5128 }
        ::= { wfLlcInterfaceEntry 6 }

    wfLlc1InterfaceMaxRetry OBJECT-TYPE
        SYNTAX	INTEGER(1..2)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- Maximum retry limit. Specifeis the
                - maximum number of times that an XID
                - or TEST command PDU is sent following
                - the running out of the response timer
                - TResponse"
        DEFVAL	{ 2 }
        ::= { wfLlcInterfaceEntry 7 }

    wfLlc1InterfaceTAckWait OBJECT-TYPE
        SYNTAX	INTEGER(1..30)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- The amount of time during which the
                - LLC shall expect to receive an
                - an acknowledgment to a sent unnumbered
                - XID or TEST command PDU
                - time in seconds"
        DEFVAL	{ 30 }
        ::= { wfLlcInterfaceEntry 8 }

    wfLlc2InterfaceMaxInfoSize OBJECT-TYPE
        SYNTAX	INTEGER(1..5128)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- Max number of octets in an I Pdu "
        DEFVAL	{ 5128 }
        ::= { wfLlcInterfaceEntry 9 }

    wfLlc2InterfaceK OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- The wfLlc2InterfaceK parameter is no longer used.
                - It is replaced by the send window (wfLlc2InterfaceTW)
                - and the receive window (wfLlc2InterfaceRW) parameters."
        DEFVAL	{ 7 }
        ::= { wfLlcInterfaceEntry 10 }

    wfLlc2InterfaceN2 OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- Maximum number of transmissions. This specifies the
                - max number of times that a PDU is sent following the
                - elapse of the ..
                - acknowledgment timer
                - poll timer
                - reject timer"
        DEFVAL	{ 10 }
        ::= { wfLlcInterfaceEntry 11 }

    wfLlc2InterfaceN3 OBJECT-TYPE
        SYNTAX	INTEGER(1..2)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- Maximum number of received I PDUs before
                - sending a local acknowledgment to the
                - transmitter"
        DEFVAL	{ 1 }
        ::= { wfLlcInterfaceEntry 12 }

    wfLlc2InterfaceTAckWait OBJECT-TYPE
        SYNTAX	INTEGER(1..15)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- Acknowledment timer for  TX window
                - rotation
                - time in seconds"
        DEFVAL	{ 1 }
        ::= { wfLlcInterfaceEntry 13 }

    wfLlc2InterfaceTReject OBJECT-TYPE
        SYNTAX	INTEGER(1..30)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- Reject Timer
                - time in seconds"
        DEFVAL	{ 1 }
        ::= { wfLlcInterfaceEntry 14 }

    wfLlc2InterfaceTRemoteBusy OBJECT-TYPE
        SYNTAX	INTEGER(1..60)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- busy state timer
                - time in seconds"
        DEFVAL	{ 60 }
        ::= { wfLlcInterfaceEntry 15 }

    wfLlc2InterfaceTRspAck OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- Local response timer for remote TX
                - window rotation
                - response in seconds"
        DEFVAL	{ 10 }
        ::= { wfLlcInterfaceEntry 16 }

    wfLlc2InterfaceTIdle OBJECT-TYPE
        SYNTAX	INTEGER(1..120)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- Idle timer
                - in seconds"
        DEFVAL	{ 120 }
        ::= { wfLlcInterfaceEntry 17 }

    wfLlc2InterfaceTPollCycle OBJECT-TYPE
        SYNTAX	INTEGER(1..30)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- P/F bit cycle timer (link activity)
                - time in secs"
        DEFVAL	{ 30 }
        ::= { wfLlcInterfaceEntry 18 }

    wfLlcInterfaceMaxNumOfSap OBJECT-TYPE
        SYNTAX	INTEGER(4..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- maximum number of saps per LLC service
                - Max = 255 and Min = 4"
        DEFVAL	{ 255 }
        ::= { wfLlcInterfaceEntry 19 }

    wfLlcInterfaceMaxNumOfLink OBJECT-TYPE
        SYNTAX	INTEGER(4..5000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- Maximum number of end to end connections
                - per LLC service
                - Max = 5000 and Min = 4 Default:5000"
        DEFVAL	{ 255 }
        ::= { wfLlcInterfaceEntry 20 }

    wfLlcInterfaceDupAddrCheck OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- Flag to force duplicate address check
                - Default is DISABLED"
        DEFVAL	{ disabled }
        ::= { wfLlcInterfaceEntry 21 }

    wfLlc2InterfaceRW OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- Maximum number of outstanding ( = unacknowledged)
                - receive I PDUs. This cannot exceed 127. "
        DEFVAL	{ 7 }
        ::= { wfLlcInterfaceEntry 22 }

    wfLlc2InterfaceTW OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- Maximum number of outstanding ( = unacknowledged)
                - transmit I PDUs. This cannot exceed 127.
                - This value acts as a default window size, when no other
                - window size has been agreed upon through
                - an XID3 exchange procedure."
        DEFVAL	{ 7 }
        ::= { wfLlcInterfaceEntry 23 }

    wfLlcInterfaceEncapsType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(1),
    		    tring(2),
    		    csmacd(3),
    		    srb(4),
    		    fr(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This indicates which encapsulation technique
                should be used by LLC. "
        DEFVAL	{ default }
        ::= { wfLlcInterfaceEntry 24 }

    wfLlcInterfaceSrbRingId OBJECT-TYPE
        SYNTAX	INTEGER(1..4095)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This indicates a ring number to be used by
                LLC if the encapsulation technique is SRB.
                It must be unique in the SRB network."
        ::= { wfLlcInterfaceEntry 25 }

    wfLlcInterfaceFrVMask OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- LLC Frame Relay Virtual Mac Address Mask.
                - This Mask specifies the upper 2-4 bytes of the
                - destination mac address.  The lower remaining
                - bytes specifies the DLCI to be used."
        ::= { wfLlcInterfaceEntry 26 }

    wfLlc2InterfaceDynWin OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- Enable/Disable dynamic window. The default is enabled."
        DEFVAL	{ enabled }
        ::= { wfLlcInterfaceEntry 27 }

    wfLlcSapTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfLlcSapEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "- llc sap table"
        ::= { wfLlcGroup 3 }

    wfLlcSapEntry OBJECT-TYPE
        SYNTAX	WfLlcSapEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfLlcSapTable."
        INDEX	{ wfLlcSapCircuit,
    		  wfLlcSapValue }
        ::= { wfLlcSapTable 1 }

    WfLlcSapEntry ::= SEQUENCE {
    	    wfLlcSapCircuit
    		INTEGER,
    	    wfLlcSapValue
    		INTEGER
        }

    wfLlcSapCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- The llc1  circuit  that this sap is on"
        ::= { wfLlcSapEntry 1 }

    wfLlcSapValue OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Sap Value"
        ::= { wfLlcSapEntry 2 }

    wfLlcLinkTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfLlcLinkEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "- Link table, indexed by slot, circuit, da, sa, dsap, ssap"
        ::= { wfLlcGroup 4 }

    wfLlcLinkEntry OBJECT-TYPE
        SYNTAX	WfLlcLinkEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfLlcLinkTable."
        INDEX	{ wfLlcLinkCircuit,
    		  wfLlcLinkDestMadr,
    		  wfLlcLinkSrcMadr,
    		  wfLlcLinkDsap,
    		  wfLlcLinkSsap }
        ::= { wfLlcLinkTable 1 }

    WfLlcLinkEntry ::= SEQUENCE {
    	    wfLlcLinkCircuit
    		INTEGER,
    	    wfLlcLinkDestMadr
    		OCTET STRING,
    	    wfLlcLinkSrcMadr
    		OCTET STRING,
    	    wfLlcLinkDsap
    		INTEGER,
    	    wfLlcLinkSsap
    		INTEGER,
    	    wfLlcInfoRxCnt
    		Counter,
    	    wfLlcInfoTxCnt
    		Counter,
    	    wfLlcInfoReXmitCnt
    		Counter,
    	    wfLlcByteInfoRxCnt
    		Counter,
    	    wfLlcByteInfoTxCnt
    		Counter,
    	    wfLlcRrRxCnt
    		Counter,
    	    wfLlcRrTxCnt
    		Counter,
    	    wfLlcRnrRxCnt
    		Counter,
    	    wfLlcRnrTxCnt
    		Counter,
    	    wfLlcRejRxCnt
    		Counter,
    	    wfLlcRejTxCnt
    		Counter,
    	    wfLlcFrmrRxCnt
    		Counter,
    	    wfLlcFrmrTxCnt
    		Counter,
    	    wfLlcFlowDefersCnt
    		Counter,
    	    wfLlcWaitAckTimeouts
    		Counter,
    	    wfLlcRejectTimeouts
    		Counter,
    	    wfLlcPollCycleTimeouts
    		Counter,
    	    wfLlcStateChangeCnt
    		Counter,
    	    wfLlcLastChangeReason
    		Counter,
    	    wfLlcCurrentState
    		Counter
        }

    wfLlcLinkCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- The llc1 circuit that this  da/sa/dsap/ssap pair is on."
        ::= { wfLlcLinkEntry 1 }

    wfLlcLinkDestMadr OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Destination and source Mac addresses"
        ::= { wfLlcLinkEntry 2 }

    wfLlcLinkSrcMadr OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- source Mac address"
        ::= { wfLlcLinkEntry 3 }

    wfLlcLinkDsap OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Destination and source sap's"
        ::= { wfLlcLinkEntry 4 }

    wfLlcLinkSsap OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Source Sap "
        ::= { wfLlcLinkEntry 5 }

    wfLlcInfoRxCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for I Pdus rcvd "
        ::= { wfLlcLinkEntry 6 }

    wfLlcInfoTxCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for I Pdus sent "
        ::= { wfLlcLinkEntry 7 }

    wfLlcInfoReXmitCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for I Pdus re-xmitted"
        ::= { wfLlcLinkEntry 8 }

    wfLlcByteInfoRxCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for unnnumbered information
                - Bytes rcvd"
        ::= { wfLlcLinkEntry 9 }

    wfLlcByteInfoTxCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for unnnumbered information
                - Bytes sent"
        ::= { wfLlcLinkEntry 10 }

    wfLlcRrRxCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for RR Pdus rcvd "
        ::= { wfLlcLinkEntry 11 }

    wfLlcRrTxCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for RR Pdus Xmted"
        ::= { wfLlcLinkEntry 12 }

    wfLlcRnrRxCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for RNR Pdus rcvd "
        ::= { wfLlcLinkEntry 13 }

    wfLlcRnrTxCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for RNR Pdus sent "
        ::= { wfLlcLinkEntry 14 }

    wfLlcRejRxCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for REJ pdus rcvd"
        ::= { wfLlcLinkEntry 15 }

    wfLlcRejTxCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for REJ pdus xmted"
        ::= { wfLlcLinkEntry 16 }

    wfLlcFrmrRxCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for frame reject rcvd"
        ::= { wfLlcLinkEntry 17 }

    wfLlcFrmrTxCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for frame reject sent"
        ::= { wfLlcLinkEntry 18 }

    wfLlcFlowDefersCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for the number of times LLC is unable
                - to xmit due to a percieved remote busy condition
                - or to lack of RX window space"
        ::= { wfLlcLinkEntry 19 }

    wfLlcWaitAckTimeouts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for expiration of acknowledgment
                - timers"
        ::= { wfLlcLinkEntry 20 }

    wfLlcRejectTimeouts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for the expiration of reject
                - timeouts"
        ::= { wfLlcLinkEntry 21 }

    wfLlcPollCycleTimeouts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for the expiration of P/F cycle timer"
        ::= { wfLlcLinkEntry 22 }

    wfLlcStateChangeCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for number of LLC flow state changes"
        ::= { wfLlcLinkEntry 23 }

    wfLlcLastChangeReason OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Counter for the most recent incrementing of the
                - flow state change counter "
        ::= { wfLlcLinkEntry 24 }

    wfLlcCurrentState OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "- Current flow state of the LLC link station"
        ::= { wfLlcLinkEntry 25 }

    wfLlc2TrafficFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfLlc2TrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "LLC2 Traffic Filters"
        ::= { wfLlcGroup 8 }

    wfLlc2TrafficFilterEntry OBJECT-TYPE
        SYNTAX	WfLlc2TrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in WfLLC2TrafficFilterTable."
        INDEX	{ wfLlc2TrafficFilterCircuit,
    		  wfLlc2TrafficFilterRuleNumber,
    		  wfLlc2TrafficFilterFragment }
        ::= { wfLlc2TrafficFilterTable 1 }

    WfLlc2TrafficFilterEntry ::= SEQUENCE {
    	    wfLlc2TrafficFilterCreate
    		INTEGER,
    	    wfLlc2TrafficFilterEnable
    		INTEGER,
    	    wfLlc2TrafficFilterStatus
    		INTEGER,
    	    wfLlc2TrafficFilterCounter
    		Counter,
    	    wfLlc2TrafficFilterDefinition
    		OCTET STRING,
    	    wfLlc2TrafficFilterReserved
    		INTEGER,
    	    wfLlc2TrafficFilterCircuit
    		INTEGER,
    	    wfLlc2TrafficFilterRuleNumber
    		INTEGER,
    	    wfLlc2TrafficFilterFragment
    		INTEGER,
    	    wfLlc2TrafficFilterName
    		DisplayString
        }

    wfLlc2TrafficFilterCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the existence of the traffic filter rule:
                created - traffic filter exists
                delete - traffic filter does not exist and can be deleted."
        DEFVAL	{ created }
        ::= { wfLlc2TrafficFilterEntry 1 }

    wfLlc2TrafficFilterEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether or not the traffic filter rule should be used:
                enabled - activate the rule.
                disabled - inactivate the rule."
        DEFVAL	{ enabled }
        ::= { wfLlc2TrafficFilterEntry 2 }

    wfLlc2TrafficFilterStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    error(2),
    		    inactive(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines the current status of the traffic filter:
                inactive - the rule is not in use.
                active - the rule is being used.
                error - the application detected an error in the rule."
        DEFVAL	{ inactive }
        ::= { wfLlc2TrafficFilterEntry 3 }

    wfLlc2TrafficFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets that have
                matched this rule."
        ::= { wfLlc2TrafficFilterEntry 4 }

    wfLlc2TrafficFilterDefinition OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The filter rule definition."
        ::= { wfLlc2TrafficFilterEntry 5 }

    wfLlc2TrafficFilterReserved OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reserved field."
        ::= { wfLlc2TrafficFilterEntry 6 }

    wfLlc2TrafficFilterCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ID of the Bridge Circuit to which the
                filter is applied."
        ::= { wfLlc2TrafficFilterEntry 7 }

    wfLlc2TrafficFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ID for the rule."
        ::= { wfLlc2TrafficFilterEntry 8 }

    wfLlc2TrafficFilterFragment OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fragment number - for large rules."
        ::= { wfLlc2TrafficFilterEntry 9 }

    wfLlc2TrafficFilterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "name of the rule number"
        ::= { wfLlc2TrafficFilterEntry 10 }

    wfLlcDlciTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfLlcDlciEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ljd: This table defines which DLCI's a LLC interface has access
                to and the appropriate mac address mappings."
        ::= { wfLlcGroup 9 }

    wfLlcDlciEntry OBJECT-TYPE
        SYNTAX	WfLlcDlciEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfLlcDlciTable."
        INDEX	{ wfLlcDlciCct,
    		  wfLlcDlciNum }
        ::= { wfLlcDlciTable 1 }

    WfLlcDlciEntry ::= SEQUENCE {
    	    wfLlcDlciDelete
    		INTEGER,
    	    wfLlcDlciCct
    		INTEGER,
    	    wfLlcDlciNum
    		INTEGER,
    	    wfLlcDlciLocalMac
    		OCTET STRING,
    	    wfLlcDlciRemoteMac
    		OCTET STRING
        }

    wfLlcDlciDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created. Users perform an SNMP SET
                operation on this object in order to create/delete a DLSw Local Device"
        DEFVAL	{ created }
        ::= { wfLlcDlciEntry 1 }

    wfLlcDlciCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The LLC interface circuit on which this mapping is configured."
        ::= { wfLlcDlciEntry 2 }

    wfLlcDlciNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The dlci number for this mapping."
        ::= { wfLlcDlciEntry 3 }

    wfLlcDlciLocalMac OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Local MAC address of the end station to be mapped.
                In-coming requests on this DLCI will be mapped to the specified
                Local Mac address. Values are standard MSB Token Ring MAC addresses."
        ::= { wfLlcDlciEntry 4 }

    wfLlcDlciRemoteMac OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Remote MAC address mapping. Out-going requests specifing
                this mac address will be mapped to the DLCI.
                Values are standard MSB Token Ring MAC addresses."
        ::= { wfLlcDlciEntry 5 }

    END  -- Wellfleet-LLC-MIB
-- @(#)WSCCS j/mibs-lnm.mib 1.1 8/30/95
Wellfleet-LNM-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:44:57 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfLanManagerGroup
        FROM Wellfleet-COMMON-MIB;


    wfLnm		OBJECT IDENTIFIER ::= { wfLanManagerGroup 1 }

    wfLnmDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete the LNM Servers subsystem."
        DEFVAL	{ created }
        ::= { wfLnm 1 }

    wfLnmDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable the LNM Servers subsystem."
        DEFVAL	{ enabled }
        ::= { wfLnm 2 }

    wfLnmState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the LNM Servers subsystem."
        DEFVAL	{ down }
        ::= { wfLnm 3 }

    wfLnmLnmSetsDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Allow or disallow Lan Manager to SET MIB values"
        DEFVAL	{ disabled }
        ::= { wfLnm 4 }

    wfLnmInternalLanId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The internal LAN id matches exactly wfBrSrBaseInternalLanId
                in the source routing mib.  It is written here, but not
                displayed."
        ::= { wfLnm 5 }

    wfLnmBridgeId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The bridge id matches exactly wfBrSrBaseBridgeId
                in the source routing mib.  It is written here, but not
                displayed."
        ::= { wfLnm 6 }

    wfLnmInterfaceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfLnmInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "table of instances"
        ::= { wfLanManagerGroup 2 }

    wfLnmInterfaceEntry OBJECT-TYPE
        SYNTAX	WfLnmInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the LNM table"
        INDEX	{ wfLnmInterfaceMacCircuit }
        ::= { wfLnmInterfaceTable 1 }

    WfLnmInterfaceEntry ::= SEQUENCE {
    	    wfLnmInterfaceDelete
    		INTEGER,
    	    wfLnmInterfaceDisable
    		INTEGER,
    	    wfLnmInterfaceCircuit
    		INTEGER,
    	    wfLnmInterfaceMacCircuit
    		INTEGER,
    	    wfLnmInterfaceRemoteMac
    		OCTET STRING,
    	    wfLnmInterfaceLrmDisable
    		INTEGER,
    	    wfLnmInterfaceLrmState
    		INTEGER,
    	    wfLnmInterfaceLbsState
    		INTEGER,
    	    wfLnmInterfaceRemDisable
    		INTEGER,
    	    wfLnmInterfaceRemState
    		INTEGER,
    	    wfLnmInterfaceRpsDisable
    		INTEGER,
    	    wfLnmInterfaceRpsState
    		INTEGER,
    	    wfLnmInterfaceCrsDisable
    		INTEGER,
    	    wfLnmInterfaceCrsState
    		INTEGER,
    	    wfLnmInterfaceCtrlMgrPswd
    		DisplayString,
    	    wfLnmInterfaceOb1MgrPswd
    		DisplayString,
    	    wfLnmInterfaceOb2MgrPswd
    		DisplayString,
    	    wfLnmInterfaceOb3MgrPswd
    		DisplayString,
    	    wfLnmInterfaceCtrlMgrMac
    		OCTET STRING,
    	    wfLnmInterfaceOb1MgrMac
    		OCTET STRING,
    	    wfLnmInterfaceOb2MgrMac
    		OCTET STRING,
    	    wfLnmInterfaceOb3MgrMac
    		OCTET STRING,
    	    wfLnmInterfaceWghtTrshld
    		INTEGER,
    	    wfLnmInterfaceLrmCngstnErrs
    		Counter,
    	    wfLnmInterfaceLrmRxErrors
    		Counter,
    	    wfLnmInterfaceRemRxErrors
    		Counter,
    	    wfLnmInterfaceRpsRxErrors
    		Counter,
    	    wfLnmInterfaceCrsRxErrors
    		Counter,
    	    wfLnmInterfaceLbsRxErrors
    		Counter
        }

    wfLnmInterfaceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A flag to allow an entire row to be deleted"
        DEFVAL	{ created }
        ::= { wfLnmInterfaceEntry 1 }

    wfLnmInterfaceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "- Enable/Disable parameter. Default is enabled.
                - Users perform an SNMP SET operation on this
                - object in order to enable/disable an interface."
        DEFVAL	{ enabled }
        ::= { wfLnmInterfaceEntry 2 }

    wfLnmInterfaceCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "circuit number for LLC2 - filled in by Site Man"
        ::= { wfLnmInterfaceEntry 3 }

    wfLnmInterfaceMacCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "circuit number for MAC"
        ::= { wfLnmInterfaceEntry 4 }

    wfLnmInterfaceRemoteMac OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Site Man will suggest a value, but the user can override."
        ::= { wfLnmInterfaceEntry 5 }

    wfLnmInterfaceLrmDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "LRM server can be turned on/off"
        DEFVAL	{ enabled }
        ::= { wfLnmInterfaceEntry 6 }

    wfLnmInterfaceLrmState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "There is only a state - enabling LNM Servers automatically enables LRM"
        DEFVAL	{ notpresent }
        ::= { wfLnmInterfaceEntry 7 }

    wfLnmInterfaceLbsState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "There is no corresponding enable for LBS"
        DEFVAL	{ notpresent }
        ::= { wfLnmInterfaceEntry 8 }

    wfLnmInterfaceRemDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "REM server can be turned on/off"
        DEFVAL	{ enabled }
        ::= { wfLnmInterfaceEntry 9 }

    wfLnmInterfaceRemState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "REM state parameter - can be active or not"
        DEFVAL	{ notpresent }
        ::= { wfLnmInterfaceEntry 10 }

    wfLnmInterfaceRpsDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "RPS server can be turned on/off"
        DEFVAL	{ enabled }
        ::= { wfLnmInterfaceEntry 11 }

    wfLnmInterfaceRpsState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "RPS state - actively forwarding to LAN Manager, or only collecting stats"
        DEFVAL	{ notpresent }
        ::= { wfLnmInterfaceEntry 12 }

    wfLnmInterfaceCrsDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "CRS server can be turned on/off"
        DEFVAL	{ enabled }
        ::= { wfLnmInterfaceEntry 13 }

    wfLnmInterfaceCrsState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "CRS state - actively forwarding to LAN Manager, or only collecting stats"
        DEFVAL	{ notpresent }
        ::= { wfLnmInterfaceEntry 14 }

    wfLnmInterfaceCtrlMgrPswd OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Controlling LAN Manager Password; default = all 0s"
        ::= { wfLnmInterfaceEntry 15 }

    wfLnmInterfaceOb1MgrPswd OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Observing LAN Manager Password; default = all 0s"
        ::= { wfLnmInterfaceEntry 16 }

    wfLnmInterfaceOb2MgrPswd OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Observing LAN Manager Password; default = all 0s"
        ::= { wfLnmInterfaceEntry 17 }

    wfLnmInterfaceOb3MgrPswd OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Observing LAN Manager Password; default = all 0s"
        ::= { wfLnmInterfaceEntry 18 }

    wfLnmInterfaceCtrlMgrMac OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Controlling LAN Manager Location; default = all 0s"
        ::= { wfLnmInterfaceEntry 19 }

    wfLnmInterfaceOb1MgrMac OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Observing LAN Manager Location; default = all 0s"
        ::= { wfLnmInterfaceEntry 20 }

    wfLnmInterfaceOb2MgrMac OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Observing LAN Manager Location; default = all 0s"
        ::= { wfLnmInterfaceEntry 21 }

    wfLnmInterfaceOb3MgrMac OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Observing LAN Manager Location; default = all 0s"
        ::= { wfLnmInterfaceEntry 22 }

    wfLnmInterfaceWghtTrshld OBJECT-TYPE
        SYNTAX	INTEGER(10..256)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Error rate threshold - defaults to 128"
        DEFVAL	{ 128 }
        ::= { wfLnmInterfaceEntry 23 }

    wfLnmInterfaceLrmCngstnErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Measure the number of packets LRM drops"
        ::= { wfLnmInterfaceEntry 24 }

    wfLnmInterfaceLrmRxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Measure the number of packets LRM can't parse"
        ::= { wfLnmInterfaceEntry 25 }

    wfLnmInterfaceRemRxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Measure the number of packets REM can't parse"
        ::= { wfLnmInterfaceEntry 26 }

    wfLnmInterfaceRpsRxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Measure the number of packets RPS can't parse"
        ::= { wfLnmInterfaceEntry 27 }

    wfLnmInterfaceCrsRxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Measure the number of packets CRS can't parse"
        ::= { wfLnmInterfaceEntry 28 }

    wfLnmInterfaceLbsRxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Measure the number of packets LBS can't parse"
        ::= { wfLnmInterfaceEntry 29 }

    END  -- Wellfleet-LNM-MIB
-- @(#)WSCCS b/mibs-loader.mib 1.4 10/26/95
Wellfleet-LOADER-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:45:02 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfSoftwareConfig
        FROM Wellfleet-COMMON-MIB;


    wfProtocols	OBJECT IDENTIFIER ::= { wfSoftwareConfig 1 }

    wfIPROTOLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the IP components on
                slots 1-14.  The MSBit represents slot 1, the next most
                significant bit represents slot 2, and so forth."
        ::= { wfProtocols 1 }

    wfDECNETLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the DECNet router on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents
                slot 2, and so forth."
        ::= { wfProtocols 2 }

    wfATLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the AppleTalk router on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents
                slot 2, and so forth."
        ::= { wfProtocols 3 }

    wfXNSLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the XNS router on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents
                slot 2, and so forth."
        ::= { wfProtocols 4 }

    wfIPXLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the IPX router on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents
                slot 2, and so forth."
        ::= { wfProtocols 5 }

    wfOSILoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the ISO router on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents
                slot 2, and so forth."
        ::= { wfProtocols 6 }

    wfX25DTELoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the X.25 DTE protocol on slots 1-14. The
                MSBit represents slot 1, the next most significant bit
                represents slot 2, and so forth."
        ::= { wfProtocols 7 }

    wfX25DCELoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the X.25 DCE protocol on slots 1-14. The
                MSBit represents slot 1, the next most significant bit
                represents slot 2, and so forth."
        ::= { wfProtocols 8 }

    wfVINESLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the VINES router on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents
                slot 2, and so forth."
        ::= { wfProtocols 9 }

    wfFRLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the Frame Relay master on slots 1-14. The
                MSBit represents slot 1, and so forth."
        ::= { wfProtocols 10 }

    wfRARPLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading Reverse ARP master on slots 1-14. The
                MSBit represents slot 1, and so forth."
        ::= { wfProtocols 11 }

    wfATMLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the ATM master on slots 1-14. The
                MSBit represents slot 1, and so forth."
        ::= { wfProtocols 12 }

    wfDLSLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the DLS master on slots 1-14. The
                MSBit represents slot 1, and so forth."
        ::= { wfProtocols 13 }

    wfLNMLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the LNM master on slots 1-14. The
                MSBit represents slot 1, and so forth."
        ::= { wfProtocols 14 }

    wfTelnetLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the Telnet protocol on slots 1-14. The
                MSBit represents slot 1, and so forth."
        ::= { wfProtocols 15 }

    wfTFTPLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the TFTP protocol on slots 1-14. The
                MSBit represents slot 1, and so forth."
        ::= { wfProtocols 16 }

    wfSNMPLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the SNMP protocol on slots 1-14. The
                MSBit represents slot 1, and so forth."
        ::= { wfProtocols 17 }

    wfTCPLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the TCP protocol on slots 1-14. The
                MSBit represents slot 1, and so forth."
        ::= { wfProtocols 18 }

    wfBGPLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the BGP protocol on slots 1-14. The
                MSBit represents slot 1, and so forth."
        ::= { wfProtocols 19 }

    wfEGPLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the EGP protocol on slots 1-14. The
                MSBit represents slot 1, and so forth."
        ::= { wfProtocols 20 }

    wfOSPFLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the OSPF protocol on slots 1-14. The
                MSBit represents slot 1, and so forth."
        ::= { wfProtocols 21 }

    wfWPROXYLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the WPROXY protocols on slots 1-14. The
                MSBit represents slot 1, and so forth."
        ::= { wfProtocols 22 }

    wfLLC2Load OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the LLC2 master on slots 1-14. The
                MSBit represents slot 1, and so forth."
        ::= { wfProtocols 23 }

    wfSMDSLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the SMDS protocol on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 24 }

    wfPPPLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading PPP on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 25 }

    wfPktCaptureLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading Pcap on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 26 }

    wfFRSWCNGCLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading FrswCngc on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 27 }

    wfSWPROXYLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading Switch Proxy on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 28 }

    wfFRSWLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading FRSW on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 29 }

    wfSWSMDSLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading SWSMDS on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 30 }

    wfNBASELoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading NBASE on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 31 }

    wfSDLCLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading SDLC on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 32 }

    wfTNCLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading Outbound Telnet on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 33 }

    wfLAPBLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the LAPB protocol on slots 1-14. The
                MSBit represents slot 1, the next most significant bit
                represents slot 2, and so forth."
        ::= { wfProtocols 34 }

    wfDebugLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading Debug on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 35 }

    wfNBIPLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading NBIP on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 36 }

    wfATMCsLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading ATM master on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 37 }

    wfDvmrpLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading DVMRP on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 38 }

    wfIgmpLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading IGMP on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 39 }

    wfISDNLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading ISDN on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 40 }

    wfLMLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading LM on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 41 }

    wfPingLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading PING on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 42 }

    wfAPPNCpLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the APPN CP soloist on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 43 }

    wfAPPNLsLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the APPN LS gates on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 44 }

    wfWcpLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the WCP control gate on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 45 }

    wfFTPLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the FTP protocol on slots 1-14. The
                MSBit represents slot 1, and so forth."
        ::= { wfProtocols 46 }

    wfARPLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading ARP on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 47 }

    wfSYSLLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading SYSLOG on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 48 }

    wfBGPRSLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading BGP Route Server on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 49 }

    wfATMLeLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading ATM LE on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 50 }

    wfCRMLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading Circuit Resource Manager on slots 1-14. The
                MSBit represents slot 1, and so forth."
        ::= { wfProtocols 51 }

    wfIPEXLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading IPEX on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 52 }

    wfSt2Load OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading ST2 on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 53 }

    wfNLSPLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading NLSP on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 54 }

    wfSTATSLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading STATS on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 55 }

    wfNPTLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading STATS on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 56 }

    wfRREDUNDLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading RREDUND on slots 1-14. The MSBit
                represents slot 1, and so forth."
        ::= { wfProtocols 57 }

    wfATMSigLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading ATM signaling on slots 1-14. The
                MSBit represents slot 1, the next most significant bit represents
                slot 2, and so forth."
        ::= { wfProtocols 58 }

    wfIPv6Load OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading IPv6 signaling on slots 1-14. The
                MSBit represents slot 1, the next most significant bit represents
                slot 2, and so forth."
        ::= { wfProtocols 59 }

    wfBOTLoad OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
             "Bit mask for loading BOT signaling on slots 1-14. The
             MSBit represents slot 1, the next most significant bit represents
             slot 2, and so forth."
        ::= { wfProtocols 60 }

    wfPimLoad OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
             "Bit mask for loading Protocol Independant Multicast (PIM)
             on slots 1-14. The MSBit represents slot 1, the next most
             significant bit represents slot 2, and so forth."
        ::= { wfProtocols 61 }


    wfLinkModules	OBJECT IDENTIFIER ::= { wfSoftwareConfig 2 }

    wfENETIILoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the Ethernet II driver on slots 1-14. The
                MSBit represents slot 1, the next most significant bit
                represents slot 2, and so forth."
        ::= { wfLinkModules 1 }

    wfQENETLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the Quad Ethernet driver on slots 1-14. The
                MSBit represents slot 1, the next most significant bit
                represents slot 2, and so forth."
        ::= { wfLinkModules 2 }

    wfFDDILoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the FDDI driver on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents slot 2
                and so forth."
        ::= { wfLinkModules 3 }

    wfDSDELoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the Dual Sync - Dual Enet driver on slots 1-14.
                The MSBit represents slot 1, the next most significant bit
                represents slot 2, and so forth."
        ::= { wfLinkModules 4 }

    wfDSDEIILoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the Dual Sync - Dual Enet II driver on slots
                1-14.  The MSBit represents slot 1, the next most significant
                bit represents slot 2, and so forth."
        ::= { wfLinkModules 5 }

    wfQSYNCLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the Quad Sync driver on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents
                slot 2, and so forth."
        ::= { wfLinkModules 6 }

    wfDTLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the Dual Token driver on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents slot 2
                and so forth."
        ::= { wfLinkModules 7 }

    wfDSTLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the DST driver on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents slot 2
                and so forth."
        ::= { wfLinkModules 8 }

    wfT1IILoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the T1 II driver on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents slot 2
                and so forth."
        ::= { wfLinkModules 9 }

    wfE1IILoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the E1 II driver on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents slot 2
                and so forth."
        ::= { wfLinkModules 10 }

    wfHSSILoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the HSSI driver on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents slot 2
                and so forth."
        ::= { wfLinkModules 11 }

    wfFNSDSELoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the FNSDSE driver on slot 2 (FNES Only). The MSBit
                represents slot 1, the next most significant bit represents slot 2
                and so forth."
        ::= { wfLinkModules 12 }

    wfFNSDSDTLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the FNSDSDT driver on slot 2 (FNTS Only). The MSBit
                represents slot 1, the next most significant bit represents slot 2
                and so forth."
        ::= { wfLinkModules 13 }

    wfMCT1Load OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the MCT1 driver on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents slot 2
                and so forth."
        ::= { wfLinkModules 14 }

    wfANLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the AN (AccessNode) driver. The MSBit represents slot 1,
                the next most significant bit represents slot 2 and so forth."
        ::= { wfLinkModules 15 }

    wfFNSDSETLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the FNSDSET (ie. Fibermux IN Special) driver on
                slot 2 (IN Only). The MSBit represents slot 1, the next most
                significant bit represents slot 2 and so forth."
        ::= { wfLinkModules 16 }

    wfMCT1E1Load OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the MCT1/E1 driver on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents slot 2
                and so forth."
        ::= { wfLinkModules 17 }

    wfEFDDILoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the EFDDI (ie. QENET/FDDI LANNET IN) module
                driver on slot 2 (IN Only)."
        ::= { wfLinkModules 18 }

    wfHLSLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the Hughes LAN Systems Module driver on
                slot 2 (IN Only)."
        ::= { wfLinkModules 19 }

    wfChipcomLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the Chipcom Module driver on
                slot 2 (IN Only)."
        ::= { wfLinkModules 20 }

    wfAtmcLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the ATMC driver on the ARE in slots 1-14.
                The MSBit represents slot 1, the next most significant bit
                represents slot 2 and so forth."
        ::= { wfLinkModules 21 }

    wfHDWANLMLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the hdwanlm module driver on
                slots 1-14"
        ::= { wfLinkModules 22 }

    wfDE100Load OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the DE100 (dual ethernet 100 MB) driver on
                slots 1-14. The MSBit represents slot 1, the next most significant
                bit represents slot 2 and so forth."
        ::= { wfLinkModules 23 }

    wfAtmc5000Load OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the ATMC 5000 AH driver on the ARE in slots 1-14.
                slots 1-14. The MSBit represents slot 1, the next most significant
                bit represents slot 2 and so forth."
        ::= { wfLinkModules 24 }

    wfDrivers	OBJECT IDENTIFIER ::= { wfSoftwareConfig 3 }

    wfLANCELoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the LANCE chip driver on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents slot 2
                and so forth."
        ::= { wfDrivers 1 }

    wfILACCLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the ILACC chip driver on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents slot 2
                and so forth."
        ::= { wfDrivers 2 }

    wfFSILoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the FDDI System Interface (FSI) chip driver on
                slots 1-14. The MSBit represents slot 1, the next most significant
                bit represents slot 2 and so forth. This attribute shall be used to
                configure the FSI chip driver on the appropriate slots for FDDI only
                (see wfHSSIFSILoad for other usage)."
        ::= { wfDrivers 3 }

    wfTMS380Load OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the TMS380 chip driver on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents slot 2
                and so forth."
        ::= { wfDrivers 4 }

    wfMK5025Load OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the MK5025 chip driver on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents slot 2
                and so forth."
        ::= { wfDrivers 5 }

    wfDS2180Load OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the DS2180 chip driver on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents slot 2
                and so forth."
        ::= { wfDrivers 6 }

    wfDS2181Load OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the DS2181 chip driver on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents slot 2
                and so forth."
        ::= { wfDrivers 7 }

    wfDEFALoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the AM99C10 chip driver on slots 1-14. The MSBit
                represents slot 1, the next most significant bit represents slot 2
                and so forth. The AM99C10 chip is Content Addressable Memory (CAM)
                and the driver to control it is represented by this attribute. The
                generic name of this attribute shall be the Hardware Filter Driver
                which will also provide control of the Dual Ethernet Filter
                Accelerator (DEFA) chip."
        ::= { wfDrivers 8 }

    wfAMZ8530Load OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the AMZ8530 chip driver on slots 1-14. The
                MSBit represents slot 1, the next most significant bit represents
                slot 2, and so forth."
        ::= { wfDrivers 9 }

    wfHSSIFSILoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the HSSI FSI chip driver on slots 1-14. The
                MSBit represents slot 1, the next most significant bit represents
                slot 2, and so forth."
        ::= { wfDrivers 10 }

    wfMUNICHT1Load OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the MUNICH chip driver on slots 1-14. The
                MSBit represents slot 1, the next most significant bit represents
                slot 2, and so forth. The MUNICH chip is used on the MCT1 and
                MCE1 link modules"
        ::= { wfDrivers 11 }

    wfQsccSyncLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the Sync QUICC chip driver on slots 1-14. The
                MSBit represents slot 1, the next most significant bit represents
                slot 2, and so forth."
        ::= { wfDrivers 12 }

    wfQsccEnetLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the Ethernet QUICC chip driver on slots 1-14. The
                MSBit represents slot 1, the next most significant bit represents
                slot 2, and so forth."
        ::= { wfDrivers 13 }

    wfMunichLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the T1/E1 MUNICH chip driver on slots 1-14. The
                MSBit represents slot 1, the next most significant bit represents
                slot 2, and so forth. The MUNICH chip is used on the MCT1 and
                MCE1 link modules"
        ::= { wfDrivers 14 }

    wfHilanceLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the Hilance driver for the ASN on slots 1-14. The
                MSBit represents slot 1, the next most significant bit represents
                slot 2, and so forth."
        ::= { wfDrivers 15 }

    wfAtmAlcLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the ATM Link Module driver for the FRE-2 on slots
                1-14. The MSBit represents slot 1, the next most significant bit represents
                slot 2, and so forth."
        ::= { wfDrivers 16 }

    wfRptrLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the AN 802.3 driver on slot 1 - MSB represents slot 1
                - Only valid slot"
        ::= { wfDrivers 17 }

    wfIsacLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the ISAC D Channel chip driver on slots 1-14. The
                MSBit represents slot 1, the next most significant bit represents
                slot 2, and so forth."
        ::= { wfDrivers 18 }

    wfAtmizerLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the ATMizer driver for the ARE on slots 1-14. The
                MSBit represents slot 1, the next most significant bit represents slot 2,
                and so forth."
        ::= { wfDrivers 19 }

    wfNSC100MLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the National Semiconductor DP83810 driver on
                slots 1-14. The MSBit represents slot 1, the next most significant bit
                represents slot 2, and so forth."
        ::= { wfDrivers 20 }

    wfDCMMWLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the DCMMW on slot 1.
                The MSBit represents slot 1."
        ::= { wfDrivers 21 }

    wfHwCompLoad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit mask for loading the Hardware Compression driver on slots 1-14. The
                MSBit represents slot 1, the next most significant bit represents
                slot 2, and so forth."
        ::= { wfDrivers 22 }

    END  -- Wellfleet-LOADER-MIB
-- @(#)WSCCS d/mibs-mct1.mib 1.1 8/30/95
Wellfleet-MCT1-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:45:09 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfMcT1Group
        FROM Wellfleet-COMMON-MIB;


    wfMcT1ModTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfMcT1ModEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "MCT1 MOD record - Contains MCT1 module Configuration parameters"
        ::= { wfMcT1Group 1 }

    wfMcT1ModEntry OBJECT-TYPE
        SYNTAX	WfMcT1ModEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the MCT1 Base table"
        INDEX	{ wfMcT1ModSlot }
        ::= { wfMcT1ModTable 1 }

    WfMcT1ModEntry ::= SEQUENCE {
    	    wfMcT1ModDelete
    		INTEGER,
    	    wfMcT1ModDisable
    		INTEGER,
    	    wfMcT1ModSlot
    		INTEGER,
    	    wfMcT1ModPrimaryClock
    		INTEGER,
    	    wfMcT1ModSecondaryClock
    		INTEGER,
    	    wfMcT1ModCurrentClock
    		INTEGER,
    	    wfMcT1ModExtClockOperational
    		INTEGER,
    	    wfMcT1ModLoop0ClockOperational
    		INTEGER,
    	    wfMcT1ModLoop1ClockOperational
    		INTEGER,
    	    wfMcT1ModRestart
    		INTEGER
        }

    wfMcT1ModDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfMcT1ModEntry 1 }

    wfMcT1ModDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfMcT1ModEntry 2 }

    wfMcT1ModSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID slot, filled in by driver"
        ::= { wfMcT1ModEntry 3 }

    wfMcT1ModPrimaryClock OBJECT-TYPE
        SYNTAX	INTEGER {
    		    external(1),
    		    loop0(2),
    		    loop1(3),
    		    int(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the primary source for T1 transmit timing.
                Both T1 ports use the same T1 transmit timing source.
                The options for T1 timing source are internal timing source,
                loop timing from either T1 port and an external timing
                source."
        DEFVAL	{ int }
        ::= { wfMcT1ModEntry 4 }

    wfMcT1ModSecondaryClock OBJECT-TYPE
        SYNTAX	INTEGER {
    		    external(1),
    		    loop0(2),
    		    loop1(3),
    		    int(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the secondary source for T1 transmit timing.
                During normal operation T1 transmit timing is derived
                from the primary timing source. If the primary timing
                source fails, the software switches to secondary timing
                source."
        DEFVAL	{ loop0 }
        ::= { wfMcT1ModEntry 5 }

    wfMcT1ModCurrentClock OBJECT-TYPE
        SYNTAX	INTEGER {
    		    primary(1),
    		    secondary(2),
    		    int(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the clock source currently in use"
        DEFVAL	{ primary }
        ::= { wfMcT1ModEntry 6 }

    wfMcT1ModExtClockOperational OBJECT-TYPE
        SYNTAX	INTEGER {
    		    oper(1),
    		    unoper(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the External clock is operational"
        DEFVAL	{ oper }
        ::= { wfMcT1ModEntry 7 }

    wfMcT1ModLoop0ClockOperational OBJECT-TYPE
        SYNTAX	INTEGER {
    		    oper(1),
    		    unoper(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the timing source from port 1
                is operational"
        DEFVAL	{ oper }
        ::= { wfMcT1ModEntry 8 }

    wfMcT1ModLoop1ClockOperational OBJECT-TYPE
        SYNTAX	INTEGER {
    		    oper(1),
    		    unoper(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the timing source from port 2
                is operational"
        DEFVAL	{ oper }
        ::= { wfMcT1ModEntry 9 }

    wfMcT1ModRestart OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates Module gate should be restarted to read
                new configuration"
        ::= { wfMcT1ModEntry 10 }

    wfMcT1Table OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfMcT1Entry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "MCT1  line record - Contains MUNICH32 Configuration parameters
                "
        ::= { wfMcT1Group 2 }

    wfMcT1Entry OBJECT-TYPE
        SYNTAX	WfMcT1Entry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the MCT1 table"
        INDEX	{ wfMcT1Slot,
    		  wfMcT1Connector }
        ::= { wfMcT1Table 1 }

    WfMcT1Entry ::= SEQUENCE {
    	    wfMcT1Delete
    		INTEGER,
    	    wfMcT1Disable
    		INTEGER,
    	    wfMcT1State
    		INTEGER,
    	    wfMcT1Slot
    		INTEGER,
    	    wfMcT1Connector
    		INTEGER,
    	    wfMcT1OperationMode
    		INTEGER,
    	    wfMcT1Mtu
    		INTEGER,
    	    wfMcT1MunichVersion
    		INTEGER,
    	    wfMcT1Dsx1LineType
    		INTEGER,
    	    wfMcT1Dsx1ZeroCoding
    		INTEGER,
    	    wfMcT1Dsx1LoopbackConfig
    		INTEGER,
    	    wfMcT1Dsx1LineStatus
    		INTEGER,
    	    wfMcT1Dsx1SetupAlarmThreshold
    		INTEGER,
    	    wfMcT1Dsx1ClearAlarmThreshold
    		INTEGER,
    	    wfMcT1Dsx1SignalLevel
    		INTEGER,
    	    wfMcT1LoopbackDisable
    		INTEGER,
    	    wfMcT1Dsx1FDLOperationMode
    		INTEGER,
    	    wfMcT1BertTxOutputLevel
    		INTEGER,
    	    wfMcT1BertTestMode
    		INTEGER,
    	    wfMcT1BertLineCode
    		INTEGER,
    	    wfMcT1BertTestPattern
    		INTEGER,
    	    wfMcT1BertSendAlarm
    		INTEGER,
    	    wfMcT1DS2282Version
    		INTEGER,
    	    wfMcT1Restart
    		INTEGER,
    	    wfMcT1Loopback
    		INTEGER,
    	    wfMcT1FDLTargetAddress
    		INTEGER
        }

    wfMcT1Delete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfMcT1Entry 1 }

    wfMcT1Disable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfMcT1Entry 2 }

    wfMcT1State OBJECT-TYPE
        SYNTAX	INTEGER {
    		    init(1),
    		    up(2),
    		    bert(3),
    		    loopback(4),
    		    redalarm(5),
    		    yelalarm(6),
    		    bluealarm(7),
    		    notpresent(8)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line Driver state variable"
        DEFVAL	{ notpresent }
        ::= { wfMcT1Entry 3 }

    wfMcT1Slot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Slot, filled in by driver"
        ::= { wfMcT1Entry 4 }

    wfMcT1Connector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Connector, filled in by driver"
        ::= { wfMcT1Entry 5 }

    wfMcT1OperationMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(1),
    		    bert(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "An option to generate and analyze specific test patterns
                is provided in BERT mode of operation. Only one T1 port
                can be in BERT mode at a time. This attribute selects
                normal or BERT mode of operation"
        DEFVAL	{ default }
        ::= { wfMcT1Entry 6 }

    wfMcT1Mtu OBJECT-TYPE
        SYNTAX	INTEGER(3..4608)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "MTU parameter. Specifies the largest frame size that
                can be received by the MCT1 link module. Any received frame
                which is larger than the MTU will be discarded."
        DEFVAL	{ 4608 }
        ::= { wfMcT1Entry 7 }

    wfMcT1MunichVersion OBJECT-TYPE
        SYNTAX	INTEGER {
    		    v1(1),
    		    v2(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Specifies version number of the MUNICH chip used"
        ::= { wfMcT1Entry 8 }

    wfMcT1Dsx1LineType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    esf(2),
    		    d4(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selects between the two framing formats supported - D4 and ESF.
                The sailent differences between the two formats are the number
                of frames per superframe and the use of F-bit position."
        DEFVAL	{ d4 }
        ::= { wfMcT1Entry 9 }

    wfMcT1Dsx1ZeroCoding OBJECT-TYPE
        SYNTAX	INTEGER {
    		    b8zs(2),
    		    ami(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selects between the two Zero Code Suppression formats
                used on the link. In B8ZS coding, any outgoing stream of
                eight consecutive zeroes is replaced with a B8ZS code word.
                Any received B8ZS code is replaced with all zeroes."
        DEFVAL	{ ami }
        ::= { wfMcT1Entry 10 }

    wfMcT1Dsx1LoopbackConfig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    noloop(1),
    		    mgrpayloadloop(2),
    		    mgrlineloop(3),
    		    netreqpayloadloop(4),
    		    netreqlineloop(5),
    		    otherloop(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the loopback configuration of the T1 interface.
                The interface can be in the following loopback states:
                Payload loopback and Line loopback or no loopback. The
                loopbacks can be initiated by the manager of this device
                or by the far end. The loopbacks initiated by the far end
                are NETREQPAYLOADLOOP and NETREQLINELOOP."
        DEFVAL	{ noloop }
        ::= { wfMcT1Entry 11 }

    wfMcT1Dsx1LineStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    noalarm(1),
    		    farendalarm(2),
    		    alarmindicationsignal(4),
    		    lossofframe(8),
    		    lossofsignal(16),
    		    loopbackstate(32)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the line status of the T1 interface. It
                contains loopback state and alarm state information.
                The Dsx1LineStatus is a bit map therefore it can represent
                multiple loopback and alarm states simultaneously."
        ::= { wfMcT1Entry 12 }

    wfMcT1Dsx1SetupAlarmThreshold OBJECT-TYPE
        SYNTAX	INTEGER {
    		    threshold2(2),
    		    threshold4(4),
    		    threshold6(6),
    		    threshold8(8),
    		    threshold10(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies setup time for performance failure conditions,
                in seconds. When a performance defect is present for greater
                than the time specified by this parameter a performance
                failure is registered and a message is logged."
        DEFVAL	{ threshold2 }
        ::= { wfMcT1Entry 13 }

    wfMcT1Dsx1ClearAlarmThreshold OBJECT-TYPE
        SYNTAX	INTEGER {
    		    threshold2(2),
    		    threshold4(4),
    		    threshold6(6),
    		    threshold8(8),
    		    threshold10(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies clear time for performance failure conditions,
                in seconds. When a performance failure condition has been
                cleared for greater than the time specified by this parameter
                then the failure cleared condition is registered and a
                message is logged."
        DEFVAL	{ threshold2 }
        ::= { wfMcT1Entry 14 }

    wfMcT1Dsx1SignalLevel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    minus15(1),
    		    minus7point5(2),
    		    minus0(3),
    		    pluspoint5(4),
    		    pluspoint8(5),
    		    plus1point1(6),
    		    plus1point5(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies T1 transmit power level, in terms of DB. They
                translate into cable length as follows:
                0.0dB -> 0-133   ft
                0.5dB -> 133-266 ft
                0.8dB -> 266-399 ft
                1.1dB -> 399-533 ft
                1.5dB -> 533-655 ft"
        DEFVAL	{ minus0 }
        ::= { wfMcT1Entry 15 }

    wfMcT1LoopbackDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The MCT1 link module is capable of detecting loop up
                and loop down codes received from the far end. This
                parameter enables or disbales loop up/down code detection
                circuitry"
        DEFVAL	{ enabled }
        ::= { wfMcT1Entry 16 }

    wfMcT1Dsx1FDLOperationMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    oper54016(1),
    		    opert1403(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Select between the two FDL modes of operation. The AT&T
                mode, 54016 is based on AT&T publication 54015-1989. The
                ANSI mode, T1403 is based on ANSI publication T1.403-1989"
        DEFVAL	{ opert1403 }
        ::= { wfMcT1Entry 17 }

    wfMcT1BertTxOutputLevel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    minus15(1),
    		    minus7point5(2),
    		    minus0(3),
    		    pluspoint5(4),
    		    pluspoint8(5),
    		    plus1point1(6),
    		    plus1point5(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies T1 transmit power level, in terms of DB while
                the T1 port is in BERT mode. The power levels translate into
                cable length as follows:
                0.0dB -> 0-133   ft
                0.5dB -> 133-266 ft
                0.8dB -> 266-399 ft
                1.1dB -> 399-533 ft
                1.5dB -> 533-655 ft"
        DEFVAL	{ minus0 }
        ::= { wfMcT1Entry 18 }

    wfMcT1BertTestMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    t1(1),
    		    sf(2),
    		    esf(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selects between the framing formats while in bert mode of
                operation."
        DEFVAL	{ sf }
        ::= { wfMcT1Entry 19 }

    wfMcT1BertLineCode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ami(1),
    		    b8zs(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selects between the two Zero Code Suppression formats
                used on the link while in BERT mode. In B8ZS coding,
                any outgoing stream of eight consecutive zeroes is replaced
                with a B8ZS code word. Any received B8ZS code is replaced
                with all zeroes."
        DEFVAL	{ ami }
        ::= { wfMcT1Entry 20 }

    wfMcT1BertTestPattern OBJECT-TYPE
        SYNTAX	INTEGER {
    		    zeros(1),
    		    ones(2),
    		    qrss(3),
    		    fifteen(4),
    		    fifteeninv(5),
    		    twenty(6),
    		    twentythree(7),
    		    twentythreeinv(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "When a T1 port is in BERT mode, it is capable of generating
                a set of known patterns. This paramater selects between those
                patterns"
        DEFVAL	{ ones }
        ::= { wfMcT1Entry 21 }

    wfMcT1BertSendAlarm OBJECT-TYPE
        SYNTAX	INTEGER {
    		    blue(1),
    		    yellow(2),
    		    disabled(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies a blue or yellow alarm to be transmitted
                while in BERT mode."
        DEFVAL	{ disabled }
        ::= { wfMcT1Entry 22 }

    wfMcT1DS2282Version OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Specifies version  number of DS2282 chip"
        ::= { wfMcT1Entry 23 }

    wfMcT1Restart OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates Port gate should be restarted to read
                new configuration"
        ::= { wfMcT1Entry 24 }

    wfMcT1Loopback OBJECT-TYPE
        SYNTAX	INTEGER {
    		    linelb(1),
    		    payldlb(2),
    		    deactivate(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selects line or payload loopback to be activated  locally"
        DEFVAL	{ deactivate }
        ::= { wfMcT1Entry 25 }

    wfMcT1FDLTargetAddress OBJECT-TYPE
        SYNTAX	INTEGER {
    		    az(1),
    		    by(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selects between the two FDL target address modes"
        DEFVAL	{ by }
        ::= { wfMcT1Entry 26 }

    wfMcT1ConfigTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfMcT1ConfigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "MCT1 configuration record - Contains MUNICH32 and Framer
                write only Configuration parameters"
        ::= { wfMcT1Group 3 }

    wfMcT1ConfigEntry OBJECT-TYPE
        SYNTAX	WfMcT1ConfigEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the MCT1 Config table"
        INDEX	{ wfMcT1ConfigSlot,
    		  wfMcT1ConfigConnector }
        ::= { wfMcT1ConfigTable 1 }

    WfMcT1ConfigEntry ::= SEQUENCE {
    	    wfMcT1ConfigSlot
    		INTEGER,
    	    wfMcT1ConfigConnector
    		INTEGER,
    	    wfMcT1BertRestart
    		INTEGER,
    	    wfMcT1BertPayldLb
    		INTEGER,
    	    wfMcT1BertLineLb
    		INTEGER,
    	    wfMcT1BertErrorInsert
    		INTEGER,
    	    wfMcT1Dsx1SendLoopCode
    		INTEGER,
    	    wfMcT1Dsx1SendFDLCode
    		INTEGER
        }

    wfMcT1ConfigSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Slot, filled in by driver"
        ::= { wfMcT1ConfigEntry 1 }

    wfMcT1ConfigConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Connector, filled in by driver"
        ::= { wfMcT1ConfigEntry 2 }

    wfMcT1BertRestart OBJECT-TYPE
        SYNTAX	INTEGER {
    		    restart(1),
    		    noaction(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Reset counters on BERT device"
        DEFVAL	{ noaction }
        ::= { wfMcT1ConfigEntry 3 }

    wfMcT1BertPayldLb OBJECT-TYPE
        SYNTAX	INTEGER {
    		    act(1),
    		    deact(2),
    		    noaction(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selects a payload loopback code to be sent to the far end
                by the FDL while in BERT mode. It can be a payload loopback
                activate or deactivate code."
        DEFVAL	{ noaction }
        ::= { wfMcT1ConfigEntry 4 }

    wfMcT1BertLineLb OBJECT-TYPE
        SYNTAX	INTEGER {
    		    lpup(1),
    		    lpdn(2),
    		    fdlact(3),
    		    fdldeact(4),
    		    noaction(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selects a line loopback code to be sent to the far end while in
                BERT mode. It can be a line loopback activate or deactivate
                code using the hardware on the MCT1 board or it can be a code
                sent by the FDL."
        DEFVAL	{ noaction }
        ::= { wfMcT1ConfigEntry 5 }

    wfMcT1BertErrorInsert OBJECT-TYPE
        SYNTAX	INTEGER {
    		    config(1),
    		    thousandconfig(2),
    		    millionconfig(3),
    		    disable(4),
    		    noaction(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates that an error be injected into the transmitted data
                stream while in BERT mode."
        DEFVAL	{ noaction }
        ::= { wfMcT1ConfigEntry 6 }

    wfMcT1Dsx1SendLoopCode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    loopup(1),
    		    loopdn(2),
    		    noaction(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selects a  Loop Up/Down code to be sent to the remote end"
        DEFVAL	{ noaction }
        ::= { wfMcT1ConfigEntry 7 }

    wfMcT1Dsx1SendFDLCode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ci(1),
    		    univlbdeact(2),
    		    ia(3),
    		    linelbdeact(4),
    		    pyldlbact(5),
    		    pyldlbdeact(6),
    		    ib(7),
    		    noaction(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selects an FDL code to be sent to the remote end"
        DEFVAL	{ noaction }
        ::= { wfMcT1ConfigEntry 8 }

    wfMcT1LineTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfMcT1LineEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "MCT1 Channel record - Contains configuration parameters and
                statistics for MUNICH32 which are channel specific."
        ::= { wfMcT1Group 4 }

    wfMcT1LineEntry OBJECT-TYPE
        SYNTAX	WfMcT1LineEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the MCT1CHANNEL table"
        INDEX	{ wfMcT1LineSlot,
    		  wfMcT1LineConnector,
    		  wfMcT1LineLine }
        ::= { wfMcT1LineTable 1 }

    WfMcT1LineEntry ::= SEQUENCE {
    	    wfMcT1LineDelete
    		INTEGER,
    	    wfMcT1LineDisable
    		INTEGER,
    	    wfMcT1LineState
    		INTEGER,
    	    wfMcT1LineSlot
    		INTEGER,
    	    wfMcT1LineConnector
    		INTEGER,
    	    wfMcT1LineLine
    		INTEGER,
    	    wfMcT1LineCct
    		INTEGER,
    	    wfMcT1LineBofl
    		INTEGER,
    	    wfMcT1LineBoflTmo
    		INTEGER,
    	    wfMcT1LineFractionalLpbk
    		INTEGER,
    	    wfMcT1LineChannelAssignment
    		DisplayString,
    	    wfMcT1LineMadr
    		OCTET STRING,
    	    wfMcT1LineWanProtocol
    		INTEGER,
    	    wfMcT1LineService
    		INTEGER,
    	    wfMcT1LineRateAdaption
    		INTEGER,
    	    wfMcT1LineIFTF
    		INTEGER,
    	    wfMcT1LineCRCSize
    		INTEGER,
    	    wfMcT1LineRxOctets
    		Counter,
    	    wfMcT1LineRxFrames
    		Counter,
    	    wfMcT1LineTxOctets
    		Counter,
    	    wfMcT1LineTxFrames
    		Counter,
    	    wfMcT1LineRxErrors
    		Counter,
    	    wfMcT1LineTxErrors
    		Counter,
    	    wfMcT1LineLackRxResources
    		Counter,
    	    wfMcT1LineLackTxResources
    		Counter,
    	    wfMcT1LineTxUnderflows
    		Counter,
    	    wfMcT1LineRxOverflows
    		Counter,
    	    wfMcT1LineRxNullFrames
    		Counter,
    	    wfMcT1LineRxShortFrames
    		Counter,
    	    wfMcT1LineRxLossSyncs
    		Counter,
    	    wfMcT1LineRxCRCErrors
    		Counter,
    	    wfMcT1LineRxNonOctetBits
    		Counter,
    	    wfMcT1LineRxLongFrames
    		Counter,
    	    wfMcT1LineRxAbortFrames
    		Counter,
    	    wfMcT1LineRxDescOverflows
    		Counter,
    	    wfMcT1LineTurboBofl
    		INTEGER,
    	    wfMcT1LineBoflNum
    		INTEGER,
    	    wfMcT1LineBoflLen
    		INTEGER,
    	    wfMcT1LineRxIntProcs
    		Counter,
    	    wfMcT1LineTxIntProcs
    		Counter,
    	    wfMcT1LineRxPktCorruptions
    		Counter,
    	    wfMcT1LineRxReplenMisses
    		Counter,
    	    wfMcT1LineRxIFCs
    		Counter,
    	    wfMcT1LineCfgTxQueueLength
    		INTEGER,
    	    wfMcT1LineCfgRxQueueLength
    		INTEGER,
    	    wfMcT1LineTxQueueLength
    		INTEGER,
    	    wfMcT1LineRxQueueLength
    		INTEGER,
    	    wfMcT1LineTxQueueEmpty
    		INTEGER,
    	    wfMcT1LineMtu
    		INTEGER,
    	    wfMcT1LineRestart
    		INTEGER,
    	    wfMcT1LineLineNumber
    		INTEGER
        }

    wfMcT1LineDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfMcT1LineEntry 1 }

    wfMcT1LineDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfMcT1LineEntry 2 }

    wfMcT1LineState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    loopback(4),
    		    wait(5),
    		    channel(6),
    		    stop(7),
    		    notpresent(8)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line Driver state variable"
        DEFVAL	{ notpresent }
        ::= { wfMcT1LineEntry 3 }

    wfMcT1LineSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Slot, filled in by driver"
        ::= { wfMcT1LineEntry 4 }

    wfMcT1LineConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Connector, filled in by driver"
        ::= { wfMcT1LineEntry 5 }

    wfMcT1LineLine OBJECT-TYPE
        SYNTAX	INTEGER(1..24)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line number for this line instance, filled in by driver.
                The line number corresponds to the position of the
                circuit, from 1 to 24, on the port."
        ::= { wfMcT1LineEntry 6 }

    wfMcT1LineCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Circuit number for this line instance"
        ::= { wfMcT1LineEntry 7 }

    wfMcT1LineBofl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selects Breath of Life (BOFL) parameter. If selected, a BOFL
                packet is sent out on the wire as often as specifies by the
                wfMcT1LineBoflTmo parameter"
        DEFVAL	{ enabled }
        ::= { wfMcT1LineEntry 8 }

    wfMcT1LineBoflTmo OBJECT-TYPE
        SYNTAX	INTEGER(1..60)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the time-period between BOFL packets"
        DEFVAL	{ 5 }
        ::= { wfMcT1LineEntry 9 }

    wfMcT1LineFractionalLpbk OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Any circuit on this T1 port is capable of being put into
                loopback, i.e. data coming into that circuit from the wire is
                mirrorred back onto the wire. This parameter enables or
                disables this loopback feature on any circuit."
        DEFVAL	{ disabled }
        ::= { wfMcT1LineEntry 10 }

    wfMcT1LineChannelAssignment OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Lists the time-slots which constitute this channel. User
                types in a list of time-slots from 1 to 24 separated by commas"
        ::= { wfMcT1LineEntry 11 }

    wfMcT1LineMadr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line MAC address, fixed - line driver fills in from the 48 bit
                address stored in the serial number prom."
        ::= { wfMcT1LineEntry 12 }

    wfMcT1LineWanProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    standard(1),
    		    ppp(2),
    		    smds(3),
    		    framerelay(4),
    		    switch(5),
    		    sw(6)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "WAN protocol selection is provided via this parameter. The
                supported protocols can be selected per circuit."
        DEFVAL	{ standard }
        ::= { wfMcT1LineEntry 13 }

    wfMcT1LineService OBJECT-TYPE
        SYNTAX	INTEGER {
    		    hdlc(1),
    		    llc1(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Service type for this circuit. Supports raw HDLC mode.
                Does not support LLC1 at this time. LLC1 mode
                will prefix the HDLC address and control fields to the
                frame. May support LLC1 mode in the future"
        DEFVAL	{ hdlc }
        ::= { wfMcT1LineEntry 14 }

    wfMcT1LineRateAdaption OBJECT-TYPE
        SYNTAX	INTEGER {
    		    adaption64k(1),
    		    msb(2),
    		    lsb(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Determines the number of bits and their bit positions
                within the time-slot. 64k selection uses all 8 bits in
                the time-slot. The two 56k selections use 7 of the 8
                bits in the time-slot. 56k_MSB does not use the most
                significant bit and 56k_LSB does not use the least
                significant bit in the time-slot."
        DEFVAL	{ lsb }
        ::= { wfMcT1LineEntry 15 }

    wfMcT1LineIFTF OBJECT-TYPE
        SYNTAX	INTEGER {
    		    flags(1),
    		    idles(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Determines the Interframe time fill character to be
                transmitted by the MUNICH. In case of IFTF_FLAGS, 0x7E
                is sent and in case of IFTF_IDLES 0xff is sent as the
                interframe timefill characters."
        DEFVAL	{ flags }
        ::= { wfMcT1LineEntry 16 }

    wfMcT1LineCRCSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    crc32(1),
    		    crc16(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Determines the CRC Size. When CRC32 is selected a 32 bit
                CRC is appended to the frame being transmitted and a 32
                bit CRC check is performed on the received frame. When
                CRC16 is selected, a 16 bit CRC is appended to the
                transmitted frame and a 16 bit CRC is performed. on the
                received frame."
        DEFVAL	{ crc16 }
        ::= { wfMcT1LineEntry 17 }

    wfMcT1LineRxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets received without error"
        ::= { wfMcT1LineEntry 18 }

    wfMcT1LineRxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received without error"
        ::= { wfMcT1LineEntry 19 }

    wfMcT1LineTxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets transmitted without error"
        ::= { wfMcT1LineEntry 20 }

    wfMcT1LineTxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames transmitted without error"
        ::= { wfMcT1LineEntry 21 }

    wfMcT1LineRxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of receive errors"
        ::= { wfMcT1LineEntry 22 }

    wfMcT1LineTxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmission errors"
        ::= { wfMcT1LineEntry 23 }

    wfMcT1LineLackRxResources OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Rx frames dropped due to lack of buffer resources"
        ::= { wfMcT1LineEntry 24 }

    wfMcT1LineLackTxResources OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Tx frames dropped due to lack of buffer resources"
        ::= { wfMcT1LineEntry 25 }

    wfMcT1LineTxUnderflows OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Tx frames dropped due to Transmit underflow"
        ::= { wfMcT1LineEntry 26 }

    wfMcT1LineRxOverflows OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Rx frames dropped due to Receive overflow"
        ::= { wfMcT1LineEntry 27 }

    wfMcT1LineRxNullFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of short frames received (with no data bytes)"
        ::= { wfMcT1LineEntry 28 }

    wfMcT1LineRxShortFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of short frames received (less than or equal to two
                data bytes)"
        ::= { wfMcT1LineEntry 29 }

    wfMcT1LineRxLossSyncs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Loss of synchronization on receiver"
        ::= { wfMcT1LineEntry 30 }

    wfMcT1LineRxCRCErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "CRC error received"
        ::= { wfMcT1LineEntry 31 }

    wfMcT1LineRxNonOctetBits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Non-Octet bits received in frame"
        ::= { wfMcT1LineEntry 32 }

    wfMcT1LineRxLongFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Frame longer than MFL received"
        ::= { wfMcT1LineEntry 33 }

    wfMcT1LineRxAbortFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Aborted frame received"
        ::= { wfMcT1LineEntry 34 }

    wfMcT1LineRxDescOverflows OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Receive overflow on chip buffer"
        ::= { wfMcT1LineEntry 35 }

    wfMcT1LineTurboBofl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DEBUG parameter - Turbo bofl enabled or disabled"
        DEFVAL	{ disabled }
        ::= { wfMcT1LineEntry 36 }

    wfMcT1LineBoflNum OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DEBUG parameter - Number of breath of life packets per breath
                of life"
        DEFVAL	{ 1 }
        ::= { wfMcT1LineEntry 37 }

    wfMcT1LineBoflLen OBJECT-TYPE
        SYNTAX	INTEGER(22..4450)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DEBUG parameter - breath of life packet length"
        DEFVAL	{ 200 }
        ::= { wfMcT1LineEntry 38 }

    wfMcT1LineRxIntProcs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Receive Interrupt processing count"
        ::= { wfMcT1LineEntry 39 }

    wfMcT1LineTxIntProcs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Tx interrupt processing count"
        ::= { wfMcT1LineEntry 40 }

    wfMcT1LineRxPktCorruptions OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Corruption check on receive"
        ::= { wfMcT1LineEntry 41 }

    wfMcT1LineRxReplenMisses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of number of packet buffer misses while attempting to
                replenish driver receive ring"
        ::= { wfMcT1LineEntry 42 }

    wfMcT1LineRxIFCs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times the device changes its interframe time-fill"
        ::= { wfMcT1LineEntry 43 }

    wfMcT1LineCfgTxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER(0..336)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured transmit queue length"
        ::= { wfMcT1LineEntry 44 }

    wfMcT1LineCfgRxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER(0..336)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured receive queue length"
        ::= { wfMcT1LineEntry 45 }

    wfMcT1LineTxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current transmit queue length"
        ::= { wfMcT1LineEntry 46 }

    wfMcT1LineRxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current Receive queue length"
        ::= { wfMcT1LineEntry 47 }

    wfMcT1LineTxQueueEmpty OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the transmit ring is found
                empty when transmitting packets"
        ::= { wfMcT1LineEntry 48 }

    wfMcT1LineMtu OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "MTU read-only parameter. Specifies the largest frame size that
                can be received by the MCT1 link module. Any received frame
                which is larger than the MTU will be discarded. Can be set in
                MCT1Entry TABLE by the user"
        ::= { wfMcT1LineEntry 49 }

    wfMcT1LineRestart OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates channel gate should be restarted to read
                new configuration"
        ::= { wfMcT1LineEntry 50 }

    wfMcT1LineLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "line number for this line instance"
        ::= { wfMcT1LineEntry 51 }

    wfMcT1Dsx1Current OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfMcT1Dsx1CurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The MCT1_DSX1 Current table"
        ::= { wfMcT1Group 5 }

    wfMcT1Dsx1CurrentEntry OBJECT-TYPE
        SYNTAX	WfMcT1Dsx1CurrentEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit MCT1_DSX1 current objects - wfMcT1Dsx1CurrentIndex
                corresponds to Wellfleet circuit number"
        INDEX	{ wfMcT1Dsx1CurrentSlot,
    		  wfMcT1Dsx1CurrentConnector }
        ::= { wfMcT1Dsx1Current 1 }

    WfMcT1Dsx1CurrentEntry ::= SEQUENCE {
    	    wfMcT1Dsx1CurrentSlot
    		INTEGER,
    	    wfMcT1Dsx1CurrentConnector
    		INTEGER,
    	    wfMcT1Dsx1CurrentIntervalTimer
    		Gauge,
    	    wfMcT1Dsx1CurrentESs
    		Gauge,
    	    wfMcT1Dsx1CurrentSESs
    		Gauge,
    	    wfMcT1Dsx1CurrentBESs
    		Gauge,
    	    wfMcT1Dsx1CurrentUASs
    		Gauge,
    	    wfMcT1Dsx1CurrentCSSs
    		Gauge,
    	    wfMcT1Dsx1CurrentBPVs
    		Gauge
        }

    wfMcT1Dsx1CurrentSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet Slot number"
        ::= { wfMcT1Dsx1CurrentEntry 1 }

    wfMcT1Dsx1CurrentConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet Connector number"
        ::= { wfMcT1Dsx1CurrentEntry 2 }

    wfMcT1Dsx1CurrentIntervalTimer OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of seconds in the current 15 minute interval"
        ::= { wfMcT1Dsx1CurrentEntry 3 }

    wfMcT1Dsx1CurrentESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of errored seconds encountered by a DS1
                interface in the current 15 minute interval"
        ::= { wfMcT1Dsx1CurrentEntry 4 }

    wfMcT1Dsx1CurrentSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of severely errored seconds in the
                current 15 minute interval"
        ::= { wfMcT1Dsx1CurrentEntry 5 }

    wfMcT1Dsx1CurrentBESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of bursty errored seconds in the
                current 15 minute interval"
        ::= { wfMcT1Dsx1CurrentEntry 6 }

    wfMcT1Dsx1CurrentUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of unavailable seconds in the current 15
                minute interval"
        ::= { wfMcT1Dsx1CurrentEntry 7 }

    wfMcT1Dsx1CurrentCSSs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of Controlled Slip seconds in the current 15
                minute interval"
        ::= { wfMcT1Dsx1CurrentEntry 8 }

    wfMcT1Dsx1CurrentBPVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of bipolar violations in the current 15
                minute interval"
        ::= { wfMcT1Dsx1CurrentEntry 9 }

    wfMcT1Dsx1Interval OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfMcT1Dsx1IntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The MCT1_DSX1 Interval table"
        ::= { wfMcT1Group 6 }

    wfMcT1Dsx1IntervalEntry OBJECT-TYPE
        SYNTAX	WfMcT1Dsx1IntervalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit MCT1_DSX1 interval objects - wfMcT1Dsx1IntervalIndex
                corresponds to Wellfleet circuit number,
                wfMcT1Dsx1IntervalNumber is the numbered previous
                15-minute interval"
        INDEX	{ wfMcT1Dsx1IntervalSlot,
    		  wfMcT1Dsx1IntervalConnector,
    		  wfMcT1Dsx1IntervalNumber }
        ::= { wfMcT1Dsx1Interval 1 }

    WfMcT1Dsx1IntervalEntry ::= SEQUENCE {
    	    wfMcT1Dsx1IntervalSlot
    		INTEGER,
    	    wfMcT1Dsx1IntervalConnector
    		INTEGER,
    	    wfMcT1Dsx1IntervalNumber
    		INTEGER,
    	    wfMcT1Dsx1IntervalESs
    		Gauge,
    	    wfMcT1Dsx1IntervalSESs
    		Gauge,
    	    wfMcT1Dsx1IntervalBESs
    		Gauge,
    	    wfMcT1Dsx1IntervalUASs
    		Gauge,
    	    wfMcT1Dsx1IntervalCSSs
    		Gauge,
    	    wfMcT1Dsx1IntervalBPVs
    		Gauge
        }

    wfMcT1Dsx1IntervalSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet Slot number"
        ::= { wfMcT1Dsx1IntervalEntry 1 }

    wfMcT1Dsx1IntervalConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet Connector number"
        ::= { wfMcT1Dsx1IntervalEntry 2 }

    wfMcT1Dsx1IntervalNumber OBJECT-TYPE
        SYNTAX	INTEGER(1..96)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "1..96 where 1 is the most recent 15-minute interval and 96 is
                the least"
        ::= { wfMcT1Dsx1IntervalEntry 3 }

    wfMcT1Dsx1IntervalESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of errored seconds in the specified interval"
        ::= { wfMcT1Dsx1IntervalEntry 4 }

    wfMcT1Dsx1IntervalSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of severely errored seconds in the specified
                interval"
        ::= { wfMcT1Dsx1IntervalEntry 5 }

    wfMcT1Dsx1IntervalBESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of bursty errored seconds in the
                specified interval"
        ::= { wfMcT1Dsx1IntervalEntry 6 }

    wfMcT1Dsx1IntervalUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of unavailable seconds in the specified interval"
        ::= { wfMcT1Dsx1IntervalEntry 7 }

    wfMcT1Dsx1IntervalCSSs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of controlled slip seconds in the specified interval"
        ::= { wfMcT1Dsx1IntervalEntry 8 }

    wfMcT1Dsx1IntervalBPVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of bipolar violations in the specified interval"
        ::= { wfMcT1Dsx1IntervalEntry 9 }

    wfMcT1Dsx1Total OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfMcT1Dsx1TotalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The MCT1_DSX1 Total table"
        ::= { wfMcT1Group 7 }

    wfMcT1Dsx1TotalEntry OBJECT-TYPE
        SYNTAX	WfMcT1Dsx1TotalEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit MCT1_DSX1 total objects - wfMcT1Dsx1TotalIndex
                corresponds to Wellfleet circuit number"
        INDEX	{ wfMcT1Dsx1TotalSlot,
    		  wfMcT1Dsx1TotalConnector }
        ::= { wfMcT1Dsx1Total 1 }

    WfMcT1Dsx1TotalEntry ::= SEQUENCE {
    	    wfMcT1Dsx1TotalSlot
    		INTEGER,
    	    wfMcT1Dsx1TotalConnector
    		INTEGER,
    	    wfMcT1Dsx1TotalVITR
    		Gauge,
    	    wfMcT1Dsx1TotalESs
    		Gauge,
    	    wfMcT1Dsx1TotalSESs
    		Gauge,
    	    wfMcT1Dsx1TotalBESs
    		Gauge,
    	    wfMcT1Dsx1TotalUASs
    		Gauge,
    	    wfMcT1Dsx1TotalCSSs
    		Gauge,
    	    wfMcT1Dsx1TotalBPVs
    		Gauge
        }

    wfMcT1Dsx1TotalSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet Slot number"
        ::= { wfMcT1Dsx1TotalEntry 1 }

    wfMcT1Dsx1TotalConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet Connector number"
        ::= { wfMcT1Dsx1TotalEntry 2 }

    wfMcT1Dsx1TotalVITR OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of valid 15 minute intervals
                in the previous 24 hour period"
        ::= { wfMcT1Dsx1TotalEntry 3 }

    wfMcT1Dsx1TotalESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of errored seconds encountered by the DS1
                interface in the previous 24 hour interval"
        ::= { wfMcT1Dsx1TotalEntry 4 }

    wfMcT1Dsx1TotalSESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of severely errored seconds encountered by a DS1
                interface in the previous 24 hour interval"
        ::= { wfMcT1Dsx1TotalEntry 5 }

    wfMcT1Dsx1TotalBESs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of bursty errored seconds encountered
                by a DS1 interface in the previous 24 hour interval"
        ::= { wfMcT1Dsx1TotalEntry 6 }

    wfMcT1Dsx1TotalUASs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of unavailable seconds encountered by
                by a DS1 interface in the previous 24 hour interval"
        ::= { wfMcT1Dsx1TotalEntry 7 }

    wfMcT1Dsx1TotalCSSs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of controlled slip seconds encountered
                by a DS1 interface in the previous 24 hour interval"
        ::= { wfMcT1Dsx1TotalEntry 8 }

    wfMcT1Dsx1TotalBPVs OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of bipolar violations encountered
                by a DS1 interface in the previous 24 hour interval"
        ::= { wfMcT1Dsx1TotalEntry 9 }

    wfMcT1AnsiTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfMcT1AnsiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "ANSI Statistics line record - This table contains the
                performance parameters for the ANSI register set "
        ::= { wfMcT1Group 8 }

    wfMcT1AnsiEntry OBJECT-TYPE
        SYNTAX	WfMcT1AnsiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the MCT1 Ansi table"
        INDEX	{ wfMcT1AnsiSlot,
    		  wfMcT1AnsiConnector }
        ::= { wfMcT1AnsiTable 1 }

    WfMcT1AnsiEntry ::= SEQUENCE {
    	    wfMcT1AnsiSlot
    		INTEGER,
    	    wfMcT1AnsiConnector
    		INTEGER,
    	    wfMcT1AnsiCRCCounts
    		Counter,
    	    wfMcT1AnsiBPVCounts
    		Counter,
    	    wfMcT1AnsiOOFCounts
    		Counter,
    	    wfMcT1AnsiFECounts
    		Counter,
    	    wfMcT1AnsiESCounts
    		Counter,
    	    wfMcT1AnsiSESCounts
    		Counter,
    	    wfMcT1AnsiUASCounts
    		Counter,
    	    wfMcT1AnsiPRMR0Counts
    		Counter,
    	    wfMcT1AnsiPRMR1Counts
    		Counter,
    	    wfMcT1AnsiPRMR2Counts
    		Counter,
    	    wfMcT1AnsiPRMR3Counts
    		Counter,
    	    wfMcT1AnsiPRMESCounts
    		Counter,
    	    wfMcT1AnsiPRMSESCounts
    		Counter,
    	    wfMcT1AnsiPRMECounts
    		Counter
        }

    wfMcT1AnsiSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Slot, filled in by driver"
        ::= { wfMcT1AnsiEntry 1 }

    wfMcT1AnsiConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Connector, filled in by driver"
        ::= { wfMcT1AnsiEntry 2 }

    wfMcT1AnsiCRCCounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts CRC-6 error events"
        ::= { wfMcT1AnsiEntry 3 }

    wfMcT1AnsiBPVCounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts bipolar violations"
        ::= { wfMcT1AnsiEntry 4 }

    wfMcT1AnsiOOFCounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts out-of-frame error events"
        ::= { wfMcT1AnsiEntry 5 }

    wfMcT1AnsiFECounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts errors in the FPS framing pattern"
        ::= { wfMcT1AnsiEntry 6 }

    wfMcT1AnsiESCounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts errorred seconds"
        ::= { wfMcT1AnsiEntry 7 }

    wfMcT1AnsiSESCounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts severly errorred seconds"
        ::= { wfMcT1AnsiEntry 8 }

    wfMcT1AnsiUASCounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "counts unavailable seconds"
        ::= { wfMcT1AnsiEntry 9 }

    wfMcT1AnsiPRMR0Counts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts PRMs that ewre received in the FDL in
                the last four seconds"
        ::= { wfMcT1AnsiEntry 10 }

    wfMcT1AnsiPRMR1Counts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts PRMs that ewre received in the FDL in
                the last four seconds"
        ::= { wfMcT1AnsiEntry 11 }

    wfMcT1AnsiPRMR2Counts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts PRMs that ewre received in the FDL in
                the last four seconds"
        ::= { wfMcT1AnsiEntry 12 }

    wfMcT1AnsiPRMR3Counts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts PRMs that ewre received in the FDL in
                the last four seconds"
        ::= { wfMcT1AnsiEntry 13 }

    wfMcT1AnsiPRMESCounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts errorred seconds as reported in the Performance
                report messages"
        ::= { wfMcT1AnsiEntry 14 }

    wfMcT1AnsiPRMSESCounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts severely errorred seconds as reported in the
                Performance report messages"
        ::= { wfMcT1AnsiEntry 15 }

    wfMcT1AnsiPRMECounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counts Performance report messages that are received
                in error"
        ::= { wfMcT1AnsiEntry 16 }

    wfMcT1BertStatsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfMcT1BertStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "BERT Counter line record - This table contains the
                statistics for the BERT tester."
        ::= { wfMcT1Group 9 }

    wfMcT1BertStatsEntry OBJECT-TYPE
        SYNTAX	WfMcT1BertStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the MCT1 Bert Stats table"
        INDEX	{ wfMcT1BertStatsSlot,
    		  wfMcT1BertStatsConnector }
        ::= { wfMcT1BertStatsTable 1 }

    WfMcT1BertStatsEntry ::= SEQUENCE {
    	    wfMcT1BertStatsSlot
    		INTEGER,
    	    wfMcT1BertStatsConnector
    		INTEGER,
    	    wfMcT1BertStatsBitErrors
    		Counter,
    	    wfMcT1BertStatsBits
    		Counter
        }

    wfMcT1BertStatsSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Slot, filled in by driver"
        ::= { wfMcT1BertStatsEntry 1 }

    wfMcT1BertStatsConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Connector, filled in by driver"
        ::= { wfMcT1BertStatsEntry 2 }

    wfMcT1BertStatsBitErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Bit error counter"
        ::= { wfMcT1BertStatsEntry 3 }

    wfMcT1BertStatsBits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Bit counter"
        ::= { wfMcT1BertStatsEntry 4 }

    END  -- Wellfleet-MCT1-MIB
-- @(#)WSCCS q/mibs-module.mib 1.1 8/30/95
Wellfleet-MODULE-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:45:27 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfHwModuleGroup
        FROM Wellfleet-COMMON-MIB;


    wfHwModuleTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfHwModuleEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Hardware Module Table
                Filled in by the Module Driver. Read by SNMP to
                build the driver load records "
        ::= { wfHwModuleGroup 1 }

    wfHwModuleEntry OBJECT-TYPE
        SYNTAX	WfHwModuleEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Hardware specific information about a slot."
        INDEX	{ wfHwModuleSlot,
    		  wfHwModuleModule }
        ::= { wfHwModuleTable 1 }

    WfHwModuleEntry ::= SEQUENCE {
    	    wfHwModuleSlot
    		INTEGER,
    	    wfHwModuleModule
    		INTEGER,
    	    wfHwModuleModIdOpt
    		INTEGER,
    	    wfHwModuleModRev
    		OCTET STRING,
    	    wfHwModuleModSerialNumber
    		OCTET STRING,
    	    wfHwModuleArtworkRev
    		DisplayString
        }

    wfHwModuleSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A unique value for each slot.
                Its value ranges between 1 and 4."
        ::= { wfHwModuleEntry 1 }

    wfHwModuleModule OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This value ranges between 1 and 4"
        ::= { wfHwModuleEntry 2 }

    wfHwModuleModIdOpt OBJECT-TYPE
        SYNTAX	INTEGER {
    		    spex(512),
    		    hss(768),
    		    hsd(769),
    		    denm(1280),
    		    denmhwf(1281),
    		    dsnmnn(1536),
    		    dsnmn1(1537),
    		    dsnmn2(1538),
    		    dsnm1n(1540),
    		    dsnm11(1541),
    		    dsnm12(1542),
    		    dsnm2n(1544),
    		    dsnm21(1545),
    		    dsnm22(1546),
    		    dsnmnnisdn(1584),
    		    dsnmn1isdn(1585),
    		    dsnmn2isdn(1586),
    		    dsnm1nisdn(1588),
    		    dsnm11isdn(1589),
    		    dsnm12isdn(1590),
    		    dsnm2nisdn(1592),
    		    dsnm21isdn(1593),
    		    dsnm22isdn(1594),
    		    mmfsdsas(1792),
    		    mmfsddas(1793),
    		    smfsdsas(1800),
    		    smfsddas(1801),
    		    mmscsas(1808),
    		    mmscdas(1809),
    		    smammbdas(1825),
    		    mmasmbdas(1833),
    		    mmfsdsashwf(1856),
    		    mmfsddashwf(1857),
    		    smfsdsashwf(1864),
    		    smfsddashwf(1865),
    		    mmscsashwf(1872),
    		    mmscdashwf(1873),
    		    smammbdashwf(1889),
    		    mmasmbdashwf(1897),
    		    dtnm(2048),
    		    cam(2049),
    		    se100nm(2304),
    		    asnqbri(2560)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Module IDs for the net modules modules"
        ::= { wfHwModuleEntry 3 }

    wfHwModuleModRev OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The revision level of the module. High byte is in upper 2 bytes."
        ::= { wfHwModuleEntry 4 }

    wfHwModuleModSerialNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The serial number of the module."
        ::= { wfHwModuleEntry 5 }

    wfHwModuleArtworkRev OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Artwork Revision number of the module"
        ::= { wfHwModuleEntry 6 }

    wfModuleTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfModuleEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table is used by the module driver for Barracuda"
        ::= { wfHwModuleGroup 2 }

    wfModuleEntry OBJECT-TYPE
        SYNTAX	WfModuleEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Hardware specific information about a slot."
        INDEX	{ wfModuleSlot }
        ::= { wfModuleTable 1 }

    WfModuleEntry ::= SEQUENCE {
    	    wfModuleDelete
    		INTEGER,
    	    wfModuleSlot
    		INTEGER,
    	    wfModuleTimerFrequency
    		INTEGER,
    	    wfModuleBufferBalance
    		INTEGER,
    	    wfModuleFddiWeight
    		INTEGER,
    	    wfModuleTokenRingWeight
    		INTEGER,
    	    wfModuleCsmacdWeight
    		INTEGER,
    	    wfModuleSyncWeight
    		INTEGER,
    	    wfModuleFreeBufferCredits
    		INTEGER,
    	    wfModuleTotalBufferCredits
    		INTEGER,
    	    wfModuleRestart
    		INTEGER,
    	    wfModuleCsmacd100Weight
    		INTEGER
        }

    wfModuleDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "create/delete parameter"
        DEFVAL	{ created }
        ::= { wfModuleEntry 1 }

    wfModuleSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A unique value for each slot.
                Its value ranges between 1 and 14.
                There are products in this family that contain 1, 5, and 14 slots."
        ::= { wfModuleEntry 2 }

    wfModuleTimerFrequency OBJECT-TYPE
        SYNTAX	INTEGER {
    		    timerdefault(1)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value determines the frequency for the buffer balance
                algorithm to run"
        DEFVAL	{ timerdefault }
        ::= { wfModuleEntry 3 }

    wfModuleBufferBalance OBJECT-TYPE
        SYNTAX	INTEGER {
    		    txrx(1),
    		    none(2),
    		    rx(3),
    		    tx(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable buffer balancing algorithm selectively"
        DEFVAL	{ txrx }
        ::= { wfModuleEntry 4 }

    wfModuleFddiWeight OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value determines the weight of the fddi line
                for the buffer balancing algorithm"
        DEFVAL	{ 6 }
        ::= { wfModuleEntry 5 }

    wfModuleTokenRingWeight OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value determines the weight of the token-ring
                for the buffer balancing algorithm"
        DEFVAL	{ 4 }
        ::= { wfModuleEntry 6 }

    wfModuleCsmacdWeight OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value determines the weight of the csmacd line
                for the buffer balancing algorithm"
        DEFVAL	{ 3 }
        ::= { wfModuleEntry 7 }

    wfModuleSyncWeight OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value determines the weight of the sync line
                for the buffer balancing algorithm"
        DEFVAL	{ 2 }
        ::= { wfModuleEntry 8 }

    wfModuleFreeBufferCredits OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This attribute indicates the number of buffers
                available to line drivers but not used by them"
        ::= { wfModuleEntry 9 }

    wfModuleTotalBufferCredits OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This attribute indicates the total number of buffers
                available to line drivers"
        ::= { wfModuleEntry 10 }

    wfModuleRestart OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute should be touched after the queue
                lengths are configured in the line-records"
        ::= { wfModuleEntry 11 }

    wfModuleCsmacd100Weight OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value determines the weight of the csmacd 100MB line
                for the buffer balancing algorithm"
        DEFVAL	{ 6 }
        ::= { wfModuleEntry 12 }

    END  -- Wellfleet-MODULE-MIB
-- @(#)WSCCS d/mibs-nbip.mib 1.1 8/30/95
Wellfleet-NBIP-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:45:32 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfNetBIOSIpGroup
        FROM Wellfleet-COMMON-MIB;


    wfNetbiosIp	OBJECT IDENTIFIER ::= { wfNetBIOSIpGroup 1 }

    wfNetbiosIpDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete the NetBIOS
                over IP support."
        DEFVAL	{ created }
        ::= { wfNetbiosIp 1 }

    wfNetbiosIpDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable the NetBIOS
                over IP support."
        DEFVAL	{ enabled }
        ::= { wfNetbiosIp 2 }

    wfNetbiosIpState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpres(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the entire NetBIOS over IP."
        DEFVAL	{ notpres }
        ::= { wfNetbiosIp 3 }

    wfNetbiosIpNameCacheDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for the NetBIOS name cache."
        DEFVAL	{ disabled }
        ::= { wfNetbiosIp 4 }

    wfNetbiosIp15CharacterDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for 15-character NetBIOS name caching."
        DEFVAL	{ disabled }
        ::= { wfNetbiosIp 5 }

    wfNetbiosIpNameCacheMibDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable creation of MIB instances for each cached name."
        DEFVAL	{ enabled }
        ::= { wfNetbiosIp 6 }

    wfNetbiosIpNameCacheMaximumEntries OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of entries allowed in the NetBIOS name cache."
        DEFVAL	{ 100 }
        ::= { wfNetbiosIp 7 }

    wfNetbiosIpNameCacheCurrentEntries OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of entries currently in the NetBIOS name cache."
        ::= { wfNetbiosIp 8 }

    wfNetbiosIpNameCacheAgeTime OBJECT-TYPE
        SYNTAX	INTEGER(60..604800)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The age in seconds when inactive NetBIOS names will be aged out of the
                cache."
        DEFVAL	{ 300 }
        ::= { wfNetbiosIp 9 }

    wfNetbiosIpNameCacheHashEntries OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of entries in the NetBIOS name cache hash table."
        DEFVAL	{ 253 }
        ::= { wfNetbiosIp 10 }

    wfNetbiosIpNameCacheHits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the NetBIOS name cache has been used."
        ::= { wfNetbiosIp 11 }

    wfNetbiosIpNameCacheMisses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of failed lookups on the NetBIOS name cache."
        ::= { wfNetbiosIp 12 }

    wfNetbiosIpRebroadcastTTL OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The default time-to-live value in seconds to use in rebroadcasted packets."
        DEFVAL	{ 5 }
        ::= { wfNetbiosIp 13 }

    wfNetbiosIpRebroadcastRecordRoute OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable insertion of Record Route option in rebroadcasted packets."
        DEFVAL	{ disabled }
        ::= { wfNetbiosIp 14 }

    wfNetbiosIpInterfaceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNetbiosIpInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table that contains information about every interface that is
                configured to run/not run NetBIOS over IP.
                inst_id[1] = wfNetbiosIpInterfaceIndex"
        ::= { wfNetBIOSIpGroup 2 }

    wfNetbiosIpInterfaceEntry OBJECT-TYPE
        SYNTAX	WfNetbiosIpInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NetBIOS interface table."
        INDEX	{ wfNetbiosIpInterfaceIndex }
        ::= { wfNetbiosIpInterfaceTable 1 }

    WfNetbiosIpInterfaceEntry ::= SEQUENCE {
    	    wfNetbiosIpInterfaceDelete
    		INTEGER,
    	    wfNetbiosIpInterfaceDisable
    		INTEGER,
    	    wfNetbiosIpInterfaceState
    		INTEGER,
    	    wfNetbiosIpInterfaceIndex
    		IpAddress,
    	    wfNetbiosIpInterfaceReceivedFrames
    		Counter,
    	    wfNetbiosIpInterfaceReceivedBadFrames
    		Counter,
    	    wfNetbiosIpInterfaceTransmittedFrames
    		Counter,
    	    wfNetbiosIpInterfaceNameCacheDisable
    		INTEGER,
    	    wfNetbiosIpInterfaceInBroadcastDisable
    		INTEGER,
    	    wfNetbiosIpInterfaceOutBroadcastDisable
    		INTEGER,
    	    wfNetbiosIpInterfaceRebroadcastAddr
    		IpAddress
        }

    wfNetbiosIpInterfaceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete an interface."
        DEFVAL	{ created }
        ::= { wfNetbiosIpInterfaceEntry 1 }

    wfNetbiosIpInterfaceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an interface."
        DEFVAL	{ enabled }
        ::= { wfNetbiosIpInterfaceEntry 2 }

    wfNetbiosIpInterfaceState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpres(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of NetBIOS over IP on this interface."
        DEFVAL	{ notpres }
        ::= { wfNetbiosIpInterfaceEntry 3 }

    wfNetbiosIpInterfaceIndex OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address of this interface."
        ::= { wfNetbiosIpInterfaceEntry 4 }

    wfNetbiosIpInterfaceReceivedFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of frames that have been received by
                this interface from its circuit."
        ::= { wfNetbiosIpInterfaceEntry 5 }

    wfNetbiosIpInterfaceReceivedBadFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of invalid frames that have been received by
                this interface from its circuit."
        ::= { wfNetbiosIpInterfaceEntry 6 }

    wfNetbiosIpInterfaceTransmittedFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of frames that have been transmitted
                by this interface."
        ::= { wfNetbiosIpInterfaceEntry 7 }

    wfNetbiosIpInterfaceNameCacheDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for NetBIOS name caching."
        DEFVAL	{ enabled }
        ::= { wfNetbiosIpInterfaceEntry 8 }

    wfNetbiosIpInterfaceInBroadcastDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for the input of NetBIOS broadcasts."
        DEFVAL	{ enabled }
        ::= { wfNetbiosIpInterfaceEntry 9 }

    wfNetbiosIpInterfaceOutBroadcastDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for the output of NetBIOS broadcasts."
        DEFVAL	{ enabled }
        ::= { wfNetbiosIpInterfaceEntry 10 }

    wfNetbiosIpInterfaceRebroadcastAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The IP broadcast address to use for rebroadcasted packets out this
                interface."
        ::= { wfNetbiosIpInterfaceEntry 11 }

    wfNetbiosIpNameTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNetbiosIpNameEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The NetBIOS name cache table."
        ::= { wfNetBIOSIpGroup 3 }

    wfNetbiosIpNameEntry OBJECT-TYPE
        SYNTAX	WfNetbiosIpNameEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NetBIOS name cache table."
        INDEX	{ wfNetbiosIpName,
    		  wfNetbiosIpAddress,
    		  wfNetbiosIpIdNumber }
        ::= { wfNetbiosIpNameTable 1 }

    WfNetbiosIpNameEntry ::= SEQUENCE {
    	    wfNetbiosIpName
    		OCTET STRING,
    	    wfNetbiosIpScopeId
    		OCTET STRING,
    	    wfNetbiosIpAddress
    		IpAddress,
    	    wfNetbiosIpStatic
    		INTEGER,
    	    wfNetbiosIpCacheHits
    		Counter,
    	    wfNetbiosIpIdNumber
    		INTEGER
        }

    wfNetbiosIpName OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (16))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The NetBIOS name of this station. It is a maximum of 16 characters."
        ::= { wfNetbiosIpNameEntry 1 }

    wfNetbiosIpScopeId OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The NetBIOS scope id of this station."
        ::= { wfNetbiosIpNameEntry 2 }

    wfNetbiosIpAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address of the NetBIOS station."
        ::= { wfNetbiosIpNameEntry 3 }

    wfNetbiosIpStatic OBJECT-TYPE
        SYNTAX	INTEGER {
    		    static(1),
    		    learned(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this entry is a static or learned entry."
        ::= { wfNetbiosIpNameEntry 4 }

    wfNetbiosIpCacheHits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Name Query Responses that have been converted by this station."
        ::= { wfNetbiosIpNameEntry 5 }

    wfNetbiosIpIdNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Uniqueness ID for the MIB entry."
        ::= { wfNetbiosIpNameEntry 6 }

    wfNetbiosIpStaticTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNetbiosIpStaticEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The NetBIOS static server/client entry table."
        ::= { wfNetBIOSIpGroup 4 }

    wfNetbiosIpStaticEntry OBJECT-TYPE
        SYNTAX	WfNetbiosIpStaticEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NetBIOS static entry table."
        INDEX	{ wfNetbiosIpStaticName,
    		  wfNetbiosIpStaticIpAddress,
    		  wfNetbiosIpStaticIdNumber }
        ::= { wfNetbiosIpStaticTable 1 }

    WfNetbiosIpStaticEntry ::= SEQUENCE {
    	    wfNetbiosIpStaticDelete
    		INTEGER,
    	    wfNetbiosIpStaticDisable
    		INTEGER,
    	    wfNetbiosIpStaticState
    		INTEGER,
    	    wfNetbiosIpStaticName
    		OCTET STRING,
    	    wfNetbiosIpStaticScopeId
    		OCTET STRING,
    	    wfNetbiosIpStaticIpAddress
    		IpAddress,
    	    wfNetbiosIpStaticIdNumber
    		INTEGER
        }

    wfNetbiosIpStaticDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter for the NetBIOS static entry."
        DEFVAL	{ created }
        ::= { wfNetbiosIpStaticEntry 1 }

    wfNetbiosIpStaticDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for the NetBIOS static entry."
        DEFVAL	{ enabled }
        ::= { wfNetbiosIpStaticEntry 2 }

    wfNetbiosIpStaticState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    valid(1),
    		    invalid(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The state of this NetBIOS static entry."
        DEFVAL	{ invalid }
        ::= { wfNetbiosIpStaticEntry 3 }

    wfNetbiosIpStaticName OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (16))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The NetBIOS name of the station. It is a maximum of 16 characters.
                Names that are shorter are padded with ASCII spaces - 0x20."
        ::= { wfNetbiosIpStaticEntry 4 }

    wfNetbiosIpStaticScopeId OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The NetBIOS scope id of the station. Once set, this should not be changed."
        ::= { wfNetbiosIpStaticEntry 5 }

    wfNetbiosIpStaticIpAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address of the NetBIOS station."
        ::= { wfNetbiosIpStaticEntry 6 }

    wfNetbiosIpStaticIdNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Uniqueness ID for the MIB entry."
        ::= { wfNetbiosIpStaticEntry 7 }

    END  -- Wellfleet-NBIP-MIB
-- @(#)WSCCS x/mibs-nlsp.mib 1.3 10/13/95
Wellfleet-NLSP-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:45:39 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfNlspGroup
        FROM Wellfleet-COMMON-MIB;


    wfNlspSys	OBJECT IDENTIFIER ::= { wfNlspGroup 1 }

    wfNlspSysDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete NLSP."
        DEFVAL	{ created }
        ::= { wfNlspSys 1 }

    wfNlspSysDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable NLSP."
        DEFVAL	{ enabled }
        ::= { wfNlspSys 2 }

    wfNlspSysModuleState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the entire NLSP."
        DEFVAL	{ notpresent }
        ::= { wfNlspSys 3 }

    wfNlspSysNodeName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The name for this router from IPX."
        ::= { wfNlspSys 4 }

    wfNlspSysCfgID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The System ID assigned by the user."
        ::= { wfNlspSys 5 }

    wfNlspSysInternalNetworkNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The internal network number of this router
                from IPX."
        ::= { wfNlspSys 6 }

    wfNlspSysState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    off(1),
    		    router(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "NLSP operational state."
        DEFVAL	{ router }
        ::= { wfNlspSys 7 }

    wfNlspSysHtblSize OBJECT-TYPE
        SYNTAX	INTEGER(16..4096)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Size of Primary hash table. The default is 1023 entries.
                The size should reside between 16 and 4096 entries."
        DEFVAL	{ 1023 }
        ::= { wfNlspSys 8 }

    wfNlspSysEnforceScalability OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Either enable or disable. When enabled, all
                network numbers have a prefix which matches
                one of the configured area addresses."
        DEFVAL	{ enabled }
        ::= { wfNlspSys 9 }

    wfNlspSysExpandedMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "When enabled, NLSP is allowed to exist on a slot
                even without any local NLSP interface configured.
                When disabled, majority of NLSP related processes
                will be destroyed thus conserving memory."
        DEFVAL	{ disabled }
        ::= { wfNlspSys 10 }

    wfNlspSysFilterLogMsgType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    debug(1),
    		    info(2),
    		    debuginfo(3),
    		    trace(4),
    		    tracedebug(5),
    		    traceinfo(6),
    		    traceinfodebug(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "NLSP Event Description Log filter. When configured
                the specific event will not be included in the log."
        DEFVAL	{ trace }
        ::= { wfNlspSys 11 }

    wfNlspSysMinNonBcastLSPTransInt OBJECT-TYPE
        SYNTAX	INTEGER(1..30)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The minimum interval, in seconds, between transmission
                of LSPs on a non-broadcast circuit. The default is 10
                seconds.  This value should be between 1 and 30 seconds."
        DEFVAL	{ 10 }
        ::= { wfNlspSys 12 }

    wfNlspSysMinBcastLSPTransInt OBJECT-TYPE
        SYNTAX	INTEGER(1..30)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The minimum interval, in seconds, between transmission
                of LSPs on a broadcast circuit.  The default is 5 seconds.
                This value should reside between 1 and 30 seconds."
        DEFVAL	{ 5 }
        ::= { wfNlspSys 13 }

    wfNlspSysMinLSPGenInt OBJECT-TYPE
        SYNTAX	INTEGER(1..30)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The minimum interval, in seconds, between the generation of
                the same LSP. The default is 5 seconds. This value should
                reside between 1 and 30 seconds."
        DEFVAL	{ 5 }
        ::= { wfNlspSys 14 }

    wfNlspSysMaxLSPGenInt OBJECT-TYPE
        SYNTAX	INTEGER(1..50000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum interval, in seconds, between the generation
                of the same LSP.  The default value is 7200 seconds.
                This value should reside between 1 and 50000."
        DEFVAL	{ 7200 }
        ::= { wfNlspSys 15 }

    wfNlspSysMaxLSPAge OBJECT-TYPE
        SYNTAX	INTEGER(1..50000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The value, in seconds, placed in the lifetime field of
                LSPs generated by this instance of NLSP.  The default
                is 7500 seconds. This value should reside between 1 and
                50000 seconds."
        DEFVAL	{ 7500 }
        ::= { wfNlspSys 16 }

    wfNlspSysBcastHelloInt OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The interval, in seconds, at which NLSP Hellos will be
                sent on a broadcast circuit, if this system is not the
                designated router.  The default is 10 seconds.
                This value should reside between 1 and 100 seconds."
        DEFVAL	{ 10 }
        ::= { wfNlspSys 17 }

    wfNlspSysNonBcastHelloInt OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The interval, in seconds, at which NLSP Hellos will be
                sent on a non-broadcast circuit. The default is 5 seconds.
                This value should reside between 1 and 100 seconds."
        DEFVAL	{ 5 }
        ::= { wfNlspSys 18 }

    wfNlspSysDRBcastHelloInt OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The interval, in seconds, at which the designated
                router sends NLSP Hellos on a broadcast circuit.  The
                default is 3 seconds. This value should reside between
                1 and 100 seconds."
        DEFVAL	{ 3 }
        ::= { wfNlspSys 19 }

    wfNlspSysHoldTimeMultiplier OBJECT-TYPE
        SYNTAX	INTEGER(2..20)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The holding time multiplier used to specify the holding
                time for NLSP neighbor entries as a function of the NLSP
                Hello interval.  The default is 5.  This value should
                reside between 2 and 20."
        DEFVAL	{ 5 }
        ::= { wfNlspSys 20 }

    wfNlspSysCompSNPInt OBJECT-TYPE
        SYNTAX	INTEGER(1..600)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The interval, in seconds, between generation of Complete
                Sequence Number Packets by a designated router on a
                broadcast circuit.  The default is 30 seconds.
                This value should reside between 1 and 600 seconds."
        DEFVAL	{ 30 }
        ::= { wfNlspSys 21 }

    wfNlspSysPartSNPInt OBJECT-TYPE
        SYNTAX	INTEGER(1..60)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The minimum interval, in seconds, between transmission of
                Partial Sequence Number Packets.  The default is 5 seconds.
                This value should reside between 1 and 60 seconds."
        DEFVAL	{ 5 }
        ::= { wfNlspSys 22 }

    wfNlspSysWaitTime OBJECT-TYPE
        SYNTAX	INTEGER(1..300)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of seconds to delay in the waiting state
                before entering the on state.  The default is 120 seconds.
                This value should reside between 1 and 300 seconds."
        DEFVAL	{ 120 }
        ::= { wfNlspSys 23 }

    wfNlspSysOrigL1LSPBufSize OBJECT-TYPE
        SYNTAX	INTEGER(512..4096)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum size of Level 1 LSPs originated by
                this instance of NLSP.  The default is 512 bytes.
                This value should reside between 512 and 4096 bytes."
        DEFVAL	{ 512 }
        ::= { wfNlspSys 24 }

    wfNlspSysVersion OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The version number of this instance of NLSP."
        ::= { wfNlspSys 25 }

    wfNlspSysCorrLSPs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of corrupt LSPs detected."
        ::= { wfNlspSys 26 }

    wfNlspSysL1Overloaded OBJECT-TYPE
        SYNTAX	INTEGER {
    		    no(1),
    		    yes(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the NLSP Level 1 database is overloaded."
        DEFVAL	{ no }
        ::= { wfNlspSys 27 }

    wfNlspSysL1DBaseOverloads OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the NLSP Level 1 LSP database has
                become overloaded."
        ::= { wfNlspSys 28 }

    wfNlspSysMaxSeqNums OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the router has attempted to exceed
                NLSP's maximum sequence number."
        ::= { wfNlspSys 29 }

    wfNlspSysSeqNumSkips OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times a sequence number skip has occurred."
        ::= { wfNlspSys 30 }

    wfNlspSysTransmittedLSPs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of LSPs transmitted by this system."
        ::= { wfNlspSys 31 }

    wfNlspSysReceivedLSPs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of LSPs received by this system."
        ::= { wfNlspSys 32 }

    wfNlspSysOwnLSPPurges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times a zero-aged copy of the router's own
                LSP has been received from some other node."
        ::= { wfNlspSys 33 }

    wfNlspSysVersionErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times that a received NLSP packet was
                rejected because its version number was invalid."
        ::= { wfNlspSys 34 }

    wfNlspSysIncorrectPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times that an incorrectly formatted NLSP
                packet was received."
        ::= { wfNlspSys 35 }

    wfNlspSysNearestL2Default OBJECT-TYPE
        SYNTAX	INTEGER {
    		    no(1),
    		    yes(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this instance of NLSP knows
                of a NLSP Level 2 router that currently can reach
                other areas using the default metric."
        DEFVAL	{ no }
        ::= { wfNlspSys 36 }

    wfNlspSysNearestL2DefaultRouter OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The system ID of the nearest NLSP Level 2 router that
                currently can reach other areas using the default
                metric.  The value is undefined if the value of
                nlspSysNearestL2DefaultExists is no.
                6 octets maximum."
        ::= { wfNlspSys 37 }

    wfNlspSysResourceFailures OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times this instance of the NLSP has been
                unable to obtain needed resources (memory, etc.)"
        ::= { wfNlspSys 38 }

    wfNlspSysTotNumIntf OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of interfaces configured. This includes
                all interfaces that are enabled AND disabled."
        ::= { wfNlspSys 39 }

    wfNlspSysTotNumIntfEnabled OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of interfaces that are enabled."
        ::= { wfNlspSys 40 }

    wfNlspSysTotNumAreaCfg OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of areas configured. This includes
                all areas that are enabled AND disabled."
        ::= { wfNlspSys 41 }

    wfNlspSysTotNumAreaUsed OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of areas that are enabled."
        ::= { wfNlspSys 42 }

    wfNlspSysID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The System ID used."
        ::= { wfNlspSys 43 }

    wfNlspSysTotNumDijkstraRun OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of Dijkstra executions."
        ::= { wfNlspSys 44 }

    wfNlspSysCT OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The NLSP Certification Test compatible flag."
        ::= { wfNlspSys 45 }

    wfNlspSysAreaTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspSysAreaEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "System AreaID Table
                The System AreaID table contains all the areas
                that were configured for this router."
        ::= { wfNlspGroup 2 }

    wfNlspSysAreaEntry OBJECT-TYPE
        SYNTAX	WfNlspSysAreaEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NLSP System Area Table."
        INDEX	{ wfNlspSysAreaID }
        ::= { wfNlspSysAreaTable 1 }

    WfNlspSysAreaEntry ::= SEQUENCE {
    	    wfNlspSysAreaDelete
    		INTEGER,
    	    wfNlspSysAreaDisable
    		INTEGER,
    	    wfNlspSysAreaID
    		INTEGER,
    	    wfNlspSysAreaAddress
    		OCTET STRING,
    	    wfNlspSysAreaAddressMask
    		OCTET STRING,
    	    wfNlspSysAreaName
    		DisplayString,
    	    wfNlspSysAreaNumCfgAreaAliases
    		INTEGER,
    	    wfNlspSysAreaNumCfgInterfaces
    		INTEGER,
    	    wfNlspSysAreaNumNodes
    		INTEGER,
    	    wfNlspSysAreaNumNlspRtes
    		INTEGER,
    	    wfNlspSysAreaNumXRIPRtes
    		INTEGER,
    	    wfNlspSysAreaNumXSAPRtes
    		INTEGER
        }

    wfNlspSysAreaDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Users perform an SNMP set
                command to create/delete an NLSP Area."
        DEFVAL	{ created }
        ::= { wfNlspSysAreaEntry 1 }

    wfNlspSysAreaDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Users perform an SNMP
                set command to enable/disable an NLSP Area."
        DEFVAL	{ enabled }
        ::= { wfNlspSysAreaEntry 2 }

    wfNlspSysAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Area ID concept is equivalent to Novell NLSP
                System Instance concept.  This is more meaningful.
                0  -   Backbone Area.
                n  -   Non-backbone Area."
        ::= { wfNlspSysAreaEntry 3 }

    wfNlspSysAreaAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This field contains the Area Address
                for this particular area.  This field is
                mandatory if scalability is enforced.
                This field should be identical to the
                result of ANDing with the area address mask
                field.  If scalability is NOT enforce,
                this field should be NULLed."
        ::= { wfNlspSysAreaEntry 4 }

    wfNlspSysAreaAddressMask OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Area Mask. Only applicable when scalability
                is enforced.  NULLed if NOT enforce."
        ::= { wfNlspSysAreaEntry 5 }

    wfNlspSysAreaName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Name for this particular Area."
        ::= { wfNlspSysAreaEntry 6 }

    wfNlspSysAreaNumCfgAreaAliases OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of Area Addresses configured
                for this Area.  Maximum is 3."
        ::= { wfNlspSysAreaEntry 7 }

    wfNlspSysAreaNumCfgInterfaces OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of Interfaces configured
                for this Area."
        ::= { wfNlspSysAreaEntry 8 }

    wfNlspSysAreaNumNodes OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of NLSP nodes encounted in this
                Area."
        ::= { wfNlspSysAreaEntry 9 }

    wfNlspSysAreaNumNlspRtes OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of NLSP routes encounted in this
                Area."
        ::= { wfNlspSysAreaEntry 10 }

    wfNlspSysAreaNumXRIPRtes OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of external RIP routes encounted
                in this Area."
        ::= { wfNlspSysAreaEntry 11 }

    wfNlspSysAreaNumXSAPRtes OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of external SAP routes encounted
                in this Area."
        ::= { wfNlspSysAreaEntry 12 }

    wfNlspSysAreaAliasTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspSysAreaAliasEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "System Area Alias Table
                The System Area Alias table contains all the area
                aliases configured per Area for this router."
        ::= { wfNlspGroup 3 }

    wfNlspSysAreaAliasEntry OBJECT-TYPE
        SYNTAX	WfNlspSysAreaAliasEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NLSP System Area Alias Table."
        INDEX	{ wfNlspSysAreaAliasAreaID,
    		  wfNlspSysAreaAliasAddress,
    		  wfNlspSysAreaAliasAddressMask }
        ::= { wfNlspSysAreaAliasTable 1 }

    WfNlspSysAreaAliasEntry ::= SEQUENCE {
    	    wfNlspSysAreaAliasDelete
    		INTEGER,
    	    wfNlspSysAreaAliasDisable
    		INTEGER,
    	    wfNlspSysAreaAliasAreaID
    		INTEGER,
    	    wfNlspSysAreaAliasAddress
    		OCTET STRING,
    	    wfNlspSysAreaAliasAddressMask
    		OCTET STRING,
    	    wfNlspSysAreaAliasName
    		DisplayString
        }

    wfNlspSysAreaAliasDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Users perform an SNMP set
                command to create/delete an NLSP Area Alias."
        DEFVAL	{ created }
        ::= { wfNlspSysAreaAliasEntry 1 }

    wfNlspSysAreaAliasDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Users perform an SNMP
                set command to enable/disable an NLSP Area Alias."
        DEFVAL	{ enabled }
        ::= { wfNlspSysAreaAliasEntry 2 }

    wfNlspSysAreaAliasAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Area where this Area Alias is."
        ::= { wfNlspSysAreaAliasEntry 3 }

    wfNlspSysAreaAliasAddress OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Area Alias address."
        ::= { wfNlspSysAreaAliasEntry 4 }

    wfNlspSysAreaAliasAddressMask OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The mask portion of the Area Alias address."
        ::= { wfNlspSysAreaAliasEntry 5 }

    wfNlspSysAreaAliasName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Name for this Area Alias address that is
                recognized by human."
        ::= { wfNlspSysAreaAliasEntry 6 }

    wfNlspSysActAreaAliasTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspSysActAreaAliasEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Actual Area Alias Table.
                The Actual Area Alias table contains the area
                aliases actually used by NLSP on this router per
                area."
        ::= { wfNlspGroup 4 }

    wfNlspSysActAreaAliasEntry OBJECT-TYPE
        SYNTAX	WfNlspSysActAreaAliasEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NLSP Actual Area Alias Table."
        INDEX	{ wfNlspSysActAreaAliasAreaID,
    		  wfNlspSysActAreaAliasAddress,
    		  wfNlspSysActAreaAliasAddressMask }
        ::= { wfNlspSysActAreaAliasTable 1 }

    WfNlspSysActAreaAliasEntry ::= SEQUENCE {
    	    wfNlspSysActAreaAliasAreaID
    		INTEGER,
    	    wfNlspSysActAreaAliasAddress
    		OCTET STRING,
    	    wfNlspSysActAreaAliasAddressMask
    		OCTET STRING,
    	    wfNlspSysActAreaAliasName
    		DisplayString,
    	    wfNlspSysActAreaAliasNumNodes
    		INTEGER,
    	    wfNlspSysActAreaAliasNumNlspRtes
    		INTEGER,
    	    wfNlspSysActAreaAliasNumXRIPRtes
    		INTEGER,
    	    wfNlspSysActAreaAliasNumXSAPRtes
    		INTEGER
        }

    wfNlspSysActAreaAliasAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Area this actual area alias associates with."
        ::= { wfNlspSysActAreaAliasEntry 1 }

    wfNlspSysActAreaAliasAddress OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The area alias address."
        ::= { wfNlspSysActAreaAliasEntry 2 }

    wfNlspSysActAreaAliasAddressMask OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The area alias address mask."
        ::= { wfNlspSysActAreaAliasEntry 3 }

    wfNlspSysActAreaAliasName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Name for this area alias that is recognized
                by human."
        ::= { wfNlspSysActAreaAliasEntry 4 }

    wfNlspSysActAreaAliasNumNodes OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of NLSP Nodes in this area alias."
        ::= { wfNlspSysActAreaAliasEntry 5 }

    wfNlspSysActAreaAliasNumNlspRtes OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of NLSP routes in this area alias."
        ::= { wfNlspSysActAreaAliasEntry 6 }

    wfNlspSysActAreaAliasNumXRIPRtes OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of external RIP routes in this area
                alias."
        ::= { wfNlspSysActAreaAliasEntry 7 }

    wfNlspSysActAreaAliasNumXSAPRtes OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of external SAP routes in this area
                alias."
        ::= { wfNlspSysActAreaAliasEntry 8 }

    wfNlspIntfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspIntfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "NLSP Interface Table
                The NLSP Interface Table contains information for
                each interface known to the system. There are
                unique.  This table is equivalent to the NLSP
                Circuit table by Novell's definition."
        ::= { wfNlspGroup 5 }

    wfNlspIntfEntry OBJECT-TYPE
        SYNTAX	WfNlspIntfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NLSP Interface Table."
        INDEX	{ wfNlspIntfCircIndex }
        ::= { wfNlspIntfTable 1 }

    WfNlspIntfEntry ::= SEQUENCE {
    	    wfNlspIntfDelete
    		INTEGER,
    	    wfNlspIntfDisable
    		INTEGER,
    	    wfNlspIntfState
    		INTEGER,
    	    wfNlspIntfAreaID
    		INTEGER,
    	    wfNlspIntfAreaName
    		DisplayString,
    	    wfNlspIntfIpxIntfNetNum
    		OCTET STRING,
    	    wfNlspIntfCircIndex
    		INTEGER,
    	    wfNlspIntfName
    		DisplayString,
    	    wfNlspIntfType
    		DisplayString,
    	    wfNlspIntfMediaCode
    		INTEGER,
    	    wfNlspIntfSlot
    		INTEGER,
    	    wfNlspIntfDelay
    		INTEGER,
    	    wfNlspIntfThroughput
    		INTEGER,
    	    wfNlspIntfMTU
    		INTEGER,
    	    wfNlspIntfInfoXmtRcvDisable
    		INTEGER,
    	    wfNlspIntfPace
    		INTEGER,
    	    wfNlspIntfHelloTimer
    		INTEGER,
    	    wfNlspIntfL1DefaultCost
    		INTEGER,
    	    wfNlspIntfL1RouterPriority
    		INTEGER,
    	    wfNlspIntfL1CircID
    		OCTET STRING,
    	    wfNlspIntfL1DesRouter
    		OCTET STRING,
    	    wfNlspIntfL1DesRouterPriority
    		INTEGER,
    	    wfNlspIntfL1DesRouterHelloTimer
    		INTEGER,
    	    wfNlspIntfLANL1DesRouterChanges
    		Counter,
    	    wfNlspIntfNeighChanges
    		Counter,
    	    wfNlspIntfRejNeighbors
    		Counter,
    	    wfNlspIntfOutPackets
    		Counter,
    	    wfNlspIntfInPackets
    		Counter,
    	    wfNlspIntfActualMaxPacketSize
    		INTEGER,
    	    wfNlspIntfPSNPsSent
    		Counter,
    	    wfNlspIntfPSNPsReceived
    		Counter,
    	    wfNlspIntfPseudonodeNum
    		INTEGER
        }

    wfNlspIntfDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Users perform an SNMP set
                command to create/delete an NLSP interface."
        DEFVAL	{ created }
        ::= { wfNlspIntfEntry 1 }

    wfNlspIntfDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Users perform an SNMP set
                command to enable/disable an NLSP interface."
        DEFVAL	{ enabled }
        ::= { wfNlspIntfEntry 2 }

    wfNlspIntfState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4),
    		    noareacfg(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the NLSP interface
                State Explanation
                ----- -----------
                  1   Interface is fully operational
                  2   Interface is disabled
                  3   Found the configuration record and initializing
                  4   By default when it first came up before init process
                  5   No such Area configured."
        DEFVAL	{ notpresent }
        ::= { wfNlspIntfEntry 3 }

    wfNlspIntfAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Area for this interface."
        ::= { wfNlspIntfEntry 4 }

    wfNlspIntfAreaName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Name for this area that is recognized by human.
                Filled in from the Area Entry."
        ::= { wfNlspIntfEntry 5 }

    wfNlspIntfIpxIntfNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IPX network number associated with this
                NLSP interface."
        ::= { wfNlspIntfEntry 6 }

    wfNlspIntfCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of this interface, unique within the instance
                of NLSP.  This value may be written only when creating a
                new entry in the table.  For now, Wellfleet circuit
                number is used."
        ::= { wfNlspIntfEntry 7 }

    wfNlspIntfName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Name of this interface either generated by default or
                configured."
        ::= { wfNlspIntfEntry 8 }

    wfNlspIntfType OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Type of interface this is."
        ::= { wfNlspIntfEntry 9 }

    wfNlspIntfMediaCode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Media Code associated with this interface."
        ::= { wfNlspIntfEntry 10 }

    wfNlspIntfSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot this interface is on."
        ::= { wfNlspIntfEntry 11 }

    wfNlspIntfDelay OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Delay associated with this interface."
        ::= { wfNlspIntfEntry 12 }

    wfNlspIntfThroughput OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Throughput for this line."
        ::= { wfNlspIntfEntry 13 }

    wfNlspIntfMTU OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This interface MTU."
        ::= { wfNlspIntfEntry 14 }

    wfNlspIntfInfoXmtRcvDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether NLSP information may be sent/received
                over this interface."
        DEFVAL	{ enabled }
        ::= { wfNlspIntfEntry 15 }

    wfNlspIntfPace OBJECT-TYPE
        SYNTAX	INTEGER(1..18)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum pace, in packets per second, at which NLSP
                packets may be sent on this interface.
                Pace = circ speed / 10,000 and should be within the range
                of 1 <= pace <= 18.  This is in addition to the 1/18
                second gap."
        DEFVAL	{ 1 }
        ::= { wfNlspIntfEntry 16 }

    wfNlspIntfHelloTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The interval, in seconds, between NLSP Hello packets
                sent on this interface.  The default is 10 seconds.
                This value should reside between 1 and 100 seconds."
        DEFVAL	{ 10 }
        ::= { wfNlspIntfEntry 17 }

    wfNlspIntfL1DefaultCost OBJECT-TYPE
        SYNTAX	INTEGER(1..63)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The NLSP default cost of this interface for Level 1
                traffic. This value should reside between 1 and 63.
                The default is null - meaning use the Novell
                specified media cost. Otherwise, the configured
                value will be used."
        DEFVAL	{ 20 }
        ::= { wfNlspIntfEntry 18 }

    wfNlspIntfL1RouterPriority OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The priority for becoming the NLSP LAN
                Level 1 Designated Router on a broadcast interface.
                This value should reside between 1 and 127.  The
                default is 44."
        DEFVAL	{ 44 }
        ::= { wfNlspIntfEntry 19 }

    wfNlspIntfL1CircID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The NLSP ID for this interface. 7 octets maximum.
                6 octets of System ID + 1 octet of pseudonode ID."
        ::= { wfNlspIntfEntry 20 }

    wfNlspIntfL1DesRouter OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The system ID of the NLSP LAN Level 1 Designated Router
                on this interface. 6 octets maximum."
        ::= { wfNlspIntfEntry 21 }

    wfNlspIntfL1DesRouterPriority OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The priority for designated router."
        ::= { wfNlspIntfEntry 22 }

    wfNlspIntfL1DesRouterHelloTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The interval, in seconds, at which the designated
                router of this interface sends NLSP Hellos on a
                broadcast circuit.  The default is 3 seconds. This
                value should reside between 1 and 100 seconds."
        DEFVAL	{ 3 }
        ::= { wfNlspIntfEntry 23 }

    wfNlspIntfLANL1DesRouterChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the NLSP LAN Level 1 Designated
                Router has changed on this interface."
        ::= { wfNlspIntfEntry 24 }

    wfNlspIntfNeighChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times an NLSP neighbor state change has
                occurred on this interface."
        ::= { wfNlspIntfEntry 25 }

    wfNlspIntfRejNeighbors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times that a NLSP neighbor has been
                rejected on this interface."
        ::= { wfNlspIntfEntry 26 }

    wfNlspIntfOutPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of NLSP packets sent on this interface."
        ::= { wfNlspIntfEntry 27 }

    wfNlspIntfInPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of NLSP packets received on this interface."
        ::= { wfNlspIntfEntry 28 }

    wfNlspIntfActualMaxPacketSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The actual maximum packet size (including header),
                in bytes, that has been used on this interface."
        ::= { wfNlspIntfEntry 29 }

    wfNlspIntfPSNPsSent OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of PSNPs sent on this interface."
        ::= { wfNlspIntfEntry 30 }

    wfNlspIntfPSNPsReceived OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of PSNPs received on this interface."
        ::= { wfNlspIntfEntry 31 }

    wfNlspIntfPseudonodeNum OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Pseudonode Number for this interface. It must fall
                between 1 and 255 inclusively."
        DEFVAL	{ 1 }
        ::= { wfNlspIntfEntry 32 }

    wfNlspDestTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspDestEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Destination Table
                The Destination table contains additional NLSP forwarding
                information about all destinations learned via NLSP."
        ::= { wfNlspGroup 6 }

    wfNlspDestEntry OBJECT-TYPE
        SYNTAX	WfNlspDestEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NLSP Destination Table"
        INDEX	{ wfNlspDestAreaID,
    		  wfNlspDestNetNum,
    		  wfNlspDestIndex }
        ::= { wfNlspDestTable 1 }

    WfNlspDestEntry ::= SEQUENCE {
    	    wfNlspDestAreaID
    		INTEGER,
    	    wfNlspDestNetNum
    		OCTET STRING,
    	    wfNlspDestIndex
    		INTEGER,
    	    wfNlspDestID
    		OCTET STRING,
    	    wfNlspDestEstDelay
    		INTEGER,
    	    wfNlspDestEstThroughput
    		INTEGER,
    	    wfNlspDestNextHopID
    		OCTET STRING,
    	    wfNlspDestCost
    		INTEGER,
    	    wfNlspDestCircIndex
    		INTEGER
        }

    wfNlspDestAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Area this network is associated with."
        ::= { wfNlspDestEntry 1 }

    wfNlspDestNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IPX network number of the destination."
        ::= { wfNlspDestEntry 2 }

    wfNlspDestIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier for this NLSP destination."
        ::= { wfNlspDestEntry 3 }

    wfNlspDestID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The destination NLSP ID (6-octet system ID plus
                1-octet pseudo-node ID)."
        ::= { wfNlspDestEntry 4 }

    wfNlspDestEstDelay OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The estimated delay, in microseconds, to reach
                the destination."
        ::= { wfNlspDestEntry 5 }

    wfNlspDestEstThroughput OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The estimated throughput, in bits per second, to
                the destination."
        ::= { wfNlspDestEntry 6 }

    wfNlspDestNextHopID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The NLSP ID (6-octet system ID plus 1-octet
                pseudo-node ID) of the next hop."
        ::= { wfNlspDestEntry 7 }

    wfNlspDestCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total path default cost to reach this destination."
        ::= { wfNlspDestEntry 8 }

    wfNlspDestCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit index of the interface used to reach the
                next hop."
        ::= { wfNlspDestEntry 9 }

    wfNlspNeighTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspNeighEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "NLSP Neighbors Table
                This table contains an entry for each neighboring NLSP router
                known to the system."
        ::= { wfNlspGroup 7 }

    wfNlspNeighEntry OBJECT-TYPE
        SYNTAX	WfNlspNeighEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NLSP Neighbor Table."
        INDEX	{ wfNlspNeighAreaID,
    		  wfNlspNeighSysID,
    		  wfNlspNeighNICAddress }
        ::= { wfNlspNeighTable 1 }

    WfNlspNeighEntry ::= SEQUENCE {
    	    wfNlspNeighAreaID
    		INTEGER,
    	    wfNlspNeighCircIndex
    		INTEGER,
    	    wfNlspNeighState
    		INTEGER,
    	    wfNlspNeighNICAddress
    		OCTET STRING,
    	    wfNlspNeighSysType
    		INTEGER,
    	    wfNlspNeighSysID
    		OCTET STRING,
    	    wfNlspNeighName
    		DisplayString,
    	    wfNlspNeighUsage
    		INTEGER,
    	    wfNlspNeighHoldTimer
    		INTEGER,
    	    wfNlspNeighRemainingTime
    		INTEGER,
    	    wfNlspNeighPriority
    		INTEGER,
    	    wfNlspNeighNetNum
    		OCTET STRING,
    	    wfNlspNeighMaxPacketSize
    		INTEGER,
    	    wfNlspNeighCost
    		INTEGER
        }

    wfNlspNeighAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Area this neighbor is associated with."
        ::= { wfNlspNeighEntry 1 }

    wfNlspNeighCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The originating circuit this neighbor was learned from."
        ::= { wfNlspNeighEntry 2 }

    wfNlspNeighState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    init(1),
    		    up(2),
    		    failed(3),
    		    down(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The state of the connection to the neighboring NLSP
                router."
        DEFVAL	{ down }
        ::= { wfNlspNeighEntry 3 }

    wfNlspNeighNICAddress OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The NIC Address of the neighboring NLSP router."
        ::= { wfNlspNeighEntry 4 }

    wfNlspNeighSysType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unknown(1),
    		    l1router(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The type of the neighboring NLSP router."
        DEFVAL	{ unknown }
        ::= { wfNlspNeighEntry 5 }

    wfNlspNeighSysID OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The neighboring NLSP router's system ID."
        ::= { wfNlspNeighEntry 6 }

    wfNlspNeighName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The readable name for the neighboring NLSP router."
        ::= { wfNlspNeighEntry 7 }

    wfNlspNeighUsage OBJECT-TYPE
        SYNTAX	INTEGER {
    		    undefined(1),
    		    l1router(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The usage of the connection to the neighboring NLSP
                router."
        DEFVAL	{ undefined }
        ::= { wfNlspNeighEntry 8 }

    wfNlspNeighHoldTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The initial holding time, in seconds, for this NLSP
                neighbor entry as specified in the NLSP Hello packet."
        DEFVAL	{ 60 }
        ::= { wfNlspNeighEntry 9 }

    wfNlspNeighRemainingTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The remaining time to live, in seconds, for this
                NLSP neighbor entry."
        ::= { wfNlspNeighEntry 10 }

    wfNlspNeighPriority OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The priority of the neighboring NLSP router for
                becoming the LAN Level 1 Designated router if the
                value of nlspNeighSysType is nlspLevel1Router."
        DEFVAL	{ 44 }
        ::= { wfNlspNeighEntry 11 }

    wfNlspNeighNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network number for this neighboring NLSP router."
        ::= { wfNlspNeighEntry 12 }

    wfNlspNeighMaxPacketSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum packet size for this neighboring NLSP
                router."
        ::= { wfNlspNeighEntry 13 }

    wfNlspNeighCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The cost for this NLSP neighbor entry."
        ::= { wfNlspNeighEntry 14 }

    wfNlspTranslationTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspTranslationEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Translation Group
                The translation group contains tables providing mappings
                between network numbers, NLSP system IDs, and router names."
        ::= { wfNlspGroup 8 }

    wfNlspTranslationEntry OBJECT-TYPE
        SYNTAX	WfNlspTranslationEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NLSP Translation Table."
        INDEX	{ wfNlspTranslationAreaID }
        ::= { wfNlspTranslationTable 1 }

    WfNlspTranslationEntry ::= SEQUENCE {
    	    wfNlspTranslationAreaID
    		INTEGER,
    	    wfNlspTranslationNodeIDCount
    		INTEGER,
    	    wfNlspTranslationNetNumCount
    		INTEGER,
    	    wfNlspTranslationServerNameCount
    		INTEGER
        }

    wfNlspTranslationAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Area this record is associated with."
        ::= { wfNlspTranslationEntry 1 }

    wfNlspTranslationNodeIDCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Translated Node ID."
        ::= { wfNlspTranslationEntry 2 }

    wfNlspTranslationNetNumCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Translated Network Number."
        ::= { wfNlspTranslationEntry 3 }

    wfNlspTranslationServerNameCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Translated Server Name."
        ::= { wfNlspTranslationEntry 4 }

    wfNlspIDMapTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspIDMapEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "NLSP ID Mapping Table
                This table maps NLSP system IDs to router names and IPX
                network numbers."
        ::= { wfNlspGroup 9 }

    wfNlspIDMapEntry OBJECT-TYPE
        SYNTAX	WfNlspIDMapEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NLSP ID map Table."
        INDEX	{ wfNlspIDMapAreaID,
    		  wfNlspIDMapID }
        ::= { wfNlspIDMapTable 1 }

    WfNlspIDMapEntry ::= SEQUENCE {
    	    wfNlspIDMapAreaID
    		INTEGER,
    	    wfNlspIDMapID
    		OCTET STRING,
    	    wfNlspIDMapServerName
    		DisplayString,
    	    wfNlspIDMapNetNum
    		OCTET STRING
        }

    wfNlspIDMapAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Area this record is associated with."
        ::= { wfNlspIDMapEntry 1 }

    wfNlspIDMapID OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (7))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The NLSP ID (6-octet sytem ID plus the pseudo-node ID)."
        ::= { wfNlspIDMapEntry 2 }

    wfNlspIDMapServerName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The readable name corresponding to this NLSP ID.
                The maximum size is 48 octets."
        ::= { wfNlspIDMapEntry 3 }

    wfNlspIDMapNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IPX network number corresponding to this NLSP ID."
        ::= { wfNlspIDMapEntry 4 }

    wfNlspNetMapTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspNetMapEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "IPX Network Number Mapping Table
                This table maps IPX network numbers to router names and
                NLSP IDs."
        ::= { wfNlspGroup 10 }

    wfNlspNetMapEntry OBJECT-TYPE
        SYNTAX	WfNlspNetMapEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NLSP net map table."
        INDEX	{ wfNlspNetMapAreaID,
    		  wfNlspNetMapNetNum }
        ::= { wfNlspNetMapTable 1 }

    WfNlspNetMapEntry ::= SEQUENCE {
    	    wfNlspNetMapAreaID
    		INTEGER,
    	    wfNlspNetMapNetNum
    		OCTET STRING,
    	    wfNlspNetMapServerName
    		DisplayString,
    	    wfNlspNetMapID
    		OCTET STRING
        }

    wfNlspNetMapAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Area this record is associated with."
        ::= { wfNlspNetMapEntry 1 }

    wfNlspNetMapNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IPX network number."
        ::= { wfNlspNetMapEntry 2 }

    wfNlspNetMapServerName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The router name corresponding to the IPX network number.
                The size of this string should be constrained to
                maximum 48 octets."
        ::= { wfNlspNetMapEntry 3 }

    wfNlspNetMapID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The NLSP ID corresponding to the IPX network number."
        ::= { wfNlspNetMapEntry 4 }

    wfNlspNameMapTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspNameMapEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Name Mapping Table
                This table maps router names to their corresponding IPX
                network number and NLSP ID."
        ::= { wfNlspGroup 11 }

    wfNlspNameMapEntry OBJECT-TYPE
        SYNTAX	WfNlspNameMapEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NLSP name map table."
        INDEX	{ wfNlspNameMapAreaID,
    		  wfNlspNameMapServerName }
        ::= { wfNlspNameMapTable 1 }

    WfNlspNameMapEntry ::= SEQUENCE {
    	    wfNlspNameMapAreaID
    		INTEGER,
    	    wfNlspNameMapServerName
    		DisplayString,
    	    wfNlspNameMapNetNum
    		OCTET STRING,
    	    wfNlspNameMapID
    		OCTET STRING
        }

    wfNlspNameMapAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Area this record is associated with."
        ::= { wfNlspNameMapEntry 1 }

    wfNlspNameMapServerName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The readable name for this system. The maximum size is
                48 octets."
        ::= { wfNlspNameMapEntry 2 }

    wfNlspNameMapNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IPX network number corresponding to the router name."
        ::= { wfNlspNameMapEntry 3 }

    wfNlspNameMapID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The NLSP ID corresponding to the router name."
        ::= { wfNlspNameMapEntry 4 }

    wfNlspNodeTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspNodeEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Node Table
                This table contains an entry for each node in the graph.
                By default, this table is empty.  It is only created if
                requested."
        ::= { wfNlspGroup 12 }

    wfNlspNodeEntry OBJECT-TYPE
        SYNTAX	WfNlspNodeEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NLSP Node table."
        INDEX	{ wfNlspNodeAreaID,
    		  wfNlspNodeID }
        ::= { wfNlspNodeTable 1 }

    WfNlspNodeEntry ::= SEQUENCE {
    	    wfNlspNodeAreaID
    		INTEGER,
    	    wfNlspNodeID
    		OCTET STRING,
    	    wfNlspNodeNetNum
    		OCTET STRING,
    	    wfNlspNodeType
    		INTEGER,
    	    wfNlspNodeEstDelay
    		INTEGER,
    	    wfNlspNodeEstThroughput
    		INTEGER,
    	    wfNlspNodeMaxPacketSize
    		INTEGER,
    	    wfNlspNodeCost
    		INTEGER,
    	    wfNlspNodeOverload
    		INTEGER,
    	    wfNlspNodeReachable
    		INTEGER
        }

    wfNlspNodeAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Area this node is associated with."
        ::= { wfNlspNodeEntry 1 }

    wfNlspNodeID OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (7))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Node ID (6-octet sytem ID plus the pseudo-node ID)."
        ::= { wfNlspNodeEntry 2 }

    wfNlspNodeNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IPX network number corresponding to this node."
        ::= { wfNlspNodeEntry 3 }

    wfNlspNodeType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unknown(1),
    		    l1router(2),
    		    l2router(3),
    		    router(4),
    		    network(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Type of system the node represents."
        DEFVAL	{ unknown }
        ::= { wfNlspNodeEntry 4 }

    wfNlspNodeEstDelay OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The estimated delay in milliseconds to reach the
                destination represented by this node."
        ::= { wfNlspNodeEntry 5 }

    wfNlspNodeEstThroughput OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The estimated throughput in bits per second to
                the destination represented by this node."
        ::= { wfNlspNodeEntry 6 }

    wfNlspNodeMaxPacketSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum packet size in bytes that can be
                sent to the destination represented by this node."
        ::= { wfNlspNodeEntry 7 }

    wfNlspNodeCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The cost to reach this node."
        ::= { wfNlspNodeEntry 8 }

    wfNlspNodeOverload OBJECT-TYPE
        SYNTAX	INTEGER {
    		    no(1),
    		    yes(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this node is overloaded."
        DEFVAL	{ no }
        ::= { wfNlspNodeEntry 9 }

    wfNlspNodeReachable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    no(1),
    		    yes(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the destination represented by
                this node is reachable."
        DEFVAL	{ yes }
        ::= { wfNlspNodeEntry 10 }

    wfNlspLinkTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspLinkEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Link Table
                This table contains an entry for all of the links in.
                the graph.   By default, this table is empty.  It is
                only created if requested."
        ::= { wfNlspGroup 13 }

    wfNlspLinkEntry OBJECT-TYPE
        SYNTAX	WfNlspLinkEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NLSP Link table."
        INDEX	{ wfNlspLinkAreaID,
    		  wfNlspLinkNlspID,
    		  wfNlspLinkIndex }
        ::= { wfNlspLinkTable 1 }

    WfNlspLinkEntry ::= SEQUENCE {
    	    wfNlspLinkAreaID
    		INTEGER,
    	    wfNlspLinkNlspID
    		OCTET STRING,
    	    wfNlspLinkIndex
    		INTEGER,
    	    wfNlspLinkNeighNlspID
    		OCTET STRING,
    	    wfNlspLinkFromNeighCost
    		INTEGER,
    	    wfNlspLinkMaxPacketSize
    		INTEGER,
    	    wfNlspLinkThroughput
    		INTEGER,
    	    wfNlspLinkDelay
    		INTEGER,
    	    wfNlspLinkMediaType
    		OCTET STRING,
    	    wfNlspLinkToNeighCost
    		INTEGER
        }

    wfNlspLinkAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Area this record is associated with."
        ::= { wfNlspLinkEntry 1 }

    wfNlspLinkNlspID OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (7))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The NLSP ID (6-octet sytem ID plus the pseudo-node ID)
                of the node to which this link belongs."
        ::= { wfNlspLinkEntry 2 }

    wfNlspLinkIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique value identifying the link within the node."
        ::= { wfNlspLinkEntry 3 }

    wfNlspLinkNeighNlspID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The NLSP ID (6-octet sytem ID plus the pseudo-node ID)
                of the neighboring node."
        ::= { wfNlspLinkEntry 4 }

    wfNlspLinkFromNeighCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The cost to use this link to reach this node from the
                neighboring node."
        ::= { wfNlspLinkEntry 5 }

    wfNlspLinkMaxPacketSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum size in bytes of a packet that may be
                sent over this link."
        ::= { wfNlspLinkEntry 6 }

    wfNlspLinkThroughput OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The link's throughput in bits per second."
        ::= { wfNlspLinkEntry 7 }

    wfNlspLinkDelay OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The delay in milliseconds on this link."
        ::= { wfNlspLinkEntry 8 }

    wfNlspLinkMediaType OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The media type of this link."
        ::= { wfNlspLinkEntry 9 }

    wfNlspLinkToNeighCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The cost to use this link to reach the neighbor
                from this node."
        ::= { wfNlspLinkEntry 10 }

    wfNlspPathTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspPathEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Path Table
                This table allows the path(s) that a packet may take
                to reach a destination to be reconstructed.  The
                entries in this table represent those links that are
                one hop closer to the source and would be used for
                the minimum cost path(s) to reach the destination.
                By default, this table is empty.  It will only be
                created if requested."
        ::= { wfNlspGroup 14 }

    wfNlspPathEntry OBJECT-TYPE
        SYNTAX	WfNlspPathEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NLSP Path table."
        INDEX	{ wfNlspPathAreaID,
    		  wfNlspPathDestNlspID,
    		  wfNlspPathLinkIndex }
        ::= { wfNlspPathTable 1 }

    WfNlspPathEntry ::= SEQUENCE {
    	    wfNlspPathAreaID
    		INTEGER,
    	    wfNlspPathDestNlspID
    		OCTET STRING,
    	    wfNlspPathLinkIndex
    		INTEGER
        }

    wfNlspPathAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Area this record is associated with."
        ::= { wfNlspPathEntry 1 }

    wfNlspPathDestNlspID OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (7))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Node ID (6-octet sytem ID plus the pseudo-node ID)
                of this destination."
        ::= { wfNlspPathEntry 2 }

    wfNlspPathLinkIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique value identifying this link within the
                destination node."
        ::= { wfNlspPathEntry 3 }

    wfNlspGraphXRouteTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspGraphXRouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Graph XRoutes Table
                This table contains information about of all the
                XRoutes provided by a node in the graph.  By
                default, this table is empty.  It will only be
                created if requested."
        ::= { wfNlspGroup 15 }

    wfNlspGraphXRouteEntry OBJECT-TYPE
        SYNTAX	WfNlspGraphXRouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NLSP Graph XRoute table."
        INDEX	{ wfNlspGraphXRouteAreaID,
    		  wfNlspGraphXRouteNlspID,
    		  wfNlspGraphXRouteNetNum }
        ::= { wfNlspGraphXRouteTable 1 }

    WfNlspGraphXRouteEntry ::= SEQUENCE {
    	    wfNlspGraphXRouteAreaID
    		INTEGER,
    	    wfNlspGraphXRouteNlspID
    		OCTET STRING,
    	    wfNlspGraphXRouteNetNum
    		OCTET STRING,
    	    wfNlspGraphXRouteCost
    		INTEGER,
    	    wfNlspGraphXRouteHopCount
    		INTEGER,
    	    wfNlspGraphXRouteTicks
    		INTEGER
        }

    wfNlspGraphXRouteAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Area this record is associated with."
        ::= { wfNlspGraphXRouteEntry 1 }

    wfNlspGraphXRouteNlspID OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (7))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Node ID (6-octet sytem ID plus the pseudo-node ID)
                of this Node."
        ::= { wfNlspGraphXRouteEntry 2 }

    wfNlspGraphXRouteNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IPX network number of the XRoute's destination."
        ::= { wfNlspGraphXRouteEntry 3 }

    wfNlspGraphXRouteCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The cost to reach the XRoute's destination."
        ::= { wfNlspGraphXRouteEntry 4 }

    wfNlspGraphXRouteHopCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of hops necessary to reach the XRoute's
                destination."
        ::= { wfNlspGraphXRouteEntry 5 }

    wfNlspGraphXRouteTicks OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ticks necessary to reach the XRoute's
                destination."
        ::= { wfNlspGraphXRouteEntry 6 }

    wfNlspGraphServTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspGraphServEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Graph Services Table
                This table contains information about all the
                services provided by a node in the graph.  By
                default, this table is empty.  It will only
                be created if requested."
        ::= { wfNlspGroup 16 }

    wfNlspGraphServEntry OBJECT-TYPE
        SYNTAX	WfNlspGraphServEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NLSP Graph Services table."
        INDEX	{ wfNlspGraphServAreaID,
    		  wfNlspGraphServNlspID,
    		  wfNlspGraphServTypeValue }
        ::= { wfNlspGraphServTable 1 }

    WfNlspGraphServEntry ::= SEQUENCE {
    	    wfNlspGraphServAreaID
    		INTEGER,
    	    wfNlspGraphServNlspID
    		OCTET STRING,
    	    wfNlspGraphServName
    		DisplayString,
    	    wfNlspGraphServTypeValue
    		OCTET STRING,
    	    wfNlspGraphServType
    		INTEGER,
    	    wfNlspGraphServNetNum
    		OCTET STRING,
    	    wfNlspGraphServNode
    		OCTET STRING,
    	    wfNlspGraphServSocket
    		OCTET STRING
        }

    wfNlspGraphServAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Area this record is associated with."
        ::= { wfNlspGraphServEntry 1 }

    wfNlspGraphServNlspID OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (7))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Node ID (6-octet sytem ID plus the pseudo-node ID)
                of this Node."
        ::= { wfNlspGraphServEntry 2 }

    wfNlspGraphServName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The service name."
        ::= { wfNlspGraphServEntry 3 }

    wfNlspGraphServTypeValue OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (2))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The service type's hexadecimal value."
        ::= { wfNlspGraphServEntry 4 }

    wfNlspGraphServType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The service type."
        ::= { wfNlspGraphServEntry 5 }

    wfNlspGraphServNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IPX network number potion of the IPX
                address of the service."
        ::= { wfNlspGraphServEntry 6 }

    wfNlspGraphServNode OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The node portion of the IPX address of the service."
        ::= { wfNlspGraphServEntry 7 }

    wfNlspGraphServSocket OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The socket portion of the IPX address of the
                service."
        ::= { wfNlspGraphServEntry 8 }

    wfNlspLspTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspLspEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "LSP Header Table
                The LSP Header table contains information about each LSP
                in the database as well as an OCTET STRING containing
                the entire LSP header.  By default, this table is empty.
                It will only be created if requested."
        ::= { wfNlspGroup 17 }

    wfNlspLspEntry OBJECT-TYPE
        SYNTAX	WfNlspLspEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NLSP LSP table."
        INDEX	{ wfNlspLspAreaID,
    		  wfNlspLspID }
        ::= { wfNlspLspTable 1 }

    WfNlspLspEntry ::= SEQUENCE {
    	    wfNlspLspAreaID
    		INTEGER,
    	    wfNlspLspID
    		OCTET STRING,
    	    wfNlspLspLifetime
    		INTEGER,
    	    wfNlspLspSeqNum
    		INTEGER,
    	    wfNlspLspChecksum
    		INTEGER,
    	    wfNlspLspRouterType
    		INTEGER,
    	    wfNlspLspOverload
    		INTEGER,
    	    wfNlspLspHeader
    		OCTET STRING
        }

    wfNlspLspAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Area this record is associated with."
        ::= { wfNlspLspEntry 1 }

    wfNlspLspID OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (8))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value that uniquely identifies this LSP."
        ::= { wfNlspLspEntry 2 }

    wfNlspLspLifetime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of seconds prior to the expiration
                of the LSP."
        ::= { wfNlspLspEntry 3 }

    wfNlspLspSeqNum OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The sequence number of the LSP."
        DEFVAL	{ 1 }
        ::= { wfNlspLspEntry 4 }

    wfNlspLspChecksum OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The checksum of the LSP."
        DEFVAL	{ 1 }
        ::= { wfNlspLspEntry 5 }

    wfNlspLspRouterType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unknown(1),
    		    l1router(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The type of the router that sent the LSP."
        DEFVAL	{ unknown }
        ::= { wfNlspLspEntry 6 }

    wfNlspLspOverload OBJECT-TYPE
        SYNTAX	INTEGER {
    		    no(1),
    		    yes(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the sending router's
                LSP database is overloaded."
        DEFVAL	{ no }
        ::= { wfNlspLspEntry 7 }

    wfNlspLspHeader OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The complete LSP header."
        ::= { wfNlspLspEntry 8 }

    wfNlspLspOptTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspLspOptEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "NLSP Options Table
                The LSP options table is used to obtain each
                option contained in an LSP.  By default this
                table is empty.  It will only be created if
                requested."
        ::= { wfNlspGroup 18 }

    wfNlspLspOptEntry OBJECT-TYPE
        SYNTAX	WfNlspLspOptEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry is an option from a LSP."
        INDEX	{ wfNlspLspOptAreaID,
    		  wfNlspLspOptLspID,
    		  wfNlspLspOptIndex }
        ::= { wfNlspLspOptTable 1 }

    WfNlspLspOptEntry ::= SEQUENCE {
    	    wfNlspLspOptAreaID
    		INTEGER,
    	    wfNlspLspOptLspID
    		OCTET STRING,
    	    wfNlspLspOptIndex
    		INTEGER,
    	    wfNlspLspOptCode
    		INTEGER,
    	    wfNlspLspOptLength
    		INTEGER,
    	    wfNlspLspOptValue
    		OCTET STRING
        }

    wfNlspLspOptAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Area this record is associated with."
        ::= { wfNlspLspOptEntry 1 }

    wfNlspLspOptLspID OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (8))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value that uniquely identifies this LSP."
        ::= { wfNlspLspOptEntry 2 }

    wfNlspLspOptIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value that uniquely identifies this
                option within the LSP."
        ::= { wfNlspLspOptEntry 3 }

    wfNlspLspOptCode OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The code that identifies the type of the
                option."
        DEFVAL	{ 1 }
        ::= { wfNlspLspOptEntry 4 }

    wfNlspLspOptLength OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The length of the option's value field."
        DEFVAL	{ 1 }
        ::= { wfNlspLspOptEntry 5 }

    wfNlspLspOptValue OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The option's value field."
        ::= { wfNlspLspOptEntry 6 }

    wfNlspCreateDestTblTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspCreateDestTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "NLSP Create Destination Table
                By default the NLSP Destination Table is not.
                created.  This table is used to create only those
                NLSP destination information needed.  This is
                essentially destination information on demand."
        ::= { wfNlspGroup 19 }

    wfNlspCreateDestTblEntry OBJECT-TYPE
        SYNTAX	WfNlspCreateDestTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry is a request per Area."
        INDEX	{ wfNlspCreateDestTblAreaID,
    		  wfNlspCreateDestTblLowNetNum,
    		  wfNlspCreateDestTblHighNetNum }
        ::= { wfNlspCreateDestTblTable 1 }

    WfNlspCreateDestTblEntry ::= SEQUENCE {
    	    wfNlspCreateDestTblDelete
    		INTEGER,
    	    wfNlspCreateDestTblApply
    		INTEGER,
    	    wfNlspCreateDestTblAreaID
    		INTEGER,
    	    wfNlspCreateDestTblLowNetNum
    		OCTET STRING,
    	    wfNlspCreateDestTblHighNetNum
    		OCTET STRING,
    	    wfNlspCreateDestTblNumDest
    		INTEGER,
    	    wfNlspCreateDestTblPollingState
    		INTEGER
        }

    wfNlspCreateDestTblDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter.  Default is created."
        DEFVAL	{ created }
        ::= { wfNlspCreateDestTblEntry 1 }

    wfNlspCreateDestTblApply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Apply/Not Apply parameter. Default is not
                apply so that user can enter all the correct
                data before executing the request."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateDestTblEntry 2 }

    wfNlspCreateDestTblAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Area with this request."
        ::= { wfNlspCreateDestTblEntry 3 }

    wfNlspCreateDestTblLowNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Low node ID for this request."
        ::= { wfNlspCreateDestTblEntry 4 }

    wfNlspCreateDestTblHighNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "High node ID for this request."
        ::= { wfNlspCreateDestTblEntry 5 }

    wfNlspCreateDestTblNumDest OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of entries in the node table
                for this requested range."
        ::= { wfNlspCreateDestTblEntry 6 }

    wfNlspCreateDestTblPollingState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Polling state for this filter entry."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateDestTblEntry 7 }

    wfNlspCreateNodeTblTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspCreateNodeTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "NLSP Create Node Table
                By default the NLSP Node Table is not create.
                This table is used to create only those NLSP
                node information needed.  This is essentially
                node information on demand."
        ::= { wfNlspGroup 20 }

    wfNlspCreateNodeTblEntry OBJECT-TYPE
        SYNTAX	WfNlspCreateNodeTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry is a request per Area."
        INDEX	{ wfNlspCreateNodeTblAreaID }
        ::= { wfNlspCreateNodeTblTable 1 }

    WfNlspCreateNodeTblEntry ::= SEQUENCE {
    	    wfNlspCreateNodeTblDelete
    		INTEGER,
    	    wfNlspCreateNodeTblApply
    		INTEGER,
    	    wfNlspCreateNodeTblAreaID
    		INTEGER,
    	    wfNlspCreateNodeTblLowNodeID
    		OCTET STRING,
    	    wfNlspCreateNodeTblHighNodeID
    		OCTET STRING,
    	    wfNlspCreateNodeTblNumNodes
    		INTEGER,
    	    wfNlspCreateNodeTblPollingState
    		INTEGER
        }

    wfNlspCreateNodeTblDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter.  Default is created."
        DEFVAL	{ created }
        ::= { wfNlspCreateNodeTblEntry 1 }

    wfNlspCreateNodeTblApply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Apply/Not Apply parameter. Default is not
                apply so that user can enter all the correct
                data before executing the request."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateNodeTblEntry 2 }

    wfNlspCreateNodeTblAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Area associated with this request."
        ::= { wfNlspCreateNodeTblEntry 3 }

    wfNlspCreateNodeTblLowNodeID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Low node ID for this request."
        ::= { wfNlspCreateNodeTblEntry 4 }

    wfNlspCreateNodeTblHighNodeID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "High node ID for this request."
        ::= { wfNlspCreateNodeTblEntry 5 }

    wfNlspCreateNodeTblNumNodes OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of entries in the node table
                for this requested range."
        ::= { wfNlspCreateNodeTblEntry 6 }

    wfNlspCreateNodeTblPollingState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Polling state for this filter entry."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateNodeTblEntry 7 }

    wfNlspCreateLinkTblTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspCreateLinkTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "NLSP Create Link Table
                By default the NLSP Link Table is not create.
                This table is used to create only those NLSP
                link information needed.  This is essentially
                link information on demand."
        ::= { wfNlspGroup 21 }

    wfNlspCreateLinkTblEntry OBJECT-TYPE
        SYNTAX	WfNlspCreateLinkTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry is a request per Area."
        INDEX	{ wfNlspCreateLinkTblAreaID,
    		  wfNlspCreateLinkTblLowLinkIndex,
    		  wfNlspCreateLinkTblHighLinkIndex }
        ::= { wfNlspCreateLinkTblTable 1 }

    WfNlspCreateLinkTblEntry ::= SEQUENCE {
    	    wfNlspCreateLinkTblDelete
    		INTEGER,
    	    wfNlspCreateLinkTblApply
    		INTEGER,
    	    wfNlspCreateLinkTblAreaID
    		INTEGER,
    	    wfNlspCreateLinkTblLowNlspID
    		OCTET STRING,
    	    wfNlspCreateLinkTblHighNlspID
    		OCTET STRING,
    	    wfNlspCreateLinkTblLowLinkIndex
    		INTEGER,
    	    wfNlspCreateLinkTblHighLinkIndex
    		INTEGER,
    	    wfNlspCreateLinkTblNumLinks
    		INTEGER,
    	    wfNlspCreateLinkTblPollingState
    		INTEGER
        }

    wfNlspCreateLinkTblDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter.  Default is created."
        DEFVAL	{ created }
        ::= { wfNlspCreateLinkTblEntry 1 }

    wfNlspCreateLinkTblApply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Apply/Not Apply parameter. Default is not
                apply so that user can enter all the correct
                data before executing the request."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateLinkTblEntry 2 }

    wfNlspCreateLinkTblAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Area associated with this request."
        ::= { wfNlspCreateLinkTblEntry 3 }

    wfNlspCreateLinkTblLowNlspID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Low NLSP ID for this request."
        ::= { wfNlspCreateLinkTblEntry 4 }

    wfNlspCreateLinkTblHighNlspID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "High NLSP ID for this request."
        ::= { wfNlspCreateLinkTblEntry 5 }

    wfNlspCreateLinkTblLowLinkIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The low link index (circuit number)."
        ::= { wfNlspCreateLinkTblEntry 6 }

    wfNlspCreateLinkTblHighLinkIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The high link index (circuit number)."
        ::= { wfNlspCreateLinkTblEntry 7 }

    wfNlspCreateLinkTblNumLinks OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of entries in the link table
                for this requested range."
        ::= { wfNlspCreateLinkTblEntry 8 }

    wfNlspCreateLinkTblPollingState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Polling State for this filter entry."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateLinkTblEntry 9 }

    wfNlspCreatePathTblTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspCreatePathTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "NLSP Create Path Table
                By default the NLSP Path Table is not create.
                This table is used to create only those NLSP
                path information needed.  This is essentially
                path information on demand."
        ::= { wfNlspGroup 22 }

    wfNlspCreatePathTblEntry OBJECT-TYPE
        SYNTAX	WfNlspCreatePathTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry is a request per Area."
        INDEX	{ wfNlspCreatePathTblAreaID,
    		  wfNlspCreatePathTblLowLinkIndex,
    		  wfNlspCreatePathTblHighLinkIndex }
        ::= { wfNlspCreatePathTblTable 1 }

    WfNlspCreatePathTblEntry ::= SEQUENCE {
    	    wfNlspCreatePathTblDelete
    		INTEGER,
    	    wfNlspCreatePathTblApply
    		INTEGER,
    	    wfNlspCreatePathTblAreaID
    		INTEGER,
    	    wfNlspCreatePathTblLowNlspID
    		OCTET STRING,
    	    wfNlspCreatePathTblHighNlspID
    		OCTET STRING,
    	    wfNlspCreatePathTblLowLinkIndex
    		INTEGER,
    	    wfNlspCreatePathTblHighLinkIndex
    		INTEGER,
    	    wfNlspCreatePathTblNumPaths
    		INTEGER,
    	    wfNlspCreatePathTblPollingState
    		INTEGER
        }

    wfNlspCreatePathTblDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter.  Default is created."
        DEFVAL	{ created }
        ::= { wfNlspCreatePathTblEntry 1 }

    wfNlspCreatePathTblApply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Apply/Not Apply parameter. Default is not
                apply so that user can enter all the correct
                data before executing the request."
        DEFVAL	{ disabled }
        ::= { wfNlspCreatePathTblEntry 2 }

    wfNlspCreatePathTblAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Area associated with this request."
        ::= { wfNlspCreatePathTblEntry 3 }

    wfNlspCreatePathTblLowNlspID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Low NLSP ID for this request."
        ::= { wfNlspCreatePathTblEntry 4 }

    wfNlspCreatePathTblHighNlspID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "High NLSP ID for this request."
        ::= { wfNlspCreatePathTblEntry 5 }

    wfNlspCreatePathTblLowLinkIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The low link index (circuit number)."
        ::= { wfNlspCreatePathTblEntry 6 }

    wfNlspCreatePathTblHighLinkIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The high link index (circuit number)."
        ::= { wfNlspCreatePathTblEntry 7 }

    wfNlspCreatePathTblNumPaths OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of entries in the path table
                for this requested range."
        ::= { wfNlspCreatePathTblEntry 8 }

    wfNlspCreatePathTblPollingState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Polling State for this filter entry."
        DEFVAL	{ disabled }
        ::= { wfNlspCreatePathTblEntry 9 }

    wfNlspCreateXRouteTblTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspCreateXRouteTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "NLSP Create XRoute Table
                By default the NLSP XRoute Table is not create.
                This table is used to create only those NLSP
                XRoute information needed.  This is essentially
                XRoute information on demand."
        ::= { wfNlspGroup 23 }

    wfNlspCreateXRouteTblEntry OBJECT-TYPE
        SYNTAX	WfNlspCreateXRouteTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry is a request per Area."
        INDEX	{ wfNlspCreateXRouteTblAreaID,
    		  wfNlspCreateXRouteTblLowXRoute,
    		  wfNlspCreateXRouteTblHighXRoute }
        ::= { wfNlspCreateXRouteTblTable 1 }

    WfNlspCreateXRouteTblEntry ::= SEQUENCE {
    	    wfNlspCreateXRouteTblDelete
    		INTEGER,
    	    wfNlspCreateXRouteTblApply
    		INTEGER,
    	    wfNlspCreateXRouteTblAreaID
    		INTEGER,
    	    wfNlspCreateXRouteTblLowNlspID
    		OCTET STRING,
    	    wfNlspCreateXRouteTblHighNlspID
    		OCTET STRING,
    	    wfNlspCreateXRouteTblLowXRoute
    		OCTET STRING,
    	    wfNlspCreateXRouteTblHighXRoute
    		OCTET STRING,
    	    wfNlspCreateXRouteTblNumXRoutes
    		INTEGER,
    	    wfNlspCreateXRouteTblPollingState
    		INTEGER
        }

    wfNlspCreateXRouteTblDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter.  Default is created."
        DEFVAL	{ created }
        ::= { wfNlspCreateXRouteTblEntry 1 }

    wfNlspCreateXRouteTblApply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Apply/Not Apply parameter. Default is not
                apply so that user can enter all the correct
                data before executing the request."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateXRouteTblEntry 2 }

    wfNlspCreateXRouteTblAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Area associated with this request."
        ::= { wfNlspCreateXRouteTblEntry 3 }

    wfNlspCreateXRouteTblLowNlspID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Low NLSP ID for this request."
        ::= { wfNlspCreateXRouteTblEntry 4 }

    wfNlspCreateXRouteTblHighNlspID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "High NLSP ID for this request."
        ::= { wfNlspCreateXRouteTblEntry 5 }

    wfNlspCreateXRouteTblLowXRoute OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Low XRoute Network Number for this request."
        ::= { wfNlspCreateXRouteTblEntry 6 }

    wfNlspCreateXRouteTblHighXRoute OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "High XRoute Network Number for this request."
        ::= { wfNlspCreateXRouteTblEntry 7 }

    wfNlspCreateXRouteTblNumXRoutes OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of entries in the XRoute table
                for this requested range."
        ::= { wfNlspCreateXRouteTblEntry 8 }

    wfNlspCreateXRouteTblPollingState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Polling State for this filter entry."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateXRouteTblEntry 9 }

    wfNlspCreateServTblTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspCreateServTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "NLSP Create Service Table
                By default the NLSP Service Table is not create.
                This table is used to create only those NLSP
                Service information needed.  This is essentially
                Service information on demand."
        ::= { wfNlspGroup 24 }

    wfNlspCreateServTblEntry OBJECT-TYPE
        SYNTAX	WfNlspCreateServTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry is a request per Area."
        INDEX	{ wfNlspCreateServTblAreaID,
    		  wfNlspCreateServTblLowServType,
    		  wfNlspCreateServTblHighServType }
        ::= { wfNlspCreateServTblTable 1 }

    WfNlspCreateServTblEntry ::= SEQUENCE {
    	    wfNlspCreateServTblDelete
    		INTEGER,
    	    wfNlspCreateServTblApply
    		INTEGER,
    	    wfNlspCreateServTblAreaID
    		INTEGER,
    	    wfNlspCreateServTblLowNlspID
    		OCTET STRING,
    	    wfNlspCreateServTblHighNlspID
    		OCTET STRING,
    	    wfNlspCreateServTblLowServType
    		INTEGER,
    	    wfNlspCreateServTblHighServType
    		INTEGER,
    	    wfNlspCreateServTblNumServs
    		INTEGER,
    	    wfNlspCreateServTblPollingState
    		INTEGER
        }

    wfNlspCreateServTblDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter.  Default is created."
        DEFVAL	{ created }
        ::= { wfNlspCreateServTblEntry 1 }

    wfNlspCreateServTblApply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Apply/Not Apply parameter. Default is not
                apply so that user can enter all the correct
                data before executing the request."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateServTblEntry 2 }

    wfNlspCreateServTblAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Area associated with this request."
        ::= { wfNlspCreateServTblEntry 3 }

    wfNlspCreateServTblLowNlspID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Low NLSP ID for this request."
        ::= { wfNlspCreateServTblEntry 4 }

    wfNlspCreateServTblHighNlspID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "High NLSP ID for this request."
        ::= { wfNlspCreateServTblEntry 5 }

    wfNlspCreateServTblLowServType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Low Service Type."
        ::= { wfNlspCreateServTblEntry 6 }

    wfNlspCreateServTblHighServType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "High Service Type."
        ::= { wfNlspCreateServTblEntry 7 }

    wfNlspCreateServTblNumServs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of entries in the Graph Services table
                for this requested range."
        ::= { wfNlspCreateServTblEntry 8 }

    wfNlspCreateServTblPollingState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Polling state for this filter entry."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateServTblEntry 9 }

    wfNlspCreateLspTblTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspCreateLspTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "NLSP Create LSP Table
                By default the NLSP LSP Table is not create.
                This table is used to create only those NLSP
                LSP information needed.  This is essentially
                LSP information on demand."
        ::= { wfNlspGroup 25 }

    wfNlspCreateLspTblEntry OBJECT-TYPE
        SYNTAX	WfNlspCreateLspTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry is a request per Area."
        INDEX	{ wfNlspCreateLspTblAreaID }
        ::= { wfNlspCreateLspTblTable 1 }

    WfNlspCreateLspTblEntry ::= SEQUENCE {
    	    wfNlspCreateLspTblDelete
    		INTEGER,
    	    wfNlspCreateLspTblApply
    		INTEGER,
    	    wfNlspCreateLspTblAreaID
    		INTEGER,
    	    wfNlspCreateLspTblLowLspID
    		OCTET STRING,
    	    wfNlspCreateLspTblHighLspID
    		OCTET STRING,
    	    wfNlspCreateLspTblNumLsps
    		INTEGER,
    	    wfNlspCreateLspTblPollingState
    		INTEGER
        }

    wfNlspCreateLspTblDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter.  Default is created."
        DEFVAL	{ created }
        ::= { wfNlspCreateLspTblEntry 1 }

    wfNlspCreateLspTblApply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Apply/Not Apply parameter. Default is not
                apply so that user can enter all the correct
                data before executing the request."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateLspTblEntry 2 }

    wfNlspCreateLspTblAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Area associated with this request."
        ::= { wfNlspCreateLspTblEntry 3 }

    wfNlspCreateLspTblLowLspID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Low LSP ID for this request."
        ::= { wfNlspCreateLspTblEntry 4 }

    wfNlspCreateLspTblHighLspID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "High LSP ID for this request."
        ::= { wfNlspCreateLspTblEntry 5 }

    wfNlspCreateLspTblNumLsps OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of entries in the LSP Header table
                for this requested range."
        ::= { wfNlspCreateLspTblEntry 6 }

    wfNlspCreateLspTblPollingState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Polling State for this filter entry."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateLspTblEntry 7 }

    wfNlspCreateLspOptTblTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspCreateLspOptTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "NLSP Create LSP Options Table
                By default the NLSP LSP Options Table is not create.
                This table is used to create only those NLSP
                LSP Options information needed.  This is essentially
                LSP Options information on demand."
        ::= { wfNlspGroup 26 }

    wfNlspCreateLspOptTblEntry OBJECT-TYPE
        SYNTAX	WfNlspCreateLspOptTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry is a request per Area."
        INDEX	{ wfNlspCreateLspOptTblAreaID }
        ::= { wfNlspCreateLspOptTblTable 1 }

    WfNlspCreateLspOptTblEntry ::= SEQUENCE {
    	    wfNlspCreateLspOptTblDelete
    		INTEGER,
    	    wfNlspCreateLspOptTblApply
    		INTEGER,
    	    wfNlspCreateLspOptTblAreaID
    		INTEGER,
    	    wfNlspCreateLspOptTblLowLspID
    		OCTET STRING,
    	    wfNlspCreateLspOptTblHighLspID
    		OCTET STRING,
    	    wfNlspCreateLspOptTblNumLspOpts
    		INTEGER,
    	    wfNlspCreateLspOptTblPollingState
    		INTEGER
        }

    wfNlspCreateLspOptTblDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter.  Default is created."
        DEFVAL	{ created }
        ::= { wfNlspCreateLspOptTblEntry 1 }

    wfNlspCreateLspOptTblApply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Apply/Not Apply parameter. Default is not
                apply so that user can enter all the correct
                data before executing the request."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateLspOptTblEntry 2 }

    wfNlspCreateLspOptTblAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Area associated with this request."
        ::= { wfNlspCreateLspOptTblEntry 3 }

    wfNlspCreateLspOptTblLowLspID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Low LSP ID for this request."
        ::= { wfNlspCreateLspOptTblEntry 4 }

    wfNlspCreateLspOptTblHighLspID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "High LSP ID for this request."
        ::= { wfNlspCreateLspOptTblEntry 5 }

    wfNlspCreateLspOptTblNumLspOpts OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of entries in the LSP Options table
                for this requested range."
        ::= { wfNlspCreateLspOptTblEntry 6 }

    wfNlspCreateLspOptTblPollingState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Polling State for this filter entry."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateLspOptTblEntry 7 }

    wfNlspCreateNeighTblTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspCreateNeighTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "NLSP Create Neighbor Table
                By default the NLSP Neighbor Table is not create.
                This table is used to create only those NLSP
                Neighbor information needed.  This is essentially
                Neighbor information on demand."
        ::= { wfNlspGroup 27 }

    wfNlspCreateNeighTblEntry OBJECT-TYPE
        SYNTAX	WfNlspCreateNeighTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry is a request per Area per Circuit Index."
        INDEX	{ wfNlspCreateNeighTblAreaID,
    		  wfNlspCreateNeighTblLowCircIndex,
    		  wfNlspCreateNeighTblHighCircIndex }
        ::= { wfNlspCreateNeighTblTable 1 }

    WfNlspCreateNeighTblEntry ::= SEQUENCE {
    	    wfNlspCreateNeighTblDelete
    		INTEGER,
    	    wfNlspCreateNeighTblApply
    		INTEGER,
    	    wfNlspCreateNeighTblAreaID
    		INTEGER,
    	    wfNlspCreateNeighTblLowCircIndex
    		INTEGER,
    	    wfNlspCreateNeighTblHighCircIndex
    		INTEGER,
    	    wfNlspCreateNeighTblNumNeighs
    		INTEGER,
    	    wfNlspCreateNeighTblPollingState
    		INTEGER
        }

    wfNlspCreateNeighTblDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter.  Default is created."
        DEFVAL	{ created }
        ::= { wfNlspCreateNeighTblEntry 1 }

    wfNlspCreateNeighTblApply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Apply/Not Apply parameter. Default is not
                apply so that user can enter all the correct
                data before executing the request."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateNeighTblEntry 2 }

    wfNlspCreateNeighTblAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Area associated with this request."
        ::= { wfNlspCreateNeighTblEntry 3 }

    wfNlspCreateNeighTblLowCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The low link index (circuit number)."
        ::= { wfNlspCreateNeighTblEntry 4 }

    wfNlspCreateNeighTblHighCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The high link index (circuit number)."
        ::= { wfNlspCreateNeighTblEntry 5 }

    wfNlspCreateNeighTblNumNeighs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of entries in the Neigh table
                for this requested range."
        ::= { wfNlspCreateNeighTblEntry 6 }

    wfNlspCreateNeighTblPollingState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Polling State for this filter entry."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateNeighTblEntry 7 }

    wfNlspCreateTransMapTblTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspCreateTransMapTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "NLSP Create Translation Map Table
                By default the NLSP Translation Map Table is not create.
                This table is used to create only those NLSP
                Translation Map accounting information needed.
                This is essentially Translation Map information on demand."
        ::= { wfNlspGroup 28 }

    wfNlspCreateTransMapTblEntry OBJECT-TYPE
        SYNTAX	WfNlspCreateTransMapTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry is a request per Area."
        INDEX	{ wfNlspCreateTransMapTblAreaID }
        ::= { wfNlspCreateTransMapTblTable 1 }

    WfNlspCreateTransMapTblEntry ::= SEQUENCE {
    	    wfNlspCreateTransMapTblDelete
    		INTEGER,
    	    wfNlspCreateTransMapTblApply
    		INTEGER,
    	    wfNlspCreateTransMapTblAreaID
    		INTEGER,
    	    wfNlspCreateTransMapTblPollingState
    		INTEGER
        }

    wfNlspCreateTransMapTblDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter.  Default is created."
        DEFVAL	{ created }
        ::= { wfNlspCreateTransMapTblEntry 1 }

    wfNlspCreateTransMapTblApply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Apply/Not Apply parameter. Default is not
                apply so that user can enter all the correct
                data before executing the request."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateTransMapTblEntry 2 }

    wfNlspCreateTransMapTblAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Area associated with this request."
        ::= { wfNlspCreateTransMapTblEntry 3 }

    wfNlspCreateTransMapTblPollingState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Polling State for this filter entry."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateTransMapTblEntry 4 }

    wfNlspCreateNodeIDMapTblTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspCreateNodeIDMapTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "NLSP Create Node ID Map Table
                By default the NLSP Mode ID Map Table is not create.
                This table is used to create only those NLSP
                Node ID Map information needed.  This is essentially
                Node ID MAP information on demand."
        ::= { wfNlspGroup 29 }

    wfNlspCreateNodeIDMapTblEntry OBJECT-TYPE
        SYNTAX	WfNlspCreateNodeIDMapTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry is a request per Area per Node ID."
        INDEX	{ wfNlspCreateNodeIDMapTblAreaID,
    		  wfNlspCreateNodeIDMapTblLowNodeID,
    		  wfNlspCreateNodeIDMapTblHighNodeID }
        ::= { wfNlspCreateNodeIDMapTblTable 1 }

    WfNlspCreateNodeIDMapTblEntry ::= SEQUENCE {
    	    wfNlspCreateNodeIDMapTblDelete
    		INTEGER,
    	    wfNlspCreateNodeIDMapTblApply
    		INTEGER,
    	    wfNlspCreateNodeIDMapTblAreaID
    		INTEGER,
    	    wfNlspCreateNodeIDMapTblLowNodeID
    		OCTET STRING,
    	    wfNlspCreateNodeIDMapTblHighNodeID
    		OCTET STRING,
    	    wfNlspCreateNodeIDMapTblLowCircIndex
    		INTEGER,
    	    wfNlspCreateNodeIDMapTblHighCircIndex
    		INTEGER,
    	    wfNlspCreateNodeIDMapTblNumNodeIDs
    		INTEGER,
    	    wfNlspCreateNodeIDMapTblPollingState
    		INTEGER
        }

    wfNlspCreateNodeIDMapTblDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter.  Default is created."
        DEFVAL	{ created }
        ::= { wfNlspCreateNodeIDMapTblEntry 1 }

    wfNlspCreateNodeIDMapTblApply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Apply/Not Apply parameter. Default is not
                apply so that user can enter all the correct
                data before executing the request."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateNodeIDMapTblEntry 2 }

    wfNlspCreateNodeIDMapTblAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Area associated with this request."
        ::= { wfNlspCreateNodeIDMapTblEntry 3 }

    wfNlspCreateNodeIDMapTblLowNodeID OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (7))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The low Node ID."
        ::= { wfNlspCreateNodeIDMapTblEntry 4 }

    wfNlspCreateNodeIDMapTblHighNodeID OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (7))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The high Node D."
        ::= { wfNlspCreateNodeIDMapTblEntry 5 }

    wfNlspCreateNodeIDMapTblLowCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The low link index (circuit number)."
        ::= { wfNlspCreateNodeIDMapTblEntry 6 }

    wfNlspCreateNodeIDMapTblHighCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The high link index (circuit number)."
        ::= { wfNlspCreateNodeIDMapTblEntry 7 }

    wfNlspCreateNodeIDMapTblNumNodeIDs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of entries in the Node ID Map table
                for this requested range."
        ::= { wfNlspCreateNodeIDMapTblEntry 8 }

    wfNlspCreateNodeIDMapTblPollingState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Polling State for this filter entry."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateNodeIDMapTblEntry 9 }

    wfNlspCreateNetMapTblTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNlspCreateNetMapTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "NLSP Create Network Map Table
                By default the NLSP Network Map Table is not created.
                This table is used to create only those NLSP
                Network Map information needed.  This is essentially
                Network Map information on demand."
        ::= { wfNlspGroup 30 }

    wfNlspCreateNetMapTblEntry OBJECT-TYPE
        SYNTAX	WfNlspCreateNetMapTblEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry is a request per Area per Network."
        INDEX	{ wfNlspCreateNetMapTblAreaID,
    		  wfNlspCreateNetMapTblLowNetNum,
    		  wfNlspCreateNetMapTblHighNetNum }
        ::= { wfNlspCreateNetMapTblTable 1 }

    WfNlspCreateNetMapTblEntry ::= SEQUENCE {
    	    wfNlspCreateNetMapTblDelete
    		INTEGER,
    	    wfNlspCreateNetMapTblApply
    		INTEGER,
    	    wfNlspCreateNetMapTblAreaID
    		INTEGER,
    	    wfNlspCreateNetMapTblLowNetNum
    		OCTET STRING,
    	    wfNlspCreateNetMapTblHighNetNum
    		OCTET STRING,
    	    wfNlspCreateNetMapTblLowCircIndex
    		INTEGER,
    	    wfNlspCreateNetMapTblHighCircIndex
    		INTEGER,
    	    wfNlspCreateNetMapTblNumNets
    		INTEGER,
    	    wfNlspCreateNetMapTblPollingState
    		INTEGER
        }

    wfNlspCreateNetMapTblDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter.  Default is created."
        DEFVAL	{ created }
        ::= { wfNlspCreateNetMapTblEntry 1 }

    wfNlspCreateNetMapTblApply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Apply/Not Apply parameter. Default is not
                apply so that user can enter all the correct
                data before executing the request."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateNetMapTblEntry 2 }

    wfNlspCreateNetMapTblAreaID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Area associated with this request."
        ::= { wfNlspCreateNetMapTblEntry 3 }

    wfNlspCreateNetMapTblLowNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The low network number."
        ::= { wfNlspCreateNetMapTblEntry 4 }

    wfNlspCreateNetMapTblHighNetNum OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The high network number."
        ::= { wfNlspCreateNetMapTblEntry 5 }

    wfNlspCreateNetMapTblLowCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The low link index (circuit number)."
        ::= { wfNlspCreateNetMapTblEntry 6 }

    wfNlspCreateNetMapTblHighCircIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The high link index (circuit number)."
        ::= { wfNlspCreateNetMapTblEntry 7 }

    wfNlspCreateNetMapTblNumNets OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of entries in the Network Map table
                for this requested range."
        ::= { wfNlspCreateNetMapTblEntry 8 }

    wfNlspCreateNetMapTblPollingState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Polling State for this filter entry."
        DEFVAL	{ disabled }
        ::= { wfNlspCreateNetMapTblEntry 9 }

    END  -- Wellfleet-NLSP-MIB
-- @(#)WSCCS j/mibs-nml.mib 1.1 8/30/95
Wellfleet-NML-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:45:56 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfBridgeGroup
        FROM Wellfleet-COMMON-MIB;

    wfBrNativeModeLan	OBJECT IDENTIFIER ::= { wfBridgeGroup 5 }

    wfNmlBaseTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNmlBaseEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "NML Base record - Contains NML Configuration parameters"
        ::= { wfBrNativeModeLan 2 }

    wfNmlBaseEntry OBJECT-TYPE
        SYNTAX	WfNmlBaseEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NML Base table"
        INDEX	{ wfNmlCircuit }
        ::= { wfNmlBaseTable 1 }

    WfNmlBaseEntry ::= SEQUENCE {
    	    wfNmlDelete
    		INTEGER,
    	    wfNmlDisable
    		INTEGER,
    	    wfNmlCircuit
    		INTEGER,
    	    wfNmlAddSecurityHeader
    		INTEGER,
    	    wfNmlSAIDType
    		INTEGER,
    	    wfNmlSAIDValue
    		INTEGER,
    	    wfNmlCUGValue
    		INTEGER,
    	    wfNmlCUGDrop
    		INTEGER,
    	    wfNmlCUGPacketsDropped
    		INTEGER
        }

    wfNmlDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfNmlBaseEntry 1 }

    wfNmlDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfNmlBaseEntry 2 }

    wfNmlCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit being used"
        ::= { wfNmlBaseEntry 3 }

    wfNmlAddSecurityHeader OBJECT-TYPE
        SYNTAX	INTEGER {
    		    add(1),
    		    check(2),
    		    drop(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates if Security header should be added and verified
                or just verified on egress of this circuit"
        DEFVAL	{ add }
        ::= { wfNmlBaseEntry 4 }

    wfNmlSAIDType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    individual(1),
    		    group(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Type of SAID to be used. Group or individual"
        DEFVAL	{ individual }
        ::= { wfNmlBaseEntry 5 }

    wfNmlSAIDValue OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates value for Group or Individual SAID"
        ::= { wfNmlBaseEntry 6 }

    wfNmlCUGValue OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates Closed User Group id to be placed in MDF field of frame"
        ::= { wfNmlBaseEntry 7 }

    wfNmlCUGDrop OBJECT-TYPE
        SYNTAX	INTEGER {
    		    drop(1),
    		    forward(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates action to perfrom if security search of table fails"
        DEFVAL	{ drop }
        ::= { wfNmlBaseEntry 8 }

    wfNmlCUGPacketsDropped OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates packets dropped for security check"
        ::= { wfNmlBaseEntry 9 }

    wfNmlTrafficFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNmlTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Native mode Lan Traffic Filters"
        ::= { wfBrNativeModeLan 3 }

    wfNmlTrafficFilterEntry OBJECT-TYPE
        SYNTAX	WfNmlTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfNmlTrafficFilterTable."
        INDEX	{ wfNmlTrafficFilterCircuit,
    		  wfNmlTrafficFilterRuleNumber,
    		  wfNmlTrafficFilterFragment }
        ::= { wfNmlTrafficFilterTable 1 }

    WfNmlTrafficFilterEntry ::= SEQUENCE {
    	    wfNmlTrafficFilterCreate
    		INTEGER,
    	    wfNmlTrafficFilterEnable
    		INTEGER,
    	    wfNmlTrafficFilterStatus
    		INTEGER,
    	    wfNmlTrafficFilterCounter
    		Counter,
    	    wfNmlTrafficFilterDefinition
    		Opaque,
    	    wfNmlTrafficFilterReserved
    		INTEGER,
    	    wfNmlTrafficFilterCircuit
    		INTEGER,
    	    wfNmlTrafficFilterRuleNumber
    		INTEGER,
    	    wfNmlTrafficFilterFragment
    		INTEGER,
    	    wfNmlTrafficFilterName
    		DisplayString
        }

    wfNmlTrafficFilterCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the existence of the traffic filter rule:
                created - traffic filter exists
                delete - traffic filter does not exist and can be deleted."
        DEFVAL	{ created }
        ::= { wfNmlTrafficFilterEntry 1 }

    wfNmlTrafficFilterEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether or not the traffic filter rule should be used:
                enabled - activate the rule.
                disabled - inactivate the rule."
        DEFVAL	{ enabled }
        ::= { wfNmlTrafficFilterEntry 2 }

    wfNmlTrafficFilterStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    error(2),
    		    inactive(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines the current status of the traffic filter:
                inactive - the rule is not in use.
                active - the rule is being used.
                error - the application detected an error in the rule."
        DEFVAL	{ inactive }
        ::= { wfNmlTrafficFilterEntry 3 }

    wfNmlTrafficFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets that have
                matched this rule."
        ::= { wfNmlTrafficFilterEntry 4 }

    wfNmlTrafficFilterDefinition OBJECT-TYPE
        SYNTAX	Opaque
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The filter rule definition."
        ::= { wfNmlTrafficFilterEntry 5 }

    wfNmlTrafficFilterReserved OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reserved field."
        ::= { wfNmlTrafficFilterEntry 6 }

    wfNmlTrafficFilterCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ID of the Bridge Circuit to which the
                filter is applied."
        ::= { wfNmlTrafficFilterEntry 7 }

    wfNmlTrafficFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ID for the rule."
        ::= { wfNmlTrafficFilterEntry 8 }

    wfNmlTrafficFilterFragment OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fragment number - for large rules."
        ::= { wfNmlTrafficFilterEntry 9 }

    wfNmlTrafficFilterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "name of the rule number"
        ::= { wfNmlTrafficFilterEntry 10 }

    END  -- Wellfleet-NML-MIB
-- @(#)WSCCS n/mibs-osi.mib 1.1 8/30/95
Wellfleet-OSI-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:46:01 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfOsiGroup
        FROM Wellfleet-COMMON-MIB;


    wfOsi		OBJECT IDENTIFIER ::= { wfOsiGroup 1 }

    wfOsiDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value determines whether OSI is configured on this slot."
        DEFVAL	{ created }
        ::= { wfOsi 1 }

    wfOsiDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value determines whether OSI is to startup."
        DEFVAL	{ enabled }
        ::= { wfOsi 2 }

    wfOsiState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This value determines whether OSI is to startup."
        DEFVAL	{ notpresent }
        ::= { wfOsi 3 }

    wfOsiIsisVersion OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This read-only parameter identifies the version number of the
                IS-IS protocol to which this node conforms to.          "
        ::= { wfOsi 4 }

    wfOsiRouterType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    l1only(1),
    		    l1l2(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value determines whether this system is an L1-only router or
                L1-L2  IS."
        DEFVAL	{ l1l2 }
        ::= { wfOsi 5 }

    wfOsiRouterId OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value contains the system ID of this Intermediate System.
                If no value is entered by the user, Site Manager should
                supply a 6-byte value that will be unique (a MAC address
                would work).
                 "
        ::= { wfOsi 6 }

    wfOsiLoadBal OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This Boolean defines whether or not we are doing load balancing
                over multiple paths."
        DEFVAL	{ disabled }
        ::= { wfOsi 7 }

    wfOsiMaxAreas OBJECT-TYPE
        SYNTAX	INTEGER(1..1000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value defines the maximum allowable number of areas addresses
                for the domain that this router exists in."
        DEFVAL	{ 63 }
        ::= { wfOsi 8 }

    wfOsiMaxEs OBJECT-TYPE
        SYNTAX	INTEGER(1..4000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value defines the maximum allowable number of End Systems
                for the area that this router exists in."
        DEFVAL	{ 512 }
        ::= { wfOsi 9 }

    wfOsiMaxL1Is OBJECT-TYPE
        SYNTAX	INTEGER(1..1000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value defines the maximum allowable number of L1 Intermediate
                Systems for the area that this router exists in."
        DEFVAL	{ 15 }
        ::= { wfOsi 10 }

    wfOsiMaxL2Is OBJECT-TYPE
        SYNTAX	INTEGER(1..1000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value defines the maximum allowable number of L2 Intermediate
                Systems for the domain that this router exists in."
        DEFVAL	{ 63 }
        ::= { wfOsi 11 }

    wfOsiMaxExtAddr OBJECT-TYPE
        SYNTAX	INTEGER(1..500)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value defines the maximum allowable number of External Addresses
                for the domain that this router exists in.
                 The default value of this field is 0."
        DEFVAL	{ 1 }
        ::= { wfOsi 12 }

    wfOsiCksumIsPdus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value indicates whether ISIS PDUs will carry a checksum."
        DEFVAL	{ enabled }
        ::= { wfOsi 13 }

    wfOsiL1LspPassword OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This assigns a password such that only L1 Lsps with the matching
                password will be accepted.  All L1 Lsps generated
                 by this system will contain this string in the password option."
        ::= { wfOsi 14 }

    wfOsiL2LspPassword OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This assigns a password such that only L2 Lsps with the matching
                password will be accepted.  All L2 Lsps generated
                 by this system will contain this string in the password option."
        ::= { wfOsi 15 }

    wfOsiAreaAddr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This Assigns the area address for this router.
                This field must be filled in.
                       If the user doesn't enter a value, then assign 490040.
                       Site Manager must force the user to enter at least a 3-byte
                value for this field.
                "
        ::= { wfOsi 16 }

    wfOsiAreaAddrAlias1 OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This Assigns the first area address alias for this router.
                This field does no have to be filled in, but if the user
                tries to enter a value, Site Manager must make sure that
                it is at least 3-bytes in length."
        ::= { wfOsi 17 }

    wfOsiAreaAddrAlias2 OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This Assigns the second area address alias for this router.
                This field does no have to be filled in, but if the user
                tries to enter a value, Site Manager must make sure that
                it is at least 3-bytes in length."
        ::= { wfOsi 18 }

    wfOsiCorruptedLsps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Corrupted Lsps Detected."
        ::= { wfOsi 19 }

    wfOsiL1LspDbOverloads OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times the L1 Lsp Database Overload event has
                been generated. "
        ::= { wfOsi 20 }

    wfOsiL2LspDbOverloads OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times the L2 Lsp Database Overload event has
                been generated. "
        ::= { wfOsi 21 }

    wfOsiManAddrDroppedAreas OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times the Manual Address Dropped from Area event
                has been generated. "
        ::= { wfOsi 22 }

    wfOsiSeqNumberSkips OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times the Sequence Number Skipped event has
                been generated. "
        ::= { wfOsi 23 }

    wfOsiOwnLspPurges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times the Own Lsp Purged event has
                been generated. "
        ::= { wfOsi 24 }

    wfOsiOthLspPurges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times the Other Lsp Purged event has
                been generated. "
        ::= { wfOsi 25 }

    wfOsiExceedMaxSeqNums OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times the Attempt tp Exceed Maximum Sequence Number
                event has been generated. "
        ::= { wfOsi 26 }

    wfOsiNearestL2Is OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the ID of the Nearest L2 system in this area."
        ::= { wfOsi 27 }

    wfOsiMaxDynEs OBJECT-TYPE
        SYNTAX	INTEGER(1..4000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum number of dynamically learned (via Hello)
                End Systems allowed per slot."
        DEFVAL	{ 1024 }
        ::= { wfOsi 28 }

    wfOsiMaxDynL1Is OBJECT-TYPE
        SYNTAX	INTEGER(1..1000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum number of dynamically learned (via Hello)
                Level 1 Intermediate Systems allowed per slot."
        DEFVAL	{ 64 }
        ::= { wfOsi 29 }

    wfOsiMaxDynL2Is OBJECT-TYPE
        SYNTAX	INTEGER(1..1000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum number of dynamically learned (via Hello)
                Level 2 Intermediate Systems allowed per slot."
        DEFVAL	{ 64 }
        ::= { wfOsi 30 }

    wfOsiNumDynEsAdjs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Dynamic ES adjs the osi master gate
                receives from the cct gate. "
        ::= { wfOsi 31 }

    wfOsiNumDynL1Adjs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Dynamic L1 adjs the osi master gate
                receives from the cct gate. "
        ::= { wfOsi 32 }

    wfOsiNumDynL2Adjs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Dynamic L2 adjs the osi master gate
                receives from the cct gate. "
        ::= { wfOsi 33 }

    wfOsiNumL1Routes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of L1 Routes. WL 2.27.93"
        ::= { wfOsi 34 }

    wfOsiNumL2Routes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of L2 Routes. WL 2.27.93"
        ::= { wfOsi 35 }

    wfOsiNumDynPtpEsAdjs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Dynamic Point-to-Point ES adjs the osi master gate
                receives on."
        ::= { wfOsi 36 }

    wfOsiNumDynPtpIsAdjs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Dynamic Point-to-Point IS adjs the osi master gate
                receives on ."
        ::= { wfOsi 37 }

    wfOsiClnpSrcRtOptionDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable processing of Source Route options in CLNP PDUs.
                This is required for GOSIP v2 support. GOSIP prohibits processing
                Source Routing options. "
        DEFVAL	{ enabled }
        ::= { wfOsi 38 }

    wfOsiNumL1Lsps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of L1 LSPs stored in database."
        ::= { wfOsi 39 }

    wfOsiNumL2Lsps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of L2 LSPs stored in database."
        ::= { wfOsi 40 }

    wfOsiStaticRouteTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOsiStaticRouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains all the static routes for this system."
        ::= { wfOsiGroup 2 }

    wfOsiStaticRouteEntry OBJECT-TYPE
        SYNTAX	WfOsiStaticRouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the Static Route Entry for the Static Route Table."
        INDEX	{ wfOsiStaticRouteAddr }
        ::= { wfOsiStaticRouteTable 1 }

    WfOsiStaticRouteEntry ::= SEQUENCE {
    	    wfOsiStaticRouteDelete
    		INTEGER,
    	    wfOsiStaticRouteDisable
    		INTEGER,
    	    wfOsiStaticRouteAddr
    		OCTET STRING,
    	    wfOsiStaticRouteNibbleLength
    		INTEGER,
    	    wfOsiStaticRouteNextHopIs
    		OCTET STRING,
    	    wfOsiStaticRouteType
    		INTEGER,
    	    wfOsiStaticRouteCost
    		INTEGER
        }

    wfOsiStaticRouteDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter for Osi Static Route Record."
        DEFVAL	{ created }
        ::= { wfOsiStaticRouteEntry 1 }

    wfOsiStaticRouteDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for this Static Route."
        DEFVAL	{ enabled }
        ::= { wfOsiStaticRouteEntry 2 }

    wfOsiStaticRouteAddr OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (20))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This specifies the address of the static route. It is also
                the inst_id."
        ::= { wfOsiStaticRouteEntry 3 }

    wfOsiStaticRouteNibbleLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the length in nibbles of the static route address.
                It is necessary to specify it in nibbles since the static route
                may be an external address which can be specified in nibbles."
        ::= { wfOsiStaticRouteEntry 4 }

    wfOsiStaticRouteNextHopIs OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the 6-octet ID of the next Hop IS that all
                data destined to wfOsiStaticRouteAddr will be forwarded to."
        ::= { wfOsiStaticRouteEntry 5 }

    wfOsiStaticRouteType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    es(9),
    		    areaaddr(11),
    		    extaddr(13)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This specifies whether the destination is an End System,
                an area, or an external Domain."
        DEFVAL	{ es }
        ::= { wfOsiStaticRouteEntry 6 }

    wfOsiStaticRouteCost OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value is the cost to get to this address."
        DEFVAL	{ 20 }
        ::= { wfOsiStaticRouteEntry 7 }

    wfOsiCircuitTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOsiCircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This Table contains all circuit configuration info
                counters available on a per circuit basis."
        ::= { wfOsiGroup 3 }

    wfOsiCircuitEntry OBJECT-TYPE
        SYNTAX	WfOsiCircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the circuit entry record that appears in the
                Circuit Table."
        INDEX	{ wfOsiCircuitId }
        ::= { wfOsiCircuitTable 1 }

    WfOsiCircuitEntry ::= SEQUENCE {
    	    wfOsiCircuitDelete
    		INTEGER,
    	    wfOsiCircuitDisable
    		INTEGER,
    	    wfOsiCircuitState
    		INTEGER,
    	    wfOsiCircuitId
    		INTEGER,
    	    wfOsiCircuitRouterLevel
    		INTEGER,
    	    wfOsiCircuitL1DefaultMetric
    		INTEGER,
    	    wfOsiCircuitL2DefaultMetric
    		INTEGER,
    	    wfOsiCircuitL1DrPriority
    		INTEGER,
    	    wfOsiCircuitL2DrPriority
    		INTEGER,
    	    wfOsiCircuitIsisHelloTimer
    		INTEGER,
    	    wfOsiCircuitEsisHelloTimer
    		INTEGER,
    	    wfOsiCircuitEshConfigTime
    		INTEGER,
    	    wfOsiCircuitPassword
    		DisplayString,
    	    wfOsiCircuitReceivedPkts
    		Counter,
    	    wfOsiCircuitSentPkts
    		Counter,
    	    wfOsiCircuitDroppedPkts
    		Counter,
    	    wfOsiCircuitFragmentedPdus
    		Counter,
    	    wfOsiCircuitCongestionDiscards
    		Counter,
    	    wfOsiCircuitAddrUnreachDiscards
    		Counter,
    	    wfOsiCircuitAgedPduDiscards
    		Counter,
    	    wfOsiCircuitPduFormatErrDiscards
    		Counter,
    	    wfOsiCircuitUnsuppOptsDiscards
    		Counter,
    	    wfOsiCircuitSentErrorReports
    		Counter,
    	    wfOsiCircuitReceivedControlPdus
    		Counter,
    	    wfOsiCircuitSentControlPdus
    		Counter,
    	    wfOsiCircuitStateChanges
    		Counter,
    	    wfOsiCircuitAdjStateChanges
    		Counter,
    	    wfOsiCircuitInitFailures
    		Counter,
    	    wfOsiCircuitRejectedAdjs
    		Counter,
    	    wfOsiCircuitReceivedBadLsps
    		Counter,
    	    wfOsiCircuitReceivedBadSnps
    		Counter,
    	    wfOsiCircuitReceivedBadEshs
    		Counter,
    	    wfOsiCircuitReceivedBadL1Iihs
    		Counter,
    	    wfOsiCircuitReceivedBadL2Iihs
    		Counter,
    	    wfOsiCircuitL1DrChanges
    		Counter,
    	    wfOsiCircuitL2DrChanges
    		Counter,
    	    wfOsiCircuitClnpForwarding
    		Counter,
    	    wfOsiCircuitClnpDefaultLifeTime
    		Counter,
    	    wfOsiCircuitClnpInReceives
    		Counter,
    	    wfOsiCircuitClnpInAddrErrors
    		Counter,
    	    wfOsiCircuitClnpForwPdus
    		Counter,
    	    wfOsiCircuitClnpInUnknownNlps
    		Counter,
    	    wfOsiCircuitClnpInDelivers
    		Counter,
    	    wfOsiCircuitClnpInUnknownUlps
    		Counter,
    	    wfOsiCircuitClnpSegCreates
    		Counter,
    	    wfOsiCircuitClnpInOpts
    		Counter,
    	    wfOsiCircuitClnpOutOpts
    		Counter,
    	    wfOsiCircuitEsisEshIns
    		Counter,
    	    wfOsiCircuitEsisIshOuts
    		Counter,
    	    wfOsiCircuitEsisRduOuts
    		Counter,
    	    wfOsiCircuitL1DesignatedRouter
    		OCTET STRING,
    	    wfOsiCircuitL2DesignatedRouter
    		OCTET STRING,
    	    wfOsiCircuitClnpOutEchoReplies
    		Counter,
    	    wfOsiCircuitClnpOutEchoRequests
    		Counter,
    	    wfOsiCircuitClnpInEchoReplies
    		Counter,
    	    wfOsiCircuitClnpInEchoRequests
    		Counter,
    	    wfOsiCircuitNumDynEsAdjs
    		Counter,
    	    wfOsiCircuitNumDynL1Adjs
    		Counter,
    	    wfOsiCircuitNumDynL2Adjs
    		Counter,
    	    wfOsiCircuitNumDynPtpIsAdjs
    		Counter,
    	    wfOsiCircuitNumDynPtpEsAdjs
    		Counter,
    	    wfOsiCircuitBadIshReceived
    		Counter,
    	    wfOsiCircuitEsisIshIns
    		Counter,
    	    wfOsiCircuitIihHoldMultiplier
    		INTEGER,
    	    wfOsiCircuitIshHoldMultiplier
    		INTEGER,
    	    wfOsiCircuitDisableRedirect
    		INTEGER
        }

    wfOsiCircuitDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value determines whether this circuit is configured."
        DEFVAL	{ created }
        ::= { wfOsiCircuitEntry 1 }

    wfOsiCircuitDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for this circuit."
        DEFVAL	{ enabled }
        ::= { wfOsiCircuitEntry 2 }

    wfOsiCircuitState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates whether the circuit state is up or down."
        DEFVAL	{ down }
        ::= { wfOsiCircuitEntry 3 }

    wfOsiCircuitId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A unique value for each known circuit."
        ::= { wfOsiCircuitEntry 4 }

    wfOsiCircuitRouterLevel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    l1(1),
    		    l2(2),
    		    l1l2(3),
    		    ext(4),
    		    l2ext(6),
    		    l1l2ext(7),
    		    esisonly(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the level protocol that the circuit runs.
                Its a bit mask to allow for some combination of
                L1, L2, External, ES-IS-only."
        DEFVAL	{ l1l2 }
        ::= { wfOsiCircuitEntry 5 }

    wfOsiCircuitL1DefaultMetric OBJECT-TYPE
        SYNTAX	INTEGER(1..63)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the default cost of using this circuit for L1 traffic."
        DEFVAL	{ 20 }
        ::= { wfOsiCircuitEntry 6 }

    wfOsiCircuitL2DefaultMetric OBJECT-TYPE
        SYNTAX	INTEGER(1..63)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the default cost of using this circuit for L2 traffic."
        DEFVAL	{ 20 }
        ::= { wfOsiCircuitEntry 7 }

    wfOsiCircuitL1DrPriority OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the priority for this system to become L1 designated
                router on this LAN circuit."
        DEFVAL	{ 64 }
        ::= { wfOsiCircuitEntry 8 }

    wfOsiCircuitL2DrPriority OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the priority for this system to become L2 designated
                router on this LAN circuit."
        DEFVAL	{ 64 }
        ::= { wfOsiCircuitEntry 9 }

    wfOsiCircuitIsisHelloTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..3600)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the period (secs) between IIH hello transmissions."
        DEFVAL	{ 8 }
        ::= { wfOsiCircuitEntry 10 }

    wfOsiCircuitEsisHelloTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..3600)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the period (secs) between ISH hello transmissions."
        DEFVAL	{ 30 }
        ::= { wfOsiCircuitEntry 11 }

    wfOsiCircuitEshConfigTime OBJECT-TYPE
        SYNTAX	INTEGER(1..3600)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the suggested time between ESH transmissions from an
                ES went in ISHs (ESCT)."
        DEFVAL	{ 600 }
        ::= { wfOsiCircuitEntry 12 }

    wfOsiCircuitPassword OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is Circuit Password for this circuit. Used to filter
                out Hellos from systems without the correct password."
        ::= { wfOsiCircuitEntry 13 }

    wfOsiCircuitReceivedPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of pkts that have been received on this
                circuit."
        ::= { wfOsiCircuitEntry 14 }

    wfOsiCircuitSentPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of pkts sent out this circuit."
        ::= { wfOsiCircuitEntry 15 }

    wfOsiCircuitDroppedPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of pkts dropped on this circuit."
        ::= { wfOsiCircuitEntry 16 }

    wfOsiCircuitFragmentedPdus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of pdus that had to be fragmented
                when forwarded out this circuit."
        ::= { wfOsiCircuitEntry 17 }

    wfOsiCircuitCongestionDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of PDUs dropped because of congestion."
        ::= { wfOsiCircuitEntry 18 }

    wfOsiCircuitAddrUnreachDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of PDUs dropped because the destination
                is unreachable."
        ::= { wfOsiCircuitEntry 19 }

    wfOsiCircuitAgedPduDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of PDUs dropped because of aging."
        ::= { wfOsiCircuitEntry 20 }

    wfOsiCircuitPduFormatErrDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of PDUs dropped because of Format Error."
        ::= { wfOsiCircuitEntry 21 }

    wfOsiCircuitUnsuppOptsDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of PDUs dropped because they contain
                unsupported options."
        ::= { wfOsiCircuitEntry 22 }

    wfOsiCircuitSentErrorReports OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of error reports sent out this circuit."
        ::= { wfOsiCircuitEntry 23 }

    wfOsiCircuitReceivedControlPdus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of ESIS or ISIS PDUs received on this circuit."
        ::= { wfOsiCircuitEntry 24 }

    wfOsiCircuitSentControlPdus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of ESIS or ISIS PDUs sent out this circuit."
        ::= { wfOsiCircuitEntry 25 }

    wfOsiCircuitStateChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of times the circuit goes from down to up
                or from up to down."
        ::= { wfOsiCircuitEntry 26 }

    wfOsiCircuitAdjStateChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of times an adjacency off of this circuit
                goes from down to up or from up to down state."
        ::= { wfOsiCircuitEntry 27 }

    wfOsiCircuitInitFailures OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of times this circuit fails to initialize."
        ::= { wfOsiCircuitEntry 28 }

    wfOsiCircuitRejectedAdjs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of Adjacencies that were rejected on
                this circuit."
        ::= { wfOsiCircuitEntry 29 }

    wfOsiCircuitReceivedBadLsps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of bad Lsps received on this circuit."
        ::= { wfOsiCircuitEntry 30 }

    wfOsiCircuitReceivedBadSnps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of BAD Sequence Number Pdus received on
                this circuit."
        ::= { wfOsiCircuitEntry 31 }

    wfOsiCircuitReceivedBadEshs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of bad ESHs received on this circuit."
        ::= { wfOsiCircuitEntry 32 }

    wfOsiCircuitReceivedBadL1Iihs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of bad L1 IIHs received on this circuit."
        ::= { wfOsiCircuitEntry 33 }

    wfOsiCircuitReceivedBadL2Iihs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of bad L2 IIHs received on this circuit."
        ::= { wfOsiCircuitEntry 34 }

    wfOsiCircuitL1DrChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of times the L1 Designated Router has been
                elected on this circuit."
        ::= { wfOsiCircuitEntry 35 }

    wfOsiCircuitL2DrChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of times the L2 Designated Router has been
                elected on this circuit."
        ::= { wfOsiCircuitEntry 36 }

    wfOsiCircuitClnpForwarding OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This shows whether forwarding is enabled over this circuit."
        ::= { wfOsiCircuitEntry 37 }

    wfOsiCircuitClnpDefaultLifeTime OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the lifetime included in clnp pdus generated by this
                router (i.e. echo and echo reply pdus, error report pdus)."
        ::= { wfOsiCircuitEntry 38 }

    wfOsiCircuitClnpInReceives OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of CLNP pdus received from this circuit."
        ::= { wfOsiCircuitEntry 39 }

    wfOsiCircuitClnpInAddrErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of CLNP pdus recived from this circuit
                with Address format errors."
        ::= { wfOsiCircuitEntry 40 }

    wfOsiCircuitClnpForwPdus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of Clnp PDUs received on this circuit
                that are forwarded."
        ::= { wfOsiCircuitEntry 41 }

    wfOsiCircuitClnpInUnknownNlps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of Clnp PDUs received on this circuit
                where the network layer addressed is unknown (Bad NLPID)."
        ::= { wfOsiCircuitEntry 42 }

    wfOsiCircuitClnpInDelivers OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of Clnp PDUs received on this circuit
                whose destination is this router."
        ::= { wfOsiCircuitEntry 43 }

    wfOsiCircuitClnpInUnknownUlps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is number of Clnp PDUs received on this circuit addressed
                to this router where the upper layer is unknown."
        ::= { wfOsiCircuitEntry 44 }

    wfOsiCircuitClnpSegCreates OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of CLNP segments created from
                pdus received on this circuit."
        ::= { wfOsiCircuitEntry 45 }

    wfOsiCircuitClnpInOpts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of CLNP pdus received with an options
                portion."
        ::= { wfOsiCircuitEntry 46 }

    wfOsiCircuitClnpOutOpts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of CLNP pdus sent with an options
                portion."
        ::= { wfOsiCircuitEntry 47 }

    wfOsiCircuitEsisEshIns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of ESHs received from this circuit."
        ::= { wfOsiCircuitEntry 48 }

    wfOsiCircuitEsisIshOuts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of ISHs sent out this circuit."
        ::= { wfOsiCircuitEntry 49 }

    wfOsiCircuitEsisRduOuts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of Redirects sent out this circuit."
        ::= { wfOsiCircuitEntry 50 }

    wfOsiCircuitL1DesignatedRouter OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the ID of the L1 Designated Router on this
                circuit."
        ::= { wfOsiCircuitEntry 51 }

    wfOsiCircuitL2DesignatedRouter OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the ID of the L2 Designated Router on this
                circuit."
        ::= { wfOsiCircuitEntry 52 }

    wfOsiCircuitClnpOutEchoReplies OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of CLNP Echo Replies sent out this circuit."
        ::= { wfOsiCircuitEntry 53 }

    wfOsiCircuitClnpOutEchoRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of Clnp Echo Requests sent out this circuit."
        ::= { wfOsiCircuitEntry 54 }

    wfOsiCircuitClnpInEchoReplies OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of CLNP Echo Replies received on this circuit."
        ::= { wfOsiCircuitEntry 55 }

    wfOsiCircuitClnpInEchoRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of CLNP Echo Requests recived on this circuit."
        ::= { wfOsiCircuitEntry 56 }

    wfOsiCircuitNumDynEsAdjs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of Dynamic End System Adjacencies formed on
                this circuit."
        ::= { wfOsiCircuitEntry 57 }

    wfOsiCircuitNumDynL1Adjs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of Dynamic Level 1 Intermediate System
                Adjacencies formed on this circuit. "
        ::= { wfOsiCircuitEntry 58 }

    wfOsiCircuitNumDynL2Adjs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of Dynamic Level 2 Intermediate System
                Adjacencies formed on this circuit."
        ::= { wfOsiCircuitEntry 59 }

    wfOsiCircuitNumDynPtpIsAdjs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of Dynamic Intermediate System Point-to-Point
                Adjacencies formed on this circuit."
        ::= { wfOsiCircuitEntry 60 }

    wfOsiCircuitNumDynPtpEsAdjs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of Dynamic End System Point-to-Point
                Adjaciences formed on this circuit."
        ::= { wfOsiCircuitEntry 61 }

    wfOsiCircuitBadIshReceived OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of bad Intermediate System Hellos
                received on this circuit. These will only be received on
                Point-to-Point circuits."
        ::= { wfOsiCircuitEntry 62 }

    wfOsiCircuitEsisIshIns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of good Intermediate System Hellos
                received on this circuit. These will only be received on
                Point-to-Point circuits."
        ::= { wfOsiCircuitEntry 63 }

    wfOsiCircuitIihHoldMultiplier OBJECT-TYPE
        SYNTAX	INTEGER(1..5)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the multiplier value used to compute the hold time
                set in the IIH PDUs transmitted from this router. Hold time
                equals IIH Timer times IIH Hold Multiplier."
        DEFVAL	{ 3 }
        ::= { wfOsiCircuitEntry 64 }

    wfOsiCircuitIshHoldMultiplier OBJECT-TYPE
        SYNTAX	INTEGER(1..5)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the multiplier value used to compute the hold time
                set in the ISH PDUs transmitted from this router. Hold time
                equals IIH Timer times IIH Hold Multiplier."
        DEFVAL	{ 3 }
        ::= { wfOsiCircuitEntry 65 }

    wfOsiCircuitDisableRedirect OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Allow Redirects to be disabled. This is required
                when operating over Frame Relay in group mode in a
                partial mesh topology."
        DEFVAL	{ enabled }
        ::= { wfOsiCircuitEntry 66 }

    wfOsiExternalAddressTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOsiExternalAddressEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the table of External Addresses for this Router."
        ::= { wfOsiGroup 4 }

    wfOsiExternalAddressEntry OBJECT-TYPE
        SYNTAX	WfOsiExternalAddressEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the External Address Record for this Router."
        INDEX	{ wfOsiExtAddrCircuit,
    		  wfOsiExtAddr }
        ::= { wfOsiExternalAddressTable 1 }

    WfOsiExternalAddressEntry ::= SEQUENCE {
    	    wfOsiExtAddrDelete
    		INTEGER,
    	    wfOsiExtAddrDisable
    		INTEGER,
    	    wfOsiExtAddr
    		OCTET STRING,
    	    wfOsiExtAddrCircuit
    		INTEGER,
    	    wfOsiExtAddrNibbleLength
    		INTEGER,
    	    wfOsiExtAddrSnpa
    		OCTET STRING,
    	    wfOsiExtAddrCost
    		INTEGER
        }

    wfOsiExtAddrDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the Create/Delete parameter for this ExtAddr entry."
        DEFVAL	{ created }
        ::= { wfOsiExternalAddressEntry 1 }

    wfOsiExtAddrDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for this ExtAddr."
        DEFVAL	{ enabled }
        ::= { wfOsiExternalAddressEntry 2 }

    wfOsiExtAddr OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (20))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the prefix external address. It is also the inst_id."
        ::= { wfOsiExternalAddressEntry 3 }

    wfOsiExtAddrCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the circuit to go out for this adj."
        ::= { wfOsiExternalAddressEntry 4 }

    wfOsiExtAddrNibbleLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the length in nibbles of the external address."
        ::= { wfOsiExternalAddressEntry 5 }

    wfOsiExtAddrSnpa OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the SNPA of the neighbor on this circuit."
        ::= { wfOsiExternalAddressEntry 6 }

    wfOsiExtAddrCost OBJECT-TYPE
        SYNTAX	INTEGER(1..63)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the external metric cost to this address."
        DEFVAL	{ 20 }
        ::= { wfOsiExternalAddressEntry 7 }

    wfOsiStaticEsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOsiStaticEsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the Static ES Table for this router."
        ::= { wfOsiGroup 5 }

    wfOsiStaticEsEntry OBJECT-TYPE
        SYNTAX	WfOsiStaticEsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the Static ES entry for the Static ES Table."
        INDEX	{ wfOsiStaticEsCircuit,
    		  wfOsiStaticEsId }
        ::= { wfOsiStaticEsTable 1 }

    WfOsiStaticEsEntry ::= SEQUENCE {
    	    wfOsiStaticEsDelete
    		INTEGER,
    	    wfOsiStaticEsDisable
    		INTEGER,
    	    wfOsiStaticEsId
    		OCTET STRING,
    	    wfOsiStaticEsCircuit
    		INTEGER,
    	    wfOsiStaticEsSnpa
    		OCTET STRING
        }

    wfOsiStaticEsDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the Create/Delete parameter for this Static ES entry."
        DEFVAL	{ created }
        ::= { wfOsiStaticEsEntry 1 }

    wfOsiStaticEsDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for this Static ES."
        DEFVAL	{ enabled }
        ::= { wfOsiStaticEsEntry 2 }

    wfOsiStaticEsId OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the ESID of the neighbor."
        ::= { wfOsiStaticEsEntry 3 }

    wfOsiStaticEsCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the circuit to go out for this adj."
        ::= { wfOsiStaticEsEntry 4 }

    wfOsiStaticEsSnpa OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the SNPA of the neighbor on this circuit."
        ::= { wfOsiStaticEsEntry 5 }

    wfOsiTrafficFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOsiTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "OSI Traffic Filters"
        ::= { wfOsiGroup 6 }

    wfOsiTrafficFilterEntry OBJECT-TYPE
        SYNTAX	WfOsiTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A traffic filter definition"
        INDEX	{ wfOsiTrafficFilterCircuit,
    		  wfOsiTrafficFilterRuleNumber,
    		  wfOsiTrafficFilterFragment }
        ::= { wfOsiTrafficFilterTable 1 }

    WfOsiTrafficFilterEntry ::= SEQUENCE {
    	    wfOsiTrafficFilterDelete
    		INTEGER,
    	    wfOsiTrafficFilterDisable
    		INTEGER,
    	    wfOsiTrafficFilterStatus
    		INTEGER,
    	    wfOsiTrafficFilterCounter
    		Counter,
    	    wfOsiTrafficFilterDefinition
    		Opaque,
    	    wfOsiTrafficFilterReserved
    		INTEGER,
    	    wfOsiTrafficFilterCircuit
    		INTEGER,
    	    wfOsiTrafficFilterRuleNumber
    		INTEGER,
    	    wfOsiTrafficFilterFragment
    		INTEGER,
    	    wfOsiTrafficFilterName
    		DisplayString
        }

    wfOsiTrafficFilterDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the existence of the traffic filter rule:
                created - traffic filter exists
                delete - traffic filter does not exist and can be deleted."
        DEFVAL	{ created }
        ::= { wfOsiTrafficFilterEntry 1 }

    wfOsiTrafficFilterDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether or not the traffic filter rule should be used:
                enabled - activate the rule.
                disabled - inactivate the rule."
        DEFVAL	{ enabled }
        ::= { wfOsiTrafficFilterEntry 2 }

    wfOsiTrafficFilterStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    error(2),
    		    inactive(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines the current status of the traffic filter:
                inactive - the rule is not in use.
                active - the rule is being used.
                error - the application detected an error in the rule."
        DEFVAL	{ inactive }
        ::= { wfOsiTrafficFilterEntry 3 }

    wfOsiTrafficFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets that have
                matched this rule."
        ::= { wfOsiTrafficFilterEntry 4 }

    wfOsiTrafficFilterDefinition OBJECT-TYPE
        SYNTAX	Opaque
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The filter rule definition."
        ::= { wfOsiTrafficFilterEntry 5 }

    wfOsiTrafficFilterReserved OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reserved field."
        ::= { wfOsiTrafficFilterEntry 6 }

    wfOsiTrafficFilterCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ID of the Circuit to which the
                filter is applied."
        ::= { wfOsiTrafficFilterEntry 7 }

    wfOsiTrafficFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ID for the rule."
        ::= { wfOsiTrafficFilterEntry 8 }

    wfOsiTrafficFilterFragment OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fragment number - for large rules."
        ::= { wfOsiTrafficFilterEntry 9 }

    wfOsiTrafficFilterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "name of the rule number"
        ::= { wfOsiTrafficFilterEntry 10 }

    wfOsiL1LspHdrTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOsiL1LspHdrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "2 u_int32's so the inst_id len is 2."
        ::= { wfOsiGroup 7 }

    wfOsiL1LspHdrEntry OBJECT-TYPE
        SYNTAX	WfOsiL1LspHdrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A Record in the Level 1 Lsp Header Table"
        INDEX	{ wfOsiL1LspHdrLspId }
        ::= { wfOsiL1LspHdrTable 1 }

    WfOsiL1LspHdrEntry ::= SEQUENCE {
    	    wfOsiL1LspHdrLspId
    		OCTET STRING,
    	    wfOsiL1LspHdrLifetime
    		INTEGER,
    	    wfOsiL1LspHdrSeqnum
    		INTEGER,
    	    wfOsiL1LspHdrFlags
    		OCTET STRING,
    	    wfOsiL1LspHdrCksum
    		OCTET STRING
        }

    wfOsiL1LspHdrLspId OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (8))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "LSPID = Source ID + Pseudo-node ID + LSP number"
        ::= { wfOsiL1LspHdrEntry 1 }

    wfOsiL1LspHdrLifetime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Lsp Lifetime"
        ::= { wfOsiL1LspHdrEntry 2 }

    wfOsiL1LspHdrSeqnum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Lsp sequence number"
        ::= { wfOsiL1LspHdrEntry 3 }

    wfOsiL1LspHdrFlags OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flags: P/ATT/LSPDBOL/IS type"
        ::= { wfOsiL1LspHdrEntry 4 }

    wfOsiL1LspHdrCksum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Checksum"
        ::= { wfOsiL1LspHdrEntry 5 }

    wfOsiL2LspHdrTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOsiL2LspHdrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "2 u_int32's so the inst_id len is 2."
        ::= { wfOsiGroup 8 }

    wfOsiL2LspHdrEntry OBJECT-TYPE
        SYNTAX	WfOsiL2LspHdrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A Record in the Lsp Header Table"
        INDEX	{ wfOsiL2LspHdrLspId }
        ::= { wfOsiL2LspHdrTable 1 }

    WfOsiL2LspHdrEntry ::= SEQUENCE {
    	    wfOsiL2LspHdrLspId
    		OCTET STRING,
    	    wfOsiL2LspHdrLifetime
    		INTEGER,
    	    wfOsiL2LspHdrSeqnum
    		INTEGER,
    	    wfOsiL2LspHdrFlags
    		OCTET STRING,
    	    wfOsiL2LspHdrCksum
    		OCTET STRING
        }

    wfOsiL2LspHdrLspId OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (8))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "LSPID = Source ID + Pseudo-node ID + LSP number"
        ::= { wfOsiL2LspHdrEntry 1 }

    wfOsiL2LspHdrLifetime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Lsp Lifetime"
        ::= { wfOsiL2LspHdrEntry 2 }

    wfOsiL2LspHdrSeqnum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Lsp sequence number"
        ::= { wfOsiL2LspHdrEntry 3 }

    wfOsiL2LspHdrFlags OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Flags: P/ATT/LSPDBOL/IS type"
        ::= { wfOsiL2LspHdrEntry 4 }

    wfOsiL2LspHdrCksum OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Checksum"
        ::= { wfOsiL2LspHdrEntry 5 }

    wfOsiDynAdjTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOsiDynAdjEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Dynamic Adjacency Table"
        ::= { wfOsiGroup 9 }

    wfOsiDynAdjEntry OBJECT-TYPE
        SYNTAX	WfOsiDynAdjEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Adjacency Table - the real index is the adjacency id"
        INDEX	{ wfOsiDynAdjId }
        ::= { wfOsiDynAdjTable 1 }

    WfOsiDynAdjEntry ::= SEQUENCE {
    	    wfOsiDynAdjId
    		INTEGER,
    	    wfOsiDynAdjDatabase
    		INTEGER,
    	    wfOsiDynAdjType
    		INTEGER,
    	    wfOsiDynAdjState
    		INTEGER,
    	    wfOsiDynAdjCircuitId
    		INTEGER,
    	    wfOsiDynAdjHoldTime
    		INTEGER,
    	    wfOsiDynAdjPriority
    		INTEGER,
    	    wfOsiDynAdjSnpaAddr
    		OCTET STRING,
    	    wfOsiDynAdjNsapAddr
    		OCTET STRING,
    	    wfOsiDynAdjLanId
    		OCTET STRING
        }

    wfOsiDynAdjId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Index in the Adjacency Table"
        ::= { wfOsiDynAdjEntry 1 }

    wfOsiDynAdjDatabase OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Database into which the Adjacency is stored,
                1=ES, 2=Level 1 IS, 3=Level 2 IS."
        ::= { wfOsiDynAdjEntry 2 }

    wfOsiDynAdjType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The type of adjacency. (see Osi_const.h)"
        ::= { wfOsiDynAdjEntry 3 }

    wfOsiDynAdjState OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The state of the adjacency. INITIALIZING, UP or FAILED"
        ::= { wfOsiDynAdjEntry 4 }

    wfOsiDynAdjCircuitId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A unique value for each known circuit."
        ::= { wfOsiDynAdjEntry 5 }

    wfOsiDynAdjHoldTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Hold Time received from neighbor."
        ::= { wfOsiDynAdjEntry 6 }

    wfOsiDynAdjPriority OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Priority to become designated router. IS only."
        ::= { wfOsiDynAdjEntry 7 }

    wfOsiDynAdjSnpaAddr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "SNAP address for neighbor."
        ::= { wfOsiDynAdjEntry 8 }

    wfOsiDynAdjNsapAddr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Neighbor address (NSAP)."
        ::= { wfOsiDynAdjEntry 9 }

    wfOsiDynAdjLanId OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "LAN ID from Designated Router. IS only."
        ::= { wfOsiDynAdjEntry 10 }

    wfOsiL1RoutesTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOsiL1RouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the L1 Routes Table for this router."
        ::= { wfOsiGroup 10 }

    wfOsiL1RouteEntry OBJECT-TYPE
        SYNTAX	WfOsiL1RouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the L1 Route entry for the Routes Table."
        INDEX	{ wfOsiL1RouteType,
    		  wfOsiL1RoutePathSplit,
    		  wfOsiL1RouteId }
        ::= { wfOsiL1RoutesTable 1 }

    WfOsiL1RouteEntry ::= SEQUENCE {
    	    wfOsiL1RouteId
    		OCTET STRING,
    	    wfOsiL1RoutePathSplit
    		INTEGER,
    	    wfOsiL1RouteType
    		INTEGER,
    	    wfOsiL1RouteNextHopSnpa
    		OCTET STRING,
    	    wfOsiL1RouteNextHopId
    		OCTET STRING,
    	    wfOsiL1RouteNextHopType
    		INTEGER,
    	    wfOsiL1RouteNextHopCircuit
    		INTEGER,
    	    wfOsiL1RouteDefaultMetricCost
    		INTEGER
        }

    wfOsiL1RouteId OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the SysID of the L1 Destination."
        ::= { wfOsiL1RouteEntry 1 }

    wfOsiL1RoutePathSplit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This assigns a number to each equal cost path to the
                destination.  There can be up to 2 equal cost paths
                to a destination."
        ::= { wfOsiL1RouteEntry 2 }

    wfOsiL1RouteType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This tells what kind of a route this entry is."
        ::= { wfOsiL1RouteEntry 3 }

    wfOsiL1RouteNextHopSnpa OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the SNPA of the next hop adj for this route."
        ::= { wfOsiL1RouteEntry 4 }

    wfOsiL1RouteNextHopId OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the ID of the next hop adjacency to this route.
                If its just an ES then it is the 6byte System ID.
                If the next HOP is an IS then it is the NET. "
        ::= { wfOsiL1RouteEntry 5 }

    wfOsiL1RouteNextHopType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the adj type of the next hop for this route."
        ::= { wfOsiL1RouteEntry 6 }

    wfOsiL1RouteNextHopCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the circuit to forward out for this route."
        ::= { wfOsiL1RouteEntry 7 }

    wfOsiL1RouteDefaultMetricCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the cost to from this system to this destination."
        ::= { wfOsiL1RouteEntry 8 }

    wfOsiL2RoutesTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOsiL2RouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the L2 Routes Table for this router."
        ::= { wfOsiGroup 11 }

    wfOsiL2RouteEntry OBJECT-TYPE
        SYNTAX	WfOsiL2RouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the L2 Route entry for the Routes Table."
        INDEX	{ wfOsiL2RouteType,
    		  wfOsiL2RoutePathSplit,
    		  wfOsiL2RouteId }
        ::= { wfOsiL2RoutesTable 1 }

    WfOsiL2RouteEntry ::= SEQUENCE {
    	    wfOsiL2RouteId
    		OCTET STRING,
    	    wfOsiL2RoutePathSplit
    		INTEGER,
    	    wfOsiL2RouteType
    		INTEGER,
    	    wfOsiL2RouteNextHopSnpa
    		OCTET STRING,
    	    wfOsiL2RouteNextHopId
    		OCTET STRING,
    	    wfOsiL2RouteNextHopType
    		INTEGER,
    	    wfOsiL2RouteNextHopCircuit
    		INTEGER,
    	    wfOsiL2RouteDefaultMetricCost
    		INTEGER
        }

    wfOsiL2RouteId OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (13))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the SysID of the L2 Destination."
        ::= { wfOsiL2RouteEntry 1 }

    wfOsiL2RoutePathSplit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This assigns a number to each equal cost path to the
                destination.  There can be up to 2 equal cost paths
                to a destination."
        ::= { wfOsiL2RouteEntry 2 }

    wfOsiL2RouteType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This tells what kind of a route this entry is."
        ::= { wfOsiL2RouteEntry 3 }

    wfOsiL2RouteNextHopSnpa OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the SNPA of the neighbor on this circuit."
        ::= { wfOsiL2RouteEntry 4 }

    wfOsiL2RouteNextHopId OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the ID of the next hop adjacency to this route.
                If its just an ES then it is the 6byte System ID.
                If the next HOP is an IS then it is the NET. "
        ::= { wfOsiL2RouteEntry 5 }

    wfOsiL2RouteNextHopType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the adj type of the next hop for this route."
        ::= { wfOsiL2RouteEntry 6 }

    wfOsiL2RouteNextHopCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the circuit to go out for this adj."
        ::= { wfOsiL2RouteEntry 7 }

    wfOsiL2RouteDefaultMetricCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the cost to from this system to this destination."
        ::= { wfOsiL2RouteEntry 8 }

    wfOsiDecnetTrans	OBJECT IDENTIFIER ::= { wfOsiGroup 12 }

    wfOsiDecnetTransDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value determines whether DECnet Phase 4 to Phase 5
                Transition functions are configured."
        DEFVAL	{ created }
        ::= { wfOsiDecnetTrans 1 }

    wfOsiDecnetTransDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value determines whether DECnet Phase 4 to Phase 5
                Transition functions are enabled."
        DEFVAL	{ enabled }
        ::= { wfOsiDecnetTrans 2 }

    wfOsiDecnetTransState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This value displays the state of the DECnet Phase 4 to Phase 5
                Transition function."
        DEFVAL	{ notpresent }
        ::= { wfOsiDecnetTrans 3 }

    wfOsiDecnetTransPhase4Pkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of successfully translated Phase 4 packets"
        ::= { wfOsiDecnetTrans 4 }

    wfOsiDecnetTransSegFail OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times Phase 5 translation failed because the packet
                was segmented."
        ::= { wfOsiDecnetTrans 5 }

    wfOsiDecnetTransNselFail OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times Phase 5 translation failed because the NSELs
                were not the same."
        ::= { wfOsiDecnetTrans 6 }

    wfOsiDecnetTransUnrFail OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of times Phase 5 failed to find a route to the
                destination."
        ::= { wfOsiDecnetTrans 7 }

    wfOsiDecnetTransNumPhase4Es OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Phase 4 ES Adjacencies announced by the Phase 4
                (DECnet IV) router."
        ::= { wfOsiDecnetTrans 8 }

    END  -- Wellfleet-OSI-MIB
-- @(#)WSCCS s/mibs-ospf.mib 1.1 8/30/95
Wellfleet-OSPF-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:46:11 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfOspfGroup
        FROM Wellfleet-COMMON-MIB;


    wfOspfGeneralGroup	OBJECT IDENTIFIER ::= { wfOspfGroup 1 }

    wfOspfGeneralDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value determines whether OSPF is configured'"
        DEFVAL	{ created }
        ::= { wfOspfGeneralGroup 1 }

    wfOspfGeneralDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The administrative status of OSPF in the router.  The
                value 'enabled' denotes that the OSPF Process is active
                on at least one interface; 'disabled' disables it on
                all interfaces.'"
        DEFVAL	{ enabled }
        ::= { wfOspfGeneralGroup 2 }

    wfOspfGeneralState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The state of OSPF'"
        DEFVAL	{ down }
        ::= { wfOspfGeneralGroup 3 }

    wfOspfRouterId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'A 32-bit integer uniquely identifying the router in
                the Autonomous System.

                By convention, to ensure uniqueness, this should
                default to the value of one of the router's IP
                interface addresses.'
                         REFERENCE
                'OSPF Version 2, C.1 Global parameters'"
        ::= { wfOspfGeneralGroup 4 }

    wfOspfVersionNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The current version number of the OSPF protocol is 2.'
                         REFERENCE
                'OSPF Version 2, Title'"
        ::= { wfOspfGeneralGroup 5 }

    wfOspfAreaBdrRtrStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'A flag to note whether this router is an area border
                router.'
                         REFERENCE
                'OSPF Version 2, Section 3 Splitting the AS into Areas'"
        DEFVAL	{ false }
        ::= { wfOspfGeneralGroup 6 }

    wfOspfASBdrRtrStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'A flag to note whether this router is an Autonomous
                System border router.'
                         REFERENCE
                'OSPF Version 2, Section 3.3 Classification of routers'"
        DEFVAL	{ false }
        ::= { wfOspfGeneralGroup 7 }

    wfOspfTOSSupport OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The router's support for type-of-service routing.'
                         REFERENCE
                'OSPF Version 2, Appendix F.1.2 Optional TOS support'"
        DEFVAL	{ false }
        ::= { wfOspfGeneralGroup 8 }

    wfOspfSpfHoldDown OBJECT-TYPE
        SYNTAX	INTEGER(0..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Hold Down Timer for the SPF.  The SPF will run at most
                once per hold down timer value.  A value of 0 means no
                hold down."
        DEFVAL	{ 1 }
        ::= { wfOspfGeneralGroup 9 }

    wfOspfSlotMask OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Slot mask for which slots OSPF is eligible
                to run on.  The MSBit represents slot 1, the
                next most significant bit represents slot 2,
                and so on...  Slots can be 1-14.
                Default is all slots on a BCN."
        DEFVAL	{ 4294705152 }
        ::= { wfOspfGeneralGroup 10 }

    wfOspfNewAseMetricSupport OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A parameter to specify if the new style ASE metric support
                is enabled.  The new metric is not compatible with the
                pre-8.0 ASE metrics.  The new metric support should be
                disabled if the router is to interoperate with routers
                running a pre-8.0 OSPF version."
        DEFVAL	{ disabled }
        ::= { wfOspfGeneralGroup 11 }

    wfOspfBackupDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter enables or disables the backup OSPF soloist's
                backup link state database.  When the parameter is set to disabled
                the OSPF backup soloist will not maintain a copy of the OSPF link
                state database."
        DEFVAL	{ disabled }
        ::= { wfOspfGeneralGroup 12 }

    wfOspfPrimaryLogMask OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A parameter to specify which OSPF log messages should be logged.
                This will only effect the Primary OSPF gate.
                Each bit represents a message as defined below.  A 1 in that
                bit location means to log it and a 0 means not to put that
                log message in the log.  Changing this value will NOT restart
                OSPF, but will take effct immediately(if there are any messages
                to be logged.

                bit 31                                bit 0
                +---------------------------------------+
                |                                       |
                +---------------------------------------+

                bit0  Trace Messages
                bit1  INFO Level messages
                bit2  debug level messages
                bit3  OSPF interface state change messages
                bit4  Nbr state changes
                bit5  self-origination of LSA's
                bit6  receipt of new LSA's
                bit7  changes to OSPF`s Routing Table
                bit8  Bad LS requests, Ack's, or updates
                bit9  receipt of less recent LSA's
                bit10 receipt of more recent self-originated LSA's
                bit11 receipt of MAxAge LSA's (i.e. LSA's being flushed)
                bit12 - 31 reserved
                "
        DEFVAL	{ 287 }
        ::= { wfOspfGeneralGroup 13 }

    wfOspfBackupLogMask OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A parameter to specify which OSPF log messages should be logged.
                This will only effect the Backup OSPF gate.
                Each bit represents a message as defined below.  A 1 in that
                bit location means to log it a 0 means not to put that
                log message in the log.  Changing this value will NOT restart
                OSPF, but will take effct immediately(if there are any messages
                to be logged.

                bit 31                                bit 0
                +---------------------------------------+
                |                                       |
                +---------------------------------------+

                bit0  Trace Messages
                bit1  INFO Level messages
                bit2  debug level messages
                bit3  OSPF interface state change messages
                bit4  Nbr state changes
                bit5  self-origination of LSA's
                bit6  receipt of new LSA's
                bit7  changes to OSPF`s Routing Table
                bit8  Bad LS requests, Ack's, or updates
                bit9  receipt of less recent LSA's
                bit10 receipt of more recent self-originated LSA's
                bit11 receipt of MAxAge LSA's (i.e. LSA's being flushed)
                bit12 - 31 reserved
                "
        ::= { wfOspfGeneralGroup 14 }

    wfOspfAseTagDefault OBJECT-TYPE
        SYNTAX	INTEGER {
    		    zero(1),
    		    auto(2),
    		    wf(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter indicates how ASE tags will be generated for those
                ASEs whose tags are not altered by an export route filter or
                announce route policy.  zero(1) indicates that a zero value is
                used.  auto(1) indicates that an automatic tag will be generated
                as specified in RFC 1403.  wf(2) indicates that the wellfleet
                proprietary scheme will be used.  In this case, the next hop
                is used for IGP routes and the neighbor AS is used for EGP routes."
        DEFVAL	{ zero }
        ::= { wfOspfGeneralGroup 15 }

    wfOspfPrimarySlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot on which OSPF Primary is running. Slots
                can be 1-14. Default is zero."
        ::= { wfOspfGeneralGroup 16 }

    wfOspfBackupSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot on which OSPF Backup is running. Slots
                can be 1-14. Default is zero."
        ::= { wfOspfGeneralGroup 17 }

    wfOspfAreaTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOspfAreaEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "--      The OSPF Area Data Structure contains information
                --      regarding the various areas. The interfaces and
                --      virtual links are configured as part of these areas.
                --      Area 0.0.0.0, by definition, is the Backbone Area
                       'Information describing the configured parameters and
                       cumulative statistics of the router's attached areas.'
                    REFERENCE
                       'OSPF Version 2, Section 6  The Area Data Structure'"
        ::= { wfOspfGroup 2 }

    wfOspfAreaEntry OBJECT-TYPE
        SYNTAX	WfOspfAreaEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "'Information describing the configured parameters and
                cumulative statistics of one of the router's attached
                areas.'"
        INDEX	{ wfOspfAreaId }
        ::= { wfOspfAreaTable 1 }

    WfOspfAreaEntry ::= SEQUENCE {
    	    wfOspfAreaDelete
    		INTEGER,
    	    wfOspfAreaDisable
    		INTEGER,
    	    wfOspfAreaState
    		INTEGER,
    	    wfOspfAreaId
    		IpAddress,
    	    wfOspfAuthType
    		INTEGER,
    	    wfOspfImportASExtern
    		INTEGER,
    	    wfOspfStubMetric
    		INTEGER,
    	    wfOspfImportSum
    		INTEGER,
    	    wfOspfSpfCnt
    		Counter
        }

    wfOspfAreaDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value determines if the OSPF router is configured with
                     this area."
        DEFVAL	{ created }
        ::= { wfOspfAreaEntry 1 }

    wfOspfAreaDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value indicates the state of this area on the OSPF
                router."
        DEFVAL	{ enabled }
        ::= { wfOspfAreaEntry 2 }

    wfOspfAreaState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This value indicates the state of the OSPF Area."
        DEFVAL	{ down }
        ::= { wfOspfAreaEntry 3 }

    wfOspfAreaId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'A 32-bit integer uniquely identifying an area.  Area
                ID 0.0.0.0 is used for the OSPF backbone.'
                         REFERENCE
                'OSPF Version 2, Appendix C.2 Area parameters'"
        ::= { wfOspfAreaEntry 4 }

    wfOspfAuthType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    nopassword(1),
    		    simplepassword(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The authentication type specified for an area.
                Additional authentication types may be assigned locally
                on a per Area basis.'
                         REFERENCE
                'OSPF Version 2, Appendix E Authentication'
                         -- none (0),
                         -- simplePassword (1)
                         -- reserved for future specification (2..255)
                         -- reserved for AS specific values (> 255)"
        DEFVAL	{ nopassword }
        ::= { wfOspfAreaEntry 5 }

    wfOspfImportASExtern OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The area's support for importing AS external link-
                state advertisements.'
                         REFERENCE
                'OSPF Version 2, Appendix C.2 Area parameters'"
        DEFVAL	{ true }
        ::= { wfOspfAreaEntry 6 }

    wfOspfStubMetric OBJECT-TYPE
        SYNTAX	INTEGER(1..16777215)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The metric value applied at the indicated type of
                service.  By default, this equals the least metric at
                the type of service among the interfaces to other
                areas.'"
        DEFVAL	{ 1 }
        ::= { wfOspfAreaEntry 7 }

    wfOspfImportSum OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The area's support for importing Summary
                advertisements into a stub area.  This variable
                   should not be set unless wfOspfImportASExtern is
                   set to FALSE'"
        DEFVAL	{ true }
        ::= { wfOspfAreaEntry 8 }

    wfOspfSpfCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the OSPF SPF algorithm
                has been run for this area."
        ::= { wfOspfAreaEntry 9 }

    wfOspfLsdbTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOspfLsdbEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "--  OSPF Link State Database

                --      The Link State Database contains the Link State
                --      Advertisements from throughout the areas that the
                --      device is attached to.
                       'The OSPF Process's Links State Database.'
                    REFERENCE
                       'OSPF Version 2, Section 12 Link State Advertisements'"
        ::= { wfOspfGroup 3 }

    wfOspfLsdbEntry OBJECT-TYPE
        SYNTAX	WfOspfLsdbEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "'A single Link State Advertisement.'"
        INDEX	{ wfOspfLsdbAreaId,
    		  wfOspfLsdbType,
    		  wfOspfLsdbLSID,
    		  wfOspfLsdbRouterId }
        ::= { wfOspfLsdbTable 1 }

    WfOspfLsdbEntry ::= SEQUENCE {
    	    wfOspfLsdbAreaId
    		IpAddress,
    	    wfOspfLsdbType
    		INTEGER,
    	    wfOspfLsdbLSID
    		IpAddress,
    	    wfOspfLsdbRouterId
    		IpAddress,
    	    wfOspfLsdbSequence
    		INTEGER,
    	    wfOspfLsdbAge
    		INTEGER,
    	    wfOspfLsdbChecksum
    		INTEGER,
    	    wfOspfLsdbMetric
    		INTEGER,
    	    wfOspfLsdbAseForwardAddr
    		IpAddress,
    	    wfOspfLsdbAseTag
    		Gauge,
    	    wfOspfLsdbAseType
    		INTEGER,
    	    wfOspfLsdbAdvLen
    		INTEGER,
    	    wfOspfLsdbAdv
    		OCTET STRING
        }

    wfOspfLsdbAreaId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The 32 bit identifier of the Area from which the LSA
                was received.'
                         REFERENCE
                'OSPF Version 2, Appendix C.2 Area parameters'"
        ::= { wfOspfLsdbEntry 1 }

    wfOspfLsdbType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    routerlink(1),
    		    networklink(2),
    		    summarylink(3),
    		    assummarylink(4),
    		    asexternallink(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The type of the link state advertisement.  Each link
                state type has a separate advertisement format.'
                         REFERENCE
                'OSPF Version 2, Appendix A.4.1 The Link State
                Advertisement header'
                       stubLink   (0),
                         routerLink (1),
                         networkLink (2),
                         summaryLink (3),
                         asSummaryLink (4),
                         asExternalLink (5)"
        ::= { wfOspfLsdbEntry 2 }

    wfOspfLsdbLSID OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The Link State ID is an LS Type Specific field
                containing either a Router ID or an IP Address; it
                identifies the piece of the routing domain that is
                being described by the advertisement.'
                         REFERENCE
                'OSPF Version 2, Section 12.1.4 Link State ID'"
        ::= { wfOspfLsdbEntry 3 }

    wfOspfLsdbRouterId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The 32 bit number that uniquely identifies the
                originating router in the Autonomous System.'
                         REFERENCE
                'OSPF Version 2, Appendix C.1 Global parameters'"
        ::= { wfOspfLsdbEntry 4 }

    wfOspfLsdbSequence OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "--  Note that the OSPF Sequence Number is a 32 bit signed
                --  integer.  It starts with the value '80000001'h,
                --  or -'7FFFFFFF'h, and increments until '7FFFFFFF'h
                --  Thus, a typical sequence number will be very negative.
                       'The sequence number field is a signed 32-bit integer.
                       It is used to detect old and duplicate link state
                       advertisements.  The space of sequence numbers is
                       linearly ordered.  The larger the sequence number the
                       more recent the advertisement.'
                    REFERENCE
                       'OSPF Version 2, Section 12.1.6 LS sequence number'"
        ::= { wfOspfLsdbEntry 5 }

    wfOspfLsdbAge OBJECT-TYPE
        SYNTAX	INTEGER(0..3600)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This field is the age of the link state advertisement
                in seconds.'
                      (OSPF_LSDBMINAGE = 0)
                         REFERENCE
                'OSPF Version 2, Section 12.1.1 LS age'"
        ::= { wfOspfLsdbEntry 6 }

    wfOspfLsdbChecksum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This field is the checksum of the complete contents of
                the advertisement, excepting the age field.  The age
                field is excepted so that an advertisement's age can be
                incremented without updating the checksum.  The
                checksum used is the same that is used for ISO
                connectionless datagrams; it is commonly referred to as
                the Fletcher checksum.'
                         REFERENCE
                'OSPF Version 2, Section 12.1.7 LS checksum'"
        ::= { wfOspfLsdbEntry 7 }

    wfOspfLsdbMetric OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Metric from LSA, if applicable.'"
        ::= { wfOspfLsdbEntry 8 }

    wfOspfLsdbAseForwardAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'If an ASE, the forwarding address from the LSA.'"
        ::= { wfOspfLsdbEntry 9 }

    wfOspfLsdbAseTag OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'If an ASE, the External Route Tag from the LSA.'"
        ::= { wfOspfLsdbEntry 10 }

    wfOspfLsdbAseType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    type1(1),
    		    type2(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'If an ASE, the external metric type from the LSA.'"
        ::= { wfOspfLsdbEntry 11 }

    wfOspfLsdbAdvLen OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The length of entire Link State Advertisement, including its
                header.'
                         REFERENCE
                'OSPF Version 2, Section 12 Link State Advertisements'"
        ::= { wfOspfLsdbEntry 12 }

    wfOspfLsdbAdv OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This field is the actual OSPF advertisement in hexadecimal
                 format' "
        ::= { wfOspfLsdbEntry 13 }

    wfOspfBackupLsdbTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOspfBackupLsdbEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "--  OSPF Backup Link State Database

                --      The Backup Link State Database contains the Link State
                --      Advertisements from throughout the areas that the
                --      device is attached to.
                       'The OSPF Process's Links State Database.'
                    REFERENCE
                       'OSPF Version 2, Section 12 Link State Advertisements'"
        ::= { wfOspfGroup 10 }

    wfOspfBackupLsdbEntry OBJECT-TYPE
        SYNTAX	WfOspfBackupLsdbEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "'A single Link State Advertisement.'"
        INDEX	{ wfOspfBackupLsdbAreaId,
    		  wfOspfBackupLsdbType,
    		  wfOspfBackupLsdbLSID,
    		  wfOspfBackupLsdbRouterId }
        ::= { wfOspfBackupLsdbTable 1 }

    WfOspfBackupLsdbEntry ::= SEQUENCE {
    	    wfOspfBackupLsdbAreaId
    		IpAddress,
    	    wfOspfBackupLsdbType
    		INTEGER,
    	    wfOspfBackupLsdbLSID
    		IpAddress,
    	    wfOspfBackupLsdbRouterId
    		IpAddress,
    	    wfOspfBackupLsdbSequence
    		INTEGER,
    	    wfOspfBackupLsdbAge
    		INTEGER,
    	    wfOspfBackupLsdbChecksum
    		INTEGER,
    	    wfOspfBackupLsdbMetric
    		INTEGER,
    	    wfOspfBackupLsdbAseForwardAddr
    		IpAddress,
    	    wfOspfBackupLsdbAseTag
    		Gauge,
    	    wfOspfBackupLsdbAseType
    		INTEGER,
    	    wfOspfBackupLsdbAdvLen
    		INTEGER,
    	    wfOspfBackupLsdbAdv
    		OCTET STRING
        }

    wfOspfBackupLsdbAreaId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The 32 bit identifier of the Area from which the LSA
                was received.'
                         REFERENCE
                'OSPF Version 2, Appendix C.2 Area parameters'"
        ::= { wfOspfBackupLsdbEntry 1 }

    wfOspfBackupLsdbType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    routerlink(1),
    		    networklink(2),
    		    summarylink(3),
    		    assummarylink(4),
    		    asexternallink(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The type of the link state advertisement.  Each link
                state type has a separate advertisement format.'
                         REFERENCE
                'OSPF Version 2, Appendix A.4.1 The Link State
                Advertisement header'
                       stubLink   (0),
                         routerLink (1),
                         networkLink (2),
                         summaryLink (3),
                         asSummaryLink (4),
                         asExternalLink (5)"
        ::= { wfOspfBackupLsdbEntry 2 }

    wfOspfBackupLsdbLSID OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The Link State ID is an LS Type Specific field
                containing either a Router ID or an IP Address; it
                identifies the piece of the routing domain that is
                being described by the advertisement.'
                         REFERENCE
                'OSPF Version 2, Section 12.1.4 Link State ID'"
        ::= { wfOspfBackupLsdbEntry 3 }

    wfOspfBackupLsdbRouterId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The 32 bit number that uniquely identifies the
                originating router in the Autonomous System.'
                         REFERENCE
                'OSPF Version 2, Appendix C.1 Global parameters'"
        ::= { wfOspfBackupLsdbEntry 4 }

    wfOspfBackupLsdbSequence OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "--  Note that the OSPF Sequence Number is a 32 bit signed
                --  integer.  It starts with the value '80000001'h,
                --  or -'7FFFFFFF'h, and increments until '7FFFFFFF'h
                --  Thus, a typical sequence number will be very negative.
                       'The sequence number field is a signed 32-bit integer.
                       It is used to detect old and duplicate link state
                       advertisements.  The space of sequence numbers is
                       linearly ordered.  The larger the sequence number the
                       more recent the advertisement.'
                    REFERENCE
                       'OSPF Version 2, Section 12.1.6 LS sequence number'"
        ::= { wfOspfBackupLsdbEntry 5 }

    wfOspfBackupLsdbAge OBJECT-TYPE
        SYNTAX	INTEGER(0..3600)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This field is the age of the link state advertisement
                in seconds.'
                      (OSPF_LSDBMINAGE = 0)
                         REFERENCE
                'OSPF Version 2, Section 12.1.1 LS age'"
        ::= { wfOspfBackupLsdbEntry 6 }

    wfOspfBackupLsdbChecksum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This field is the checksum of the complete contents of
                the advertisement, excepting the age field.  The age
                field is excepted so that an advertisement's age can be
                incremented without updating the checksum.  The
                checksum used is the same that is used for ISO
                connectionless datagrams; it is commonly referred to as
                the Fletcher checksum.'
                         REFERENCE
                'OSPF Version 2, Section 12.1.7 LS checksum'"
        ::= { wfOspfBackupLsdbEntry 7 }

    wfOspfBackupLsdbMetric OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Metric from LSA, if applicable.'"
        ::= { wfOspfBackupLsdbEntry 8 }

    wfOspfBackupLsdbAseForwardAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'If an ASE, the forwarding address from the LSA.'"
        ::= { wfOspfBackupLsdbEntry 9 }

    wfOspfBackupLsdbAseTag OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'If an ASE, the External Route Tag from the LSA.'"
        ::= { wfOspfBackupLsdbEntry 10 }

    wfOspfBackupLsdbAseType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    type1(1),
    		    type2(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'If an ASE, the external metric type from the LSA.'"
        ::= { wfOspfBackupLsdbEntry 11 }

    wfOspfBackupLsdbAdvLen OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The length of entire Link State Advertisement, including its
                header.'
                         REFERENCE
                'OSPF Version 2, Section 12 Link State Advertisements'"
        ::= { wfOspfBackupLsdbEntry 12 }

    wfOspfBackupLsdbAdv OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This field is the actual OSPF advertisement in hexadecimal
                 format'"
        ::= { wfOspfBackupLsdbEntry 13 }

    wfOspfAreaRangeTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOspfAreaRangeEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "'A range if IP addresses specified by an IP address/IP
                network mask pair.  For example, class B address range
                of X.X.X.X with a network mask of 255.255.0.0 includes
                all IP addresses from X.X.0.0 to X.X.255.255'
                         REFERENCE
                'OSPF Version 2, Appendix C.2  Area parameters'"
        ::= { wfOspfGroup 4 }

    wfOspfAreaRangeEntry OBJECT-TYPE
        SYNTAX	WfOspfAreaRangeEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                ""
        INDEX	{ wfOspfAreaRangeAreaID,
    		  wfOspfAreaRangeNet }
        ::= { wfOspfAreaRangeTable 1 }

    WfOspfAreaRangeEntry ::= SEQUENCE {
    	    wfOspfAreaRangeDelete
    		INTEGER,
    	    wfOspfAreaRangeDisable
    		INTEGER,
    	    wfOspfAreaRangeState
    		INTEGER,
    	    wfOspfAreaRangeAreaID
    		IpAddress,
    	    wfOspfAreaRangeNet
    		IpAddress,
    	    wfOspfAreaRangeMask
    		IpAddress,
    	    wfOspfAreaRangeStatus
    		INTEGER,
    	    wfOspfAreaRangeMetric
    		INTEGER
        }

    wfOspfAreaRangeDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value determines if an Area Range has been
                configured for the OSPF router."
        DEFVAL	{ created }
        ::= { wfOspfAreaRangeEntry 1 }

    wfOspfAreaRangeDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This variable displays the status of
                the entry.  Setting it to 'DISBALED' has the effect of
                rendering it inoperative.  The internal effect (row
                removal) is implementation dependent.'"
        DEFVAL	{ enabled }
        ::= { wfOspfAreaRangeEntry 2 }

    wfOspfAreaRangeState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The state of the OSPF Area Range."
        DEFVAL	{ down }
        ::= { wfOspfAreaRangeEntry 3 }

    wfOspfAreaRangeAreaID OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The Area the Address Range is to be found within.'
                         REFERENCE
                'OSPF Version 2, Appendix C.2 Area parameters'"
        ::= { wfOspfAreaRangeEntry 4 }

    wfOspfAreaRangeNet OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The IP Address of the Net or Subnet indicated by the
                range.'
                         REFERENCE
                'OSPF Version 2, Appendix C.2 Area parameters'"
        ::= { wfOspfAreaRangeEntry 5 }

    wfOspfAreaRangeMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The Subnet Mask that pertains to the Net or Subnet.'
                         REFERENCE
                'OSPF Version 2, Appendix C.2 Area parameters'"
        ::= { wfOspfAreaRangeEntry 6 }

    wfOspfAreaRangeStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    advertise(1),
    		    donotadvertise(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'Set to either Advertise or DoNotAdvertise.  Routing
                 information is condensed at area boundaries.  External to
                 the area, at most a single route is advertised for each
                 address range.  The route is advertised if and only if the
                 addre range's Status is set to Advertise.  Unadvertised
                 ranges allow the existence of certain networks to be
                 intentionally hidden from other areas.  Status is set to
                 Advertise by default.'
                         REFERENCE
                    'OSPF Version 2, Appendix C.2'"
        DEFVAL	{ advertise }
        ::= { wfOspfAreaRangeEntry 7 }

    wfOspfAreaRangeMetric OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The metric to advertise into other areas as the distance
                 from the OSPF router to any network in the range.  The
                 default of 0 means to use the value calculated by OSPF.'
                         REFERENCE
                    'OSPF Version 2, Appendix C.2'"
        ::= { wfOspfAreaRangeEntry 8 }

    wfOspfIfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOspfIfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "--  OSPF Interface Table

                --      The OSPF Interface Table augments the ifTable with OSPF
                --      specific information.


                       'The OSPF Interface Table describes the interfaces from
                       the viewpoint of OSPF.'
                    REFERENCE
                       'OSPF Version 2, Appendix C.3  Router interface
                       parameters'"
        ::= { wfOspfGroup 5 }

    wfOspfIfEntry OBJECT-TYPE
        SYNTAX	WfOspfIfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "'The OSPF Interface Entry describes one interface from
                the viewpoint of OSPF.'"
        INDEX	{ wfOspfIfIpAddress,
    		  wfOspfAddressLessIf }
        ::= { wfOspfIfTable 1 }

    WfOspfIfEntry ::= SEQUENCE {
    	    wfOspfIfDelete
    		INTEGER,
    	    wfOspfIfDisable
    		INTEGER,
    	    wfOspfIfState
    		INTEGER,
    	    wfOspfIfIpAddress
    		IpAddress,
    	    wfOspfAddressLessIf
    		INTEGER,
    	    wfOspfIfAreaId
    		IpAddress,
    	    wfOspfIfType
    		INTEGER,
    	    wfOspfIfRtrPriority
    		INTEGER,
    	    wfOspfIfTransitDelay
    		INTEGER,
    	    wfOspfIfRetransInterval
    		INTEGER,
    	    wfOspfIfHelloInterval
    		INTEGER,
    	    wfOspfIfRtrDeadInterval
    		INTEGER,
    	    wfOspfIfPollInterval
    		INTEGER,
    	    wfOspfIfDesignatedRouter
    		IpAddress,
    	    wfOspfIfBackupDesignatedRouter
    		IpAddress,
    	    wfOspfIfMetricCost
    		INTEGER,
    	    wfOspfIfAuthKey
    		OCTET STRING,
    	    wfOspfIfTxHellos
    		Counter,
    	    wfOspfIfTxDBDescripts
    		Counter,
    	    wfOspfIfTxLinkStateReqs
    		Counter,
    	    wfOspfIfTxLinkStateUpds
    		Counter,
    	    wfOspfIfTxLinkStateAcks
    		Counter,
    	    wfOspfIfRxHellos
    		Counter,
    	    wfOspfIfRxDBDescripts
    		Counter,
    	    wfOspfIfRxLinkStateReqs
    		Counter,
    	    wfOspfIfRxLinkStateUpds
    		Counter,
    	    wfOspfIfRxLinkStateAcks
    		Counter,
    	    wfOspfIfDrops
    		Counter,
    	    wfOspfMtuSize
    		INTEGER
        }

    wfOspfIfDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This variable determines in an OSPF Interface has been
                configured on the router."
        DEFVAL	{ created }
        ::= { wfOspfIfEntry 1 }

    wfOspfIfDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The OSPF interface's administrative status.  The value
                'enabled' denotes that neighbor relationships may be
                formed on the interface, and the interface will be
                advertised as an internal route to some area.  The
                value 'disabled' denotes that the interface is external
                to OSPF.'"
        DEFVAL	{ enabled }
        ::= { wfOspfIfEntry 2 }

    wfOspfIfState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    down(1),
    		    loopback(2),
    		    waiting(3),
    		    pointtopoint(4),
    		    designatedrouter(5),
    		    backupdesignatedrouter(6),
    		    otherdesignatedrouter(7)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The OSPF Interface State.'
                         down (1),
                         loopback (2),
                         waiting (3),
                         pointToPoint (4),
                         designatedRouter (5),
                         backupDesignatedRouter (6),
                         otherDesignatedRouter (7)"
        DEFVAL	{ down }
        ::= { wfOspfIfEntry 3 }

    wfOspfIfIpAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The IP address of this OSPF interface.'"
        ::= { wfOspfIfEntry 4 }

    wfOspfAddressLessIf OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'For the purpose of easing the instancing of addressed
                and addressless interfaces; This variable takes the
                value 0 on interfaces with IP Addresses, and the
                corresponding value of ifIndex for interfaces having no
                IP Address.'"
        ::= { wfOspfIfEntry 5 }

    wfOspfIfAreaId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'A 32-bit integer uniquely identifying the area to
                which the interface connects.  Area ID 0.0.0.0 is used
                for the OSPF backbone.'
                default { '00000000'H }    -- 0.0.0.0"
        ::= { wfOspfIfEntry 6 }

    wfOspfIfType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    broadcast(1),
    		    nbma(2),
    		    pointtopoint(3),
    		    pmp(4),
    		    ietf(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The OSPF interface type.

                By way of a default, this field may be intuited from
                the corresponding value of ifType.  Broadcast LANs,
                such as Ethernet and IEEE 802.5, take the value
                'broadcast', X.25, Frame Relay, and similar
                technologies take the value 'nbma', and links that are
                definitively point to point take the value
                'pointToPoint'.'

                         broadcast (1),
                         nbma (2),
                         pointToPoint (3)
                       point to multipoint (4)"
        ::= { wfOspfIfEntry 7 }

    wfOspfIfRtrPriority OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The priority of this interface.  Used in multi-access
                networks, this field is used in the designated router
                election algorithm.  The value 0 signifies that the
                router is not eligible to become the designated router
                on this particular network.  In the event of a tie in
                this value, routers will use their router id as a tie
                breaker.'"
        DEFVAL	{ 1 }
        ::= { wfOspfIfEntry 8 }

    wfOspfIfTransitDelay OBJECT-TYPE
        SYNTAX	INTEGER(1..3600)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The estimated number of seconds it takes to transmit a
                link- state update packet over this interface.'"
        DEFVAL	{ 1 }
        ::= { wfOspfIfEntry 9 }

    wfOspfIfRetransInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..3600)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The number of seconds between link-state advertisement
                retransmissions, for adjacencies belonging to this
                interface.  This value is also used when retransmitting
                database description and link-state request packets.'"
        DEFVAL	{ 5 }
        ::= { wfOspfIfEntry 10 }

    wfOspfIfHelloInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The length of time, in seconds, between the Hello
                packets that the router sends on the interface.  This
                value must be the same for all routers attached to a
                common network.'"
        DEFVAL	{ 10 }
        ::= { wfOspfIfEntry 11 }

    wfOspfIfRtrDeadInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The number of seconds that a router's Hello packets
                have not been seen before it's neighbors declare the
                router down.  This should be some multiple of the Hello
                interval.  This value must be the same for all routers
                attached to a common network.'"
        DEFVAL	{ 40 }
        ::= { wfOspfIfEntry 12 }

    wfOspfIfPollInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The larger time interval, in seconds, between the
                Hello packets sent to an inactive non-broadcast multi-
                access neighbor.'"
        DEFVAL	{ 120 }
        ::= { wfOspfIfEntry 13 }

    wfOspfIfDesignatedRouter OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The IP Address of the Designated Router.'
                default { '00000000'H }    -- 0.0.0.0"
        ::= { wfOspfIfEntry 14 }

    wfOspfIfBackupDesignatedRouter OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The IP Address of the Backup Designated Router.'
                default { '00000000'H }    -- 0.0.0.0"
        ::= { wfOspfIfEntry 15 }

    wfOspfIfMetricCost OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The cost of using this type of service on this
                interface.  The default value of the TOS 0 Metric is
                10^8 / ifSpeed.

                The value FFFF is distinguished to mean 'no route via
                this TOS'.'"
        DEFVAL	{ 1 }
        ::= { wfOspfIfEntry 16 }

    wfOspfIfAuthKey OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The Authentication Key.  If the Area's Authorization
                Type is simplePassword, and the key length is shorter
                than 8 octets, the agent will left adjust and zero fill
                to 8 octets.

                When read, ospfIfAuthKey always returns an Octet String
                of length zero.'

                default  { '0000000000000000'H }    -- 0.0.0.0.0.0.0.0

                         REFERENCE
                'OSPF Version 2, Section 9 The Interface Data
                Structure'"
        ::= { wfOspfIfEntry 17 }

    wfOspfIfTxHellos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF Hello packets transmitted."
        ::= { wfOspfIfEntry 18 }

    wfOspfIfTxDBDescripts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF DataBase Description packets transmitted."
        ::= { wfOspfIfEntry 19 }

    wfOspfIfTxLinkStateReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF Link State Request packets transmitted."
        ::= { wfOspfIfEntry 20 }

    wfOspfIfTxLinkStateUpds OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF Link State Update packets transmitted."
        ::= { wfOspfIfEntry 21 }

    wfOspfIfTxLinkStateAcks OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF Link States Acknowledgements transmitted."
        ::= { wfOspfIfEntry 22 }

    wfOspfIfRxHellos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF Hello packets received."
        ::= { wfOspfIfEntry 23 }

    wfOspfIfRxDBDescripts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF DataBase Description packets received."
        ::= { wfOspfIfEntry 24 }

    wfOspfIfRxLinkStateReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF Link State Requests received."
        ::= { wfOspfIfEntry 25 }

    wfOspfIfRxLinkStateUpds OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF Link State Updates received."
        ::= { wfOspfIfEntry 26 }

    wfOspfIfRxLinkStateAcks OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF Link State Acknowledgements received."
        ::= { wfOspfIfEntry 27 }

    wfOspfIfDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF packets dropped because of invalid information
                in the packet."
        ::= { wfOspfIfEntry 28 }

    wfOspfMtuSize OBJECT-TYPE
        SYNTAX	INTEGER(1..10000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configure MTU size per OSPF interface
                     This parameter has the following values/meanings:

                  1 - Use the MTU specified by IP
                  2 - Use the MTU of ethernet, regardless of what IP
                      says
                  > 2 - Use this value as the actual MTU.
                        If the value is smaller than what OSPF needs as
                        a minimum then the mtu specified by IP is used.
                        For example, 3 would never be used as an MTU."
        DEFVAL	{ 1 }
        ::= { wfOspfIfEntry 29 }

    wfOspfVirtIfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOspfVirtIfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "--  OSPF Virtual Interface Table

                --      The Virtual Interface Table describes the virtual
                --      links that the OSPF Process is configured to
                --      carry on.


                       'Information about this router's virtual interfaces.'
                    REFERENCE
                       'OSPF Version 2, Appendix C.4  Virtual link parameters'"
        ::= { wfOspfGroup 6 }

    wfOspfVirtIfEntry OBJECT-TYPE
        SYNTAX	WfOspfVirtIfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "'Information about a single Virtual Interface.'"
        INDEX	{ wfOspfVirtIfAreaID,
    		  wfOspfVirtIfNeighbor }
        ::= { wfOspfVirtIfTable 1 }

    WfOspfVirtIfEntry ::= SEQUENCE {
    	    wfOspfVirtIfDelete
    		INTEGER,
    	    wfOspfVirtIfDisable
    		INTEGER,
    	    wfOspfVirtIfState
    		INTEGER,
    	    wfOspfVirtIfAreaID
    		IpAddress,
    	    wfOspfVirtIfNeighbor
    		IpAddress,
    	    wfOspfVirtIfTransitDelay
    		INTEGER,
    	    wfOspfVirtIfRetransInterval
    		INTEGER,
    	    wfOspfVirtIfHelloInterval
    		INTEGER,
    	    wfOspfVirtIfRtrDeadInterval
    		INTEGER,
    	    wfOspfVirtIfAuthKey
    		OCTET STRING,
    	    wfOspfVirtIfTxHellos
    		Counter,
    	    wfOspfVirtIfTxDBDescripts
    		Counter,
    	    wfOspfVirtIfTxLinkStateReqs
    		Counter,
    	    wfOspfVirtIfTxLinkStateUpds
    		Counter,
    	    wfOspfVirtIfTxLinkStateAcks
    		Counter,
    	    wfOspfVirtIfRxHellos
    		Counter,
    	    wfOspfVirtIfRxDBDescripts
    		Counter,
    	    wfOspfVirtIfRxLinkStateReqs
    		Counter,
    	    wfOspfVirtIfRxLinkStateUpds
    		Counter,
    	    wfOspfVirtIfRxLinkStateAcks
    		Counter,
    	    wfOspfVirtIfDrops
    		Counter
        }

    wfOspfVirtIfDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                ""
        DEFVAL	{ created }
        ::= { wfOspfVirtIfEntry 1 }

    wfOspfVirtIfDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This variable displays the validity or invalidity of
                the entry.  Setting it to 'invalid' has the effect of
                rendering it inoperative.  The internal effect (row
                removal) is implementation dependent.'"
        DEFVAL	{ enabled }
        ::= { wfOspfVirtIfEntry 2 }

    wfOspfVirtIfState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    down(1),
    		    pointtopoint(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'OSPF virtual interface states.'
                         down (1),               -- these use the same encoding
                         pointToPoint (4)        -- as the ospfIfTable"
        DEFVAL	{ down }
        ::= { wfOspfVirtIfEntry 3 }

    wfOspfVirtIfAreaID OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The Transit Area that the Virtual Link traverses.  By
                definition, this is not 0.0.0.0'"
        ::= { wfOspfVirtIfEntry 4 }

    wfOspfVirtIfNeighbor OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The Router ID of the Virtual Neighbor.'"
        ::= { wfOspfVirtIfEntry 5 }

    wfOspfVirtIfTransitDelay OBJECT-TYPE
        SYNTAX	INTEGER(1..3600)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The estimated number of seconds it takes to transmit a
                link- state update packet over this interface.'"
        DEFVAL	{ 1 }
        ::= { wfOspfVirtIfEntry 6 }

    wfOspfVirtIfRetransInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..3600)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The number of seconds between link-state advertisement
                retransmissions, for adjacencies belonging to this
                interface.  This value is also used when retransmitting
                database description and link-state request packets.
                This value should be well over the expected round-trip
                time.'"
        DEFVAL	{ 5 }
        ::= { wfOspfVirtIfEntry 7 }

    wfOspfVirtIfHelloInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The length of time, in seconds, between the Hello
                packets that the router sends on the interface.  This
                value must be the same for the virtual neighbor.'"
        DEFVAL	{ 15 }
        ::= { wfOspfVirtIfEntry 8 }

    wfOspfVirtIfRtrDeadInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The number of seconds that a router's Hello packets
                have not been seen before it's neighbors declare the
                router down.  This should be some multiple of the Hello
                interval.  This value must be the same for the virtual
                neighbor.'"
        DEFVAL	{ 60 }
        ::= { wfOspfVirtIfEntry 9 }

    wfOspfVirtIfAuthKey OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'If Authentication Type is simplePassword, the device
                will left adjust and zero fill to 8 octets.

                When read, ospfVifAuthKey always returns a string of
                length zero.'
                         REFERENCE
                'OSPF Version 2, Section 9 The Interface Data
                Structure'"
        ::= { wfOspfVirtIfEntry 10 }

    wfOspfVirtIfTxHellos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF Hello packets transmitted on
                Virtual Interfaces."
        ::= { wfOspfVirtIfEntry 11 }

    wfOspfVirtIfTxDBDescripts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF DataBase Description packets transmitted
                on Virtual Interfaces."
        ::= { wfOspfVirtIfEntry 12 }

    wfOspfVirtIfTxLinkStateReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF Link State Request packets transmitted
                on Virtual Interfaces."
        ::= { wfOspfVirtIfEntry 13 }

    wfOspfVirtIfTxLinkStateUpds OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF Link State Update packets transmitted
                on Virtual Interfaces."
        ::= { wfOspfVirtIfEntry 14 }

    wfOspfVirtIfTxLinkStateAcks OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF Link State Acknowledgement packets
                transmitted on Virtual Interfaces."
        ::= { wfOspfVirtIfEntry 15 }

    wfOspfVirtIfRxHellos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF Hello packets received on
                Virtual Interfaces."
        ::= { wfOspfVirtIfEntry 16 }

    wfOspfVirtIfRxDBDescripts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF DataBase Description packets received
                on Virtual Interfaces."
        ::= { wfOspfVirtIfEntry 17 }

    wfOspfVirtIfRxLinkStateReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF Link State Request packets recieved
                on Virtual Interfaces."
        ::= { wfOspfVirtIfEntry 18 }

    wfOspfVirtIfRxLinkStateUpds OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF Link State Update packets received
                on Virtual Interfaces."
        ::= { wfOspfVirtIfEntry 19 }

    wfOspfVirtIfRxLinkStateAcks OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF Link State Acknowledgement packets
                received on Virtual Interfaces."
        ::= { wfOspfVirtIfEntry 20 }

    wfOspfVirtIfDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of OSPF packets dropped on
                Virtual Interfaces."
        ::= { wfOspfVirtIfEntry 21 }

    wfOspfNbrTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOspfNbrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "--  OSPF Neighbor Table

                --      The OSPF Neighbor Table describes all neighbors in
                --      the locality of the subject router.


                       'A table of non-virtual neighbor information.'
                    REFERENCE
                       'OSPF Version 2, Section 10 The Neighbor Data
                       Structure'"
        ::= { wfOspfGroup 7 }

    wfOspfNbrEntry OBJECT-TYPE
        SYNTAX	WfOspfNbrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "'The information regarding a single neighbor.'
                         REFERENCE
                'OSPF Version 2, Section 10 The Neighbor Data
                Structure'"
        INDEX	{ wfOspfNbrIpAddr,
    		  wfOspfNbrAddressLessIndex }
        ::= { wfOspfNbrTable 1 }

    WfOspfNbrEntry ::= SEQUENCE {
    	    wfOspfNbrDelete
    		INTEGER,
    	    wfOspfNbrDisable
    		INTEGER,
    	    wfOspfNbrState
    		INTEGER,
    	    wfOspfNbrIpAddr
    		IpAddress,
    	    wfOspfNbrIfAddr
    		IpAddress,
    	    wfOspfNbrAddressLessIndex
    		INTEGER,
    	    wfOspfNbrRtrId
    		IpAddress,
    	    wfOspfNbrOptions
    		INTEGER,
    	    wfOspfNbrPriority
    		INTEGER,
    	    wfOspfNbrEvents
    		Counter,
    	    wfOspfNbrLSRetransQLen
    		Gauge,
    	    wfOspfCurNbrPriority
    		INTEGER
        }

    wfOspfNbrDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This variable indicates the existence of a static
                OSPF neighbor."
        DEFVAL	{ created }
        ::= { wfOspfNbrEntry 1 }

    wfOspfNbrDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This variable displays the status of
                the entry.  Setting it to 'DISABLED' has the effect of
                rendering it inoperative.  The internal effect (row
                removal) is implementation dependent.'"
        DEFVAL	{ enabled }
        ::= { wfOspfNbrEntry 2 }

    wfOspfNbrState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    down(1),
    		    attempt(2),
    		    init(3),
    		    twoway(4),
    		    exchangstart(5),
    		    exchange(6),
    		    loading(7),
    		    full(8)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The State of the relationship with this Neighbor.'
                         REFERENCE
                'OSPF Version 2, Section 10.1 Neighbor States'
                         down (1),
                         attempt (2),
                         init (3),
                         twoWay (4),
                         exchangeStart (5),
                         exchange (6),
                         loading (7),
                         full (8)"
        DEFVAL	{ down }
        ::= { wfOspfNbrEntry 3 }

    wfOspfNbrIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The IP address of this neighbor.'"
        ::= { wfOspfNbrEntry 4 }

    wfOspfNbrIfAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The Interface IP address for this neighbor.'"
        ::= { wfOspfNbrEntry 5 }

    wfOspfNbrAddressLessIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "' On an interface having an IP Address, zero.  On
                addressless interfaces, the corresponding value of
                ifIndex in the Internet Standard MIB.  On row creation,
                this can be derived from the instance.'"
        ::= { wfOspfNbrEntry 6 }

    wfOspfNbrRtrId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'A 32-bit integer (represented as a type IpAddress)
                uniquely identifying the neighboring router in the
                Autonomous System.'
                default { '00000000'H }    -- 0.0.0.0"
        ::= { wfOspfNbrEntry 7 }

    wfOspfNbrOptions OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'A Bit Mask corresponding to the neighbor's options
                field.

                Bit 0, if set, indicates that the area accepts and
                operates on external information; if zero, it is a stub
                area.

                Bit 1, if set, indicates that the system will operate
                on Type of Service metrics other than TOS 0.  If zero,
                the neighbor will ignore all metrics except the TOS 0
                metric.'
                         REFERENCE
                'OSPF Version 2, Section 12.1.2 Options'"
        ::= { wfOspfNbrEntry 8 }

    wfOspfNbrPriority OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The priority of this neighbor in the designated router
                election algorithm.  The value 0 signifies that the
                neighbor is not eligible to become the designated
                router on this particular network.'
                This is the user configurable/changeable neighbor's priority"
        DEFVAL	{ 1 }
        ::= { wfOspfNbrEntry 9 }

    wfOspfNbrEvents OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The number of times this neighbor relationship has
                changed state, or an error has occurred.'"
        ::= { wfOspfNbrEntry 10 }

    wfOspfNbrLSRetransQLen OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The current length of the retransmission queue.'"
        ::= { wfOspfNbrEntry 11 }

    wfOspfCurNbrPriority OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This value represents the priority of the neighbor as
                indicated in received Hello packets.  In most cases, this
                will be the same as wfOspfCfgNbrPriority.  If they are
                different, it indicates a misconfiguration"
        ::= { wfOspfNbrEntry 12 }

    wfOspfVirtNbrTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOspfVirtNbrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "--  WFOSPF Virtual Neighbor Table

                --      This table describes all virtual neighbors.
                --      Since Virtual Links are configured in the
                --      virtual interface table, this table is read-only.

                       'A table of virtual neighbor information.'
                    REFERENCE
                       'OSPF Version 2, '"
        ::= { wfOspfGroup 8 }

    wfOspfVirtNbrEntry OBJECT-TYPE
        SYNTAX	WfOspfVirtNbrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "'Virtual neighbor information.'
                         REFERENCE
                'OSPF Version 2, '"
        INDEX	{ wfOspfVirtNbrArea,
    		  wfOspfVirtNbrRtrId }
        ::= { wfOspfVirtNbrTable 1 }

    WfOspfVirtNbrEntry ::= SEQUENCE {
    	    wfOspfVirtNbrArea
    		IpAddress,
    	    wfOspfVirtNbrRtrId
    		IpAddress,
    	    wfOspfVirtNbrIpAddr
    		IpAddress,
    	    wfOspfVirtNbrOptions
    		INTEGER,
    	    wfOspfVirtNbrState
    		INTEGER,
    	    wfOspfVirtNbrEvents
    		Counter,
    	    wfOspfVirtNbrLSRetransQLen
    		Gauge
        }

    wfOspfVirtNbrArea OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The Transit Area Identifier.'"
        ::= { wfOspfVirtNbrEntry 1 }

    wfOspfVirtNbrRtrId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'A 32-bit integer uniquely identifying the neighboring
                router in the Autonomous System.'"
        ::= { wfOspfVirtNbrEntry 2 }

    wfOspfVirtNbrIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The IP address this Virtual Neighbor is using.'"
        ::= { wfOspfVirtNbrEntry 3 }

    wfOspfVirtNbrOptions OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'A bit map corresponding to the neighbor's options
                field.  Thus, Bit 1, if set, indicates that the
                neighbor supports Type of Service Routing; if zero, no
                metrics other than TOS 0 are in use by the neighbor.'"
        ::= { wfOspfVirtNbrEntry 4 }

    wfOspfVirtNbrState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    down(1),
    		    attempt(2),
    		    init(3),
    		    twoway(4),
    		    exchangstart(5),
    		    exchange(6),
    		    loading(7),
    		    full(8)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The state of the Virtual Neighbor Relationship.'
                         down (1),
                         attempt (2),
                         init (3),
                         twoWay (4),
                         exchangeStart (5),
                         exchange (6),
                         loading (7),
                         full (8)"
        DEFVAL	{ down }
        ::= { wfOspfVirtNbrEntry 5 }

    wfOspfVirtNbrEvents OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The number of times this virtual link has changed its
                state, or an error has occurred.'"
        ::= { wfOspfVirtNbrEntry 6 }

    wfOspfVirtNbrLSRetransQLen OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The current length of the retransmission queue.'"
        ::= { wfOspfVirtNbrEntry 7 }

    wfOspfDynNbrTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfOspfDynNbrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "--  OSPF Dynamic Neighbor Table

                --      The OSPF Dynamic Neighbor Table describes all neighbors in
                --      the locality of the subject router learned during operation.


                       'A table of non-virtual neighbor information.'
                    REFERENCE
                       'OSPF Version 2, Section 10 The Neighbor Data
                       Structure'"
        ::= { wfOspfGroup 9 }

    wfOspfDynNbrEntry OBJECT-TYPE
        SYNTAX	WfOspfDynNbrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "'The information regarding a single neighbor.'
                         REFERENCE
                'OSPF Version 2, Section 10 The Neighbor Data
                Structure'"
        INDEX	{ wfOspfDynNbrIpAddr,
    		  wfOspfDynNbrAddressLessIndex }
        ::= { wfOspfDynNbrTable 1 }

    WfOspfDynNbrEntry ::= SEQUENCE {
    	    wfOspfDynNbrState
    		INTEGER,
    	    wfOspfDynNbrIpAddr
    		IpAddress,
    	    wfOspfDynNbrIfAddr
    		IpAddress,
    	    wfOspfDynNbrAddressLessIndex
    		INTEGER,
    	    wfOspfDynNbrRtrId
    		IpAddress,
    	    wfOspfDynNbrOptions
    		INTEGER,
    	    wfOspfDynNbrPriority
    		INTEGER,
    	    wfOspfDynNbrEvents
    		Counter,
    	    wfOspfDynNbrLSRetransQLen
    		Gauge
        }

    wfOspfDynNbrState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    down(1),
    		    attempt(2),
    		    init(3),
    		    twoway(4),
    		    exchangstart(5),
    		    exchange(6),
    		    loading(7),
    		    full(8)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The State of the relationship with this Neighbor.'
                         REFERENCE
                'OSPF Version 2, Section 10.1 Neighbor States'
                         down (1),
                         attempt (2),
                         init (3),
                         twoWay (4),
                         exchangeStart (5),
                         exchange (6),
                         loading (7),
                         full (8)"
        DEFVAL	{ down }
        ::= { wfOspfDynNbrEntry 1 }

    wfOspfDynNbrIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The IP address of this neighbor.'"
        ::= { wfOspfDynNbrEntry 2 }

    wfOspfDynNbrIfAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The Interface IP address for this neighbor.'"
        ::= { wfOspfDynNbrEntry 3 }

    wfOspfDynNbrAddressLessIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "' On an interface having an IP Address, zero.  On
                addressless interfaces, the corresponding value of
                ifIndex in the Internet Standard MIB.  On row creation,
                this can be derived from the instance.'"
        ::= { wfOspfDynNbrEntry 4 }

    wfOspfDynNbrRtrId OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'A 32-bit integer (represented as a type IpAddress)
                uniquely identifying the neighboring router in the
                Autonomous System.'
                default { '00000000'H }    -- 0.0.0.0"
        ::= { wfOspfDynNbrEntry 5 }

    wfOspfDynNbrOptions OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'A Bit Mask corresponding to the neighbor's options
                field.

                Bit 0, if set, indicates that the area accepts and
                operates on external information; if zero, it is a stub
                area.

                Bit 1, if set, indicates that the system will operate
                on Type of Service metrics other than TOS 0.  If zero,
                the neighbor will ignore all metrics except the TOS 0
                metric.'
                         REFERENCE
                'OSPF Version 2, Section 12.1.2 Options'"
        ::= { wfOspfDynNbrEntry 6 }

    wfOspfDynNbrPriority OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The priority of this neighbor in the designated router
                election algorithm.  The value 0 signifies that the
                neighbor is not eligible to become the designated
                router on this particular network.'"
        ::= { wfOspfDynNbrEntry 7 }

    wfOspfDynNbrEvents OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The number of times this neighbor relationship has
                changed state, or an error has occurred.'"
        ::= { wfOspfDynNbrEntry 8 }

    wfOspfDynNbrLSRetransQLen OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'The current length of the retransmission queue.'"
        ::= { wfOspfDynNbrEntry 9 }

    END  -- Wellfleet-OSPF-MIB
-- @(#)WSCCS y/mibs-pcap.mib 1.1 8/30/95
Wellfleet-PCAP-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:46:23 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfPktCaptureGroup
        FROM Wellfleet-COMMON-MIB;


    wfPktCaptureTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfPktCaptureEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "PCAP line record"
        ::= { wfPktCaptureGroup 1 }

    wfPktCaptureEntry OBJECT-TYPE
        SYNTAX	WfPktCaptureEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the pcap table"
        INDEX	{ wfPktCaptureLineNumber }
        ::= { wfPktCaptureTable 1 }

    WfPktCaptureEntry ::= SEQUENCE {
    	    wfPktCaptureDelete
    		INTEGER,
    	    wfPktCaptureDisable
    		INTEGER,
    	    wfPktCaptureState
    		INTEGER,
    	    wfPktCaptureFname
    		DisplayString,
    	    wfPktCaptureControl
    		INTEGER,
    	    wfPktCaptureCapture
    		INTEGER,
    	    wfPktCaptureLineNumber
    		INTEGER,
    	    wfPktCaptureBufSize
    		INTEGER,
    	    wfPktCapturePktSize
    		INTEGER,
    	    wfPktCaptureDirection
    		INTEGER,
    	    wfPktCaptureCount
    		Gauge,
    	    wfPktCaptureRxTrigger
    		INTEGER,
    	    wfPktCaptureTxTrigger
    		INTEGER,
    	    wfPktCaptureRxFltr1Type
    		INTEGER,
    	    wfPktCaptureRxFltr1Offset
    		INTEGER,
    	    wfPktCaptureRxFltr1Ref
    		INTEGER,
    	    wfPktCaptureRxFltr1Size
    		INTEGER,
    	    wfPktCaptureRxFltr1Match
    		OCTET STRING,
    	    wfPktCaptureTxFltr1Type
    		INTEGER,
    	    wfPktCaptureTxFltr1Offset
    		INTEGER,
    	    wfPktCaptureTxFltr1Ref
    		INTEGER,
    	    wfPktCaptureTxFltr1Size
    		INTEGER,
    	    wfPktCaptureTxFltr1Match
    		OCTET STRING,
    	    wfPktCaptureRxFltr2Type
    		INTEGER,
    	    wfPktCaptureRxFltr2Offset
    		INTEGER,
    	    wfPktCaptureRxFltr2Ref
    		INTEGER,
    	    wfPktCaptureRxFltr2Size
    		INTEGER,
    	    wfPktCaptureRxFltr2Match
    		OCTET STRING,
    	    wfPktCaptureRxFltr2Group
    		INTEGER,
    	    wfPktCaptureTxFltr2Type
    		INTEGER,
    	    wfPktCaptureTxFltr2Offset
    		INTEGER,
    	    wfPktCaptureTxFltr2Ref
    		INTEGER,
    	    wfPktCaptureTxFltr2Size
    		INTEGER,
    	    wfPktCaptureTxFltr2Match
    		OCTET STRING,
    	    wfPktCaptureTxFltr2Group
    		INTEGER
        }

    wfPktCaptureDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Delete parameter, created or deleted"
        DEFVAL	{ created }
        ::= { wfPktCaptureEntry 1 }

    wfPktCaptureDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable parameter, enabled or disabled"
        DEFVAL	{ enabled }
        ::= { wfPktCaptureEntry 2 }

    wfPktCaptureState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Interface Gate State"
        DEFVAL	{ notpresent }
        ::= { wfPktCaptureEntry 3 }

    wfPktCaptureFname OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Filename used to retrieve capture buffer"
        ::= { wfPktCaptureEntry 4 }

    wfPktCaptureControl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    start(1),
    		    stop(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Swapping the value in this field causes the capture
                code to do the opposite of what is set in the Capture
                field."
        DEFVAL	{ stop }
        ::= { wfPktCaptureEntry 5 }

    wfPktCaptureCapture OBJECT-TYPE
        SYNTAX	INTEGER {
    		    started(1),
    		    stopped(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Capture state, STARTed or STOPed"
        DEFVAL	{ stopped }
        ::= { wfPktCaptureEntry 6 }

    wfPktCaptureLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID LineNumber, filled in by capture gate"
        ::= { wfPktCaptureEntry 7 }

    wfPktCaptureBufSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Size of capture buffer in 1024 byte increments"
        ::= { wfPktCaptureEntry 8 }

    wfPktCapturePktSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of bytes to save from packet in 32 byte increments"
        ::= { wfPktCaptureEntry 9 }

    wfPktCaptureDirection OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rx(1),
    		    tx(2),
    		    both(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Direction of packet flow to capture, Rx, Tx or Both"
        DEFVAL	{ rx }
        ::= { wfPktCaptureEntry 10 }

    wfPktCaptureCount OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packets in capture buffer"
        ::= { wfPktCaptureEntry 11 }

    wfPktCaptureRxTrigger OBJECT-TYPE
        SYNTAX	INTEGER {
    		    full(1),
    		    match1(2),
    		    match2(3),
    		    notused(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rx trigger, Not used, buffer full or match on filter"
        DEFVAL	{ notused }
        ::= { wfPktCaptureEntry 12 }

    wfPktCaptureTxTrigger OBJECT-TYPE
        SYNTAX	INTEGER {
    		    full(1),
    		    match1(2),
    		    match2(3),
    		    notused(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx trigger, Not used, buffer full or match on filter"
        DEFVAL	{ notused }
        ::= { wfPktCaptureEntry 13 }

    wfPktCaptureRxFltr1Type OBJECT-TYPE
        SYNTAX	INTEGER {
    		    capture(1),
    		    trigger(2),
    		    notused(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rx filter 1 type, Capture, Trigger, or Not used"
        DEFVAL	{ notused }
        ::= { wfPktCaptureEntry 14 }

    wfPktCaptureRxFltr1Offset OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rx filter 1 offset in bytes"
        ::= { wfPktCaptureEntry 15 }

    wfPktCaptureRxFltr1Ref OBJECT-TYPE
        SYNTAX	INTEGER {
    		    mac(1),
    		    dl(2),
    		    mcast(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rx filter 1 Reference point, MAC, DATA LINK, MULTICAST"
        DEFVAL	{ mac }
        ::= { wfPktCaptureEntry 16 }

    wfPktCaptureRxFltr1Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rx filter 1 field size to match in bytes"
        ::= { wfPktCaptureEntry 17 }

    wfPktCaptureRxFltr1Match OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rx filter 1 data to match with packet"
        ::= { wfPktCaptureEntry 18 }

    wfPktCaptureTxFltr1Type OBJECT-TYPE
        SYNTAX	INTEGER {
    		    capture(1),
    		    trigger(2),
    		    notused(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx filter 1 type, Capture, Trigger or Not used"
        DEFVAL	{ notused }
        ::= { wfPktCaptureEntry 19 }

    wfPktCaptureTxFltr1Offset OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx filter 1 offset in bytes"
        ::= { wfPktCaptureEntry 20 }

    wfPktCaptureTxFltr1Ref OBJECT-TYPE
        SYNTAX	INTEGER {
    		    mac(1),
    		    dl(2),
    		    mcast(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx filter 1 Reference point, MAC, DATA LINK, MULTICAST"
        DEFVAL	{ mac }
        ::= { wfPktCaptureEntry 21 }

    wfPktCaptureTxFltr1Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx filter 1 field size to match in bytes"
        ::= { wfPktCaptureEntry 22 }

    wfPktCaptureTxFltr1Match OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx filter 1 data to match with packet"
        ::= { wfPktCaptureEntry 23 }

    wfPktCaptureRxFltr2Type OBJECT-TYPE
        SYNTAX	INTEGER {
    		    capture(1),
    		    trigger(2),
    		    notused(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rx filter 2 type, Capture, Trigger or Not used"
        DEFVAL	{ notused }
        ::= { wfPktCaptureEntry 24 }

    wfPktCaptureRxFltr2Offset OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rx filter 2 offset in bytes"
        ::= { wfPktCaptureEntry 25 }

    wfPktCaptureRxFltr2Ref OBJECT-TYPE
        SYNTAX	INTEGER {
    		    mac(1),
    		    dl(2),
    		    mcast(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rx filter 2 Reference point, MAC, DATA LINK, MULTICAST"
        DEFVAL	{ mac }
        ::= { wfPktCaptureEntry 26 }

    wfPktCaptureRxFltr2Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rx filter 2 field size to match in bytes"
        ::= { wfPktCaptureEntry 27 }

    wfPktCaptureRxFltr2Match OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rx filter 2 data to match with packet"
        ::= { wfPktCaptureEntry 28 }

    wfPktCaptureRxFltr2Group OBJECT-TYPE
        SYNTAX	INTEGER {
    		    or(1),
    		    and(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Rx filter 2 grouping attribute, AND or OR"
        DEFVAL	{ or }
        ::= { wfPktCaptureEntry 29 }

    wfPktCaptureTxFltr2Type OBJECT-TYPE
        SYNTAX	INTEGER {
    		    capture(1),
    		    trigger(2),
    		    notused(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx filter 2 type, Capture, Trigger or Not used"
        DEFVAL	{ notused }
        ::= { wfPktCaptureEntry 30 }

    wfPktCaptureTxFltr2Offset OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx filter 2 offset in bytes"
        ::= { wfPktCaptureEntry 31 }

    wfPktCaptureTxFltr2Ref OBJECT-TYPE
        SYNTAX	INTEGER {
    		    mac(1),
    		    dl(2),
    		    mcast(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx filter 2 Reference point, MAC, DATA LINK, MULTICAST"
        DEFVAL	{ mac }
        ::= { wfPktCaptureEntry 32 }

    wfPktCaptureTxFltr2Size OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx filter 2 field size to match in bytes"
        ::= { wfPktCaptureEntry 33 }

    wfPktCaptureTxFltr2Match OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx filter 2 data to match with packet"
        ::= { wfPktCaptureEntry 34 }

    wfPktCaptureTxFltr2Group OBJECT-TYPE
        SYNTAX	INTEGER {
    		    or(1),
    		    and(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx filter 2 grouping attribute, AND or OR"
        DEFVAL	{ or }
        ::= { wfPktCaptureEntry 35 }

    END  -- Wellfleet-PCAP-MIB
-- @(#)WSCCS i/mibs-ping.mib 1.1 8/30/95
Wellfleet-PING-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:46:28 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfPingGroup
        FROM Wellfleet-COMMON-MIB;


    wfPingTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfPingEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Ping table"
        ::= { wfPingGroup 1 }

    wfPingEntry OBJECT-TYPE
        SYNTAX	WfPingEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A list of control entries used to initiate and manage network layer
                echo request sequences"
        INDEX	{ wfPingType,
    		  wfPingIndex }
        ::= { wfPingTable 1 }

    WfPingEntry ::= SEQUENCE {
    	    wfPingDelete
    		INTEGER,
    	    wfPingIndex
    		INTEGER,
    	    wfPingType
    		INTEGER,
    	    wfPingAddress
    		OCTET STRING,
    	    wfPingSize
    		INTEGER,
    	    wfPingTimeOut
    		INTEGER,
    	    wfPingRetry
    		INTEGER,
    	    wfPingTraceRoute
    		INTEGER,
    	    wfPingDelay
    		INTEGER,
    	    wfPingRemaining
    		INTEGER,
    	    wfPingTimer
    		INTEGER,
    	    wfPingSourceRoute
    		INTEGER,
    	    wfPingSourceAddress
    		OCTET STRING,
    	    wfPingTypeOfService
    		INTEGER,
    	    wfPingNumHistBucketsRequested
    		INTEGER,
    	    wfPingNumHistBucketsGranted
    		INTEGER,
    	    wfPingSiteName
    		DisplayString,
    	    wfPingStatus
    		INTEGER,
    	    wfPingAction
    		INTEGER,
    	    wfPingLastMinRoundTripTime
    		INTEGER,
    	    wfPingLastMaxRoundTripTime
    		INTEGER,
    	    wfPingLastTotalRoundTripTime
    		INTEGER,
    	    wfPingIPAddress
    		IpAddress,
    	    wfPingSuccessStatus
    		INTEGER
        }

    wfPingDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "When set, will cause this row in the table to be deleted"
        DEFVAL	{ created }
        ::= { wfPingEntry 1 }

    wfPingIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Index into the Ping Table"
        ::= { wfPingEntry 2 }

    wfPingType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ip(1),
    		    ipx(2),
    		    llc(3),
    		    osi(4),
    		    vines(5),
    		    appletalk(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Type of Ping Protocol"
        ::= { wfPingEntry 3 }

    wfPingAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Address of the object to echo"
        ::= { wfPingEntry 4 }

    wfPingSize OBJECT-TYPE
        SYNTAX	INTEGER(1..4850)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Size of the echo request packet in bytes"
        DEFVAL	{ 16 }
        ::= { wfPingEntry 5 }

    wfPingTimeOut OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Amount of time in seconds before deciding success"
        DEFVAL	{ 5 }
        ::= { wfPingEntry 6 }

    wfPingRetry OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of times to retry"
        DEFVAL	{ 1 }
        ::= { wfPingEntry 7 }

    wfPingTraceRoute OBJECT-TYPE
        SYNTAX	INTEGER {
    		    trace(1),
    		    notrace(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selecting PING_TRACE (1) will cause a traceroute to be performed and
                the result placed in wfPingTraceTable"
        DEFVAL	{ notrace }
        ::= { wfPingEntry 8 }

    wfPingDelay OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of milliseconds to wait between sending echo packets"
        DEFVAL	{ 250 }
        ::= { wfPingEntry 9 }

    wfPingRemaining OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP echoes left to send in this sequence. This will be
                decremented for each time we need to retry and increment wfPingRetry.
                Whenever a sequence is started, the wfPingReceived and wfPingDropped
                will be reset to zero."
        ::= { wfPingEntry 10 }

    wfPingTimer OBJECT-TYPE
        SYNTAX	INTEGER(0..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Time in minutes for the request to begin again, zero means do it once"
        ::= { wfPingEntry 11 }

    wfPingSourceRoute OBJECT-TYPE
        SYNTAX	INTEGER {
    		    nosourceroute(1),
    		    strictsourceroute(2),
    		    loosesourceroute(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Option that can be set to use loose or strict source routing. IF the
                value is something other than PING_NOSOURCEROUTE, the corresponding
                rows in wfPingSourceRouteTable will be used"
        DEFVAL	{ nosourceroute }
        ::= { wfPingEntry 12 }

    wfPingSourceAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Address that specifies the source of the Ping Request"
        ::= { wfPingEntry 13 }

    wfPingTypeOfService OBJECT-TYPE
        SYNTAX	INTEGER {
    		    tosnormal(1),
    		    tospriority(2),
    		    tosimmediate(3),
    		    tosflash(4),
    		    tosflashoverride(5),
    		    toscriticecp(6),
    		    tosinternetctrl(7),
    		    tosnetworkctrl(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tells how the ICMP packet should be handled. According to RFC 1349,
                Normal service is preferred (wfPingTypeOfService = 1)"
        DEFVAL	{ tosnormal }
        ::= { wfPingEntry 14 }

    wfPingNumHistBucketsRequested OBJECT-TYPE
        SYNTAX	INTEGER(1..60)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of history buckets that the user asked for which will only be
                granted if the timer mechanism is being used. Otherwise, only 1 bucket
                will be granted for the single ping"
        DEFVAL	{ 1 }
        ::= { wfPingEntry 15 }

    wfPingNumHistBucketsGranted OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of history buckets that the user was granted. We don't
                grant more then 60 which will allow them to do a ping a minute"
        ::= { wfPingEntry 16 }

    wfPingSiteName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Character string to store the name of the Site. This is not used for
                domain name resolution !  It is purely for cosmetic purposes for customer
                generated reports"
        ::= { wfPingEntry 17 }

    wfPingStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    done(1),
    		    busy(2),
    		    badaddress(3),
    		    error(4),
    		    timeout(5),
    		    invalidparams(6),
    		    resourceerror(7),
    		    targetunreach(8),
    		    ipunavail(9),
    		    icmpdestunreach(10),
    		    ttlexceeded(11),
    		    notimplemented(12),
    		    icmphostunreach(13),
    		    icmpnetunreach(14),
    		    icmpprohibnet(15),
    		    icmpprohibhost(16),
    		    icmpsrcrtefail(17),
    		    protounreach(18),
    		    portunreach(19),
    		    fragneeded(20)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Status of the ping request"
        ::= { wfPingEntry 18 }

    wfPingAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    go(1),
    		    waiting(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Begin processing ping when set to GO"
        DEFVAL	{ waiting }
        ::= { wfPingEntry 19 }

    wfPingLastMinRoundTripTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The last minimum round trip time."
        ::= { wfPingEntry 20 }

    wfPingLastMaxRoundTripTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The last maximum round trip time."
        ::= { wfPingEntry 21 }

    wfPingLastTotalRoundTripTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The last total round trip time in milliseconds."
        ::= { wfPingEntry 22 }

    wfPingIPAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "stations who can't interpret octet string formats."
        ::= { wfPingEntry 23 }

    wfPingSuccessStatus OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "interpreting the detailed status returned by wfPingStatus."
        ::= { wfPingEntry 24 }

    wfPingTraceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfPingTraceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table that contains trace route information"
        ::= { wfPingGroup 2 }

    wfPingTraceEntry OBJECT-TYPE
        SYNTAX	WfPingTraceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A conceptual row containing information about a network hop associated
                with a particular echo request."
        INDEX	{ wfPingTraceType,
    		  wfPingEntryIndex,
    		  wfPingTraceIndex }
        ::= { wfPingTraceTable 1 }

    WfPingTraceEntry ::= SEQUENCE {
    	    wfPingTraceType
    		INTEGER,
    	    wfPingEntryIndex
    		INTEGER,
    	    wfPingTraceIndex
    		INTEGER,
    	    wfPingTraceAddress
    		OCTET STRING
        }

    wfPingTraceType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Type of Ping protocol"
        ::= { wfPingTraceEntry 1 }

    wfPingEntryIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the corresponding index into the Ping Table"
        ::= { wfPingTraceEntry 2 }

    wfPingTraceIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A unique integer describing the order in which a particular hop was
                encountered."
        ::= { wfPingTraceEntry 3 }

    wfPingTraceAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Address of the route we passed through"
        ::= { wfPingTraceEntry 4 }

    wfPingSourceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfPingSourceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table that contains source route information"
        ::= { wfPingGroup 3 }

    wfPingSourceEntry OBJECT-TYPE
        SYNTAX	WfPingSourceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A row in the Ping SourceTable"
        INDEX	{ wfPingSourceType,
    		  wfPingSourceEntryIndex,
    		  wfPingSourceIndex }
        ::= { wfPingSourceTable 1 }

    WfPingSourceEntry ::= SEQUENCE {
    	    wfPingSourceDelete
    		INTEGER,
    	    wfPingSourceType
    		INTEGER,
    	    wfPingSourceEntryIndex
    		INTEGER,
    	    wfPingSourceIndex
    		INTEGER,
    	    wfPingSourceRouteAddress
    		OCTET STRING
        }

    wfPingSourceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    sourcecreated(1),
    		    sourcedeleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "When set, will cause this row in the table to be deleted."
        DEFVAL	{ sourcecreated }
        ::= { wfPingSourceEntry 1 }

    wfPingSourceType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Type of Ping Protocol"
        ::= { wfPingSourceEntry 2 }

    wfPingSourceEntryIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the corresponding index into the Ping Table"
        ::= { wfPingSourceEntry 3 }

    wfPingSourceIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A unique index for this source route"
        ::= { wfPingSourceEntry 4 }

    wfPingSourceRouteAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Address of the route we are to pass through"
        ::= { wfPingSourceEntry 5 }

    wfPingHistoryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfPingHistoryEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table that contains ping history information"
        ::= { wfPingGroup 4 }

    wfPingHistoryEntry OBJECT-TYPE
        SYNTAX	WfPingHistoryEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A row in the Ping HistoryTable"
        INDEX	{ wfPingHistoryType,
    		  wfPingHistoryEntryIndex,
    		  wfPingHistoryIndex }
        ::= { wfPingHistoryTable 1 }

    WfPingHistoryEntry ::= SEQUENCE {
    	    wfPingHistoryType
    		INTEGER,
    	    wfPingHistoryEntryIndex
    		INTEGER,
    	    wfPingHistoryIndex
    		INTEGER,
    	    wfPingReceived
    		Gauge,
    	    wfPingDropped
    		Gauge,
    	    wfPingRoundTripTime
    		INTEGER,
    	    wfPingTotalRoundTripTime
    		INTEGER,
    	    wfPingMinRoundTripTime
    		INTEGER,
    	    wfPingMaxRoundTripTime
    		INTEGER,
    	    wfPingBegan
    		OCTET STRING
        }

    wfPingHistoryType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Type of Ping protocol"
        ::= { wfPingHistoryEntry 1 }

    wfPingHistoryEntryIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the corresponding index in the ping table"
        ::= { wfPingHistoryEntry 2 }

    wfPingHistoryIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the unique history table index"
        ::= { wfPingHistoryEntry 3 }

    wfPingReceived OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of ICMP echo packets received in this sequence. A
                sequence is defined from the time the ping request began to the time
                it was either successful or an error occurred. This field will be
                reset to zero at the start of every new sequence."
        ::= { wfPingHistoryEntry 4 }

    wfPingDropped OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICMP packets dropped since this ping sequence started.
                It will be reset to zero at the start of every new ping sequence"
        ::= { wfPingHistoryEntry 5 }

    wfPingRoundTripTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The round trip time of the last ICMP packet in milliseconds"
        ::= { wfPingHistoryEntry 6 }

    wfPingTotalRoundTripTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The sum of the total round trip times of successful pings received in
                this sequence"
        ::= { wfPingHistoryEntry 7 }

    wfPingMinRoundTripTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The minimum round trip time in this sequence"
        ::= { wfPingHistoryEntry 8 }

    wfPingMaxRoundTripTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum round trip time in this sequence"
        ::= { wfPingHistoryEntry 9 }

    wfPingBegan OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The date and time this ping request was last executed"
        ::= { wfPingHistoryEntry 10 }

    END  -- Wellfleet-PING-MIB
-- @(#)WSCCS s/mibs-ppp.mib 1.2 10/24/95
Wellfleet-PPP-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:46:33 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfPppGroup
        FROM Wellfleet-COMMON-MIB;


    wfPppLineTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfPppLineEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Wellfleet PPP Line Configuration Table containing
                attributes dealing with the link layer and the Link Control
                Protocol (LCP)"
        ::= { wfPppGroup 1 }

    wfPppLineEntry OBJECT-TYPE
        SYNTAX	WfPppLineEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per Wellfleet PPP line configuration parameters
                and counters"
        INDEX	{ wfPppLineLineNumber,
    		  wfPppLineLLIndex }
        ::= { wfPppLineTable 1 }

    WfPppLineEntry ::= SEQUENCE {
    	    wfPppLineDelete
    		INTEGER,
    	    wfPppLineDisable
    		INTEGER,
    	    wfPppLineState
    		INTEGER,
    	    wfPppLineLineNumber
    		INTEGER,
    	    wfPppLineLLIndex
    		INTEGER,
    	    wfPppLineLcpCurrentState
    		INTEGER,
    	    wfPppLineRestartTimer
    		INTEGER,
    	    wfPppLineEchoRequestFreq
    		INTEGER,
    	    wfPppLineEchoReplyLoss
    		INTEGER,
    	    wfPppLineMaxConfReq
    		INTEGER,
    	    wfPppLineMaxTermReq
    		INTEGER,
    	    wfPppLineMaxConfFail
    		INTEGER,
    	    wfPppLineMagicNumber
    		Counter,
    	    wfPppLineMru
    		INTEGER,
    	    wfPppLineLocalAuthProtocol
    		INTEGER,
    	    wfPppLineRemoteAuthProtocol
    		INTEGER,
    	    wfPppLineLocalPapId
    		DisplayString,
    	    wfPppLineLocalPapPassword
    		DisplayString,
    	    wfPppLineRemotePapId
    		DisplayString,
    	    wfPppLineRemotePapPassword
    		DisplayString,
    	    wfPppLineLQProtocol
    		INTEGER,
    	    wfPppLineDisableRemoteLQRTimer
    		INTEGER,
    	    wfPppLineCfgLQRRptPrd
    		INTEGER,
    	    wfPppLineLQRRptPrd
    		INTEGER,
    	    wfPppLineCfgInboundQuality
    		INTEGER,
    	    wfPppLineInboundQuality
    		INTEGER,
    	    wfPppLineCfgOutboundQuality
    		INTEGER,
    	    wfPppLineOutboundQuality
    		INTEGER,
    	    wfPppLineOutLQRs
    		Counter,
    	    wfPppLineInLQRs
    		Counter,
    	    wfPppLineChapSecret
    		DisplayString,
    	    wfPppLinePapFallbackDisable
    		INTEGER,
    	    wfPppLineChapLocalName
    		DisplayString,
    	    wfPppLineChapRemoteName
    		DisplayString,
    	    wfPppLineChapPeriodicTimer
    		INTEGER,
    	    wfPppLineBadPackets
    		Counter,
    	    wfPppLineLastBadPacket
    		OCTET STRING,
    	    wfPppLineLevelPktsIn
    		Counter,
    	    wfPppLineAllowPapReject
    		INTEGER
        }

    wfPppLineDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfPppLineEntry 1 }

    wfPppLineDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter -- Generates
                Open/Close events to the LCP FSM"
        DEFVAL	{ enabled }
        ::= { wfPppLineEntry 2 }

    wfPppLineState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "PPP state variable, Not Present, Init, Down, Up"
        DEFVAL	{ notpresent }
        ::= { wfPppLineEntry 3 }

    wfPppLineLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This is the line number assigned
                to the driver PPP is running on top of"
        ::= { wfPppLineEntry 4 }

    wfPppLineLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This is the lower layer index
                presented to PPP by the layer immediately below it
                on the protocol stack. If the lower layer is a driver,
                the index will be 0."
        ::= { wfPppLineEntry 5 }

    wfPppLineLcpCurrentState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    starting(1),
    		    closed(2),
    		    stopped(3),
    		    closing(4),
    		    stopping(5),
    		    reqsent(6),
    		    ackrcvd(7),
    		    acksent(8),
    		    opened(9)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the current state of the LCP Finite State Machine"
        ::= { wfPppLineEntry 6 }

    wfPppLineRestartTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..1000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "value for Restart timer in seconds"
        DEFVAL	{ 3 }
        ::= { wfPppLineEntry 7 }

    wfPppLineEchoRequestFreq OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "value for Echo-Request frequency - number of seconds
                between transmission of Echo-Request packets"
        ::= { wfPppLineEntry 8 }

    wfPppLineEchoReplyLoss OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "value for Echo-Reply acceptable loss - number of
                unacknowledged Echo-Reply packets counted before
                declaring the link down"
        DEFVAL	{ 3 }
        ::= { wfPppLineEntry 9 }

    wfPppLineMaxConfReq OBJECT-TYPE
        SYNTAX	INTEGER(0..100000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "value for maximum Configure-Requests - number of
                Configure-Request packets sent without receiving a
                valid Configure-Ack, Configure-Nak or Configure-Reject
                before assuming peer is unable to respond"
        DEFVAL	{ 10 }
        ::= { wfPppLineEntry 10 }

    wfPppLineMaxTermReq OBJECT-TYPE
        SYNTAX	INTEGER(0..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "value for maximum Terminate-Requests - number of
                Terminate-Request packets sent without receiving a
                Terminate-Ack before assuming peer is unable to respond"
        DEFVAL	{ 2 }
        ::= { wfPppLineEntry 11 }

    wfPppLineMaxConfFail OBJECT-TYPE
        SYNTAX	INTEGER(0..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "value for maximum configuration failure count - number of
                Configure-Nak packets sent without sending a
                Configure-Ack before assuming configuration is unable to
                converge"
        DEFVAL	{ 10 }
        ::= { wfPppLineEntry 12 }

    wfPppLineMagicNumber OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the Magic Number being used on this line"
        ::= { wfPppLineEntry 13 }

    wfPppLineMru OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this is the MRU being used on the line (in both
                directions)"
        ::= { wfPppLineEntry 14 }

    wfPppLineLocalAuthProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    passauth(49187),
    		    chap(49699),
    		    none(1)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "this is the authorization protocol we require our peer
                to use on our side of the link"
        DEFVAL	{ none }
        ::= { wfPppLineEntry 15 }

    wfPppLineRemoteAuthProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    passauth(49187),
    		    none(1)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this is the authorization protocol our peer requires us
                to use on its side of the link"
        DEFVAL	{ none }
        ::= { wfPppLineEntry 16 }

    wfPppLineLocalPapId OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "our PAP id - our peer sends this to us in an
                Authenticate-Request message"
        ::= { wfPppLineEntry 17 }

    wfPppLineLocalPapPassword OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "our PAP password - our peer sends this to us in an
                Authenticate-Request message"
        ::= { wfPppLineEntry 18 }

    wfPppLineRemotePapId OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "our peer's PAP id - we send this to our
                peer in an Authenticate-Request message"
        ::= { wfPppLineEntry 19 }

    wfPppLineRemotePapPassword OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "our peer's PAP password - we send this to our
                peer in an Authenticate-Request message"
        ::= { wfPppLineEntry 20 }

    wfPppLineLQProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    linkqr(49189),
    		    none(1)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the Link Quality protocol we want to use"
        DEFVAL	{ none }
        ::= { wfPppLineEntry 21 }

    wfPppLineDisableRemoteLQRTimer OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable our peer's LQR timer - this allows
                for one side to maintain the timer while the
                other just responds to LQR packets"
        DEFVAL	{ enabled }
        ::= { wfPppLineEntry 22 }

    wfPppLineCfgLQRRptPrd OBJECT-TYPE
        SYNTAX	INTEGER(1..120)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "this is the value in seconds between transmission
                of LQR packets (Reporting-Period) - it will be the
                same on both sides"
        DEFVAL	{ 3 }
        ::= { wfPppLineEntry 23 }

    wfPppLineLQRRptPrd OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this is the Reporting-Period, in seconds, agreed upon
                during negotiation - we allow the peer to negotiate
                down from our configured period, our maximum, but not
                below 1 second"
        ::= { wfPppLineEntry 24 }

    wfPppLineCfgInboundQuality OBJECT-TYPE
        SYNTAX	INTEGER(0..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the percentage of packets sent by our peer that
                we've successfully received (over the last 5 LQR
                Reporting-Periods) - 100 indicates we won't tolerate
                any loss"
        DEFVAL	{ 90 }
        ::= { wfPppLineEntry 25 }

    wfPppLineInboundQuality OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the current inbound quality"
        ::= { wfPppLineEntry 26 }

    wfPppLineCfgOutboundQuality OBJECT-TYPE
        SYNTAX	INTEGER(0..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the percentage of packets sent by us that our
                peer successfully received (over the last 5 LQR
                Reporting-Periods) - 100 indicates we won't tolerate
                any loss"
        DEFVAL	{ 90 }
        ::= { wfPppLineEntry 27 }

    wfPppLineOutboundQuality OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the current inbound quality"
        ::= { wfPppLineEntry 28 }

    wfPppLineOutLQRs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of Link-Quality-Report packets we've
                transmitted"
        ::= { wfPppLineEntry 29 }

    wfPppLineInLQRs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the number of Link-Quality-Report packets we've
                received"
        ::= { wfPppLineEntry 30 }

    wfPppLineChapSecret OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "this CHAP secret MUST be the same on both sides of
                the link if CHAP is used as the Authentication
                protocol"
        ::= { wfPppLineEntry 31 }

    wfPppLinePapFallbackDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    disabled(2),
    		    enabled(1)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "if an attempt to negotiate CHAP fails, enabling this
                allows a fallback to PAP"
        DEFVAL	{ disabled }
        ::= { wfPppLineEntry 32 }

    wfPppLineChapLocalName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute is used to assign a local CHAP Name
                which is used to inform our peer of our identity,
                during WHOAMI processing"
        ::= { wfPppLineEntry 33 }

    wfPppLineChapRemoteName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This attribute is used to store our peer's CHAP Name
                which is used to learn our peer's identity,
                during WHOAMI processing"
        ::= { wfPppLineEntry 34 }

    wfPppLineChapPeriodicTimer OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Timer for periodic CHAP in seconds. A time of
                0 disables Periodic CHAP. This timer value should
                long enough to allow CHAP to complete one phase
                before entering another."
        ::= { wfPppLineEntry 35 }

    wfPppLineBadPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "These are packets not in correct PPP format"
        ::= { wfPppLineEntry 36 }

    wfPppLineLastBadPacket OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the first 16 bytes of the last bad packet
                we received"
        ::= { wfPppLineEntry 37 }

    wfPppLineLevelPktsIn OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the count of PPP link-level packets
                (such as Link Control Protocol or Compression
                       Control Protocl) which have been received."
        ::= { wfPppLineEntry 38 }

    wfPppLineAllowPapReject OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "There are some peers that don't want us asking to
                be a PAP authenticator, so accept the Reject and
                remove PAP from the LCP Configure-Request if this
                is enabled."
        DEFVAL	{ disabled }
        ::= { wfPppLineEntry 39 }

    wfPppCircuitTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfPppCircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Wellfleet PPP Circuit Configuration Table containing
                attributes dealing with the network layer and each
                Network Control Protocol (NCP)"
        ::= { wfPppGroup 2 }

    wfPppCircuitEntry OBJECT-TYPE
        SYNTAX	WfPppCircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per Wellfleet circuit PPP configuration parameters and
                counters"
        INDEX	{ wfPppCircuitID }
        ::= { wfPppCircuitTable 1 }

    WfPppCircuitEntry ::= SEQUENCE {
    	    wfPppCircuitDelete
    		INTEGER,
    	    wfPppCircuitState
    		INTEGER,
    	    wfPppCircuitIpcpCurrentState
    		INTEGER,
    	    wfPppCircuitOsinlcpCurrentState
    		INTEGER,
    	    wfPppCircuitXnscpCurrentState
    		INTEGER,
    	    wfPppCircuitDncpCurrentState
    		INTEGER,
    	    wfPppCircuitAtcpCurrentState
    		INTEGER,
    	    wfPppCircuitIpxcpCurrentState
    		INTEGER,
    	    wfPppCircuitBncpCurrentState
    		INTEGER,
    	    wfPppCircuitVncpCurrentState
    		INTEGER,
    	    wfPppCircuitID
    		INTEGER,
    	    wfPppCircuitIpDisable
    		INTEGER,
    	    wfPppCircuitOsinlDisable
    		INTEGER,
    	    wfPppCircuitXnsDisable
    		INTEGER,
    	    wfPppCircuitDecnetDisable
    		INTEGER,
    	    wfPppCircuitAppletalkDisable
    		INTEGER,
    	    wfPppCircuitIpxDisable
    		INTEGER,
    	    wfPppCircuitBridgeDisable
    		INTEGER,
    	    wfPppCircuitVinesDisable
    		INTEGER,
    	    wfPppCircuitCfgLocalIpAddr
    		IpAddress,
    	    wfPppCircuitLocalIpAddr
    		IpAddress,
    	    wfPppCircuitCfgRemoteIpAddr
    		IpAddress,
    	    wfPppCircuitRemoteIpAddr
    		IpAddress,
    	    wfPppCircuitCfgIpxNetworkNumber
    		OCTET STRING,
    	    wfPppCircuitIpxNetworkNumber
    		OCTET STRING,
    	    wfPppCircuitIpxRemoteNodeNumber
    		OCTET STRING,
    	    wfPppCircuitCfgIpxRoutingProtocol
    		INTEGER,
    	    wfPppCircuitIpxRoutingProtocol
    		INTEGER,
    	    wfPppCircuitLocalIpxRouterName
    		DisplayString,
    	    wfPppCircuitRemoteIpxRouterName
    		DisplayString,
    	    wfPppCircuitIpxConfigComplete
    		INTEGER,
    	    wfPppCircuitCfgAtNetwork
    		INTEGER,
    	    wfPppCircuitAtNetwork
    		INTEGER,
    	    wfPppCircuitCfgLocalAtNode
    		INTEGER,
    	    wfPppCircuitLocalAtNode
    		INTEGER,
    	    wfPppCircuitCfgRemoteAtNode
    		INTEGER,
    	    wfPppCircuitRemoteAtNode
    		INTEGER,
    	    wfPppCircuitCfgAtRoutingProtocol
    		INTEGER,
    	    wfPppCircuitAtRoutingProtocol
    		INTEGER,
    	    wfPppCircuitCfgBridgeEnet
    		INTEGER,
    	    wfPppCircuitBridgeEnet
    		INTEGER,
    	    wfPppCircuitCfgBridgeFddi
    		INTEGER,
    	    wfPppCircuitBridgeFddi
    		INTEGER,
    	    wfPppCircuitCfgBridgeTokenRing
    		INTEGER,
    	    wfPppCircuitBridgeTokenRing
    		INTEGER,
    	    wfPppCircuitBadPackets
    		Counter,
    	    wfPppCircuitLastBadPacket
    		OCTET STRING,
    	    wfPppCircuitCcpCurrentState
    		INTEGER,
    	    wfPppCircuitCcpDisable
    		INTEGER,
    	    wfPppCircuitPppMode
    		INTEGER,
    	    wfPppCircuitMLFragPerm
    		INTEGER,
    	    wfPppCircuitExamPeriod
    		INTEGER,
    	    wfPppCircuitFullThreshold
    		INTEGER,
    	    wfPppCircuitPeriodsCng
    		INTEGER,
    	    wfPppCircuitPrefBwSlot
    		INTEGER,
    	    wfPppCircuitResvBwSlot
    		INTEGER,
    	    wfPppCircuitMinLinks
    		INTEGER,
    	    wfPppCircuitMaxLinks
    		INTEGER,
    	    wfPppCircuitRecoverThreshold
    		INTEGER,
    	    wfPppCircuitPeriodsUnCng
    		INTEGER,
    	    wfPppCircuitHistory
    		DisplayString,
    	    wfPppCircuitDebugFlag
    		INTEGER,
            wfPppCircuitActualMode
                INTEGER,
    	    wfPppCircuitMaxBuffers
    		INTEGER
        }

    wfPppCircuitDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfPppCircuitEntry 1 }

    wfPppCircuitState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "PPP state variable, Not Present, Init, Down, Up"
        DEFVAL	{ notpresent }
        ::= { wfPppCircuitEntry 2 }

    wfPppCircuitIpcpCurrentState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    starting(1),
    		    closed(2),
    		    stopped(3),
    		    closing(4),
    		    stopping(5),
    		    reqsent(6),
    		    ackrcvd(7),
    		    acksent(8),
    		    opened(9)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the current state of the IPCP Finite State Machine"
        ::= { wfPppCircuitEntry 3 }

    wfPppCircuitOsinlcpCurrentState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    starting(1),
    		    closed(2),
    		    stopped(3),
    		    closing(4),
    		    stopping(5),
    		    reqsent(6),
    		    ackrcvd(7),
    		    acksent(8),
    		    opened(9)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the current state of the OSINLCP Finite State Machine"
        ::= { wfPppCircuitEntry 4 }

    wfPppCircuitXnscpCurrentState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    starting(1),
    		    closed(2),
    		    stopped(3),
    		    closing(4),
    		    stopping(5),
    		    reqsent(6),
    		    ackrcvd(7),
    		    acksent(8),
    		    opened(9)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the current state of the XNSCP Finite State Machine"
        ::= { wfPppCircuitEntry 5 }

    wfPppCircuitDncpCurrentState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    starting(1),
    		    closed(2),
    		    stopped(3),
    		    closing(4),
    		    stopping(5),
    		    reqsent(6),
    		    ackrcvd(7),
    		    acksent(8),
    		    opened(9)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the current state of the DNCP Finite State Machine"
        ::= { wfPppCircuitEntry 6 }

    wfPppCircuitAtcpCurrentState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    starting(1),
    		    closed(2),
    		    stopped(3),
    		    closing(4),
    		    stopping(5),
    		    reqsent(6),
    		    ackrcvd(7),
    		    acksent(8),
    		    opened(9)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the current state of the ATCP Finite State Machine"
        ::= { wfPppCircuitEntry 7 }

    wfPppCircuitIpxcpCurrentState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    starting(1),
    		    closed(2),
    		    stopped(3),
    		    closing(4),
    		    stopping(5),
    		    reqsent(6),
    		    ackrcvd(7),
    		    acksent(8),
    		    opened(9)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the current state of the IPXCP Finite State Machine"
        ::= { wfPppCircuitEntry 8 }

    wfPppCircuitBncpCurrentState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    starting(1),
    		    closed(2),
    		    stopped(3),
    		    closing(4),
    		    stopping(5),
    		    reqsent(6),
    		    ackrcvd(7),
    		    acksent(8),
    		    opened(9)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the current state of the BNCP Finite State Machine"
        ::= { wfPppCircuitEntry 9 }

    wfPppCircuitVncpCurrentState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    starting(1),
    		    closed(2),
    		    stopped(3),
    		    closing(4),
    		    stopping(5),
    		    reqsent(6),
    		    ackrcvd(7),
    		    acksent(8),
    		    opened(9)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the current state of the VNCP Finite State Machine"
        ::= { wfPppCircuitEntry 10 }

    wfPppCircuitID OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "cct number for this instance"
        ::= { wfPppCircuitEntry 11 }

    wfPppCircuitIpDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable IP Protocol - disabling generates
                a Close event to the IPCP FSM and consequently disallows
                IP traffic on this circuit"
        DEFVAL	{ disabled }
        ::= { wfPppCircuitEntry 12 }

    wfPppCircuitOsinlDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable OSI Network Layer Protocol -
                disabling generates a Close event to the OSINLCP FSM
                and consequently disallows OSI traffic on this circuit"
        DEFVAL	{ disabled }
        ::= { wfPppCircuitEntry 13 }

    wfPppCircuitXnsDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable XNS Protocol - disabling generates
                a Close event to the XNSCP FSM and consequently
                disallows XNS traffic on this circuit"
        DEFVAL	{ disabled }
        ::= { wfPppCircuitEntry 14 }

    wfPppCircuitDecnetDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable DECnet Protocol - disabling generates
                a Close event to the DNCP FSM and consequently
                disallows DECnet traffic on this circuit"
        DEFVAL	{ disabled }
        ::= { wfPppCircuitEntry 15 }

    wfPppCircuitAppletalkDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable AppleTalk Protocol - disabling generates
                a Close event to the ATCP FSM and consequently
                disallows AppleTalk traffic on this circuit"
        DEFVAL	{ disabled }
        ::= { wfPppCircuitEntry 16 }

    wfPppCircuitIpxDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable IPX Protocol - disabling generates
                a Close event to the IPXCP FSM and consequently
                disallows IPX traffic on this circuit"
        DEFVAL	{ disabled }
        ::= { wfPppCircuitEntry 17 }

    wfPppCircuitBridgeDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable the Bridge - disabling generates
                a Close event to the BNCP FSM and consequently
                disallows bridge traffic on this circuit"
        DEFVAL	{ disabled }
        ::= { wfPppCircuitEntry 18 }

    wfPppCircuitVinesDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable Vines Protocol - disabling generates
                a Close event to the VNCP FSM and consequently
                disallows Vines traffic on this circuit"
        DEFVAL	{ disabled }
        ::= { wfPppCircuitEntry 19 }

    wfPppCircuitCfgLocalIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the IP address we're going to use"
        ::= { wfPppCircuitEntry 20 }

    wfPppCircuitLocalIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the IP address our peer wants us to use"
        ::= { wfPppCircuitEntry 21 }

    wfPppCircuitCfgRemoteIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the IP address we want our peer to use"
        ::= { wfPppCircuitEntry 22 }

    wfPppCircuitRemoteIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the IP address our peer wants to use"
        ::= { wfPppCircuitEntry 23 }

    wfPppCircuitCfgIpxNetworkNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the configured IPX Network Number to be used by
                both us and our peer"
        ::= { wfPppCircuitEntry 24 }

    wfPppCircuitIpxNetworkNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the result of IPX Network Number negotiation"
        ::= { wfPppCircuitEntry 25 }

    wfPppCircuitIpxRemoteNodeNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "this is what we'll tell our peer to use for node
                number if it sends us a 0"
        ::= { wfPppCircuitEntry 26 }

    wfPppCircuitCfgIpxRoutingProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ripsap(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the desired IPX Routing Protocol to be used on
                the link"
        DEFVAL	{ ripsap }
        ::= { wfPppCircuitEntry 27 }

    wfPppCircuitIpxRoutingProtocol OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the negotiated IPX Routing Protocol to be used on
                the link"
        ::= { wfPppCircuitEntry 28 }

    wfPppCircuitLocalIpxRouterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "our IPX Router Name"
        ::= { wfPppCircuitEntry 29 }

    wfPppCircuitRemoteIpxRouterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "our peer's IPX Router Name"
        ::= { wfPppCircuitEntry 30 }

    wfPppCircuitIpxConfigComplete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "indicates whether or not IPXCP converged on all
                required options"
        ::= { wfPppCircuitEntry 31 }

    wfPppCircuitCfgAtNetwork OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the configured AppleTalk network number - our
                peer must use the same number"
        ::= { wfPppCircuitEntry 32 }

    wfPppCircuitAtNetwork OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the AppleTalk network number we agreed to use"
        ::= { wfPppCircuitEntry 33 }

    wfPppCircuitCfgLocalAtNode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the AppleTalk node number we're configured to use"
        ::= { wfPppCircuitEntry 34 }

    wfPppCircuitLocalAtNode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "our AppleTalk node number after negotiation"
        ::= { wfPppCircuitEntry 35 }

    wfPppCircuitCfgRemoteAtNode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the AppleTalk node number we want our peer to use"
        ::= { wfPppCircuitEntry 36 }

    wfPppCircuitRemoteAtNode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "our peer's AppleTalk node number after negotiation"
        ::= { wfPppCircuitEntry 37 }

    wfPppCircuitCfgAtRoutingProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rtmp(1),
    		    aurp(2),
    		    abgp(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the desired AppleTalk Routing Protocol to be used on
                the link"
        DEFVAL	{ rtmp }
        ::= { wfPppCircuitEntry 38 }

    wfPppCircuitAtRoutingProtocol OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the negotiated AppleTalk Routing Protocol to be used on
                the link"
        ::= { wfPppCircuitEntry 39 }

    wfPppCircuitCfgBridgeEnet OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "allow/disallow Ethernet bridged frames"
        DEFVAL	{ enabled }
        ::= { wfPppCircuitEntry 40 }

    wfPppCircuitBridgeEnet OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "result of bridge MAC type negotiation for
                Ethernet"
        ::= { wfPppCircuitEntry 41 }

    wfPppCircuitCfgBridgeFddi OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "allow/disallow FDDI bridged frames"
        DEFVAL	{ enabled }
        ::= { wfPppCircuitEntry 42 }

    wfPppCircuitBridgeFddi OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "result of bridge MAC type negotiation for
                FDDI"
        ::= { wfPppCircuitEntry 43 }

    wfPppCircuitCfgBridgeTokenRing OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "allow/disallow Token Ring bridged frames"
        DEFVAL	{ enabled }
        ::= { wfPppCircuitEntry 44 }

    wfPppCircuitBridgeTokenRing OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "result of bridge MAC type negotiation for
                Token Ring"
        ::= { wfPppCircuitEntry 45 }

    wfPppCircuitBadPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "these are packets not in correct PPP format"
        ::= { wfPppCircuitEntry 46 }

    wfPppCircuitLastBadPacket OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this is the first 16 bytes of the last bad packet
                we received"
        ::= { wfPppCircuitEntry 47 }

    wfPppCircuitCcpCurrentState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    starting(1),
    		    closed(2),
    		    stopped(3),
    		    closing(4),
    		    stopping(5),
    		    reqsent(6),
    		    ackrcvd(7),
    		    acksent(8),
    		    opened(9)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the current state of the CCP Finite State Machine"
        ::= { wfPppCircuitEntry 48 }

    wfPppCircuitCcpDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable compression - disabling generates
                a Close event to the CCP FSM and consequently
                disallows compression traffic on this circuit"
        DEFVAL	{ disabled }
        ::= { wfPppCircuitEntry 49 }

    wfPppCircuitPppMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    normal(1),
    		    nego(2),
    		    multilink(3),
    		    monitor(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Pre 9.0 multilines can only negotiate LCP over 1 line. The
                exact line which LCP will occur on is unknown. So in order
                to handle this situation we will wait until we receive an
                LCP Request before we attempt to negotiate LCP by setting
                the mode to PPP_MODE_PEER_SOLICITED_LCP_NEGO. If we are using
                this line as a single PPP Line or we are sure our peer can
                handle LCP on all the members of the multiline, PPP_MODE_NORMAL
                should be selected.
                    Multilink is a PPP protocol extension which provides restoration
                    of packets which arrive out of sequence, a possibility with
                multiple lines.
                Multilink monitor, in conjunction with other configuration data
                    allows the throughput of a line to be monitored. Additional
                    lines can be brought into the bundle and taken down dynamically
                    in response to data traffic volume and other conditions."
        DEFVAL	{ normal }
        ::= { wfPppCircuitEntry 50 }

    wfPppCircuitMLFragPerm OBJECT-TYPE
        SYNTAX	INTEGER {
    		    permitted(1),
    		    prohibited(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter allows interoperability with PPP Multilink
                implementations which do not allow fragmentation."
        DEFVAL	{ prohibited }
        ::= { wfPppCircuitEntry 51 }

    wfPppCircuitExamPeriod OBJECT-TYPE
        SYNTAX	INTEGER(5..200)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This indicates the interval that the Multilink bundle should
                be polled for possible congestion.  This value is in
                tenths of a second"
        DEFVAL	{ 10 }
        ::= { wfPppCircuitEntry 52 }

    wfPppCircuitFullThreshold OBJECT-TYPE
        SYNTAX	INTEGER(10..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the percentage of the theoretical maximum line
                throughput that must be reached or exceeded before the line is
                considered congested."
        DEFVAL	{ 70 }
        ::= { wfPppCircuitEntry 53 }

    wfPppCircuitPeriodsCng OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the number of consecutive periods where the line
                throughput is above the congestion threshold required to declare
                the line congested and attempt corrective action."
        DEFVAL	{ 10 }
        ::= { wfPppCircuitEntry 54 }

    wfPppCircuitPrefBwSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the preferred bandwidth slot.
                When lines are requested to be added to the Multilink bundle
                this parameter denotes the slot which is asked first."
        ::= { wfPppCircuitEntry 55 }

    wfPppCircuitResvBwSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the reserve bandwidth slot.
                When lines are requested to be added to the Multilink bundle
                this parameter denotes the slot which is asked if the preferred
                slot can not provide a line."
        ::= { wfPppCircuitEntry 56 }

    wfPppCircuitMinLinks OBJECT-TYPE
        SYNTAX	INTEGER(0..4)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the minimum number of links allowed in the Multilink
                reword    bundle for this circuit once it has been 'brought up'."
        DEFVAL	{ 1 }
        ::= { wfPppCircuitEntry 57 }

    wfPppCircuitMaxLinks OBJECT-TYPE
        SYNTAX	INTEGER(0..4)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the maximum number of links allowed in the Multilink
                bundle for this circuit at any one time."
        DEFVAL	{ 4 }
        ::= { wfPppCircuitEntry 58 }

    wfPppCircuitRecoverThreshold OBJECT-TYPE
        SYNTAX	INTEGER(10..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the recovery threshold expressed as a percentage of the
                theoretical maximum bundle throughput.  The actual throughput must fall
                below this percentage in order for the BOD circuit to
                begin to remove lines from the Multilink bundle. This value should be
                set to less than the value of wfPppCircuitFullThreshold."
        DEFVAL	{ 20 }
        ::= { wfPppCircuitEntry 59 }

    wfPppCircuitPeriodsUnCng OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter is used for recovery. Once a Multilink bundle has
                been declared as congested, this is the number of
                consecutive examination periods where the queue depth is
                below the recovery threshold value required to declare that the
                bundle is no longer congested."
        DEFVAL	{ 10 }
        ::= { wfPppCircuitEntry 60 }

    wfPppCircuitHistory OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "DEBUG parameter - This is the BOD history buffer."
        ::= { wfPppCircuitEntry 61 }

    wfPppCircuitDebugFlag OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DEBUG parameter - This is the BOD Debug flag, used to control
                debug code for BOD."
        ::= { wfPppCircuitEntry 62 }

    wfPppCircuitActualMode OBJECT-TYPE
        SYNTAX  INTEGER {
                    normal(1),
                    multilink(3),
                    monitor(4),
                    inactive(20)
                }
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "This attribute is the actual ppp mode of the circuit after
                 LCP has negotiated.  "
        DEFVAL  { normal }
        ::= { wfPppCircuitEntry 63 }


    wfPppCircuitMaxBuffers OBJECT-TYPE
        SYNTAX  INTEGER(10..60)
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "This is the maximum number of stored buffers allowed in the
                 Multilink Receive logic for this circuit at any one time."
        DEFVAL  { 30 }
        ::= { wfPppCircuitEntry 64 }


    wfPppWhoamiTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfPppWhoamiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Wellfleet PPP WHOAMI Table, containing a mapping of
                peer CHAP Names and the circuit numbers they map to"
        ::= { wfPppGroup 3 }

    wfPppWhoamiEntry OBJECT-TYPE
        SYNTAX	WfPppWhoamiEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Map the value of this entry's CHAP Name to the
                value of this entry's CCT number"
        INDEX	{ wfPppWhoamiName }
        ::= { wfPppWhoamiTable 1 }

    WfPppWhoamiEntry ::= SEQUENCE {
    	    wfPppWhoamiDelete
    		INTEGER,
    	    wfPppWhoamiName
    		DisplayString,
    	    wfPppWhoamiCircuit
    		INTEGER,
    	    wfPppWhoamiSecret
    		DisplayString,
    	    wfPppWhoamiPapPassword
    		DisplayString,
    	    wfPppWhoamiCctGrp
    		INTEGER
        }

    wfPppWhoamiDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfPppWhoamiEntry 1 }

    wfPppWhoamiName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Peer CHAP Name"
        ::= { wfPppWhoamiEntry 2 }

    wfPppWhoamiCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Circuit number to map to"
        ::= { wfPppWhoamiEntry 3 }

    wfPppWhoamiSecret OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Peer CHAP Secret"
        ::= { wfPppWhoamiEntry 4 }

    wfPppWhoamiPapPassword OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Peer Pap Password"
        ::= { wfPppWhoamiEntry 5 }

    wfPppWhoamiCctGrp OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Unnumbered circuit group to map to"
        ::= { wfPppWhoamiEntry 6 }

    wfPppMlStatsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfPppMlStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Wellfleet PPP Multilink Stats Table, containing statistics
                for each Multilink Circuit"
        ::= { wfPppGroup 4 }

    wfPppMlStatsEntry OBJECT-TYPE
        SYNTAX	WfPppMlStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per Wellfleet circuit PPP Multilink counters"
        INDEX	{ wfPppMlStatsCircuitID }
        ::= { wfPppMlStatsTable 1 }

    WfPppMlStatsEntry ::= SEQUENCE {
    	    wfPppMlStatsDelete
    		INTEGER,
    	    wfPppMlStatsCircuitID
    		INTEGER,
    	    wfPppMlStatsHomeSlot
    		INTEGER,
    	    wfPppMlStatsLineCnt
    		Gauge,
    	    wfPppMlStatsBundleSpd
    		Gauge,
    	    wfPppMlStatsMrru
    		Gauge,
    	    wfPppMlStatsEndptDisc
    		OCTET STRING,
    	    wfPppMlStatsTxOctets
    		Counter,
    	    wfPppMlStatsTxPkts
    		Counter,
    	    wfPppMlStatsAvgTxListLen
    		Gauge,
    	    wfPppMlStatsRxOctets
    		Counter,
    	    wfPppMlStatsRxPkts
    		Counter,
    	    wfPppMlStatsReasmFails
    		Counter,
    	    wfPppMlStatsSeqNumberLost
    		Counter,
    	    wfPppMlStatsSeqNumberArrivedLate
    		Counter,
    	    wfPppMlStatsReSeqBufferCnt
    		Gauge,
    	    wfPppMlStatsReSeqBufferMax
    		Counter,
    	    wfPppMlStatsExceededBufferMax
    		Counter,
    	    wfPppMlStatsLinkIdleEvents
    		Counter,
    	    wfPppMlStatsLine1
    		INTEGER,
    	    wfPppMlStatsLine2
    		INTEGER,
    	    wfPppMlStatsLine3
    		INTEGER,
    	    wfPppMlStatsLine4
    		INTEGER,
    	    wfPppMlStatsRecvPercentLine1
    		Gauge,
    	    wfPppMlStatsRecvPercentLine2
    		Gauge,
    	    wfPppMlStatsRecvPercentLine3
    		Gauge,
    	    wfPppMlStatsRecvPercentLine4
    		Gauge
        }

    wfPppMlStatsDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfPppMlStatsEntry 1 }

    wfPppMlStatsCircuitID OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "cct number for this instance"
        ::= { wfPppMlStatsEntry 2 }

    wfPppMlStatsHomeSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot on which this Multilink Control Subsystem exists"
        ::= { wfPppMlStatsEntry 3 }

    wfPppMlStatsLineCnt OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current count of lines in Multilink bundle"
        ::= { wfPppMlStatsEntry 4 }

    wfPppMlStatsBundleSpd OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current total bandwidth of Multilink bundle"
        ::= { wfPppMlStatsEntry 5 }

    wfPppMlStatsMrru OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current Maximum Receive Reconstructed Unit (MRRU)
                in use for Multilink bundle"
        ::= { wfPppMlStatsEntry 6 }

    wfPppMlStatsEndptDisc OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current Endpoint Discriminator in use for
                Multilink bundle"
        ::= { wfPppMlStatsEntry 7 }

    wfPppMlStatsTxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets transmitted by Multilink"
        ::= { wfPppMlStatsEntry 8 }

    wfPppMlStatsTxPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packets transmitted by Multilink"
        ::= { wfPppMlStatsEntry 9 }

    wfPppMlStatsAvgTxListLen OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Average number of packets received in the transient
                list by the Multilink Transmit gate."
        ::= { wfPppMlStatsEntry 10 }

    wfPppMlStatsRxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets received without error"
        ::= { wfPppMlStatsEntry 11 }

    wfPppMlStatsRxPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packets received by Multilink"
        ::= { wfPppMlStatsEntry 12 }

    wfPppMlStatsReasmFails OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packet reassembly failures"
        ::= { wfPppMlStatsEntry 13 }

    wfPppMlStatsSeqNumberLost OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Multilink packets considered to be lost on
                the wire"
        ::= { wfPppMlStatsEntry 14 }

    wfPppMlStatsSeqNumberArrivedLate OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Multilink packets which arrive
                containing an old Sequence Number. IE: packets
                with a more current Sequence Number have already
                been sent up to NCP"
        ::= { wfPppMlStatsEntry 15 }

    wfPppMlStatsReSeqBufferCnt OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Multilink packets currently stored
                in the ReSequencing buffer pool."
        ::= { wfPppMlStatsEntry 16 }

    wfPppMlStatsReSeqBufferMax OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Maximum Number of Multilink packets stored
                in the ReSequencing buffer pool."
        ::= { wfPppMlStatsEntry 17 }

    wfPppMlStatsExceededBufferMax OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times a buffer needed to be stored by the
                 Multilink Receive logic when the count of buffers stored,
                 wfPppMlStatsReSeqBufferMax,was equal to the maximum allowable
                 for this circuit, wfPppCircuitMaxBuffers."
        ::= { wfPppMlStatsEntry 18 }

    wfPppMlStatsLinkIdleEvents OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The number of times the Multilink Receive logic detected a
                 stored buffer received on a line which has been declared idle."
        ::= { wfPppMlStatsEntry 19 }

    wfPppMlStatsLine1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "PPP Line Number of the first line of the bundle."
        ::= { wfPppMlStatsEntry 20 }

    wfPppMlStatsLine2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "PPP Line Number of the second line of the bundle."
        ::= { wfPppMlStatsEntry 21 }

    wfPppMlStatsLine3 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "PPP Line Number of the third line of the bundle."
        ::= { wfPppMlStatsEntry 22 }

    wfPppMlStatsLine4 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "PPP Line Number of the forth line of the bundle."
        ::= { wfPppMlStatsEntry 23 }

    wfPppMlStatsRecvPercentLine1 OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Percentage of Multilink octets received
                on the first line of the bundle"
        ::= { wfPppMlStatsEntry 24 }

    wfPppMlStatsRecvPercentLine2 OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Percentage of Multilink octets received
                on the second line of the bundle"
        ::= { wfPppMlStatsEntry 25 }

    wfPppMlStatsRecvPercentLine3 OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Percentage of Multilink octets received
                on the third line of the bundle"
        ::= { wfPppMlStatsEntry 26 }

    wfPppMlStatsRecvPercentLine4 OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Percentage of Multilink octets received
                on the forth line of the bundle"
        ::= { wfPppMlStatsEntry 27 }

    END  -- Wellfleet-PPP-MIB
-- @(#)WSCCS f/mibs-protopri.mib 1.1 8/30/95
Wellfleet-PROTOPRI-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:46:40 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfProtocolPriorityGroup
        FROM Wellfleet-COMMON-MIB;


    wfProtoPriQTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfProtoPriQEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Protocol Priority Queue Mib"
        ::= { wfProtocolPriorityGroup 1 }

    wfProtoPriQEntry OBJECT-TYPE
        SYNTAX	WfProtoPriQEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "entry for each queue the Protocol Priority supports"
        INDEX	{ wfProtoPriPeerAddr,
    		  wfProtoPriClientId,
    		  wfProtoPriQueueNumber }
        ::= { wfProtoPriQTable 1 }

    WfProtoPriQEntry ::= SEQUENCE {
    	    wfProtoPriQueueDelete
    		INTEGER,
    	    wfProtoPriClientId
    		INTEGER,
    	    wfProtoPriQueueNumber
    		INTEGER,
    	    wfProtoPriQueueBandwidthPercent
    		INTEGER,
    	    wfProtoPriQueueHighWaterPkts
    		Gauge,
    	    wfProtoPriQueueTxPkts
    		Counter,
    	    wfProtoPriQueueTotalTxOctets
    		Counter,
    	    wfProtoPriQueueLargePkts
    		Counter,
    	    wfProtoPriQueueClippedPkts
    		Counter,
    	    wfProtoPriPeerAddr
    		IpAddress,
    	    wfProtoPriQueueHighWaterBytes
    		Gauge,
    	    wfProtoPriCCPkts
    		Counter,
    	    wfProtoPriCCOctets
    		Counter,
    	    wfProtoPriCCHighWaterPkts
    		Gauge,
    	    wfProtoPriCCHighWaterBytes
    		Gauge
        }

    wfProtoPriQueueDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete this Mib entry"
        DEFVAL	{ created }
        ::= { wfProtoPriQEntry 1 }

    wfProtoPriClientId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Client's number provided by the Client to identify the user"
        ::= { wfProtoPriQEntry 2 }

    wfProtoPriQueueNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Queue number"
        ::= { wfProtoPriQEntry 3 }

    wfProtoPriQueueBandwidthPercent OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bandwidth percent alloted for this queue; Sum of
                the bandwidth for all the queues for this peer
                should equal to 100%"
        DEFVAL	{ default }
        ::= { wfProtoPriQEntry 4 }

    wfProtoPriQueueHighWaterPkts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Max number of packets held by this Queue since
                the Queue creation or reset"
        ::= { wfProtoPriQEntry 5 }

    wfProtoPriQueueTxPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Max number number of packets sent out of this
                Queue(statistics) since creation or
                last reset"
        ::= { wfProtoPriQEntry 6 }

    wfProtoPriQueueTotalTxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Max number of bytes sent out of this
                Queue(statistics) since creation or
                last reset"
        ::= { wfProtoPriQEntry 7 }

    wfProtoPriQueueLargePkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packets that exceeded the latency by itself
                but still got sent out; N/A for DLS"
        ::= { wfProtoPriQEntry 8 }

    wfProtoPriQueueClippedPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packets clipped when Congestion control
                is disabled"
        ::= { wfProtoPriQEntry 9 }

    wfProtoPriPeerAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "IP addr for DLS, part of the instance id"
        ::= { wfProtoPriQEntry 10 }

    wfProtoPriQueueHighWaterBytes OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Max number of bytes held by this Queue since
                the Queue creation or reset"
        ::= { wfProtoPriQEntry 11 }

    wfProtoPriCCPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Max number of packets sent by Congestion Control
                Queue in memory(statistics) since creation or
                last reset"
        ::= { wfProtoPriQEntry 12 }

    wfProtoPriCCOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Max number of bytes sent by Congestion Control
                Queue in memory(statistics) since creation or
                last reset"
        ::= { wfProtoPriQEntry 13 }

    wfProtoPriCCHighWaterPkts OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Max number of packets held by Congestion Control
                Queue in memory(statistics) since creation or
                last reset"
        ::= { wfProtoPriQEntry 14 }

    wfProtoPriCCHighWaterBytes OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Max number of bytes held by Congestion Control
                Queue in memory(statistics) since creation or
                last reset"
        ::= { wfProtoPriQEntry 15 }

    wfProtoPriFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfProtoPriFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Protocol Prioritiy Filter Definitions"
        ::= { wfProtocolPriorityGroup 2 }

    wfProtoPriFilterEntry OBJECT-TYPE
        SYNTAX	WfProtoPriFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Filter table entry for Protocol Priority"
        INDEX	{ wfProtoPriFilterPeerAddr,
    		  wfProtoPriFilterClientId,
    		  wfProtoPriFilterRuleNumber,
    		  wfProtoPriFilterFragment }
        ::= { wfProtoPriFilterTable 1 }

    WfProtoPriFilterEntry ::= SEQUENCE {
    	    wfProtoPriFilterCreate
    		INTEGER,
    	    wfProtoPriFilterEnable
    		INTEGER,
    	    wfProtoPriFilterState
    		INTEGER,
    	    wfProtoPriFilterCounter
    		Counter,
    	    wfProtoPriFilterDefinition
    		OCTET STRING,
    	    wfProtoPriFilterReserved
    		INTEGER,
    	    wfProtoPriFilterPeerAddr
    		IpAddress,
    	    wfProtoPriFilterClientId
    		INTEGER,
    	    wfProtoPriFilterRuleNumber
    		INTEGER,
    	    wfProtoPriFilterFragment
    		INTEGER,
    	    wfProtoPriFilterName
    		DisplayString
        }

    wfProtoPriFilterCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "create/delete the filter table"
        DEFVAL	{ created }
        ::= { wfProtoPriFilterEntry 1 }

    wfProtoPriFilterEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether or not the traffic filter rule should be used:
                enabled - activate the rule.
                disabled - inactivate the rule. "
        DEFVAL	{ enabled }
        ::= { wfProtoPriFilterEntry 2 }

    wfProtoPriFilterState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    error(2),
    		    inactive(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines the current State of the traffic filter:
                inactive - the rule is not in use.
                active - the rule is being used.
                error - the application detected an error in the rule. "
        DEFVAL	{ inactive }
        ::= { wfProtoPriFilterEntry 3 }

    wfProtoPriFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "counter to keep track how many times this rule got hit"
        ::= { wfProtoPriFilterEntry 4 }

    wfProtoPriFilterDefinition OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "octect string defining the filter rule"
        ::= { wfProtoPriFilterEntry 5 }

    wfProtoPriFilterReserved OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "reserved"
        ::= { wfProtoPriFilterEntry 6 }

    wfProtoPriFilterPeerAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "for DLS part of instance id"
        ::= { wfProtoPriFilterEntry 7 }

    wfProtoPriFilterClientId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "unique id for each Client provided by the Client"
        ::= { wfProtoPriFilterEntry 8 }

    wfProtoPriFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "rule number"
        ::= { wfProtoPriFilterEntry 9 }

    wfProtoPriFilterFragment OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "fragment number"
        ::= { wfProtoPriFilterEntry 10 }

    wfProtoPriFilterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "name of this rule, provided by the user"
        ::= { wfProtoPriFilterEntry 11 }

    END  -- Wellfleet-PROTOPRI-MIB
-- @(#)WSCCS p/mibs-rarp.mib 1.1 8/30/95
Wellfleet-RARP-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:46:46 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfRarpGroup
        FROM Wellfleet-COMMON-MIB;


    wfRarp		OBJECT IDENTIFIER ::= { wfRarpGroup 1 }

    wfRarpDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform a set operation on this
                object in order to create/delete RARP."
        DEFVAL	{ created }
        ::= { wfRarp 1 }

    wfRarpDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable Parameter indicates whether
                this RARP record is enabled or disabled."
        DEFVAL	{ enabled }
        ::= { wfRarp 2 }

    wfRarpNumNoMatches OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of RARP Requests dropped that failed Table Look UP"
        ::= { wfRarp 3 }

    wfRarpMapTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfRarpMapEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "List of configured RARP MAP Table entries"
        ::= { wfRarpGroup 2 }

    wfRarpMapEntry OBJECT-TYPE
        SYNTAX	WfRarpMapEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A description of an RARP map"
        INDEX	{ wfRarpMapMadr }
        ::= { wfRarpMapTable 1 }

    WfRarpMapEntry ::= SEQUENCE {
    	    wfRarpMapDelete
    		INTEGER,
    	    wfRarpMapMadr
    		OCTET STRING,
    	    wfRarpMapIpAddr
    		IpAddress
        }

    wfRarpMapDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this RARP Map record is to be deleted or created"
        DEFVAL	{ created }
        ::= { wfRarpMapEntry 1 }

    wfRarpMapMadr OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Mac Address in RARP Request pkts"
        ::= { wfRarpMapEntry 2 }

    wfRarpMapIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "IP Address of Requesting Station"
        ::= { wfRarpMapEntry 3 }

    wfRarpIntfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfRarpIntfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "List of configured RARP interfaces"
        ::= { wfRarpGroup 3 }

    wfRarpIntfEntry OBJECT-TYPE
        SYNTAX	WfRarpIntfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A description of an RARP interface"
        INDEX	{ wfRarpIntfCctno }
        ::= { wfRarpIntfTable 1 }

    WfRarpIntfEntry ::= SEQUENCE {
    	    wfRarpIntfDelete
    		INTEGER,
    	    wfRarpIntfDisable
    		INTEGER,
    	    wfRarpIntfCctno
    		INTEGER,
    	    wfRarpIntfIpAddr
    		IpAddress
        }

    wfRarpIntfDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this RARP intf record is to be deleted or created"
        DEFVAL	{ created }
        ::= { wfRarpIntfEntry 1 }

    wfRarpIntfDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this RARP intf record is to be enabled or disabled"
        DEFVAL	{ enabled }
        ::= { wfRarpIntfEntry 2 }

    wfRarpIntfCctno OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Which Circuit rarp should run on"
        ::= { wfRarpIntfEntry 3 }

    wfRarpIntfIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "RARP Server's IP Address on this circuit"
        ::= { wfRarpIntfEntry 4 }

    END  -- Wellfleet-RARP-MIB
-- @(#)WSCCS c/mibs-rf.mib 1.1 8/30/95
Wellfleet-RF-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:46:51 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfIpGroup
        FROM Wellfleet-COMMON-MIB;


    wfIpRfRipImportTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpRfRipImportEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The list of Rip Import Route Filter Rules in IP"
        ::= { wfIpGroup 8 }

    wfIpRfRipImportEntry OBJECT-TYPE
        SYNTAX	WfIpRfRipImportEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Rip Import Rule Table"
        INDEX	{ wfIpRfRipImportAddress,
    		  wfIpRfRipImportMask,
    		  wfIpRfRipImportRipGateway,
    		  wfIpRfRipImportRipInterface }
        ::= { wfIpRfRipImportTable 1 }

    WfIpRfRipImportEntry ::= SEQUENCE {
    	    wfIpRfRipImportCreate
    		INTEGER,
    	    wfIpRfRipImportEnable
    		INTEGER,
    	    wfIpRfRipImportAddress
    		IpAddress,
    	    wfIpRfRipImportMask
    		IpAddress,
    	    wfIpRfRipImportAction
    		INTEGER,
    	    wfIpRfRipImportPreference
    		INTEGER,
    	    wfIpRfRipImportRipGateway
    		IpAddress,
    	    wfIpRfRipImportRipInterface
    		IpAddress,
    	    wfIpRfRipImportApplyMask
    		IpAddress
        }

    wfIpRfRipImportCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete this Rule."
        DEFVAL	{ create }
        ::= { wfIpRfRipImportEntry 1 }

    wfIpRfRipImportEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this Rule."
        DEFVAL	{ enable }
        ::= { wfIpRfRipImportEntry 2 }

    wfIpRfRipImportAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address to which this filter applies"
        ::= { wfIpRfRipImportEntry 3 }

    wfIpRfRipImportMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Mask to which this filter applies. When combined
                with the Address, a range is specified for application
                of this rule"
        ::= { wfIpRfRipImportEntry 4 }

    wfIpRfRipImportAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    accept(1),
    		    ignore(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Action of this Filter"
        DEFVAL	{ accept }
        ::= { wfIpRfRipImportEntry 5 }

    wfIpRfRipImportPreference OBJECT-TYPE
        SYNTAX	INTEGER(0..16)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Preference associated with this filter - only valid if accept"
        DEFVAL	{ 1 }
        ::= { wfIpRfRipImportEntry 6 }

    wfIpRfRipImportRipGateway OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The RIP Gateway to be concerned with"
        ::= { wfIpRfRipImportEntry 7 }

    wfIpRfRipImportRipInterface OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP Network Interface to be concerned with"
        ::= { wfIpRfRipImportEntry 8 }

    wfIpRfRipImportApplyMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Mask to apply to this route learned instead of the default.
                NULL means to apply the normal filter"
        ::= { wfIpRfRipImportEntry 9 }

    wfIpRfRipExportTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpRfRipExportEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The list of Rip Export Route Filter Rules in IP"
        ::= { wfIpGroup 9 }

    wfIpRfRipExportEntry OBJECT-TYPE
        SYNTAX	WfIpRfRipExportEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Rip Export Rule Table"
        INDEX	{ wfIpRfRipExportAddress,
    		  wfIpRfRipExportMask,
    		  wfIpRfRipExportFromProtocol,
    		  wfIpRfRipExportInterface }
        ::= { wfIpRfRipExportTable 1 }

    WfIpRfRipExportEntry ::= SEQUENCE {
    	    wfIpRfRipExportCreate
    		INTEGER,
    	    wfIpRfRipExportEnable
    		INTEGER,
    	    wfIpRfRipExportAddress
    		IpAddress,
    	    wfIpRfRipExportMask
    		IpAddress,
    	    wfIpRfRipExportFromProtocol
    		INTEGER,
    	    wfIpRfRipExportAction
    		INTEGER,
    	    wfIpRfRipExportInterface
    		IpAddress,
    	    wfIpRfRipExportRipMetric
    		INTEGER
        }

    wfIpRfRipExportCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete this Rule."
        DEFVAL	{ create }
        ::= { wfIpRfRipExportEntry 1 }

    wfIpRfRipExportEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this Rule."
        DEFVAL	{ enable }
        ::= { wfIpRfRipExportEntry 2 }

    wfIpRfRipExportAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address to which this filter applies"
        ::= { wfIpRfRipExportEntry 3 }

    wfIpRfRipExportMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Mask for the Address Above. When combined
                with the Address, a range is specified for application
                of this filter rule"
        ::= { wfIpRfRipExportEntry 4 }

    wfIpRfRipExportFromProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rip(1),
    		    egp(2),
    		    ospf(3),
    		    direct(4),
    		    static(5),
    		    bgp3(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The protocol from which this Information is derived"
        ::= { wfIpRfRipExportEntry 5 }

    wfIpRfRipExportAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    propa(2),
    		    ignore(3),
    		    aggregate(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The action of this export filter;
                if IP_RF_RIP_EXP_ACTION_AGGREGATE action, the default
                route, 0.0.0.0, is advertised instead networks that match
                this filter"
        DEFVAL	{ propa }
        ::= { wfIpRfRipExportEntry 6 }

    wfIpRfRipExportInterface OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The optional outbound interface on which to apply this filter"
        ::= { wfIpRfRipExportEntry 7 }

    wfIpRfRipExportRipMetric OBJECT-TYPE
        SYNTAX	INTEGER(0..15)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The optional export RIP metric to apply to this filter.
                Zero means: use the route's actual cost. Only valid for propagate"
        ::= { wfIpRfRipExportEntry 8 }

    wfIpRfOspfImportTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpRfOspfImportEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The list of OSPF Import Route Filter Rules in IP"
        ::= { wfIpGroup 10 }

    wfIpRfOspfImportEntry OBJECT-TYPE
        SYNTAX	WfIpRfOspfImportEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the OSPF Import Route Filter Table"
        INDEX	{ wfIpRfOspfImportAddress,
    		  wfIpRfOspfImportMask,
    		  wfIpRfOspfImportType,
    		  wfIpRfOspfImportTag }
        ::= { wfIpRfOspfImportTable 1 }

    WfIpRfOspfImportEntry ::= SEQUENCE {
    	    wfIpRfOspfImportCreate
    		INTEGER,
    	    wfIpRfOspfImportEnable
    		INTEGER,
    	    wfIpRfOspfImportAddress
    		IpAddress,
    	    wfIpRfOspfImportMask
    		IpAddress,
    	    wfIpRfOspfImportAction
    		INTEGER,
    	    wfIpRfOspfImportPreference
    		INTEGER,
    	    wfIpRfOspfImportType
    		INTEGER,
    	    wfIpRfOspfImportTag
    		Gauge
        }

    wfIpRfOspfImportCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete this Rule."
        DEFVAL	{ create }
        ::= { wfIpRfOspfImportEntry 1 }

    wfIpRfOspfImportEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this Rule."
        DEFVAL	{ enable }
        ::= { wfIpRfOspfImportEntry 2 }

    wfIpRfOspfImportAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP Address to which this filter applies"
        ::= { wfIpRfOspfImportEntry 3 }

    wfIpRfOspfImportMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Mask to which this filter applies. When combined
                with the Address, a range is specified for application
                of this rule"
        ::= { wfIpRfOspfImportEntry 4 }

    wfIpRfOspfImportAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    accept(1),
    		    ignore(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Action of this Filter"
        DEFVAL	{ accept }
        ::= { wfIpRfOspfImportEntry 5 }

    wfIpRfOspfImportPreference OBJECT-TYPE
        SYNTAX	INTEGER(0..16)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Preference associated with this filter - only valid if accept"
        DEFVAL	{ 1 }
        ::= { wfIpRfOspfImportEntry 6 }

    wfIpRfOspfImportType OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The OSPF route Type to be concerned with. The valid values are null
                (any route type), 1 (OSPF external type 1), and 2 (OSPF external
                type 2)."
        ::= { wfIpRfOspfImportEntry 7 }

    wfIpRfOspfImportTag OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The OSPF Tag to be concerned with"
        ::= { wfIpRfOspfImportEntry 8 }

    wfIpRfOspfExportTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpRfOspfExportEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The list of OSPF Export Route Filter Rules in IP"
        ::= { wfIpGroup 11 }

    wfIpRfOspfExportEntry OBJECT-TYPE
        SYNTAX	WfIpRfOspfExportEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the OSPF Export Route Filter Table"
        INDEX	{ wfIpRfOspfExportAddress,
    		  wfIpRfOspfExportMask,
    		  wfIpRfOspfExportFromProtocol }
        ::= { wfIpRfOspfExportTable 1 }

    WfIpRfOspfExportEntry ::= SEQUENCE {
    	    wfIpRfOspfExportCreate
    		INTEGER,
    	    wfIpRfOspfExportEnable
    		INTEGER,
    	    wfIpRfOspfExportAddress
    		IpAddress,
    	    wfIpRfOspfExportMask
    		IpAddress,
    	    wfIpRfOspfExportFromProtocol
    		INTEGER,
    	    wfIpRfOspfExportAction
    		INTEGER,
    	    wfIpRfOspfExportType
    		INTEGER,
    	    wfIpRfOspfExportTag
    		Gauge,
    	    wfIpRfOspfExportAutoTag
    		INTEGER
        }

    wfIpRfOspfExportCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete this Rule."
        DEFVAL	{ create }
        ::= { wfIpRfOspfExportEntry 1 }

    wfIpRfOspfExportEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this Rule."
        DEFVAL	{ enable }
        ::= { wfIpRfOspfExportEntry 2 }

    wfIpRfOspfExportAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address to which this filter applies"
        ::= { wfIpRfOspfExportEntry 3 }

    wfIpRfOspfExportMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Mask for the Address Above. When combined
                with the Address, a range is specified for application
                of this filter rule"
        ::= { wfIpRfOspfExportEntry 4 }

    wfIpRfOspfExportFromProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rip(1),
    		    egp(2),
    		    ospf(3),
    		    direct(4),
    		    static(5),
    		    bgp3(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The protocol from which this Information is derived"
        ::= { wfIpRfOspfExportEntry 5 }

    wfIpRfOspfExportAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    propa(2),
    		    ignore(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The action of this export filter"
        DEFVAL	{ propa }
        ::= { wfIpRfOspfExportEntry 6 }

    wfIpRfOspfExportType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    type1(1),
    		    type2(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The ospf type to use when this filter matches"
        DEFVAL	{ type1 }
        ::= { wfIpRfOspfExportEntry 7 }

    wfIpRfOspfExportTag OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The ospf tag to use when this filter matches"
        ::= { wfIpRfOspfExportEntry 8 }

    wfIpRfOspfExportAutoTag OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "BGP/OSPF automatic tag generation: if enabled, a tag will be
                generated according to the criteria in RFC 1364.  Only valid if
                wfIpRfOspfExportType is set.  If enabled, wfIpRfOspfExportTag
                is ignored."
        DEFVAL	{ disable }
        ::= { wfIpRfOspfExportEntry 9 }

    wfIpRfEgpImportTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpRfEgpImportEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The list of Egp Import Route Filter Rules in IP"
        ::= { wfIpGroup 12 }

    wfIpRfEgpImportEntry OBJECT-TYPE
        SYNTAX	WfIpRfEgpImportEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Egp Import Rule Table"
        INDEX	{ wfIpRfEgpImportAddress,
    		  wfIpRfEgpImportPeer,
    		  wfIpRfEgpImportAs,
    		  wfIpRfEgpImportGateway }
        ::= { wfIpRfEgpImportTable 1 }

    WfIpRfEgpImportEntry ::= SEQUENCE {
    	    wfIpRfEgpImportCreate
    		INTEGER,
    	    wfIpRfEgpImportEnable
    		INTEGER,
    	    wfIpRfEgpImportAddress
    		IpAddress,
    	    wfIpRfEgpImportMask
    		IpAddress,
    	    wfIpRfEgpImportAction
    		INTEGER,
    	    wfIpRfEgpImportPreference
    		INTEGER,
    	    wfIpRfEgpImportPeer
    		IpAddress,
    	    wfIpRfEgpImportAs
    		INTEGER,
    	    wfIpRfEgpImportGateway
    		IpAddress
        }

    wfIpRfEgpImportCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created. Users perform an SNMP
                SET operation on this object in order to create/delete this Rule."
        DEFVAL	{ create }
        ::= { wfIpRfEgpImportEntry 1 }

    wfIpRfEgpImportEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled. Users perform an SNMP
                SET operation on this object in order to enable/disable this Rule."
        DEFVAL	{ enable }
        ::= { wfIpRfEgpImportEntry 2 }

    wfIpRfEgpImportAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The advertised network to which this filter applies"
        ::= { wfIpRfEgpImportEntry 3 }

    wfIpRfEgpImportMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Mask of the Address to which this filter applies."
        ::= { wfIpRfEgpImportEntry 4 }

    wfIpRfEgpImportAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    accept(1),
    		    ignore(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Action of this Filter"
        DEFVAL	{ accept }
        ::= { wfIpRfEgpImportEntry 5 }

    wfIpRfEgpImportPreference OBJECT-TYPE
        SYNTAX	INTEGER(0..16)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Preference associated with this filter - only valid if accept"
        DEFVAL	{ 1 }
        ::= { wfIpRfEgpImportEntry 6 }

    wfIpRfEgpImportPeer OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Egp Peer to be to be concerned with"
        ::= { wfIpRfEgpImportEntry 7 }

    wfIpRfEgpImportAs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Autonomous System number to be concerned with"
        ::= { wfIpRfEgpImportEntry 8 }

    wfIpRfEgpImportGateway OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The EGP gateway to be concerned with"
        ::= { wfIpRfEgpImportEntry 9 }

    wfIpRfEgpExportTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpRfEgpExportEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The list of Egp Export Route Filter Rules in IP"
        ::= { wfIpGroup 13 }

    wfIpRfEgpExportEntry OBJECT-TYPE
        SYNTAX	WfIpRfEgpExportEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Egp Export Rule Table"
        INDEX	{ wfIpRfEgpExportAddress,
    		  wfIpRfEgpExportMask,
    		  wfIpRfEgpExportFromProtocol,
    		  wfIpRfEgpExportPeer,
    		  wfIpRfEgpExportOspfType,
    		  wfIpRfEgpExportOspfTag }
        ::= { wfIpRfEgpExportTable 1 }

    WfIpRfEgpExportEntry ::= SEQUENCE {
    	    wfIpRfEgpExportCreate
    		INTEGER,
    	    wfIpRfEgpExportEnable
    		INTEGER,
    	    wfIpRfEgpExportAddress
    		IpAddress,
    	    wfIpRfEgpExportMask
    		IpAddress,
    	    wfIpRfEgpExportFromProtocol
    		INTEGER,
    	    wfIpRfEgpExportAction
    		INTEGER,
    	    wfIpRfEgpExportPeer
    		IpAddress,
    	    wfIpRfEgpExportOspfType
    		INTEGER,
    	    wfIpRfEgpExportOspfTag
    		INTEGER,
    	    wfIpRfEgpExportInterface
    		IpAddress,
    	    wfIpRfEgpExportMetric
    		INTEGER
        }

    wfIpRfEgpExportCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created. Users perform an SNMP
                SET operation on this object in order to create/delete this Rule."
        DEFVAL	{ create }
        ::= { wfIpRfEgpExportEntry 1 }

    wfIpRfEgpExportEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled. Users perform an SNMP
                SET operation on this object in order to enable/disable this Rule."
        DEFVAL	{ enable }
        ::= { wfIpRfEgpExportEntry 2 }

    wfIpRfEgpExportAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The advertised network to which this filter applies"
        ::= { wfIpRfEgpExportEntry 3 }

    wfIpRfEgpExportMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Mask of the Address to which this filter applies."
        ::= { wfIpRfEgpExportEntry 4 }

    wfIpRfEgpExportFromProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rip(1),
    		    egp(2),
    		    ospf(3),
    		    direct(4),
    		    static(5),
    		    bgp3(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The protocol from which this Information is derived"
        ::= { wfIpRfEgpExportEntry 5 }

    wfIpRfEgpExportAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    propa(2),
    		    ignore(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The action of this export filter"
        DEFVAL	{ propa }
        ::= { wfIpRfEgpExportEntry 6 }

    wfIpRfEgpExportPeer OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Egp Peer to be to be concerned with"
        ::= { wfIpRfEgpExportEntry 7 }

    wfIpRfEgpExportOspfType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ospfexttype1(1),
    		    ospfexttype2(2),
    		    ospfinttype(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The type of route being filtered. This field is only valid if the
                wfIpRfEgpExportFromProtocol is OSPF. Otherwise, the field is 0."
        ::= { wfIpRfEgpExportEntry 8 }

    wfIpRfEgpExportOspfTag OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The tag of the route being filtered. This field is only valid if
                the wfIpRfEgpExportFromProtocol is OSPF. Otherwise, this field is 0."
        ::= { wfIpRfEgpExportEntry 9 }

    wfIpRfEgpExportInterface OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The optional outbound interface on which to apply this filter"
        ::= { wfIpRfEgpExportEntry 10 }

    wfIpRfEgpExportMetric OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The optional export Egp metric to apply to this filter. Zero means:
                use the route's actual cost. Only valid for propagate "
        ::= { wfIpRfEgpExportEntry 11 }

    wfIpRfBgp3ImportTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpRfBgp3ImportEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The table of BGP-3 Import Route Filter Rules"
        ::= { wfIpGroup 14 }

    wfIpRfBgp3ImportEntry OBJECT-TYPE
        SYNTAX	WfIpRfBgp3ImportEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the BGP-3 Import Rule Table"
        INDEX	{ wfIpRfBgp3ImportAddress,
    		  wfIpRfBgp3ImportMask,
    		  wfIpRfBgp3ImportPeerAs,
    		  wfIpRfBgp3ImportPeerAddress,
    		  wfIpRfBgp3ImportOrigAs,
    		  wfIpRfBgp3ImportRouteOrigin }
        ::= { wfIpRfBgp3ImportTable 1 }

    WfIpRfBgp3ImportEntry ::= SEQUENCE {
    	    wfIpRfBgp3ImportCreate
    		INTEGER,
    	    wfIpRfBgp3ImportEnable
    		INTEGER,
    	    wfIpRfBgp3ImportAddress
    		IpAddress,
    	    wfIpRfBgp3ImportMask
    		IpAddress,
    	    wfIpRfBgp3ImportAction
    		INTEGER,
    	    wfIpRfBgp3ImportPreference
    		INTEGER,
    	    wfIpRfBgp3ImportPeerAs
    		INTEGER,
    	    wfIpRfBgp3ImportPeerAddress
    		IpAddress,
    	    wfIpRfBgp3ImportOrigAs
    		INTEGER,
    	    wfIpRfBgp3ImportRouteOrigin
    		INTEGER,
    	    wfIpRfBgp3ImportBgp3Preference
    		Gauge
        }

    wfIpRfBgp3ImportCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. if set to delete, the rule is removed."
        DEFVAL	{ create }
        ::= { wfIpRfBgp3ImportEntry 1 }

    wfIpRfBgp3ImportEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. controls whether the rule is enabled
                or disabled."
        DEFVAL	{ enable }
        ::= { wfIpRfBgp3ImportEntry 2 }

    wfIpRfBgp3ImportAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The advertised network to which this filter applies. Zero implies
                `all networks' or the default route, based on
                wfIpRfBgp3ImportMask."
        ::= { wfIpRfBgp3ImportEntry 3 }

    wfIpRfBgp3ImportMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The mask applied to wfIpRfBgp3ImportAddress. If zero, this filter
                applies to all networks. If the address is zero and this parameter
                is 255.255.255.255, this filter applies to the default route."
        ::= { wfIpRfBgp3ImportEntry 4 }

    wfIpRfBgp3ImportAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    accept(1),
    		    ignore(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Action of this Filter"
        DEFVAL	{ ignore }
        ::= { wfIpRfBgp3ImportEntry 5 }

    wfIpRfBgp3ImportPreference OBJECT-TYPE
        SYNTAX	INTEGER(0..16)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Preference associated with this filter - only valid if accept"
        DEFVAL	{ 1 }
        ::= { wfIpRfBgp3ImportEntry 6 }

    wfIpRfBgp3ImportPeerAs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The BGP-3 Peer's AS number (or zero if `any AS')"
        ::= { wfIpRfBgp3ImportEntry 7 }

    wfIpRfBgp3ImportPeerAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address (not the peer ID) of the peer that this advertisement
                was received from (zero if `any peer')"
        ::= { wfIpRfBgp3ImportEntry 8 }

    wfIpRfBgp3ImportOrigAs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The AS number of the BGP-3 gateway that originated the route
                (or zero for `any AS')"
        ::= { wfIpRfBgp3ImportEntry 9 }

    wfIpRfBgp3ImportRouteOrigin OBJECT-TYPE
        SYNTAX	INTEGER {
    		    igp(1),
    		    egp(2),
    		    incomplete(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A value for the ORIGIN path attribute (or zero if not applicable)"
        ::= { wfIpRfBgp3ImportEntry 10 }

    wfIpRfBgp3ImportBgp3Preference OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Preference associated with this filter for comparison to
                other BGP routes only - only valid if accept"
        DEFVAL	{ 1 }
        ::= { wfIpRfBgp3ImportEntry 11 }

    wfIpRfBgp3ExportTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfIpRfBgp3ExportEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The table of BGP-3 Export Route Filter Rules"
        ::= { wfIpGroup 15 }

    wfIpRfBgp3ExportEntry OBJECT-TYPE
        SYNTAX	WfIpRfBgp3ExportEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the BGP-3 Export Rule Table"
        INDEX	{ wfIpRfBgp3ExportAddress,
    		  wfIpRfBgp3ExportMask,
    		  wfIpRfBgp3ExportFromProtocol,
    		  wfIpRfBgp3ExportPeerAs,
    		  wfIpRfBgp3ExportPeerAddress,
    		  wfIpRfBgp3ExportOspfType,
    		  wfIpRfBgp3ExportOspfTag }
        ::= { wfIpRfBgp3ExportTable 1 }

    WfIpRfBgp3ExportEntry ::= SEQUENCE {
    	    wfIpRfBgp3ExportCreate
    		INTEGER,
    	    wfIpRfBgp3ExportEnable
    		INTEGER,
    	    wfIpRfBgp3ExportAddress
    		IpAddress,
    	    wfIpRfBgp3ExportMask
    		IpAddress,
    	    wfIpRfBgp3ExportFromProtocol
    		INTEGER,
    	    wfIpRfBgp3ExportAction
    		INTEGER,
    	    wfIpRfBgp3ExportPeerAs
    		INTEGER,
    	    wfIpRfBgp3ExportPeerAddress
    		IpAddress,
    	    wfIpRfBgp3ExportOspfType
    		INTEGER,
    	    wfIpRfBgp3ExportOspfTag
    		INTEGER,
    	    wfIpRfBgp3ExportUseMetric
    		INTEGER,
    	    wfIpRfBgp3ExportInterAsMetric
    		INTEGER,
    	    wfIpRfBgp3ExportOrigin
    		INTEGER,
    	    wfIpRfBgp3ExportNeighAs
    		INTEGER
        }

    wfIpRfBgp3ExportCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete: if set to delete, the rule is removed"
        DEFVAL	{ create }
        ::= { wfIpRfBgp3ExportEntry 1 }

    wfIpRfBgp3ExportEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable: controls whether the rule is enabled or disabled"
        DEFVAL	{ enable }
        ::= { wfIpRfBgp3ExportEntry 2 }

    wfIpRfBgp3ExportAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The advertised network to which this filter applies. Zero implies
                `all networks' or the default route, based on
                 wfIpRfBgp3ExportMask."
        ::= { wfIpRfBgp3ExportEntry 3 }

    wfIpRfBgp3ExportMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The mask applied to wfIpRfBgp3ExportAddress. If zero, this filter
                applies to all networks. If the address is zero and this parameter
                is 255.255.255.255, this filter applies to the default route."
        ::= { wfIpRfBgp3ExportEntry 4 }

    wfIpRfBgp3ExportFromProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rip(1),
    		    egp(2),
    		    ospf(3),
    		    direct(4),
    		    static(5),
    		    bgp3(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The protocol from which this Information is derived"
        ::= { wfIpRfBgp3ExportEntry 5 }

    wfIpRfBgp3ExportAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    propa(2),
    		    ignore(3),
    		    aggregate(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The action of this export filter;
                if IP_RF_BGP3_EXP_ACTION_AGGREGATE action, the default
                route, 0.0.0.0, is advertised instead networks that match
                this filter"
        DEFVAL	{ ignore }
        ::= { wfIpRfBgp3ExportEntry 6 }

    wfIpRfBgp3ExportPeerAs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The AS number to which the network advertisement is going (zero
                if `any AS')"
        ::= { wfIpRfBgp3ExportEntry 7 }

    wfIpRfBgp3ExportPeerAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address (not the peer ID) of the peer that this advertisement
                is going to (zero if `any peer')"
        ::= { wfIpRfBgp3ExportEntry 8 }

    wfIpRfBgp3ExportOspfType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ospfexttype1(1),
    		    ospfexttype2(2),
    		    ospfinttype(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The type of route being filtered. This field is only valid if the
                wfIpRfEgpExportFromProtocol is OSPF. Otherwise, the field is 0."
        ::= { wfIpRfBgp3ExportEntry 9 }

    wfIpRfBgp3ExportOspfTag OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The OSPF tag of the route being filtered. This field is only valid
                if the wfIpRfBgp3ExportFromProtocol is OSPF and
                wfIpRfBgp3ExportOspfType is external type 1 or 2. Otherwise,
                this field is 0."
        ::= { wfIpRfBgp3ExportEntry 10 }

    wfIpRfBgp3ExportUseMetric OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    specified(2),
    		    originating(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Determines whether or not an INTER_AS_METRIC will be advertised
                for the associated network(s).  none (1) indicates that no
                metric will be advertised.  specified (2) indicates that the
                value in wfIpRfBgp3ExportInterAsMetric will be used.
                originating (3) indicates that the metric from the originating
                protocol will be used.  Only valid for propagate."
        DEFVAL	{ none }
        ::= { wfIpRfBgp3ExportEntry 11 }

    wfIpRfBgp3ExportInterAsMetric OBJECT-TYPE
        SYNTAX	INTEGER(0..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If wfIpRfBgp3ExportUseMetric is set to specified (2),
                this is the value that will be used for the INTER_AS_METRIC.
                Only valid for propagate."
        ::= { wfIpRfBgp3ExportEntry 12 }

    wfIpRfBgp3ExportOrigin OBJECT-TYPE
        SYNTAX	INTEGER {
    		    igp(1),
    		    egp(2),
    		    incomplete(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The value to use for the ORIGIN path attribute when advertising
                this route (zero means `do according to default'). Only valid for
                propagate action. Only valid if route origin is RIP or STATIC
                (ignored otherwise)."
        ::= { wfIpRfBgp3ExportEntry 13 }

    wfIpRfBgp3ExportNeighAs OBJECT-TYPE
        SYNTAX	INTEGER(0..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If action is propagate, route origin is RIP or STATIC, and
                ExportOrigin is EGP, this AS number is used as the EGP neighbor
                AS number when constructing the AS-PATH (ignored otherwise)."
        ::= { wfIpRfBgp3ExportEntry 14 }

    END  -- Wellfleet-RF-MIB
-- @(#)WSCCS o/mibs-rfc1213.mib 1.1 8/30/95
-- Changes to rfc1213 (MIB-II):
--      No changes needed.


          RFC1213-MIB DEFINITIONS ::= BEGIN

          IMPORTS
                  mgmt, NetworkAddress, IpAddress, Counter, Gauge,
                          TimeTicks
                      FROM RFC1155-SMI
                  OBJECT-TYPE
                          FROM RFC-1212;

          --  This MIB module uses the extended OBJECT-TYPE macro as
          --  defined in [14];


          --  MIB-II (same prefix as MIB-I)

          mib-2      OBJECT IDENTIFIER ::= { mgmt 1 }

          -- textual conventions

          DisplayString ::=
              OCTET STRING
          -- This data type is used to model textual information taken
          -- from the NVT ASCII character set.  By convention, objects
          -- with this syntax are declared as having
          --
          --      SIZE (0..255)

          PhysAddress ::=
              OCTET STRING
          -- This data type is used to model media addresses.  For many
          -- types of media, this will be in a binary representation.
          -- For example, an ethernet address would be represented as
          -- a string of 6 octets.


          -- groups in MIB-II

          system       OBJECT IDENTIFIER ::= { mib-2 1 }

          interfaces   OBJECT IDENTIFIER ::= { mib-2 2 }

          at           OBJECT IDENTIFIER ::= { mib-2 3 }

          ip           OBJECT IDENTIFIER ::= { mib-2 4 }

          icmp         OBJECT IDENTIFIER ::= { mib-2 5 }

          tcp          OBJECT IDENTIFIER ::= { mib-2 6 }

          udp          OBJECT IDENTIFIER ::= { mib-2 7 }

          egp          OBJECT IDENTIFIER ::= { mib-2 8 }

          -- historical (some say hysterical)
          -- cmot      OBJECT IDENTIFIER ::= { mib-2 9 }

          transmission OBJECT IDENTIFIER ::= { mib-2 10 }

          snmp         OBJECT IDENTIFIER ::= { mib-2 11 }


          -- the System group

          -- Implementation of the System group is mandatory for all
          -- systems.  If an agent is not configured to have a value
          -- for any of these variables, a string of length 0 is
          -- returned.

          sysDescr OBJECT-TYPE
              SYNTAX  DisplayString (SIZE (0..255))
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A textual description of the entity.  This value
                      should include the full name and version
                      identification of the system's hardware type,
                      software operating-system, and networking
                      software.  It is mandatory that this only contain
                      printable ASCII characters."
              ::= { system 1 }

          sysObjectID OBJECT-TYPE
              SYNTAX  OBJECT IDENTIFIER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The vendor's authoritative identification of the
                      network management subsystem contained in the
                      entity.  This value is allocated within the SMI
                      enterprises subtree (1.3.6.1.4.1) and provides an
                      easy and unambiguous means for determining `what
                      kind of box' is being managed.  For example, if
                      vendor `Flintstones, Inc.' was assigned the
                      subtree 1.3.6.1.4.1.4242, it could assign the
                      identifier 1.3.6.1.4.1.4242.1.1 to its `Fred
                      Router'."
              ::= { system 2 }

          sysUpTime OBJECT-TYPE
              SYNTAX  TimeTicks
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The time (in hundredths of a second) since the
                      network management portion of the system was last
                      re-initialized."
              ::= { system 3 }

          sysContact OBJECT-TYPE
              SYNTAX  DisplayString (SIZE (0..255))
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The textual identification of the contact person
                      for this managed node, together with information
                      on how to contact this person."
              ::= { system 4 }

          sysName OBJECT-TYPE
              SYNTAX  DisplayString (SIZE (0..255))
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "An administratively-assigned name for this
                      managed node.  By convention, this is the node's
                      fully-qualified domain name."
              ::= { system 5 }

          sysLocation OBJECT-TYPE
              SYNTAX  DisplayString (SIZE (0..255))
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The physical location of this node (e.g.,
                      `telephone closet, 3rd floor')."
              ::= { system 6 }

          sysServices OBJECT-TYPE
              SYNTAX  INTEGER (0..127)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A value which indicates the set of services that
                      this entity primarily offers.

                      The value is a sum.  This sum initially takes the
                      value zero, Then, for each layer, L, in the range
                      1 through 7, that this node performs transactions
                      for, 2 raised to (L - 1) is added to the sum.  For
                      example, a node which performs primarily routing
                      functions would have a value of 4 (2^(3-1)).  In
                      contrast, a node which is a host offering
                      application services would have a value of 72
                      (2^(4-1) + 2^(7-1)).  Note that in the context of
                      the Internet suite of protocols, values should be
                      calculated accordingly:

                           layer  functionality
                               1  physical (e.g., repeaters)
                               2  datalink/subnetwork (e.g., bridges)
                               3  internet (e.g., IP gateways)
                               4  end-to-end  (e.g., IP hosts)
                               7  applications (e.g., mail relays)

                      For systems including OSI protocols, layers 5 and
                      6 may also be counted."
              ::= { system 7 }


          -- the Interfaces group

          -- Implementation of the Interfaces group is mandatory for
          -- all systems.

          ifNumber OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of network interfaces (regardless of
                      their current state) present on this system."
              ::= { interfaces 1 }


          -- the Interfaces table

          -- The Interfaces table contains information on the entity's
          -- interfaces.  Each interface is thought of as being
          -- attached to a `subnetwork'.  Note that this term should
          -- not be confused with `subnet' which refers to an
          -- addressing partitioning scheme used in the Internet suite
          -- of protocols.

          ifTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF IfEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A list of interface entries.  The number of
                      entries is given by the value of ifNumber."
              ::= { interfaces 2 }

          ifEntry OBJECT-TYPE
              SYNTAX  IfEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "An interface entry containing objects at the
                      subnetwork layer and below for a particular
                      interface."
              INDEX   { ifIndex }
              ::= { ifTable 1 }

          IfEntry ::=
              SEQUENCE {
                  ifIndex
                      INTEGER,
                  ifDescr
                      DisplayString,
                  ifType
                      INTEGER,
                  ifMtu
                      INTEGER,
                  ifSpeed
                      Gauge,
                  ifPhysAddress
                      PhysAddress,
                  ifAdminStatus
                      INTEGER,
                  ifOperStatus
                      INTEGER,
                  ifLastChange
                      TimeTicks,
                  ifInOctets
                      Counter,
                  ifInUcastPkts
                      Counter,
                  ifInNUcastPkts
                      Counter,
                  ifInDiscards
                      Counter,
                  ifInErrors
                      Counter,
                  ifInUnknownProtos
                      Counter,
                  ifOutOctets
                      Counter,
                  ifOutUcastPkts
                      Counter,
                  ifOutNUcastPkts
                      Counter,
                  ifOutDiscards
                      Counter,
                  ifOutErrors
                      Counter,
                  ifOutQLen
                      Gauge,
                  ifSpecific
                      OBJECT IDENTIFIER
              }

          ifIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A unique value for each interface.  Its value
                      ranges between 1 and the value of ifNumber.  The
                      value for each interface must remain constant at
                      least from one re-initialization of the entity's
                      network management system to the next re-
                      initialization."
              ::= { ifEntry 1 }

          ifDescr OBJECT-TYPE
              SYNTAX  DisplayString (SIZE (0..255))
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A textual string containing information about the
                      interface.  This string should include the name of
                      the manufacturer, the product name and the version
                      of the hardware interface."
              ::= { ifEntry 2 }

          ifType OBJECT-TYPE
              SYNTAX  INTEGER {
                          other(1),          -- none of the following
                          regular1822(2),
                          hdh1822(3),
                          ddn-x25(4),
                          rfc877-x25(5),
                          ethernet-csmacd(6),
                          iso88023-csmacd(7),
                          iso88024-tokenBus(8),
                          iso88025-tokenRing(9),
                          iso88026-man(10),
                          starLan(11),
                          proteon-10Mbit(12),
                          proteon-80Mbit(13),
                          hyperchannel(14),
                          fddi(15),
                          lapb(16),
                          sdlc(17),
                          ds1(18),           -- T-1
                          e1(19),            -- european equiv. of T-1
                          basicISDN(20),
                          primaryISDN(21),   -- proprietary serial
                          propPointToPointSerial(22),
                          ppp(23),
                          softwareLoopback(24),
                          eon(25),            -- CLNP over IP [11]
                          ethernet-3Mbit(26),
                          nsip(27),           -- XNS over IP
                          slip(28),           -- generic SLIP
                          ultra(29),          -- ULTRA technologies
                          ds3(30),            -- T-3
                          sip(31),            -- SMDS
                          frame-relay(32)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The type of interface, distinguished according to
                      the physical/link protocol(s) immediately `below'
                      the network layer in the protocol stack."
              ::= { ifEntry 3 }

          ifMtu OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The size of the largest datagram which can be
                      sent/received on the interface, specified in
                      octets.  For interfaces that are used for
                      transmitting network datagrams, this is the size
                      of the largest network datagram that can be sent
                      on the interface."
              ::= { ifEntry 4 }

          ifSpeed OBJECT-TYPE
              SYNTAX  Gauge
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "An estimate of the interface's current bandwidth
                      in bits per second.  For interfaces which do not
                      vary in bandwidth or for those where no accurate
                      estimation can be made, this object should contain
                      the nominal bandwidth."
              ::= { ifEntry 5 }

          ifPhysAddress OBJECT-TYPE
              SYNTAX  PhysAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The interface's address at the protocol layer
                      immediately `below' the network layer in the
                      protocol stack.  For interfaces which do not have
                      such an address (e.g., a serial line), this object
                      should contain an octet string of zero length."
              ::= { ifEntry 6 }

          ifAdminStatus OBJECT-TYPE
              SYNTAX  INTEGER {
                          up(1),       -- ready to pass packets
                          down(2),
                          testing(3)   -- in some test mode
                      }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The desired state of the interface.  The
                      testing(3) state indicates that no operational
                      packets can be passed."
              ::= { ifEntry 7 }

          ifOperStatus OBJECT-TYPE
              SYNTAX  INTEGER {
                          up(1),       -- ready to pass packets
                          down(2),
                          testing(3)   -- in some test mode
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The current operational state of the interface.
                      The testing(3) state indicates that no operational
                      packets can be passed."
              ::= { ifEntry 8 }

          ifLastChange OBJECT-TYPE
              SYNTAX  TimeTicks
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of sysUpTime at the time the interface
                      entered its current operational state.  If the
                      current state was entered prior to the last re-
                      initialization of the local network management
                      subsystem, then this object contains a zero
                      value."
              ::= { ifEntry 9 }

          ifInOctets OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of octets received on the
                      interface, including framing characters."
              ::= { ifEntry 10 }

          ifInUcastPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of subnetwork-unicast packets
                      delivered to a higher-layer protocol."
              ::= { ifEntry 11 }

          ifInNUcastPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of non-unicast (i.e., subnetwork-
                      broadcast or subnetwork-multicast) packets
                      delivered to a higher-layer protocol."
              ::= { ifEntry 12 }

          ifInDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of inbound packets which were chosen
                      to be discarded even though no errors had been
                      detected to prevent their being deliverable to a
                      higher-layer protocol.  One possible reason for
                      discarding such a packet could be to free up
                      buffer space."
              ::= { ifEntry 13 }

          ifInErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of inbound packets that contained
                      errors preventing them from being deliverable to a
                      higher-layer protocol."
              ::= { ifEntry 14 }
          ifInUnknownProtos OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of packets received via the interface
                      which were discarded because of an unknown or
                      unsupported protocol."
              ::= { ifEntry 15 }

          ifOutOctets OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of octets transmitted out of the
                      interface, including framing characters."
              ::= { ifEntry 16 }

          ifOutUcastPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of packets that higher-level
                      protocols requested be transmitted to a
                      subnetwork-unicast address, including those that
                      were discarded or not sent."
              ::= { ifEntry 17 }

          ifOutNUcastPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of packets that higher-level
                      protocols requested be transmitted to a non-
                      unicast (i.e., a subnetwork-broadcast or
                      subnetwork-multicast) address, including those
                      that were discarded or not sent."
              ::= { ifEntry 18 }

          ifOutDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of outbound packets which were chosen
                      to be discarded even though no errors had been
                      detected to prevent their being transmitted.  One
                      possible reason for discarding such a packet could
                      be to free up buffer space."
              ::= { ifEntry 19 }

          ifOutErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of outbound packets that could not be
                      transmitted because of errors."
              ::= { ifEntry 20 }

          ifOutQLen OBJECT-TYPE
              SYNTAX  Gauge
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The length of the output packet queue (in
                      packets)."
              ::= { ifEntry 21 }

          ifSpecific OBJECT-TYPE
              SYNTAX  OBJECT IDENTIFIER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A reference to MIB definitions specific to the
                      particular media being used to realize the
                      interface.  For example, if the interface is
                      realized by an ethernet, then the value of this
                      object refers to a document defining objects
                      specific to ethernet.  If this information is not
                      present, its value should be set to the OBJECT
                      IDENTIFIER { 0 0 }, which is a syntatically valid
                      object identifier, and any conformant
                      implementation of ASN.1 and BER must be able to
                      generate and recognize this value."
              ::= { ifEntry 22 }


          -- the Address Translation group

          -- Implementation of the Address Translation group is
          -- mandatory for all systems.  Note however that this group
          -- is deprecated by MIB-II. That is, it is being included
          -- solely for compatibility with MIB-I nodes, and will most
          -- likely be excluded from MIB-III nodes.  From MIB-II and
          -- onwards, each network protocol group contains its own
          -- address translation tables.

          -- The Address Translation group contains one table which is
          -- the union across all interfaces of the translation tables
          -- for converting a NetworkAddress (e.g., an IP address) into
          -- a subnetwork-specific address.  For lack of a better term,
          -- this document refers to such a subnetwork-specific address
          -- as a `physical' address.

          -- Examples of such translation tables are: for broadcast
          -- media where ARP is in use, the translation table is
          -- equivalent to the ARP cache; or, on an X.25 network where
          -- non-algorithmic translation to X.121 addresses is
          -- required, the translation table contains the
          -- NetworkAddress to X.121 address equivalences.

          atTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF AtEntry
              ACCESS  not-accessible
              STATUS  deprecated
              DESCRIPTION
                      "The Address Translation tables contain the
                      NetworkAddress to `physical' address equivalences.
                      Some interfaces do not use translation tables for
                      determining address equivalences (e.g., DDN-X.25
                      has an algorithmic method); if all interfaces are
                      of this type, then the Address Translation table
                      is empty, i.e., has zero entries."
              ::= { at 1 }

          atEntry OBJECT-TYPE
              SYNTAX  AtEntry
              ACCESS  not-accessible
              STATUS  deprecated
              DESCRIPTION
                      "Each entry contains one NetworkAddress to
                      `physical' address equivalence."
              INDEX   { atIfIndex,
                        atNetAddress }
              ::= { atTable 1 }

          AtEntry ::=
              SEQUENCE {
                  atIfIndex
                      INTEGER,
                  atPhysAddress
                      PhysAddress,
                  atNetAddress
                      NetworkAddress
              }

          atIfIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  deprecated
              DESCRIPTION
                      "The interface on which this entry's equivalence
                      is effective.  The interface identified by a
                      particular value of this index is the same
                      interface as identified by the same value of
                      ifIndex."
              ::= { atEntry 1 }

          atPhysAddress OBJECT-TYPE
              SYNTAX  PhysAddress
              ACCESS  read-write
              STATUS  deprecated
              DESCRIPTION
                      "The media-dependent `physical' address.

                      Setting this object to a null string (one of zero
                      length) has the effect of invaliding the
                      corresponding entry in the atTable object.  That
                      is, it effectively dissasociates the interface
                      identified with said entry from the mapping
                      identified with said entry.  It is an
                      implementation-specific matter as to whether the
                      agent removes an invalidated entry from the table.
                      Accordingly, management stations must be prepared
                      to receive tabular information from agents that
                      corresponds to entries not currently in use.
                      Proper interpretation of such entries requires
                      examination of the relevant atPhysAddress object."
              ::= { atEntry 2 }

          atNetAddress OBJECT-TYPE
              SYNTAX  NetworkAddress
              ACCESS  read-write
              STATUS  deprecated
              DESCRIPTION
                      "The NetworkAddress (e.g., the IP address)
                      corresponding to the media-dependent `physical'
                      address."
              ::= { atEntry 3 }


          -- the IP group

          -- Implementation of the IP group is mandatory for all
          -- systems.

          ipForwarding OBJECT-TYPE
              SYNTAX  INTEGER {
                          forwarding(1),    -- acting as a gateway
                          not-forwarding(2) -- NOT acting as a gateway
                      }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The indication of whether this entity is acting
                      as an IP gateway in respect to the forwarding of
                      datagrams received by, but not addressed to, this
                      entity.  IP gateways forward datagrams.  IP hosts
                      do not (except those source-routed via the host).

                      Note that for some managed nodes, this object may
                      take on only a subset of the values possible.
                      Accordingly, it is appropriate for an agent to
                      return a `badValue' response if a management
                      station attempts to change this object to an
                      inappropriate value."
              ::= { ip 1 }

          ipDefaultTTL OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The default value inserted into the Time-To-Live
                      field of the IP header of datagrams originated at
                      this entity, whenever a TTL value is not supplied
                      by the transport layer protocol."
              ::= { ip 2 }

          ipInReceives OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of input datagrams received from
                      interfaces, including those received in error."
              ::= { ip 3 }

          ipInHdrErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of input datagrams discarded due to
                      errors in their IP headers, including bad
                      checksums, version number mismatch, other format
                      errors, time-to-live exceeded, errors discovered
                      in processing their IP options, etc."
              ::= { ip 4 }

          ipInAddrErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of input datagrams discarded because
                      the IP address in their IP header's destination
                      field was not a valid address to be received at
                      this entity.  This count includes invalid
                      addresses (e.g., 0.0.0.0) and addresses of
                      unsupported Classes (e.g., Class E).  For entities
                      which are not IP Gateways and therefore do not
                      forward datagrams, this counter includes datagrams
                      discarded because the destination address was not
                      a local address."
              ::= { ip 5 }

          ipForwDatagrams OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of input datagrams for which this
                      entity was not their final IP destination, as a
                      result of which an attempt was made to find a
                      route to forward them to that final destination.
                      In entities which do not act as IP Gateways, this
                      counter will include only those packets which were
                      Source-Routed via this entity, and the Source-
                      Route option processing was successful."
              ::= { ip 6 }

          ipInUnknownProtos OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of locally-addressed datagrams
                      received successfully but discarded because of an
                      unknown or unsupported protocol."
              ::= { ip 7 }

          ipInDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of input IP datagrams for which no
                      problems were encountered to prevent their
                      continued processing, but which were discarded
                      (e.g., for lack of buffer space).  Note that this
                      counter does not include any datagrams discarded
                      while awaiting re-assembly."
              ::= { ip 8 }

          ipInDelivers OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of input datagrams successfully
                      delivered to IP user-protocols (including ICMP)."
              ::= { ip 9 }

          ipOutRequests OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of IP datagrams which local IP
                      user-protocols (including ICMP) supplied to IP in
                      requests for transmission.  Note that this counter
                      does not include any datagrams counted in
                      ipForwDatagrams."
              ::= { ip 10 }

          ipOutDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of output IP datagrams for which no
                      problem was encountered to prevent their
                      transmission to their destination, but which were
                      discarded (e.g., for lack of buffer space).  Note
                      that this counter would include datagrams counted
                      in ipForwDatagrams if any such packets met this
                      (discretionary) discard criterion."
              ::= { ip 11 }

          ipOutNoRoutes OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of IP datagrams discarded because no
                      route could be found to transmit them to their
                      destination.  Note that this counter includes any
                      packets counted in ipForwDatagrams which meet this
                      `no-route' criterion.  Note that this includes any
                      datagarms which a host cannot route because all of
                      its default gateways are down."
              ::= { ip 12 }

          ipReasmTimeout OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The maximum number of seconds which received
                      fragments are held while they are awaiting
                      reassembly at this entity."
              ::= { ip 13 }

          ipReasmReqds OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of IP fragments received which needed
                      to be reassembled at this entity."
              ::= { ip 14 }

          ipReasmOKs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of IP datagrams successfully re-
                      assembled."
              ::= { ip 15 }

          ipReasmFails OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of failures detected by the IP re-
                      assembly algorithm (for whatever reason: timed
                      out, errors, etc).  Note that this is not
                      necessarily a count of discarded IP fragments
                      since some algorithms (notably the algorithm in
                      RFC 815) can lose track of the number of fragments
                      by combining them as they are received."
              ::= { ip 16 }

          ipFragOKs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of IP datagrams that have been
                      successfully fragmented at this entity."
              ::= { ip 17 }

          ipFragFails OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of IP datagrams that have been
                      discarded because they needed to be fragmented at
                      this entity but could not be, e.g., because their
                      Don't Fragment flag was set."
              ::= { ip 18 }

          ipFragCreates OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of IP datagram fragments that have
                      been generated as a result of fragmentation at
                      this entity."
              ::= { ip 19 }

          -- the IP address table

          -- The IP address table contains this entity's IP addressing
          -- information.

          ipAddrTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF IpAddrEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "The table of addressing information relevant to
                      this entity's IP addresses."
              ::= { ip 20 }

          ipAddrEntry OBJECT-TYPE
              SYNTAX  IpAddrEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "The addressing information for one of this
                      entity's IP addresses."
              INDEX   { ipAdEntAddr }
              ::= { ipAddrTable 1 }

          IpAddrEntry ::=
              SEQUENCE {
                  ipAdEntAddr
                      IpAddress,
                  ipAdEntIfIndex
                      INTEGER,
                  ipAdEntNetMask
                      IpAddress,
                  ipAdEntBcastAddr
                      INTEGER,
                  ipAdEntReasmMaxSize
                      INTEGER (0..65535)
              }

          ipAdEntAddr OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The IP address to which this entry's addressing
                      information pertains."
              ::= { ipAddrEntry 1 }

          ipAdEntIfIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The index value which uniquely identifies the
                      interface to which this entry is applicable.  The
                      interface identified by a particular value of this
                      index is the same interface as identified by the
                      same value of ifIndex."
              ::= { ipAddrEntry 2 }

          ipAdEntNetMask OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The subnet mask associated with the IP address of
                      this entry.  The value of the mask is an IP
                      address with all the network bits set to 1 and all
                      the hosts bits set to 0."
              ::= { ipAddrEntry 3 }

          ipAdEntBcastAddr OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of the least-significant bit in the IP
                      broadcast address used for sending datagrams on
                      the (logical) interface associated with the IP
                      address of this entry.  For example, when the
                      Internet standard all-ones broadcast address is
                      used, the value will be 1.  This value applies to
                      both the subnet and network broadcasts addresses
                      used by the entity on this (logical) interface."
              ::= { ipAddrEntry 4 }

          ipAdEntReasmMaxSize OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The size of the largest IP datagram which this
                      entity can re-assemble from incoming IP fragmented
                      datagrams received on this interface."
              ::= { ipAddrEntry 5 }

          -- the IP routing table

          -- The IP routing table contains an entry for each route
          -- presently known to this entity.

          ipRouteTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF IpRouteEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "This entity's IP Routing table."
              ::= { ip 21 }

          ipRouteEntry OBJECT-TYPE
              SYNTAX  IpRouteEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A route to a particular destination."
              INDEX   { ipRouteDest }
              ::= { ipRouteTable 1 }

          IpRouteEntry ::=
              SEQUENCE {
                  ipRouteDest
                      IpAddress,
                  ipRouteIfIndex
                      INTEGER,
                  ipRouteMetric1
                      INTEGER,
                  ipRouteMetric2
                      INTEGER,
                  ipRouteMetric3
                      INTEGER,
                  ipRouteMetric4
                      INTEGER,
                  ipRouteNextHop
                      IpAddress,
                  ipRouteType
                      INTEGER,
                  ipRouteProto
                      INTEGER,
                  ipRouteAge
                      INTEGER,
                  ipRouteMask
                      IpAddress,
                  ipRouteMetric5
                      INTEGER,
                  ipRouteInfo
                      OBJECT IDENTIFIER
              }

          ipRouteDest OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The destination IP address of this route.  An
                      entry with a value of 0.0.0.0 is considered a
                      default route.  Multiple routes to a single
                      destination can appear in the table, but access to
                      such multiple entries is dependent on the table-
                      access mechanisms defined by the network
                      management protocol in use."
              ::= { ipRouteEntry 1 }

          ipRouteIfIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The index value which uniquely identifies the
                      local interface through which the next hop of this
                      route should be reached.  The interface identified
                      by a particular value of this index is the same
                      interface as identified by the same value of
                      ifIndex."
              ::= { ipRouteEntry 2 }

          ipRouteMetric1 OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The primary routing metric for this route.  The
                      semantics of this metric are determined by the
                      routing-protocol specified in the route's
                      ipRouteProto value.  If this metric is not used,
                      its value should be set to -1."
              ::= { ipRouteEntry 3 }

          ipRouteMetric2 OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "An alternate routing metric for this route.  The
                      semantics of this metric are determined by the
                      routing-protocol specified in the route's
                      ipRouteProto value.  If this metric is not used,
                      its value should be set to -1."
              ::= { ipRouteEntry 4 }

          ipRouteMetric3 OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "An alternate routing metric for this route.  The
                      semantics of this metric are determined by the
                      routing-protocol specified in the route's
                      ipRouteProto value.  If this metric is not used,
                      its value should be set to -1."
              ::= { ipRouteEntry 5 }

          ipRouteMetric4 OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "An alternate routing metric for this route.  The
                      semantics of this metric are determined by the
                      routing-protocol specified in the route's
                      ipRouteProto value.  If this metric is not used,
                      its value should be set to -1."
              ::= { ipRouteEntry 6 }

          ipRouteNextHop OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The IP address of the next hop of this route.
                      (In the case of a route bound to an interface
                      which is realized via a broadcast media, the value
                      of this field is the agent's IP address on that
                      interface.)"
              ::= { ipRouteEntry 7 }

          ipRouteType OBJECT-TYPE
              SYNTAX  INTEGER {
                          other(1),        -- none of the following

                          invalid(2),      -- an invalidated route
                                           -- route to directly

                          direct(3),       -- connected (sub-)network

                                           -- route to a non-local
                          indirect(4)      -- host/network/sub-network
                      }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The type of route.  Note that the values
                      direct(3) and indirect(4) refer to the notion of
                      direct and indirect routing in the IP
                      architecture.

                      Setting this object to the value invalid(2) has
                      the effect of invalidating the corresponding entry
                      in the ipRouteTable object.  That is, it
                      effectively dissasociates the destination
                      identified with said entry from the route
                      identified with said entry.  It is an
                      implementation-specific matter as to whether the
                      agent removes an invalidated entry from the table.
                      Accordingly, management stations must be prepared
                      to receive tabular information from agents that
                      corresponds to entries not currently in use.
                      Proper interpretation of such entries requires
                      examination of the relevant ipRouteType object."
              ::= { ipRouteEntry 8 }

          ipRouteProto OBJECT-TYPE
              SYNTAX  INTEGER {
                          other(1),       -- none of the following

                                          -- non-protocol information,
                                          -- e.g., manually configured
                          local(2),       -- entries

                                          -- set via a network
                          netmgmt(3),     -- management protocol

                                          -- obtained via ICMP,
                          icmp(4),        -- e.g., Redirect

                                          -- the remaining values are
                                          -- all gateway routing
                                          -- protocols
                          egp(5),
                          ggp(6),
                          hello(7),
                          rip(8),
                          is-is(9),
                          es-is(10),
                          ciscoIgrp(11),
                          bbnSpfIgp(12),
                          ospf(13),
                          bgp(14)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The routing mechanism via which this route was
                      learned.  Inclusion of values for gateway routing
                      protocols is not intended to imply that hosts
                      should support those protocols."
              ::= { ipRouteEntry 9 }

          ipRouteAge OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The number of seconds since this route was last
                      updated or otherwise determined to be correct.
                      Note that no semantics of `too old' can be implied
                      except through knowledge of the routing protocol
                      by which the route was learned."
              ::= { ipRouteEntry 10 }

          ipRouteMask OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "Indicate the mask to be logical-ANDed with the
                      destination address before being compared to the
                      value in the ipRouteDest field.  For those systems
                      that do not support arbitrary subnet masks, an
                      agent constructs the value of the ipRouteMask by
                      determining whether the value of the correspondent
                      ipRouteDest field belong to a class-A, B, or C
                      network, and then using one of:

                           mask           network
                           255.0.0.0      class-A
                           255.255.0.0    class-B
                           255.255.255.0  class-C

                      If the value of the ipRouteDest is 0.0.0.0 (a
                      default route), then the mask value is also
                      0.0.0.0.  It should be noted that all IP routing
                      subsystems implicitly use this mechanism."
              ::= { ipRouteEntry 11 }

          ipRouteMetric5 OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "An alternate routing metric for this route.  The
                      semantics of this metric are determined by the
                      routing-protocol specified in the route's
                      ipRouteProto value.  If this metric is not used,
                      its value should be set to -1."
              ::= { ipRouteEntry 12 }

          ipRouteInfo OBJECT-TYPE
              SYNTAX  OBJECT IDENTIFIER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A reference to MIB definitions specific to the
                      particular routing protocol which is responsible
                      for this route, as determined by the value
                      specified in the route's ipRouteProto value.  If
                      this information is not present, its value should
                      be set to the OBJECT IDENTIFIER { 0 0 }, which is
                      a syntatically valid object identifier, and any
                      conformant implementation of ASN.1 and BER must be
                      able to generate and recognize this value."
              ::= { ipRouteEntry 13 }


          -- the IP Address Translation table

          -- The IP address translation table contain the IpAddress to
          -- `physical' address equivalences.  Some interfaces do not
          -- use translation tables for determining address
          -- equivalences (e.g., DDN-X.25 has an algorithmic method);
          -- if all interfaces are of this type, then the Address
          -- Translation table is empty, i.e., has zero entries.

          ipNetToMediaTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF IpNetToMediaEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "The IP Address Translation table used for mapping
                      from IP addresses to physical addresses."
              ::= { ip 22 }

          ipNetToMediaEntry OBJECT-TYPE
              SYNTAX  IpNetToMediaEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Each entry contains one IpAddress to `physical'
                      address equivalence."
              INDEX   { ipNetToMediaIfIndex,
                        ipNetToMediaNetAddress }
              ::= { ipNetToMediaTable 1 }

          IpNetToMediaEntry ::=
              SEQUENCE {
                  ipNetToMediaIfIndex
                      INTEGER,
                  ipNetToMediaPhysAddress
                      PhysAddress,
                  ipNetToMediaNetAddress
                      IpAddress,
                  ipNetToMediaType
                      INTEGER
              }

          ipNetToMediaIfIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The interface on which this entry's equivalence
                      is effective.  The interface identified by a
                      particular value of this index is the same
                      interface as identified by the same value of
                      ifIndex."
              ::= { ipNetToMediaEntry 1 }

          ipNetToMediaPhysAddress OBJECT-TYPE
              SYNTAX  PhysAddress
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The media-dependent `physical' address."
              ::= { ipNetToMediaEntry 2 }

          ipNetToMediaNetAddress OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The IpAddress corresponding to the media-
                      dependent `physical' address."
              ::= { ipNetToMediaEntry 3 }

          ipNetToMediaType OBJECT-TYPE
              SYNTAX  INTEGER {
                          other(1),        -- none of the following
                          invalid(2),      -- an invalidated mapping
                          dynamic(3),
                          static(4)
                      }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The type of mapping.

                      Setting this object to the value invalid(2) has
                      the effect of invalidating the corresponding entry
                      in the ipNetToMediaTable.  That is, it effectively
                      dissasociates the interface identified with said
                      entry from the mapping identified with said entry.
                      It is an implementation-specific matter as to
                      whether the agent removes an invalidated entry
                      from the table.  Accordingly, management stations
                      must be prepared to receive tabular information
                      from agents that corresponds to entries not
                      currently in use.  Proper interpretation of such
                      entries requires examination of the relevant
                      ipNetToMediaType object."
              ::= { ipNetToMediaEntry 4 }


          -- additional IP objects

          ipRoutingDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of routing entries which were chosen
                      to be discarded even though they are valid.  One
                      possible reason for discarding such an entry could
                      be to free-up buffer space for other routing
                      entries."
              ::= { ip 23 }


          -- the ICMP group

          -- Implementation of the ICMP group is mandatory for all
          -- systems.

          icmpInMsgs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of ICMP messages which the
                      entity received.  Note that this counter includes
                      all those counted by icmpInErrors."
              ::= { icmp 1 }

          icmpInErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP messages which the entity
                      received but determined as having ICMP-specific
                      errors (bad ICMP checksums, bad length, etc.)."
              ::= { icmp 2 }

          icmpInDestUnreachs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Destination Unreachable
                      messages received."
              ::= { icmp 3 }

          icmpInTimeExcds OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Time Exceeded messages
                      received."
              ::= { icmp 4 }

          icmpInParmProbs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Parameter Problem messages
                      received."
              ::= { icmp 5 }

          icmpInSrcQuenchs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Source Quench messages
                      received."
              ::= { icmp 6 }

          icmpInRedirects OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Redirect messages received."
              ::= { icmp 7 }

          icmpInEchos OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Echo (request) messages
                      received."
              ::= { icmp 8 }

          icmpInEchoReps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Echo Reply messages received."
              ::= { icmp 9 }

          icmpInTimestamps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Timestamp (request) messages
                      received."
              ::= { icmp 10 }

          icmpInTimestampReps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Timestamp Reply messages
                      received."
              ::= { icmp 11 }

          icmpInAddrMasks OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Address Mask Request messages
                      received."
              ::= { icmp 12 }

          icmpInAddrMaskReps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Address Mask Reply messages
                      received."
              ::= { icmp 13 }

          icmpOutMsgs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of ICMP messages which this
                      entity attempted to send.  Note that this counter
                      includes all those counted by icmpOutErrors."
              ::= { icmp 14 }

          icmpOutErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP messages which this entity did
                      not send due to problems discovered within ICMP
                      such as a lack of buffers.  This value should not
                      include errors discovered outside the ICMP layer
                      such as the inability of IP to route the resultant
                      datagram.  In some implementations there may be no
                      types of error which contribute to this counter's
                      value."
              ::= { icmp 15 }

          icmpOutDestUnreachs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Destination Unreachable
                      messages sent."
              ::= { icmp 16 }

          icmpOutTimeExcds OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Time Exceeded messages sent."
              ::= { icmp 17 }

          icmpOutParmProbs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Parameter Problem messages
                      sent."
              ::= { icmp 18 }

          icmpOutSrcQuenchs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Source Quench messages sent."
              ::= { icmp 19 }

          icmpOutRedirects OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Redirect messages sent.  For a
                      host, this object will always be zero, since hosts
                      do not send redirects."
              ::= { icmp 20 }

          icmpOutEchos OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Echo (request) messages sent."
              ::= { icmp 21 }

          icmpOutEchoReps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Echo Reply messages sent."
              ::= { icmp 22 }

          icmpOutTimestamps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Timestamp (request) messages
                      sent."
              ::= { icmp 23 }

          icmpOutTimestampReps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Timestamp Reply messages
                      sent."
              ::= { icmp 24 }

          icmpOutAddrMasks OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Address Mask Request messages
                      sent."
              ::= { icmp 25 }

          icmpOutAddrMaskReps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Address Mask Reply messages
                      sent."
              ::= { icmp 26 }


          -- the TCP group

          -- Implementation of the TCP group is mandatory for all
          -- systems that implement the TCP.

          -- Note that instances of object types that represent
          -- information about a particular TCP connection are
          -- transient; they persist only as long as the connection
          -- in question.

          tcpRtoAlgorithm OBJECT-TYPE
              SYNTAX  INTEGER {
                          other(1),    -- none of the following

                          constant(2), -- a constant rto
                          rsre(3),     -- MIL-STD-1778, Appendix B
                          vanj(4)      -- Van Jacobson's algorithm [10]
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The algorithm used to determine the timeout value
                      used for retransmitting unacknowledged octets."
              ::= { tcp 1 }

          tcpRtoMin OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The minimum value permitted by a TCP
                      implementation for the retransmission timeout,
                      measured in milliseconds.  More refined semantics
                      for objects of this type depend upon the algorithm
                      used to determine the retransmission timeout.  In
                      particular, when the timeout algorithm is rsre(3),
                      an object of this type has the semantics of the
                      LBOUND quantity described in RFC 793."
              ::= { tcp 2 }


          tcpRtoMax OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The maximum value permitted by a TCP
                      implementation for the retransmission timeout,
                      measured in milliseconds.  More refined semantics
                      for objects of this type depend upon the algorithm
                      used to determine the retransmission timeout.  In
                      particular, when the timeout algorithm is rsre(3),
                      an object of this type has the semantics of the
                      UBOUND quantity described in RFC 793."
              ::= { tcp 3 }

          tcpMaxConn OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The limit on the total number of TCP connections
                      the entity can support.  In entities where the
                      maximum number of connections is dynamic, this
                      object should contain the value -1."
              ::= { tcp 4 }

          tcpActiveOpens OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of times TCP connections have made a
                      direct transition to the SYN-SENT state from the
                      CLOSED state."
              ::= { tcp 5 }

          tcpPassiveOpens OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of times TCP connections have made a
                      direct transition to the SYN-RCVD state from the
                      LISTEN state."
              ::= { tcp 6 }

          tcpAttemptFails OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of times TCP connections have made a
                      direct transition to the CLOSED state from either
                      the SYN-SENT state or the SYN-RCVD state, plus the
                      number of times TCP connections have made a direct
                      transition to the LISTEN state from the SYN-RCVD
                      state."
              ::= { tcp 7 }

          tcpEstabResets OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of times TCP connections have made a
                      direct transition to the CLOSED state from either
                      the ESTABLISHED state or the CLOSE-WAIT state."
              ::= { tcp 8 }

          tcpCurrEstab OBJECT-TYPE
              SYNTAX  Gauge
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of TCP connections for which the
                      current state is either ESTABLISHED or CLOSE-
                      WAIT."
              ::= { tcp 9 }

          tcpInSegs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of segments received, including
                      those received in error.  This count includes
                      segments received on currently established
                      connections."
              ::= { tcp 10 }

          tcpOutSegs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of segments sent, including
                      those on current connections but excluding those
                      containing only retransmitted octets."
              ::= { tcp 11 }

          tcpRetransSegs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of segments retransmitted - that
                      is, the number of TCP segments transmitted
                      containing one or more previously transmitted
                      octets."
              ::= { tcp 12 }


          -- the TCP Connection table

          -- The TCP connection table contains information about this
          -- entity's existing TCP connections.

          tcpConnTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF TcpConnEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A table containing TCP connection-specific
                      information."
              ::= { tcp 13 }

          tcpConnEntry OBJECT-TYPE
              SYNTAX  TcpConnEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Information about a particular current TCP
                      connection.  An object of this type is transient,
                      in that it ceases to exist when (or soon after)
                      the connection makes the transition to the CLOSED
                      state."
              INDEX   { tcpConnLocalAddress,
                        tcpConnLocalPort,
                        tcpConnRemAddress,
                        tcpConnRemPort }
              ::= { tcpConnTable 1 }

          TcpConnEntry ::=
              SEQUENCE {
                  tcpConnState
                      INTEGER,
                  tcpConnLocalAddress
                      IpAddress,
                  tcpConnLocalPort
                      INTEGER (0..65535),
                  tcpConnRemAddress
                      IpAddress,
                  tcpConnRemPort
                      INTEGER (0..65535)
              }

          tcpConnState OBJECT-TYPE
              SYNTAX  INTEGER {
                          closed(1),
                          listen(2),
                          synSent(3),
                          synReceived(4),
                          established(5),
                          finWait1(6),
                          finWait2(7),
                          closeWait(8),
                          lastAck(9),
                          closing(10),
                          timeWait(11),
                          deleteTCB(12)
                      }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The state of this TCP connection.

                      The only value which may be set by a management
                      station is deleteTCB(12).  Accordingly, it is
                      appropriate for an agent to return a `badValue'
                      response if a management station attempts to set
                      this object to any other value.

                      If a management station sets this object to the
                      value deleteTCB(12), then this has the effect of
                      deleting the TCB (as defined in RFC 793) of the
                      corresponding connection on the managed node,
                      resulting in immediate termination of the
                      connection.

                      As an implementation-specific option, a RST
                      segment may be sent from the managed node to the
                      other TCP endpoint (note however that RST segments
                      are not sent reliably)."
              ::= { tcpConnEntry 1 }

          tcpConnLocalAddress OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The local IP address for this TCP connection.  In
                      the case of a connection in the listen state which
                      is willing to accept connections for any IP
                      interface associated with the node, the value
                      0.0.0.0 is used."
              ::= { tcpConnEntry 2 }

          tcpConnLocalPort OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The local port number for this TCP connection."
              ::= { tcpConnEntry 3 }

          tcpConnRemAddress OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The remote IP address for this TCP connection."
              ::= { tcpConnEntry 4 }

          tcpConnRemPort OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The remote port number for this TCP connection."
              ::= { tcpConnEntry 5 }


          -- additional TCP objects

          tcpInErrs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of segments received in error
                      (e.g., bad TCP checksums)."
              ::= { tcp 14 }

          tcpOutRsts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of TCP segments sent containing the
                      RST flag."
              ::= { tcp 15 }


          -- the UDP group

          -- Implementation of the UDP group is mandatory for all
          -- systems which implement the UDP.

          udpInDatagrams OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of UDP datagrams delivered to
                      UDP users."
              ::= { udp 1 }

          udpNoPorts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of received UDP datagrams for
                      which there was no application at the destination
                      port."
              ::= { udp 2 }

          udpInErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of received UDP datagrams that could
                      not be delivered for reasons other than the lack
                      of an application at the destination port."
              ::= { udp 3 }

          udpOutDatagrams OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of UDP datagrams sent from this
                      entity."
              ::= { udp 4 }


          -- the UDP Listener table

          -- The UDP listener table contains information about this
          -- entity's UDP end-points on which a local application is
          -- currently accepting datagrams.

          udpTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF UdpEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A table containing UDP listener information."
              ::= { udp 5 }

          udpEntry OBJECT-TYPE
              SYNTAX  UdpEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Information about a particular current UDP
                      listener."
              INDEX   { udpLocalAddress, udpLocalPort }
              ::= { udpTable 1 }

          UdpEntry ::=
              SEQUENCE {
                  udpLocalAddress
                      IpAddress,
                  udpLocalPort
                      INTEGER (0..65535)
              }

          udpLocalAddress OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The local IP address for this UDP listener.  In
                      the case of a UDP listener which is willing to
                      accept datagrams for any IP interface associated
                      with the node, the value 0.0.0.0 is used."
              ::= { udpEntry 1 }

          udpLocalPort OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The local port number for this UDP listener."
              ::= { udpEntry 2 }


          -- the EGP group

          -- Implementation of the EGP group is mandatory for all
          -- systems which implement the EGP.

          egpInMsgs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of EGP messages received without
                      error."
              ::= { egp 1 }

          egpInErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of EGP messages received that proved
                      to be in error."
              ::= { egp 2 }

          egpOutMsgs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of locally generated EGP
                      messages."
              ::= { egp 3 }

          egpOutErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of locally generated EGP messages not
                      sent due to resource limitations within an EGP
                      entity."
              ::= { egp 4 }


          -- the EGP Neighbor table

          -- The EGP neighbor table contains information about this
          -- entity's EGP neighbors.

          egpNeighTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF EgpNeighEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "The EGP neighbor table."
              ::= { egp 5 }

          egpNeighEntry OBJECT-TYPE
              SYNTAX  EgpNeighEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Information about this entity's relationship with
                      a particular EGP neighbor."
              INDEX   { egpNeighAddr }
              ::= { egpNeighTable 1 }

          EgpNeighEntry ::=
              SEQUENCE {
                  egpNeighState
                      INTEGER,
                  egpNeighAddr
                      IpAddress,
                  egpNeighAs
                      INTEGER,
                  egpNeighInMsgs
                      Counter,
                  egpNeighInErrs
                      Counter,
                  egpNeighOutMsgs
                      Counter,
                  egpNeighOutErrs
                      Counter,
                  egpNeighInErrMsgs
                      Counter,
                  egpNeighOutErrMsgs
                      Counter,
                  egpNeighStateUps
                      Counter,
                  egpNeighStateDowns
                      Counter,
                  egpNeighIntervalHello
                      INTEGER,
                  egpNeighIntervalPoll
                      INTEGER,
                  egpNeighMode
                      INTEGER,
                  egpNeighEventTrigger
                      INTEGER
              }

          egpNeighState OBJECT-TYPE
              SYNTAX  INTEGER {
                          idle(1),
                          acquisition(2),
                          down(3),
                          up(4),
                          cease(5)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The EGP state of the local system with respect to
                      this entry's EGP neighbor.  Each EGP state is
                      represented by a value that is one greater than
                      the numerical value associated with said state in
                      RFC 904."
              ::= { egpNeighEntry 1 }

          egpNeighAddr OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The IP address of this entry's EGP neighbor."
              ::= { egpNeighEntry 2 }

          egpNeighAs OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The autonomous system of this EGP peer.  Zero
                      should be specified if the autonomous system
                      number of the neighbor is not yet known."
              ::= { egpNeighEntry 3 }

          egpNeighInMsgs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of EGP messages received without error
                      from this EGP peer."
              ::= { egpNeighEntry 4 }

          egpNeighInErrs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of EGP messages received from this EGP
                      peer that proved to be in error (e.g., bad EGP
                      checksum)."
              ::= { egpNeighEntry 5 }

          egpNeighOutMsgs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of locally generated EGP messages to
                      this EGP peer."
              ::= { egpNeighEntry 6 }

          egpNeighOutErrs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of locally generated EGP messages not
                      sent to this EGP peer due to resource limitations
                      within an EGP entity."
              ::= { egpNeighEntry 7 }

          egpNeighInErrMsgs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of EGP-defined error messages received
                      from this EGP peer."
              ::= { egpNeighEntry 8 }

          egpNeighOutErrMsgs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of EGP-defined error messages sent to
                      this EGP peer."
              ::= { egpNeighEntry 9 }

          egpNeighStateUps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of EGP state transitions to the UP
                      state with this EGP peer."
              ::= { egpNeighEntry 10 }

          egpNeighStateDowns OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of EGP state transitions from the UP
                      state to any other state with this EGP peer."
              ::= { egpNeighEntry 11 }

          egpNeighIntervalHello OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The interval between EGP Hello command
                      retransmissions (in hundredths of a second).  This
                      represents the t1 timer as defined in RFC 904."
              ::= { egpNeighEntry 12 }

          egpNeighIntervalPoll OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The interval between EGP poll command
                      retransmissions (in hundredths of a second).  This
                      represents the t3 timer as defined in RFC 904."
              ::= { egpNeighEntry 13 }

          egpNeighMode OBJECT-TYPE
              SYNTAX  INTEGER { active(1), passive(2) }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The polling mode of this EGP entity, either
                      passive or active."
              ::= { egpNeighEntry 14 }

          egpNeighEventTrigger OBJECT-TYPE
              SYNTAX  INTEGER { start(1), stop(2) }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "A control variable used to trigger operator-
                      initiated Start and Stop events.  When read, this
                      variable always returns the most recent value that
                      egpNeighEventTrigger was set to.  If it has not
                      been set since the last initialization of the
                      network management subsystem on the node, it
                      returns a value of `stop'.

                      When set, this variable causes a Start or Stop
                      event on the specified neighbor, as specified on
                      pages 8-10 of RFC 904.  Briefly, a Start event
                      causes an Idle peer to begin neighbor acquisition
                      and a non-Idle peer to reinitiate neighbor
                      acquisition.  A stop event causes a non-Idle peer
                      to return to the Idle state until a Start event
                      occurs, either via egpNeighEventTrigger or
                      otherwise."
              ::= { egpNeighEntry 15 }


          -- additional EGP objects

          egpAs OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The autonomous system number of this EGP entity."
              ::= { egp 6 }


          -- the Transmission group

          -- Based on the transmission media underlying each interface
          -- on a system, the corresponding portion of the Transmission
          -- group is mandatory for that system.

          -- When Internet-standard definitions for managing
          -- transmission media are defined, the transmission group is
          -- used to provide a prefix for the names of those objects.

          -- Typically, such definitions reside in the experimental
          -- portion of the MIB until they are "proven", then as a
          -- part of the Internet standardization process, the
          -- definitions are accordingly elevated and a new object
          -- identifier, under the transmission group is defined. By
          -- convention, the name assigned is:
          --
          --     type OBJECT IDENTIFIER    ::= { transmission number }
          --
          -- where "type" is the symbolic value used for the media in
          -- the ifType column of the ifTable object, and "number" is
          -- the actual integer value corresponding to the symbol.


          -- the SNMP group

          -- Implementation of the SNMP group is mandatory for all
          -- systems which support an SNMP protocol entity.  Some of
          -- the objects defined below will be zero-valued in those
          -- SNMP implementations that are optimized to support only
          -- those functions specific to either a management agent or
          -- a management station.  In particular, it should be
          -- observed that the objects below refer to an SNMP entity,
          -- and there may be several SNMP entities residing on a
          -- managed node (e.g., if the node is hosting acting as
          -- a management station).

          snmpInPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of Messages delivered to the
                      SNMP entity from the transport service."
              ::= { snmp 1 }

          snmpOutPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Messages which were
                      passed from the SNMP protocol entity to the
                      transport service."
              ::= { snmp 2 }

          snmpInBadVersions OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Messages which were
                      delivered to the SNMP protocol entity and were for
                      an unsupported SNMP version."
              ::= { snmp 3 }

          snmpInBadCommunityNames OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Messages delivered to
                      the SNMP protocol entity which used a SNMP
                      community name not known to said entity."
              ::= { snmp 4 }

          snmpInBadCommunityUses OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Messages delivered to
                      the SNMP protocol entity which represented an SNMP
                      operation which was not allowed by the SNMP
                      community named in the Message."
              ::= { snmp 5 }

          snmpInASNParseErrs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of ASN.1 or BER errors
                      encountered by the SNMP protocol entity when
                      decoding received SNMP Messages."
              ::= { snmp 6 }

          -- { snmp 7 } is not used in rfc1213, but MIBII.mdl had one :(
          snmpInBadTypes OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "Total number of PDUs having an unknown PDU type"
              ::= { snmp 7 }

          snmpInTooBigs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP PDUs which were
                      delivered to the SNMP protocol entity and for
                      which the value of the error-status field is
                      `tooBig'."
              ::= { snmp 8 }

          snmpInNoSuchNames OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP PDUs which were
                      delivered to the SNMP protocol entity and for
                      which the value of the error-status field is
                      `noSuchName'."
              ::= { snmp 9 }

          snmpInBadValues OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP PDUs which were
                      delivered to the SNMP protocol entity and for
                      which the value of the error-status field is
                      `badValue'."
              ::= { snmp 10 }

          snmpInReadOnlys OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number valid SNMP PDUs which were
                      delivered to the SNMP protocol entity and for
                      which the value of the error-status field is
                      `readOnly'.  It should be noted that it is a
                      protocol error to generate an SNMP PDU which
                      contains the value `readOnly' in the error-status
                      field, as such this object is provided as a means
                      of detecting incorrect implementations of the
                      SNMP."
              ::= { snmp 11 }

          snmpInGenErrs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP PDUs which were
                      delivered to the SNMP protocol entity and for
                      which the value of the error-status field is
                      `genErr'."
              ::= { snmp 12 }

          snmpInTotalReqVars OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of MIB objects which have been
                      retrieved successfully by the SNMP protocol entity
                      as the result of receiving valid SNMP Get-Request
                      and Get-Next PDUs."
              ::= { snmp 13 }

          snmpInTotalSetVars OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of MIB objects which have been
                      altered successfully by the SNMP protocol entity
                      as the result of receiving valid SNMP Set-Request
                      PDUs."
              ::= { snmp 14 }

          snmpInGetRequests OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Get-Request PDUs which
                      have been accepted and processed by the SNMP
                      protocol entity."
              ::= { snmp 15 }

          snmpInGetNexts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Get-Next PDUs which have
                      been accepted and processed by the SNMP protocol
                      entity."
              ::= { snmp 16 }

          snmpInSetRequests OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Set-Request PDUs which
                      have been accepted and processed by the SNMP
                      protocol entity."
              ::= { snmp 17 }

          snmpInGetResponses OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Get-Response PDUs which
                      have been accepted and processed by the SNMP
                      protocol entity."
              ::= { snmp 18 }

          snmpInTraps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Trap PDUs which have
                      been accepted and processed by the SNMP protocol
                      entity."
              ::= { snmp 19 }

          snmpOutTooBigs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP PDUs which were
                      generated by the SNMP protocol entity and for
                      which the value of the error-status field is
                      `tooBig.'"
              ::= { snmp 20 }

          snmpOutNoSuchNames OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP PDUs which were
                      generated by the SNMP protocol entity and for
                      which the value of the error-status is
                      `noSuchName'."
              ::= { snmp 21 }

          snmpOutBadValues OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP PDUs which were
                      generated by the SNMP protocol entity and for
                      which the value of the error-status field is
                      `badValue'."
              ::= { snmp 22 }

          -- { snmp 23 } is not used in rfc1213, but MIBII.mdl had one :(
          snmpOutReadOnlys OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP PDUs which were
                      generated by the SNMP protocol entity and for
                      which the value of the error-status field is
                      `readOnly'."
              ::= { snmp 23 }

          snmpOutGenErrs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP PDUs which were
                      generated by the SNMP protocol entity and for
                      which the value of the error-status field is
                      `genErr'."
              ::= { snmp 24 }

          snmpOutGetRequests OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Get-Request PDUs which
                      have been generated by the SNMP protocol entity."
              ::= { snmp 25 }

          snmpOutGetNexts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Get-Next PDUs which have
                      been generated by the SNMP protocol entity."
              ::= { snmp 26 }

          snmpOutSetRequests OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Set-Request PDUs which
                      have been generated by the SNMP protocol entity."
              ::= { snmp 27 }

          snmpOutGetResponses OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Get-Response PDUs which
                      have been generated by the SNMP protocol entity."
              ::= { snmp 28 }

          snmpOutTraps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SNMP Trap PDUs which have
                      been generated by the SNMP protocol entity."
              ::= { snmp 29 }

          snmpEnableAuthenTraps OBJECT-TYPE
              SYNTAX  INTEGER { enabled(1), disabled(2) }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "Indicates whether the SNMP agent process is
                      permitted to generate authentication-failure
                      traps.  The value of this object overrides any
                      configuration information; as such, it provides a
                      means whereby all authentication-failure traps may
                      be disabled.

                      Note that it is strongly recommended that this
                      object be stored in non-volatile memory so that it
                      remains constant between re-initializations of the
                      network management system."
              ::= { snmp 30 }

          END
-- @(#)WSCCS y/mibs-rfc1493.mib 1.1 8/30/95
-- Changes to rfc1493 (Bridge MIB):
--      No changes needed.


BRIDGE-MIB DEFINITIONS ::= BEGIN

          IMPORTS
                     Counter, TimeTicks
                             FROM RFC1155-SMI
                     mib-2
                             FROM RFC1213-MIB
                     OBJECT-TYPE
                             FROM RFC-1212
                     TRAP-TYPE
                             FROM RFC-1215;

          -- All representations of MAC addresses in this MIB Module
          -- use, as a textual convention (i.e. this convention does
          -- not affect their encoding), the data type:

          MacAddress ::= OCTET STRING (SIZE (6))    -- a 6 octet address
                                                    -- in the
                                                    -- "canonical"
                                                    -- order
          -- defined by IEEE 802.1a, i.e., as if it were transmitted
          -- least significant bit first, even though 802.5 (in
          -- contrast to other n802.x protocols) requires MAC
          -- addresses to be transmitted most significant bit first.
          --
          -- 16-bit addresses, if needed, are represented by setting
          -- their upper 4 octets to all 0's, i.e., AAFF would be
          -- represented as 00000000AAFF.

          -- Similarly, all representations of Bridge-Id in this MIB
          -- Module use, as a textual convention (i.e. this
          -- convention does not affect their encoding), the data
          -- type:

          BridgeId ::= OCTET STRING (SIZE (8))   -- the
                                                 -- Bridge-Identifier
                                                 -- as used in the
                                                 -- Spanning Tree

          -- Protocol to uniquely identify a bridge.  Its first two
          -- octets (in network byte order) contain a priority
          -- value and its last 6 octets contain the MAC address
          -- used to refer to a bridge in a unique fashion
          -- (typically, the numerically smallest MAC address
          -- of all ports on the bridge).


          -- Several objects in this MIB module represent values of
          -- timers used by the Spanning Tree Protocol.  In this
          -- MIB, these timers have values in units of hundreths of
          -- a second (i.e. 1/100 secs).
          -- These timers, when stored in a Spanning Tree Protocol's
          -- BPDU, are in units of 1/256 seconds.  Note, however,
          -- that 802.1D-1990 specifies a settable granularity of
          -- no more than 1 second for these timers.  To avoid
          -- ambiguity, a data type is defined here as a textual
          -- convention and all representation of these timers
          -- in this MIB module are defined using this data type.  An
          -- algorithm is also defined for converting between the
          -- different units, to ensure a timer's value is not
          -- distorted by multiple conversions.
          -- The data type is:

          Timeout ::= INTEGER -- a STP timer in units of 1/100 seconds

          -- To convert a Timeout value into a value in units of
          -- 1/256 seconds, the following algorithm should be used:
          --
          --      b  = floor( (n * 256) / 100)
          --
          -- where:
          --      floor   =  quotient [ignore remainder]
          --      n is the value in 1/100 second units
          --      b is the value in 1/256 second units
          --
          -- To convert the value from 1/256 second units back to
          -- 1/100 seconds, the following algorithm should be used:
          --
          --      n = ceiling( (b * 100) / 256)
          --
          -- where:
          --      ceiling =  quotient [if remainder is 0], or
          --                 quotient + 1 [if remainder is non-zero]
          --      n is the value in 1/100 second units
          --      b is the value in 1/256 second units
          --
          -- Note: it is important that the arithmetic operations are
          -- done in the order specified (i.e., multiply first, divide
          -- second).

             dot1dBridge   OBJECT IDENTIFIER ::= { mib-2 17 }


          -- groups in the Bridge MIB

          dot1dBase     OBJECT IDENTIFIER ::= { dot1dBridge 1 }

          dot1dStp      OBJECT IDENTIFIER ::= { dot1dBridge 2 }

          dot1dSr       OBJECT IDENTIFIER ::= { dot1dBridge 3 }
          -- separately documented

          dot1dTp       OBJECT IDENTIFIER ::= { dot1dBridge 4 }

          dot1dStatic   OBJECT IDENTIFIER ::= { dot1dBridge 5 }

          -- the dot1dBase group

          -- Implementation of the dot1dBase group is mandatory for all
          -- bridges.

          dot1dBaseBridgeAddress OBJECT-TYPE
              SYNTAX  MacAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The MAC address used by this bridge when it must
                      be referred to in a unique fashion.   It is
                      recommended that this be the numerically smallest
                      MAC address of all ports that belong to this
                      bridge.  However it is only required to be unique.
                      When concatenated with dot1dStpPriority a unique
                      BridgeIdentifier is formed which is used in the
                      Spanning Tree Protocol."
              REFERENCE
                      "IEEE 802.1D-1990: Sections 6.4.1.1.3 and 3.12.5"
              ::= { dot1dBase 1 }

          dot1dBaseNumPorts OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ports controlled by this bridging
                      entity."
              REFERENCE
                      "IEEE 802.1D-1990: Section 6.4.1.1.3"
              ::= { dot1dBase 2 }

          dot1dBaseType OBJECT-TYPE
              SYNTAX  INTEGER {
                          unknown(1),
                          transparent-only(2),
                          sourceroute-only(3),
                          srt(4)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "Indicates what type of bridging this bridge can
                      perform.  If a bridge is actually performing a
                      certain type of bridging this will be indicated by
                      entries in the port table for the given type."
              ::= { dot1dBase 3 }

          -- The Generic Bridge Port Table

          dot1dBasePortTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF Dot1dBasePortEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A table that contains generic information about
                      every port that is associated with this bridge.
                      Transparent, source-route, and srt ports are
                      included."
              ::= { dot1dBase 4 }

          dot1dBasePortEntry OBJECT-TYPE
              SYNTAX  Dot1dBasePortEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A list of information for each port of the
                      bridge."
              REFERENCE
                      "IEEE 802.1D-1990: Section 6.4.2, 6.6.1"
              INDEX  { dot1dBasePort }
              ::= { dot1dBasePortTable 1 }

          Dot1dBasePortEntry ::=
              SEQUENCE {
                  dot1dBasePort
                      INTEGER,
                  dot1dBasePortIfIndex
                      INTEGER,
                  dot1dBasePortCircuit
                      OBJECT IDENTIFIER,
                  dot1dBasePortDelayExceededDiscards
                      Counter,
                  dot1dBasePortMtuExceededDiscards
                      Counter
              }

          dot1dBasePort OBJECT-TYPE
              SYNTAX  INTEGER (1..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The port number of the port for which this entry
                      contains bridge management information."
              ::= { dot1dBasePortEntry 1 }

          dot1dBasePortIfIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of the instance of the ifIndex object,
                      defined in MIB-II, for the interface corresponding
                      to this port."
              ::= { dot1dBasePortEntry 2 }

          dot1dBasePortCircuit OBJECT-TYPE
              SYNTAX  OBJECT IDENTIFIER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "For a port which (potentially) has the same value
                      of dot1dBasePortIfIndex as another port on the
                      same bridge, this object contains the name of an
                      object instance unique to this port.  For example,
                      in the case where multiple ports correspond one-
                      to-one with multiple X.25 virtual circuits, this
                      value might identify an (e.g., the first) object
                      instance associated with the X.25 virtual circuit
                      corresponding to this port.

                      For a port which has a unique value of
                      dot1dBasePortIfIndex, this object can have the
                      value { 0 0 }."
              ::= { dot1dBasePortEntry 3 }

          dot1dBasePortDelayExceededDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of frames discarded by this port due
                      to excessive transit delay through the bridge.  It
                      is incremented by both transparent and source
                      route bridges."
              REFERENCE
                       "IEEE 802.1D-1990: Section 6.6.1.1.3"
              ::= { dot1dBasePortEntry 4 }

          dot1dBasePortMtuExceededDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of frames discarded by this port due
                      to an excessive size.  It is incremented by both
                      transparent and source route bridges."
              REFERENCE
                      "IEEE 802.1D-1990: Section 6.6.1.1.3"
              ::= { dot1dBasePortEntry 5 }

          -- the dot1dStp group

          -- Implementation of the dot1dStp group is optional.  It is
          -- implemented by those bridges that support the Spanning Tree
          -- Protocol.

          dot1dStpProtocolSpecification OBJECT-TYPE
              SYNTAX  INTEGER {
                          unknown(1),
                          decLb100(2),
                          ieee8021d(3)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "An indication of what version of the Spanning
                      Tree Protocol is being run.  The value
                      'decLb100(2)' indicates the DEC LANbridge 100
                      Spanning Tree protocol.  IEEE 802.1d
                      implementations will return 'ieee8021d(3)'.  If
                      future versions of the IEEE Spanning Tree Protocol
                      are released that are incompatible with the
                      current version a new value will be defined."
              ::= { dot1dStp 1 }

          dot1dStpPriority OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The value of the write-able portion of the Bridge
                      ID, i.e., the first two octets of the (8 octet
                      long) Bridge ID.  The other (last) 6 octets of the
                      Bridge ID are given by the value of
                      dot1dBaseBridgeAddress."
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.3.7"
              ::= { dot1dStp 2 }

          dot1dStpTimeSinceTopologyChange OBJECT-TYPE
              SYNTAX  TimeTicks
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The time (in hundredths of a second) since the
                      last time a topology change was detected by the
                      bridge entity."
              REFERENCE
                      "IEEE 802.1D-1990: Section 6.8.1.1.3"
              ::= { dot1dStp 3 }

          dot1dStpTopChanges OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of topology changes detected by
                      this bridge since the management entity was last
                      reset or initialized."
              REFERENCE
                      "IEEE 802.1D-1990: Section 6.8.1.1.3"
              ::= { dot1dStp 4 }

          dot1dStpDesignatedRoot OBJECT-TYPE
              SYNTAX  BridgeId
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The bridge identifier of the root of the spanning
                      tree as determined by the Spanning Tree Protocol
                      as executed by this node.  This value is used as
                      the Root Identifier parameter in all Configuration
                      Bridge PDUs originated by this node."
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.3.1"
              ::= { dot1dStp 5 }

          dot1dStpRootCost OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The cost of the path to the root as seen from
                      this bridge."
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.3.2"
              ::= { dot1dStp 6 }

          dot1dStpRootPort OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The port number of the port which offers the
                      lowest cost path from this bridge to the root
                      bridge."
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.3.3"
              ::= { dot1dStp 7 }

          dot1dStpMaxAge OBJECT-TYPE
              SYNTAX  Timeout
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The maximum age of Spanning Tree Protocol
                      information learned from the network on any port
                      before it is discarded, in units of hundredths of
                      a second.  This is the actual value that this
                      bridge is currently using."
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.3.4"
              ::= { dot1dStp 8 }

          dot1dStpHelloTime OBJECT-TYPE
              SYNTAX  Timeout
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The amount of time between the transmission of
                      Configuration bridge PDUs by this node on any port
                      when it is the root of the spanning tree or trying
                      to become so, in units of hundredths of a second.
                      This is the actual value that this bridge is
                      currently using."
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.3.5"
              ::= { dot1dStp 9 }

          dot1dStpHoldTime OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "This time value determines the interval length
                      during which no more than two Configuration bridge
                      PDUs shall be transmitted by this node, in units
                      of hundredths of a second."
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.3.14"
              ::= { dot1dStp 10 }

          dot1dStpForwardDelay OBJECT-TYPE
              SYNTAX  Timeout
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "This time value, measured in units of hundredths
                      of a second, controls how fast a port changes its
                      spanning state when moving towards the Forwarding
                      state.  The value determines how long the port
                      stays in each of the Listening and Learning
                      states, which precede the Forwarding state.  This
                      value is also used, when a topology change has
                      been detected and is underway, to age all dynamic
                      entries in the Forwarding Database.  [Note that
                      this value is the one that this bridge is
                      currently using, in contrast to
                      dot1dStpBridgeForwardDelay which is the value that
                      this bridge and all others would start using
                      if/when this bridge were to become the root.]"
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.3.6"
              ::= { dot1dStp 11 }

          dot1dStpBridgeMaxAge OBJECT-TYPE
              SYNTAX  Timeout (600..4000)
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The value that all bridges use for MaxAge when
                      this bridge is acting as the root.  Note that
                      802.1D-1990 specifies that the range for this
                      parameter is related to the value of
                      dot1dStpBridgeHelloTime. The granularity of this
                      timer is specified by 802.1D-1990 to be 1 second.
                      An agent may return a badValue error if a set is
                      attempted to a value which is not a whole number
                      of seconds."
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.3.8"
              ::= { dot1dStp 12 }

          dot1dStpBridgeHelloTime OBJECT-TYPE
              SYNTAX  Timeout (100..1000)
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The value that all bridges use for HelloTime when
                      this bridge is acting as the root.  The
                      granularity of this timer is specified by 802.1D-
                      1990 to be 1 second.  An agent may return a
                      badValue error if a set is attempted to a value
                      which is not a whole number of seconds."
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.3.9"
              ::= { dot1dStp 13 }

          dot1dStpBridgeForwardDelay OBJECT-TYPE
              SYNTAX  Timeout (400..3000)
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The value that all bridges use for ForwardDelay
                      when this bridge is acting as the root.  Note that
                      802.1D-1990 specifies that the range for this
                      parameter is related to the value of
                      dot1dStpBridgeMaxAge.  The granularity of this
                      timer is specified by 802.1D-1990 to be 1 second.
                      An agent may return a badValue error if a set is
                      attempted to a value which is not a whole number
                      of seconds."
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.3.10"
              ::= { dot1dStp 14 }


          -- The Spanning Tree Port Table

          dot1dStpPortTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF Dot1dStpPortEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A table that contains port-specific information
                      for the Spanning Tree Protocol."
              ::= { dot1dStp 15 }

          dot1dStpPortEntry OBJECT-TYPE
              SYNTAX  Dot1dStpPortEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A list of information maintained by every port
                      about the Spanning Tree Protocol state for that
                      port."
              INDEX   { dot1dStpPort }
              ::= { dot1dStpPortTable 1 }

          Dot1dStpPortEntry ::=
              SEQUENCE {
                  dot1dStpPort
                      INTEGER,
                  dot1dStpPortPriority
                      INTEGER,
                  dot1dStpPortState
                      INTEGER,
                  dot1dStpPortEnable
                      INTEGER,
                  dot1dStpPortPathCost
                      INTEGER,
                  dot1dStpPortDesignatedRoot
                      BridgeId,
                  dot1dStpPortDesignatedCost
                      INTEGER,
                  dot1dStpPortDesignatedBridge
                      BridgeId,
                  dot1dStpPortDesignatedPort
                      OCTET STRING,
                  dot1dStpPortForwardTransitions
                      Counter
              }

          dot1dStpPort OBJECT-TYPE
              SYNTAX  INTEGER (1..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The port number of the port for which this entry
                      contains Spanning Tree Protocol management
                      information."
              REFERENCE
                      "IEEE 802.1D-1990: Section 6.8.2.1.2"
              ::= { dot1dStpPortEntry 1 }

          dot1dStpPortPriority OBJECT-TYPE
              SYNTAX  INTEGER (0..255)
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The value of the priority field which is
                      contained in the first (in network byte order)
                      octet of the (2 octet long) Port ID.  The other
                      octet of the Port ID is given by the value of
                      dot1dStpPort."
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.5.1"
              ::= { dot1dStpPortEntry 2 }

          dot1dStpPortState OBJECT-TYPE
              SYNTAX  INTEGER {
                          disabled(1),
                          blocking(2),
                          listening(3),
                          learning(4),
                          forwarding(5),
                          broken(6)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The port's current state as defined by
                      application of the Spanning Tree Protocol.  This
                      state controls what action a port takes on
                      reception of a frame.  If the bridge has detected
                      a port that is malfunctioning it will place that
                      port into the broken(6) state.  For ports which
                      are disabled (see dot1dStpPortEnable), this object
                      will have a value of disabled(1)."
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.5.2"
              ::= { dot1dStpPortEntry 3 }

          dot1dStpPortEnable OBJECT-TYPE
              SYNTAX  INTEGER {
                          enabled(1),
                          disabled(2)
                      }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The enabled/disabled status of the port."
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.5.2"
              ::= { dot1dStpPortEntry 4 }

          dot1dStpPortPathCost OBJECT-TYPE
              SYNTAX  INTEGER (1..65535)
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The contribution of this port to the path cost of
                      paths towards the spanning tree root which include
                      this port.  802.1D-1990 recommends that the
                      default value of this parameter be in inverse
                      proportion to the speed of the attached LAN."
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.5.3"
              ::= { dot1dStpPortEntry 5 }

          dot1dStpPortDesignatedRoot OBJECT-TYPE
              SYNTAX  BridgeId
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The unique Bridge Identifier of the Bridge
                      recorded as the Root in the Configuration BPDUs
                      transmitted by the Designated Bridge for the
                      segment to which the port is attached."
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.5.4"
              ::= { dot1dStpPortEntry 6 }

          dot1dStpPortDesignatedCost OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The path cost of the Designated Port of the
                      segment connected to this port.  This value is
                      compared to the Root Path Cost field in received
                      bridge PDUs."
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.5.5"
              ::= { dot1dStpPortEntry 7 }

          dot1dStpPortDesignatedBridge OBJECT-TYPE
              SYNTAX  BridgeId
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The Bridge Identifier of the bridge which this
                      port considers to be the Designated Bridge for
                      this port's segment."
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.5.6"
              ::= { dot1dStpPortEntry 8 }

          dot1dStpPortDesignatedPort OBJECT-TYPE
              SYNTAX  OCTET STRING (SIZE (2))
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The Port Identifier of the port on the Designated
                      Bridge for this port's segment."
              REFERENCE
                      "IEEE 802.1D-1990: Section 4.5.5.7"
              ::= { dot1dStpPortEntry 9 }

          dot1dStpPortForwardTransitions OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of times this port has transitioned
                      from the Learning state to the Forwarding state."
              ::= { dot1dStpPortEntry 10 }

          -- the dot1dTp group

          -- Implementation of the dot1dTp group is optional.  It is
          -- implemented by those bridges that support the transparent
          -- bridging mode.  A transparent or SRT bridge will implement
          -- this group.

          dot1dTpLearnedEntryDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of Forwarding Database entries,
                      which have been or would have been learnt, but
                      have been discarded due to a lack of space to
                      store them in the Forwarding Database.  If this
                      counter is increasing, it indicates that the
                      Forwarding Database is regularly becoming full (a
                      condition which has unpleasant performance effects
                      on the subnetwork).  If this counter has a
                      significant value but is not presently increasing,
                      it indicates that the problem has been occurring
                      but is not persistent."
              REFERENCE
                      "IEEE 802.1D-1990: Section 6.7.1.1.3"
              ::= { dot1dTp 1 }

          dot1dTpAgingTime OBJECT-TYPE
              SYNTAX   INTEGER (10..1000000)
              ACCESS   read-write
              STATUS   mandatory
              DESCRIPTION
                      "The timeout period in seconds for aging out
                      dynamically learned forwarding information.
                      802.1D-1990 recommends a default of 300 seconds."
              REFERENCE
                      "IEEE 802.1D-1990: Section 6.7.1.1.3"
              ::= { dot1dTp 2 }

          --  The Forwarding Database for Transparent Bridges

          dot1dTpFdbTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF Dot1dTpFdbEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A table that contains information about unicast
                      entries for which the bridge has forwarding and/or
                      filtering information.  This information is used
                      by the transparent bridging function in
                      determining how to propagate a received frame."
              ::= { dot1dTp 3 }

          dot1dTpFdbEntry OBJECT-TYPE
              SYNTAX  Dot1dTpFdbEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Information about a specific unicast MAC address
                      for which the bridge has some forwarding and/or
                      filtering information."
              INDEX   { dot1dTpFdbAddress }
              ::= { dot1dTpFdbTable 1 }

          Dot1dTpFdbEntry ::=
              SEQUENCE {
                  dot1dTpFdbAddress
                      MacAddress,
                  dot1dTpFdbPort
                      INTEGER,
                  dot1dTpFdbStatus
                      INTEGER
              }

          dot1dTpFdbAddress OBJECT-TYPE
              SYNTAX  MacAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A unicast MAC address for which the bridge has
                      forwarding and/or filtering information."
              REFERENCE
                      "IEEE 802.1D-1990: Section 3.9.1, 3.9.2"
              ::= { dot1dTpFdbEntry 1 }

          dot1dTpFdbPort OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "Either the value '0', or the port number of the
                      port on which a frame having a source address
                      equal to the value of the corresponding instance
                      of dot1dTpFdbAddress has been seen.  A value of
                      '0' indicates that the port number has not been
                      learned but that the bridge does have some
                      forwarding/filtering information about this
                      address (e.g. in the dot1dStaticTable).
                      Implementors are encouraged to assign the port
                      value to this object whenever it is learned even
                      for addresses for which the corresponding value of
                      dot1dTpFdbStatus is not learned(3)."
              ::= { dot1dTpFdbEntry 2 }

          dot1dTpFdbStatus OBJECT-TYPE
              SYNTAX  INTEGER {
                          other(1),
                          invalid(2),
                          learned(3),
                          self(4),
                          mgmt(5)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The status of this entry.  The meanings of the
                      values are:

                        other(1)   : none of the following.  This would
                                     include the case where some other
                                     MIB object (not the corresponding
                                     instance of dot1dTpFdbPort, nor an
                                     entry in the dot1dStaticTable) is
                                     being used to determine if and how
                                     frames addressed to the value of
                                     the corresponding instance of
                                     dot1dTpFdbAddress are being
                                     forwarded.

                        invalid(2) : this entry is not longer valid
                                     (e.g., it was learned but has since
                                     aged-out), but has not yet been
                                     flushed from the table.

                        learned(3) : the value of the corresponding
                                     instance of dot1dTpFdbPort was
                                     learned, and is being used.

                        self(4)    : the value of the corresponding
                                     instance of dot1dTpFdbAddress
                                     represents one of the bridge's
                                     addresses.  The corresponding
                                     instance of dot1dTpFdbPort
                                     indicates which of the bridge's
                                     ports has this address.

                        mgmt(5)    : the value of the corresponding
                                     instance of dot1dTpFdbAddress is
                                     also the value of an existing
                                     instance of dot1dStaticAddress."
              ::= { dot1dTpFdbEntry 3 }


          --  Port Table for Transparent Bridges

          dot1dTpPortTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF Dot1dTpPortEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A table that contains information about every
                      port that is associated with this transparent
                      bridge."
              ::= { dot1dTp 4 }

          dot1dTpPortEntry OBJECT-TYPE
              SYNTAX  Dot1dTpPortEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A list of information for each port of a
                      transparent bridge."
              INDEX   { dot1dTpPort }
              ::= { dot1dTpPortTable 1 }

          Dot1dTpPortEntry ::=
              SEQUENCE {
                  dot1dTpPort
                      INTEGER,
                  dot1dTpPortMaxInfo
                      INTEGER,
                  dot1dTpPortInFrames
                      Counter,
                  dot1dTpPortOutFrames
                      Counter,
                  dot1dTpPortInDiscards
                      Counter
              }

          dot1dTpPort OBJECT-TYPE
              SYNTAX  INTEGER (1..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The port number of the port for which this entry
                      contains Transparent bridging management
                      information."
              ::= { dot1dTpPortEntry 1 }

          -- It would be nice if we could use ifMtu as the size of the
          -- largest INFO field, but we can't because ifMtu is defined
          -- to be the size that the (inter-)network layer can use which
          -- can differ from the MAC layer (especially if several layers
          -- of encapsulation are used).

          dot1dTpPortMaxInfo OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The maximum size of the INFO (non-MAC) field that
                      this port will receive or transmit."
              ::= { dot1dTpPortEntry 2 }

          dot1dTpPortInFrames OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of frames that have been received by
                      this port from its segment. Note that a frame
                      received on the interface corresponding to this
                      port is only counted by this object if and only if
                      it is for a protocol being processed by the local
                      bridging function, including bridge management
                      frames."
              REFERENCE
                      "IEEE 802.1D-1990: Section 6.6.1.1.3"
              ::= { dot1dTpPortEntry 3 }

          dot1dTpPortOutFrames OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of frames that have been transmitted
                      by this port to its segment.  Note that a frame
                      transmitted on the interface corresponding to this
                      port is only counted by this object if and only if
                      it is for a protocol being processed by the local
                      bridging function, including bridge management
                      frames."
              REFERENCE
                      "IEEE 802.1D-1990: Section 6.6.1.1.3"
              ::= { dot1dTpPortEntry 4 }

          dot1dTpPortInDiscards OBJECT-TYPE
              SYNTAX   Counter
              ACCESS   read-only
              STATUS   mandatory
              DESCRIPTION
                      "Count of valid frames received which were
                      discarded (i.e., filtered) by the Forwarding
                      Process."
              REFERENCE
                      "IEEE 802.1D-1990: Section 6.6.1.1.3"
              ::= { dot1dTpPortEntry 5 }

          -- The Static (Destination-Address Filtering) Database

          -- Implementation of this group is optional.

          dot1dStaticTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF Dot1dStaticEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A table containing filtering information
                      configured into the bridge by (local or network)
                      management specifying the set of ports to which
                      frames received from specific ports and containing
                      specific destination addresses are allowed to be
                      forwarded.  The value of zero in this table as the
                      port number from which frames with a specific
                      destination address are received, is used to
                      specify all ports for which there is no specific
                      entry in this table for that particular
                      destination address.  Entries are valid for
                      unicast and for group/broadcast addresses."
              REFERENCE
                      "IEEE 802.1D-1990: Section 6.7.2"
              ::= { dot1dStatic 1 }

          dot1dStaticEntry OBJECT-TYPE
              SYNTAX  Dot1dStaticEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Filtering information configured into the bridge
                      by (local or network) management specifying the
                      set of ports to which frames received from a
                      specific port and containing a specific
                      destination address are allowed to be forwarded."
              REFERENCE
                      "IEEE 802.1D-1990: Section 6.7.2"


              INDEX   { dot1dStaticAddress, dot1dStaticReceivePort }
              ::= { dot1dStaticTable 1 }

          Dot1dStaticEntry ::=
              SEQUENCE {
                  dot1dStaticAddress
                      MacAddress,
                  dot1dStaticReceivePort
                      INTEGER,
                  dot1dStaticAllowedToGoTo
                      OCTET STRING,
                  dot1dStaticStatus
                      INTEGER
              }

          dot1dStaticAddress OBJECT-TYPE
              SYNTAX  MacAddress
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The destination MAC address in a frame to which
                      this entry's filtering information applies.  This
                      object can take the value of a unicast address, a
                      group address or the broadcast address."
              REFERENCE
                      "IEEE 802.1D-1990: Section 3.9.1, 3.9.2"
              ::= { dot1dStaticEntry 1 }

          dot1dStaticReceivePort OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "Either the value '0', or the port number of the
                      port from which a frame must be received in order
                      for this entry's filtering information to apply.
                      A value of zero indicates that this entry applies
                      on all ports of the bridge for which there is no
                      other applicable entry."
              ::= { dot1dStaticEntry 2 }

          dot1dStaticAllowedToGoTo OBJECT-TYPE
              SYNTAX  OCTET STRING
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The set of ports to which frames received from a
                      specific port and destined for a specific MAC
                      address, are allowed to be forwarded.  Each octet
                      within the value of this object specifies a set of
                      eight ports, with the first octet specifying ports
                      1 through 8, the second octet specifying ports 9
                      through 16, etc.  Within each octet, the most
                      significant bit represents the lowest numbered
                      port, and the least significant bit represents the
                      highest numbered port.  Thus, each port of the
                      bridge is represented by a single bit within the
                      value of this object.  If that bit has a value of
                      '1' then that port is included in the set of
                      ports; the port is not included if its bit has a
                      value of '0'.  (Note that the setting of the bit
                      corresponding to the port from which a frame is
                      received is irrelevant.)  The default value of
                      this object is a string of ones of appropriate
                      length."
              ::= { dot1dStaticEntry 3 }

          dot1dStaticStatus OBJECT-TYPE
              SYNTAX  INTEGER {
                          other(1),
                          invalid(2),
                          permanent(3),
                          deleteOnReset(4),
                          deleteOnTimeout(5)
                      }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "This object indicates the status of this entry.
                      The default value is permanent(3).

                           other(1) - this entry is currently in use but
                                the conditions under which it will
                                remain so are different from each of the
                                following values.
                           invalid(2) - writing this value to the object
                                removes the corresponding entry.
                           permanent(3) - this entry is currently in use
                                and will remain so after the next reset
                                of the bridge.
                           deleteOnReset(4) - this entry is currently in
                                use and will remain so until the next
                                reset of the bridge.
                           deleteOnTimeout(5) - this entry is currently
                                in use and will remain so until it is
                                aged out."
              ::= { dot1dStaticEntry 4 }

          -- Traps for use by Bridges

          -- Traps for the Spanning Tree Protocol

--          newRoot TRAP-TYPE
----              ENTERPRISE  dot1dBridge
--              DESCRIPTION
--                      "The newRoot trap indicates that the sending agent
--                      has become the new root of the Spanning Tree; the
--                      trap is sent by a bridge soon after its election
--                      as the new root, e.g., upon expiration of the
--                      Topology Change Timer immediately subsequent to
--                      its election.  Implementation of this trap is
--                      optional."
--              ::= 1
--
--          topologyChange TRAP-TYPE
--              ENTERPRISE  dot1dBridge
--              DESCRIPTION
--                      "A topologyChange trap is sent by a bridge when
--                      any of its configured ports transitions from the
--                      Learning state to the Forwarding state, or from
--                      the Forwarding state to the Blocking state.  The
--                      trap is not sent if a newRoot trap is sent for the
--                      same transition.  Implementation of this trap is
--                      optional."
--              ::= 2

END
-- @(#)WSCCS u/mibs-rfc1516.mib 1.1 8/30/95
-- Changes to rfc1516 (SNMP Repeater MIB):
--     Added the IMPORT for mib-2.

SNMP-REPEATER-MIB DEFINITIONS ::= BEGIN

   IMPORTS
       Counter, TimeTicks, Gauge
                                           FROM RFC1155-SMI
       DisplayString, mib-2                FROM RFC1213-MIB
       TRAP-TYPE                           FROM RFC-1215
       OBJECT-TYPE                         FROM RFC-1212;

   snmpDot3RptrMgt OBJECT IDENTIFIER ::= { mib-2 22 }

   -- All representations of MAC addresses in this MIB Module use,
   -- as a textual convention (i.e., this convention does not affect
   -- their encoding), the data type:

   MacAddress ::= OCTET STRING (SIZE (6))    -- a 6 octet address in
                                             -- the "canonical" order
   -- defined by IEEE 802.1a, i.e., as if it were transmitted least
   -- significant bit first.

   --                      References
   --
   -- The following references are used throughout this MIB:
   --


   -- [IEEE 802.3 Std]
   --    refers to IEEE 802.3/ISO 8802-3 Information processing
   --    systems - Local area networks - Part 3: Carrier sense
   --    multiple access with collision detection (CSMA/CD)
   --    access method and physical layer specifications
   --    (2nd edition, September 21, 1990).
   --
   -- [IEEE 802.3 Rptr Mgt]
   --    refers to IEEE P802.3K, 'Layer Management for 10 Mb/s
   --    Baseband Repeaters, Section 19,' Draft Supplement to
   --    ANSI/IEEE 802.3, (Draft 8, April 9, 1992)

   --                      MIB Groups
   --
   -- The rptrBasicPackage group is mandatory.
   -- The rptrMonitorPackage and rptrAddrTrackPackage
   -- groups are optional.

   rptrBasicPackage
       OBJECT IDENTIFIER ::= { snmpDot3RptrMgt 1 }

   rptrMonitorPackage
       OBJECT IDENTIFIER ::= { snmpDot3RptrMgt 2 }

   rptrAddrTrackPackage
       OBJECT IDENTIFIER ::= { snmpDot3RptrMgt 3 }

   -- object identifiers for organizing the information
   -- in the groups by repeater, port-group, and port

   rptrRptrInfo
       OBJECT IDENTIFIER ::= { rptrBasicPackage 1 }
   rptrGroupInfo
       OBJECT IDENTIFIER ::= { rptrBasicPackage 2 }
   rptrPortInfo
       OBJECT IDENTIFIER ::= { rptrBasicPackage 3 }

   rptrMonitorRptrInfo
       OBJECT IDENTIFIER ::= { rptrMonitorPackage 1 }
   rptrMonitorGroupInfo
       OBJECT IDENTIFIER ::= { rptrMonitorPackage 2 }
   rptrMonitorPortInfo
       OBJECT IDENTIFIER ::= { rptrMonitorPackage 3 }

   rptrAddrTrackRptrInfo     -- this subtree is currently unused
       OBJECT IDENTIFIER ::= { rptrAddrTrackPackage 1 }
   rptrAddrTrackGroupInfo    -- this subtree is currently unused
       OBJECT IDENTIFIER ::= { rptrAddrTrackPackage 2 }
   rptrAddrTrackPortInfo
       OBJECT IDENTIFIER ::= { rptrAddrTrackPackage 3 }

   --
   --                    The BASIC GROUP
   --
   -- Implementation of the Basic Group is mandatory for all
   -- managed repeaters.

   --
   -- Basic Repeater Information
   --
   -- Configuration, status, and control objects for the overall
   -- repeater
   --

   rptrGroupCapacity OBJECT-TYPE
       SYNTAX    INTEGER (1..1024)
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "The rptrGroupCapacity is the number of groups
               that can be contained within the repeater.  Within
               each managed repeater, the groups are uniquely
               numbered in the range from 1 to rptrGroupCapacity.

               Some groups may not be present in the repeater, in
               which case the actual number of groups present
               will be less than rptrGroupCapacity.  The number
               of groups present will never be greater than
               rptrGroupCapacity.

               Note:  In practice, this will generally be the
               number of field-replaceable units (i.e., modules,
               cards, or boards) that can fit in the physical
               repeater enclosure, and the group numbers will
               correspond to numbers marked on the physical
               enclosure."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.3.2,
               aRepeaterGroupCapacity."
       ::= { rptrRptrInfo 1 }

   rptrOperStatus OBJECT-TYPE
       SYNTAX  INTEGER {
                   other(1),            -- undefined or unknown status
                   ok(2),               -- no known failures
                   rptrFailure(3),      -- repeater-related failure
                   groupFailure(4),     -- group-related failure
                   portFailure(5),      -- port-related failure
                   generalFailure(6)    -- failure, unspecified type
               }
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "The rptrOperStatus object indicates the
               operational state of the repeater.  The
               rptrHealthText object may be consulted for more
               specific information about the state of the
               repeater's health.

               In the case of multiple kinds of failures (e.g.,
               repeater failure and port failure), the value of
               this attribute shall reflect the highest priority
               failure in the following order, listed highest
               priority first:

                   rptrFailure(3)
                   groupFailure(4)
                   portFailure(5)
                   generalFailure(6)."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.3.2,
               aRepeaterHealthState."
       ::= { rptrRptrInfo 2 }

   rptrHealthText OBJECT-TYPE
       SYNTAX    DisplayString (SIZE (0..255))
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "The health text object is a text string that
               provides information relevant to the operational
               state of the repeater.  Agents may use this string
               to provide detailed information on current
               failures, including how they were detected, and/or
               instructions for problem resolution.  The contents
               are agent-specific."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.3.2,
               aRepeaterHealthText."
       ::= { rptrRptrInfo 3 }


   rptrReset OBJECT-TYPE
       SYNTAX    INTEGER {
                     noReset(1),
                     reset(2)
                 }
       ACCESS    read-write
       STATUS    mandatory
       DESCRIPTION
               "Setting this object to reset(2) causes a
               transition to the START state of Fig 9-2 in
               section 9 [IEEE 802.3 Std].

               Setting this object to noReset(1) has no effect.
               The agent will always return the value noReset(1)
               when this object is read.

               After receiving a request to set this variable to
               reset(2), the agent is allowed to delay the reset
               for a short period.  For example, the implementor
               may choose to delay the reset long enough to allow
               the SNMP response to be transmitted.  In any
               event, the SNMP response must be transmitted.

               This action does not reset the management counters
               defined in this document nor does it affect the
               portAdminStatus parameters.  Included in this
               action is the execution of a disruptive Self-Test
               with the following characteristics:  a) The nature
               of the tests is not specified.  b) The test resets
               the repeater but without affecting management
               information about the repeater.  c) The test does
               not inject packets onto any segment.  d) Packets
               received during the test may or may not be
               transferred.  e) The test does not interfere with
               management functions.

               After performing this self-test, the agent will
               update the repeater health information (including
               rptrOperStatus and rptrHealthText), and send a
               rptrHealth trap."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.3.3,
               acResetRepeater."
       ::= { rptrRptrInfo 4 }

   rptrNonDisruptTest OBJECT-TYPE
       SYNTAX    INTEGER {
                     noSelfTest(1),
                     selfTest(2)
                 }
       ACCESS    read-write
       STATUS    mandatory
       DESCRIPTION
               "Setting this object to selfTest(2) causes the
               repeater to perform a agent-specific, non-
               disruptive self-test that has the following
               characteristics:  a) The nature of the tests is
               not specified.  b) The test does not change the
               state of the repeater or management information
               about the repeater.  c) The test does not inject
               packets onto any segment.  d) The test does not
               prevent the relay of any packets.  e) The test
               does not interfere with management functions.

               After performing this test, the agent will update
               the repeater health information (including
               rptrOperStatus and rptrHealthText) and send a
               rptrHealth trap.

               Note that this definition allows returning an
               'okay' result after doing a trivial test.

               Setting this object to noSelfTest(1) has no
               effect.  The agent will always return the value
               noSelfTest(1) when this object is read."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.3.3,
               acExecuteNonDisruptiveSelfTest."
       ::= { rptrRptrInfo 5 }

   rptrTotalPartitionedPorts OBJECT-TYPE
       SYNTAX    Gauge
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This object returns the total number of ports in
               the repeater whose current state meets all three
               of the following criteria:  rptrPortOperStatus
               does not have the value notPresent(3),
               rptrPortAdminStatus is enabled(1), and
               rptrPortAutoPartitionState is autoPartitioned(2)."
       ::= { rptrRptrInfo 6 }


   --
   -- The Basic Port Group Table
   --

   rptrGroupTable OBJECT-TYPE
       SYNTAX    SEQUENCE OF RptrGroupEntry
       ACCESS    not-accessible
       STATUS    mandatory
       DESCRIPTION
               "Table of descriptive and status information about
               the groups of ports."
       ::= { rptrGroupInfo 1 }

   rptrGroupEntry OBJECT-TYPE
       SYNTAX    RptrGroupEntry
       ACCESS    not-accessible
       STATUS    mandatory
       DESCRIPTION
               "An entry in the table, containing information
               about a single group of ports."
       INDEX    { rptrGroupIndex }
       ::= { rptrGroupTable 1 }

   RptrGroupEntry ::=
       SEQUENCE {
           rptrGroupIndex
               INTEGER,
           rptrGroupDescr
               DisplayString,
           rptrGroupObjectID
               OBJECT IDENTIFIER,
           rptrGroupOperStatus
               INTEGER,
           rptrGroupLastOperStatusChange
               TimeTicks,
           rptrGroupPortCapacity
               INTEGER
       }

   rptrGroupIndex OBJECT-TYPE
       SYNTAX    INTEGER (1..1024)
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This object identifies the group within the
               repeater for which this entry contains
               information.  This value is never greater than
               rptrGroupCapacity."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.5.2,
               aGroupID."
       ::= { rptrGroupEntry 1 }

   rptrGroupDescr OBJECT-TYPE
       SYNTAX    DisplayString (SIZE (0..255))
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "A textual description of the group.  This value
               should include the full name and version
               identification of the group's hardware type and
               indicate how the group is differentiated from
               other types of groups in the repeater.  Plug-in
               Module, Rev A' or 'Barney Rubble 10BASE-T 4-port
               SIMM socket Version 2.1' are examples of valid
               group descriptions.

               It is mandatory that this only contain printable
               ASCII characters."
       ::= { rptrGroupEntry 2 }

   rptrGroupObjectID OBJECT-TYPE
       SYNTAX    OBJECT IDENTIFIER
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "The vendor's authoritative identification of the
               group.  This value may be allocated within the SMI
               enterprises subtree (1.3.6.1.4.1) and provides a
               straight-forward and unambiguous means for
               determining what kind of group is being managed.

               For example, this object could take the value
               1.3.6.1.4.1.4242.1.2.14 if vendor 'Flintstones,
               Inc.' was assigned the subtree 1.3.6.1.4.1.4242,
               and had assigned the identifier
               1.3.6.1.4.1.4242.1.2.14 to its 'Wilma Flintstone
               6-Port FOIRL Plug-in Module.'"
       ::= { rptrGroupEntry 3 }

   rptrGroupOperStatus OBJECT-TYPE
       SYNTAX    INTEGER {
                     other(1),
                     operational(2),
                     malfunctioning(3),
                     notPresent(4),


                     underTest(5),
                     resetInProgress(6)
                 }
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "An object that indicates the operational status
               of the group.

               A status of notPresent(4) indicates that the group
               is temporarily or permanently physically and/or
               logically not a part of the repeater.  It is an
               implementation-specific matter as to whether the
               agent effectively removes notPresent entries from
               the table.

               A status of operational(2) indicates that the
               group is functioning, and a status of
               malfunctioning(3) indicates that the group is
               malfunctioning in some way."
       ::= { rptrGroupEntry 4 }

   rptrGroupLastOperStatusChange OBJECT-TYPE
       SYNTAX    TimeTicks
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "An object that contains the value of sysUpTime at
               the time that the value of the rptrGroupOperStatus
               object for this group last changed.

               A value of zero indicates that the group's
               operational status has not changed since the agent
               last restarted."
       ::= { rptrGroupEntry 5 }

   rptrGroupPortCapacity OBJECT-TYPE
       SYNTAX    INTEGER (1..1024)
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "The rptrGroupPortCapacity is the number of ports
               that can be contained within the group.  Valid
               range is 1-1024.  Within each group, the ports are
               uniquely numbered in the range from 1 to
               rptrGroupPortCapacity.

               Note:  In practice, this will generally be the
               number of ports on a module, card, or board, and
               the port numbers will correspond to numbers marked
               on the physical embodiment."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.5.2,
               aGroupPortCapacity."
       ::= { rptrGroupEntry 6 }

   --
   -- The Basic Port Table
   --

   rptrPortTable OBJECT-TYPE
       SYNTAX    SEQUENCE OF RptrPortEntry
       ACCESS    not-accessible
       STATUS    mandatory
       DESCRIPTION
               "Table of descriptive and status information about
               the ports."
       ::= { rptrPortInfo 1 }

   rptrPortEntry OBJECT-TYPE
       SYNTAX    RptrPortEntry
       ACCESS    not-accessible
       STATUS    mandatory
       DESCRIPTION
               "An entry in the table, containing information
               about a single port."
       INDEX    { rptrPortGroupIndex, rptrPortIndex }
       ::= { rptrPortTable 1 }

   RptrPortEntry ::=
       SEQUENCE {
           rptrPortGroupIndex
               INTEGER,
           rptrPortIndex
               INTEGER,
           rptrPortAdminStatus
               INTEGER,
           rptrPortAutoPartitionState
               INTEGER,
           rptrPortOperStatus
               INTEGER
       }

   rptrPortGroupIndex OBJECT-TYPE
       SYNTAX    INTEGER (1..1024)
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This object identifies the group containing the
               port for which this entry contains information."
       ::= { rptrPortEntry 1 }

   rptrPortIndex OBJECT-TYPE
       SYNTAX    INTEGER (1..1024)
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This object identifies the port within the group
               for which this entry contains information.  This
               value can never be greater than
               rptrGroupPortCapacity for the associated group."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aPortID."
       ::= { rptrPortEntry 2 }

   rptrPortAdminStatus OBJECT-TYPE
       SYNTAX    INTEGER {
                     enabled(1),
                     disabled(2)
                 }
       ACCESS    read-write
       STATUS    mandatory
       DESCRIPTION
               "Setting this object to disabled(2) disables the
               port.  A disabled port neither transmits nor
               receives.  Once disabled, a port must be
               explicitly enabled to restore operation.  A port
               which is disabled when power is lost or when a
               reset is exerted shall remain disabled when normal
               operation resumes.

               The admin status takes precedence over auto-
               partition and functionally operates between the
               auto-partition mechanism and the AUI/PMA.

               Setting this object to enabled(1) enables the port
               and exerts a BEGIN on the port's auto-partition
               state machine.

               (In effect, when a port is disabled, the value of
               rptrPortAutoPartitionState for that port is frozen
               until the port is next enabled.  When the port


               becomes enabled, the rptrPortAutoPartitionState
               becomes notAutoPartitioned(1), regardless of its
               pre-disabling state.)"
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aPortAdminState and 19.2.6.3, acPortAdminControl."
       ::= { rptrPortEntry 3 }

   rptrPortAutoPartitionState OBJECT-TYPE
       SYNTAX    INTEGER {
                     notAutoPartitioned(1),
                     autoPartitioned(2)
                 }
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "The autoPartitionState flag indicates whether the
               port is currently partitioned by the repeater's
               auto-partition protection.

               The conditions that cause port partitioning are
               specified in partition state machine in Section 9
               [IEEE 802.3 Std].  They are not differentiated
               here."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aAutoPartitionState."
       ::= { rptrPortEntry 4 }

   rptrPortOperStatus  OBJECT-TYPE
       SYNTAX    INTEGER {
                     operational(1),
                     notOperational(2),
                     notPresent(3)
                 }
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This object indicates the port's operational
               status.  The notPresent(3) status indicates the
               port is physically removed (note this may or may
               not be possible depending on the type of port.)
               The operational(1) status indicates that the port
               is enabled (see rptrPortAdminStatus) and working,
               even though it might be auto-partitioned (see
               rptrPortAutoPartitionState).

               If this object has the value operational(1) and


               rptrPortAdminStatus is set to disabled(2), it is
               expected that this object's value will soon change
               to notOperational(2)."
       ::= { rptrPortEntry 5 }

   --
   --                    The MONITOR GROUP
   --
   -- Implementation of this group is optional, but within the
   -- group all elements are mandatory.  If a managed repeater
   -- implements any part of this group, the entire group shall
   -- be implemented.

   --
   -- Repeater Monitor Information
   --
   -- Performance monitoring statistics for the repeater
   --

   rptrMonitorTransmitCollisions OBJECT-TYPE
       SYNTAX    Counter
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This counter is incremented every time the
               repeater state machine enters the TRANSMIT
               COLLISION state from any state other than ONE PORT
               LEFT (Ref: Fig 9-2, IEEE 802.3 Std).

               The approximate minimum time for rollover of this
               counter is 16 hours."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.3.2,
               aTransmitCollisions."
       ::= { rptrMonitorRptrInfo 1 }

   --
   -- The Group Monitor Table
   --

   rptrMonitorGroupTable OBJECT-TYPE
       SYNTAX    SEQUENCE OF RptrMonitorGroupEntry
       ACCESS    not-accessible
       STATUS    mandatory
       DESCRIPTION
               "Table of performance and error statistics for the
               groups."
       ::= { rptrMonitorGroupInfo 1 }

   rptrMonitorGroupEntry OBJECT-TYPE
       SYNTAX    RptrMonitorGroupEntry
       ACCESS    not-accessible
       STATUS    mandatory
       DESCRIPTION
               "An entry in the table, containing total
               performance and error statistics for a single
               group.  Regular retrieval of the information in
               this table provides a means of tracking the
               performance and health of the networked devices
               attached to this group's ports.

               The counters in this table are redundant in the
               sense that they are the summations of information
               already available through other objects.  However,
               these sums provide a considerable optimization of
               network management traffic over the otherwise
               necessary retrieval of the individual counters
               included in each sum."
       INDEX    { rptrMonitorGroupIndex }
       ::= { rptrMonitorGroupTable 1 }

   RptrMonitorGroupEntry ::=
       SEQUENCE {
           rptrMonitorGroupIndex
               INTEGER,
           rptrMonitorGroupTotalFrames
               Counter,
           rptrMonitorGroupTotalOctets
               Counter,
           rptrMonitorGroupTotalErrors
               Counter
       }

   rptrMonitorGroupIndex OBJECT-TYPE
       SYNTAX    INTEGER (1..1024)
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This object identifies the group within the
               repeater for which this entry contains
               information."
       ::= { rptrMonitorGroupEntry 1 }

   rptrMonitorGroupTotalFrames OBJECT-TYPE
       SYNTAX    Counter
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "The total number of frames of valid frame length
               that have been received on the ports in this group
               and for which the FCSError and CollisionEvent
               signals were not asserted.  This counter is the
               summation of the values of the
               rptrMonitorPortReadableFrames counters for all of
               the ports in the group.

               This statistic provides one of the parameters
               necessary for obtaining the packet error rate.
               The approximate minimum time for rollover of this
               counter is 80 hours."
       ::= { rptrMonitorGroupEntry 2 }

   rptrMonitorGroupTotalOctets OBJECT-TYPE
       SYNTAX    Counter
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "The total number of octets contained in the valid
               frames that have been received on the ports in
               this group.  This counter is the summation of the
               values of the rptrMonitorPortReadableOctets
               counters for all of the ports in the group.

               This statistic provides an indicator of the total
               data transferred.  The approximate minimum time
               for rollover of this counter is 58 minutes."
       ::= { rptrMonitorGroupEntry 3 }

   rptrMonitorGroupTotalErrors OBJECT-TYPE
       SYNTAX    Counter
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "The total number of errors which have occurred on
               all of the ports in this group.  This counter is
               the summation of the values of the
               rptrMonitorPortTotalErrors counters for all of the
               ports in the group."
       ::= { rptrMonitorGroupEntry 4 }

   --
   -- The Port Monitor Table


   --

   rptrMonitorPortTable OBJECT-TYPE
       SYNTAX    SEQUENCE OF RptrMonitorPortEntry
       ACCESS    not-accessible
       STATUS    mandatory
       DESCRIPTION
               "Table of performance and error statistics for the
               ports."
       ::= { rptrMonitorPortInfo 1 }

   rptrMonitorPortEntry OBJECT-TYPE
       SYNTAX    RptrMonitorPortEntry
       ACCESS    not-accessible
       STATUS    mandatory
       DESCRIPTION
               "An entry in the table, containing performance and
               error statistics for a single port."
       INDEX    { rptrMonitorPortGroupIndex, rptrMonitorPortIndex }
       ::= { rptrMonitorPortTable 1 }

   RptrMonitorPortEntry ::=
       SEQUENCE {
           rptrMonitorPortGroupIndex
               INTEGER,
           rptrMonitorPortIndex
               INTEGER,
           rptrMonitorPortReadableFrames
               Counter,
           rptrMonitorPortReadableOctets
               Counter,
           rptrMonitorPortFCSErrors
               Counter,
           rptrMonitorPortAlignmentErrors
               Counter,
           rptrMonitorPortFrameTooLongs
               Counter,
           rptrMonitorPortShortEvents
               Counter,
           rptrMonitorPortRunts
               Counter,
           rptrMonitorPortCollisions
               Counter,
           rptrMonitorPortLateEvents
               Counter,
           rptrMonitorPortVeryLongEvents
               Counter,
           rptrMonitorPortDataRateMismatches
               Counter,
           rptrMonitorPortAutoPartitions
               Counter,
           rptrMonitorPortTotalErrors
               Counter
       }

   rptrMonitorPortGroupIndex OBJECT-TYPE
       SYNTAX    INTEGER (1..1024)
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This object identifies the group containing the
               port for which this entry contains information."
       ::= { rptrMonitorPortEntry 1 }

   rptrMonitorPortIndex OBJECT-TYPE
       SYNTAX    INTEGER (1..1024)
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This object identifies the port within the group
               for which this entry contains information."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aPortID."
       ::= { rptrMonitorPortEntry 2 }

   rptrMonitorPortReadableFrames OBJECT-TYPE
       SYNTAX    Counter
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This object is the number of frames of valid
               frame length that have been received on this port.
               This counter is incremented by one for each frame
               received on this port whose OctetCount is greater
               than or equal to minFrameSize and less than or
               equal to maxFrameSize (Ref: IEEE 802.3 Std,
               4.4.2.1) and for which the FCSError and
               CollisionEvent signals are not asserted.

               This statistic provides one of the parameters
               necessary for obtaining the packet error rate.
               The approximate minimum time for rollover of this
               counter is 80 hours."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aReadableFrames."
       ::= { rptrMonitorPortEntry 3 }

   rptrMonitorPortReadableOctets OBJECT-TYPE
       SYNTAX    Counter
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This object is the number of octets contained in
               valid frames that have been received on this port.
               This counter is incremented by OctetCount for each
               frame received on this port which has been
               determined to be a readable frame (i.e., including
               FCS octets but excluding framing bits and dribble
               bits).

               This statistic provides an indicator of the total
               data transferred.  The approximate minimum time
               for rollover of this counter is 58 minutes."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aReadableOctets."
       ::= { rptrMonitorPortEntry 4 }

   rptrMonitorPortFCSErrors OBJECT-TYPE
       SYNTAX    Counter
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This counter is incremented by one for each frame
               received on this port with the FCSError signal
               asserted and the FramingError and CollisionEvent
               signals deasserted and whose OctetCount is greater
               than or equal to minFrameSize and less than or
               equal to maxFrameSize (Ref: 4.4.2.1, IEEE 802.3
               Std).

               The approximate minimum time for rollover of this
               counter is 80 hours."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aFrameCheckSequenceErrors."
       ::= { rptrMonitorPortEntry 5 }

   rptrMonitorPortAlignmentErrors OBJECT-TYPE
       SYNTAX    Counter
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This counter is incremented by one for each frame
               received on this port with the FCSError and
               FramingError signals asserted and CollisionEvent
               signal deasserted and whose OctetCount is greater
               than or equal to minFrameSize and less than or
               equal to maxFrameSize (Ref: IEEE 802.3 Std,
               4.4.2.1).  If rptrMonitorPortAlignmentErrors is
               incremented then the rptrMonitorPortFCSErrors
               Counter shall not be incremented for the same
               frame.

               The approximate minimum time for rollover of this
               counter is 80 hours."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aAlignmentErrors."
       ::= { rptrMonitorPortEntry 6 }

   rptrMonitorPortFrameTooLongs OBJECT-TYPE
       SYNTAX    Counter
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This counter is incremented by one for each frame
               received on this port whose OctetCount is greater
               than maxFrameSize (Ref: 4.4.2.1, IEEE 802.3 Std).
               If rptrMonitorPortFrameTooLongs is incremented
               then neither the rptrMonitorPortAlignmentErrors
               nor the rptrMonitorPortFCSErrors counter shall be
               incremented for the frame.

               The approximate minimum time for rollover of this
               counter is 61 days."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aFramesTooLong."
       ::= { rptrMonitorPortEntry 7 }

   rptrMonitorPortShortEvents OBJECT-TYPE
       SYNTAX    Counter
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This counter is incremented by one for each
               CarrierEvent on this port with ActivityDuration
               less than ShortEventMaxTime.  ShortEventMaxTime is
               greater than 74 bit times and less than 82 bit
               times.  ShortEventMaxTime has tolerances included
               to provide for circuit losses between a
               conformance test point at the AUI and the
               measurement point within the state machine.

               Note:  shortEvents may indicate externally
               generated noise hits which will cause the repeater
               to transmit Runts to its other ports, or propagate
               a collision (which may be late) back to the
               transmitting DTE and damaged frames to the rest of
               the network.

               Implementors may wish to consider selecting the
               ShortEventMaxTime towards the lower end of the
               allowed tolerance range to accommodate bit losses
               suffered through physical channel devices not
               budgeted for within this standard.

               The approximate minimum time for rollover of this
               counter is 16 hours."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aShortEvents."
       ::= { rptrMonitorPortEntry 8 }

   rptrMonitorPortRunts OBJECT-TYPE
       SYNTAX    Counter
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This counter is incremented by one for each
               CarrierEvent on this port that meets one of the
               following two conditions.  Only one test need be
               made.  a) The ActivityDuration is greater than
               ShortEventMaxTime and less than ValidPacketMinTime
               and the CollisionEvent signal is deasserted.  b)
               The OctetCount is less than 64, the
               ActivityDuration is greater than ShortEventMaxTime
               and the CollisionEvent signal is deasserted.
               ValidPacketMinTime is greater than or equal to 552
               bit times and less than 565 bit times.

               An event whose length is greater than 74 bit times
               but less than 82 bit times shall increment either
               the shortEvents counter or the runts counter but
               not both.  A CarrierEvent greater than or equal to
               552 bit times but less than 565 bit times may or
               may not be counted as a runt.

               ValidPacketMinTime has tolerances included to
               provide for circuit losses between a conformance
               test point at the AUI and the measurement point
               within the state machine.

               Runts usually indicate collision fragments, a
               normal network event.  In certain situations
               associated with large diameter networks a
               percentage of collision fragments may exceed
               ValidPacketMinTime.

               The approximate minimum time for rollover of this
               counter is 16 hours."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2, aRunts."
       ::= { rptrMonitorPortEntry 9 }

   rptrMonitorPortCollisions OBJECT-TYPE
       SYNTAX    Counter
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This counter is incremented by one for any
               CarrierEvent signal on any port for which the
               CollisionEvent signal on this port is also
               asserted.

               The approximate minimum time for rollover of this
               counter is 16 hours."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aCollisions."
       ::= { rptrMonitorPortEntry 10 }

   rptrMonitorPortLateEvents OBJECT-TYPE
       SYNTAX    Counter
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This counter is incremented by one for each
               CarrierEvent on this port in which the CollIn(X)
               variable transitions to the value SQE (Ref:
               9.6.6.2, IEEE 802.3 Std) while the
               ActivityDuration is greater than the
               LateEventThreshold.  Such a CarrierEvent is
               counted twice, as both a collision and as a
               lateEvent.

               The LateEventThreshold is greater than 480 bit
               times and less than 565 bit times.
               LateEventThreshold has tolerances included to
               permit an implementation to build a single
               threshold to serve as both the LateEventThreshold
               and ValidPacketMinTime threshold.

               The approximate minimum time for rollover of this
               counter is 81 hours."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aLateEvents."
       ::= { rptrMonitorPortEntry 11 }

   rptrMonitorPortVeryLongEvents OBJECT-TYPE
       SYNTAX    Counter
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This counter is incremented by one for each
               CarrierEvent on this port whose ActivityDuration
               is greater than the MAU Jabber Lockup Protection
               timer TW3 (Ref: 9.6.1 & 9.6.5, IEEE 802.3 Std).
               Other counters may be incremented as appropriate."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aVeryLongEvents."
       ::= { rptrMonitorPortEntry 12 }

   rptrMonitorPortDataRateMismatches OBJECT-TYPE
       SYNTAX    Counter
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This counter is incremented by one for each frame
               received on this port that meets all of the
               following conditions:  a) The CollisionEvent
               signal is not asserted.  b) The ActivityDuration
               is greater than ValidPacketMinTime.  c) The
               frequency (data rate) is detectably mismatched
               from the local transmit frequency.  The exact
               degree of mismatch is vendor specific and is to be
               defined by the vendor for conformance testing.

               When this event occurs, other counters whose
               increment conditions were satisfied may or may not
               also be incremented, at the implementor's
               discretion.  Whether or not the repeater was able
               to maintain data integrity is beyond the scope of
               this standard."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aDataRateMismatches."
       ::= { rptrMonitorPortEntry 13 }

   rptrMonitorPortAutoPartitions OBJECT-TYPE
       SYNTAX    Counter
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This counter is incremented by one for each time
               the repeater has automatically partitioned this
               port.  The conditions that cause port partitioning
               are specified in the partition state machine in
               Section 9 [IEEE 802.3 Std].  They are not
               differentiated here."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aAutoPartitions."
       ::= { rptrMonitorPortEntry 14 }

   rptrMonitorPortTotalErrors OBJECT-TYPE
       SYNTAX    Counter
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "The total number of errors which have occurred on
               this port.  This counter is the summation of the
               values of other error counters (for the same
               port), namely:

                   rptrMonitorPortFCSErrors,
                   rptrMonitorPortAlignmentErrors,
                   rptrMonitorPortFrameTooLongs,
                   rptrMonitorPortShortEvents,
                   rptrMonitorPortLateEvents,
                   rptrMonitorPortVeryLongEvents, and
                   rptrMonitorPortDataRateMismatches.

               This counter is redundant in the sense that it is
               the summation of information already available
               through other objects.  However, it is included
               specifically because the regular retrieval of this
               object as a means of tracking the health of a port
               provides a considerable optimization of network
               management traffic over the otherwise necessary
               retrieval of the summed counters."
       ::= { rptrMonitorPortEntry 15 }

   --
   --                    The ADDRESS TRACKING GROUP
   --
   -- Implementation of this group is optional; it is appropriate
   -- for all systems which have the necessary instrumentation.  If a
   -- managed repeater implements any part of this group, the entire
   -- group shall be implemented.

   --
   -- The Port Address Tracking Table
   --

   rptrAddrTrackTable OBJECT-TYPE
       SYNTAX    SEQUENCE OF RptrAddrTrackEntry
       ACCESS    not-accessible
       STATUS    mandatory
       DESCRIPTION
               "Table of address mapping information about the
               ports."
       ::= { rptrAddrTrackPortInfo 1 }

   rptrAddrTrackEntry OBJECT-TYPE
       SYNTAX    RptrAddrTrackEntry
       ACCESS    not-accessible
       STATUS    mandatory
       DESCRIPTION
               "An entry in the table, containing address mapping
               information about a single port."
       INDEX    { rptrAddrTrackGroupIndex, rptrAddrTrackPortIndex }
       ::= { rptrAddrTrackTable 1 }

   RptrAddrTrackEntry ::=
       SEQUENCE {
           rptrAddrTrackGroupIndex
               INTEGER,
           rptrAddrTrackPortIndex
               INTEGER,
           rptrAddrTrackLastSourceAddress     -- DEPRECATED OBJECT
               MacAddress,
           rptrAddrTrackSourceAddrChanges
               Counter,
           rptrAddrTrackNewLastSrcAddress
               OCTET STRING
       }


   rptrAddrTrackGroupIndex OBJECT-TYPE
       SYNTAX    INTEGER (1..1024)
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This object identifies the group containing the
               port for which this entry contains information."
       ::= { rptrAddrTrackEntry 1 }

   rptrAddrTrackPortIndex OBJECT-TYPE
       SYNTAX    INTEGER (1..1024)
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This object identifies the port within the group
               for which this entry contains information."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aPortID."
       ::= { rptrAddrTrackEntry 2 }

   rptrAddrTrackLastSourceAddress OBJECT-TYPE
       SYNTAX    MacAddress
       ACCESS    read-only
       STATUS    deprecated
       DESCRIPTION
               "This object is the SourceAddress of the last
               readable frame (i.e., counted by
               rptrMonitorPortReadableFrames) received by this
               port.

               This object has been deprecated because its value
               is undefined when no frames have been observed on
               this port.  The replacement object is
               rptrAddrTrackNewLastSrcAddress."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aLastSourceAddress."
       ::= { rptrAddrTrackEntry 3 }

   rptrAddrTrackSourceAddrChanges OBJECT-TYPE
       SYNTAX    Counter
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This counter is incremented by one for each time
               that the rptrAddrTrackLastSourceAddress attribute
               for this port has changed.
               This may indicate whether a link is connected to a
               single DTE or another multi-user segment.

               The approximate minimum time for rollover of this
               counter is 81 hours."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aSourceAddressChanges."
       ::= { rptrAddrTrackEntry 4 }

   rptrAddrTrackNewLastSrcAddress OBJECT-TYPE
       SYNTAX    OCTET STRING --(SIZE(0 | 6))
       ACCESS    read-only
       STATUS    mandatory
       DESCRIPTION
               "This object is the SourceAddress of the last
               readable frame (i.e., counted by
               rptrMonitorPortReadableFrames) received by this
               port.  If no frames have been received by this
               port since the agent began monitoring the port
               activity, the agent shall return a string of
               length zero."
       REFERENCE
               "Reference IEEE 802.3 Rptr Mgt, 19.2.6.2,
               aLastSourceAddress."
       ::= { rptrAddrTrackEntry 5 }

   -- Traps for use by Repeaters

   -- Traps are defined using the conventions in RFC 1215 [6].

--   rptrHealth TRAP-TYPE
--       ENTERPRISE  snmpDot3RptrMgt
--       VARIABLES   { rptrOperStatus }
--       DESCRIPTION
--               "The rptrHealth trap conveys information related
--               to the operational status of the repeater.  This
--               trap is sent either when the value of
--               rptrOperStatus changes, or upon completion of a
--               non-disruptive test.
--
--               The rptrHealth trap must contain the
--               rptrOperStatus object.  The agent may optionally
--               include the rptrHealthText object in the varBind
--               list.  See the rptrOperStatus and rptrHealthText
--               objects for descriptions of the information that
--               is sent.
--
--               The agent must throttle the generation of
--               consecutive rptrHealth traps so that there is at
--               least a five-second gap between traps of this
--               type.  When traps are throttled, they are dropped,
--               not queued for sending at a future time.  (Note
--               that 'generating' a trap means sending to all
--               configured recipients.)"
--       REFERENCE
--               "Reference IEEE 802.3 Rptr Mgt, 19.2.3.4,
--               hubHealth notification."
--       ::= 1
--
--   rptrGroupChange TRAP-TYPE
--       ENTERPRISE  snmpDot3RptrMgt
--       VARIABLES   { rptrGroupIndex }
--       DESCRIPTION
--               "This trap is sent when a change occurs in the
--               group structure of a repeater.  This occurs only
--               when a group is logically or physically removed
--               from or added to a repeater.  The varBind list
--               contains the identifier of the group that was
--               removed or added.
--
--               The agent must throttle the generation of
--               consecutive rptrGroupChange traps for the same
--               group so that there is at least a five-second gap
--               between traps of this type.  When traps are
--               throttled, they are dropped, not queued for
--               sending at a future time.  (Note that 'generating'
--               a trap means sending to all configured
--               recipients.)"
--       REFERENCE
--               "Reference IEEE 802.3 Rptr Mgt, 19.2.3.4,
--               groupMapChange notification."
--       ::= 2
--
--   rptrResetEvent TRAP-TYPE
--       ENTERPRISE  snmpDot3RptrMgt
--       VARIABLES   { rptrOperStatus }
--       DESCRIPTION
--               "The rptrResetEvent trap conveys information
--               related to the operational status of the repeater.
--               This trap is sent on completion of a repeater
--               reset action.  A repeater reset action is defined
--               as an a transition to the START state of Fig 9-2
--               in section 9 [IEEE 802.3 Std], when triggered by a
--               management command (e.g., an SNMP Set on the
--               rptrReset object).
--
--               The agent must throttle the generation of
--               consecutive rptrResetEvent traps so that there is
--               at least a five-second gap between traps of this
--               type.  When traps are throttled, they are dropped,
--               not queued for sending at a future time.  (Note
--               that 'generating' a trap means sending to all
--               configured recipients.)
--
--               The rptrResetEvent trap is not sent when the agent
--               restarts and sends an SNMP coldStart or warmStart
--               trap.  However, it is recommended that a repeater
--               agent send the rptrOperStatus object as an
--               optional object with its coldStart and warmStart
--               trap PDUs.
--
--               The rptrOperStatus object must be included in the
--               varbind list sent with this trap.  The agent may
--               optionally include the rptrHealthText object as
--               well."
--       REFERENCE
--               "Reference IEEE 802.3 Rptr Mgt, 19.2.3.4, hubReset
--               notification."
--       ::= 3

END
-- @(#)WSCCS b/mibs-rfc1757.mib 1.1 8/30/95
RMON-MIB DEFINITIONS ::= BEGIN

    IMPORTS
        Counter, TimeTicks     FROM RFC1155-SMI
        DisplayString, mib-2   FROM RFC1213-MIB
        OBJECT-TYPE            FROM RFC-1212
        TRAP-TYPE              FROM RFC-1215;

--  Remote Network Monitoring MIB

    rmon    OBJECT IDENTIFIER ::= { mib-2 16 }


    -- textual conventions

--    OwnerString ::= DisplayString
    -- This data type is used to model an administratively
    -- assigned name of the owner of a resource. This
    -- information is taken from the NVT ASCII character
    -- set.  It is suggested that this name contain one or
    -- more of the following: IP address, management station
    -- name, network manager's name, location, or phone
    -- number.
    -- In some cases the agent itself will be the owner of
    -- an entry.  In these cases, this string shall be set
    -- to a string starting with 'monitor'.
    --
    -- SNMP access control is articulated entirely in terms
    -- of the contents of MIB views; access to a particular
    -- SNMP object instance depends only upon its presence
    -- or absence in a particular MIB view and never upon
    -- its value or the value of related object instances.
    -- Thus, objects of this type afford resolution of
    -- resource contention only among cooperating managers;
    -- they realize no access control function with respect
    -- to uncooperative parties.
    --
    -- By convention, objects with this syntax are declared as
    -- having
    --
    --      SIZE (0..127)

    EntryStatus ::= INTEGER
               { valid(1),
                 createRequest(2),
                 underCreation(3),
                 invalid(4)
               }
    -- The status of a table entry.
    --
    -- Setting this object to the value invalid(4) has the
    -- effect of invalidating the corresponding entry.
    -- That is, it effectively disassociates the mapping
    -- identified with said entry.
    -- It is an implementation-specific matter as to whether
    -- the agent removes an invalidated entry from the table.
    -- Accordingly, management stations must be prepared to
    -- receive tabular information from agents that
    -- corresponds to entries currently not in use.  Proper
    -- interpretation of such entries requires examination
    -- of the relevant EntryStatus object.
    --
    -- An existing instance of this object cannot be set to
    -- createRequest(2).  This object may only be set to
    -- createRequest(2) when this instance is created.  When
    -- this object is created, the agent may wish to create
    -- supplemental object instances with default values
    -- to complete a conceptual row in this table.  Because
    -- the creation of these default objects is entirely at
    -- the option of the agent, the manager must not assume
    -- that any will be created, but may make use of any that
    -- are created. Immediately after completing the create
    -- operation, the agent must set this object to
    -- underCreation(3).
    --
    -- When in the underCreation(3) state, an entry is
    -- allowed to exist in a possibly incomplete, possibly
    -- inconsistent state, usually to allow it to be
    -- modified in mutiple PDUs.  When in this state, an
    -- entry is not fully active.  Entries shall exist in
    -- the underCreation(3) state until the management
    -- station is finished configuring the entry and sets
    -- this object to valid(1) or aborts, setting this
    -- object to invalid(4).  If the agent determines that
    -- an entry has been in the underCreation(3) state for
    -- an abnormally long time, it may decide that the
    -- management station has crashed.  If the agent makes
    -- this decision, it may set this object to invalid(4)
    -- to reclaim the entry.  A prudent agent will
    -- understand that the management station may need to
    -- wait for human input and will allow for that
    -- possibility in its determination of this abnormally
    -- long period.
    --
    -- An entry in the valid(1) state is fully configured and
    -- consistent and fully represents the configuration or
    -- operation such a row is intended to represent.  For
    -- example, it could be a statistical function that is
    -- configured and active, or a filter that is available
    -- in the list of filters processed by the packet capture
    -- process.
    --
    -- A manager is restricted to changing the state of an
    -- entry in the following ways:
    --
    --                       create   under
    --      To:       valid  Request  Creation  invalid
    -- From:
    -- valid             OK       NO        OK       OK
    -- createRequest    N/A      N/A       N/A      N/A
    -- underCreation     OK       NO        OK       OK
    -- invalid           NO       NO        NO       OK
    -- nonExistent       NO       OK        NO       OK
    --
    -- In the table above, it is not applicable to move the
    -- state from the createRequest state to any other
    -- state because the manager will never find the
    -- variable in that state.  The nonExistent state is
    -- not a value of the enumeration, rather it means that
    -- the entryStatus variable does not exist at all.
    --
    -- An agent may allow an entryStatus variable to change
    -- state in additional ways, so long as the semantics
    -- of the states are followed.  This allowance is made
    -- to ease the implementation of the agent and is made
    -- despite the fact that managers should never
    -- excercise these additional state transitions.


    statistics        OBJECT IDENTIFIER ::= { rmon 1 }
    history           OBJECT IDENTIFIER ::= { rmon 2 }
    alarm             OBJECT IDENTIFIER ::= { rmon 3 }
    hosts             OBJECT IDENTIFIER ::= { rmon 4 }
    hostTopN          OBJECT IDENTIFIER ::= { rmon 5 }
    matrix            OBJECT IDENTIFIER ::= { rmon 6 }
    filter            OBJECT IDENTIFIER ::= { rmon 7 }
    capture           OBJECT IDENTIFIER ::= { rmon 8 }
    event             OBJECT IDENTIFIER ::= { rmon 9 }


    -- The Ethernet Statistics Group
    --
    -- Implementation of the Ethernet Statistics group is
    -- optional.
    --
    -- The ethernet statistics group contains statistics
    -- measured by the probe for each monitored interface on
    -- this device.  These statistics take the form of free
    -- running counters that start from zero when a valid entry
    -- is created.
    --
    -- This group currently has statistics defined only for
    -- Ethernet interfaces.  Each etherStatsEntry contains
    -- statistics for one Ethernet interface.  The probe must
    -- create one etherStats entry for each monitored Ethernet
    -- interface on the device.

    etherStatsTable OBJECT-TYPE
        SYNTAX SEQUENCE OF EtherStatsEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of Ethernet statistics entries."
        ::= { statistics 1 }

    etherStatsEntry OBJECT-TYPE
        SYNTAX EtherStatsEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A collection of statistics kept for a particular
            Ethernet interface.  As an example, an instance of the
            etherStatsPkts object might be named etherStatsPkts.1"
        INDEX { etherStatsIndex }
        ::= { etherStatsTable 1 }

    EtherStatsEntry ::= SEQUENCE {
        etherStatsIndex                    INTEGER (1..65535),
        etherStatsDataSource               OBJECT IDENTIFIER,
        etherStatsDropEvents               Counter,
        etherStatsOctets                   Counter,
        etherStatsPkts                     Counter,
        etherStatsBroadcastPkts            Counter,
        etherStatsMulticastPkts            Counter,
        etherStatsCRCAlignErrors           Counter,
        etherStatsUndersizePkts            Counter,
        etherStatsOversizePkts             Counter,
        etherStatsFragments                Counter,
        etherStatsJabbers                  Counter,
        etherStatsCollisions               Counter,
        etherStatsPkts64Octets             Counter,
        etherStatsPkts65to127Octets        Counter,
        etherStatsPkts128to255Octets       Counter,
        etherStatsPkts256to511Octets       Counter,
        etherStatsPkts512to1023Octets      Counter,
        etherStatsPkts1024to1518Octets     Counter,
        etherStatsOwner                    DisplayString,
        etherStatsStatus                   EntryStatus
    }

    etherStatsIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The value of this object uniquely identifies this
            etherStats entry."
        ::= { etherStatsEntry 1 }

    etherStatsDataSource OBJECT-TYPE
        SYNTAX OBJECT IDENTIFIER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "This object identifies the source of the data that
            this etherStats entry is configured to analyze.  This
            source can be any ethernet interface on this device.
            In order to identify a particular interface, this
            object shall identify the instance of the ifIndex
            object, defined in RFC 1213 and RFC 1573 [4,6], for
            the desired interface.  For example, if an entry
            were to receive data from interface #1, this object
            would be set to ifIndex.1.

            The statistics in this group reflect all packets
            on the local network segment attached to the
            identified interface.

            An agent may or may not be able to tell if
            fundamental changes to the media of the interface
            have occurred and necessitate an invalidation of
            this entry.  For example, a hot-pluggable ethernet
            card could be pulled out and replaced by a
            token-ring card.  In such a case, if the agent has
            such knowledge of the change, it is recommended that
            it invalidate this entry.

            This object may not be modified if the associated
            etherStatsStatus object is equal to valid(1)."
        ::= { etherStatsEntry 2 }

    etherStatsDropEvents OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of events in which packets
            were dropped by the probe due to lack of resources.
            Note that this number is not necessarily the number of
            packets dropped; it is just the number of times this
            condition has been detected."
        ::= { etherStatsEntry 3 }

    etherStatsOctets OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of octets of data (including
            those in bad packets) received on the
            network (excluding framing bits but including
            FCS octets).

            This object can be used as a reasonable estimate of
            ethernet utilization.  If greater precision is
            desired, the etherStatsPkts and etherStatsOctets
            objects should be sampled before and after a common
            interval.  The differences in the sampled values are
            Pkts and Octets, respectively, and the number of
            seconds in the interval is Interval.  These values
            are used to calculate the Utilization as follows:

                             Pkts * (9.6 + 6.4) + (Octets * .8)
             Utilization = -------------------------------------
                                     Interval * 10,000

            The result of this equation is the value Utilization
            which is the percent utilization of the ethernet
            segment on a scale of 0 to 100 percent."
        ::= { etherStatsEntry 4 }

    etherStatsPkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of packets (including bad packets,
            broadcast packets, and multicast packets) received."
        ::= { etherStatsEntry 5 }

    etherStatsBroadcastPkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of good packets received that were
            directed to the broadcast address.  Note that this
            does not include multicast packets."
        ::= { etherStatsEntry 6 }

    etherStatsMulticastPkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of good packets received that were
            directed to a multicast address.  Note that this
            number does not include packets directed to the
            broadcast address."
        ::= { etherStatsEntry 7 }

    etherStatsCRCAlignErrors OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of packets received that
            had a length (excluding framing bits, but
            including FCS octets) of between 64 and 1518
            octets, inclusive, but but had either a bad
            Frame Check Sequence (FCS) with an integral
            number of octets (FCS Error) or a bad FCS with
            a non-integral number of octets (Alignment Error)."
        ::= { etherStatsEntry 8 }

    etherStatsUndersizePkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of packets received that were
            less than 64 octets long (excluding framing bits,
            but including FCS octets) and were otherwise well
            formed."
        ::= { etherStatsEntry 9 }

    etherStatsOversizePkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of packets received that were
            longer than 1518 octets (excluding framing bits,
            but including FCS octets) and were otherwise
            well formed."
        ::= { etherStatsEntry 10 }

    etherStatsFragments OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of packets received that were less
            than 64 octets in length (excluding framing bits but
            including FCS octets) and had either a bad Frame
            Check Sequence (FCS) with an integral number of
            octets (FCS Error) or a bad FCS with a non-integral
            number of octets (Alignment Error).

            Note that it is entirely normal for
            etherStatsFragments to increment.  This is because
            it counts both runts (which are normal occurrences
            due to collisions) and noise hits."
        ::= { etherStatsEntry 11 }

    etherStatsJabbers OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of packets received that were
            longer than 1518 octets (excluding framing bits,
            but including FCS octets), and had either a bad
            Frame Check Sequence (FCS) with an integral number
            of octets (FCS Error) or a bad FCS with a
            non-integral number of octets (Alignment Error).

            Note that this definition of jabber is different
            than the definition in IEEE-802.3 section 8.2.1.5
            (10BASE5) and section 10.3.1.4 (10BASE2).  These
            documents define jabber as the condition where any
            packet exceeds 20 ms.  The allowed range to detect
            jabber is between 20 ms and 150 ms."
        ::= { etherStatsEntry 12 }

    etherStatsCollisions OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The best estimate of the total number of collisions
            on this Ethernet segment.

            The value returned will depend on the location of
            the RMON probe. Section 8.2.1.3 (10BASE-5) and
            section 10.3.1.3 (10BASE-2) of IEEE standard 802.3
            states that a station must detect a collision, in
            the receive mode, if three or more stations are
            transmitting simultaneously.  A repeater port must
            detect a collision when two or more stations are
            transmitting simultaneously.  Thus a probe placed on
            a repeater port could record more collisions than a
            probe connected to a station on the same segment
            would.

            Probe location plays a much smaller role when
            considering 10BASE-T.  14.2.1.4 (10BASE-T) of IEEE
            standard 802.3 defines a collision as the
            simultaneous presence of signals on the DO and RD
            circuits (transmitting and receiving at the same
            time).  A 10BASE-T station can only detect
            collisions when it is transmitting.  Thus probes
            placed on a station and a repeater, should report
            the same number of collisions.

            Note also that an RMON probe inside a repeater
            should ideally report collisions between the
            repeater and one or more other hosts (transmit
            collisions as defined by IEEE 802.3k) plus receiver
            collisions observed on any coax segments to which
            the repeater is connected."
        ::= { etherStatsEntry 13 }

    etherStatsPkts64Octets OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of packets (including bad
            packets) received that were 64 octets in length
            (excluding framing bits but including FCS octets)."
        ::= { etherStatsEntry 14 }

    etherStatsPkts65to127Octets OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of packets (including bad
            packets) received that were between
            65 and 127 octets in length inclusive
            (excluding framing bits but including FCS octets)."
        ::= { etherStatsEntry 15 }

    etherStatsPkts128to255Octets OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of packets (including bad
            packets) received that were between
            128 and 255 octets in length inclusive
            (excluding framing bits but including FCS octets)."
        ::= { etherStatsEntry 16 }

    etherStatsPkts256to511Octets OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of packets (including bad
            packets) received that were between
            256 and 511 octets in length inclusive
            (excluding framing bits but including FCS octets)."
        ::= { etherStatsEntry 17 }

    etherStatsPkts512to1023Octets OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of packets (including bad
            packets) received that were between
            512 and 1023 octets in length inclusive
            (excluding framing bits but including FCS octets)."
        ::= { etherStatsEntry 18 }

    etherStatsPkts1024to1518Octets OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of packets (including bad
            packets) received that were between
            1024 and 1518 octets in length inclusive
            (excluding framing bits but including FCS octets)."
        ::= { etherStatsEntry 19 }

    etherStatsOwner OBJECT-TYPE
        SYNTAX DisplayString
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The entity that configured this entry and is
            therefore using the resources assigned to it."
        ::= { etherStatsEntry 20 }

    etherStatsStatus OBJECT-TYPE
        SYNTAX EntryStatus
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The status of this etherStats entry."
        ::= { etherStatsEntry 21 }


    -- The History Control Group

    -- Implementation of the History Control group is optional.
    --
    -- The history control group controls the periodic statistical
    -- sampling of data from various types of networks.  The
    -- historyControlTable stores configuration entries that each
    -- define an interface, polling period, and other parameters.
    -- Once samples are taken, their data is stored in an entry
    -- in a media-specific table.  Each such entry defines one
    -- sample, and is associated with the historyControlEntry that
    -- caused the sample to be taken.  Each counter in the
    -- etherHistoryEntry counts the same event as its
    -- similarly-named counterpart in the etherStatsEntry,
    -- except that each value here is a cumulative sum during a
    -- sampling period.
    --
    -- If the probe keeps track of the time of day, it should
    -- start the first sample of the history at a time such that
    -- when the next hour of the day begins, a sample is
    -- started at that instant.  This tends to make more
    -- user-friendly reports, and enables comparison of reports
    -- from different probes that have relatively accurate time
    -- of day.
    --
    -- The probe is encouraged to add two history control entries
    -- per monitored interface upon initialization that describe
    -- a short term and a long term polling period.  Suggested
    -- parameters are 30 seconds for the short term polling period
    -- and 30 minutes for the long term period.

    historyControlTable OBJECT-TYPE
        SYNTAX SEQUENCE OF HistoryControlEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of history control entries."
        ::= { history 1 }

    historyControlEntry OBJECT-TYPE
        SYNTAX HistoryControlEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of parameters that set up a periodic sampling
            of statistics.  As an example, an instance of the
            historyControlInterval object might be named
            historyControlInterval.2"
        INDEX { historyControlIndex }
        ::= { historyControlTable 1 }

    HistoryControlEntry ::= SEQUENCE {
        historyControlIndex             INTEGER (1..65535),
        historyControlDataSource        OBJECT IDENTIFIER,
        historyControlBucketsRequested  INTEGER (1..65535),
        historyControlBucketsGranted    INTEGER (1..65535),
        historyControlInterval          INTEGER (1..3600),
        historyControlOwner             DisplayString,
        historyControlStatus            EntryStatus
    }

    historyControlIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "An index that uniquely identifies an entry in the
            historyControl table.  Each such entry defines a
            set of samples at a particular interval for an
            interface on the device."
        ::= { historyControlEntry 1 }

    historyControlDataSource OBJECT-TYPE
        SYNTAX OBJECT IDENTIFIER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "This object identifies the source of the data for
            which historical data was collected and
            placed in a media-specific table on behalf of this
            historyControlEntry.  This source can be any
            interface on this device.  In order to identify
            a particular interface, this object shall identify
            the instance of the ifIndex object, defined
            in  RFC 1213 and RFC 1573 [4,6], for the desired
            interface.  For example, if an entry were to receive
            data from interface #1, this object would be set
            to ifIndex.1.

            The statistics in this group reflect all packets
            on the local network segment attached to the
            identified interface.

            An agent may or may not be able to tell if fundamental
            changes to the media of the interface have occurred
            and necessitate an invalidation of this entry.  For
            example, a hot-pluggable ethernet card could be
            pulled out and replaced by a token-ring card.  In
            such a case, if the agent has such knowledge of the
            change, it is recommended that it invalidate this
            entry.

            This object may not be modified if the associated
            historyControlStatus object is equal to valid(1)."
        ::= { historyControlEntry 2 }

    historyControlBucketsRequested OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The requested number of discrete time intervals
            over which data is to be saved in the part of the
            media-specific table associated with this
            historyControlEntry.

            When this object is created or modified, the probe
            should set historyControlBucketsGranted as closely to
            this object as is possible for the particular probe
            implementation and available resources."
        DEFVAL { 50 }
        ::= { historyControlEntry 3 }

    historyControlBucketsGranted OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of discrete sampling intervals
            over which data shall be saved in the part of
            the media-specific table associated with this
            historyControlEntry.

            When the associated historyControlBucketsRequested
            object is created or modified, the probe
            should set this object as closely to the requested
            value as is possible for the particular
            probe implementation and available resources.  The
            probe must not lower this value except as a result
            of a modification to the associated
            historyControlBucketsRequested object.

            There will be times when the actual number of
            buckets associated with this entry is less than
            the value of this object.  In this case, at the
            end of each sampling interval, a new bucket will
            be added to the media-specific table.

            When the number of buckets reaches the value of
            this object and a new bucket is to be added to the
            media-specific table, the oldest bucket associated
            with this historyControlEntry shall be deleted by
            the agent so that the new bucket can be added.

            When the value of this object changes to a value less
            than the current value, entries are deleted
            from the media-specific table associated with this
            historyControlEntry.  Enough of the oldest of these
            entries shall be deleted by the agent so that their
            number remains less than or equal to the new value of
            this object.

            When the value of this object changes to a value
            greater than the current value, the number of
            associated media- specific entries may be allowed to
            grow."
        ::= { historyControlEntry 4 }

    historyControlInterval OBJECT-TYPE
        SYNTAX INTEGER (1..3600)
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The interval in seconds over which the data is
            sampled for each bucket in the part of the
            media-specific table associated with this
            historyControlEntry.  This interval can
            be set to any number of seconds between 1 and
            3600 (1 hour).

            Because the counters in a bucket may overflow at their
            maximum value with no indication, a prudent manager
            will take into account the possibility of overflow
            in any of the associated counters.  It is important
            to consider the minimum time in which any counter
            could overflow on a particular media type and set
            the historyControlInterval object to a value less
            than this interval.  This is typically most
            important for the 'octets' counter in any
            media-specific table.  For example, on an Ethernet
            network, the etherHistoryOctets counter could
            overflow in about one hour at the Ethernet's maximum
            utilization.

            This object may not be modified if the associated
            historyControlStatus object is equal to valid(1)."
        DEFVAL { 1800 }
        ::= { historyControlEntry 5 }

    historyControlOwner OBJECT-TYPE
        SYNTAX DisplayString
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The entity that configured this entry and is
            therefore using the resources assigned to it."
        ::= { historyControlEntry 6 }

    historyControlStatus OBJECT-TYPE
        SYNTAX EntryStatus
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The status of this historyControl entry.

            Each instance of the media-specific table associated
            with this historyControlEntry will be deleted by the
            agent if this historyControlEntry is not equal to
            valid(1)."
        ::= { historyControlEntry 7 }


    -- The Ethernet History Group

    -- Implementation of the Ethernet History group is optional.
    --
    -- The Ethernet History group records periodic
    -- statistical samples from a network and stores them
    -- for later retrieval.  Once samples are taken, their
    -- data is stored in an entry in a media-specific
    -- table.  Each such entry defines one sample, and is
    -- associated with the historyControlEntry that caused
    -- the sample to be taken.  This group defines the
    -- etherHistoryTable, for Ethernet networks.
    --
    etherHistoryTable OBJECT-TYPE
        SYNTAX SEQUENCE OF EtherHistoryEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of Ethernet history entries."
        ::= { history 2 }

    etherHistoryEntry OBJECT-TYPE
        SYNTAX EtherHistoryEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "An historical sample of Ethernet statistics on a
            particular Ethernet interface.  This sample is
            associated with the historyControlEntry which set up
            the parameters for a regular collection of these
            samples.  As an example, an instance of the
            etherHistoryPkts object might be named
            etherHistoryPkts.2.89"
        INDEX { etherHistoryIndex , etherHistorySampleIndex }
        ::= { etherHistoryTable 1 }

    EtherHistoryEntry ::= SEQUENCE {
        etherHistoryIndex                 INTEGER (1..65535),
        etherHistorySampleIndex           INTEGER (1..2147483647),
        etherHistoryIntervalStart         TimeTicks,
        etherHistoryDropEvents            Counter,
        etherHistoryOctets                Counter,
        etherHistoryPkts                  Counter,
        etherHistoryBroadcastPkts         Counter,
        etherHistoryMulticastPkts         Counter,
        etherHistoryCRCAlignErrors        Counter,
        etherHistoryUndersizePkts         Counter,
        etherHistoryOversizePkts          Counter,
        etherHistoryFragments             Counter,
        etherHistoryJabbers               Counter,
        etherHistoryCollisions            Counter,
        etherHistoryUtilization           INTEGER (0..10000)
    }

    etherHistoryIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The history of which this entry is a part.  The
            history identified by a particular value of this
            index is the same history as identified
            by the same value of historyControlIndex."
        ::= { etherHistoryEntry 1 }

    etherHistorySampleIndex OBJECT-TYPE
        SYNTAX INTEGER (1..2147483647)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "An index that uniquely identifies the particular
            sample this entry represents among all samples
            associated with the same historyControlEntry.
            This index starts at 1 and increases by one
            as each new sample is taken."
        ::= { etherHistoryEntry 2 }

    etherHistoryIntervalStart OBJECT-TYPE
        SYNTAX TimeTicks
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The value of sysUpTime at the start of the interval
            over which this sample was measured.  If the probe
            keeps track of the time of day, it should start
            the first sample of the history at a time such that
            when the next hour of the day begins, a sample is
            started at that instant.  Note that following this
            rule may require the probe to delay collecting the
            first sample of the history, as each sample must be
            of the same interval.  Also note that the sample which
            is currently being collected is not accessible in this
            table until the end of its interval."
        ::= { etherHistoryEntry 3 }

    etherHistoryDropEvents OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of events in which packets
            were dropped by the probe due to lack of resources
            during this sampling interval.  Note that this number
        is not necessarily the number of packets dropped, it
        is just the number of times this condition has been
        detected."
        ::= { etherHistoryEntry 4 }

    etherHistoryOctets OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of octets of data (including
            those in bad packets) received on the
            network (excluding framing bits but including
            FCS octets)."
        ::= { etherHistoryEntry 5 }

    etherHistoryPkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of packets (including bad packets)
            received during this sampling interval."
        ::= { etherHistoryEntry 6 }

    etherHistoryBroadcastPkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of good packets received during this
            sampling interval that were directed to the
            broadcast address."
        ::= { etherHistoryEntry 7 }

    etherHistoryMulticastPkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of good packets received during this
            sampling interval that were directed to a
            multicast address.  Note that this number does not
            include packets addressed to the broadcast address."
        ::= { etherHistoryEntry 8 }

    etherHistoryCRCAlignErrors OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of packets received during this sampling
            interval that had a length (excluding framing bits
            but including FCS octets) between 64 and 1518
            octets, inclusive, but had either a bad Frame Check
            Sequence (FCS) with an integral number of octets
            (FCS Error) or a bad FCS with a non-integral number
            of octets (Alignment Error)."
        ::= { etherHistoryEntry 9 }

    etherHistoryUndersizePkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of packets received during this
            sampling interval that were less than 64 octets
            long (excluding framing bits but including FCS
            octets) and were otherwise well formed."
        ::= { etherHistoryEntry 10 }

    etherHistoryOversizePkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of packets received during this
            sampling interval that were longer than 1518
            octets (excluding framing bits but including
            FCS octets) but were otherwise well formed."
        ::= { etherHistoryEntry 11 }

    etherHistoryFragments OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The total number of packets received during this
            sampling interval that were less than 64 octets in
            length (excluding framing bits but including FCS
            octets) had either a bad Frame Check Sequence (FCS)
            with an integral number of octets (FCS Error) or a bad
            FCS with a non-integral number of octets (Alignment
            Error).

            Note that it is entirely normal for
            etherHistoryFragments to increment.  This is because
            it counts both runts (which are normal occurrences
            due to collisions) and noise hits."
        ::= { etherHistoryEntry 12 }

    etherHistoryJabbers OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of packets received during this
            sampling interval that were longer than 1518 octets
            (excluding framing bits but including FCS octets),
            and  had either a bad Frame Check Sequence (FCS)
            with an integral number of octets (FCS Error) or
            a bad FCS with a non-integral number of octets
            (Alignment Error).

            Note that this definition of jabber is different
            than the definition in IEEE-802.3 section 8.2.1.5
            (10BASE5) and section 10.3.1.4 (10BASE2).  These
            documents define jabber as the condition where any
            packet exceeds 20 ms.  The allowed range to detect
            jabber is between 20 ms and 150 ms."
        ::= { etherHistoryEntry 13 }

    etherHistoryCollisions OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The best estimate of the total number of collisions
            on this Ethernet segment during this sampling
            interval.

            The value returned will depend on the location of
            the RMON probe. Section 8.2.1.3 (10BASE-5) and
            section 10.3.1.3 (10BASE-2) of IEEE standard 802.3
            states that a station must detect a collision, in
            the receive mode, if three or more stations are
            transmitting simultaneously.  A repeater port must
            detect a collision when two or more stations are
            transmitting simultaneously.  Thus a probe placed on
            a repeater port could record more collisions than a
            probe connected to a station on the same segment
            would.

            Probe location plays a much smaller role when
            considering 10BASE-T.  14.2.1.4 (10BASE-T) of IEEE
            standard 802.3 defines a collision as the
            simultaneous presence of signals on the DO and RD
            circuits (transmitting and receiving at the same
            time).  A 10BASE-T station can only detect
            collisions when it is transmitting.  Thus probes
            placed on a station and a repeater, should report
            the same number of collisions.

            Note also that an RMON probe inside a repeater
            should ideally report collisions between the
            repeater and one or more other hosts (transmit
            collisions as defined by IEEE 802.3k) plus receiver
            collisions observed on any coax segments to which
            the repeater is connected."
        ::= { etherHistoryEntry 14 }

    etherHistoryUtilization OBJECT-TYPE
        SYNTAX INTEGER (0..10000)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The best estimate of the mean physical layer
            network utilization on this interface during this
            sampling interval, in hundredths of a percent."
        ::= { etherHistoryEntry 15 }


    -- The Alarm Group

    -- Implementation of the Alarm group is optional.
    --
    -- The Alarm Group requires the implementation of the Event
    -- group.
    --
    -- The Alarm group periodically takes
    -- statistical samples from variables in the probe and
    -- compares them to thresholds that have been
    -- configured.  The alarm table stores configuration
    -- entries that each define a variable, polling period,
    -- and threshold parameters.  If a sample is found to
    -- cross the threshold values, an event is generated.
    -- Only variables that resolve to an ASN.1 primitive
    -- type of INTEGER (INTEGER, Counter, Gauge, or
    -- TimeTicks) may be monitored in this way.
    --
    -- This function has a hysteresis mechanism to limit
    -- the generation of events.  This mechanism generates
    -- one event as a threshold is crossed in the
    -- appropriate direction.  No more events are generated
    -- for that threshold until the opposite threshold is
    -- crossed.
    --
    -- In the case of a sampling a deltaValue, a probe may
    -- implement this mechanism with more precision if it
    -- takes a delta sample twice per period, each time
    -- comparing the sum of the latest two samples to the
    -- threshold.  This allows the detection of threshold
    -- crossings that span the sampling boundary.  Note
    -- that this does not require any special configuration
    -- of the threshold value.  It is suggested that probes
    -- implement this more precise algorithm.

    alarmTable OBJECT-TYPE
        SYNTAX SEQUENCE OF AlarmEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of alarm entries."
        ::= { alarm 1 }

    alarmEntry OBJECT-TYPE
        SYNTAX AlarmEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of parameters that set up a periodic checking
            for alarm conditions.  For example, an instance of the
            alarmValue object might be named alarmValue.8"
        INDEX { alarmIndex }
        ::= { alarmTable 1 }

    AlarmEntry ::= SEQUENCE {
        alarmIndex                    INTEGER (1..65535),
        alarmInterval                 INTEGER,
        alarmVariable                 OBJECT IDENTIFIER,
        alarmSampleType               INTEGER,
        alarmValue                    INTEGER,
        alarmStartupAlarm             INTEGER,
        alarmRisingThreshold          INTEGER,
        alarmFallingThreshold         INTEGER,
        alarmRisingEventIndex         INTEGER (0..65535),
        alarmFallingEventIndex        INTEGER (0..65535),
        alarmOwner                    DisplayString,
        alarmStatus                   EntryStatus
    }

    alarmIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "An index that uniquely identifies an entry in the
            alarm table.  Each such entry defines a
            diagnostic sample at a particular interval
            for an object on the device."
        ::= { alarmEntry 1 }

    alarmInterval OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The interval in seconds over which the data is
            sampled and compared with the rising and falling
            thresholds.  When setting this variable, care
            should be taken in the case of deltaValue
            sampling - the interval should be set short enough
            that the sampled variable is very unlikely to
            increase or decrease by more than 2^31 - 1 during
            a single sampling interval.

            This object may not be modified if the associated
            alarmStatus object is equal to valid(1)."
        ::= { alarmEntry 2 }

    alarmVariable OBJECT-TYPE
        SYNTAX OBJECT IDENTIFIER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The object identifier of the particular variable to
            be sampled.  Only variables that resolve to an ASN.1
            primitive type of INTEGER (INTEGER, Counter, Gauge,
            or TimeTicks) may be sampled.

            Because SNMP access control is articulated entirely
            in terms of the contents of MIB views, no access
            control mechanism exists that can restrict the value
            of this object to identify only those objects that
            exist in a particular MIB view.  Because there is
            thus no acceptable means of restricting the read
            access that could be obtained through the alarm
            mechanism, the probe must only grant write access to
            this object in those views that have read access to
            all objects on the probe.

            During a set operation, if the supplied variable
            name is not available in the selected MIB view, a
            badValue error must be returned.  If at any time the
            variable name of an established alarmEntry is no
            longer available in the selected MIB view, the probe
            must change the status of this alarmEntry to
            invalid(4).

            This object may not be modified if the associated
            alarmStatus object is equal to valid(1)."
        ::= { alarmEntry 3 }

    alarmSampleType OBJECT-TYPE
        SYNTAX INTEGER {
            absoluteValue(1),
            deltaValue(2)
        }
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The method of sampling the selected variable and
            calculating the value to be compared against the
            thresholds.  If the value of this object is
            absoluteValue(1), the value of the selected variable
            will be compared directly with the thresholds at the
            end of the sampling interval.  If the value of this
            object is deltaValue(2), the value of the selected
            variable at the last sample will be subtracted from
            the current value, and the difference compared with
            the thresholds.

            This object may not be modified if the associated
            alarmStatus object is equal to valid(1)."
        ::= { alarmEntry 4 }

    alarmValue OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The value of the statistic during the last sampling
            period.  For example, if the sample type is
            deltaValue, this value will be the difference
            between the samples at the beginning and end of the
            period.  If the sample type is absoluteValue, this
            value will be the sampled value at the end of the
            period.

            This is the value that is compared with the rising and
            falling thresholds.

            The value during the current sampling period is not
            made available until the period is completed and will
            remain available until the next period completes."
        ::= { alarmEntry 5 }

    alarmStartupAlarm OBJECT-TYPE
        SYNTAX INTEGER {
            risingAlarm(1),
            fallingAlarm(2),
            risingOrFallingAlarm(3)
        }
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The alarm that may be sent when this entry is first
            set to valid.  If the first sample after this entry
            becomes valid is greater than or equal to the
            risingThreshold and alarmStartupAlarm is equal to
            risingAlarm(1) or risingOrFallingAlarm(3), then a
            single rising alarm will be generated.  If the first
            sample after this entry becomes valid is less than
            or equal to the fallingThreshold and
            alarmStartupAlarm is equal to fallingAlarm(2) or
            risingOrFallingAlarm(3), then a single falling alarm
            will be generated.

            This object may not be modified if the associated
            alarmStatus object is equal to valid(1)."
        ::= { alarmEntry 6 }

    alarmRisingThreshold OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "A threshold for the sampled statistic.  When the
            current sampled value is greater than or equal to
            this threshold, and the value at the last sampling
            interval was less than this threshold, a single
            event will be generated.  A single event will also
            be generated if the first sample after this entry
            becomes valid is greater than or equal to this
            threshold and the associated alarmStartupAlarm is
            equal to risingAlarm(1) or risingOrFallingAlarm(3).

            After a rising event is generated, another such event
            will not be generated until the sampled value
            falls below this threshold and reaches the
            alarmFallingThreshold.

            This object may not be modified if the associated
            alarmStatus object is equal to valid(1)."
        ::= { alarmEntry 7 }

    alarmFallingThreshold OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "A threshold for the sampled statistic.  When the
            current sampled value is less than or equal to this
            threshold, and the value at the last sampling
            interval was greater than this threshold, a single
            event will be generated.  A single event will also
            be generated if the first sample after this entry
            becomes valid is less than or equal to this
            threshold and the associated alarmStartupAlarm is
            equal to fallingAlarm(2) or risingOrFallingAlarm(3).

            After a falling event is generated, another such event
            will not be generated until the sampled value
            rises above this threshold and reaches the
            alarmRisingThreshold.

            This object may not be modified if the associated
            alarmStatus object is equal to valid(1)."
        ::= { alarmEntry 8 }

    alarmRisingEventIndex OBJECT-TYPE
        SYNTAX INTEGER (0..65535)
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The index of the eventEntry that is
            used when a rising threshold is crossed.  The
            eventEntry identified by a particular value of
            this index is the same as identified by the same value
            of the eventIndex object.  If there is no
            corresponding entry in the eventTable, then
            no association exists.  In particular, if this value
            is zero, no associated event will be generated, as
            zero is not a valid event index.

            This object may not be modified if the associated
            alarmStatus object is equal to valid(1)."
        ::= { alarmEntry 9 }
    alarmFallingEventIndex OBJECT-TYPE
        SYNTAX INTEGER (0..65535)
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The index of the eventEntry that is
            used when a falling threshold is crossed.  The
            eventEntry identified by a particular value of
            this index is the same as identified by the same value
            of the eventIndex object.  If there is no
            corresponding entry in the eventTable, then
            no association exists.  In particular, if this value
            is zero, no associated event will be generated, as
            zero is not a valid event index.

            This object may not be modified if the associated
            alarmStatus object is equal to valid(1)."
        ::= { alarmEntry 10 }

    alarmOwner OBJECT-TYPE
        SYNTAX DisplayString
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The entity that configured this entry and is
            therefore using the resources assigned to it."
        ::= { alarmEntry 11 }

    alarmStatus OBJECT-TYPE
        SYNTAX EntryStatus
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The status of this alarm entry."
        ::= { alarmEntry 12 }


    -- The Host Group

    -- Implementation of the Host group is optional.
    --
    -- The host group discovers new hosts on the network by
    -- keeping a list of source and destination MAC Addresses seen
    -- in good packets.  For each of these addresses, the host
    -- group keeps a set of statistics.  The hostControlTable
    -- controls which interfaces this function is performed on,
    -- and contains some information about the process.  On
    -- behalf of each hostControlEntry, data is collected on an
    -- interface and placed in both the hostTable and the
    -- hostTimeTable.  If the monitoring device finds itself
    -- short of resources, it may delete entries as needed.  It
    -- is suggested that the device delete the least recently
    -- used entries first.

    -- The hostTable contains entries for each address
    -- discovered on a particular interface.  Each entry
    -- contains statistical data about that host.  This table is
    -- indexed by the MAC address of the host, through which a
    -- random access may be achieved.

    -- The hostTimeTable contains data in the same format as the
    -- hostTable, and must contain the same set of hosts, but is
    -- indexed using hostTimeCreationOrder rather than
    -- hostAddress.
    -- The hostTimeCreationOrder is an integer which reflects
    -- the relative order in which a particular entry was
    -- discovered and thus inserted into the table.  As this
    -- order, and thus the index, is among those entries
    -- currently in the table, the index for a particular entry
    -- may change if an (earlier) entry is deleted.  Thus the
    -- association between hostTimeCreationOrder and
    -- hostTimeEntry may be broken at any time.

    -- The hostTimeTable has two important uses.  The first is the
    -- fast download of this potentially large table.  Because the
    -- index of this table runs from 1 to the size of the table,
    -- inclusive, its values are predictable.  This allows very
    -- efficient packing of variables into SNMP PDU's and allows
    -- a table transfer to have multiple packets outstanding.
    -- These benefits increase transfer rates tremendously.

    -- The second use of the hostTimeTable is the efficient
    -- discovery by the management station of new entries added
    -- to the table. After the management station has downloaded
    -- the entire table, it knows that new entries will be added
    -- immediately after the end of the current table.  It can
    -- thus detect new entries there and retrieve them easily.

    -- Because the association between hostTimeCreationOrder and
    -- hostTimeEntry may be broken at any time, the management
    -- station must monitor the related hostControlLastDeleteTime
    -- object.  When the management station thus detects a
    -- deletion, it must assume that any such associations have
    --- been broken, and invalidate any it has stored locally.
    -- This includes restarting any download of the
    -- hostTimeTable that may have been in progress, as well as
    -- rediscovering the end of the hostTimeTable so that it may
    -- detect new entries.  If the management station does not
    -- detect the broken association, it may continue to refer
    -- to a particular host by its creationOrder while
    -- unwittingly retrieving the data associated with another
    -- host entirely.  If this happens while downloading the
    -- host table, the management station may fail to download
    -- all of the entries in the table.

    hostControlTable OBJECT-TYPE
        SYNTAX SEQUENCE OF HostControlEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of host table control entries."
        ::= { hosts 1 }

    hostControlEntry OBJECT-TYPE
        SYNTAX HostControlEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of parameters that set up the discovery of
            hosts on a particular interface and the collection
            of statistics about these hosts.  For example, an
            instance of the hostControlTableSize object might be
            named hostControlTableSize.1"
        INDEX { hostControlIndex }
        ::= { hostControlTable 1 }

    HostControlEntry ::= SEQUENCE {
        hostControlIndex            INTEGER (1..65535),
        hostControlDataSource       OBJECT IDENTIFIER,
        hostControlTableSize        INTEGER,
        hostControlLastDeleteTime   TimeTicks,
        hostControlOwner            DisplayString,
        hostControlStatus           EntryStatus
    }

    hostControlIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "An index that uniquely identifies an entry in the
            hostControl table.  Each such entry defines
            a function that discovers hosts on a particular
            interface and places statistics about them in the
            hostTable and the hostTimeTable on behalf of this
            hostControlEntry."
        ::= { hostControlEntry 1 }

    hostControlDataSource OBJECT-TYPE
        SYNTAX OBJECT IDENTIFIER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "This object identifies the source of the data for
            this instance of the host function.  This source
            can be any interface on this device.  In order
            to identify a particular interface, this object shall
            identify the instance of the ifIndex object, defined
            in RFC 1213 and RFC 1573 [4,6], for the desired
            interface. For example, if an entry were to receive
            data from interface #1, this object would be set to
            ifIndex.1.

            The statistics in this group reflect all packets
            on the local network segment attached to the
            identified interface.

            An agent may or may not be able to tell if
            fundamental changes to the media of the interface
            have occurred and necessitate an invalidation of
            this entry.  For example, a hot-pluggable ethernet
            card could be pulled out and replaced by a
            token-ring card.  In such a case, if the agent has
            such knowledge of the change, it is recommended that
            it invalidate this entry.

            This object may not be modified if the associated
            hostControlStatus object is equal to valid(1)."
        ::= { hostControlEntry 2 }

    hostControlTableSize OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of hostEntries in the hostTable and the
            hostTimeTable associated with this hostControlEntry."
        ::= { hostControlEntry 3 }

    hostControlLastDeleteTime OBJECT-TYPE
        SYNTAX TimeTicks
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The value of sysUpTime when the last entry
            was deleted from the portion of the hostTable
            associated with this hostControlEntry.  If no
            deletions have occurred, this value shall be zero."
        ::= { hostControlEntry 4 }

    hostControlOwner OBJECT-TYPE
        SYNTAX DisplayString
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The entity that configured this entry and is
            therefore using the resources assigned to it."
        ::= { hostControlEntry 5 }

    hostControlStatus OBJECT-TYPE
        SYNTAX EntryStatus
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The status of this hostControl entry.

            If this object is not equal to valid(1), all
            associated entries in the hostTable, hostTimeTable,
            and the hostTopNTable shall be deleted by the
            agent."
        ::= { hostControlEntry 6 }

    hostTable OBJECT-TYPE
        SYNTAX SEQUENCE OF HostEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of host entries."
        ::= { hosts 2 }

    hostEntry OBJECT-TYPE
        SYNTAX HostEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A collection of statistics for a particular host
            that has been discovered on an interface of this
            device.  For example, an instance of the
            hostOutBroadcastPkts object might be named
            hostOutBroadcastPkts.1.6.8.0.32.27.3.176"
        INDEX { hostIndex, hostAddress }
        ::= { hostTable 1 }

    HostEntry ::= SEQUENCE {
        hostAddress             OCTET STRING,
        hostCreationOrder       INTEGER (1..65535),
        hostIndex               INTEGER (1..65535),
        hostInPkts              Counter,
        hostOutPkts             Counter,
        hostInOctets            Counter,
        hostOutOctets           Counter,
        hostOutErrors           Counter,
        hostOutBroadcastPkts    Counter,
        hostOutMulticastPkts    Counter
    }

    hostAddress OBJECT-TYPE
        SYNTAX OCTET STRING
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The physical address of this host."
        ::= { hostEntry 1 }

    hostCreationOrder OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "An index that defines the relative ordering of
            the creation time of hosts captured for a
            particular hostControlEntry.  This index shall
            be between 1 and N, where N is the value of
            the associated hostControlTableSize.  The ordering
            of the indexes is based on the order of each entry's
            insertion into the table, in which entries added
            earlier have a lower index value than entries added
            later.

            It is important to note that the order for a
            particular entry may change as an (earlier) entry
            is deleted from the table.  Because this order may
            change, management stations should make use of the
            hostControlLastDeleteTime variable in the
            hostControlEntry associated with the relevant
            portion of the hostTable.  By observing
            this variable, the management station may detect
            the circumstances where a previous association
            between a value of hostCreationOrder
            and a hostEntry may no longer hold."
        ::= { hostEntry 2 }

    hostIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The set of collected host statistics of which
            this entry is a part.  The set of hosts
            identified by a particular value of this
            index is associated with the hostControlEntry
            as identified by the same value of hostControlIndex."
        ::= { hostEntry 3 }

    hostInPkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of good packets transmitted to this
            address since it was added to the hostTable."
        ::= { hostEntry 4 }

    hostOutPkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of packets, including bad packets,
            transmitted by this address since it was added
            to the hostTable."
        ::= { hostEntry 5 }

    hostInOctets OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of octets transmitted to this address
            since it was added to the hostTable (excluding
            framing bits but including FCS octets), except for
            those octets in bad packets."
        ::= { hostEntry 6 }

    hostOutOctets OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of octets transmitted by this address
            since it was added to the hostTable (excluding
            framing bits but including FCS octets), including
            those octets in bad packets."
        ::= { hostEntry 7 }

    hostOutErrors OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of bad packets transmitted by this address
            since this host was added to the hostTable."
        ::= { hostEntry 8 }

    hostOutBroadcastPkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of good packets transmitted by this
            address that were directed to the broadcast address
            since this host was added to the hostTable."
        ::= { hostEntry 9 }

    hostOutMulticastPkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of good packets transmitted by this
            address that were directed to a multicast address
            since this host was added to the hostTable.
            Note that this number does not include packets
            directed to the broadcast address."
        ::= { hostEntry 10 }

    -- host Time Table

    hostTimeTable OBJECT-TYPE
        SYNTAX SEQUENCE OF HostTimeEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of time-ordered host table entries."
        ::= { hosts 3 }

    hostTimeEntry OBJECT-TYPE
        SYNTAX HostTimeEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A collection of statistics for a particular host
            that has been discovered on an interface of this
            device.  This collection includes the relative
            ordering of the creation time of this object.  For
            example, an instance of the hostTimeOutBroadcastPkts
            object might be named
            hostTimeOutBroadcastPkts.1.687"
        INDEX { hostTimeIndex, hostTimeCreationOrder }
        ::= { hostTimeTable 1 }

    HostTimeEntry ::= SEQUENCE {
        hostTimeAddress              OCTET STRING,
        hostTimeCreationOrder        INTEGER (1..65535),
        hostTimeIndex                INTEGER (1..65535),
        hostTimeInPkts               Counter,
        hostTimeOutPkts              Counter,
        hostTimeInOctets             Counter,
        hostTimeOutOctets            Counter,
        hostTimeOutErrors            Counter,
        hostTimeOutBroadcastPkts     Counter,
        hostTimeOutMulticastPkts     Counter
    }

    hostTimeAddress OBJECT-TYPE
        SYNTAX OCTET STRING
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The physical address of this host."
        ::= { hostTimeEntry 1 }

    hostTimeCreationOrder OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "An index that uniquely identifies an entry in
            the hostTime table among those entries associated
            with the same hostControlEntry.  This index shall
            be between 1 and N, where N is the value of
            the associated hostControlTableSize.  The ordering
            of the indexes is based on the order of each entry's
            insertion into the table, in which entries added
            earlier have a lower index value than entries added
            later. Thus the management station has the ability to
            learn of new entries added to this table without
            downloading the entire table.

            It is important to note that the index for a
            particular entry may change as an (earlier) entry
            is deleted from the table.  Because this order may
            change, management stations should make use of the
            hostControlLastDeleteTime variable in the
            hostControlEntry associated with the relevant
            portion of the hostTimeTable.  By observing
            this variable, the management station may detect
            the circumstances where a download of the table
            may have missed entries, and where a previous
            association between a value of hostTimeCreationOrder
            and a hostTimeEntry may no longer hold."
        ::= { hostTimeEntry 2 }

    hostTimeIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The set of collected host statistics of which
            this entry is a part.  The set of hosts
            identified by a particular value of this
            index is associated with the hostControlEntry
            as identified by the same value of hostControlIndex."
        ::= { hostTimeEntry 3 }

    hostTimeInPkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of good packets transmitted to this
            address since it was added to the hostTimeTable."
        ::= { hostTimeEntry 4 }

    hostTimeOutPkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of god packets transmitted by this
            address since it was added to the hostTimeTable."
        ::= { hostTimeEntry 5 }

    hostTimeInOctets OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of octets transmitted to this address
            since it was added to the hostTimeTable (excluding
            framing bits but including FCS octets), except for
            those octets in bad packets."
        ::= { hostTimeEntry 6 }

    hostTimeOutOctets OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of octets transmitted by this address
            since it was added to the hostTimeTable (excluding
            framing bits but including FCS octets), including
            those octets in bad packets."
        ::= { hostTimeEntry 7 }

    hostTimeOutErrors OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of bad packets transmitted by this address
            since this host was added to the hostTimeTable."
        ::= { hostTimeEntry 8 }

    hostTimeOutBroadcastPkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of good packets transmitted by this
            address that were directed to the broadcast address
            since this host was added to the hostTimeTable."
        ::= { hostTimeEntry 9 }

    hostTimeOutMulticastPkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of good packets transmitted by this
            address that were directed to a multicast address
            since this host was added to the hostTimeTable.
            Note that this number does not include packets
            directed to the broadcast address."
        ::= { hostTimeEntry 10 }


    -- The Host Top "N" Group

    -- Implementation of the Host Top N group is optional.
    --
    -- The Host Top N group requires the implementation of the
    -- host group.
    --
    -- The Host Top N group is used to prepare reports that
    -- describe the hosts that top a list ordered by one of
    -- their statistics.
    -- The available statistics are samples of one of their
    -- base statistics, over an interval specified by the
    -- management station.  Thus, these statistics are rate
    -- based.  The management station also selects how many such
    -- hosts are reported.

    -- The hostTopNControlTable is used to initiate the
    -- generation of such a report.  The management station
    -- may select the parameters of such a report, such as
    -- which interface, which statistic, how many hosts,
    -- and the start and stop times of the sampling.  When
    -- the report is prepared, entries are created in the
    -- hostTopNTable associated with the relevant
    -- hostTopNControlEntry.  These entries are static for
    -- each report after it has been prepared.

    hostTopNControlTable OBJECT-TYPE
        SYNTAX SEQUENCE OF HostTopNControlEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of top N host control entries."
        ::= { hostTopN 1 }

    hostTopNControlEntry OBJECT-TYPE
        SYNTAX HostTopNControlEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A set of parameters that control the creation of a
            report of the top N hosts according to several
            metrics.  For example, an instance of the
            hostTopNDuration object might be named
            hostTopNDuration.3"
        INDEX { hostTopNControlIndex }
        ::= { hostTopNControlTable 1 }

    HostTopNControlEntry ::= SEQUENCE {
        hostTopNControlIndex    INTEGER (1..65535),
        hostTopNHostIndex       INTEGER (1..65535),
        hostTopNRateBase        INTEGER,
        hostTopNTimeRemaining   INTEGER,
        hostTopNDuration        INTEGER,
        hostTopNRequestedSize   INTEGER,
        hostTopNGrantedSize     INTEGER,
        hostTopNStartTime       TimeTicks,
        hostTopNOwner           DisplayString,
        hostTopNStatus          EntryStatus
    }

    hostTopNControlIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "An index that uniquely identifies an entry
            in the hostTopNControl table.  Each such
            entry defines one top N report prepared for
            one interface."
        ::= { hostTopNControlEntry 1 }

    hostTopNHostIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The host table for which a top N report will be
            prepared on behalf of this entry.  The host table
            identified by a particular value of this index is
            associated with the same host table as identified by
            the same value of hostIndex.

            This object may not be modified if the associated
            hostTopNStatus object is equal to valid(1)."
        ::= { hostTopNControlEntry 2 }

    hostTopNRateBase OBJECT-TYPE
        SYNTAX INTEGER {
                hostTopNInPkts(1),
                hostTopNOutPkts(2),
                hostTopNInOctets(3),
                hostTopNOutOctets(4),
                hostTopNOutErrors(5),
                hostTopNOutBroadcastPkts(6),
                hostTopNOutMulticastPkts(7)
        }
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The variable for each host that the hostTopNRate
            variable is based upon.

            This object may not be modified if the associated
            hostTopNStatus object is equal to valid(1)."
        ::= { hostTopNControlEntry 3 }

    hostTopNTimeRemaining OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The number of seconds left in the report currently
            being collected.  When this object is modified by
            the management station, a new collection is started,
            possibly aborting a currently running report.  The
            new value is used as the requested duration of this
            report, which is loaded into the associated
            hostTopNDuration object.

            When this object is set to a non-zero value, any
            associated hostTopNEntries shall be made
            inaccessible by the monitor.  While the value of
            this object is non-zero, it decrements by one per
            second until it reaches zero.  During this time, all
            associated hostTopNEntries shall remain
            inaccessible.  At the time that this object
            decrements to zero, the report is made accessible in
            the hostTopNTable.  Thus, the hostTopN table needs
            to be created only at the end of the collection
            interval."
        DEFVAL { 0 }
        ::= { hostTopNControlEntry 4 }

    hostTopNDuration OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of seconds that this report has collected
            during the last sampling interval, or if this
            report is currently being collected, the number
            of seconds that this report is being collected
            during this sampling interval.

            When the associated hostTopNTimeRemaining object is
            set, this object shall be set by the probe to the
            same value and shall not be modified until the next
            time the hostTopNTimeRemaining is set.

            This value shall be zero if no reports have been
            requested for this hostTopNControlEntry."
        DEFVAL { 0 }
        ::= { hostTopNControlEntry 5 }

    hostTopNRequestedSize OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The maximum number of hosts requested for the top N
            table.

            When this object is created or modified, the probe
            should set hostTopNGrantedSize as closely to this
            object as is possible for the particular probe
            implementation and available resources."
        DEFVAL { 10 }
        ::= { hostTopNControlEntry 6 }

    hostTopNGrantedSize OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The maximum number of hosts in the top N table.

            When the associated hostTopNRequestedSize object is
            created or modified, the probe should set this
            object as closely to the requested value as is
            possible for the particular implementation and
            available resources. The probe must not lower this
            value except as a result of a set to the associated
            hostTopNRequestedSize object.
            Hosts with the highest value of hostTopNRate shall be
            placed in this table in decreasing order of this rate
            until there is no more room or until there are no more
            hosts."
        ::= { hostTopNControlEntry 7 }

    hostTopNStartTime OBJECT-TYPE
        SYNTAX TimeTicks
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The value of sysUpTime when this top N report was
            last started.  In other words, this is the time that
            the associated hostTopNTimeRemaining object was
            modified to start the requested report."
        ::= { hostTopNControlEntry 8 }

    hostTopNOwner OBJECT-TYPE
        SYNTAX DisplayString
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The entity that configured this entry and is
            therefore using the resources assigned to it."
        ::= { hostTopNControlEntry 9 }

    hostTopNStatus OBJECT-TYPE
        SYNTAX EntryStatus
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The status of this hostTopNControl entry.

            If this object is not equal to valid(1), all
            associated hostTopNEntries shall be deleted by the
            agent."
        ::= { hostTopNControlEntry 10 }

    hostTopNTable OBJECT-TYPE
        SYNTAX SEQUENCE OF HostTopNEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of top N host entries."
        ::= { hostTopN 2 }

    hostTopNEntry OBJECT-TYPE
        SYNTAX HostTopNEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A set of statistics for a host that is part of a
            top N report.  For example, an instance of the
            hostTopNRate object might be named
            hostTopNRate.3.10"
        INDEX { hostTopNReport, hostTopNIndex }
        ::= { hostTopNTable 1 }

    HostTopNEntry ::= SEQUENCE {
        hostTopNReport                INTEGER (1..65535),
        hostTopNIndex                 INTEGER (1..65535),
        hostTopNAddress               OCTET STRING,
        hostTopNRate                  INTEGER
    }

    hostTopNReport OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "This object identifies the top N report of which
            this entry is a part.  The set of hosts
            identified by a particular value of this
            object is part of the same report as identified
            by the same value of the hostTopNControlIndex object."
        ::= { hostTopNEntry 1 }

    hostTopNIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "An index that uniquely identifies an entry in
            the hostTopN table among those in the same report.
            This index is between 1 and N, where N is the
            number of entries in this table.  Increasing values
            of hostTopNIndex shall be assigned to entries with
            decreasing values of hostTopNRate until index N
            is assigned to the entry with the lowest value of
            hostTopNRate or there are no more hostTopNEntries."
        ::= { hostTopNEntry 2 }

    hostTopNAddress OBJECT-TYPE
        SYNTAX OCTET STRING
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The physical address of this host."
        ::= { hostTopNEntry 3 }

    hostTopNRate OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The amount of change in the selected variable
            during this sampling interval.  The selected
            variable is this host's instance of the object
            selected by hostTopNRateBase."
        ::= { hostTopNEntry 4 }


    -- The Matrix Group

    -- Implementation of the Matrix group is optional.
    --
    -- The Matrix group consists of the matrixControlTable,
    -- matrixSDTable and the matrixDSTable.  These tables
    -- store statistics for a particular conversation
    -- between two addresses.  As the device detects a new
    -- conversation, including those to a non-unicast
    -- address, it creates a new entry in both of the
    -- matrix tables.  It must only create new entries
    -- based on information received in good packets.  If
    -- the monitoring device finds itself short of
    -- resources, it may delete entries as needed.  It is
    -- suggested that the device delete the least recently
    -- used entries first.

    matrixControlTable OBJECT-TYPE
        SYNTAX SEQUENCE OF MatrixControlEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of information entries for the
            traffic matrix on each interface."
        ::= { matrix 1 }

    matrixControlEntry OBJECT-TYPE
        SYNTAX MatrixControlEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "Information about a traffic matrix on a particular
            interface.  For example, an instance of the
            matrixControlLastDeleteTime object might be named
            matrixControlLastDeleteTime.1"
        INDEX { matrixControlIndex }
        ::= { matrixControlTable 1 }

    MatrixControlEntry ::= SEQUENCE {
        matrixControlIndex           INTEGER (1..65535),
        matrixControlDataSource      OBJECT IDENTIFIER,
        matrixControlTableSize       INTEGER,
        matrixControlLastDeleteTime  TimeTicks,
        matrixControlOwner           DisplayString,
        matrixControlStatus          EntryStatus
    }

    matrixControlIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "An index that uniquely identifies an entry in the
            matrixControl table.  Each such entry defines
            a function that discovers conversations on a
            particular interface and places statistics about
            them in the matrixSDTable and the matrixDSTable on
            behalf of this matrixControlEntry."
        ::= { matrixControlEntry 1 }

    matrixControlDataSource OBJECT-TYPE
        SYNTAX OBJECT IDENTIFIER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "This object identifies the source of
            the data from which this entry creates a traffic
            matrix. This source can be any interface on this
            device.  In order to identify a particular
            interface, this object shall identify the instance
            of the ifIndex object, defined in RFC 1213 and RFC
            1573 [4,6], for the desired interface.  For example,
            if an entry were to receive data from interface #1,
            this object would be set to ifIndex.1.

            The statistics in this group reflect all packets
            on the local network segment attached to the
            identified interface.

            An agent may or may not be able to tell if
            fundamental changes to the media of the interface
            have occurred and necessitate an invalidation of
            this entry.  For example, a hot-pluggable ethernet
            card could be pulled out and replaced by a
            token-ring card.  In such a case, if the agent has
            such knowledge of the change, it is recommended that
            it invalidate this entry.

            This object may not be modified if the associated
            matrixControlStatus object is equal to valid(1)."
        ::= { matrixControlEntry 2 }

    matrixControlTableSize OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of matrixSDEntries in the matrixSDTable
            for this interface.  This must also be the value of
            the number of entries in the matrixDSTable for this
            interface."
        ::= { matrixControlEntry 3 }

    matrixControlLastDeleteTime OBJECT-TYPE
        SYNTAX TimeTicks
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The value of sysUpTime when the last entry
            was deleted from the portion of the matrixSDTable
            or matrixDSTable associated with this
            matrixControlEntry. If no deletions have occurred,
            this value shall be zero."
        ::= { matrixControlEntry 4 }

    matrixControlOwner OBJECT-TYPE
        SYNTAX DisplayString
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The entity that configured this entry and is
            therefore using the resources assigned to it."
        ::= { matrixControlEntry 5 }

    matrixControlStatus OBJECT-TYPE
        SYNTAX EntryStatus
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The status of this matrixControl entry.

            If this object is not equal to valid(1), all
            associated entries in the matrixSDTable and the
            matrixDSTable shall be deleted by the agent."
        ::= { matrixControlEntry 6 }

    matrixSDTable OBJECT-TYPE
        SYNTAX SEQUENCE OF MatrixSDEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of traffic matrix entries indexed by
            source and destination MAC address."
        ::= { matrix 2 }

    matrixSDEntry OBJECT-TYPE
        SYNTAX MatrixSDEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A collection of statistics for communications between
            two addresses on a particular interface.  For example,
            an instance of the matrixSDPkts object might be named
            matrixSDPkts.1.6.8.0.32.27.3.176.6.8.0.32.10.8.113"
        INDEX { matrixSDIndex,
                matrixSDSourceAddress, matrixSDDestAddress }
        ::= { matrixSDTable 1 }

    MatrixSDEntry ::= SEQUENCE {
        matrixSDSourceAddress       OCTET STRING,
        matrixSDDestAddress         OCTET STRING,
        matrixSDIndex               INTEGER (1..65535),
        matrixSDPkts                Counter,
        matrixSDOctets              Counter,
        matrixSDErrors              Counter
    }

    matrixSDSourceAddress OBJECT-TYPE
        SYNTAX OCTET STRING
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The source physical address."
        ::= { matrixSDEntry 1 }

    matrixSDDestAddress OBJECT-TYPE
        SYNTAX OCTET STRING
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The destination physical address."
        ::= { matrixSDEntry 2 }

    matrixSDIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The set of collected matrix statistics of which
            this entry is a part.  The set of matrix statistics
            identified by a particular value of this index
            is associated with the same matrixControlEntry
            as identified by the same value of
            matrixControlIndex."
        ::= { matrixSDEntry 3 }

    matrixSDPkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of packets transmitted from the source
            address to the destination address (this number
            includes bad packets)."
        ::= { matrixSDEntry 4 }

    matrixSDOctets OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of octets (excluding framing bits but
            including FCS octets) contained in all packets
            transmitted from the source address to the
            destination address."
        ::= { matrixSDEntry 5 }

    matrixSDErrors OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of bad packets transmitted from
            the source address to the destination address."
        ::= { matrixSDEntry 6 }


    -- Traffic matrix tables from destination to source

    matrixDSTable OBJECT-TYPE
        SYNTAX SEQUENCE OF MatrixDSEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of traffic matrix entries indexed by
            destination and source MAC address."
        ::= { matrix 3 }

    matrixDSEntry OBJECT-TYPE
        SYNTAX MatrixDSEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A collection of statistics for communications between
            two addresses on a particular interface.  For example,
            an instance of the matrixSDPkts object might be named
            matrixSDPkts.1.6.8.0.32.10.8.113.6.8.0.32.27.3.176"
        INDEX { matrixDSIndex,
                matrixDSDestAddress, matrixDSSourceAddress }
        ::= { matrixDSTable 1 }

    MatrixDSEntry ::= SEQUENCE {
        matrixDSSourceAddress       OCTET STRING,
        matrixDSDestAddress         OCTET STRING,
        matrixDSIndex               INTEGER (1..65535),
        matrixDSPkts                Counter,
        matrixDSOctets              Counter,
        matrixDSErrors              Counter
    }

    matrixDSSourceAddress OBJECT-TYPE
        SYNTAX OCTET STRING
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The source physical address."
        ::= { matrixDSEntry 1 }

    matrixDSDestAddress OBJECT-TYPE
        SYNTAX OCTET STRING
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The destination physical address."
        ::= { matrixDSEntry 2 }

    matrixDSIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The set of collected matrix statistics of which
            this entry is a part.  The set of matrix statistics
            identified by a particular value of this index
            is associated with the same matrixControlEntry
            as identified by the same value of
            matrixControlIndex."
        ::= { matrixDSEntry 3 }

    matrixDSPkts OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of packets transmitted from the source
            address to the destination address (this number
            includes bad packets)."
        ::= { matrixDSEntry 4 }

    matrixDSOctets OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of octets (excluding framing bits
            but including FCS octets) contained in all packets
            transmitted from the source address to the
            destination address."
        ::= { matrixDSEntry 5 }

    matrixDSErrors OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of bad packets transmitted from
            the source address to the destination address."
        ::= { matrixDSEntry 6 }


    -- The Filter Group

    -- Implementation of the Filter group is optional.
    --
    -- The Filter group allows packets to be captured with an
    -- arbitrary filter expression.  A logical data and
    -- event stream or "channel" is formed by the packets
    -- that match the filter expression.
    --
    -- This filter mechanism allows the creation of an arbitrary
    -- logical expression with which to filter packets.  Each
    -- filter associated with a channel is OR'ed with the others.
    -- Within a filter, any bits checked in the data and status
    -- are AND'ed with respect to other bits in the same filter.
    -- The NotMask also allows for checking for inequality.
    -- Finally, the channelAcceptType object allows for
    -- inversion of the whole equation.
    --
    -- If a management station wishes to receive a trap to alert
    -- it that new packets have been captured and are available
    -- for download, it is recommended that it set up an alarm
    -- entry that monitors the value of the relevant
    -- channelMatches instance.
    --
    -- The channel can be turned on or off, and can also
    -- generate events when packets pass through it.

    filterTable OBJECT-TYPE
        SYNTAX SEQUENCE OF FilterEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of packet filter entries."
        ::= { filter 1 }

    filterEntry OBJECT-TYPE
        SYNTAX FilterEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A set of parameters for a packet filter applied on a
            particular interface.  As an example, an instance of
            the filterPktData object might be named
            filterPktData.12"
        INDEX { filterIndex }
        ::= { filterTable 1 }


    FilterEntry ::= SEQUENCE {
        filterIndex                 INTEGER (1..65535),
        filterChannelIndex          INTEGER (1..65535),
        filterPktDataOffset         INTEGER,
        filterPktData               OCTET STRING,
        filterPktDataMask           OCTET STRING,
        filterPktDataNotMask        OCTET STRING,
        filterPktStatus             INTEGER,
        filterPktStatusMask         INTEGER,
        filterPktStatusNotMask      INTEGER,
        filterOwner                 DisplayString,
        filterStatus                EntryStatus
    }

    filterIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "An index that uniquely identifies an entry
            in the filter table.  Each such entry defines
            one filter that is to be applied to every packet
            received on an interface."
        ::= { filterEntry 1 }

    filterChannelIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "This object identifies the channel of which this
            filter is a part.  The filters identified by a
            particular value of this object are associated with
            the same channel as identified by the same value of
            the channelIndex object."
        ::= { filterEntry 2 }

    filterPktDataOffset OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The offset from the beginning of each packet where
            a match of packet data will be attempted.  This offset
            is measured from the point in the physical layer
            packet after the framing bits, if any.  For example,
            in an Ethernet frame, this point is at the beginning
            of the destination MAC address.
            This object may not be modified if the associated
            filterStatus object is equal to valid(1)."
        DEFVAL { 0 }
        ::= { filterEntry 3 }

    filterPktData OBJECT-TYPE
        SYNTAX OCTET STRING
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The data that is to be matched with the input
            packet.  For each packet received, this filter and
            the accompanying filterPktDataMask and
            filterPktDataNotMask will be adjusted for the
            offset.  The only bits relevant to this match
            algorithm are those that have the corresponding
            filterPktDataMask bit equal to one.  The following
            three rules are then applied to every packet:

            (1) If the packet is too short and does not have data
                corresponding to part of the filterPktData, the
                packet will fail this data match.

            (2) For each relevant bit from the packet with the
                corresponding filterPktDataNotMask bit set to
                zero, if the bit from the packet is not equal to
                the corresponding bit from the filterPktData,
                then the packet will fail this data match.

            (3) If for every relevant bit from the packet with the
                corresponding filterPktDataNotMask bit set to one,
                the bit from the packet is equal to the
                corresponding bit from the filterPktData, then
                the packet will fail this data match.

            Any packets that have not failed any of the three
            matches above have passed this data match.  In
            particular, a zero length filter will match any
            packet.

            This object may not be modified if the associated
            filterStatus object is equal to valid(1)."
        ::= { filterEntry 4 }

    filterPktDataMask OBJECT-TYPE
        SYNTAX OCTET STRING
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The mask that is applied to the match process.
            After adjusting this mask for the offset, only those
            bits in the received packet that correspond to bits
            set in this mask are relevant for further processing
            by the match algorithm.  The offset is applied to
            filterPktDataMask in the same way it is applied to the
            filter.  For the purposes of the matching algorithm,
            if the associated filterPktData object is longer
            than this mask, this mask is conceptually extended
            with '1' bits until it reaches the length of the
            filterPktData object.

            This object may not be modified if the associated
            filterStatus object is equal to valid(1)."
        ::= { filterEntry 5 }

    filterPktDataNotMask OBJECT-TYPE
        SYNTAX OCTET STRING
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The inversion mask that is applied to the match
            process.  After adjusting this mask for the offset,
            those relevant bits in the received packet that
            correspond to bits cleared in this mask must all be
            equal to their corresponding bits in the
            filterPktData object for the packet to be accepted.
            In addition, at least one of those relevant bits in
            the received packet that correspond to bits set in
            this mask must be different to its corresponding bit
            in the filterPktData object.

            For the purposes of the matching algorithm, if the
            associated filterPktData object is longer than this
            mask, this mask is conceptually extended with '0'
            bits until it reaches the length of the
            filterPktData object.

            This object may not be modified if the associated
            filterStatus object is equal to valid(1)."
        ::= { filterEntry 6 }

    filterPktStatus OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The status that is to be matched with the input
            packet.  The only bits relevant to this match
            algorithm are those that have the corresponding
            filterPktStatusMask bit equal to one.  The following
            two rules are then applied to every packet:

            (1) For each relevant bit from the packet status
                with the corresponding filterPktStatusNotMask bit
                set to zero, if the bit from the packet status is
                not equal to the corresponding bit from the
                filterPktStatus, then the packet will fail this
                status match.

            (2) If for every relevant bit from the packet status
                with the corresponding filterPktStatusNotMask bit
                set to one, the bit from the packet status is
                equal to the corresponding bit from the
                filterPktStatus, then the packet will fail this
                status match.

            Any packets that have not failed either of the two
            matches above have passed this status match.  In
            particular, a zero length status filter will match any
            packet's status.

            The value of the packet status is a sum.  This sum
            initially takes the value zero.  Then, for each
            error, E, that has been discovered in this packet,
            2 raised to a value representing E is added to the
            sum. The errors and the bits that represent them are
            dependent on the media type of the interface that
            this channel is receiving packets from.

            The errors defined for a packet captured off of an
            Ethernet interface are as follows:

                bit #    Error
                    0    Packet is longer than 1518 octets
                    1    Packet is shorter than 64 octets
                    2    Packet experienced a CRC or Alignment
                         error

            For example, an Ethernet fragment would have a
            value of 6 (2^1 + 2^2).

            As this MIB is expanded to new media types, this
            object will have other media-specific errors
            defined.
            For the purposes of this status matching algorithm,
            if the packet status is longer than this
            filterPktStatus object, this object is conceptually
            extended with '0' bits until it reaches the size of
            the packet status.

            This object may not be modified if the associated
            filterStatus object is equal to valid(1)."
        ::= { filterEntry 7 }

    filterPktStatusMask OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The mask that is applied to the status match
            process.  Only those bits in the received packet
            that correspond to bits set in this mask are
            relevant for further processing by the status match
            algorithm.  For the purposes of the matching
            algorithm, if the associated filterPktStatus object
            is longer than this mask, this mask is conceptually
            extended with '1' bits until it reaches the size of
            the filterPktStatus.  In addition, if a packet
            status is longer than this mask, this mask is
            conceptually extended with '0' bits until it reaches
            the size of the packet status.

            This object may not be modified if the associated
            filterStatus object is equal to valid(1)."
        ::= { filterEntry 8 }

    filterPktStatusNotMask OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The inversion mask that is applied to the status
            match process.  Those relevant bits in the received
            packet status that correspond to bits cleared in
            this mask must all be equal to their corresponding
            bits in the filterPktStatus object for the packet to
            be accepted.  In addition, at least one of those
            relevant bits in the received packet status that
            correspond to bits set in this mask must be
            different to its corresponding bit in the
            filterPktStatus object for the packet to be
            accepted.
            For the purposes of the matching algorithm, if the
            associated filterPktStatus object or a packet status
            is longer than this mask, this mask is conceptually
            extended with '0' bits until it reaches the longer
            of the lengths of the filterPktStatus object and the
            packet status.

            This object may not be modified if the associated
            filterStatus object is equal to valid(1)."
        ::= { filterEntry 9 }

    filterOwner OBJECT-TYPE
        SYNTAX DisplayString
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The entity that configured this entry and is
            therefore using the resources assigned to it."
        ::= { filterEntry 10 }

    filterStatus OBJECT-TYPE
        SYNTAX EntryStatus
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The status of this filter entry."
        ::= { filterEntry 11 }

    channelTable OBJECT-TYPE
        SYNTAX SEQUENCE OF ChannelEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of packet channel entries."
        ::= { filter 2 }

    channelEntry OBJECT-TYPE
        SYNTAX ChannelEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A set of parameters for a packet channel applied on a
            particular interface.  As an example, an instance of
            the channelMatches object might be named
            channelMatches.3"
        INDEX { channelIndex }
        ::= { channelTable 1 }

    ChannelEntry ::= SEQUENCE {
        channelIndex               INTEGER (1..65535),
        channelIfIndex             INTEGER (1..65535),
        channelAcceptType          INTEGER,
        channelDataControl         INTEGER,
        channelTurnOnEventIndex    INTEGER (0..65535),
        channelTurnOffEventIndex   INTEGER (0..65535),
        channelEventIndex          INTEGER (0..65535),
        channelEventStatus         INTEGER,
        channelMatches             Counter,
        channelDescription         DisplayString (SIZE (0..127)),
        channelOwner               DisplayString,
        channelStatus              EntryStatus
    }

    channelIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "An index that uniquely identifies an entry in the
            channel table.  Each such entry defines one channel,
            a logical data and event stream.

            It is suggested that before creating a channel, an
            application should scan all instances of the
            filterChannelIndex object to make sure that there
            are no pre-existing filters that would be
            inadvertently be linked to the channel."
        ::= { channelEntry 1 }

    channelIfIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The value of this object uniquely identifies the
            interface on this remote network monitoring device
            to which the associated filters are applied to allow
            data into this channel.  The interface identified by
            a particular value of this object is the same
            interface as identified by the same value of the
            ifIndex object, defined in RFC 1213 and RFC 1573
            [4,6].

            The filters in this group are applied to all packets
            on the local network segment attached to the
            identified interface.
            An agent may or may not be able to tell if
            fundamental changes to the media of the interface
            have occurred and necessitate an invalidation of
            this entry.  For example, a hot-pluggable ethernet
            card could be pulled out and replaced by a
            token-ring card.  In such a case, if the agent has
            such knowledge of the change, it is recommended that
            it invalidate this entry.

            This object may not be modified if the associated
            channelStatus object is equal to valid(1)."
        ::= { channelEntry 2 }

    channelAcceptType OBJECT-TYPE
        SYNTAX INTEGER {
            acceptMatched(1),
            acceptFailed(2)
        }
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "This object controls the action of the filters
            associated with this channel.  If this object is equal
            to acceptMatched(1), packets will be accepted to this
            channel if they are accepted by both the packet data
            and packet status matches of an associated filter.  If
            this object is equal to acceptFailed(2), packets will
            be accepted to this channel only if they fail either
            the packet data match or the packet status match of
            each of the associated filters.

            In particular, a channel with no associated filters
            will match no packets if set to acceptMatched(1)
            case and will match all packets in the
            acceptFailed(2) case.

            This object may not be modified if the associated
            channelStatus object is equal to valid(1)."
        ::= { channelEntry 3 }

    channelDataControl OBJECT-TYPE
        SYNTAX INTEGER {
            on(1),
            off(2)
        }
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "This object controls the flow of data through this
            channel.  If this object is on(1), data, status and
            events flow through this channel.  If this object is
            off(2), data, status and events will not flow
            through this channel."
        DEFVAL { off }
        ::= { channelEntry 4 }

    channelTurnOnEventIndex OBJECT-TYPE
        SYNTAX INTEGER (0..65535)
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The value of this object identifies the event
            that is configured to turn the associated
            channelDataControl from off to on when the event is
            generated.  The event identified by a particular value
            of this object is the same event as identified by the
            same value of the eventIndex object.  If there is no
            corresponding entry in the eventTable, then no
            association exists.  In fact, if no event is intended
            for this channel, channelTurnOnEventIndex must be
            set to zero, a non-existent event index.

            This object may not be modified if the associated
            channelStatus object is equal to valid(1)."
        ::= { channelEntry 5 }

    channelTurnOffEventIndex OBJECT-TYPE
        SYNTAX INTEGER (0..65535)
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The value of this object identifies the event
            that is configured to turn the associated
            channelDataControl from on to off when the event is
            generated.  The event identified by a particular value
            of this object is the same event as identified by the
            same value of the eventIndex object.  If there is no
            corresponding entry in the eventTable, then no
            association exists.  In fact, if no event is intended
            for this channel, channelTurnOffEventIndex must be
            set to zero, a non-existent event index.

            This object may not be modified if the associated
            channelStatus object is equal to valid(1)."
        ::= { channelEntry 6 }

    channelEventIndex OBJECT-TYPE
        SYNTAX INTEGER (0..65535)
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The value of this object identifies the event
            that is configured to be generated when the
            associated channelDataControl is on and a packet
            is matched.  The event identified by a particular
            value of this object is the same event as identified
            by the same value of the eventIndex object.  If
            there is no corresponding entry in the eventTable,
            then no association exists.  In fact, if no event is
            intended for this channel, channelEventIndex must be
            set to zero, a non-existent event index.

            This object may not be modified if the associated
            channelStatus object is equal to valid(1)."
        ::= { channelEntry 7 }

    channelEventStatus OBJECT-TYPE
        SYNTAX INTEGER {
            eventReady(1),
            eventFired(2),
            eventAlwaysReady(3)
        }
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The event status of this channel.

            If this channel is configured to generate events
            when packets are matched, a means of controlling
            the flow of those events is often needed.  When
            this object is equal to eventReady(1), a single
            event may be generated, after which this object
            will be set by the probe to eventFired(2).  While
            in the eventFired(2) state, no events will be
            generated until the object is modified to
            eventReady(1) (or eventAlwaysReady(3)).  The
            management station can thus easily respond to a
            notification of an event by re-enabling this object.

            If the management station wishes to disable this
            flow control and allow events to be generated
            at will, this object may be set to
            eventAlwaysReady(3).  Disabling the flow control
            is discouraged as it can result in high network
            traffic or other performance problems."
        DEFVAL { eventReady }
        ::= { channelEntry 8 }

    channelMatches OBJECT-TYPE
        SYNTAX Counter
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of times this channel has matched a
            packet. Note that this object is updated even when
            channelDataControl is set to off."
        ::= { channelEntry 9 }

    channelDescription OBJECT-TYPE
        SYNTAX DisplayString (SIZE (0..127))
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "A comment describing this channel."
        ::= { channelEntry 10 }

    channelOwner OBJECT-TYPE
        SYNTAX DisplayString
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The entity that configured this entry and is
            therefore using the resources assigned to it."
        ::= { channelEntry 11 }

    channelStatus OBJECT-TYPE
        SYNTAX EntryStatus
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The status of this channel entry."
        ::= { channelEntry 12 }


    -- The Packet Capture Group

    -- Implementation of the Packet Capture group is optional.
    --
    -- The Packet Capture Group requires implementation of the
    -- Filter Group.
    --
    -- The Packet Capture group allows packets to be captured
    -- upon a filter match.  The bufferControlTable controls
    -- the captured packets output from a channel that is
    -- associated with it.  The captured packets are placed
    -- in entries in the captureBufferTable.  These entries are
    -- associated with the bufferControlEntry on whose behalf they
    -- were stored.

    bufferControlTable OBJECT-TYPE
        SYNTAX SEQUENCE OF BufferControlEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of buffers control entries."
        ::= { capture 1 }

    bufferControlEntry OBJECT-TYPE
        SYNTAX BufferControlEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A set of parameters that control the collection of
            a stream of packets that have matched filters.  As
            an example, an instance of the
            bufferControlCaptureSliceSize object might be named
            bufferControlCaptureSliceSize.3"
        INDEX { bufferControlIndex }
        ::= { bufferControlTable 1 }

    BufferControlEntry ::= SEQUENCE {
        bufferControlIndex                INTEGER (1..65535),
        bufferControlChannelIndex         INTEGER (1..65535),
        bufferControlFullStatus           INTEGER,
        bufferControlFullAction           INTEGER,
        bufferControlCaptureSliceSize     INTEGER,
        bufferControlDownloadSliceSize    INTEGER,
        bufferControlDownloadOffset       INTEGER,
        bufferControlMaxOctetsRequested   INTEGER,
        bufferControlMaxOctetsGranted     INTEGER,
        bufferControlCapturedPackets      INTEGER,
        bufferControlTurnOnTime           TimeTicks,
        bufferControlOwner                DisplayString,
        bufferControlStatus               EntryStatus
    }

    bufferControlIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "An index that uniquely identifies an entry
            in the bufferControl table.  The value of this
            index shall never be zero.  Each such
            entry defines one set of packets that is
            captured and controlled by one or more filters."
        ::= { bufferControlEntry 1 }

    bufferControlChannelIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "An index that identifies the channel that is the
            source of packets for this bufferControl table.
            The channel identified by a particular value of this
            index is the same as identified by the same value of
            the channelIndex object.

            This object may not be modified if the associated
            bufferControlStatus object is equal to valid(1)."
        ::= { bufferControlEntry 2 }

    bufferControlFullStatus OBJECT-TYPE
        SYNTAX INTEGER {
                spaceAvailable(1),
                full(2)
        }
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "This object shows whether the buffer has room to
            accept new packets or if it is full.

            If the status is spaceAvailable(1), the buffer is
            accepting new packets normally.  If the status is
            full(2) and the associated bufferControlFullAction
            object is wrapWhenFull, the buffer is accepting new
            packets by deleting enough of the oldest packets
            to make room for new ones as they arrive.  Otherwise,
            if the status is full(2) and the
            bufferControlFullAction object is lockWhenFull,
            then the buffer has stopped collecting packets.

            When this object is set to full(2) the probe must
            not later set it to spaceAvailable(1) except in the
            case of a significant gain in resources such as
            an increase of bufferControlOctetsGranted.  In
            particular, the wrap-mode action of deleting old
            packets to make room for newly arrived packets
            must not affect the value of this object."
        ::= { bufferControlEntry 3 }

    bufferControlFullAction OBJECT-TYPE
        SYNTAX INTEGER {
                lockWhenFull(1),
                wrapWhenFull(2)    -- FIFO
        }
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "Controls the action of the buffer when it
            reaches the full status.  When in the lockWhenFull(1)
            state and a packet is added to the buffer that
            fills the buffer, the bufferControlFullStatus will
            be set to full(2) and this buffer will stop capturing
            packets."
        ::= { bufferControlEntry 4 }

    bufferControlCaptureSliceSize OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The maximum number of octets of each packet
            that will be saved in this capture buffer.
            For example, if a 1500 octet packet is received by
            the probe and this object is set to 500, then only
            500 octets of the packet will be stored in the
            associated capture buffer.  If this variable is set
            to 0, the capture buffer will save as many octets
            as is possible.

            This object may not be modified if the associated
            bufferControlStatus object is equal to valid(1)."
        DEFVAL { 100 }
        ::= { bufferControlEntry 5 }

    bufferControlDownloadSliceSize OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The maximum number of octets of each packet
            in this capture buffer that will be returned in
            an SNMP retrieval of that packet.  For example,
            if 500 octets of a packet have been stored in the
            associated capture buffer, the associated
            bufferControlDownloadOffset is 0, and this
            object is set to 100, then the captureBufferPacket
            object that contains the packet will contain only
            the first 100 octets of the packet.

            A prudent manager will take into account possible
            interoperability or fragmentation problems that may
            occur if the download slice size is set too large.
            In particular, conformant SNMP implementations are not
            required to accept messages whose length exceeds 484
            octets, although they are encouraged to support larger
            datagrams whenever feasible."
        DEFVAL { 100 }
        ::= { bufferControlEntry 6 }

    bufferControlDownloadOffset OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The offset of the first octet of each packet
            in this capture buffer that will be returned in
            an SNMP retrieval of that packet.  For example,
            if 500 octets of a packet have been stored in the
            associated capture buffer and this object is set to
            100, then the captureBufferPacket object that
            contains the packet will contain bytes starting
            100 octets into the packet."
        DEFVAL { 0 }
        ::= { bufferControlEntry 7 }

    bufferControlMaxOctetsRequested OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The requested maximum number of octets to be
            saved in this captureBuffer, including any
            implementation-specific overhead. If this variable
            is set to -1, the capture buffer will save as many
            octets as is possible.

            When this object is created or modified, the probe
            should set bufferControlMaxOctetsGranted as closely
            to this object as is possible for the particular probe
            implementation and available resources.  However, if
            the object has the special value of -1, the probe
            must set bufferControlMaxOctetsGranted to -1."
        DEFVAL { -1 }
        ::= { bufferControlEntry 8 }

    bufferControlMaxOctetsGranted OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The maximum number of octets that can be
            saved in this captureBuffer, including overhead.
            If this variable is -1, the capture buffer will save
            as many octets as possible.

            When the bufferControlMaxOctetsRequested object is
            created or modified, the probe should set this object
            as closely to the requested value as is possible for
            the particular probe implementation and available
            resources.
            However, if the request object has the special value
            of -1, the probe must set this object to -1.
            The probe must not lower this value except as a result
            of a modification to the associated
            bufferControlMaxOctetsRequested object.

            When this maximum number of octets is reached
            and a new packet is to be added to this
            capture buffer and the corresponding
            bufferControlFullAction is set to wrapWhenFull(2),
            enough of the oldest packets associated with this
            capture buffer shall be deleted by the agent so
            that the new packet can be added.  If the
            corresponding bufferControlFullAction is set to
            lockWhenFull(1), the new packet shall be discarded.
            In either case, the probe must set
            bufferControlFullStatus to full(2).

            When the value of this object changes to a value less
            than the current value, entries are deleted from
            the captureBufferTable associated with this
            bufferControlEntry.  Enough of the
            oldest of these captureBufferEntries shall be
            deleted by the agent so that the number of octets
            used remains less than or equal to the new value of
            this object.

            When the value of this object changes to a value
            greater than the current value, the number of
            associated captureBufferEntries may be allowed to
            grow."
        ::= { bufferControlEntry 9 }

    bufferControlCapturedPackets OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of packets currently in this
            captureBuffer."
        ::= { bufferControlEntry 10 }

    bufferControlTurnOnTime OBJECT-TYPE
        SYNTAX TimeTicks
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The value of sysUpTime when this capture buffer was
            first turned on."
        ::= { bufferControlEntry 11 }

    bufferControlOwner OBJECT-TYPE
        SYNTAX DisplayString
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The entity that configured this entry and is
            therefore using the resources assigned to it."
        ::= { bufferControlEntry 12 }

    bufferControlStatus OBJECT-TYPE
        SYNTAX EntryStatus
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The status of this buffer Control Entry."
        ::= { bufferControlEntry 13 }

    captureBufferTable OBJECT-TYPE
        SYNTAX SEQUENCE OF CaptureBufferEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of packets captured off of a channel."
        ::= { capture 2 }

    captureBufferEntry OBJECT-TYPE
        SYNTAX CaptureBufferEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A packet captured off of an attached network.  As an
            example, an instance of the captureBufferPacketData
            object might be named captureBufferPacketData.3.1783"
        INDEX { captureBufferControlIndex, captureBufferIndex }
        ::= { captureBufferTable 1 }

    CaptureBufferEntry ::= SEQUENCE {
        captureBufferControlIndex   INTEGER (1..65535),
        captureBufferIndex          INTEGER (1..2147483647),
        captureBufferPacketID       INTEGER,
        captureBufferPacketData     OCTET STRING,
        captureBufferPacketLength   INTEGER,
        captureBufferPacketTime     INTEGER,
        captureBufferPacketStatus   INTEGER
    }

    captureBufferControlIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The index of the bufferControlEntry with which
            this packet is associated."
        ::= { captureBufferEntry 1 }

    captureBufferIndex OBJECT-TYPE
        SYNTAX INTEGER (1..2147483647)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "An index that uniquely identifies an entry
            in the captureBuffer table associated with a
            particular bufferControlEntry.  This index will
            start at 1 and increase by one for each new packet
            added with the same captureBufferControlIndex.

            Should this value reach 2147483647, the next packet
            added with the same captureBufferControlIndex shall
            cause this value to wrap around to 1."
        ::= { captureBufferEntry 2 }

    captureBufferPacketID OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "An index that describes the order of packets
            that are received on a particular interface.
            The packetID of a packet captured on an
            interface is defined to be greater than the
            packetID's of all packets captured previously on
            the same interface.  As the captureBufferPacketID
            object has a maximum positive value of 2^31 - 1,
            any captureBufferPacketID object shall have the
            value of the associated packet's packetID mod 2^31."
        ::= { captureBufferEntry 3 }

    captureBufferPacketData OBJECT-TYPE
        SYNTAX OCTET STRING
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The data inside the packet, starting at the
            beginning of the packet plus any offset specified in
            the associated bufferControlDownloadOffset,
            including any link level headers.  The length of the
            data in this object is the minimum of the length of
            the captured packet minus the offset, the length of
            the associated bufferControlCaptureSliceSize minus
            the offset, and the associated
            bufferControlDownloadSliceSize.  If this minimum is
            less than zero, this object shall have a length of
            zero."
        ::= { captureBufferEntry 4 }

    captureBufferPacketLength OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The actual length (off the wire) of the packet stored
            in this entry, including FCS octets."
        ::= { captureBufferEntry 5 }

    captureBufferPacketTime OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The number of milliseconds that had passed since
            this capture buffer was first turned on when this
            packet was captured."
        ::= { captureBufferEntry 6 }

    captureBufferPacketStatus OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "A value which indicates the error status of this
            packet.

            The value of this object is defined in the same way as
            filterPktStatus.  The value is a sum.  This sum
            initially takes the value zero.  Then, for each
            error, E, that has been discovered in this packet,
            2 raised to a value representing E is added to the
            sum.

            The errors defined for a packet captured off of an
            Ethernet interface are as follows:

                bit #    Error
                    0    Packet is longer than 1518 octets
                    1    Packet is shorter than 64 octets
                    2    Packet experienced a CRC or Alignment
                         error
                    3    First packet in this capture buffer after
                         it was detected that some packets were
                         not processed correctly.
                    4    Packet's order in buffer is only
                         approximate (May only be set for packets
                         sent from the probe)

            For example, an Ethernet fragment would have a
            value of 6 (2^1 + 2^2).

            As this MIB is expanded to new media types, this
            object will have other media-specific errors defined."
        ::= { captureBufferEntry 7 }


    -- The Event Group

    -- Implementation of the Event group is optional.
    --
    -- The Event group controls the generation and notification
    -- of events from this device.  Each entry in the eventTable
    -- describes the parameters of the event that can be
    -- triggered. Each event entry is fired by an associated
    -- condition located elsewhere in the MIB.  An event entry
    -- may also be associated- with a function elsewhere in the
    -- MIB that will be executed when the event is generated.  For
    -- example, a channel may be turned on or off by the firing
    -- of an event.
    --
    -- Each eventEntry may optionally specify that a log entry
    -- be created on its behalf whenever the event occurs.
    -- Each entry may also specify that notification should
    -- occur by way of SNMP trap messages.  In this case, the
    -- community for the trap message is given in the associated
    -- eventCommunity object.  The enterprise and specific trap
    -- fields of the trap are determined by the condition that
    -- triggered the event.  Two traps are defined: risingAlarm
    -- and fallingAlarm.  If the eventTable is triggered by a
    -- condition specified elsewhere, the enterprise and
    -- specific trap fields must be specified for traps
    -- generated for that condition.

    eventTable OBJECT-TYPE
        SYNTAX SEQUENCE OF EventEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of events to be generated."
        ::= { event 1 }

    eventEntry OBJECT-TYPE
        SYNTAX EventEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A set of parameters that describe an event to be
            generated when certain conditions are met.  As an
            example, an instance of the eventLastTimeSent object
            might be named eventLastTimeSent.6"
        INDEX { eventIndex }
        ::= { eventTable 1 }

    EventEntry ::= SEQUENCE {
        eventIndex          INTEGER (1..65535),
        eventDescription    DisplayString (SIZE (0..127)),
        eventType           INTEGER,
        eventCommunity      OCTET STRING (SIZE (0..127)),
        eventLastTimeSent   TimeTicks,
        eventOwner          DisplayString,
        eventStatus         EntryStatus
    }

    eventIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "An index that uniquely identifies an entry in the
            event table.  Each such entry defines one event that
            is to be generated when the appropriate conditions
            occur."
        ::= { eventEntry 1 }

    eventDescription OBJECT-TYPE
        SYNTAX DisplayString (SIZE (0..127))
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "A comment describing this event entry."
        ::= { eventEntry 2 }

    eventType OBJECT-TYPE
        SYNTAX INTEGER {
                none(1),
                log(2),
                snmp-trap(3),    -- send an SNMP trap
                log-and-trap(4)
        }
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The type of notification that the probe will make
            about this event.  In the case of log, an entry is
            made in the log table for each event.  In the case of
            snmp-trap, an SNMP trap is sent to one or more
            management stations."
        ::= { eventEntry 3 }

    eventCommunity OBJECT-TYPE
        SYNTAX OCTET STRING (SIZE (0..127))
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "If an SNMP trap is to be sent, it will be sent to
            the SNMP community specified by this octet string.
            In the future this table will be extended to include
            the party security mechanism.  This object shall be
            set to a string of length zero if it is intended that
            that mechanism be used to specify the destination of
            the trap."
        ::= { eventEntry 4 }

    eventLastTimeSent OBJECT-TYPE
        SYNTAX TimeTicks
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The value of sysUpTime at the time this event
            entry last generated an event.  If this entry has
            not generated any events, this value will be
            zero."
        ::= { eventEntry 5 }

    eventOwner OBJECT-TYPE
        SYNTAX DisplayString
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The entity that configured this entry and is
            therefore using the resources assigned to it.

            If this object contains a string starting with
            'monitor' and has associated entries in the log
            table, all connected management stations should
            retrieve those log entries, as they may have
            significance to all management stations connected to
            this device"
        ::= { eventEntry 6 }

    eventStatus OBJECT-TYPE
        SYNTAX EntryStatus
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
            "The status of this event entry.

            If this object is not equal to valid(1), all
            associated log entries shall be deleted by the
            agent."
        ::= { eventEntry 7 }

    --
    logTable OBJECT-TYPE
        SYNTAX SEQUENCE OF LogEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A list of events that have been logged."
        ::= { event 2 }

    logEntry OBJECT-TYPE
        SYNTAX LogEntry
        ACCESS not-accessible
        STATUS mandatory
        DESCRIPTION
            "A set of data describing an event that has been
            logged.  For example, an instance of the
            logDescription object might be named
            logDescription.6.47"
        INDEX { logEventIndex, logIndex }
        ::= { logTable 1 }

    LogEntry ::= SEQUENCE {
        logEventIndex           INTEGER (1..65535),
        logIndex                INTEGER (1..2147483647),
        logTime                 TimeTicks,
        logDescription          DisplayString (SIZE (0..255))
    }

    logEventIndex OBJECT-TYPE
        SYNTAX INTEGER (1..65535)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The event entry that generated this log
            entry.  The log identified by a particular
            value of this index is associated with the same
            eventEntry as identified by the same value
            of eventIndex."
        ::= { logEntry 1 }

    logIndex OBJECT-TYPE
        SYNTAX INTEGER (1..2147483647)
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "An index that uniquely identifies an entry
            in the log table amongst those generated by the
            same eventEntries.  These indexes are
            assigned beginning with 1 and increase by one
            with each new log entry.  The association
            between values of logIndex and logEntries
            is fixed for the lifetime of each logEntry.
            The agent may choose to delete the oldest
            instances of logEntry as required because of
            lack of memory.  It is an implementation-specific
            matter as to when this deletion may occur."
        ::= { logEntry 2 }

    logTime OBJECT-TYPE
        SYNTAX TimeTicks
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "The value of sysUpTime when this log entry was
            created."
        ::= { logEntry 3 }

    logDescription OBJECT-TYPE
        SYNTAX DisplayString (SIZE (0..255))
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
            "An implementation dependent description of the
            event that activated this log entry."
        ::= { logEntry 4 }

    --  These definitions use the TRAP-TYPE macro as
    --  defined in RFC 1215 [10]

    --  Remote Network Monitoring Traps

--    risingAlarm TRAP-TYPE
--        ENTERPRISE rmon
--        VARIABLES { alarmIndex, alarmVariable, alarmSampleType,
--                    alarmValue, alarmRisingThreshold }
--        DESCRIPTION
--            "The SNMP trap that is generated when an alarm
--            entry crosses its rising threshold and generates
--            an event that is configured for sending SNMP
--            traps."
--        ::= 1
--
--    fallingAlarm TRAP-TYPE
--        ENTERPRISE rmon
--        VARIABLES { alarmIndex, alarmVariable, alarmSampleType,
--                    alarmValue, alarmFallingThreshold }
--        DESCRIPTION
--            "The SNMP trap that is generated when an alarm
--            entry crosses its falling threshold and generates
--            an event that is configured for sending SNMP
--            traps."
--        ::= 2

END
-- @(#)WSCCS w/mibs-rredund.mib 1.1 8/30/95
Wellfleet-RREDUND-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:47:08 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfRRedGroup
        FROM Wellfleet-COMMON-MIB;


    wfRRedundGroup	OBJECT IDENTIFIER ::= { wfRRedGroup 1 }

    wfRRedundDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfRRedundGroup 1 }

    wfRRedundDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfRRedundGroup 2 }

    wfRRedundState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4),
    		    waitsosrply(5),
    		    waitprigdby(6),
    		    rcvdprigdby(7),
    		    waitnewpri(8),
    		    bidding(9)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "State parameter"
        DEFVAL	{ init }
        ::= { wfRRedundGroup 3 }

    wfRRedundGroupId OBJECT-TYPE
        SYNTAX	INTEGER(1..128)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Group ID parameter"
        DEFVAL	{ 1 }
        ::= { wfRRedundGroup 4 }

    wfRRedundMemberId OBJECT-TYPE
        SYNTAX	INTEGER(1..128)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Member ID parameter"
        DEFVAL	{ 1 }
        ::= { wfRRedundGroup 5 }

    wfRRedundRole OBJECT-TYPE
        SYNTAX	INTEGER {
    		    primary(1),
    		    secondary(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Role parameter"
        DEFVAL	{ secondary }
        ::= { wfRRedundGroup 6 }

    wfRRedundRefNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reference Number parameter, a 32 bit unsigned number."
        ::= { wfRRedundGroup 7 }

    wfRRedundGoodIFCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Good Interface Count parameter, a 32 bit unsigned number."
        ::= { wfRRedundGroup 8 }

    wfRRedundGoodRESCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Good Resource Count parameter, a 32 bit unsigned number."
        ::= { wfRRedundGroup 9 }

    wfRRedundSwitch OBJECT-TYPE
        SYNTAX	INTEGER {
    		    dontswitch(1),
    		    switch(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Router software clears to indicate receive of role switch command"
        DEFVAL	{ dontswitch }
        ::= { wfRRedundGroup 10 }

    wfRRedundAuto OBJECT-TYPE
        SYNTAX	INTEGER {
    		    manual(1),
    		    auto(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Auto Role Switching parameter - Enables and Disables Auto Role Switching."
        DEFVAL	{ auto }
        ::= { wfRRedundGroup 11 }

    wfRRedundGoodBidCount OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "same router prior to kicking in Auto Role Switching."
        DEFVAL	{ 3 }
        ::= { wfRRedundGroup 12 }

    wfRRedundVersion OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Version parameter - Redundancy Protocol Version Number"
        DEFVAL	{ 1 }
        ::= { wfRRedundGroup 13 }

    wfRRedundPriority OBJECT-TYPE
        SYNTAX	INTEGER(1..128)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Priority parameter - Priority level to be the Primary router"
        DEFVAL	{ 1 }
        ::= { wfRRedundGroup 14 }

    wfRRedundHelloTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..86400)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Secondary Keep Alives"
        DEFVAL	{ 2 }
        ::= { wfRRedundGroup 15 }

    wfRRedundBidDuration OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "the Bidding Period"
        DEFVAL	{ 45 }
        ::= { wfRRedundGroup 16 }

    wfRRedundTimeoutCounters OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "receiving Primary Hellos before Secondaries enter the bidding process."
        DEFVAL	{ 5 }
        ::= { wfRRedundGroup 17 }

    wfRRedundNPrimaryCounters OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "any design flaws."
        ::= { wfRRedundGroup 18 }

    wfRRedundRoleSwitchDelayTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..86400)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "message to adjacent routers on the non-backed-up interfaces."
        DEFVAL	{ 5 }
        ::= { wfRRedundGroup 19 }

    wfRRedundPriConfigFilePath OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Pathname of Primary's configuration file."
        ::= { wfRRedundGroup 20 }

    wfRRedundPriMemberID OBJECT-TYPE
        SYNTAX	INTEGER(1..128)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Primary Member's Member ID"
        DEFVAL	{ 1 }
        ::= { wfRRedundGroup 21 }

    wfRRedundPriState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4),
    		    waitsosrply(5),
    		    waitprigdby(6),
    		    rcvdprigdby(7),
    		    waitnewpri(8),
    		    bidding(9)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Primary Member's State"
        DEFVAL	{ init }
        ::= { wfRRedundGroup 22 }

    wfRRedundPriRefNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Primary Member's Reference Number, a 32 bit unsigned value."
        ::= { wfRRedundGroup 23 }

    wfRRedundPriGoodIFCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Primary Member's Good Interface Count, a 32 bit unsigned value."
        ::= { wfRRedundGroup 24 }

    wfRRedundPriGoodRESCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Primary Member's Good Resource Count, a 32 bit unsigned value."
        ::= { wfRRedundGroup 25 }

    wfRRedundBSecMemberID OBJECT-TYPE
        SYNTAX	INTEGER(1..128)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Best Secondary Member's Member ID"
        DEFVAL	{ 1 }
        ::= { wfRRedundGroup 26 }

    wfRRedundBSecState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4),
    		    waitsosrply(5),
    		    waitprigdby(6),
    		    rcvdprigdby(7),
    		    waitnewpri(8),
    		    bidding(9)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Best Secondary Member's State"
        DEFVAL	{ init }
        ::= { wfRRedundGroup 27 }

    wfRRedundBSecRefNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Best Secondary Member's Reference Number, a 32 bit unsigned value."
        ::= { wfRRedundGroup 28 }

    wfRRedundBSecGoodIFCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Best Secondary Member's Good Interface Count, a 32 bit unsigned value."
        ::= { wfRRedundGroup 29 }

    wfRRedundBSecGoodRESCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Best Secondary Member's Good Resource Count, a 32 bit unsigned value."
        ::= { wfRRedundGroup 30 }

    wfRRedundCctTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfRRedundCctEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This tabulates the circuit specific Router Redundancy parameters."
        ::= { wfRRedGroup 2 }

    wfRRedundCctEntry OBJECT-TYPE
        SYNTAX	WfRRedundCctEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry summary."
        INDEX	{ wfRRedundCctCct }
        ::= { wfRRedundCctTable 1 }

    WfRRedundCctEntry ::= SEQUENCE {
    	    wfRRedundCctDelete
    		INTEGER,
    	    wfRRedundCctDisable
    		INTEGER,
    	    wfRRedundCctCct
    		INTEGER,
    	    wfRRedundCctPrimaryMACAddr
    		OCTET STRING,
    	    wfRRedundCctSendPduDisable
    		INTEGER,
    	    wfRRedundCctSONMPXmtCount
    		INTEGER,
    	    wfRRedundCctSONMPRcvCount
    		INTEGER,
    	    wfRRedundCctSONMPRcvErrorCount
    		INTEGER
        }

    wfRRedundCctDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfRRedundCctEntry 1 }

    wfRRedundCctDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfRRedundCctEntry 2 }

    wfRRedundCctCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit Number, used as Instance ID."
        ::= { wfRRedundCctEntry 3 }

    wfRRedundCctPrimaryMACAddr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute is used for Site Manager Router Redundancy Configuration."
        ::= { wfRRedundCctEntry 4 }

    wfRRedundCctSendPduDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "For enabling/disabling sending of Router Redundancy PDU per CCT basis."
        DEFVAL	{ enabled }
        ::= { wfRRedundCctEntry 5 }

    wfRRedundCctSONMPXmtCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Used for counting SONMP PDU transmitted on this circuit."
        ::= { wfRRedundCctEntry 6 }

    wfRRedundCctSONMPRcvCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Used for counting good SONMP PDU received on this circuit."
        ::= { wfRRedundCctEntry 7 }

    wfRRedundCctSONMPRcvErrorCount OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Used for counting bad SONMP PDU received on this circuit."
        ::= { wfRRedundCctEntry 8 }

    wfRRedundResourceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfRRedundResourceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "for Router Redundancy."
        ::= { wfRRedGroup 3 }

    wfRRedundResourceEntry OBJECT-TYPE
        SYNTAX	WfRRedundResourceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry summary."
        INDEX	{ wfRRedundResourceCircuitNumber,
    		  wfRRedundResourceNetAddr }
        ::= { wfRRedundResourceTable 1 }

    WfRRedundResourceEntry ::= SEQUENCE {
    	    wfRRedundResourceDelete
    		INTEGER,
    	    wfRRedundResourceDisable
    		INTEGER,
    	    wfRRedundResourceCircuitNumber
    		INTEGER,
    	    wfRRedundResourceNetAddr
    		IpAddress,
    	    wfRRedundResourceStatus
    		INTEGER,
    	    wfRRedundResourceStatusUpdateDisable
    		INTEGER,
    	    wfRRedundResourcePingIntervalTimer
    		INTEGER,
    	    wfRRedundResourcePingRetryCount
    		INTEGER,
    	    wfRRedundResourcePingTimeOut
    		INTEGER
        }

    wfRRedundResourceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfRRedundResourceEntry 1 }

    wfRRedundResourceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enable }
        ::= { wfRRedundResourceEntry 2 }

    wfRRedundResourceCircuitNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit owner of this interface."
        ::= { wfRRedundResourceEntry 3 }

    wfRRedundResourceNetAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Resource's Network Address, i.e. IP Address."
        ::= { wfRRedundResourceEntry 4 }

    wfRRedundResourceStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    reachable(1),
    		    unreachable(2),
    		    unknown(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Resource Status."
        DEFVAL	{ unknown }
        ::= { wfRRedundResourceEntry 5 }

    wfRRedundResourceStatusUpdateDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Resource Status Update Enable."
        DEFVAL	{ enabled }
        ::= { wfRRedundResourceEntry 6 }

    wfRRedundResourcePingIntervalTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..86399)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Frequency timer for Pings in sec"
        DEFVAL	{ 600 }
        ::= { wfRRedundResourceEntry 7 }

    wfRRedundResourcePingRetryCount OBJECT-TYPE
        SYNTAX	INTEGER(1..9)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of missed Pings before Resouce is unreachable"
        DEFVAL	{ 3 }
        ::= { wfRRedundResourceEntry 8 }

    wfRRedundResourcePingTimeOut OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Ping TimeOut in sec (wait this long before increment retry)"
        DEFVAL	{ 5 }
        ::= { wfRRedundResourceEntry 9 }

    wfRRedundRemoteMemberTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfRRedundRemoteMemberEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This tabulates the remote members for Router Redundancy."
        ::= { wfRRedGroup 4 }

    wfRRedundRemoteMemberEntry OBJECT-TYPE
        SYNTAX	WfRRedundRemoteMemberEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Entry summary."
        INDEX	{ wfRRedundRemoteMemberGroupId,
    		  wfRRedundRemoteMemberId }
        ::= { wfRRedundRemoteMemberTable 1 }

    WfRRedundRemoteMemberEntry ::= SEQUENCE {
    	    wfRRedundRemoteMemberDelete
    		INTEGER,
    	    wfRRedundRemoteMemberGroupId
    		INTEGER,
    	    wfRRedundRemoteMemberId
    		INTEGER,
    	    wfRRedundRemoteMemberNetAddr
    		IpAddress,
    	    wfRRedundRemoteMemberRole
    		INTEGER,
    	    wfRRedundRemoteMemberState
    		INTEGER,
    	    wfRRedundRemoteMemberRefNum
    		INTEGER,
    	    wfRRedundRemoteMemberPriority
    		INTEGER,
    	    wfRRedundRemoteMemberGoodIfCnt
    		INTEGER,
    	    wfRRedundRemoteMemberGoodResCnt
    		INTEGER,
    	    wfRRedundRemoteMemberIfCnt
    		INTEGER,
    	    wfRRedundRemoteMemberLocalIfReachCnt
    		INTEGER
        }

    wfRRedundRemoteMemberDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfRRedundRemoteMemberEntry 1 }

    wfRRedundRemoteMemberGroupId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Group Member ID parameter"
        ::= { wfRRedundRemoteMemberEntry 2 }

    wfRRedundRemoteMemberId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Member ID parameter"
        ::= { wfRRedundRemoteMemberEntry 3 }

    wfRRedundRemoteMemberNetAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Member Net Address"
        ::= { wfRRedundRemoteMemberEntry 4 }

    wfRRedundRemoteMemberRole OBJECT-TYPE
        SYNTAX	INTEGER {
    		    primary(1),
    		    secondary(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Role parameter"
        DEFVAL	{ secondary }
        ::= { wfRRedundRemoteMemberEntry 5 }

    wfRRedundRemoteMemberState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4),
    		    waitsosrply(5),
    		    waitprigdby(6),
    		    rcvdprigdby(7),
    		    waitnewpri(8),
    		    bidding(9)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "State parameter"
        DEFVAL	{ init }
        ::= { wfRRedundRemoteMemberEntry 6 }

    wfRRedundRemoteMemberRefNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reference Number parameter, a 32 bit unsigned value."
        ::= { wfRRedundRemoteMemberEntry 7 }

    wfRRedundRemoteMemberPriority OBJECT-TYPE
        SYNTAX	INTEGER(1..128)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Priority parameter - Priority level to be the Primary router"
        DEFVAL	{ 1 }
        ::= { wfRRedundRemoteMemberEntry 8 }

    wfRRedundRemoteMemberGoodIfCnt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Good interfaces count, a 32 bit unsigned value."
        ::= { wfRRedundRemoteMemberEntry 9 }

    wfRRedundRemoteMemberGoodResCnt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Good resources count, a 32 bit unsigned value."
        ::= { wfRRedundRemoteMemberEntry 10 }

    wfRRedundRemoteMemberIfCnt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Interface count"
        ::= { wfRRedundRemoteMemberEntry 11 }

    wfRRedundRemoteMemberLocalIfReachCnt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Local Interface reachable count"
        ::= { wfRRedundRemoteMemberEntry 12 }

    END  -- Wellfleet-RREDUND-MIB
-- @(#)WSCCS m/mibs-ruiboot.mib 1.1 8/30/95
Wellfleet-RUIBOOT-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:47:15 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfRuiBootGroup
        FROM Wellfleet-COMMON-MIB;


    wfRuiBoot	OBJECT IDENTIFIER ::= { wfRuiBootGroup 1 }

    wfRuiBootBaseDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform a set operation on this
                object in order to create/delete RUI BOOT Gate."
        DEFVAL	{ created }
        ::= { wfRuiBoot 1 }

    wfRuiBootBaseDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform a set operation on this
                object in order to enable/disable RUI BOOT Gate."
        DEFVAL	{ enabled }
        ::= { wfRuiBoot 2 }

    wfRuiBootBaseState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpres(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the entire Boot Mib Gate."
        DEFVAL	{ notpres }
        ::= { wfRuiBoot 3 }

    wfRuiBootTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfRuiBootEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Remote User Interface Boot Object Table "
        ::= { wfRuiBootGroup 2 }

    wfRuiBootEntry OBJECT-TYPE
        SYNTAX	WfRuiBootEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A description of a Boot Entry"
        INDEX	{ wfRuiBootDateAndTime }
        ::= { wfRuiBootTable 1 }

    WfRuiBootEntry ::= SEQUENCE {
    	    wfRuiBootDelete
    		INTEGER,
    	    wfRuiBootDisable
    		INTEGER,
    	    wfRuiBootState
    		INTEGER,
    	    wfRuiBootDateAndTime
    		OCTET STRING,
    	    wfRuiBootImageName
    		DisplayString,
    	    wfRuiBootConfigName
    		DisplayString,
    	    wfRuiBootErrorCode
    		INTEGER,
    	    wfRuiBootSystemErrorCode
    		INTEGER
        }

    wfRuiBootDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter for determining whether
                or not BOOT is configured on this slot."
        DEFVAL	{ created }
        ::= { wfRuiBootEntry 1 }

    wfRuiBootDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Users perform an SNMP SET
                operation on this object to enable/disable a  BOOT
                Entry.  Default is enabled."
        DEFVAL	{ enabled }
        ::= { wfRuiBootEntry 2 }

    wfRuiBootState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    scheduled(1),
    		    aged(2),
    		    time(3),
    		    error(4),
    		    initializing(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of this Boot Entry"
        DEFVAL	{ initializing }
        ::= { wfRuiBootEntry 3 }

    wfRuiBootDateAndTime OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (11))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The 11 octet date and time that a BOOT is
                to execute.
                Octet map:
                1-2 Year, 3 Month,   4 Day,
                5 Hour,   6 Minutes, 7 Seconds,  8 Deci-seconds,

                               'A date-time specification.

                               field  octets  contents                  range
                               -----  ------  --------                  -----
                                 1      1-2   year                      0..65536
                                 2       3    month                     1..12
                                 3       4    day                       1..31
                                 4       5    hour                      0..23
                                 5       6    minutes                   0..59
                                 6       7    seconds                   0..60
                                              (use 60 for leap-second)
                                 7       8    deci-seconds              0..9
                                 8       9    direction from UTC        '+' / '-'
                                 9      10    hours from UTC            0..11
                                10      11    minutes from UTC          0..59

                               For example, Tuesday May 26, 1992 at 1:30:15 PM
                               EDT would be displayed as:

                                           1992-5-26,13:30:15.0,-4:0

                               Note that if only local time is known, then
                               timezone information (fields 8-10) is not
                               present.'
                       SYNTAX       OCTET STRING (SIZE (8 | 11))"
        ::= { wfRuiBootEntry 4 }

    wfRuiBootImageName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Name of boot Image"
        ::= { wfRuiBootEntry 5 }

    wfRuiBootConfigName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Parameter for the specified command"
        ::= { wfRuiBootEntry 6 }

    wfRuiBootErrorCode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    imagename(2),
    		    configname(3),
    		    imagefilenotfound(4),
    		    configfilenotfound(5),
    		    imagefilecorrupt(6),
    		    filesystem(7),
    		    invalidtime(8)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Error code from last execution."
        DEFVAL	{ none }
        ::= { wfRuiBootEntry 7 }

    wfRuiBootSystemErrorCode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Error code from specified subsystem indicated in wfRuiBootErrorCode
                File System Errors:
                NONE               1
                ACCESS_VIOLATION   2
                CORRUPT_FILE       3
                DEVICE_BUSY        4
                DEVICE_CLIENT      5
                DEVICE_FULL        6
                DEVICE_SERVER      7
                DEVICE_WP          8     DEVICE WRITE PROTECTED
                DIRECTORY_FULL     9
                FCN_NOT_WRITTEN   10
                FILE_EXISTS       11
                FILE_LOCKED       12
                ILLEGAL_SEEK      13
                INVALID_ARGUMENT  14
                INVALID_NAME      15
                INVALID_VOLUME    16
                IO_ERROR          17
                IS_A_DIRECTORY    18
                MODE_NOT_ALLOWED  19
                MOUNT_NOMATCH     20
                NAME_TOO_LONG     21
                NOT_A_DIRECTORY   22
                NO_ENTRY          23
                NO_READ_ACCESS    24
                NO_WRITE_ACCESS   25
                NOT_EMPTY_DIR     26
                DIR_IN_USE        27
                REQUEST_TIME_OUT  28
                REPLY_TIME_OUT    29
                CORRUPTED_VOLUME  30
                INSUFF_RESOURCES  31
                PARTITION_EXISTS  32
                NO_PARTITION      33
                CANT_PART_MEDIA   34
                VOL1_TOO_BIG      35
                COMPACT_VOL1      36"
        ::= { wfRuiBootEntry 8 }

    END  -- Wellfleet-RUIBOOT-MIB
-- @(#)WSCCS l/mibs-s3com.mib 1.1 8/30/95
-- SECTION 1: Top Level Definitions

SYNOPTICS-COMMON-MIB DEFINITIONS ::= BEGIN

-- Common MIB Release 4.7.3
-- Revision 06/05/95

-- Copyright 1995 Bay Networks, Inc.
-- All rights reserved.
-- This Bay Networks SNMP Management Information Base Specification
-- (Specification) embodies Bay Networks' confidential and
-- proprietary intellectual property. Bay Networks retains all
-- title and ownership in the Specification, including any
-- revisions.

-- This Specification is supplied "AS IS," and Bay Networks makes
-- no warranty, either express or implied, as to the use,
-- operation, condition, or performance of the Specification.


-- Imports

IMPORTS
	Counter, Gauge, TimeTicks, IpAddress
		FROM RFC1155-SMI
	DisplayString
		FROM RFC1213-MIB
	OBJECT-TYPE
		FROM RFC-1212
	s3SnmpAgent, series3000, SnpxBackplaneType, SnpxChassisType
		FROM SYNOPTICS-ROOT-MIB;


-- Textual Conventions

S3ModuleType ::= INTEGER {
	empty(1),		-- nothing installed
	other(2),		-- none of the following
	m3302(3),		-- STP ethernet Host Module
	m3304-ST(4),		-- FOIRL ethernet Host Module
	m3305(5),		-- UTP ethernet Host Module
	m3308(6),		-- 10 base-T ethernet Host Module
	m3313(7),		-- AUI ethernet NMM w/ RS232 port
	m3313M(8),		-- AUI ethernet NMM w/ RS232 + modem
	m3314-ST(9),		-- FOIRL ethernet NMM w/ RS232
	m3314M-ST(10),		-- FOIRL ethernet NMM w/ RS232 + modem
	m3323(11),		-- AUI Local Bridge
	m3324-ST(12),		-- FOIRL Local Bridge
	m3502(13),		-- STP Token Ring Host Module
	m3532(14),		-- STP Token Ring Repeater
	m3552(15),		-- STP Ring in/ Ring out Module
	m3301(16),		-- Thin Net ethernet Host Module
	m3307(17),		-- 10 base-T 50 pin Host Module
	m3356(18),		-- Ethernet Remote Bridge
	m3512(19),		-- T.R. NMM w/ STP ring in/ring out
	m3514(20),		-- T.R. NMM w/ FOIRL ring in/ring out
	m3505(21),		-- UTP Token Ring Host Module
	m3554(22),		-- FOIRL ring in/ring out Module
	m3534(23),		-- FOIRL Repeater
	m3383(24),		-- AUI ethernet Local Router
	m3384(25),		-- FOIRL ethernet Local Router
	m331x(26),		-- ethernet NMM module w/unknown MDA type
	m351x(27),		-- t.r. NMM module w/unknown MDA type
	m3502-A(28),		-- STP Token Ring Host Module
	m3902(29),		-- STP FDDI Host Module
	m3904(30),		-- Fiber FDDI Host Module
	m3910S(31),		-- FDDI Super NMM
	m3386(32),		-- Cisco Remote Router
	m3394(33),		-- Ethernet-localtalk router
	m3395(34),		-- XYPLEX terminal server
	m3323S(35),		-- High Speed Local Bridge with AUI
	m3324S-ST(36),		-- High Speed Local Bridge with FOIRL
	m3307A(37),		-- 10baseT with amp connector
	m3308A(38),		-- 10baseT (Ibid)
	m3505A(39),		-- UTP Token Ring Host Module
	m3513(40),		-- STP TR repeater NMM
	m3333(41),		-- ethernet retiming module AUI
	m3334-ST(42),		-- ethernet retiming module FOIRL
	m3040(43),		-- model 3040 NCE (SPARCStation on a card)
	m3100R(44),		-- 3100R Summing Module
	notUsed45(45),		-- not assigned
	notUsed46(46),		-- not assigned
	m2810-hm(47),		-- host part of 2810 non-modular Ethernet
	m2810-nmm(48),		-- nmm part of 2810 non-modular Ethernet
	m3313S(49),		-- Ethernet NMM+ with AUI
	m3314S(50),		-- Ethernet NMM+ with FOIRL
	m3368(51),		-- 10Base-T LattisSecure Host Module
	m3512S(52),		-- Model 3512S Token Ring NMM
	m3513S(53),		-- Model 3513S Token Ring NMM
	m3514S(54),		-- Model 3514S Token Ring NMM
	m3522(55),		-- Model 3522 Token Ring bridge
	m2912(56),		-- FDDI STP workgroup concentrator
	m2914(57),		-- FDDI Fiber workgroup concentrator
	notUsed58(58),		-- not assigned
	m3301-75(59),		-- Thin net Enet Host Module for 75 ohms
	m3301-93(60),		-- Thin net Enet Host Module for 93 ohms
	m271x-nmm(61),		-- nmm part of 271x
	m2705-hm(62),		-- host connection to 2705
	m2715-hm(63),		-- host part of 2715
	m2813-nmm(64),		-- nmm part of 2813
	m2814-nmm(65),		-- nmm part of 2814
	m2813-hm(66),		-- host part of 2813
	m2814-hm(67),		-- host part of 2814
	m2803-hm(68),		-- cascaded 2803
	m2804-hm(69),		-- cascaded 2804
	m3395A(70),		-- Xyplex terminal server
	m3040S(71),		-- NCE (SPARCStation on a card)
	m3502B(72),		-- Model 3502B Token Ring Host Module
	m3505B(73),		-- Model 3505B Token Ring Host Module
	m2715-F-hm(74),		-- host part of 2715-F
	m2712-hm(75),		-- host part of 2712
	m2712-F-hm(76),		-- host part of 2712-F
	m2702-hm(77),		-- host connection to 2702
	m2702-C-hm(78),		-- host connection to 2702-C
	m2705-F-hm(79),		-- host connection to 2705-F
	m2702-F-hm(80),		-- host connection to 2702-F
	m2705-C-hm(81),		-- host connection to 2705-C
	m3902A(82),		-- Model 3902A FDDI host module
	m2912A(83),		-- FDDI SDDI workgroup concentrator
	m3313A(84),		-- Model 3313A Ethernet NMM
	m3314A(85),		-- Model 3314A Ethernet NMM
	m3307HD(86),		-- Model 3307HD Ethernet host module
	m3328(87),		-- Model 3328 Ethernet Switching Engine
	m3904-2SM(88),		-- Model 3904SM FDDI host module
	m3910S-SM(89),		-- Model 3910SM FDDI NMM
	m3800(90),		-- Cisco multi Media Router
	m3910S-SD(91),		-- Model 3910S-SD FDDI SDDI NMM
	m3904-4SM(92),		-- Model 3904-4SM FDDI single mode fiber host
	m2915(93),		-- Model 2915 FDDI UTP workgroup concentrator
	m3910SA(94),		-- Model 3910SA FDDI NMM II
	m3910SA-SM(95),		-- Model 3910SA FDDI NMM II with single mode fiber
	m3905(96),		-- Model 3905 FDDI UTP Host Module
	m2715B-hm(97),		-- host part of 2715B
	m2705B-hm(98),		-- host connection to 2705B
	m2715B-F-hm(99),	-- host part of 2715B-F
	m2712B-hm(100),		-- host part of  2712B
	m2712B-F-hm(101),	-- host part of 2712B-F
	m2702B-C-hm(102),	-- host connection to 2702B-C
	m3304A(103),		-- Redundant Ethernet Host Module
	m3486(104),		-- Model 3486 Lattis Engine / 486
	m3308B(105),		-- Model 3308B 10BASE-T Host Module
	m2813SA-nmm(106),	-- nmm part of 2813SA
	m2814SA-nmm(107),	-- nmm part of 2814SA
	m3517SA(108),		-- Model 3517SA Token Ring NMM
	m810M(109),		-- Model 810M eight port 10BASE-T Hub
	m3313SA(110),		-- Model 3313SA Ethernet NMM
	m3314SA(111),		-- Model 3314SA Ethernet NMM
	m3522A(112),		-- Model 3522A Token Ring Bridge
	m3504-ST(113),		-- Model 3504-ST Token Ring Host
	m3513SA(114),		-- Model 3513SA Token Ring NMM
	mAlcatel-Eth-nmm(115),	-- nmm part of Alcatel Ethernet workgroup conc.
	mAlcatel-Eth-hm1(116),	-- host part of Alcatel Ethernet workgroup conc.
	mAlcatel-Eth-hm(117),	-- cascaded Alcatel Ethernet workgroup conc.
	m2486-nmm(118),		-- nmm part of 2486
	m2486-hm(119),		-- host part of 2486
	m3174(120),		-- Model 3174 Communications Controller Module
	m271xSA-nmm(121),	-- nmm part of 271xSA
	m3299C(122),		-- Model 3299-C Terminal Multiplexor Adapter Module
	m3299U(123),		-- Model 3299-U TTP Terminal Multiplexor Adapter Module
	m3299F(124),		-- Model 3299-F Fiber Optic Terminal Adapter Module
	m2300x(125),		-- Model 2300x
	m2310x(126)		-- Model 2310x
	}
-- This type is used to specify a module.


S3PsType ::= INTEGER {
	other(1),		-- none of the following
	low(2),			-- 200 watt supply (3000)
				-- 50 watt supply (281x)
	medium(3),		-- 360 watt supply (3000)
				-- 110 watt supply (3030)
				-- 85 watt supply (2715)
				-- 33 wattt supply (2300x & 2310x)
	high(4),		-- 460 watt supply (3000)
				-- 150 watt supply (3030)
				-- 150 watt supply (2914 & 2912)
	redundantCapable(5),	-- redundant backplane (3000)
	empty(6)		-- nothing installed
	}
-- This type is used to specify the power supply type. Where used,
--   the descriptions specify the valid values.

-- Groups

s3AgentSw		OBJECT IDENTIFIER ::= { s3SnmpAgent 1 }
s3AgentNetProtocol	OBJECT IDENTIFIER ::= { s3SnmpAgent 2 }
s3AgentIpProtocol	OBJECT IDENTIFIER ::= { s3AgentNetProtocol 1 }
-- this one is defined in the IPX MIB
-- s3AgentIpxProtocol	OBJECT IDENTIFIER ::= { s3AgentNetProtocol 2 }
-- this one is defined in section 3.
-- s3AgentTrapReceiverTable	OBJECT IDENTIFIER ::= { s3SnmpAgent 3 }
s3AgentHw		OBJECT IDENTIFIER ::= { s3SnmpAgent 4 }
s3AgentSpecific		OBJECT IDENTIFIER ::= { s3SnmpAgent 5 }
s3AgentLocImage		OBJECT IDENTIFIER ::= { s3SnmpAgent 6 }
-- this one is defined in the IPX MIB
-- s3AgentIPXTrapReceiverTable	OBJECT IDENTIFIER ::= { s3SnmpAgent 7 }

s3000Chassis		OBJECT IDENTIFIER ::= { series3000 1 }
s3000RedundantPs	OBJECT IDENTIFIER ::= { s3000Chassis 10 }
s3000Ethernet		OBJECT IDENTIFIER ::= { series3000 2 }
s3000TokenRing		OBJECT IDENTIFIER ::= { series3000 3 }
s3000FDDI		OBJECT IDENTIFIER ::= { series3000 4 }
s3000Bridge		OBJECT IDENTIFIER ::= { series3000 5 }
s3000TerminalServer	OBJECT IDENTIFIER ::= { series3000 6 }
s3000LattisTalk		OBJECT IDENTIFIER ::= { series3000 7 }
s3000Trb		OBJECT IDENTIFIER ::= { series3000 8 }



-- SECTION 2: Concentrator Chassis

-- Chassis Group


-- Implementation of this group is mandatory for all SynOptics
--   Series 3000 agents


s3ChassisType OBJECT-TYPE
	SYNTAX	SnpxChassisType
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The chassis type."
	::= { s3000Chassis 1 }

s3ChassisBkplType OBJECT-TYPE
	SYNTAX	SnpxBackplaneType
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The chassis backplane type."
	::= { s3000Chassis 2 }

s3ChassisBkplRev OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The chassis backplane revision."
	::= { s3000Chassis 3 }

s3ChassisPsType OBJECT-TYPE
	SYNTAX	S3PsType
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The chassis power supply type.  This value is
		valid only when the backplane type is not
		other(1).  If the chassis has a redundant backplane,
		the agent returns redundantCapable(5), even if only
		one power supply is installed.  The objects
		s3RedPsPrimaryConfig and s3RedPsSecondaryConfig
		should be consulted to determine the installed
		power supply type(s) with redundant backplanes."
	::= { s3000Chassis 4 }

s3ChassisPsStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		ok(1),			-- supply ok
		primaryFail(2),		-- primary power supply failure
		secondaryFail(3),	-- secondary power supply failure
		bothFail(4)		-- both power supplies failed
		}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The chassis power supply status."
	::= { s3000Chassis 5 }

s3ChassisFanStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		ok(1),			-- fans are running
		fail(2),		-- fan(s) are broken
		other(3)		-- unknown fan status or no fan
		}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The status of the chassis cooling fan."
	::= { s3000Chassis 6 }



-- Chassis Slot Configuration Table


s3SlotConfigTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF S3SlotConfigEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The chassis slot configuration table."
	::= { s3000Chassis 7 }

s3SlotConfigEntry OBJECT-TYPE
	SYNTAX	S3SlotConfigEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"What type of module is in each slot of the chassis."
	INDEX	{ s3SlotNumber }
	::= { s3SlotConfigTable 1 }


S3SlotConfigEntry ::= SEQUENCE {
	s3SlotNumber
		INTEGER,
	s3SlotModuleId
		INTEGER,
	s3SlotModuleType
		S3ModuleType,
	s3SlotModuleDescr
		DisplayString,
	s3SlotModuleLed
		OCTET STRING,
	s3SlotModuleMdaId
		INTEGER
	}

s3SlotNumber OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The 3000 Chassis slot number. Valid entries are 1-12."
	::= { s3SlotConfigEntry 1 }

s3SlotModuleId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"ID for the module.  Values are specified in
		SynOptics technical documents."
	::= { s3SlotConfigEntry 2 }

s3SlotModuleType OBJECT-TYPE
	SYNTAX	S3ModuleType
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"The type of module this entry represents.
		Values are specified in SynOptics technical documents."
	::= { s3SlotConfigEntry 3 }

s3SlotModuleDescr OBJECT-TYPE
	SYNTAX	DisplayString (SIZE(0..128))
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Module description.  Values are specified in
		SynOptics technical documents."
	::= { s3SlotConfigEntry 4 }

s3SlotModuleLed OBJECT-TYPE
	SYNTAX	OCTET STRING (SIZE(8))
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Status of the module LEDs.  Format is specified in
		SynOptics technical documents.  NOTE: the 291x FDDI
		workgroup concentrators actually return a string
		with size of 10."
	::= { s3SlotConfigEntry 5 }

s3SlotModuleMdaId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"ID of the medium-dependent part of the board.
		The value is board dependent. Values are specified
		in SynOptics technical documents."
	::= { s3SlotConfigEntry 6 }



-- Chassis Common Board Table


s3CommonBoardTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF S3CommonBoardEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"A table containing information about the boards
		currently plugged into the 3000 Chassis.  This
		board table contains an entry for each non-empty
		slot in the s3SlotConfigTable, EXCEPT for those
		slots containing Retiming Modules.

		All of the information in this board table is
		retrievable using the NMI commands that are common
		to all boards integrated into the SynOptics
		Series 3000 Concentrators."
	::= { s3000Chassis 8 }

s3CommonBoardEntry OBJECT-TYPE
	SYNTAX	S3CommonBoardEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"A table entry containing information about a
		single Board currently plugged into the 3000
		Chassis. These values can be retrieved using the
		common board NMI commands."
	INDEX	{ s3CommonBoardIndex }
	::= { s3CommonBoardTable 1 }

S3CommonBoardEntry ::= SEQUENCE {
	s3CommonBoardIndex
		INTEGER,
	s3CommonBoardId
		INTEGER,
	s3CommonBoardHwVer
		INTEGER,
	s3CommonBoardStatus
		INTEGER,
	s3CommonBoardReset
		INTEGER,
	s3CommonBoardPartStatus
		INTEGER,
	s3CommonBoardNmCntlStatus
		INTEGER,
	s3CommonBoardPsStatus
		INTEGER,
	s3CommonBoardPartTime
		TimeTicks
	}

s3CommonBoardIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"A unique value for each board. Its value ranges
		between 1 and 12. The value for each board must
		remain constant at least from one re-initialization
		of the entity's network management system to the
		next re-initialization."
	::= { s3CommonBoardEntry 1 }

s3CommonBoardId OBJECT-TYPE
	SYNTAX  INTEGER {
	m331x(1),
	m3302(2),
	m332x(3),
	m3304ST(4),
	m3305(5),
	m333x(6),
	m3307(7),
	m3308(8),
	m3301(9),
	m3904(10),
	m3902(11),
	m3910S(12),
--	mNotAssigned13(13),
	m331xS(14),
	m3100R(15),
	m3502(16),
	m3502A(17),
	m353x(18),
	m3040(19),
	m3505(20),
	m3505A(21),
	m355x(22),
	m3040S(23),
	m351x(24),
	m332xS(25),
	m338x(26),
	m3328(27),
	m3395(28),
	m3394(29),
	m3522(30),
	m3395A(31),
	m3800(32),
--	mNotAssigned33(33),
--	mNotAssigned34(34),
--	mNotAssigned35(35),
	m3368(36),
--	mNotAssigned37(37),
	m3308A(38),
	m2810nmm(39),
	m2810hm(40),
	m3301ohms75(41),
	m3301ohms93(42),
	m2912(43),
	m2914(44),
	m3502B(45),
	m3505B(46),
	m3307HD(47),
	m2702Fhm(48),
	m2712Fhm(49),
	m2712hm(50),
	m2702hm(51),
	m2813nmm(52),
	m2813hm(53),
	m2814hm(54),
	m2803hm(55),
	m3356(56),
	m2814nmm(57),
	m2804hm(58),
	m2702Chm(59),
	m2715Fhm(60),
	m2705Fhm(61),
	m2705Chm(62),
	m3902A(63),
	m2912A(64),
	m271xnmm(65),
	m2715hm(66),
	m3910SSD(67),
	m3313A(68),
	m3314A(69),
	m3304A(70),
	m3910SA(71),
	m2705hm(72),
	m3905(73),
	m2915(74),
	m2715Bhm(75),
	m2705Bhm(76),
	m2715BFhm(77),
	m2712Bhm(78),
	m2712BFhm(79),
	m2702BChm(80),
--	mNotAssigned81(81),
	m3486(82),
--	mNotAssigned83(83),
--	mNotAssigned84(84),
--	mNotAssigned85(85),
--	mNotAssigned86(86),
--	mNotAssigned87(87),
	m810m(88),
--	mNotAssigned89(89),
--	mNotAssigned90(90),
--	mNotAssigned91(91),
--	mNotAssigned92(92),
--	mNotAssigned93(93),
--	mNotAssigned94(94),
--	mNotAssigned95(95),
--	mNotAssigned96(96),
--	mNotAssigned97(97),
--	mNotAssigned98(98),
--	mNotAssigned99(99),
--	mNotAssigned100(100),
	m3517SA(101),
	m3308B(102),
	m2813SAnmm(103),
	m2814SAnmm(104),
	m3313SA(105),
	m3314SA(106),
	m3174(107),
	m3522A(108),
	m3513SA(109),
	m271xSAnmm(110),
	m2300x(114),
	m2310x(115),
	m3299C(116),
	m3299U(117),
	m3299F(119),
	mAlcatelEthConcnmm(250),
	mAlcatelEthConchm(251),
	mAlcatelEthExpConchm(252)
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
	"This is the ID of the board, which is 'hard-coded' in the
	board, and identifies the board's basic functionality.
	Some boards have the capability to change aspects of
	their functionality, such as media type, interface types,
	or power supply wattages, by plugging in different daughter
	cards.  Other boards may identify the type of cable plugged
	into them.  The boards that have these capabilities use
	different values for the object s3SlotModuleMda to identify
	the changable portion of the functionality currently used.
	Boards that do not support these capabilities typically set
	the object s3SlotModuleMda to 255 or zero.  The combination
	of the value of this object and the s3SlotModuleMda object
	are then mapped by software to determine the type of
	module (i.e., s3SlotModuleType).

	Notes:  1.)  The object s3SlotModuleType is marked
	             as deprecated.
	        2.)  Agents do not implement a complete mapping of
	             s3CommonBoardId and s3SlotModuleMda to
	             s3SlotModuleType.  The mapping that is performed
	             pertains to the media type of the agent.

	The possible values for this object are:
	  m331x(1)...................331x Ethernet NMM
	  m3302(2)...................3302 Ethernet STP Host
	  m332x(3)...................332x Ethernet Local Bridge
	  m3304ST(4).................3304 Ethernet FOIRL-ST Host
	  m3305(5)...................3305 Ethernet UTP Host
	  m333x(6)...................333x Ethernet Repeater/Retiming
	  m3307(7)...................3307 Ethernet 50 Pin UTP Host
	  m3308(8)...................3308 10BaseT UTP Host
	  m3301(9)...................3301 10Base2 Thin Net Host
	  m3904(10)..................3904 FDDI Multimode Fiber Host
	  m3902(11)..................3902 FDDI STP Host
	  m3910S(12).................3910S FDDI NMM
	  m331xS(14).................331xS Ethernet NMM
	  m3100R(15).................3100R Power Supply Summing
	  m3502(16)..................3502 Token Ring Passive STP Host
	  m3502A(17).................3502A Token Ring Passive STP/UTP Host
	  m353x(18)..................353x Token Ring RI/RO Repeater
	  m3040(19)..................3040 Network Control Engine (NCE)
	  m3505(20)..................3505 Token Ring Active UTP Host
	  m3505A(21).................3505A Token Ring Active UTP Host
	  m355x(22)..................355x Token Ring FOIRL RI/RO Repeater
	  m3040S(23).................3040S Network Control Engine
	  m351x(24)..................351x Token Ring NMM
	  m332xS(25).................332xS Ethernet High Speed Local Bridge
	  m338x(26)..................338x Ethernet Remote Router
	  m3328(27)..................3328 Ethernet Switching Engine (ESE)
	  m3395(28)..................3395 Terminal Server
	  m3394(29)..................3394 LattisTalk Router/Repeater
	  m3522(30)..................3522 Token Ring Local Bridge
	  m3395A(31).................3395A Terminal Server
	  m3800(32)..................3800 Multimedia Router
	  m3368(36)..................3368 Ethernet LattisSecure Host
	  m3308A(38).................3308A 10BaseT Host
	  m2810nmm(39)...............2810 Ethernet NMM
	  m2810hm(40)................2810 Ethernet Host
	  m3301ohms75(41)............3301-75 Ethernet Thin Net Host (75-ohm)
	  m3301ohms93(42)............3301-93 Ethernet Thin Net Host (93-ohm)
	  m2912(43)..................2912 FDDI STP Concentrator
	  m2914(44)..................2914 FDDI Fiber Concentrator
	  m3502B(45).................3502B Token Ring Passive STP/UTP Host
	  m3505B(46).................3505B Token Ring Active STP/UTP Host
	  m3307HD(47)................3307HD Ethernet 100 Pin UTP Host
	  m2702Fhm(48)...............2702F Token Ring Passive Host
	  m2712Fhm(49)...............2712F Token Ring Passive Host
	  m2712hm(50)................2712 Token Ring Passive Host
	  m2702hm(51)................2702 Token Ring Passive Host
	  m2813nmm(52)...............2813 Ethernet NMM
	  m2813hm(53)................2813 Ethernet Host
	  m2814hm(54)................2814 Ethernet Host
	  m2803hm(55)................2803 Ethernet Host
	  m3356(56)..................3356 Ethernet Remote Bridge
	  m2814nmm(57)...............2814 Ethernet NMM
	  m2804hm(58)................2804 Ethernet Host
	  m2702Chm(59)...............2702C Token Ring Passive Host
	  m2715Fhm(60)...............2715F Token Ring Active Host
	  m2705Fhm(61)...............2705F Token Ring Active Host
	  m2705Chm(62)...............2705C Token Ring Active Host
	  m3902A(63).................3902A FDDI STP Host
	  m2912A(64).................2912A FDDI STP Concentrator
	  m271xnmm(65)...............271x Token Ring NMM
	  m2715hm(66)................2715 Token Ring Active Host
	  m3910SSD(67)...............3910S-SD FDDI NMM
	  m3313A(68).................3313A Ethernet NMM
	  m3314A(69).................3314A Ethernet NMM
	  m3304A(70).................3304A Ethernet 10BaseF Host
	  m3910SA(71)................3910SA FDDI NMM
	  m2705hm(72)................2705 Token Ring Active Host
	  m3905(73)..................3905 FDDI UTP Host
	  m2915(74)..................2915 FDDI UTP Concentrator
	  m2715Bhm(75)...............2715B Token Ring Active Host
	  m2705Bhm(76)...............2505B Token Ring Active Host
	  m2715BFhm(77)..............2715B-F Token Ring Active Host
	  m2712Bhm(78)...............2712B Token Ring Passive Host
	  m2712BFhm(79)..............2712B-F Token Ring Passive Host
	  m2702BChm(80)..............2702B-C Token Ring Passive Host
	  m3486(82)..................3486 LattisEngine/486
	  m810m(88)..................810M Ethernet Concentrator
	  m3517SA(101)...............3517SA Token Ring NMM
	  m3308B(102)................3308B 10BaseT Host
	  m2813SAnmm(103)............2813SA Ethernet NMM
	  m2814SAnmm(104)............2814SA Ethernet NMM
	  m3313SA(105)...............3313SA Ethernet NMM
	  m3314SA(106)...............3314SA Ethernet NMM
	  m3174(107).................3174 Workstation Controller
	  m3522A(108)................3522A Token Ring Local Bridge
	  m3513SA(109)...............3513SA Token Ring NMM
	  m271xSAnmm(110)............271xSA Token Ring NMM
	  m2300x(114)................2300x Product
	  m2310x(115)................2310x Product
	  m3299C(116)................3299-C Terminal Multiplexor Adapter
	  m3299U(117)................3299-U TTP Terminal Multiplexor Adapter
	  m3299F(119)................3299-F Fiber Optic Terminal Adapter
	  mAlcatelEthConcnmm(250)....Alcatel Ethernet NMM
	  mAlcatelEthConchm(251).....Alcatel Ethernet Host
	  mAlcatelEthExpConchm(252)..Alcatel Ethernet Expansion Host"
	::= { s3CommonBoardEntry 2 }

s3CommonBoardHwVer OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The hardware revision of the board.
		  0=Rev. A, 1=Rev. B, etc."
	::= { s3CommonBoardEntry 3 }

s3CommonBoardStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		ok(1),			-- good status
		fail(2)			-- bad status
		}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This indicates the operational status of the board."
	::= { s3CommonBoardEntry 4 }

s3CommonBoardReset OBJECT-TYPE
	SYNTAX	INTEGER {
		noReset(1),		-- not resetting
		reset(2)		-- resetting
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This indicates the reset state of the board.
		Writing with the value reset (2) will reset
		the board."
	::= { s3CommonBoardEntry 5 }

s3CommonBoardPartStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		enabled(1),		-- board enabled
		partition(2),		-- board partitioned indefinitely
		timedPartition(3)	-- board partitioned for a
					--   time period
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Tells whether the board is partitioned or enabled.
		Writing with the value partition(2) will partition
		the board indefinitely and writing with the value
		enabled(1) will enable the board.

		If a timed partition is desired, then this object
		must be written with timedPartition(3) and in the
		same PDU a partition duration must be supplied in
		s3CommonBoardPartTime. Timed partitions will not
		survive across a reset. In this case the port will
		go to the partition(2) state.

		Boards cannot be partitioned in the 2810 concentrator
		and other workgroup concentrators. These agents will
		implement this object as read-only."
	::= { s3CommonBoardEntry 6 }

s3CommonBoardNmCntlStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		notNmControl(1),	-- board not under NM control
		nmControl(2)		-- board under NM control
		}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Tells whether the board is under network management
		control.  The value nmControl(2) indicates that the
		board or one or more ports are being controlled by
		network management.  This means that the board
		or one or more ports are partitioned via a network
		manager."
	::= { s3CommonBoardEntry 7 }

s3CommonBoardPsStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		ok(1),			-- good status
		fail(2)			-- bad status
		}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This indicates the operational status of the board
		power supply.  A fail(2) indicates that one of the
		power supplies on the board has failed."
	::= { s3CommonBoardEntry 8 }

s3CommonBoardPartTime OBJECT-TYPE
	SYNTAX	TimeTicks
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"When partitioning the board for a specified time,
		s3CommonBoardPartStatus must be set with
		timedPartition(3) and this object must be supplied
		with the duration value. If a PDU sets
		s3CommonBoardPartStatus and not this object, the
		board will not be partitioned.  This value is
		decremented while the board is partitioned
		until the value reaches zero at which time the
		board is enabled."
	::= { s3CommonBoardEntry 9 }


-- Packed Slot Configuration Table


s3SlotConfigOctetString OBJECT-TYPE
	SYNTAX	OCTET STRING (SIZE(12..144))
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Packed octet string for the slot configuration table.
		Format is specified in SynOptics technical documents.
		NOTE: the 291x FDDI workgroup concentrators actually
		return a string with size a multiple of 14."
	::= { s3000Chassis 9 }



-- Redundant Power Supply Group


-- Support of the entire Redundant Power Supply group is mandatory
--   for every SynOptics 4.1 agent in a chassis with redundant
--   backplane.  (These are the agents that return the value
--   redundantCapable(5) for s3ChassisPsType. Note: this does not
--   include the FDDI 4.0 agents.)


s3RedPsPlus5vCurrent OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This gauge is measured in amperes."
	 ::={ s3000RedundantPs 1 }

s3RedPsPlus12vCurrent OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This gauge is measured in amperes."
	::={ s3000RedundantPs 2 }

s3RedPsAmbientTempStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		normalTemperature(2),
		aboveNormalTemp(3)
		}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This status indicates whether the ambient
		temperature is  normal, i.e., below 40 degree C."
	 ::={ s3000RedundantPs 3 }

s3RedPsAmbientTemperature OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This gauge is measured in Celsius."
	::={ s3000RedundantPs 4 }

s3RedPsPrimaryConfig OBJECT-TYPE
	SYNTAX	S3PsType
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This indicates the primary power supply type
		(PS 1).  Note that value redundantCapable(5)
		should not be returned for this object."
	::={ s3000RedundantPs 5 }

s3RedPsSecondaryConfig OBJECT-TYPE
	SYNTAX	S3PsType
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This indicates the secondary power supply type
		(PS 2).  Note that value redundantCapable(5)
		should not be returned for this object."
	 ::={ s3000RedundantPs 6 }

s3RedPsDiodeStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),		-- not applicable
		bothOk(2),		-- both diodes ok
		primaryFail(3),		-- primary diode fail
		secondaryFail(4),	-- secondary diode fail
		bothFail(5)		-- both diode fail
		}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This gives the status of the summing diode on the
		3100R associated with the indicated power supply."
	 ::={ s3000RedundantPs 7 }

s3RedPsPowerAlarm OBJECT-TYPE
	SYNTAX	INTEGER	{
		other(1),		-- not applicable
		bothOk(2),		-- both power supplies ok
		primaryFail(3),		-- primary supply fail
		secondaryFail(4),	-- secondary supply fail
		bothFail(5)		-- both supplies fail
		}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This tells whether the indicated power supply is
		sensing voltage on the backplane."
	 ::={ s3000RedundantPs 8 }



-- Channel Divider Information

s3ChassisBkPlEthChanDiv OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"A value that describes the divisions of the
		segmentable ethernet channel.  For those devices
		that do not implement a backplane with this feature,
		they still need to implement this object and return
		a value (i.e., zero) to indicate that no divisions
		are enabled.

		The value is a sum (i.e., integer bit string).
		This value initially takes the value of zero,
		then for each division that is enabled on the channel,
		2 raised to a power is added to the sum.  The powers
		are according to the following table:

		  Division between    Power
		    Slots 4 and 5     0
		    Slots 6 and 7     1
		    Slots 8 and 9     2

		For example, a channel with no divisions enabled
		(i.e., not segmented) would have a value of 0.
		A channel with divisions between slots 6 and 7,
		and slots 8 and 9 enabled (i.e., having three
		segments) would have a value of 6 (2**1 + 2**2)."
	::= {  s3000Chassis 11 }


s3ChassisEnetChannelAType OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),	   -- unknown or no Ethernet
		aSegmentable(2),   -- Enet chan A is segmentable
		aNotSegmentable(3) -- Enet chan A is not segmentable
		}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The agent will return aSegmentable(2) for the 3000N,
		3000NT, 3000S, 3000SR, and any other backplanes in
		which Ethernet channel A can be divided into multiple
		segments.  The value aNotSegmentable(3) indicates
		that the Ethernet backplane channel A cannot be
		segmented.

		For Token Ring or FDDI workgroup concentrators, or
		other devices in which there is no Ethernet channel,
		the agent will return other(1)."
	::= {  s3000Chassis 12 }



-- SECTION 3: Agent Configuration

-- Agent Software Group


-- Implementation of this group is mandatory for all SynOptics
--   Series 3000 agents


s3AgentType OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),	-- none of the following
		m3313(2),	-- AUI Ethernet NMM w/ RS232 port
				--  (may also be returned by a 2810)
		m3313M(3),	-- AUI Enet NMM w/ RS232 port + modem
		m3314-ST(4),	-- FOIRL Ethernet NMM w/ RS232
		m3314M-ST(5),	-- FOIRL Ethernet NMM w/ RS232 + modem
		m2310(6),	-- Model 2310
		m3512(7),	-- T.R. NMM w/ STP ring in/ring out
		m3514(8),	-- T.R. NMM w/ FOIRL ring in/ring out
		m332x(9),	-- Low Speed Local Bridge
		m3356(10),	-- Ethernet Remote Bridge
		m332xS(11),	-- High Speed Local Bridge
		m3910S(12),	-- FDDI Super NMM
		m3395(13),	-- terminal server
		m3394(14),	-- Ethernet-localtalk router
		m3513(15),	-- TR NMM with STP repeater
		m331xS(16),	-- Ethernet NMM+
		m291x(17),	-- FDDI 291x workgroup concentrator
		m271x(18),	-- T.R. 271x workgroup concentrator
		m281x(19),	-- Ethernet 281x workgroup concentrator
		m331xA(20),	-- Ethernet 331xA NMM
		m3522(21),	-- Token Ring Local Bridge Module
		m2722(22),	-- Standalone Token Ring Local Bridge
		m281xSA(23),	-- Ethernet 281xSA workgroup concentator
		m810M(24),	-- Ethernet LattisHub 810M NMM
		m351xSA(25),	-- T.R. 351xSA NMM
		m331xSA(26),	-- Ethernet 331xSA NMM
		m271xSA(27),	-- T.R. 271xSA workgroup concentrator
		m2486(28),	-- LattisEngine 2486
		m2300x(29),	-- 2300x product
		m2310x(30)	-- 2310x product
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The 3000 series agent's Module type."
	::= {s3AgentSw  1 }

s3AgentFwVer OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The agent's module firmware version
		0=Rev A,1=Rev B,etc."
	::= { s3AgentSw 2 }

s3AgentSwMajorVer OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The agent major software version number.
		(version is specified as major.minor.maint or 3.0.1).
		Object is in decimal."
	::= { s3AgentSw 3 }

s3AgentSwMinorVer OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The agent minor software version number
		(version is specified as major.minor.maint or 3.0.1).
		Object is in decimal."
	::= { s3AgentSw 4 }

-- NOTE: the maintenance object, s3AgentSwMaintVer, is defined below.

s3AgentBootProtocol OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),	-- boot protocol not listed here
		bootp-tftp(2),
		tftp-only(3),
		ieee802-1e(4),
		proprietary(5),	-- supported proprietary boot protocol
		dll-download(6)	-- direct async binary download (Retix)
		}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Boot protocol used to load the module with its software.
		On Agents with the Local Load option the value return by
		this object is valid only if the MIB object
		s3LocImageLoadMode is remoteBoot(2) or localAsBackup(4)."
	::= {s3AgentSw 5 }

s3AgentBootFile OBJECT-TYPE
	SYNTAX	DisplayString (SIZE(0..64))
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The name of the boot file that is sent to the file
		server during boot time.  The actual boot protocol
		used to retrieve the file is determined by
		s3AgentBootProtocol.

		This parameter will not take effect until written
		into EEPROM (s3AgentWriteEeprom) and a reset
		(s3AgentReset) is issued. This parameter is used
		only if the s3AgentBootMode is set to use EEPROM."
	::= { s3AgentSw 6 }

s3AgentAuthTrap OBJECT-TYPE
	SYNTAX	INTEGER {
		disable(1),		-- disable authentication traps
		enable(2)		-- enable authentication traps
		}
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		"Enable or disable the use of authentication error
		trap generation.

		This parameter will take effect only after a restart
		(s3AgentRestart) is issued.  This parameter will not
		survive a reset (s3AgentReset) unless the specific
		NMM configuration file is updated to reflect the
		change.

		This object is now deprecated.  Managers should use
		the snmpEnableAuthenTraps object in MIB-II instead.
		This object is aliased to snmpEnableAuthenTraps.
		Changing either variable will change the other
		accordingly."
	::= { s3AgentSw 7 }

s3AgentLocation OBJECT-TYPE
	SYNTAX	DisplayString (SIZE(0..64))
	ACCESS	read-write
	STATUS	deprecated
	DESCRIPTION
		"This is a informational string that could be used
		to show the physical location (i.e. area) of the
		NMM or concentrator.

		This parameter will take effect only after a restart
		(s3AgentRestart) is issued.  This parameter will not
		survive a reset (s3AgentReset) unless the specific
		NMM configuration file is updated to reflect the
		change.

		This object is now deprecated.  Managers should use
		the sysLocation object in MIB-II instead."
	::= { s3AgentSw 8 }

s3AgentMibLevel OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Used to determine current MIB release supported
		by agent.  The encoding of this object is of the
		following form: xyy, where x is the major version
		number and yy is the minor version number.  Thus,
		version 3.0 would be represented as 300,  version
		3.01 would be 301 and 3.1 would be 310.  Object is
		in decimal.  Values that correspond to each agent
		type and version are specified in the other
		SynOptics documentation."
	::= { s3AgentSw 9 }

s3AgentFeatureLevel OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	deprecated
	DESCRIPTION
		"Used to determine feature level of the agent.
		The encoding of this object is of the following
		form: xyy, where x is the major version
		number and yy is the minor version number.  Thus,
		feature level version 1.0 would be represented as
		100, version 1.01 would be 101 and 1.1 would be 110.
		Object is in decimal. The current values are the
		following:
		  100 - 331x V3.x
		        - Basic Agent
		  100 - 351x
		        - Basic Agent
		  100 - 271x V3.x
		        - Basic Agent
		  101 - 281x V5.0
		        - Basic Agent
		        - Dual Stack
		  102 - 331x V4.2.0
		        - Basic Agent
		        - Non Segmentable Chassis
		        - Ethernet Common board table
		        - Ethernet Command port table
		        - redundant power supply group
		  103 - 331xA V4.2.0
		        - Basic Agent
		        - Segmentable chassis
		        - Ethernet Common board table
		        - Ethernet Common port table
		        - redundant power supply group
		        - Ethernet plus statistics,
		  104 - 331xA V4.2.0
		        - Basic Agent
		        - Non-Segmentable chassis
		        - Ethernet Common board table
		        - Ethernet Common port table
		        - redundant power supply group
		        - Ethernet plus statistics,
		  109 - 331x V4.2.0
		        - Basic Agent
		        - Segmentable Chassis
		        - Ethernet Common board table
		        - Ethernet Common port table
		        - redundant power supply group
		  112 - 281x V5.1.0
		        - Basic Agent
		        - Dual Stack
		        - Network to MAC address mapping
		  113 - 331x V5.1.0
		        - Basic Agent
		        - Segmentable chassis
		        - Full Truffle Support
		        - Dual Stack
		        - Network to MAC address mapping
		  114 - 331x V5.1.0
		        - Basic Agent
		        - Non-Segmentable chassis
		        - Full Truffle Support
		        - Dual Stack
		        - Network to MAC address mapping
		  115 - 331xA V5.1.0
		        - Basic Agent
		        - Segmentable chassis
		        - Dual Stack
		        - Full Truffle Support
		        - Network to MAC address mapping
		  116 - 331xA V5.1.0
		        - Basic Agent
		        - Non-Segmentable chassis
		        - Dual Stack
		        - Full Truffle Support
		        - Network to MAC address mapping
		  200 - 331x V4.0 & V4.0.1
		        - Advanced Agent
		  200 - 271x V4.x
		        - Advanced Agent
		  200 - 351x V4.x
		        - Advanced Agent
		  200 - all FDDI Agents
		  201 - 331x V4.1.0, V4.1.1
		        - Advanced Agent
		        - redundant power supply group
		  202 - 331xS V4.1.0, V4.1.1
		        - Advanced Agent
		        - redundant power supply  group
		        - DS/SD traffic tables,
		        - Ethernet plus statistics,
		        - frame type distribution table
		        - frame length distribution table
		  203 - 281x V4.2.0
		        - Advanced Agent
		        - Dual Stack
		  204 - 331x V4.2.0
		        - Advanced Agent
		        - Non-Segmentable chassis
		        - Ethernet Common board table
		        - Ethernet Common port table
		        - redundant power supply group
		  205 - 331xS V4.2.0
		        - Advanced Agent
		        - Segmentable chassis
		        - Ethernet Common board table
		        - Ethernet Common port table
		        - redundant power supply  group
		        - DS/SD traffic tables,
		        - Ethernet plus statistics,
		        - frame type distribution table
		        - frame length distribution table
		  206 - 331xS V4.2.0
		        - Advanced Agent
		        - Non-Segmentable chassis
		        - Ethernet Common board table
		        - Ethernet Common port table
		        - redundant power supply  group
		        - DS/SD traffic tables,
		        - Ethernet plus statistics,
		        - frame type distribution table
		        - frame length distribution table
		  207 - 331xA V4.2.0
		        - Advanced agent
		        - Segmentable chassis
		        - Ethernet Common board table
		        - Ethernet Common port table
		        - redundant power supply  group
		        - Ethernet plus statistics,
		  208 - 331xA V4.2.0
		        - Advanced agent
		        - Non-Segmentable chassis
		        - Ethernet Common board table
		        - Ethernet Common port table
		        - redundant power supply  group
		        - Ethernet plus statistics,
		  209 - 331x V4.2.0
		        - Advanced agent
		        - Segmentable chassis
		        - Ethernet Common board table
		        - Ethernet Command port table
		        - redundant power supply group
		  212 - 331x V5.1.0
		        - Advanced Agent
		        - Dual Stack
		        - Network to MAC address mapping
		        - RMON Ether Stats, History, Alarm, Event Groups
		  213 - 281x V5.1.0
		        - Advanced Agent
		        - Segmentable chassis
		        - Full Truffle Support
		        - Dual Stack
		        - Network to MAC address mapping
		        - RMON Ether Stats, History, Alarm, Event Groups
		  214 - 331x V5.1.0
		        - Advanced Agent
		        - Non-Segmentable chassis
		        - Full Truffle Support
		        - Dual Stack
		        - Network to MAC address mapping
		        - RMON Ether Stats, History, Alarm, Event Groups
		  215 - 331xA V5.1.0
		        - Advanced Agent
		        - Segmentable chassis
		        - RMON Ether Stats, History, Alarm, Event Groups
		        - Dual Stack
		        - Full Truffle Support
		        - Network to MAC address mapping
		  216 - 331xA V5.1.0
		        - Advanced Agent
		        - Non-Segmentable chassis
		        - Full Truffle Support
		        - Dual Stack
		        - Network to MAC address mapping
		        - RMON Ether Stats, History, Alarm, Event Groups
		  217 - 331xS V5.1.0
		        - Advanced Agent
		        - Segmentable chassis
		        - Full Truffle Support
		        - Dual Stack
		        - Network to MAC address mapping
		        - RMON Ether Stats, History, Alarm, Event Groups
		        - Bulk table retrieval for traffic matrix
		  218 - 331xS V5.1.0
		        - Advanced Agent
		        - Non-Segmentable chassis
		        - Full Truffle Support
		        - Dual Stack
		        - Network to MAC address mapping
		        - RMON Ether Stats, History, Alarm, Event Groups
		        - Bulk table retrieval for traffic matrix"
	::= { s3AgentSw 10 }

s3AgentMySlotId OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Slot where this agent currently resides.  If
		hardware is unable to determine then a 0 should
		be returned."
	::= { s3AgentSw 11 }

s3AgentUnAuthIp OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This object contains the IP address of the last
		station that tried to access this agent with an
		invalid community string.  This object is used
		as a VarBind in an Authentication Trap PDU.  A get
		request will return the last value used, and will
		return the null address 0.0.0.0 if no
		authentication traps have been sent."
	::= { s3AgentSw 12 }

s3AgentUnAuthComm OBJECT-TYPE
	SYNTAX	OCTET STRING (SIZE(0..20))
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This object contains the community string of the
		last unauthenticated attempt to access this agent.
		This object is used as a VarBind in an Authentication
		Trap PDU.  A get request will return the last value
		used, and will return the null string (length 0) if
		no authentication traps have been sent."
	::= { s3AgentSw 13 }

s3AgentSwLicenseCode OBJECT-TYPE
	SYNTAX	DisplayString (SIZE(8))
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The software license code assigned to this agent.
		This code is required for initializing the agent.
		The code consists of exactly eight printable
		characters."
	::= { s3AgentSw 14 }

s3AgentPerformance OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This counts the CPU idle time of the agent
		in units of 10 microseconds."
	::= { s3AgentSw 15 }

s3AgentSwMaintVer OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The agent software maintenance version number
		(version is specified as major.minor.maint or 3.0.1).
		Object is in decimal."
	::= { s3AgentSw 16 }

s3AgentConfigLoadMode OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),	 -- configuration source not listed here
		remoteConfig(2), -- use net, not local configuartion data
		localConfig(3),	 -- use local configuration data
		localAsBackup(4) -- try net, if fails use local
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This indicates whether the agent should get
		configuration data from the network, use the local
		configuration data, or try the network first and then
		fall back to local configuration if the network load
		fails.  This object applies only to agents with boot
		prom support for agent configuration load options.

		This parameter will not take effect until written into
		EEPROM (s3AgentWriteEeprom) and a reset (s3AgentReset)
		is issued."
	::= { s3AgentSw 17 }

s3AgentConfigActualSource OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		remoteConfig(2),
		localConfig(3)
		}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This indicates whether the agent loaded configuration
		data from the network or used the local configuration
		data."
	::= { s3AgentSw 18 }

s3AgentMgmtProtoMode OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),	-- unknown or other
		ip(2),		-- IP only, all IPX packets will be dropped
		ipx(3),		-- IPX only, all IP packets will be dropped
		ipAndIpx(4) 	-- both IP and IPX packets will be accepted
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This indicates from which network transports over
		which the agent will accept SNMP requests.  This object
		only applies to agents with IP and IPX dual stack support.

		This parameter will not take effect until written into
		EEPROM (s3AgentWriteEeprom) and a reset (s3AgentReset)
		or a restart (s3AgentRestart) is issued."
	::= { s3AgentSw 19 }

s3AgentActualMgmtProtocol OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		ip(2),
		ipx(3),
		ipAndIpx(4)
		}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This indicates which network transports over which
		the agent will currently accept SNMP requests."
	::= { s3AgentSw 20 }

s3AgentImageFile OBJECT-TYPE
	SYNTAX	DisplayString (SIZE(0..64))
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The name of the agent image file that the NMM loads
		at boot time.

		This parameter will not take effect until written to
		EEPROM (s3AgentWriteEeprom) and a reset (s3AgentReset)
		is issued.  This parameter is used only if s3AgentBootMode
		is set to use eeprom(1), s3AgentConfigLoadMode is set to
		localConfig(3) and s3LocImageLoadMode is not set to
		localBoot(3)."
	::= { s3AgentSw 21 }



-- Agent Network Protocol Group


-- Implementation of this group is mandatory for all SynOptics
--   Series 3000 agents


s3AgentIpAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The Agent's administrative IP address. The
		current operational IP address can be obtained
		by the ipAdEntAddr entry in the ipAddrTable.

		This parameter will take effect only after a
		restart (s3AgentRestart) is issued. This parameter
		will not survive a reset (s3AgentReset) unless it
		is written into EEPROM (s3AgentWriteEeprom). This
		parameter is used only if the s3AgentBootMode is
		set to use EEPROM."
	::= { s3AgentIpProtocol 1 }

s3AgentNetMask OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The Agent's administrative subnet mask. The
		current operational subnet mask can be obtained
		by the ipAdEntNetMask entry in the ipAddrTable.

		This parameter will take effect only after a
		restart (s3AgentRestart) is issued. This parameter
		will not survive a reset (s3AgentReset) unless it
		is written into EEPROM (s3AgentWriteEeprom). This
		parameter is used only if the agentBootMode is set
		to use EEPROM.

		NOTE:  The Model 331x (3313, 3313M, 3314-ST,
		3314M-ST) Ethernet NMM agents do not store this
		parameter in EEPROM, so for these agents the subnet
		mask configuration must be downloaded in the
		configuration file."
	::= { s3AgentIpProtocol 2 }

s3AgentDefaultGateway OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The Agent's administrative default gateway IP
		address. The current operational default gateway's
		IP address can be obtained from the ipRoutingTable.

		This parameter will take effect only after a
		restart (s3AgentRestart) is issued.  This parameter
		will not survive a reset (s3AgentReset) unless it
		is written into EEPROM (s3AgentWriteEeprom).  This
		parameter is used only if the agentBootMode is set
		to use EEPROM."
	::= { s3AgentIpProtocol 3 }

s3AgentBootServerAddr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The IP address to which the requests for boot files
		are sent. The protocol used to retrieve the boot
		files is determined by object s3AgentBootProtocol.

		This parameter will not take effect until until
		written into EEPROM (s3AgentWriteEeprom) and a
		reset (s3AgentReset) is issued. This parameter is
		used only if the s3AgentBootMode is set to use EEPROM."
	::= { s3AgentIpProtocol 4 }

s3AgentSecDefaultGateway OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The agent's administrative secondary default
		gateway IP address. This default gateway's IP
		address will be used when the primary default
		gateway (s3AgentDefaultGateway) is determined
		unreachable.

		This parameter will not survive a reset (s3AgentReset)
		unless it is written into EEPROM (s3AgentWriteEeprom)."
	::= { s3AgentIpProtocol 5 }

s3AgentPingDefaultRtrSwitch OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		on(2),
		off(3)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Controls whether the agent will periodically send
		out the icmp echos (pings) to the default router(s).
		The values are:
		  other(1)...unknown or other
		  on(2)......agent will periodically send out pings
		               to the default router(s).
		  off(3).....agent won't send out the pings to the
		               default router(s)."
	::= { s3AgentIpProtocol 6}

s3AgentPingDefaultRtrTime OBJECT-TYPE
	SYNTAX	TimeTicks
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The time interval that the agent uses to send
		out the pings periodically to the default router(s)
		to check if the router(s) are still reachable."
	::= { s3AgentIpProtocol 7}

s3AgentBootRouter OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The default route IP address used at boot
		time to download the NMM's agent configuration
		and image files from the TFTP server.

		This parameter will not survive a reset
		(s3AgentReset) unless it is written into EEPROM
		(s3AgentWriteEeprom)."
	::= {  s3AgentIpProtocol  8  }



-- Agent Trap Receiver Table


-- Implementation of this group is mandatory for all SynOptics
--   Series 3000 agents


s3AgentTrapReceiverTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF S3AgentTrapReceiverEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"Table containing list of NMS's that are to receive
		traps generated by this NMM."
	::= { s3SnmpAgent 3 }

s3AgentTrapReceiverEntry OBJECT-TYPE
	SYNTAX	S3AgentTrapReceiverEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"A destination address and community string to a
		particular trap server, along with a trap filter
		and entry aging capability."
	INDEX	{ s3AgentTrapRcvrNetAddress }
	::= { s3AgentTrapReceiverTable 1 }

S3AgentTrapReceiverEntry ::= SEQUENCE {
	s3AgentTrapRcvrStatus
		INTEGER,
	s3AgentTrapRcvrNetAddress
		OCTET STRING,
	s3AgentTrapRcvrComm
		OCTET STRING,
	s3AgentTrapRcvrAgeTime
		TimeTicks
	}

s3AgentTrapRcvrStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		other (1),		-- none of the following
		valid (2),		-- a valid address
		invalid (3)		-- an invalid address
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Setting this object to the value invalid(3) has
		the effect of invalidating the corresponding entry
		in the s3AgentTrapReceiverTable.  That is, it
		effectively disassociates the address identified
		with the entry by removing the entry from the table.
		On a read the value of valid(2) should be returned
		if the entry contains a valid record, or invalid(3)
		should be returned if the entry contains an invalid
		record."
	::= { s3AgentTrapReceiverEntry 1 }

s3AgentTrapRcvrNetAddress OBJECT-TYPE
	SYNTAX	OCTET STRING (SIZE(4))
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"IP address for trap server that is to receive
		the trap."
	::= { s3AgentTrapReceiverEntry  2 }

s3AgentTrapRcvrComm OBJECT-TYPE
	SYNTAX	OCTET STRING (SIZE(0..20))
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Community string used for traps sent to this
		trap receiver."
	::= { s3AgentTrapReceiverEntry  3 }

s3AgentTrapRcvrAgeTime OBJECT-TYPE
	SYNTAX	TimeTicks
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This is the time interval used to age entries out
		of the trap receiver table.  The default value if
		not specified will be 0, or infinite, never to be
		aged out."
	::= { s3AgentTrapReceiverEntry  4 }



-- Agent Hardware Group


-- Implementation of this group is mandatory for all
--   SynOptics Series 3000 agents



s3AgentStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		offline(1),		-- the agent is offline
		online(2)		-- the agent is online
		}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This indicates whether the NMM is online(2) and
		operating, or offline(1) (ie: not connected to the
		concentrator backplane)."
	::= { s3AgentHw 1 }

s3AgentMdaHwVer OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The network management module's MDA hardware
		version number  (0=Rev. A, 1=Rev. B, etc.)."
	::= { s3AgentHw 2 }

s3AgentMode OBJECT-TYPE
	SYNTAX	INTEGER {
		primary(1),		-- in primary mode
		secondary(2),		-- in secondary mode
		other(3)		-- the other values do not apply
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This indicates whether the NMM is operating in
		primary(1) or secondary(2) mode."
	::= { s3AgentHw 3 }

s3AgentReset OBJECT-TYPE
	SYNTAX	INTEGER {
		noReset(1),		-- not resetting
		reset(2)		-- reset
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Network management module reset status.  Writing
		a reset(2) to this object will reset the NMM and
		perform a download and restart."
	::= { s3AgentHw 4 }

s3AgentRestart OBJECT-TYPE
	SYNTAX	INTEGER {
		noRestart(1),		-- not restarting
		restart(2)		-- restart
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Network management module restart status.
		Writing a restart(2) to this object will restart
		the NMM.  This initializes all the counters,
		re-reads the EEPROM data structure and starts
		executing from the beginning of the code."
	::= { s3AgentHw 5 }

s3AgentBootMode OBJECT-TYPE
	SYNTAX	INTEGER {
		eeprom(1),
		net(2),
		otherCase(3)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The method for obtaining boot parameter information.
		The possible values are:
		  eeprom(1)......get boot info from eeprom
		  net(2).........get boot info from remote server
		  otherCase(3)...not eeprom or net

		This parameter will not take effect until written
		into EEPROM (s3AgentWriteEeprom) and a reset
		(s3AgentReset) is issued.

		Note: In previous versions of this MIB the name
		      associated with the value '2' was 'other',
		      which implied the same meaning as it does
		      now.  Thus to prevent confusion, the name
		      for value '3' was chosen to be 'otherCase'."
	::= { s3AgentHw 6 }

s3AgentWriteEeprom OBJECT-TYPE
	SYNTAX	INTEGER {
		noWriteEeprom(1),	-- not writing EEPROM
		writeEeprom(2)		-- write EEPROM
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Network management module EEPROM write status.
		Writing a (2) to this object will write the contents
		of current EEPROM data structure in the EEPROM."
	::= { s3AgentHw 7 }

s3AgentBaudRate OBJECT-TYPE
	SYNTAX	Gauge
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Specifies the baud rate in bits per second of
		either the internal modem or the RS-232 port.

		This parameter will take effect only after a
		restart (s3AgentRestart) is issued.  This parameter
		will not survive a reset (s3AgentReset) unless
		the specific NMM configuration file is updated
		to reflect the change."
	::= { s3AgentHw 8 }

s3AgentInitString OBJECT-TYPE
	SYNTAX	DisplayString (SIZE(0..64))
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This is the initialization string used to establish
		the out-of-band connection. (i.e. could contain the
		string ATDT,415-960-1100 for an internal or external
		modem). This is used as a hint for the network manager
		since this string is not used by the agent to initiate
		a connection to a management station.

		This parameter will take effect only after a restart
		(s3AgentRestart) is issued.  This parameter will not
		survive a reset (s3AgentReset) unless the specific
		NMM configuration file is updated to reflect
		the change."
	::= { s3AgentHw 9 }

s3AgentEepromSize OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The size of the EEPROM of the agent in units of bytes."
	::= { s3AgentHw 10 }

s3AgentEpromSize OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The size of the EPROM of the agent in units of bytes."
	::= { s3AgentHw 11 }

s3AgentDramSize OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The size of the DRAM of the agent in units of bytes."
	::= { s3AgentHw 12 }

s3AgentHexDisplay OBJECT-TYPE
	SYNTAX	DisplayString (SIZE(0..4))
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The current 4 ASCII character display of the agent.

		Agents with no hex display hardware should return a
		zero length string."
	::= { s3AgentHw 13 }

s3AgentFlashStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),	-- unknown status
		ok(2),		-- the flash device is valid
		fail(3)		-- the flash device is invalid
		}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This indicates the operational status of the flash
		device of the agent.  A fail(3) indicates that either
		the flash device configuration on board is not valid
		or the flash EEPROMs on the board have failed."
	::= { s3AgentHw 14 }



-- Agent Local Image Group


-- This group is mandatory for agents with image code stored in
--   local EPROM.  Other agents should return NoSuch if asked for
--   any of the objects in this group.


s3LocImageValid OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),		-- unknown status
		localImageValid(2),	-- local image is valid
		localImageInvalid(3)	-- local image is invalid
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This indicates whether the agent has a valid local
		code image on board.  An EPROM checksum failure would
		cause the agent to return localImageInvalid(3)."
	::= { s3AgentLocImage 1 }

s3LocImageMajorVersion OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The major software version number of the
		locally-stored image.  This object applies only to
		agents with valid local image.  Other agents
		should return zero."
	::= { s3AgentLocImage 2 }

s3LocImageMinorVersion OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The minor software version number of the
		locally-stored image.  This object applies only
		to agents with valid local image.  Other agents
		should return zero."
	::= { s3AgentLocImage 3 }

s3LocImageLoadMode OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),		-- unknown status
		remoteBoot(2),		-- use net, not local image,
					--   and update local image
					--   if net image is different
		localBoot(3),		-- boot from local image, not net
		localAsBackup(4),	-- try net, if fails use local,
					--   but if net is OK, then update
					--   local image when net image
					--   is different
		remoteNoUpdate(5),	-- use net, not local image,
					--   and don't update local image
		remoteNewUpdate(6),	-- use net, not local image,
					--   update local image if new
					--   image is newer
		localAutoUpdate(7)	-- check net image, if newer,
					--   then update local image,
					--   and use this image
	}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This indicates whether the agent should get code
		from the network, use a local image, or try the
		network first and then fall back to local image if
		the network boot fails. The localBoot(3) and
		localAsBackup(4) values apply only to agents with
		local load option. Note: on agents that have
		no local storage, either remoteBoot(2), or
		remoteNoUpdate(5) may be specified, however
		the value remoteBoot(2) is prefered due to
		backwards compatibility "
	::= { s3AgentLocImage 4 }

s3LocImageActualSource OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),		-- unknown status
		remoteImage(2),		-- downloaded code from network
		localImage(3)		-- loaded code from local EPROM
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This indicates whether the agent loaded code from
		the network or used a local image.  When the the
		ImageLoadMode is localAsBackup, this variable
		indicates whether the network load was successful."
	::= { s3AgentLocImage 5 }

s3LocImageMaintVersion OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The maintenance software version number of the
		locally-stored image.  This object applies only
		to agents with valid local image.  Other agents
		should return zero."
	::= { s3AgentLocImage 6 }


END
-- @(#)WSCCS a/mibs-sdlc.mib 1.1 8/30/95
Wellfleet-SDLC-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:47:24 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfSdlcGroup
        FROM Wellfleet-COMMON-MIB;


    wfSdlc		OBJECT IDENTIFIER ::= { wfSdlcGroup 1 }

    wfSdlcDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete SDLC."
        DEFVAL	{ created }
        ::= { wfSdlc 1 }

    wfSdlcDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable SDLC."
        DEFVAL	{ enabled }
        ::= { wfSdlc 2 }

    wfSdlcState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of SDLC."
        DEFVAL	{ down }
        ::= { wfSdlc 3 }

    wfSdlcPortAdminTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSdlcPortAdminEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "-- THE SDLC PORT ADMINISTRATIVE TABLE
                'This table contains objects that can be changed to manage an SDLC port.
                Changing one of these parameters  take effect in the operating port
                immediately or may wait until the interface is restarted depending on
                the object. Most of the objects in this read-write table have
                corresponding read-only objects in the wfSdlcPortOperTable that return
                the current opeating value. The operating values may be different from
                these configured values if a configured parameter was changed after the
                interface was started."
        ::= { wfSdlcGroup 2 }

    wfSdlcPortAdminEntry OBJECT-TYPE
        SYNTAX	WfSdlcPortAdminEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A list of configured values for an SDLC port"
        INDEX	{ wfSdlcPortAdminIndex }
        ::= { wfSdlcPortAdminTable 1 }

    WfSdlcPortAdminEntry ::= SEQUENCE {
    	    wfSdlcPortAdminDelete
    		INTEGER,
    	    wfSdlcPortAdminDisable
    		INTEGER,
    	    wfSdlcPortAdminIndex
    		INTEGER,
    	    wfSdlcPortAdminAddress4
    		DisplayString,
    	    wfSdlcPortAdminType
    		INTEGER,
    	    wfSdlcPortAdminTopology
    		INTEGER,
    	    wfSdlcPortAdminACTIVTO
    		INTEGER,
    	    wfSdlcPortAdminPAUSE
    		INTEGER,
    	    wfSdlcPortAdminCredit
    		INTEGER,
    	    wfSdlcPortAdminIdleTimer
    		INTEGER,
    	    wfSdlcPortAdminIdleRetry
    		INTEGER,
    	    wfSdlcPortAdminNPRcvTimer
    		INTEGER,
    	    wfSdlcPortAdminNPRcvRetry
    		INTEGER,
    	    wfSdlcPortAdminWriteTimer
    		INTEGER,
    	    wfSdlcPortAdminWriteRetry
    		INTEGER,
    	    wfSdlcPortAdminLinkConnTimer
    		INTEGER,
    	    wfSdlcPortAdminLinkConnRetry
    		INTEGER,
    	    wfSdlcPortAdminPriFdplx
    		INTEGER,
    	    wfSdlcPortAdminSecFdplx
    		INTEGER,
    	    wfSdlcPortAdminUseRej
    		INTEGER,
    	    wfSdlcPortAdminPortType
    		INTEGER,
    	    wfSdlcPortAdminMaxXidSize
    		INTEGER,
    	    wfSdlcPortAdminMaxRetryCount
    		INTEGER,
    	    wfSdlcPortAdminMaxFrameSize
    		INTEGER,
    	    wfSdlcPortAdminDlcName8
    		DisplayString,
    	    wfSdlcPortAdminCpType
    		INTEGER,
    	    wfSdlcPortAdminLsRole
    		INTEGER,
    	    wfSdlcPortAdminPortNumber
    		INTEGER,
    	    wfSdlcPortAdminLsAddress
    		INTEGER,
    	    wfSdlcPortAdminTotLsActLim
    		INTEGER,
    	    wfSdlcPortAdminInLsActLim
    		INTEGER,
    	    wfSdlcPortAdminOutLsActLim
    		INTEGER,
    	    wfSdlcPortAdminNegLsSupp
    		INTEGER,
    	    wfSdlcPortAdminRcvPoolSize
    		INTEGER,
    	    wfSdlcPortAdminStatsColl
    		INTEGER,
    	    wfSdlcPortAdminDebugFlg
    		INTEGER
        }

    wfSdlcPortAdminDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete Port"
        DEFVAL	{ created }
        ::= { wfSdlcPortAdminEntry 1 }

    wfSdlcPortAdminDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable Port"
        DEFVAL	{ enabled }
        ::= { wfSdlcPortAdminEntry 2 }

    wfSdlcPortAdminIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ifIndex value for the SDLC port.This is equivalent to the circuit
                number for this interface."
        ::= { wfSdlcPortAdminEntry 3 }

    wfSdlcPortAdminAddress4 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A string of 4 bytes that defines the physical port to which this
                interface is assigned. Its value shall be unique within the administered
                system. It must contain only ASCII printable characters.
                A write operation shall not take effect until the port is cycled
                inactive."
        ::= { wfSdlcPortAdminEntry 4 }

    wfSdlcPortAdminType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    leased(1),
    		    switched(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter defines whether the SDLC port is to connect to a
                leased or switched line. A write operation to this administrative
                value shall not take effect until the SDLC port has been cycled
                inactive."
        DEFVAL	{ leased }
        ::= { wfSdlcPortAdminEntry 5 }

    wfSdlcPortAdminTopology OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ptop(1),
    		    multipoint(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter defines whether the SDLC port is to operate in a
                point-to-point or multidropped topology. A write operation to this
                administrative value shall not take effect until the SDLC port has
                been cycled inactive."
        DEFVAL	{ ptop }
        ::= { wfSdlcPortAdminEntry 6 }

    wfSdlcPortAdminACTIVTO OBJECT-TYPE
        SYNTAX	INTEGER(0..120)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter defines the period of time, in seconds,(0....120)
                the port will allow a switched line to remain inactive ( no I-Frames)
                before disconnecting. A value of zero indicates no timeout.
                A write operation to this administered value will not take effect until
                the port is cycled inactive."
        DEFVAL	{ 15 }
        ::= { wfSdlcPortAdminEntry 7 }

    wfSdlcPortAdminPAUSE OBJECT-TYPE
        SYNTAX	INTEGER(1..600)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object defines the minimum elapsed time, (1.......600)
                in tenths of seconds, between any two traversals of the poll list
                for a primary SDLC port. This object has meaning for primary SDLC
                ports only. A write operation to this administered value will not
                take effect until the port is cycled inactive."
        DEFVAL	{ 20 }
        ::= { wfSdlcPortAdminEntry 8 }

    wfSdlcPortAdminCredit OBJECT-TYPE
        SYNTAX	INTEGER(1..50)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This field is used to regulate the flow of data from the DLC
                Interface to the DLC client."
        DEFVAL	{ 7 }
        ::= { wfSdlcPortAdminEntry 9 }

    wfSdlcPortAdminIdleTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This timer is used as a 'watch-dog' for a completely inactive line. The
                timer is specified in milliseconds."
        DEFVAL	{ 6000 }
        ::= { wfSdlcPortAdminEntry 10 }

    wfSdlcPortAdminIdleRetry OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of times to rerun the idle timer before failure."
        DEFVAL	{ 20 }
        ::= { wfSdlcPortAdminEntry 11 }

    wfSdlcPortAdminNPRcvTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Non-Productive receive timeout corresponds to the time allowed for
                receipt of a valid frame from the secondary. The timer is specified in
                milliseconds."
        DEFVAL	{ 2000 }
        ::= { wfSdlcPortAdminEntry 12 }

    wfSdlcPortAdminNPRcvRetry OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Non-Productive receive retry limit is used in conjunction with the
                timeout value to provide the overall time before an outage message is issued."
        DEFVAL	{ 15 }
        ::= { wfSdlcPortAdminEntry 13 }

    wfSdlcPortAdminWriteTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum amount of time allowed to transmit a complete frame.
                The timer is specified in milliseconds."
        DEFVAL	{ 3000 }
        ::= { wfSdlcPortAdminEntry 14 }

    wfSdlcPortAdminWriteRetry OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The write timer retry limit is used in conjunction with the timeout value
                to provide the overall time before an outage message is issued."
        DEFVAL	{ 10 }
        ::= { wfSdlcPortAdminEntry 15 }

    wfSdlcPortAdminLinkConnTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Link connection timeout together with the retry limit corresponds to
                the time interval spent waiting. The timer is specified
                in milliseconds."
        DEFVAL	{ 3000 }
        ::= { wfSdlcPortAdminEntry 16 }

    wfSdlcPortAdminLinkConnRetry OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Link connection retry limit specifies the number of times the link has
                been tested for a connection before it fails the pending activate port request.'"
        DEFVAL	{ 10 }
        ::= { wfSdlcPortAdminEntry 17 }

    wfSdlcPortAdminPriFdplx OBJECT-TYPE
        SYNTAX	INTEGER {
    		    false(1),
    		    true(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Primary SDLC station is full-duplex or not"
        DEFVAL	{ false }
        ::= { wfSdlcPortAdminEntry 18 }

    wfSdlcPortAdminSecFdplx OBJECT-TYPE
        SYNTAX	INTEGER {
    		    false(1),
    		    true(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Secondary SDLC station is full-duplex or not"
        DEFVAL	{ false }
        ::= { wfSdlcPortAdminEntry 19 }

    wfSdlcPortAdminUseRej OBJECT-TYPE
        SYNTAX	INTEGER {
    		    false(1),
    		    true(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Whether REJ are in use for out of sequence I-frames"
        DEFVAL	{ true }
        ::= { wfSdlcPortAdminEntry 20 }

    wfSdlcPortAdminPortType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    leased(1),
    		    dialout(2),
    		    autoanswer(3),
    		    autoanswerdialout(4),
    		    mandialout(5),
    		    mananswer(6),
    		    mananswerdialout(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Type of port
                1 - Leased Line
                2 - Switched Line with dial out capabilities
                3 - Switched Line with auto answer capabilities
                4 - Switched Line with auto answer and dial out capabilities
                5 - Switched Line with manual dial out capabilities
                6 - Switched Line with manual answer capabilities
                7 - Switched Line with manual answer and dial out capabilities "
        DEFVAL	{ leased }
        ::= { wfSdlcPortAdminEntry 21 }

    wfSdlcPortAdminMaxXidSize OBJECT-TYPE
        SYNTAX	INTEGER(0..256)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum XID size"
        DEFVAL	{ 256 }
        ::= { wfSdlcPortAdminEntry 22 }

    wfSdlcPortAdminMaxRetryCount OBJECT-TYPE
        SYNTAX	INTEGER(1..7)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of times that a frame can be retransmitted."
        DEFVAL	{ 5 }
        ::= { wfSdlcPortAdminEntry 23 }

    wfSdlcPortAdminMaxFrameSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    pdu0265(265),
    		    pdu0521(521),
    		    pdu1033(1033),
    		    pdu2057(2057)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum frame size supported by this DLC."
        DEFVAL	{ pdu2057 }
        ::= { wfSdlcPortAdminEntry 24 }

    wfSdlcPortAdminDlcName8 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A string of 8 bytes that names this DLC. Its value shall
                be unique within the administered system. It must contain only
                ASCII printable characters. A write operation shall not take effect
                until the port is cycled inactive."
        ::= { wfSdlcPortAdminEntry 25 }

    wfSdlcPortAdminCpType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    learn(1),
    		    len(2),
    		    network(3),
    		    end(4),
    		    vrn(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "type of CP
                1 - LEARN NODE
                2 - LEN NODE
                3 - NETWORK NODE
                2 - END NODE
                5 - VRN NODE "
        DEFVAL	{ network }
        ::= { wfSdlcPortAdminEntry 26 }

    wfSdlcPortAdminLsRole OBJECT-TYPE
        SYNTAX	INTEGER {
    		    neg(1),
    		    pri(2),
    		    sec(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Link Station Role
                1 - Negotiable
                2 - Primary
                3 - Secondary "
        DEFVAL	{ pri }
        ::= { wfSdlcPortAdminEntry 27 }

    wfSdlcPortAdminPortNumber OBJECT-TYPE
        SYNTAX	INTEGER(1..2048)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Port Number, unique within this system."
        DEFVAL	{ 1 }
        ::= { wfSdlcPortAdminEntry 28 }

    wfSdlcPortAdminLsAddress OBJECT-TYPE
        SYNTAX	INTEGER(1..254)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Link Station Address. This object has meaning if this
                link station is a secondary link station."
        DEFVAL	{ 2 }
        ::= { wfSdlcPortAdminEntry 29 }

    wfSdlcPortAdminTotLsActLim OBJECT-TYPE
        SYNTAX	INTEGER(1..254)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Total link station activation limit."
        DEFVAL	{ 16 }
        ::= { wfSdlcPortAdminEntry 30 }

    wfSdlcPortAdminInLsActLim OBJECT-TYPE
        SYNTAX	INTEGER(1..254)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Inbound link station activation limit."
        DEFVAL	{ 8 }
        ::= { wfSdlcPortAdminEntry 31 }

    wfSdlcPortAdminOutLsActLim OBJECT-TYPE
        SYNTAX	INTEGER(1..254)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Outbound link station activation limit."
        DEFVAL	{ 8 }
        ::= { wfSdlcPortAdminEntry 32 }

    wfSdlcPortAdminNegLsSupp OBJECT-TYPE
        SYNTAX	INTEGER {
    		    false(1),
    		    true(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Whether the DLC supports Negoatible connections"
        DEFVAL	{ false }
        ::= { wfSdlcPortAdminEntry 33 }

    wfSdlcPortAdminRcvPoolSize OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive Buffer pool size."
        DEFVAL	{ 7 }
        ::= { wfSdlcPortAdminEntry 34 }

    wfSdlcPortAdminStatsColl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    false(1),
    		    true(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Whether Stats collection is turned on for this port."
        DEFVAL	{ true }
        ::= { wfSdlcPortAdminEntry 35 }

    wfSdlcPortAdminDebugFlg OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Debug Flag, Enables/Disables debug log messages."
        DEFVAL	{ disabled }
        ::= { wfSdlcPortAdminEntry 36 }

    wfSdlcPortOperTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSdlcPortOperEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains current SDLC port parameters. Many of
                these objects have corresponding objects inthe wfSdlcPortAdmnTable."
        ::= { wfSdlcGroup 3 }

    wfSdlcPortOperEntry OBJECT-TYPE
        SYNTAX	WfSdlcPortOperEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Currently set parameters for a specific SDLC port"
        INDEX	{ wfSdlcPortOperIndex }
        ::= { wfSdlcPortOperTable 1 }

    WfSdlcPortOperEntry ::= SEQUENCE {
    	    wfSdlcPortOperIndex
    		INTEGER,
    	    wfSdlcPortOperAddress4
    		DisplayString,
    	    wfSdlcPortOperRole
    		INTEGER,
    	    wfSdlcPortOperType
    		INTEGER,
    	    wfSdlcPortOperTopology
    		INTEGER,
    	    wfSdlcPortOperACTIVTO
    		INTEGER,
    	    wfSdlcPortOperPAUSE
    		INTEGER,
    	    wfSdlcPortOperSlowPollMethod
    		INTEGER,
    	    wfSdlcPortOperSlowPollTimer
    		TimeTicks,
    	    wfSdlcPortOperAbmSuppInd
    		INTEGER,
    	    wfSdlcPortOperSimRimSupp
    		INTEGER,
    	    wfSdlcPortOperSecInitNonactSupp
    		INTEGER
        }

    wfSdlcPortOperIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ifIndex value for the SDLC port. This value reflects the
                circuit number for this interface."
        ::= { wfSdlcPortOperEntry 1 }

    wfSdlcPortOperAddress4 OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "An octet string that describes the physical port to which
                this interface is currently attached."
        ::= { wfSdlcPortOperEntry 2 }

    wfSdlcPortOperRole OBJECT-TYPE
        SYNTAX	INTEGER {
    		    sec(1),
    		    pri(2),
    		    neg(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Link Station Role
                1 - Secondary
                2 - Primary
                4 - Negotiable"
        DEFVAL	{ pri }
        ::= { wfSdlcPortOperEntry 3 }

    wfSdlcPortOperType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    leased(1),
    		    switched(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This parameter defines whether the SDLC port is currently
                operating as though connected to a leased or switched line."
        DEFVAL	{ leased }
        ::= { wfSdlcPortOperEntry 4 }

    wfSdlcPortOperTopology OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ptop(1),
    		    multipoint(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This parameter defines whether the SDLC port is currently
                operating in a point-to-point or multi dropped topology."
        DEFVAL	{ multipoint }
        ::= { wfSdlcPortOperEntry 5 }

    wfSdlcPortOperACTIVTO OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This parameter describes the period of time, in seconds,
                the port will allow a switched line to remain inactive
                ( no I-Frames) before disconnecting. A value of zero indicates
                no timeout."
        ::= { wfSdlcPortOperEntry 6 }

    wfSdlcPortOperPAUSE OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object describes the current minimum elapsed time, in
                tenths of seconds, between any two traversals of the poll list
                for a primary SDLC port. This object has meaning for primary
                SDLC ports only."
        ::= { wfSdlcPortOperEntry 7 }

    wfSdlcPortOperSlowPollMethod OBJECT-TYPE
        SYNTAX	INTEGER {
    		    servlim(1),
    		    pause(2),
    		    other(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object defines the exact method that is in effect for
                periodically polling failed secondary link station addresses."
        DEFVAL	{ pause }
        ::= { wfSdlcPortOperEntry 8 }

    wfSdlcPortOperSlowPollTimer OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object describes the elapsed time, in 1/100ths of seconds,
                between polls for failed secondary link station addresses."
        ::= { wfSdlcPortOperEntry 9 }

    wfSdlcPortOperAbmSuppInd OBJECT-TYPE
        SYNTAX	INTEGER {
    		    supported(1),
    		    notsupported(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Specifies whether Asynchronous Balanced Mode is supported."
        DEFVAL	{ notsupported }
        ::= { wfSdlcPortOperEntry 10 }

    wfSdlcPortOperSimRimSupp OBJECT-TYPE
        SYNTAX	INTEGER {
    		    supported(1),
    		    notsupported(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Specifies whether SDLC RIM or SIM initialization options
                are supported."
        DEFVAL	{ supported }
        ::= { wfSdlcPortOperEntry 11 }

    wfSdlcPortOperSecInitNonactSupp OBJECT-TYPE
        SYNTAX	INTEGER {
    		    supported(1),
    		    notsupported(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Specifies whether secondary-initiated nonactivation XID
                support is provided."
        DEFVAL	{ notsupported }
        ::= { wfSdlcPortOperEntry 12 }

    wfSdlcPortStatsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSdlcPortStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "-- This table shall keep only physical statistics about a port.
                'Each entry in this table contains statistics for a specific
                SDLC port."
        ::= { wfSdlcGroup 4 }

    wfSdlcPortStatsEntry OBJECT-TYPE
        SYNTAX	WfSdlcPortStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A list of statistics for an SDLC port"
        INDEX	{ wfSdlcPortStatsIndex }
        ::= { wfSdlcPortStatsTable 1 }

    WfSdlcPortStatsEntry ::= SEQUENCE {
    	    wfSdlcPortStatsIndex
    		INTEGER,
    	    wfSdlcPortStatsDwarfFrames
    		INTEGER
        }

    wfSdlcPortStatsIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ifIndex value for the SDLC port."
        ::= { wfSdlcPortStatsEntry 1 }

    wfSdlcPortStatsDwarfFrames OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total number of frames received by this
                port which were delivered intact by the physical layer but were too
                short to be legal."
        ::= { wfSdlcPortStatsEntry 2 }

    wfSdlcLSAdminTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSdlcLSAdminEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The following classes of information is modelled for each SDLC
                link station:
                --
                -- 1. ADMINISTRATIVE ( read/write)
                -- 2. OPERATIONAL ( read-only)
                -- 3. STATISTICS ( read-only)

                --
                -- THE SDLC LINK STATION ADMINISTRATIVE TABLE

                'This table contains objects that can be changed to manage an
                SDLC link station. These parameters are per Link Station. Changing
                one of these parameters may take effect in the operating link
                immediately or may wait until the link is restarted depending on the
                object. Most of the objects in this read-write table have
                corresponding read-only objects in the wfSdlcLSOperTable that return
                the current operating value. The operating values may be different
                from these configured values if changed by XID negotiation or if a
                configured parameter was changed after the link was started."
        ::= { wfSdlcGroup 5 }

    wfSdlcLSAdminEntry OBJECT-TYPE
        SYNTAX	WfSdlcLSAdminEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A list of configured values for an SDLC link"
        INDEX	{ wfSdlcLSAdminIfIndex,
    		  wfSdlcLSAdminAddress }
        ::= { wfSdlcLSAdminTable 1 }

    WfSdlcLSAdminEntry ::= SEQUENCE {
    	    wfSdlcLSAdminDelete
    		INTEGER,
    	    wfSdlcLSAdminDisable
    		INTEGER,
    	    wfSdlcLSAdminIfIndex
    		INTEGER,
    	    wfSdlcLSAdminAddress
    		INTEGER,
    	    wfSdlcLSAdminGroupAddress
    		INTEGER,
    	    wfSdlcLSAdminRole
    		INTEGER,
    	    wfSdlcLSAdminMAXDATA
    		INTEGER,
    	    wfSdlcLSAdminREPLYTO
    		INTEGER,
    	    wfSdlcLSAdminMAXIN
    		INTEGER,
    	    wfSdlcLSAdminMAXOUT
    		INTEGER,
    	    wfSdlcLSAdminMODULO
    		INTEGER,
    	    wfSdlcLSAdminRETRIESm
    		INTEGER,
    	    wfSdlcLSAdminRETRIESt
    		INTEGER,
    	    wfSdlcLSAdminRETRIESn
    		INTEGER,
    	    wfSdlcLSAdminRNRLIMIT
    		INTEGER,
    	    wfSdlcLSAdminContTimer
    		INTEGER,
    	    wfSdlcLSAdminContTimerRetry
    		INTEGER,
    	    wfSdlcLSAdminContTimer2
    		INTEGER,
    	    wfSdlcLSAdminContTimer2Retry
    		INTEGER,
    	    wfSdlcLSAdminDiscTimer
    		INTEGER,
    	    wfSdlcLSAdminDiscTimerRetry
    		INTEGER,
    	    wfSdlcLSAdminNvePollTimer
    		INTEGER,
    	    wfSdlcLSAdminNvePollTimerRetry
    		INTEGER,
    	    wfSdlcLSAdminNvePollTimer2
    		INTEGER,
    	    wfSdlcLSAdminNvePollTimer2Retry
    		INTEGER,
    	    wfSdlcLSAdminNoRespTimerRetry
    		INTEGER,
    	    wfSdlcLSAdminRemBusyTimerRetry
    		INTEGER,
    	    wfSdlcLSAdminRRTimer
    		INTEGER,
    	    wfSdlcLSAdminGpAddName
    		DisplayString,
    	    wfSdlcLSAdminPollFrame
    		INTEGER,
    	    wfSdlcLSAdminPollOnIframe
    		INTEGER,
    	    wfSdlcLSAdminLinkStationName
    		DisplayString,
    	    wfSdlcLSAdminAdjNodeType
    		INTEGER,
    	    wfSdlcLSAdminSimRim
    		INTEGER
        }

    wfSdlcLSAdminDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete Link Station"
        DEFVAL	{ created }
        ::= { wfSdlcLSAdminEntry 1 }

    wfSdlcLSAdminDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the desired state of the SDLC station."
        DEFVAL	{ enabled }
        ::= { wfSdlcLSAdminEntry 2 }

    wfSdlcLSAdminIfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ifIndex value for the SDLC port which owns this link station.
                This is equivalent to the circuit number for this interface."
        ::= { wfSdlcLSAdminEntry 3 }

    wfSdlcLSAdminAddress OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This value is the poll address of the secondary link station for
                this SDLC link. It uniquely identifies the SDLC link station within a
                single SDLC port."
        ::= { wfSdlcLSAdminEntry 4 }

    wfSdlcLSAdminGroupAddress OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value is the group poll address of the secondary link station for
                this SDLC link. If this link station is not part of a group, this address
                will be NULL."
        ::= { wfSdlcLSAdminEntry 5 }

    wfSdlcLSAdminRole OBJECT-TYPE
        SYNTAX	INTEGER {
    		    negot(1),
    		    primary(2),
    		    sec(3),
    		    msec(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object describes the role that the link station shall assume
                the next time a connection is established."
        DEFVAL	{ primary }
        ::= { wfSdlcLSAdminEntry 6 }

    wfSdlcLSAdminMAXDATA OBJECT-TYPE
        SYNTAX	INTEGER {
    		    pdu0265(265),
    		    pdu0521(521),
    		    pdu1033(1033),
    		    pdu2057(2057)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the maximum PDU size allowed for the logical
                link. This value includes the Transmission Header (TH) and Request
                Header (RH). A write operation to this administrative value will not
                change the operational value, wfSdlcLSOperMAXDATA, until the link
                station hasbeen cycled inactive."
        DEFVAL	{ pdu2057 }
        ::= { wfSdlcLSAdminEntry 7 }

    wfSdlcLSAdminREPLYTO OBJECT-TYPE
        SYNTAX	INTEGER(1..600)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the reply timeout, in tenths of seconds,
                (1....600) for an SDLC link station. If the link station does not
                receive a repsonse to a poll or message before the specified time
                expires then the appropriate error recovery shall be initiated. A
                write operation to this administered value will not change the
                operational value, wfSdlcLSOperREPLYTO, until the link station is
                cycled inactive. This object has no meaning for secondary SDLC link
                stations."
        DEFVAL	{ 30 }
        ::= { wfSdlcLSAdminEntry 8 }

    wfSdlcLSAdminMAXIN OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the maximum number, (1.....127) of
                unacknowledged frames which an SDLC link station may receive. This
                will range from one to modulus minus one. The modulus is controlled
                by the object: wfSdlcLSAdminModulus. A write operation to this
                administered value will not change the operational value,
                wfSdlcLSOperMAXIN, until the link station is cycled inactive."
        DEFVAL	{ 7 }
        ::= { wfSdlcLSAdminEntry 9 }

    wfSdlcLSAdminMAXOUT OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the maximum consequetive unacknowledged
                frames, (1.....127) which an SDLC link station shall send without
                an acknowledgement. This shall range from one to modulus minus one.
                The modulus is controlled by the object: wfSdlcLSAdminMODULO. A
                write operation to this administered value will not change the
                operational value, wfSdlcLSOperMAXOUT, until the link station is
                cycled inactive."
        DEFVAL	{ 7 }
        ::= { wfSdlcLSAdminEntry 10 }

    wfSdlcLSAdminMODULO OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(8),
    		    extended(128)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the modulus, (8,128) for an SDLC link
                station. This modulus determines the size of the rotating
                acknowledgement window used the SDLC link station pair A write
                operation to this administered value will not change the operational
                value, wfSdlcLSOperMAXOUT, until the link station is cycled inactive."
        DEFVAL	{ default }
        ::= { wfSdlcLSAdminEntry 11 }

    wfSdlcLSAdminRETRIESm OBJECT-TYPE
        SYNTAX	INTEGER(1..600)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls number of retries, ( 1.....128) in a retry
                sequence for an SDLC link station. A retry sequence is a series of
                retransmitted frames ( data or control) for which no positive
                acknowledgement is received. The number of times that the retry
                sequence is to be repeated is controlled by the object:
                wfSdlcLSOperRETRIESn. The interval between retry sequences is
                controlled by the object: wfSdlcLSOperRETRIESt. A write operation to
                this administered value will not change the operational value,
                wfSdlcLSOperRETRIESm, until the link station is cycled inactive."
        DEFVAL	{ 20 }
        ::= { wfSdlcLSAdminEntry 12 }

    wfSdlcLSAdminRETRIESt OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the interval, in seconds, (0....255) between
                retry sequences for an SDLC link station if multiple retry sequences
                are specified . A retry sequence is a series of retransmitted frames
                ( data or control) for which no positive acknowledgement is received.
                The number of repeated retries sequences is controlled by the object:
                wfSdlcLSAdminRETRIESn. The retries per sequence is controlled by the
                object: wfSdlcLSAdminRETRIESm. A write operation to this administered
                value will not change the operational value, wfSdlcLSOperRETRIESt,
                until the link station is cycled inactive."
        DEFVAL	{ 2 }
        ::= { wfSdlcLSAdminEntry 13 }

    wfSdlcLSAdminRETRIESn OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the number of times, (1....127) that a retry
                sequence is repeated for an SDLC link station. A retry sequence is a
                series of retransmitted frames ( data or control) for which no positive
                acknowledgement is received. The interval between retry sequences is
                controlled by the object: wfSdlcLSAdminRETRIESn. The retries per
                sequence is controlled by the object: wfSdlcLSAdminRETRIESm. A write
                operation to this administered value will not change the operational
                value, wfSdlcLSOperRETRIESn, until the link station is cycled
                inactive."
        DEFVAL	{ 4 }
        ::= { wfSdlcLSAdminEntry 14 }

    wfSdlcLSAdminRNRLIMIT OBJECT-TYPE
        SYNTAX	INTEGER(1..90)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the length of time, in minutes, (1.....90)
                that an SDLC link station will allow its adjacent link station to
                remain in a busy (RNR) state before declaring it inoperative. A write
                operation to this administered value will not change the operational
                value, wfSdlcLSOperRNRLIMIT, until the link station is cycled
                inactive."
        DEFVAL	{ 3 }
        ::= { wfSdlcLSAdminEntry 15 }

    wfSdlcLSAdminContTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..64000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the timeout required before a SNRM or XID
                is retransmitted in the event of non-acknowledgement. Used for
                Primary SDLC only. The value must be greater then the no response
                (T1) timeout value (no_resp_timer) The timer is specified in
                milliseconds."
        DEFVAL	{ 4000 }
        ::= { wfSdlcLSAdminEntry 16 }

    wfSdlcLSAdminContTimerRetry OBJECT-TYPE
        SYNTAX	INTEGER(1..64000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the number of times transmission and
                retransmission of a contact frame (e.g. SNRM) is allowed before
                switching to the slow
                poll timer."
        DEFVAL	{ 4 }
        ::= { wfSdlcLSAdminEntry 17 }

    wfSdlcLSAdminContTimer2 OBJECT-TYPE
        SYNTAX	INTEGER(1..64000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the slow poll contact timer in milliseconds.
                When the contact timer retry count expires, polling will continue
                using this timer."
        DEFVAL	{ 4000 }
        ::= { wfSdlcLSAdminEntry 18 }

    wfSdlcLSAdminContTimer2Retry OBJECT-TYPE
        SYNTAX	INTEGER(1..64000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the number of times transmission and
                retransmission of a contact frame (e.g. SNRM) is allowed before
                an outage message is sent to the DLC user."
        DEFVAL	{ 8 }
        ::= { wfSdlcLSAdminEntry 19 }

    wfSdlcLSAdminDiscTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..64000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the time in milliseconds before a DISC
                is retransmitted in the event of non-acknowledgement
                (for primary SDLC only)."
        DEFVAL	{ 4000 }
        ::= { wfSdlcLSAdminEntry 20 }

    wfSdlcLSAdminDiscTimerRetry OBJECT-TYPE
        SYNTAX	INTEGER(1..64000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the number of times transmission and
                retransmission of a DISC is allowed."
        DEFVAL	{ 4 }
        ::= { wfSdlcLSAdminEntry 21 }

    wfSdlcLSAdminNvePollTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..64000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the timeout required before an adjacent
                secondary station is re-inserted into the polling list after
                being removed for non-response. The time is specified in
                milliseconds."
        DEFVAL	{ 400 }
        ::= { wfSdlcLSAdminEntry 22 }

    wfSdlcLSAdminNvePollTimerRetry OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the number of times a station is removed
                from the polling list on the normal poll timer before switching
                to the slow poll timer."
        DEFVAL	{ 16 }
        ::= { wfSdlcLSAdminEntry 23 }

    wfSdlcLSAdminNvePollTimer2 OBJECT-TYPE
        SYNTAX	INTEGER(1..64000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The slow negative poll timer in milliseconds. When the negative
                poll timer count expires, the poll will continue by using this
                timer."
        DEFVAL	{ 1000 }
        ::= { wfSdlcLSAdminEntry 24 }

    wfSdlcLSAdminNvePollTimer2Retry OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the number of times a station is removed
                from the polling list before an outage message is sent to a client."
        DEFVAL	{ 65535 }
        ::= { wfSdlcLSAdminEntry 25 }

    wfSdlcLSAdminNoRespTimerRetry OBJECT-TYPE
        SYNTAX	INTEGER(1..64000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the number of times an adjacent secondary
                station is seen to fail to respond before an outage message is sent
                to a client."
        DEFVAL	{ 10 }
        ::= { wfSdlcLSAdminEntry 26 }

    wfSdlcLSAdminRemBusyTimerRetry OBJECT-TYPE
        SYNTAX	INTEGER(1..64000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Remote busy retry limit value is user with the timeout
                value to provide the overall timeout before an outage message
                is sent to a client."
        DEFVAL	{ 4 }
        ::= { wfSdlcLSAdminEntry 27 }

    wfSdlcLSAdminRRTimer OBJECT-TYPE
        SYNTAX	INTEGER(0..64000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The RR Turn-around timer is in milliseconds. It is the time
                that DLC waits before turning the poll bit around when it has
                no work to do."
        ::= { wfSdlcLSAdminEntry 28 }

    wfSdlcLSAdminGpAddName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The address of the group to which this link station belongs.
                This object is only used in association with group polling.
                It is 4 bytes of ASCII."
        ::= { wfSdlcLSAdminEntry 29 }

    wfSdlcLSAdminPollFrame OBJECT-TYPE
        SYNTAX	INTEGER {
    		    disc(83),
    		    snrm(147),
    		    xid(191),
    		    snrme(223),
    		    test(243)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The frame to use for pre-activation polling. This is normally
                set to XID to show that polling is in the control of the DLC user."
        DEFVAL	{ xid }
        ::= { wfSdlcLSAdminEntry 30 }

    wfSdlcLSAdminPollOnIframe OBJECT-TYPE
        SYNTAX	INTEGER {
    		    false(1),
    		    true(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Flag whether this link station is permitted to send the poll bit
                on an I-frame. Certain SDLC implementations do not handle receipt of
                I-frames carrying the poll bit."
        DEFVAL	{ true }
        ::= { wfSdlcLSAdminEntry 31 }

    wfSdlcLSAdminLinkStationName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The name of the adjacent link station in ASCII. Used for stats
                and Alert messages to uniquely identify the station. 8 BYTES in
                length."
        ::= { wfSdlcLSAdminEntry 32 }

    wfSdlcLSAdminAdjNodeType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    learn(1),
    		    len(2),
    		    network(3),
    		    end(4),
    		    vrn(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Adjacent Node type"
        DEFVAL	{ network }
        ::= { wfSdlcLSAdminEntry 33 }

    wfSdlcLSAdminSimRim OBJECT-TYPE
        SYNTAX	INTEGER {
    		    false(1),
    		    true(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object controls the support for transmission and receipt
                of SIM and RIM control frames for this link station."
        DEFVAL	{ false }
        ::= { wfSdlcLSAdminEntry 34 }

    wfSdlcLSOperTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSdlcLSOperEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains current SDLC link parameters. Many of
                these objects have corresponding objects in the wfSdlcLSAdmnTable."
        ::= { wfSdlcGroup 6 }

    wfSdlcLSOperEntry OBJECT-TYPE
        SYNTAX	WfSdlcLSOperEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A list of current SDLC link parameters"
        INDEX	{ wfSdlcLSOperIfIndex,
    		  wfSdlcLSOperAddress }
        ::= { wfSdlcLSOperTable 1 }

    WfSdlcLSOperEntry ::= SEQUENCE {
    	    wfSdlcLSOperIfIndex
    		INTEGER,
    	    wfSdlcLSOperAddress
    		INTEGER,
    	    wfSdlcLSOperRole
    		INTEGER,
    	    wfSdlcLSOperState
    		INTEGER,
    	    wfSdlcLSOperMAXDATA
    		INTEGER,
    	    wfSdlcLSOperREPLYTO
    		INTEGER,
    	    wfSdlcLSOperMAXIN
    		INTEGER,
    	    wfSdlcLSOperMAXOUT
    		INTEGER,
    	    wfSdlcLSOperMODULO
    		INTEGER,
    	    wfSdlcLSOperRETRIESm
    		INTEGER,
    	    wfSdlcLSOperRETRIESt
    		INTEGER,
    	    wfSdlcLSOperRETRIESn
    		INTEGER,
    	    wfSdlcLSOperRNRLIMIT
    		INTEGER,
    	    wfSdlcLSOperDATMODE
    		INTEGER,
    	    wfSdlcLSOperCreateTime
    		TimeTicks,
    	    wfSdlcLSOperLastFailCause
    		INTEGER,
    	    wfSdlcLSOperLastFailCtrlIn2
    		OCTET STRING,
    	    wfSdlcLSOperLastFailCtrlOut2
    		OCTET STRING,
    	    wfSdlcLSOperLastFailFRMRInfo5
    		OCTET STRING,
    	    wfSdlcLSOperLastFailREPLYTOs
    		Counter,
    	    wfSdlcLSOperGroupAddress
    		INTEGER
        }

    wfSdlcLSOperIfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ifIndex value for the SDLC port which owns this link station."
        ::= { wfSdlcLSOperEntry 1 }

    wfSdlcLSOperAddress OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This value is the poll address of the secondary link station
                in this SDLC link. It uniquely identifies the SDLC link station
                within a single SDLC port."
        ::= { wfSdlcLSOperEntry 2 }

    wfSdlcLSOperRole OBJECT-TYPE
        SYNTAX	INTEGER {
    		    negot(1),
    		    primary(2),
    		    sec(3),
    		    msec(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the current role that the link station
                is assuming."
        DEFVAL	{ sec }
        ::= { wfSdlcLSOperEntry 3 }

    wfSdlcLSOperState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    discont(1),
    		    conpend(2),
    		    contact(3),
    		    dispend(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object describes the operational state of the SDLC link
                station. The managed system shall attempt to keep this value
                consistent with the administered state."
        DEFVAL	{ discont }
        ::= { wfSdlcLSOperEntry 4 }

    wfSdlcLSOperMAXDATA OBJECT-TYPE
        SYNTAX	INTEGER {
    		    pdu0265(265),
    		    pdu0521(521),
    		    pdu1033(1033),
    		    pdu2057(2057)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the current maximum PDU size allowed
                for the logical link. This value includes the Transmission Header
                (TH) and Request Header (RH). This value will controlled by the
                administered MAXDATA, wfSdlcLSAdminMAXDATA, or by the value negotiated
                in the XID exchange for link stations on a switched
                 SDLC line."
        DEFVAL	{ pdu2057 }
        ::= { wfSdlcLSOperEntry 5 }

    wfSdlcLSOperREPLYTO OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the current reply timeout, in tenths of
                seconds, for an SDLC link station. If the link station does not
                receive a repsonse to a poll or message before the specified time
                expires then the appropriate error recovery shall be initiated.
                This object has no meaning for secondary SDLC link stations."
        ::= { wfSdlcLSOperEntry 6 }

    wfSdlcLSOperMAXIN OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the current maximum number of
                unacknowledged frames which an SDLC link station may receive.
                This shall range from one to modulus minus one."
        ::= { wfSdlcLSOperEntry 7 }

    wfSdlcLSOperMAXOUT OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object controls the maximum consequetive unacknowledged
                frames which an SDLC link station shall send without an
                acknowledgement. This shall range from one to modulus minus one.
                The modulus is controlled by the object: wfSdlcLSAdminMODULO.
                This value will controlled by the administered MAXOUT,
                wfSdlcLSAdminMAXOUT, or by the value negotiated in the XID exchange
                for link stations on a switched SDLC line."
        ::= { wfSdlcLSOperEntry 8 }

    wfSdlcLSOperMODULO OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the current modulus for an SDLC link
                station. This modulus determines the size of rotating acknowledgement
                window used by the SDLC link station pair."
        ::= { wfSdlcLSOperEntry 9 }

    wfSdlcLSOperRETRIESm OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object controls number of retries in a retry sequence
                for an SDLC link station. A retry sequence is a series of
                retransmitted frames ( data or control) for which no positive
                acknowledgement is received. The current number of times that the
                retry sequence is to be repeated is reflected by the object:
                wfSdlcLSOperRETRIESn. The current interval between retry sequences
                is reflected by the object: wfSdlcLSOperRETRIESt."
        ::= { wfSdlcLSOperEntry 10 }

    wfSdlcLSOperRETRIESt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the current interval, in seconds, between
                retry sequences for an SDLC link station if multiple retry sequences
                are specified. A retry sequence is a series of retransmitted frames
                ( data or control) for which no positive acknowledgement is received.
                The current number of repeated retries sequences is reflected by the
                object: wfSdlcLSOperRETRIESn. The current retries per sequence is
                reflected by the object: wfSdlcLSOperRETRIESm."
        ::= { wfSdlcLSOperEntry 11 }

    wfSdlcLSOperRETRIESn OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the current number of times that a retry
                sequence is repeated for an SDLC link station. A retry sequence is
                a series of retransmitted frames ( data or control) for which no
                positive acknowledgement is received. The current interval between
                retry sequences is reflected by the object: wfSdlcLSOperRETRIESn.
                The current retries per sequence is reflected by the
                object: wfSdlcLSOperRETRIESm."
        ::= { wfSdlcLSOperEntry 12 }

    wfSdlcLSOperRNRLIMIT OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the current length of time, in minutes,
                that an SDLC link station will allow its adjacent link station to
                remain in a busy (RNR) state before declaring it inoperative."
        ::= { wfSdlcLSOperEntry 13 }

    wfSdlcLSOperDATMODE OBJECT-TYPE
        SYNTAX	INTEGER {
    		    half(1),
    		    full(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects whether the current communications mode with
                the adjacent link station is two-way-alternate (half) or
                two-way-simultaneous (full)."
        DEFVAL	{ half }
        ::= { wfSdlcLSOperEntry 14 }

    wfSdlcLSOperCreateTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object describes the time, in 1/100ths of seconds,
                of the creation of this SDLC link station."
        ::= { wfSdlcLSOperEntry 15 }

    wfSdlcLSOperLastFailCause OBJECT-TYPE
        SYNTAX	INTEGER {
    		    undefined(1),
    		    rxfrmr(2),
    		    txfrmr(3),
    		    noresp(4),
    		    protoerr(5),
    		    noactiv(6),
    		    rnrlimit(7),
    		    retriesexp(8)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This enumerated object reflects the cause of the last failure
                of this SDLC link station. If the link station has not failed, then
                this value has no meaning."
        ::= { wfSdlcLSOperEntry 16 }

    wfSdlcLSOperLastFailCtrlIn2 OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the last control octet or octets
                (depending on modulus) received by this SDLC link station at the
                time of the last failure. If the link station has not failed, then
                this value has no meaning."
        ::= { wfSdlcLSOperEntry 17 }

    wfSdlcLSOperLastFailCtrlOut2 OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the last control octet or octets
                (depending on modulus) sent by this SDLC link station at the time of
                the last failure. If the link station has not failed, then this
                value has no meaning."
        ::= { wfSdlcLSOperEntry 18 }

    wfSdlcLSOperLastFailFRMRInfo5 OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the information field of the FRMR frame
                if the last failure for this SDLC link station was as a result of an
                invalid frame. Otherwise, this field has no meaning."
        ::= { wfSdlcLSOperEntry 19 }

    wfSdlcLSOperLastFailREPLYTOs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the number of times that the REPLYTO timer
                had expired for an SDLC link station at the time of the last failure.
                If the link station has not failed, then this value has no meaning."
        ::= { wfSdlcLSOperEntry 20 }

    wfSdlcLSOperGroupAddress OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This value is the group poll address of the secondary link station for
                this SDLC link. If this link station is not part of a group, this address
                will be NULL."
        ::= { wfSdlcLSOperEntry 21 }

    wfSdlcLSStatsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSdlcLSStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Each entry in this table contains statistics for a specific
                SDLC link station."
        ::= { wfSdlcGroup 7 }

    wfSdlcLSStatsEntry OBJECT-TYPE
        SYNTAX	WfSdlcLSStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A list of statistics for a specific SDLC link station"
        INDEX	{ wfSdlcLSStatsIfIndex,
    		  wfSdlcLSStatsAddress }
        ::= { wfSdlcLSStatsTable 1 }

    WfSdlcLSStatsEntry ::= SEQUENCE {
    	    wfSdlcLSStatsIfIndex
    		INTEGER,
    	    wfSdlcLSStatsAddress
    		INTEGER,
    	    wfSdlcLSStatsBLUsIns
    		Counter,
    	    wfSdlcLSStatsBLUsOuts
    		Counter,
    	    wfSdlcLSStatsOctetsIns
    		Counter,
    	    wfSdlcLSStatsOctetsOuts
    		Counter,
    	    wfSdlcLSStatsPollsOuts
    		Counter,
    	    wfSdlcLSStatsPollRspOuts
    		Counter,
    	    wfSdlcLSStatsLocalBusies
    		Counter,
    	    wfSdlcLSStatsRemoteBusies
    		Counter,
    	    wfSdlcLSStatsIFramesIns
    		Counter,
    	    wfSdlcLSStatsIFramesOuts
    		Counter,
    	    wfSdlcLSStatsRetransmits
    		Counter,
    	    wfSdlcLSStatsIOctetsIns
    		Counter,
    	    wfSdlcLSStatsIOctetsOuts
    		Counter,
    	    wfSdlcLSStatsUIFramesIns
    		Counter,
    	    wfSdlcLSStatsUIFramesOuts
    		Counter,
    	    wfSdlcLSStatsXIDsIns
    		Counter,
    	    wfSdlcLSStatsXIDsOuts
    		Counter,
    	    wfSdlcLSStatsTESTsIns
    		Counter,
    	    wfSdlcLSStatsTESTsOuts
    		Counter,
    	    wfSdlcLSStatsREJsIns
    		Counter,
    	    wfSdlcLSStatsREJsOuts
    		Counter,
    	    wfSdlcLSStatsFRMRsIns
    		Counter,
    	    wfSdlcLSStatsFRMRsOuts
    		Counter,
    	    wfSdlcLSStatsSimsIn
    		Counter,
    	    wfSdlcLSStatsSimsOut
    		Counter,
    	    wfSdlcLSStatsRimsIn
    		Counter,
    	    wfSdlcLSStatsRimsOut
    		Counter
        }

    wfSdlcLSStatsIfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A list of statistics for an SDLC link station."
        ::= { wfSdlcLSStatsEntry 1 }

    wfSdlcLSStatsAddress OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This value is the poll address of the secondary link station in
                this SDLC link. It uniquely identifies the SDLC link station within
                a single SDLC port."
        ::= { wfSdlcLSStatsEntry 2 }

    wfSdlcLSStatsBLUsIns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total basic link units (BLUs; frames)
                received from an adjacent SDLC link station since last reset or
                system startup."
        ::= { wfSdlcLSStatsEntry 3 }

    wfSdlcLSStatsBLUsOuts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total basic link units (BLUs; frames),
                transmitted to an adjacent SDLC link station since last reset or
                system startup."
        ::= { wfSdlcLSStatsEntry 4 }

    wfSdlcLSStatsOctetsIns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total octets received from an adjacent
                SDLC link station since last reset or system startup."
        ::= { wfSdlcLSStatsEntry 5 }

    wfSdlcLSStatsOctetsOuts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total octets transmitted to an adjacent
                SDLC link station since last reset or system startup."
        ::= { wfSdlcLSStatsEntry 6 }

    wfSdlcLSStatsPollsOuts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total polls sent to an adjacent SDLC
                link station since last reset or system startup."
        ::= { wfSdlcLSStatsEntry 7 }

    wfSdlcLSStatsPollRspOuts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total polls responded to by the local
                SDLC link station since last reset or system startup."
        ::= { wfSdlcLSStatsEntry 8 }

    wfSdlcLSStatsLocalBusies OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total number of times that the local
                SDLC link station has entered a busy state (RNR) since last reset or system
                startup."
        ::= { wfSdlcLSStatsEntry 9 }

    wfSdlcLSStatsRemoteBusies OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total number of times that an
                adjacent ( remote) SDLC link station has entered a busy state
                (RNR) since last reset or system startup."
        ::= { wfSdlcLSStatsEntry 10 }

    wfSdlcLSStatsIFramesIns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total I-frames received from
                an adjacent SDLC link station since last reset or system startup."
        ::= { wfSdlcLSStatsEntry 11 }

    wfSdlcLSStatsIFramesOuts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total I-frames transmitted to an
                adjacent SDLC link station since last reset or system startup."
        ::= { wfSdlcLSStatsEntry 12 }

    wfSdlcLSStatsRetransmits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total frames retransmitted to an
                adjacent SDLC link station since last reset or system startup."
        ::= { wfSdlcLSStatsEntry 13 }

    wfSdlcLSStatsIOctetsIns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total octets contained in I-frames
                received from an adjacent SDLC link station since last reset or
                system startup."
        ::= { wfSdlcLSStatsEntry 14 }

    wfSdlcLSStatsIOctetsOuts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total octets contained in I-frames
                transmitted to an adjacent SDLC link station since last reset or
                system startup."
        ::= { wfSdlcLSStatsEntry 15 }

    wfSdlcLSStatsUIFramesIns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total UI-frames received from an
                adjacent SDLC link station since last reset or system startup."
        ::= { wfSdlcLSStatsEntry 16 }

    wfSdlcLSStatsUIFramesOuts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total UI-frames transmitted to an
                adjacent SDLC link station since last reset or system startup."
        ::= { wfSdlcLSStatsEntry 17 }

    wfSdlcLSStatsXIDsIns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total XID frames received from an
                adjacent SDLC link station since last reset or system startup."
        ::= { wfSdlcLSStatsEntry 18 }

    wfSdlcLSStatsXIDsOuts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total XID frames transmitted to an
                adjacent SDLC link station since last reset or system startup."
        ::= { wfSdlcLSStatsEntry 19 }

    wfSdlcLSStatsTESTsIns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total TEST frames, commands or responses,
                received from an adjacent SDLC link station since last reset or
                system startup."
        ::= { wfSdlcLSStatsEntry 20 }

    wfSdlcLSStatsTESTsOuts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total TEST frames, commands or responses,
                transmitted to an adjacent SDLC link station since last reset or
                system startup."
        ::= { wfSdlcLSStatsEntry 21 }

    wfSdlcLSStatsREJsIns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total REJ frames received from an
                adjacent SDLC link station since last reset or system startup."
        ::= { wfSdlcLSStatsEntry 22 }

    wfSdlcLSStatsREJsOuts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total REJ frames transmitted to an
                adjacent SDLC link station since last reset or system startup."
        ::= { wfSdlcLSStatsEntry 23 }

    wfSdlcLSStatsFRMRsIns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total frame reject (FRMR) frames
                received from an adjacent SDLC link station since last reset or
                system startup."
        ::= { wfSdlcLSStatsEntry 24 }

    wfSdlcLSStatsFRMRsOuts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total frame reject (FRMR) frames
                transmitted to an adjacent SDLC link station since last reset
                or system startup."
        ::= { wfSdlcLSStatsEntry 25 }

    wfSdlcLSStatsSimsIn OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total set initialization mode (SIM) frames
                received from an adjacent SDLC link station since last reset or
                system startup."
        ::= { wfSdlcLSStatsEntry 26 }

    wfSdlcLSStatsSimsOut OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total set initialization mode (SIM) frames
                transmitted to an adjacent SDLC link station since last reset or
                system startup."
        ::= { wfSdlcLSStatsEntry 27 }

    wfSdlcLSStatsRimsIn OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total request initialization mode (RIM) frames
                received from an adjacent SDLC link station since last reset or
                system startup."
        ::= { wfSdlcLSStatsEntry 28 }

    wfSdlcLSStatsRimsOut OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This object reflects the total request initialization mode (RIM) frames
                transmitted to an adjacent SDLC link station since last reset or
                system startup."
        ::= { wfSdlcLSStatsEntry 29 }

    END  -- Wellfleet-SDLC-MIB
-- @(#)WSCCS o/mibs-sip.mib 1.1 8/30/95
Wellfleet-SIP-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:47:34 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfSipGroup
        FROM Wellfleet-COMMON-MIB;

    wfSipPlcpGroup	OBJECT IDENTIFIER ::= { wfSipGroup 2 }

    wfSipL2 OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSipL2Entry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The SIP L2 Table"
        ::= { wfSipGroup 1 }

    wfSipL2Entry OBJECT-TYPE
        SYNTAX	WfSipL2Entry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit SIP Level 2 objects - wfSipL2Index
                corresponds to Wellfleet circuit number"
        INDEX	{ wfSipL2Index }
        ::= { wfSipL2 1 }

    WfSipL2Entry ::= SEQUENCE {
    	    wfSipL2Index
    		INTEGER,
    	    wfSipL2ReceivedCounts
    		Counter,
    	    wfSipL2SentCounts
    		Counter,
    	    wfSipHcsOrCRCErrors
    		Counter,
    	    wfSipL2PayloadLengthErrors
    		Counter,
    	    wfSipL2SequenceNumberErrors
    		Counter,
    	    wfSipL2MidCurrentlyActiveErrors
    		Counter,
    	    wfSipL2BomOrSSMsMIDErrors
    		Counter,
    	    wfSipL2EomsMIDErrors
    		Counter
        }

    wfSipL2Index OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfSipL2Entry 1 }

    wfSipL2ReceivedCounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total of unerrored received SIP L2 PDUs"
        ::= { wfSipL2Entry 2 }

    wfSipL2SentCounts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total of unerrored SIP L2 PDU's sent across the SNI"
        ::= { wfSipL2Entry 3 }

    wfSipHcsOrCRCErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total SIP L2 PDUs with HCS or CRC errors"
        ::= { wfSipL2Entry 4 }

    wfSipL2PayloadLengthErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total SIP L2 PDUs with length errors"
        ::= { wfSipL2Entry 5 }

    wfSipL2SequenceNumberErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "total SIP L2 PDUs with unexpected sequence numbers"
        ::= { wfSipL2Entry 6 }

    wfSipL2MidCurrentlyActiveErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of SIP L2 PDUs with BOMs previously started"
        ::= { wfSipL2Entry 7 }

    wfSipL2BomOrSSMsMIDErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of SIP L2 PDUs with zero BOMs or SSMs not zero"
        ::= { wfSipL2Entry 8 }

    wfSipL2EomsMIDErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of SIP L2 PDUs with zero EOMs or EOMs without BOMs"
        ::= { wfSipL2Entry 9 }

    wfSipDs1Plcp OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSipDs1PlcpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The SIP DS1 PLCP Table"
        ::= { wfSipPlcpGroup 1 }

    wfSipDs1PlcpEntry OBJECT-TYPE
        SYNTAX	WfSipDs1PlcpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS1 PLCP objects - wfSipDs1PlcpIndex
                corresponds to Wellfleet circuit number"
        INDEX	{ wfSipDs1PlcpIndex }
        ::= { wfSipDs1Plcp 1 }

    WfSipDs1PlcpEntry ::= SEQUENCE {
    	    wfSipDs1PlcpIndex
    		INTEGER,
    	    wfSipDs1PlcpSEFs
    		Counter,
    	    wfSipDs1PlcpAlarmState
    		INTEGER,
    	    wfSipDs1PlcpUASs
    		Counter
        }

    wfSipDs1PlcpIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfSipDs1PlcpEntry 1 }

    wfSipDs1PlcpSEFs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of second intervals containing one or more
                severely errored seconds"
        ::= { wfSipDs1PlcpEntry 2 }

    wfSipDs1PlcpAlarmState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    noalarm(1),
    		    receivedfarendalarm(2),
    		    incominglof(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "alarm state"
        ::= { wfSipDs1PlcpEntry 3 }

    wfSipDs1PlcpUASs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of second intervals containing one or more unavailable
                seconds"
        ::= { wfSipDs1PlcpEntry 4 }

    wfSipDs3Plcp OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSipDs3PlcpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The SIP DS3 PLCP Table"
        ::= { wfSipPlcpGroup 2 }

    wfSipDs3PlcpEntry OBJECT-TYPE
        SYNTAX	WfSipDs3PlcpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per circuit DS3 PLCP objects - wfSipDs3PlcpIndex
                corresponds to Wellfleet circuit number"
        INDEX	{ wfSipDs3PlcpIndex }
        ::= { wfSipDs3Plcp 1 }

    WfSipDs3PlcpEntry ::= SEQUENCE {
    	    wfSipDs3PlcpIndex
    		INTEGER,
    	    wfSipDs3PlcpSEFs
    		Counter,
    	    wfSipDs3PlcpAlarmState
    		INTEGER,
    	    wfSipDs3PlcpUASs
    		Counter
        }

    wfSipDs3PlcpIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "this corresponds to the Wellfleet circuit number"
        ::= { wfSipDs3PlcpEntry 1 }

    wfSipDs3PlcpSEFs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of second intervals containing one or more
                severely errored seconds"
        ::= { wfSipDs3PlcpEntry 2 }

    wfSipDs3PlcpAlarmState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    noalarm(1),
    		    receivedfarendalarm(2),
    		    incominglof(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "alarm state"
        ::= { wfSipDs3PlcpEntry 3 }

    wfSipDs3PlcpUASs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of second intervals containing one or more unavailable
                seconds"
        ::= { wfSipDs3PlcpEntry 4 }

    END  -- Wellfleet-SIP-MIB
-- @(#)WSCCS r/mibs-smds.mib 1.1 8/30/95
Wellfleet-SMDS-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:47:39 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfWanGroup
        FROM Wellfleet-COMMON-MIB;


    wfSmdsCircuitTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSmdsCircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Wellfleet SMDS Circuit Record"
        ::= { wfWanGroup 3 }

    wfSmdsCircuitEntry OBJECT-TYPE
        SYNTAX	WfSmdsCircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "per Wellfleet circuit SMDS configuration parameters and
                counters"
        INDEX	{ wfSmdsCircuitID }
        ::= { wfSmdsCircuitTable 1 }

    WfSmdsCircuitEntry ::= SEQUENCE {
    	    wfSmdsCircuitDelete
    		INTEGER,
    	    wfSmdsCircuitDisable
    		INTEGER,
    	    wfSmdsCircuitState
    		INTEGER,
    	    wfSmdsCircuitID
    		INTEGER,
    	    wfSmdsCircuitIndivAddr
    		OCTET STRING,
    	    wfSmdsCircuitGroupAddr
    		OCTET STRING,
    	    wfSmdsCircuitArpAddr
    		OCTET STRING,
    	    wfSmdsCircuitDisableHrtbtPoll
    		INTEGER,
    	    wfSmdsCircuitHrtbtPollInterval
    		INTEGER,
    	    wfSmdsCircuitHrtbtPollDownCount
    		INTEGER,
    	    wfSmdsCircuitDisableNetMgmt
    		INTEGER,
    	    wfSmdsCircuitSipL3ReceivedIndividualDAs
    		Counter,
    	    wfSmdsCircuitSipL3ReceivedGAs
    		Counter,
    	    wfSmdsCircuitSipL3SentIndividualDAs
    		Counter,
    	    wfSmdsCircuitSipL3SentGAs
    		Counter,
    	    wfSmdsCircuitSipL3VersionSupport
    		INTEGER,
    	    wfSmdsCircuitDisableAddrVerify
    		INTEGER,
    	    wfSmdsCircuitAddrVerifyDiscards
    		Counter
        }

    wfSmdsCircuitDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "create/delete parameter, dflt = created"
        DEFVAL	{ created }
        ::= { wfSmdsCircuitEntry 1 }

    wfSmdsCircuitDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable parameter, dflt = enabled"
        DEFVAL	{ enabled }
        ::= { wfSmdsCircuitEntry 2 }

    wfSmdsCircuitState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "SMDS state variable, Up, Down Init, Not Present"
        DEFVAL	{ notpresent }
        ::= { wfSmdsCircuitEntry 3 }

    wfSmdsCircuitID OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "cct number for this instance"
        ::= { wfSmdsCircuitEntry 4 }

    wfSmdsCircuitIndivAddr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "SMDS E.164 Individual address for this Wellfleet
                circuit - must be 8 octets long"
        ::= { wfSmdsCircuitEntry 5 }

    wfSmdsCircuitGroupAddr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "SMDS E.164 Group address for this Wellfleet
                circuit - must be 8 octets long"
        ::= { wfSmdsCircuitEntry 6 }

    wfSmdsCircuitArpAddr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "SMDS E.164 ARP address for this Wellfleet
                circuit - must be 8 octets long"
        ::= { wfSmdsCircuitEntry 7 }

    wfSmdsCircuitDisableHrtbtPoll OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "determine use of DXI heartbeat poll"
        DEFVAL	{ disabled }
        ::= { wfSmdsCircuitEntry 8 }

    wfSmdsCircuitHrtbtPollInterval OBJECT-TYPE
        SYNTAX	INTEGER(6..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "heartbeat polling messages get sent every this many
                seconds - we don't want the polling interval to be
                less than or equal to the unacknowledgment timer, which
                is 5 seconds"
        DEFVAL	{ 10 }
        ::= { wfSmdsCircuitEntry 9 }

    wfSmdsCircuitHrtbtPollDownCount OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "if this many consecutive heartbeat polling messages
                go unacknowledged, log an event declaring the line
                down"
        DEFVAL	{ 3 }
        ::= { wfSmdsCircuitEntry 10 }

    wfSmdsCircuitDisableNetMgmt OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "determine use of LMI network management"
        DEFVAL	{ disabled }
        ::= { wfSmdsCircuitEntry 11 }

    wfSmdsCircuitSipL3ReceivedIndividualDAs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of individually addressed SIP Level 3 PDUs
                received from the remote system across the SNI. The total
                includes only unerrored L3PDUs."
        ::= { wfSmdsCircuitEntry 12 }

    wfSmdsCircuitSipL3ReceivedGAs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of group addressed SIP Level 3 PDUs
                received from the remote system across the SNI.  The
                total includes only unerrored L3PDUs."
        ::= { wfSmdsCircuitEntry 13 }

    wfSmdsCircuitSipL3SentIndividualDAs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of individually addressed SIP Level 3 PDUs
                that have been sent by this system across the SNI."
        ::= { wfSmdsCircuitEntry 14 }

    wfSmdsCircuitSipL3SentGAs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of group addressed SIP L3PDUs that have been
                sent by this system across the SNI."
        ::= { wfSmdsCircuitEntry 15 }

    wfSmdsCircuitSipL3VersionSupport OBJECT-TYPE
        SYNTAX	INTEGER {
    		    version(1)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A value which indicates the version(s) of SIP
                that this interface supports.  The value is a sum.
                This sum initially takes the value zero.  For each
                version, V, that this interface supports, 2 raised
                to (V - 1) is added to the sum. For example, a
                port supporting versions 1 and 2 would have a
                value of (2^(1-1)+2^(2-1))=3.  The
                SipL3VersionSupport is effectively a bit mask with
                Version 1 equal to the least significant bit (LSB)."
        DEFVAL	{ version }
        ::= { wfSmdsCircuitEntry 16 }

    wfSmdsCircuitDisableAddrVerify OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This object enables/disables verification checking
                of destination addresses in received packets."
        DEFVAL	{ disabled }
        ::= { wfSmdsCircuitEntry 17 }

    wfSmdsCircuitAddrVerifyDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the count of SMDS PDUs discarded due to
                mismatched group or individual addresses"
        ::= { wfSmdsCircuitEntry 18 }

    END  -- Wellfleet-SMDS-MIB
-- @(#)WSCCS y/mibs-snmp.mib 1.2 9/14/95
Wellfleet-SNMP-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:47:43 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfSnmpGroup
        FROM Wellfleet-COMMON-MIB;


    wfSnmp		OBJECT IDENTIFIER ::= { wfSnmpGroup 1 }

    wfSnmpDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables or disables the SNMP subsystem"
        DEFVAL	{ enabled }
        ::= { wfSnmp 1 }

    wfSnmpUseLock OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Flag to indicate whether set locking mechanism is enabled or
                disabled. Set locking permits only one manager to perform
                SNMP sets to the system at any given time.  A genErr will
                be returned to managers that are locked out."
        DEFVAL	{ enabled }
        ::= { wfSnmp 2 }

    wfSnmpLockAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Address of remote manager that is enforcing the lock. This
                value is set by the SNMP agent.  Remote managers are only
                allowed to clear it."
        ::= { wfSnmp 3 }

    wfSnmpLockTimeOut OBJECT-TYPE
        SYNTAX	INTEGER(1..60)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum time (in minutes) a lock can be idle before it is
                cleared.  An idle period is a time interval with no sets from
                the locking manager."
        DEFVAL	{ 2 }
        ::= { wfSnmp 4 }

    wfSnmpAuth OBJECT-TYPE
        SYNTAX	INTEGER {
    		    trivial(1),
    		    party(2),
    		    proprietary(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The type of authentication used by the agent (set through
                console interface)."
        DEFVAL	{ trivial }
        ::= { wfSnmp 5 }

    wfSnmpInPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of PDUs received by SNMP from transport entity"
        ::= { wfSnmp 6 }

    wfSnmpOutPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of PDUs sent by SNMP to transport entity"
        ::= { wfSnmp 7 }

    wfSnmpInBadVersions OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of PDUs requesting unsupported versions"
        ::= { wfSnmp 8 }

    wfSnmpInBadCommunityNames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of PDUs which had an invalid community string"
        ::= { wfSnmp 9 }

    wfSnmpInBadCommunityUses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of PDUs requesting an operation unsupported by
                the community"
        ::= { wfSnmp 10 }

    wfSnmpInASNParseErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of ASN.1 parsing errors during decoding"
        ::= { wfSnmp 11 }

    wfSnmpInBadTypes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of PDUs having an unknown PDU type"
        ::= { wfSnmp 12 }

    wfSnmpInTooBigs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of PDUs delivered with ErrorStatus='tooBig"
        ::= { wfSnmp 13 }

    wfSnmpInNoSuchNames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of PDUs delivered with ErrorStatus='noSuchName"
        ::= { wfSnmp 14 }

    wfSnmpInBadValues OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of PDUs delivered with ErrorStatus='badValue"
        ::= { wfSnmp 15 }

    wfSnmpInReadOnlys OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of PDUs delivered with ErrorStatus='readOnly"
        ::= { wfSnmp 16 }

    wfSnmpInGenErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of PDUs delivered with ErrorStatus='genErr"
        ::= { wfSnmp 17 }

    wfSnmpInTotalReqVars OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of MIB objects retrieved successfully by the
                agent"
        ::= { wfSnmp 18 }

    wfSnmpInTotalSetVars OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of MIB objects which have been SET successfully"
        ::= { wfSnmp 19 }

    wfSnmpInGetRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of Get-Request PDUS accepted and processed"
        ::= { wfSnmp 20 }

    wfSnmpInGetNexts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of GetNext-Request PDUS accepted and processed"
        ::= { wfSnmp 21 }

    wfSnmpInSetRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of Set-Request PDUS accepted and processed"
        ::= { wfSnmp 22 }

    wfSnmpInGetResponses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of GetResponse PDUs accepted and processed"
        ::= { wfSnmp 23 }

    wfSnmpInTraps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of Trap PDUs accepted and processed"
        ::= { wfSnmp 24 }

    wfSnmpOutTooBigs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of PDUs generated by the agent with ErrorStatus=
                'tooBig"
        ::= { wfSnmp 25 }

    wfSnmpOutNoSuchNames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of PDUs generated by the agent with ErrorStatus=
                'noSuchName"
        ::= { wfSnmp 26 }

    wfSnmpOutBadValues OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of PDUs generated by the agent with ErrorStatus=
                'badValue"
        ::= { wfSnmp 27 }

    wfSnmpOutReadOnlys OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of PDUs generated by the agent with ErrorStatus=
                'readOnly"
        ::= { wfSnmp 28 }

    wfSnmpOutGenErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of PDUs generated by the agent with ErrorStatus=
                'genErr"
        ::= { wfSnmp 29 }

    wfSnmpOutGetRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of Get-Request PDUs generated by the agent"
        ::= { wfSnmp 30 }

    wfSnmpOutGetNexts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of Get-Next-Request PDUs generated by the agent"
        ::= { wfSnmp 31 }

    wfSnmpOutSetRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of Set-Request PDUs generated by the agent"
        ::= { wfSnmp 32 }

    wfSnmpOutGetResponses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of Get-Response PDUs generated by the agent"
        ::= { wfSnmp 33 }

    wfSnmpOutTraps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of Trap PDUs generated by the agent"
        ::= { wfSnmp 34 }

    wfSnmpEnableAuthTraps OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Idicates whether agent can generate Authentication Failure
                Traps"
        DEFVAL	{ enabled }
        ::= { wfSnmp 35 }

    wfSnmpTrapDebug OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "This attribute controls the specific trap filter for debug
                messages"
        DEFVAL	{ on }
        ::= { wfSnmp 36 }

    wfSnmpTrapTrace OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "This attribute controls the specific trap filter for trace
                messages"
        DEFVAL	{ on }
        ::= { wfSnmp 37 }

    wfSnmpTrapInfo OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "This attribute controls the specific trap filter for
                informational messages"
        DEFVAL	{ off }
        ::= { wfSnmp 38 }

    wfSnmpTrapWarn OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "This attribute controls the specific trap filter for warning
                messages"
        DEFVAL	{ off }
        ::= { wfSnmp 39 }

    wfSnmpTrapFault OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "This attribute controls the specific trap filter for fault
                messages"
        DEFVAL	{ off }
        ::= { wfSnmp 40 }

    wfSnmpIpTos OBJECT-TYPE
        SYNTAX	INTEGER {
    		    normal(1),
    		    reliability(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Type Of Service value set in the IP datagram specifies to
                the Internet transport layer how the datagram should be
                handled. For SNMP high reliability Type Of Service is
                important."
        DEFVAL	{ reliability }
        ::= { wfSnmp 41 }

    wfSnmpPropEncryption OBJECT-TYPE
        SYNTAX	INTEGER {
    		    wflt(1),
    		    others(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The encryption algorithm to use in proprietary security"
        DEFVAL	{ wflt }
        ::= { wfSnmp 42 }

    wfSnmpMinPDUThreads OBJECT-TYPE
        SYNTAX INTEGER
	ACCESS read-write
        STATUS mandatory
        DESCRIPTION
                "The minimum number of EMANATE Master Agent PDU thread gates"
        DEFVAL { 3 }
        ::= { wfSnmp 43 }

    wfSnmpMaxPDUThreads OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
                "The maximum number of EMANATE Master Agent PDU thread gates"
        DEFVAL { 10 }
        ::= { wfSnmp 44 }

    wfSnmpBusyPDUThreads OBJECT-TYPE
        SYNTAX Gauge
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
      		"The current number of busy EMANATE Master Agent PDU thread
                 gates"
	::= { wfSnmp 45 }

    wfSnmpLogLevel OBJECT-TYPE
	SYNTAX INTEGER {
		   apall(1),
		   aperror(2),
		   apwarn (3),
		   aptrace (4),
	 	   aptraceerr(5),
		   aptracewarn(6),
		   aperrwarn(7),
		   apnone(8)
		}
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
		"The log level enabled for EMANATE log messages"
        DEFVAL { apnone }
        ::= { wfSnmp 46 }

    wfSnmpCommTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSnmpCommEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table containing valid management communities"
        ::= { wfSnmpGroup 2 }

    wfSnmpCommEntry OBJECT-TYPE
        SYNTAX	WfSnmpCommEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Information about a particular community"
        INDEX	{ wfSnmpCommIndex }
        ::= { wfSnmpCommTable 1 }

    WfSnmpCommEntry ::= SEQUENCE {
    	    wfSnmpCommDelete
    		INTEGER,
    	    wfSnmpCommIndex
    		INTEGER,
    	    wfSnmpCommName
    		DisplayString,
    	    wfSnmpCommAccess
    		INTEGER
        }

    wfSnmpCommDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A flag to indicate community instance deletion"
        DEFVAL	{ created }
        ::= { wfSnmpCommEntry 1 }

    wfSnmpCommIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A unique numeric value that has a one to one correspondence
                with the community name"
        ::= { wfSnmpCommEntry 2 }

    wfSnmpCommName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Community name"
        ::= { wfSnmpCommEntry 3 }

    wfSnmpCommAccess OBJECT-TYPE
        SYNTAX	INTEGER {
    		    readonly(1),
    		    readwrite(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Community access mode"
        DEFVAL	{ readonly }
        ::= { wfSnmpCommEntry 4 }

    wfSnmpMgrTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSnmpMgrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table containing managers and their respective communities"
        ::= { wfSnmpGroup 3 }

    wfSnmpMgrEntry OBJECT-TYPE
        SYNTAX	WfSnmpMgrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Information about a manager of a community"
        INDEX	{ wfSnmpMgrCommIndex,
    		  wfSnmpMgrAddress }
        ::= { wfSnmpMgrTable 1 }

    WfSnmpMgrEntry ::= SEQUENCE {
    	    wfSnmpMgrDelete
    		INTEGER,
    	    wfSnmpMgrCommIndex
    		INTEGER,
    	    wfSnmpMgrAddress
    		IpAddress,
    	    wfSnmpMgrName
    		DisplayString,
    	    wfSnmpMgrTrapPort
    		INTEGER,
    	    wfSnmpMgrTraps
    		INTEGER,
    	    wfSnmpMgrEncrSeed1
    		INTEGER,
    	    wfSnmpMgrEncrSeed2
    		INTEGER,
    	    wfSnmpMgrEncrSeed3
    		INTEGER,
    	    wfSnmpMgrEncrSeed4
    		INTEGER,
    	    wfSnmpMgrEncrSeed5
    		INTEGER
        }

    wfSnmpMgrDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A flag to indicate manager instance deletion"
        DEFVAL	{ created }
        ::= { wfSnmpMgrEntry 1 }

    wfSnmpMgrCommIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Associates this manager with a community in the community
                table"
        ::= { wfSnmpMgrEntry 2 }

    wfSnmpMgrAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "IP Address of this manager"
        ::= { wfSnmpMgrEntry 3 }

    wfSnmpMgrName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A name for this manager"
        ::= { wfSnmpMgrEntry 4 }

    wfSnmpMgrTrapPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The UDP Port on which this manager is listening for traps"
        DEFVAL	{ 162 }
        ::= { wfSnmpMgrEntry 5 }

    wfSnmpMgrTraps OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    generic(2),
    		    specific(4),
    		    all(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Allowable trap types to be sent to Manager"
        DEFVAL	{ generic }
        ::= { wfSnmpMgrEntry 6 }

    wfSnmpMgrEncrSeed1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The encrypted value of the seed counter for application 1 of
                this manager"
        ::= { wfSnmpMgrEntry 7 }

    wfSnmpMgrEncrSeed2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The encrypted value of the seed counter for application 2 of
                this manager"
        ::= { wfSnmpMgrEntry 8 }

    wfSnmpMgrEncrSeed3 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The encrypted value of the seed counter for application 3 of
                this manager"
        ::= { wfSnmpMgrEntry 9 }

    wfSnmpMgrEncrSeed4 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The encrypted value of the seed counter for application 4 of
                this manager"
        ::= { wfSnmpMgrEntry 10 }

    wfSnmpMgrEncrSeed5 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The encrypted value of the seed counter for application 5 of
                this manager"
        ::= { wfSnmpMgrEntry 11 }

    wfSnmpTrapEntityTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSnmpTrapEntityEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table of Entity Trap switches ; indexed by entity number
                and slot"
        ::= { wfSnmpGroup 5 }

    wfSnmpTrapEntityEntry OBJECT-TYPE
        SYNTAX	WfSnmpTrapEntityEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An Entity Trap Switch Entry"
        INDEX	{ wfSnmpTrapEntityNumber,
    		  wfSnmpTrapEntitySlot }
        ::= { wfSnmpTrapEntityTable 1 }

    WfSnmpTrapEntityEntry ::= SEQUENCE {
    	    wfSnmpTrapEntityDelete
    		INTEGER,
    	    wfSnmpTrapEntityDisable
    		INTEGER,
    	    wfSnmpTrapEntityNumber
    		INTEGER,
    	    wfSnmpTrapEntitySlot
    		INTEGER,
    	    wfSnmpTrapEntityName
    		DisplayString,
    	    wfSnmpTrapEntityFault
    		INTEGER,
    	    wfSnmpTrapEntityWarn
    		INTEGER,
    	    wfSnmpTrapEntityInfo
    		INTEGER,
    	    wfSnmpTrapEntityTrace
    		INTEGER,
    	    wfSnmpTrapEntityDebug
    		INTEGER
        }

    wfSnmpTrapEntityDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A flag to indicate entity instance deletion"
        DEFVAL	{ created }
        ::= { wfSnmpTrapEntityEntry 1 }

    wfSnmpTrapEntityDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable an entity's traps."
        DEFVAL	{ enabled }
        ::= { wfSnmpTrapEntityEntry 2 }

    wfSnmpTrapEntityNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Entity number"
        ::= { wfSnmpTrapEntityEntry 3 }

    wfSnmpTrapEntitySlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number"
        ::= { wfSnmpTrapEntityEntry 4 }

    wfSnmpTrapEntityName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Entity Name"
        ::= { wfSnmpTrapEntityEntry 5 }

    wfSnmpTrapEntityFault OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute controls the entity's fault messages.
                A trap will be generated when this is turned ON."
        DEFVAL	{ off }
        ::= { wfSnmpTrapEntityEntry 6 }

    wfSnmpTrapEntityWarn OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute controls the entity's warning messages.
                A trap will be generated when this is turned ON."
        DEFVAL	{ off }
        ::= { wfSnmpTrapEntityEntry 7 }

    wfSnmpTrapEntityInfo OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute controls the entity's info messages.
                A trap will be generated when this is turned ON."
        DEFVAL	{ off }
        ::= { wfSnmpTrapEntityEntry 8 }

    wfSnmpTrapEntityTrace OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute controls the entity's info messages.
                A trap will be generated when this is turned ON."
        DEFVAL	{ off }
        ::= { wfSnmpTrapEntityEntry 9 }

    wfSnmpTrapEntityDebug OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute controls the entity's debug messages.
                A trap will be generated when this is turned ON. "
        DEFVAL	{ off }
        ::= { wfSnmpTrapEntityEntry 10 }

    wfSnmpTrapEventTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSnmpTrapEventEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table of Event Trap switches ; indexed by entity and event
                number"
        ::= { wfSnmpGroup 6 }

    wfSnmpTrapEventEntry OBJECT-TYPE
        SYNTAX	WfSnmpTrapEventEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An Event Trap Switch Entry"
        INDEX	{ wfSnmpTrapEventEntity,
    		  wfSnmpTrapEventNumber }
        ::= { wfSnmpTrapEventTable 1 }

    WfSnmpTrapEventEntry ::= SEQUENCE {
    	    wfSnmpTrapEventDelete
    		INTEGER,
    	    wfSnmpTrapEventDisable
    		INTEGER,
    	    wfSnmpTrapEventEntity
    		INTEGER,
    	    wfSnmpTrapEventNumber
    		INTEGER,
    	    wfSnmpTrapEventName
    		DisplayString
        }

    wfSnmpTrapEventDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete a trap event switch."
        DEFVAL	{ created }
        ::= { wfSnmpTrapEventEntry 1 }

    wfSnmpTrapEventDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable trap."
        DEFVAL	{ enabled }
        ::= { wfSnmpTrapEventEntry 2 }

    wfSnmpTrapEventEntity OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Entity number"
        ::= { wfSnmpTrapEventEntry 3 }

    wfSnmpTrapEventNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Event number"
        ::= { wfSnmpTrapEventEntry 4 }

    wfSnmpTrapEventName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Entity name of event"
        ::= { wfSnmpTrapEventEntry 5 }

    END  -- Wellfleet-SNMP-MIB
-- @(#)WSCCS m/mibs-span.mib 1.1 8/30/95
Wellfleet-SPAN-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:47:49 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfSpanningTree
        FROM Wellfleet-COMMON-MIB;


    wfBrStp		OBJECT IDENTIFIER ::= { wfSpanningTree 1 }

    wfBrStpBaseDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete the Spanning
                tree."
        DEFVAL	{ created }
        ::= { wfBrStp 1 }

    wfBrStpBaseEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable the spanning
                tree."
        DEFVAL	{ enabled }
        ::= { wfBrStp 2 }

    wfBrStpBaseState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    pres(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the spanning tree."
        DEFVAL	{ down }
        ::= { wfBrStp 3 }

    wfBrStpProtocolSpecification OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unknown(1),
    		    declb100(2),
    		    ieee8021d(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The version of the Spanning Tree protocol being
                run."
        DEFVAL	{ ieee8021d }
        ::= { wfBrStp 4 }

    wfBrStpBridgeID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Spanning Tree Bridge ID assigned to this
                bridge.  It is a 8-octet string.  The first two
                octets make up the bridge priority, and the last
                six are the MAC address of this bridge, which
                is commonly the MAC address of the first port
                on the bridge."
        ::= { wfBrStp 5 }

    wfBrStpTimeSinceTopologyChange OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The time (in hundredths of a second) since the last
                topology change was detected by the bridge."
        ::= { wfBrStp 6 }

    wfBrStpTopChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of topology changes detected by
                this bridge since it was last reset or initialized"
        ::= { wfBrStp 7 }

    wfBrStpDesignatedRoot OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The bridge ID of the root of the spanning tree as
                determined by the Spanning Tree Protocol as
                executed by the bridge. This value is used as
                the Root Identifier parameter in all Configuration
                Bridge PDUs originated by this node. It is a 8-octet
                string.  The first two octets make up the priority,
                and the last six are the MAC address of the designated
                root bridge."
        ::= { wfBrStp 8 }

    wfBrStpRootCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The cost of the path to the root as seen from this
                bridge."
        ::= { wfBrStp 9 }

    wfBrStpRootPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The port identifier of the port which offers the
                lowest cost path from this bridge to the root bridge."
        ::= { wfBrStp 10 }

    wfBrStpMaxAge OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum age of the Spanning Tree Protocol
                information learned from the network on any port
                before it is discarded, in hundredths of a second.
                This represents the value actually in use by the
                bridge."
        ::= { wfBrStp 11 }

    wfBrStpHelloTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The amount of time between transmission of
                configuration BPDUs by this bridge on any port,
                when it is the root of the spanning tree or
                trying to become so, in hundreths of a second.
                This represents the value actually in use by the bridge."
        ::= { wfBrStp 12 }

    wfBrStpHoldTime OBJECT-TYPE
        SYNTAX	INTEGER {
    		    time(100)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value that determines the interval length during
                which no more than two configuration BPDUs shall be
                transmitted by this bridge, in hundredths of a second."
        DEFVAL	{ time }
        ::= { wfBrStp 13 }

    wfBrStpForwardDelay OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The time, in hundredths of a second, that a port
                on this bridge will stay in a transitional state
                (e.g. LISTENING) before moving to the next state
                (e.g. LEARNING).  This value is also used to age
                all dynamic entries in the Forwarding Database
                when a topology changed has been detected and is
                underway. This represents the value actually in
                use by the bridge."
        ::= { wfBrStp 14 }

    wfBrStpBridgeMaxAge OBJECT-TYPE
        SYNTAX	INTEGER(600..4000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The value that all bridges use for MaxAge when
                this bridge acting as the root."
        DEFVAL	{ 2000 }
        ::= { wfBrStp 15 }

    wfBrStpBridgeHelloTime OBJECT-TYPE
        SYNTAX	INTEGER(100..1000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The value that all bridges use for HelloTime when
                this bridge acting as the root."
        DEFVAL	{ 200 }
        ::= { wfBrStp 16 }

    wfBrStpBridgeForwardDelay OBJECT-TYPE
        SYNTAX	INTEGER(400..3000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The value that all bridges use for ForwardDelay when
                this bridge acting as the root."
        DEFVAL	{ 1500 }
        ::= { wfBrStp 17 }

    wfBrStpInterface OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBrStpInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "inst_id[1] = wfBrStpInterfaceCircuit"
        ::= { wfSpanningTree 2 }

    wfBrStpInterfaceEntry OBJECT-TYPE
        SYNTAX	WfBrStpInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfBrStpInterface."
        INDEX	{ wfBrStpInterfaceCircuit }
        ::= { wfBrStpInterface 1 }

    WfBrStpInterfaceEntry ::= SEQUENCE {
    	    wfBrStpInterfaceDelete
    		INTEGER,
    	    wfBrStpInterfaceEnable
    		INTEGER,
    	    wfBrStpInterfaceCircuit
    		INTEGER,
    	    wfBrStpInterfacePriority
    		INTEGER,
    	    wfBrStpInterfaceState
    		INTEGER,
    	    wfBrStpInterfaceMultiCastAddr
    		OCTET STRING,
    	    wfBrStpInterfacePathCost
    		INTEGER,
    	    wfBrStpInterfaceDesignatedRoot
    		OCTET STRING,
    	    wfBrStpInterfaceDesignatedCost
    		INTEGER,
    	    wfBrStpInterfaceDesignatedBridge
    		OCTET STRING,
    	    wfBrStpInterfaceDesignatedPort
    		INTEGER,
    	    wfBrStpInterfaceForwardTransitions
    		Counter,
    	    wfBrStpInterfacePktsXmitd
    		Counter,
    	    wfBrStpInterfacePktsRcvd
    		Counter,
    	    wfBrStpInterfaceTranslationDisable
    		INTEGER
        }

    wfBrStpInterfaceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete an interface
                for the Spanning Tree."
        DEFVAL	{ created }
        ::= { wfBrStpInterfaceEntry 1 }

    wfBrStpInterfaceEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an interface
                for the Spanning Tree."
        DEFVAL	{ enabled }
        ::= { wfBrStpInterfaceEntry 2 }

    wfBrStpInterfaceCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit number on which this interface is defined."
        ::= { wfBrStpInterfaceEntry 3 }

    wfBrStpInterfacePriority OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The value of the priority field which is contained in
                the first octet of the (2 octet long) port ID for this
                circuit. The other octet of the port ID is given by
                wfBrStpInterfaceCircuit."
        DEFVAL	{ 128 }
        ::= { wfBrStpInterfaceEntry 4 }

    wfBrStpInterfaceState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    disabled(1),
    		    blocking(2),
    		    listening(3),
    		    learning(4),
    		    forwarding(5),
    		    broken(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the port as defined by the
                application of the Spanning Tree Protocol."
        DEFVAL	{ disabled }
        ::= { wfBrStpInterfaceEntry 5 }

    wfBrStpInterfaceMultiCastAddr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The MAC address used as the destination for all
                BPDU packets generated out this port."
        ::= { wfBrStpInterfaceEntry 6 }

    wfBrStpInterfacePathCost OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The contribution of this port the the root
                path cost of paths toward the spanning tree
                root which include this port."
        DEFVAL	{ 1 }
        ::= { wfBrStpInterfaceEntry 7 }

    wfBrStpInterfaceDesignatedRoot OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique Bridge Identifier of the Bridge recorded
                as the Root in the Configuration BPDUs transmitted
                by the Designated Bridge for the segment to which this
                port is attached.  Bridge IDs are made up of a
                2-byte priority field, and a 6-byte MAC address."
        ::= { wfBrStpInterfaceEntry 8 }

    wfBrStpInterfaceDesignatedCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The path cost of the Designated Port of the
                segment connected to this port. This value
                is compared to the Root Path Cost field in
                received bridge PDUs."
        ::= { wfBrStpInterfaceEntry 9 }

    wfBrStpInterfaceDesignatedBridge OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Bridge Identifier of the bridge which this
                port considers to be the Designated Bridge for
                this port's segment."
        ::= { wfBrStpInterfaceEntry 10 }

    wfBrStpInterfaceDesignatedPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Port Identifier of the port on the Designated
                Bridge for this port's segment."
        ::= { wfBrStpInterfaceEntry 11 }

    wfBrStpInterfaceForwardTransitions OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times this port has transitioned
                from the Learning State to the Forwarding state."
        ::= { wfBrStpInterfaceEntry 12 }

    wfBrStpInterfacePktsXmitd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of BPDU packets transmitted out this port"
        ::= { wfBrStpInterfaceEntry 13 }

    wfBrStpInterfacePktsRcvd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of BPDU packets received on this port"
        ::= { wfBrStpInterfaceEntry 14 }

    wfBrStpInterfaceTranslationDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable translation bridging parameter. Default is disabled."
        DEFVAL	{ disabled }
        ::= { wfBrStpInterfaceEntry 15 }

    END  -- Wellfleet-SPAN-MIB
-- @(#)WSCCS p/mibs-sr.mib 1.1 8/30/95
Wellfleet-SR-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:47:54 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfBridgeGroup
        FROM Wellfleet-COMMON-MIB;

    wfBrSourceRouting	OBJECT IDENTIFIER ::= { wfBridgeGroup 2 }

    wfBrSr		OBJECT IDENTIFIER ::= { wfBrSourceRouting 1 }

    wfBrSrBaseDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete the bridge."
        DEFVAL	{ created }
        ::= { wfBrSr 1 }

    wfBrSrBaseDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable the bridge."
        DEFVAL	{ enabled }
        ::= { wfBrSr 2 }

    wfBrSrBaseState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the SR bridge."
        DEFVAL	{ down }
        ::= { wfBrSr 3 }

    wfBrSrBaseInternalLanId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The SR bridge internal LAN ID"
        ::= { wfBrSr 4 }

    wfBrSrBaseBridgeId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The SR bridge Id"
        ::= { wfBrSr 5 }

    wfBrSrBaseGroupLanId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The SR bridge Group LAN ID"
        DEFVAL	{ 4095 }
        ::= { wfBrSr 6 }

    wfBrSrBaseIpEncapsDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "IP Encapsulation Enable/Disable"
        DEFVAL	{ disabled }
        ::= { wfBrSr 7 }

    wfBrSrBaseIpNetworkRingId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The ring number of a connected IP network"
        ::= { wfBrSr 8 }

    wfBrSrBaseIpInReceives OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number IP frames received by the network"
        ::= { wfBrSr 9 }

    wfBrSrBaseIpSeqErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number IP frames received by the network"
        ::= { wfBrSr 10 }

    wfBrSrBaseIpMtuSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The mtu size in bytes to be negotiated for
                the IP network.  This size will be converted
                to the LF code in the Route Control field"
        DEFVAL	{ 4562 }
        ::= { wfBrSr 11 }

    wfBrSrBaseNbServerRifCacheDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for the NetBIOS Server rif cache"
        DEFVAL	{ disabled }
        ::= { wfBrSr 12 }

    wfBrSrBaseNbClientRifCacheDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for the NetBIOS Client rif cache"
        DEFVAL	{ disabled }
        ::= { wfBrSr 13 }

    wfBrSrBaseNbDatagramRifCacheDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for the NetBIOS Datagram rif cache"
        DEFVAL	{ disabled }
        ::= { wfBrSr 14 }

    wfBrSrBaseNb15CharacterDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for 15-character NetBIOS name caching"
        DEFVAL	{ disabled }
        ::= { wfBrSr 15 }

    wfBrSrBaseNbRifMibDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable creation of MIB instances for each cached name"
        DEFVAL	{ enabled }
        ::= { wfBrSr 16 }

    wfBrSrBaseNbMaximumRifEntries OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of entries allowed in the NetBIOS server/client rif cache"
        DEFVAL	{ 100 }
        ::= { wfBrSr 17 }

    wfBrSrBaseNbCurrentRifEntries OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of entries currently in the NetBIOS server/client cache"
        ::= { wfBrSr 18 }

    wfBrSrBaseNbRifAgeTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The age in seconds when inactive NetBIOS names will be aged out of the rif cache"
        DEFVAL	{ 300 }
        ::= { wfBrSr 19 }

    wfBrSrBaseNbRifHashEntries OBJECT-TYPE
        SYNTAX	INTEGER(253..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of entries in the RIF hash table"
        DEFVAL	{ 253 }
        ::= { wfBrSr 20 }

    wfBrSrBaseNbRifCacheHits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times the NetBIOS rif cache has been used"
        ::= { wfBrSr 21 }

    wfBrSrBaseNbRifCacheMisses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of failed lookups on the NetBIOS rif cache"
        ::= { wfBrSr 22 }

    wfBrSrBaseNbRifDroppedFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of NB frames dropped because the rif stored in the rif cache
                indicated that this frame traveled a sub-optimal route"
        ::= { wfBrSr 23 }

    wfBrSrBaseNbQueryCacheDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for the NetBIOS Query cache"
        DEFVAL	{ disabled }
        ::= { wfBrSr 24 }

    wfBrSrBaseNbQueryMibDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable creation of MIB instances for each cached query"
        DEFVAL	{ enabled }
        ::= { wfBrSr 25 }

    wfBrSrBaseNbMaximumQueryEntries OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of entries allowed in the NetBIOS query cache"
        DEFVAL	{ 100 }
        ::= { wfBrSr 26 }

    wfBrSrBaseNbCurrentQueryEntries OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of entries currently in the NetBIOS query cache"
        ::= { wfBrSr 27 }

    wfBrSrBaseNbQueryAgeTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The age in seconds when NetBIOS queries will be aged out of the query cache"
        DEFVAL	{ 15 }
        ::= { wfBrSr 28 }

    wfBrSrBaseNbQueryFilteredFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of duplicate NetBIOS queries filtered"
        ::= { wfBrSr 29 }

    wfBrSrBaseStpEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Spanning Tree Enable/Disable"
        DEFVAL	{ disabled }
        ::= { wfBrSr 30 }

    wfBrSrBaseStpState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    pres(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Spanning Tree State"
        DEFVAL	{ down }
        ::= { wfBrSr 31 }

    wfBrSrBaseStpProtocolSpecification OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unknown(1),
    		    declb100(2),
    		    ieee8021d(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The version of the Spanning Tree protocol being run"
        DEFVAL	{ ieee8021d }
        ::= { wfBrSr 32 }

    wfBrSrBaseStpBridgeID OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Spanning Tree Bridge ID assigned to this
                bridge. It is a 8-octet string. The first two
                octets make up the bridge priority, and the last
                six are the MAC address of this bridge, which
                is commonly the MAC address of the first port
                on the bridge."
        ::= { wfBrSr 33 }

    wfBrSrBaseStpTimeSinceTopologyChange OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The time (in hundredths of a second) since the last
                topology change was detected by the bridge."
        ::= { wfBrSr 34 }

    wfBrSrBaseStpTopChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of topology changes detected by
                this bridge since it was last reset or initialized"
        ::= { wfBrSr 35 }

    wfBrSrBaseStpDesignatedRoot OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The bridge ID of the root of the Spanning Tree as
                determined by the Spanning Tree Protocol as
                executed by the bridge. This value is used as
                the Root Identifier parameter in all Configuration
                Bridge PDUs originated by this node. It is a 8-octet
                string. The first two octets make up the priority,
                and the last six are the MAC address of the designated
                root bridge."
        ::= { wfBrSr 36 }

    wfBrSrBaseStpRootCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The cost of the path to the root as seen from this
                bridge."
        ::= { wfBrSr 37 }

    wfBrSrBaseStpRootPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The port identifier of the port which offers the
                lowest cost path from this bridge to the root bridge."
        ::= { wfBrSr 38 }

    wfBrSrBaseStpMaxAge OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum age of the Spanning Tree Protocol
                information learned from the network on any port
                before it is discarded, in hundredths of a second.
                This represents the value actually in use by the
                bridge."
        ::= { wfBrSr 39 }

    wfBrSrBaseStpHelloTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The amount of time between transmission of
                configuration BPDUs by this bridge on any port,
                when it is the root of the Spanning Tree or
                trying to become so, in hundreths of a second.
                This represents the value actually in use by the bridge."
        ::= { wfBrSr 40 }

    wfBrSrBaseStpHoldTime OBJECT-TYPE
        SYNTAX	INTEGER {
    		    time(100)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value that determines the interval length during
                which no more than two configuration BPDUs shall be
                transmitted by this bridge, in hundredths of a second."
        DEFVAL	{ time }
        ::= { wfBrSr 41 }

    wfBrSrBaseStpForwardDelay OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The time, in hundredths of a second, that a port
                on this bridge will stay in a transitional state
                (e.g. LISTENING) before moving to the next state
                (e.g. LEARNING). This value is also used to age
                all dynamic entries in the Forwarding Database
                when a topology changed has been detected and is
                underway. This represents the value actually in
                use by the bridge."
        ::= { wfBrSr 42 }

    wfBrSrBaseStpBridgeMaxAge OBJECT-TYPE
        SYNTAX	INTEGER(600..4000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The value that all bridges use for MaxAge when
                this bridge acting as the root."
        DEFVAL	{ 2000 }
        ::= { wfBrSr 43 }

    wfBrSrBaseStpBridgeHelloTime OBJECT-TYPE
        SYNTAX	INTEGER(100..1000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The value that all bridges use for HelloTime when
                this bridge acting as the root."
        DEFVAL	{ 200 }
        ::= { wfBrSr 44 }

    wfBrSrBaseStpBridgeForwardDelay OBJECT-TYPE
        SYNTAX	INTEGER(400..3000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The value that all bridges use for Forward Delay when
                this bridge acting as the root."
        DEFVAL	{ 1500 }
        ::= { wfBrSr 45 }

    wfBrSrBaseNbNameQueryCacheDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for the NetBIOS Name Query cache"
        DEFVAL	{ disabled }
        ::= { wfBrSr 46 }

    wfBrSrInterfaceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBrSrInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table that contains information about every
                interface that is associated with this
                source routing bridge.
                inst_id[1] = wfBrSrInterfaceCircuit"
        ::= { wfBrSourceRouting 2 }

    wfBrSrInterfaceEntry OBJECT-TYPE
        SYNTAX	WfBrSrInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfBrSrInterface."
        INDEX	{ wfBrSrInterfaceCircuit }
        ::= { wfBrSrInterfaceTable 1 }

    WfBrSrInterfaceEntry ::= SEQUENCE {
    	    wfBrSrInterfaceDelete
    		INTEGER,
    	    wfBrSrInterfaceDisable
    		INTEGER,
    	    wfBrSrInterfaceState
    		INTEGER,
    	    wfBrSrInterfaceCircuit
    		INTEGER,
    	    wfBrSrInterfaceMaxRds
    		INTEGER,
    	    wfBrSrInterfaceRing
    		INTEGER,
    	    wfBrSrInterfaceBlockOutSte
    		INTEGER,
    	    wfBrSrInterfaceBlockInSte
    		INTEGER,
    	    wfBrSrInterfaceBlockIp
    		INTEGER,
    	    wfBrSrInterfaceIpAddress
    		IpAddress,
    	    wfBrSrInterfaceInFrames
    		Counter,
    	    wfBrSrInterfaceOutFrames
    		Counter,
    	    wfBrSrInterfaceOutIpFrames
    		Counter,
    	    wfBrSrInterfaceDropInvalidRcs
    		Counter,
    	    wfBrSrInterfaceDropInvalidRings
    		Counter,
    	    wfBrSrInterfaceDropSrfs
    		Counter,
    	    wfBrSrInterfaceNbServerRifCacheDisable
    		INTEGER,
    	    wfBrSrInterfaceNbClientRifCacheDisable
    		INTEGER,
    	    wfBrSrInterfaceNbDatagramRifCacheDisable
    		INTEGER,
    	    wfBrSrInterfaceNbQueryCacheDisable
    		INTEGER,
    	    wfBrSrInterfaceXbInFrames
    		Counter,
    	    wfBrSrInterfaceXbDropFrames
    		Counter,
    	    wfBrSrInterfaceFrBcastDlci
    		INTEGER,
    	    wfBrSrInterfaceEncapsFormat
    		INTEGER,
    	    wfBrSrInterfaceStpEnable
    		INTEGER,
    	    wfBrSrInterfaceStpState
    		INTEGER,
    	    wfBrSrInterfaceStpMultiCastAddr
    		OCTET STRING,
    	    wfBrSrInterfaceStpPathCost
    		INTEGER,
    	    wfBrSrInterfaceStpDesignatedRoot
    		OCTET STRING,
    	    wfBrSrInterfaceStpDesignatedCost
    		INTEGER,
    	    wfBrSrInterfaceStpDesignatedBridge
    		OCTET STRING,
    	    wfBrSrInterfaceStpDesignatedPort
    		INTEGER,
    	    wfBrSrInterfaceStpForwardTransitions
    		Counter,
    	    wfBrSrInterfaceStpPktsXmitd
    		Counter,
    	    wfBrSrInterfaceStpPktsRcvd
    		Counter,
    	    wfBrSrInterfaceStpTranslationDisable
    		INTEGER,
    	    wfBrSrInterfaceMaxLfField
    		INTEGER
        }

    wfBrSrInterfaceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete an interface."
        DEFVAL	{ created }
        ::= { wfBrSrInterfaceEntry 1 }

    wfBrSrInterfaceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an interface."
        DEFVAL	{ enabled }
        ::= { wfBrSrInterfaceEntry 2 }

    wfBrSrInterfaceState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the interface."
        DEFVAL	{ down }
        ::= { wfBrSrInterfaceEntry 3 }

    wfBrSrInterfaceCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit that this interface runs over."
        ::= { wfBrSrInterfaceEntry 4 }

    wfBrSrInterfaceMaxRds OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of RDs permitted in incoming
                explorer frames"
        DEFVAL	{ 7 }
        ::= { wfBrSrInterfaceEntry 5 }

    wfBrSrInterfaceRing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The ring number of the source routing circuit.
                Even non-ring circuit need a ring number if
                it is to do source routing"
        ::= { wfBrSrInterfaceEntry 6 }

    wfBrSrInterfaceBlockOutSte OBJECT-TYPE
        SYNTAX	INTEGER {
    		    block(1),
    		    accept(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables blocking of outbound STEs"
        DEFVAL	{ accept }
        ::= { wfBrSrInterfaceEntry 7 }

    wfBrSrInterfaceBlockInSte OBJECT-TYPE
        SYNTAX	INTEGER {
    		    block(1),
    		    accept(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables blocking of inbound STEs"
        DEFVAL	{ accept }
        ::= { wfBrSrInterfaceEntry 8 }

    wfBrSrInterfaceBlockIp OBJECT-TYPE
        SYNTAX	INTEGER {
    		    block(1),
    		    accept(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables blocking of inbound explorers that have
                have already been through the IP network"
        DEFVAL	{ accept }
        ::= { wfBrSrInterfaceEntry 9 }

    wfBrSrInterfaceIpAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Ip address for this ring. This should match the
                the IP address in the IP MIB"
        ::= { wfBrSrInterfaceEntry 10 }

    wfBrSrInterfaceInFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of frames that have been received by
                this interface from its circuit."
        ::= { wfBrSrInterfaceEntry 11 }

    wfBrSrInterfaceOutFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of frames that have been transmitted
                by this interface"
        ::= { wfBrSrInterfaceEntry 12 }

    wfBrSrInterfaceOutIpFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of frames that have been transmitted
                by this interface to the IP network"
        ::= { wfBrSrInterfaceEntry 13 }

    wfBrSrInterfaceDropInvalidRcs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of frames received which were
                discarded because of a bad Route Control field"
        ::= { wfBrSrInterfaceEntry 14 }

    wfBrSrInterfaceDropInvalidRings OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of frames received which were
                discarded because of a invalid incoming ring"
        ::= { wfBrSrInterfaceEntry 15 }

    wfBrSrInterfaceDropSrfs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of specifically routed frames received which were
                discarded due to filtering or no next circuit"
        ::= { wfBrSrInterfaceEntry 16 }

    wfBrSrInterfaceNbServerRifCacheDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for the NetBIOS Server cache"
        DEFVAL	{ enabled }
        ::= { wfBrSrInterfaceEntry 17 }

    wfBrSrInterfaceNbClientRifCacheDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for the NetBIOS Client cache"
        DEFVAL	{ enabled }
        ::= { wfBrSrInterfaceEntry 18 }

    wfBrSrInterfaceNbDatagramRifCacheDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for the NetBIOS Datagram cache"
        DEFVAL	{ enabled }
        ::= { wfBrSrInterfaceEntry 19 }

    wfBrSrInterfaceNbQueryCacheDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for the NetBIOS Query cache"
        DEFVAL	{ enabled }
        ::= { wfBrSrInterfaceEntry 20 }

    wfBrSrInterfaceXbInFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of frames that have been received
                by this interface"
        ::= { wfBrSrInterfaceEntry 21 }

    wfBrSrInterfaceXbDropFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of frames that were dropped because they
                were too large"
        ::= { wfBrSrInterfaceEntry 22 }

    wfBrSrInterfaceFrBcastDlci OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Frame Relay broadcast dlci"
        DEFVAL	{ 4294967295 }
        ::= { wfBrSrInterfaceEntry 23 }

    wfBrSrInterfaceEncapsFormat OBJECT-TYPE
        SYNTAX	INTEGER {
    		    proprietary(1),
    		    standard(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Non-Token Ring encapsulation format"
        DEFVAL	{ proprietary }
        ::= { wfBrSrInterfaceEntry 24 }

    wfBrSrInterfaceStpEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an interface
                for the Spanning Tree."
        DEFVAL	{ disabled }
        ::= { wfBrSrInterfaceEntry 25 }

    wfBrSrInterfaceStpState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    disabled(1),
    		    blocking(2),
    		    listening(3),
    		    learning(4),
    		    forwarding(5),
    		    broken(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the port as defined by the
                application of the Spanning Tree Protocol."
        DEFVAL	{ disabled }
        ::= { wfBrSrInterfaceEntry 26 }

    wfBrSrInterfaceStpMultiCastAddr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The MAC address used as the destination for all
                BPDU packets generated out this port."
        ::= { wfBrSrInterfaceEntry 27 }

    wfBrSrInterfaceStpPathCost OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The contribution of this port the root
                path cost of paths toward the Spanning Tree
                root which include this port."
        DEFVAL	{ 1 }
        ::= { wfBrSrInterfaceEntry 28 }

    wfBrSrInterfaceStpDesignatedRoot OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The unique Bridge Identifier of the Bridge recorded
                as the Root in the Configuration BPDUs transmitted
                by the Designated Bridge for the segment to which this
                port is attached. Bridge IDs are made up of a
                2-byte priority field, and a 6-byte MAC address."
        ::= { wfBrSrInterfaceEntry 29 }

    wfBrSrInterfaceStpDesignatedCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The path cost of the Designated Port of the
                segment connected to this port. This value
                is compared to the Root Path Cost field in
                received bridge PDUs."
        ::= { wfBrSrInterfaceEntry 30 }

    wfBrSrInterfaceStpDesignatedBridge OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Bridge Identifier of the bridge which this
                port considers to be the Designated Bridge for
                this port's segment."
        ::= { wfBrSrInterfaceEntry 31 }

    wfBrSrInterfaceStpDesignatedPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Port Identifier of the port on the Designated
                Bridge for this port's segment."
        ::= { wfBrSrInterfaceEntry 32 }

    wfBrSrInterfaceStpForwardTransitions OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times this port has transitioned
                from the Learning State to the Forwarding state."
        ::= { wfBrSrInterfaceEntry 33 }

    wfBrSrInterfaceStpPktsXmitd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of BPDU packets transmitted out this port"
        ::= { wfBrSrInterfaceEntry 34 }

    wfBrSrInterfaceStpPktsRcvd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of BPDU packets transmitted out this port"
        ::= { wfBrSrInterfaceEntry 35 }

    wfBrSrInterfaceStpTranslationDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable translation bridging parameter. Default is disabled."
        DEFVAL	{ disabled }
        ::= { wfBrSrInterfaceEntry 36 }

    wfBrSrInterfaceMaxLfField OBJECT-TYPE
        SYNTAX	INTEGER {
    		    sr1500(1),
    		    sr2052(2),
    		    sr4472(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum size of the Lf Field. This was added to restrict
                the packet size when using FDDI.

                  Note: The BR_SR_INTERFACE_SR4472 setting is for IBM use only.
                    This packet size is not normally supported on the FDDI.
                    The default setting is for IBM. This will need to be set
                    to 1 or 2 for all other vendors."
        DEFVAL	{ sr4472 }
        ::= { wfBrSrInterfaceEntry 37 }

    wfBrSrBridgeTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBrSrBridgeEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table that contains the bridge numbers used
                by Wellfleet bridges in a source routing network
                inst_id[2] = wfBrSrBridgeId"
        ::= { wfBrSourceRouting 3 }

    wfBrSrBridgeEntry OBJECT-TYPE
        SYNTAX	WfBrSrBridgeEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfBrSrBridge."
        INDEX	{ wfBrSrBridgeId }
        ::= { wfBrSrBridgeTable 1 }

    WfBrSrBridgeEntry ::= SEQUENCE {
    	    wfBrSrBridgeDelete
    		INTEGER,
    	    wfBrSrBridgeId
    		INTEGER
        }

    wfBrSrBridgeDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this object in
                order to create/delete an IP encapsulation peer record."
        DEFVAL	{ created }
        ::= { wfBrSrBridgeEntry 1 }

    wfBrSrBridgeId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Bridge Id reserved for Wellfleet bridges"
        ::= { wfBrSrBridgeEntry 2 }

    wfBrSrIpExplorerTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBrSrIpExplorerEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table that contains the table of IP addresses
                to which source routing explorers should be sent
                inst_id[2] = wfBrSrIpExplorerAddress"
        ::= { wfBrSourceRouting 4 }

    wfBrSrIpExplorerEntry OBJECT-TYPE
        SYNTAX	WfBrSrIpExplorerEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfBrSrIpExplorer."
        INDEX	{ wfBrSrIpExplorerAddr }
        ::= { wfBrSrIpExplorerTable 1 }

    WfBrSrIpExplorerEntry ::= SEQUENCE {
    	    wfBrSrIpExplorerDelete
    		INTEGER,
    	    wfBrSrIpExplorerAddr
    		IpAddress
        }

    wfBrSrIpExplorerDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this object in
                order to create/delete an IP encapsulation peer record."
        DEFVAL	{ created }
        ::= { wfBrSrIpExplorerEntry 1 }

    wfBrSrIpExplorerAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP address of this encapsulation peer."
        ::= { wfBrSrIpExplorerEntry 2 }

    wfBrSrIpEncapsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBrSrIpEncapsEntry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "A table that contains information about IP
                Encapsulation ring-to-IP Address mappings.
                This information is used to make the 'next
                ring' IP Address decision.
                inst = wfBrSrIpEncapsRing"
        ::= { wfBrSourceRouting 5 }

    wfBrSrIpEncapsEntry OBJECT-TYPE
        SYNTAX	WfBrSrIpEncapsEntry
        ACCESS	not-accessible
        STATUS	obsolete
        DESCRIPTION
                "An entry in the wfBrSrIpEncapsTable."
        INDEX	{ wfBrSrIpEncapsRing }
        ::= { wfBrSrIpEncapsTable 1 }

    WfBrSrIpEncapsEntry ::= SEQUENCE {
    	    wfBrSrIpEncapsRing
    		INTEGER,
    	    wfBrSrIpEncapsIpAddress
    		IpAddress,
    	    wfBrSrIpEncapsStatus
    		INTEGER
        }

    wfBrSrIpEncapsRing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The remote ring number for which we have a ring to
                IP Address mapping."
        ::= { wfBrSrIpEncapsEntry 1 }

    wfBrSrIpEncapsIpAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The IP Address of the Wellfleet IP Encapsulation
                peer to which this ring is connected."
        ::= { wfBrSrIpEncapsEntry 2 }

    wfBrSrIpEncapsStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    learned(3)
    		}
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "The status of this entry. The meanings of the
                values are:
                  learned(3) : the value of the corresponding
                              instance of wfBrSrIpEncapsRing was
                              learned, and is being used."
        DEFVAL	{ learned }
        ::= { wfBrSrIpEncapsEntry 3 }

    wfBrSrTrafficFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBrSrTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "SR Bridge Traffic Filters"
        ::= { wfBrSourceRouting 6 }

    wfBrSrTrafficFilterEntry OBJECT-TYPE
        SYNTAX	WfBrSrTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in WfBrSrTrafficFilterTable."
        INDEX	{ wfBrSrTrafficFilterCircuit,
    		  wfBrSrTrafficFilterRuleNumber,
    		  wfBrSrTrafficFilterFragment }
        ::= { wfBrSrTrafficFilterTable 1 }

    WfBrSrTrafficFilterEntry ::= SEQUENCE {
    	    wfBrSrTrafficFilterCreate
    		INTEGER,
    	    wfBrSrTrafficFilterEnable
    		INTEGER,
    	    wfBrSrTrafficFilterStatus
    		INTEGER,
    	    wfBrSrTrafficFilterCounter
    		Counter,
    	    wfBrSrTrafficFilterDefinition
    		OCTET STRING,
    	    wfBrSrTrafficFilterReserved
    		INTEGER,
    	    wfBrSrTrafficFilterCircuit
    		INTEGER,
    	    wfBrSrTrafficFilterRuleNumber
    		INTEGER,
    	    wfBrSrTrafficFilterFragment
    		INTEGER,
    	    wfBrSrTrafficFilterName
    		DisplayString
        }

    wfBrSrTrafficFilterCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the existence of the traffic filter rule:
                created - traffic filter exists
                delete - traffic filter does not exist and can be deleted."
        DEFVAL	{ created }
        ::= { wfBrSrTrafficFilterEntry 1 }

    wfBrSrTrafficFilterEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether or not the traffic filter rule should be used:
                enabled - activate the rule.
                disabled - inactivate the rule."
        DEFVAL	{ enabled }
        ::= { wfBrSrTrafficFilterEntry 2 }

    wfBrSrTrafficFilterStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    error(2),
    		    inactive(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines the current status of the traffic filter:
                inactive - the rule is not in use.
                active - the rule is being used.
                error - the application detected an error in the rule."
        DEFVAL	{ inactive }
        ::= { wfBrSrTrafficFilterEntry 3 }

    wfBrSrTrafficFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets that have
                matched this rule."
        ::= { wfBrSrTrafficFilterEntry 4 }

    wfBrSrTrafficFilterDefinition OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The filter rule definition."
        ::= { wfBrSrTrafficFilterEntry 5 }

    wfBrSrTrafficFilterReserved OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reserved field."
        ::= { wfBrSrTrafficFilterEntry 6 }

    wfBrSrTrafficFilterCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ID of the Bridge Circuit to which the
                filter is applied."
        ::= { wfBrSrTrafficFilterEntry 7 }

    wfBrSrTrafficFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ID for the rule."
        ::= { wfBrSrTrafficFilterEntry 8 }

    wfBrSrTrafficFilterFragment OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fragment number - for large rules."
        ::= { wfBrSrTrafficFilterEntry 9 }

    wfBrSrTrafficFilterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "name of the rule number"
        ::= { wfBrSrTrafficFilterEntry 10 }

    wfBrSrEsRifTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBrSrEsRifEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table that contains the currently active
                RIFs in use by Router End Station Support
                inst_id[9] = wfBrSrIpExplorerAddress"
        ::= { wfBrSourceRouting 7 }

    wfBrSrEsRifEntry OBJECT-TYPE
        SYNTAX	WfBrSrEsRifEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in wfBrSrEsRif."
        INDEX	{ wfBrSrEsRifCircuit,
    		  wfBrSrEsRifProtocol,
    		  wfBrSrEsRifMacAddr }
        ::= { wfBrSrEsRifTable 1 }

    WfBrSrEsRifEntry ::= SEQUENCE {
    	    wfBrSrEsRifCircuit
    		INTEGER,
    	    wfBrSrEsRifProtocol
    		OCTET STRING,
    	    wfBrSrEsRifMacAddr
    		OCTET STRING,
    	    wfBrSrEsRifRoute
    		OCTET STRING
        }

    wfBrSrEsRifCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit on which this entry was learned"
        ::= { wfBrSrEsRifEntry 1 }

    wfBrSrEsRifProtocol OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The protocol in use at end station corresponding
                to this RIF.  If the protocol uses LLC encapsulation
                this field will contain the DSAP/SSAP pair.  If a
                SNAP encapsulation is used, it will contain the
                protocol type."
        ::= { wfBrSrEsRifEntry 2 }

    wfBrSrEsRifMacAddr OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Mac address of the end station corresponding
                to this RIF."
        ::= { wfBrSrEsRifEntry 3 }

    wfBrSrEsRifRoute OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The route contained in the RIF field"
        ::= { wfBrSrEsRifEntry 4 }

    wfBrSrNbRifTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBrSrNbRifEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The NetBIOS server/client rif cache table"
        ::= { wfBrSourceRouting 8 }

    wfBrSrNbRifEntry OBJECT-TYPE
        SYNTAX	WfBrSrNbRifEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NetBIOS rif cache table"
        INDEX	{ wfBrSrNbName }
        ::= { wfBrSrNbRifTable 1 }

    WfBrSrNbRifEntry ::= SEQUENCE {
    	    wfBrSrNbName
    		OCTET STRING,
    	    wfBrSrNbMacAddress
    		OCTET STRING,
    	    wfBrSrNbStatic
    		INTEGER,
    	    wfBrSrNbRif
    		OCTET STRING,
    	    wfBrSrNbRifCacheHits
    		Counter
        }

    wfBrSrNbName OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (16))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The NetBIOS name of this station. It is a maximum of 16 characters.
                Names that are shorter are padded with ASCII spaces - 0x20"
        ::= { wfBrSrNbRifEntry 1 }

    wfBrSrNbMacAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Mac Address of the NetBIOS station"
        ::= { wfBrSrNbRifEntry 2 }

    wfBrSrNbStatic OBJECT-TYPE
        SYNTAX	INTEGER {
    		    static(1),
    		    learned(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether this entry is a static or learned entry"
        ::= { wfBrSrNbRifEntry 3 }

    wfBrSrNbRif OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Cached RIF to get to this station"
        ::= { wfBrSrNbRifEntry 4 }

    wfBrSrNbRifCacheHits OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of AREs that have been converted by this station"
        ::= { wfBrSrNbRifEntry 5 }

    wfBrSrNbQueryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBrSrNbQueryEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The NetBIOS Query cache table"
        ::= { wfBrSourceRouting 9 }

    wfBrSrNbQueryEntry OBJECT-TYPE
        SYNTAX	WfBrSrNbQueryEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NetBIOS Query cache table"
        INDEX	{ wfBrSrNbQueryMacAddress,
    		  wfBrSrNbRspCorrelator }
        ::= { wfBrSrNbQueryTable 1 }

    WfBrSrNbQueryEntry ::= SEQUENCE {
    	    wfBrSrNbQueryMacAddress
    		OCTET STRING,
    	    wfBrSrNbRspCorrelator
    		INTEGER,
    	    wfBrSrNbQuery
    		OCTET STRING,
    	    wfBrSrNbQueryFilteredFrames
    		Counter
        }

    wfBrSrNbQueryMacAddress OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The MAC Address of the NetBIOS station"
        ::= { wfBrSrNbQueryEntry 1 }

    wfBrSrNbRspCorrelator OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "NetBIOS query sequence number"
        ::= { wfBrSrNbQueryEntry 2 }

    wfBrSrNbQuery OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Cached NetBIOS query"
        ::= { wfBrSrNbQueryEntry 3 }

    wfBrSrNbQueryFilteredFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of identical Queries which have been filtered"
        ::= { wfBrSrNbQueryEntry 4 }

    wfBrSrNbStaticTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBrSrNbStaticEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The NetBIOS static server/client entry table"
        ::= { wfBrSourceRouting 10 }

    wfBrSrNbStaticEntry OBJECT-TYPE
        SYNTAX	WfBrSrNbStaticEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the NetBIOS static entry table"
        INDEX	{ wfBrSrNbStaticName }
        ::= { wfBrSrNbStaticTable 1 }

    WfBrSrNbStaticEntry ::= SEQUENCE {
    	    wfBrSrNbStaticDelete
    		INTEGER,
    	    wfBrSrNbStaticDisable
    		INTEGER,
    	    wfBrSrNbStaticState
    		INTEGER,
    	    wfBrSrNbStaticName
    		OCTET STRING,
    	    wfBrSrNbStaticMacAddress
    		OCTET STRING,
    	    wfBrSrNbStaticRif
    		OCTET STRING
        }

    wfBrSrNbStaticDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter for the NetBIOS static entry"
        DEFVAL	{ created }
        ::= { wfBrSrNbStaticEntry 1 }

    wfBrSrNbStaticDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter for the NetBIOS static entry"
        DEFVAL	{ enabled }
        ::= { wfBrSrNbStaticEntry 2 }

    wfBrSrNbStaticState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    valid(1),
    		    invalid(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The state of this NetBIOS static entry"
        DEFVAL	{ invalid }
        ::= { wfBrSrNbStaticEntry 3 }

    wfBrSrNbStaticName OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (16))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The NetBIOS name of this station. It is a maximum of 16 characters.
                Names that are shorter are padded with ASCII spaces - 0x20"
        ::= { wfBrSrNbStaticEntry 4 }

    wfBrSrNbStaticMacAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Mac Address of the NetBIOS station"
        ::= { wfBrSrNbStaticEntry 5 }

    wfBrSrNbStaticRif OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The RIF to get to this station"
        ::= { wfBrSrNbStaticEntry 6 }

    wfBrXb		OBJECT IDENTIFIER ::= { wfBrSourceRouting 11 }

    wfBrXbBaseDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete the bridge."
        DEFVAL	{ created }
        ::= { wfBrXb 1 }

    wfBrXbBaseDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable the bridge."
        DEFVAL	{ enabled }
        ::= { wfBrXb 2 }

    wfBrXbBaseEthernetLanId OBJECT-TYPE
        SYNTAX	INTEGER(1..4095)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Ethernet pseudo 'Ring' number"
        ::= { wfBrXb 3 }

    wfBrXbBaseMaxRifEntries OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of entries in the token-ring station address/RIF database"
        DEFVAL	{ 255 }
        ::= { wfBrXb 4 }

    wfBrXbBaseCurrentRifEntries OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current number of entries in the token-ring station address/RIF database"
        ::= { wfBrXb 5 }

    wfBrXbBaseAgeTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Aging values for token-ring and Ethernet/802.3 MAC address databases"
        DEFVAL	{ 300 }
        ::= { wfBrXb 6 }

    wfBrXbBaseBcastAddressConversionDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/disable conversion from Ethernet Broadcast address to Token-ring
                broadcast address"
        DEFVAL	{ enabled }
        ::= { wfBrXb 7 }

    wfBrXbBaseDefaultMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ethernet(1),
    		    ieee8023(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "default mode indicates whether nodes should be assumed to be Ethernet version 2 or 802.3 nodes,
                if no other information is available. This parameter applies to Ethernet/802.3 interfaces only."
        DEFVAL	{ ethernet }
        ::= { wfBrXb 8 }

    wfBrXbBaseBcastMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    are(1),
    		    ste(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "this parameter governs whether frames to be broadcast on the token-ring interface (because the destination address was not recognized) should go out as All-routes-explorers or as Spanning-tree-explorers. This parameter applies to token-ring interfaces only."
        DEFVAL	{ ste }
        ::= { wfBrXb 9 }

    wfBrXbBaseSaps OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "this parameter is the list of SAPS to bridge"
        ::= { wfBrXb 10 }

    wfBrXbAddressMapTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBrXbAddressMapEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "users may configure specific Functional<->Multicast address conversions
                or specific MAC address conversions to be performed. This table keeps
                these mappings (on a per-system basis)."
        ::= { wfBrSourceRouting 12 }

    wfBrXbAddressMapEntry OBJECT-TYPE
        SYNTAX	WfBrXbAddressMapEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the MAC address mapping table"
        INDEX	{ wfBrXbAddressMapEthernetAddress }
        ::= { wfBrXbAddressMapTable 1 }

    WfBrXbAddressMapEntry ::= SEQUENCE {
    	    wfBrXbAddressMapDelete
    		INTEGER,
    	    wfBrXbAddressMapEthernetAddress
    		OCTET STRING,
    	    wfBrXbAddressMapTokenRingAddress
    		OCTET STRING
        }

    wfBrXbAddressMapDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter for the station type static entry"
        DEFVAL	{ created }
        ::= { wfBrXbAddressMapEntry 1 }

    wfBrXbAddressMapEthernetAddress OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ethernet MAC Address of the station"
        ::= { wfBrXbAddressMapEntry 2 }

    wfBrXbAddressMapTokenRingAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The token-ring MAC Address of the station"
        ::= { wfBrXbAddressMapEntry 3 }

    wfBrXbRifTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBrXbRifEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The token-ring RIF cache table"
        ::= { wfBrSourceRouting 13 }

    wfBrXbRifEntry OBJECT-TYPE
        SYNTAX	WfBrXbRifEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the token-ring RIF cache table"
        INDEX	{ wfBrXbRifMacAddress }
        ::= { wfBrXbRifTable 1 }

    WfBrXbRifEntry ::= SEQUENCE {
    	    wfBrXbRifMacAddress
    		OCTET STRING,
    	    wfBrXbRifField
    		OCTET STRING
        }

    wfBrXbRifMacAddress OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Mac Address of the token-ring station"
        ::= { wfBrXbRifEntry 1 }

    wfBrXbRifField OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The RIF to get to this station"
        ::= { wfBrXbRifEntry 2 }

    wfBrXbStationTypeTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBrXbStationTypeEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The station type (Ethernet or 802.3) static entry table"
        ::= { wfBrSourceRouting 14 }

    wfBrXbStationTypeEntry OBJECT-TYPE
        SYNTAX	WfBrXbStationTypeEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the station type static entry table"
        INDEX	{ wfBrXbStationTypeEthernetAddress }
        ::= { wfBrXbStationTypeTable 1 }

    WfBrXbStationTypeEntry ::= SEQUENCE {
    	    wfBrXbStationTypeDelete
    		INTEGER,
    	    wfBrXbStationTypeEthernetAddress
    		OCTET STRING,
    	    wfBrXbStationTypeIndicator
    		INTEGER
        }

    wfBrXbStationTypeDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter for the station type static entry"
        DEFVAL	{ created }
        ::= { wfBrXbStationTypeEntry 1 }

    wfBrXbStationTypeEthernetAddress OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Mac Address of the station"
        ::= { wfBrXbStationTypeEntry 2 }

    wfBrXbStationTypeIndicator OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ethernet(1),
    		    ieee8023(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The station type (Ethernet or 802.3)"
        ::= { wfBrXbStationTypeEntry 3 }

    wfBrSrIpEncapsRBTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfBrSrIpEncapsRBEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table that contains information about IP
                Encapsulation ring/bridge-to-IP Address mappings.
                This information is used to make the 'next
                ring/bridge' IP Address decision.
                inst = wfBrSrIpEncapsRing.wfBrSrIpEncapsBridge"
        ::= { wfBrSourceRouting 15 }

    wfBrSrIpEncapsRBEntry OBJECT-TYPE
        SYNTAX	WfBrSrIpEncapsRBEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the wfBrSrIpEncapsRBTable."
        INDEX	{ wfBrSrIpEncapsRBRing,
    		  wfBrSrIpEncapsRBBridge }
        ::= { wfBrSrIpEncapsRBTable 1 }

    WfBrSrIpEncapsRBEntry ::= SEQUENCE {
    	    wfBrSrIpEncapsRBRing
    		INTEGER,
    	    wfBrSrIpEncapsRBBridge
    		INTEGER,
    	    wfBrSrIpEncapsRBIpAddress
    		IpAddress,
    	    wfBrSrIpEncapsRBStatus
    		INTEGER
        }

    wfBrSrIpEncapsRBRing OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The remote ring number for which we have a ring-bridge to
                IP Address mapping."
        ::= { wfBrSrIpEncapsRBEntry 1 }

    wfBrSrIpEncapsRBBridge OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Bridge ID for which we have a ring-bridge to
                IP Address mapping."
        ::= { wfBrSrIpEncapsRBEntry 2 }

    wfBrSrIpEncapsRBIpAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The IP Address of the Wellfleet IP Encapsulation
                peer to which this ring-bridge is connected."
        ::= { wfBrSrIpEncapsRBEntry 3 }

    wfBrSrIpEncapsRBStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    learned(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The status of this entry. The meanings of the
                values are:
                  learned(3) : the value of the corresponding
                              instance of wfBrSrIpEncapsRing and
                              wfBrSrIpEncapsBridge was
                              learned, and is being used."
        DEFVAL	{ learned }
        ::= { wfBrSrIpEncapsRBEntry 4 }

    END  -- Wellfleet-SR-MIB
-- @(#)WSCCS p/mibs-st2.mib 1.1 8/30/95
Wellfleet-ST2-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:48:03 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfIntegratedServicesGroup
        FROM Wellfleet-COMMON-MIB;


    wfReservationsProtocolsGroup
    		    OBJECT IDENTIFIER ::= { wfIntegratedServicesGroup 1 }
    wfSt2Group 	    OBJECT IDENTIFIER ::= { wfReservationsProtocolsGroup 2 }
    wfSt2BaseGroup	OBJECT IDENTIFIER ::= { wfSt2Group 1 }


    wfSt2BaseDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value determines whether ST2 is configured on this slot."
        DEFVAL	{ create }
        ::= { wfSt2BaseGroup 1 }

    wfSt2BaseDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value determines whether ST2 is to startup."
        DEFVAL	{ enable }
        ::= { wfSt2BaseGroup 2 }

    wfSt2BaseState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    notpresent(4),
    		    initializing(3),
    		    down(2),
    		    up(1)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This value records the current state of ST2."
        DEFVAL	{ notpresent }
        ::= { wfSt2BaseGroup 3 }

    wfSt2BaseRoutingVers OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'This read-only parameter identifies the executor node's
                Routing version number. The format is the same as for the
                Network Management version number.'"
        ::= { wfSt2BaseGroup 4 }

    wfSt2BaseTunnelCapability OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the tunnelling capability flag for the router."
        DEFVAL	{ no }
        ::= { wfSt2BaseGroup 5 }

    wfSt2BaseTunnelDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the tunnelling enabled flag for the router."
        DEFVAL	{ disable }
        ::= { wfSt2BaseGroup 6 }

    wfSt2BaseAgentDBGMask OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the ST2 base agent debug mask."
        ::= { wfSt2BaseGroup 7 }

    wfSt2BaseReservedParameter1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the ST2 base reserved parameter."
        ::= { wfSt2BaseGroup 8 }

    wfSt2BaseReservedParameter2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the ST2 base reserved parameter."
        ::= { wfSt2BaseGroup 9 }

    wfSt2CircuitTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSt2CircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "' Table of ST2 Circuit Configuration and Counter Records'"
        ::= { wfSt2Group 2 }

    wfSt2CircuitEntry OBJECT-TYPE
        SYNTAX	WfSt2CircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "'Parameters information about all circuits currently known.
                NOTE: depending on the type of object being querried (e.g., a
                level 1 vs. a level 2 router or end system) some variables may
                not be present.'"
        INDEX	{ wfSt2CircuitID }
        ::= { wfSt2CircuitTable 1 }

    WfSt2CircuitEntry ::= SEQUENCE {
    	    wfSt2CircuitDelete
    		INTEGER,
    	    wfSt2CircuitDisable
    		INTEGER,
    	    wfSt2CircuitCommonState
    		INTEGER,
    	    wfSt2CircuitID
    		INTEGER,
    	    wfSt2CircuitCommonType
    		INTEGER,
    	    wfSt2CircuitIPAddress
    		IpAddress,
    	    wfSt2CircuitTmoAccept
    		INTEGER,
    	    wfSt2CircuitRetryAccept
    		INTEGER,
    	    wfSt2CircuitTmoConnect
    		INTEGER,
    	    wfSt2CircuitRetryConnect
    		INTEGER,
    	    wfSt2CircuitTmoDisconnect
    		INTEGER,
    	    wfSt2CircuitRetryDisconnect
    		INTEGER,
    	    wfSt2CircuitTmoHidChange
    		INTEGER,
    	    wfSt2CircuitRetryHidChange
    		INTEGER,
    	    wfSt2CircuitTmoRefuse
    		INTEGER,
    	    wfSt2CircuitRetryRefuse
    		INTEGER,
    	    wfSt2CircuitTmoHello
    		INTEGER,
    	    wfSt2CircuitRetryHello
    		INTEGER,
    	    wfSt2CircuitMTU
    		INTEGER,
    	    wfSt2CircuitDBGMask
    		INTEGER,
    	    wfSt2CircuitHelloFailure
    		INTEGER,
    	    wfSt2CircuitHidProposed
    		INTEGER,
    	    wfSt2CircuitBadStCksum
    		Counter,
    	    wfSt2CircuitEncodeBadParm
    		Counter,
    	    wfSt2CircuitEncodeWrongParms
    		Counter,
    	    wfSt2CircuitMsgInHidColl
    		Counter,
    	    wfSt2CircuitMsgInNoCon
    		Counter,
    	    wfSt2CircuitNotSt2
    		Counter,
    	    wfSt2CircuitParmMissing
    		Counter,
    	    wfSt2CircuitScmpRefNum
    		Counter,
    	    wfSt2CircuitScmp0rVlid
    		Counter,
    	    wfSt2CircuitScmp0sVlid
    		Counter,
    	    wfSt2CircuitScmpBadVlid
    		Counter,
    	    wfSt2CircuitScmpCksum
    		Counter,
    	    wfSt2CircuitScmpFailedResources
    		Counter,
    	    wfSt2CircuitScmpFailedRoute
    		Counter,
    	    wfSt2CircuitScmpLenInconsist
    		Counter,
    	    wfSt2CircuitScmpRxTimeOut
    		Counter,
    	    wfSt2CircuitScmpXmtCnt
    		Counter,
    	    wfSt2CircuitScmpRcvCnt
    		Counter,
    	    wfSt2CircuitDataXmtCnt
    		Counter,
    	    wfSt2CircuitDataRcvCnt
    		Counter,
    	    wfSt2CircuitSt2StreamCnt
    		Counter,
    	    wfSt2CircuitHelloXmtCnt
    		Counter,
    	    wfSt2CircuitHelloRcvCnt
    		Counter,
    	    wfSt2CircuitHelloRAckCnt
    		Counter,
    	    wfSt2CircuitLbPoliceDrop
    		Counter,
    	    wfSt2CircuitPbsDropCnt
    		Counter,
    	    wfSt2CircuitOverDrop2Cnt
    		Counter,
    	    wfSt2CircuitPktCnt
    		Counter,
    	    wfSt2CircuitScmpXmt
    		Counter,
    	    wfSt2CircuitScmpRcv
    		Counter,
    	    wfSt2CircuitBWAlloc
    		Counter,
    	    wfSt2CircuitRsvdParameter1
    		INTEGER,
    	    wfSt2CircuitRsvdParameter2
    		INTEGER
        }

    wfSt2CircuitDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This value determines whether the circuit is configured"
        DEFVAL	{ create }
        ::= { wfSt2CircuitEntry 1 }

    wfSt2CircuitDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This value represents the circuit's Network Management
                operational state. NOTE: These values are incremented by one
                compared to the standard St2 values in order to maintain
                compliance with RFC 1155.'"
        DEFVAL	{ enable }
        ::= { wfSt2CircuitEntry 2 }

    wfSt2CircuitCommonState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    notpresent(4),
    		    initializing(3),
    		    down(2),
    		    up(1)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This value represents the circuit's operational state."
        DEFVAL	{ down }
        ::= { wfSt2CircuitEntry 3 }

    wfSt2CircuitID OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A unique value for each known circuit."
        ::= { wfSt2CircuitEntry 4 }

    wfSt2CircuitCommonType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    sync(1),
    		    ethernet(6),
    		    fddi(15),
    		    smds(100),
    		    fr(101),
    		    atm(102),
    		    ring(103),
    		    ppp(104)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Represents the type of the circuit.'"
        ::= { wfSt2CircuitEntry 5 }

    wfSt2CircuitIPAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Network Interface IP address of this ST2 circuit"
        ::= { wfSt2CircuitEntry 6 }

    wfSt2CircuitTmoAccept OBJECT-TYPE
        SYNTAX	INTEGER {
    		    taccdef(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit accept ..."
        DEFVAL	{ taccdef }
        ::= { wfSt2CircuitEntry 7 }

    wfSt2CircuitRetryAccept OBJECT-TYPE
        SYNTAX	INTEGER {
    		    raccdef(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive accept ..."
        DEFVAL	{ raccdef }
        ::= { wfSt2CircuitEntry 8 }

    wfSt2CircuitTmoConnect OBJECT-TYPE
        SYNTAX	INTEGER {
    		    tcondef(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit connect ..."
        DEFVAL	{ tcondef }
        ::= { wfSt2CircuitEntry 9 }

    wfSt2CircuitRetryConnect OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rcondef(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive connect ..."
        DEFVAL	{ rcondef }
        ::= { wfSt2CircuitEntry 10 }

    wfSt2CircuitTmoDisconnect OBJECT-TYPE
        SYNTAX	INTEGER {
    		    tdiscondef(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit disconnect ..."
        DEFVAL	{ tdiscondef }
        ::= { wfSt2CircuitEntry 11 }

    wfSt2CircuitRetryDisconnect OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rdiscondef(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive disconnect ..."
        DEFVAL	{ rdiscondef }
        ::= { wfSt2CircuitEntry 12 }

    wfSt2CircuitTmoHidChange OBJECT-TYPE
        SYNTAX	INTEGER {
    		    thidchgdef(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit hid change ..."
        DEFVAL	{ thidchgdef }
        ::= { wfSt2CircuitEntry 13 }

    wfSt2CircuitRetryHidChange OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rhidchgdef(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive Hid Change ..."
        DEFVAL	{ rhidchgdef }
        ::= { wfSt2CircuitEntry 14 }

    wfSt2CircuitTmoRefuse OBJECT-TYPE
        SYNTAX	INTEGER {
    		    trefusedef(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit refuse ..."
        DEFVAL	{ trefusedef }
        ::= { wfSt2CircuitEntry 15 }

    wfSt2CircuitRetryRefuse OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rrefusedef(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive refuse ..."
        DEFVAL	{ rrefusedef }
        ::= { wfSt2CircuitEntry 16 }

    wfSt2CircuitTmoHello OBJECT-TYPE
        SYNTAX	INTEGER {
    		    thellodef(10)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit hello ..."
        DEFVAL	{ thellodef }
        ::= { wfSt2CircuitEntry 17 }

    wfSt2CircuitRetryHello OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rhellodef(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive hello ..."
        DEFVAL	{ rhellodef }
        ::= { wfSt2CircuitEntry 18 }

    wfSt2CircuitMTU OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum transmission unit ..."
        ::= { wfSt2CircuitEntry 19 }

    wfSt2CircuitDBGMask OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Debug mask ..."
        ::= { wfSt2CircuitEntry 20 }

    wfSt2CircuitHelloFailure OBJECT-TYPE
        SYNTAX	INTEGER {
    		    preserve(1),
    		    down(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The stream is to be preserved even though
                helloing fails."
        DEFVAL	{ down }
        ::= { wfSt2CircuitEntry 21 }

    wfSt2CircuitHidProposed OBJECT-TYPE
        SYNTAX	INTEGER {
    		    locally(1),
    		    remotely(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Hid proposed flag ..."
        DEFVAL	{ locally }
        ::= { wfSt2CircuitEntry 22 }

    wfSt2CircuitBadStCksum OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Bad St2 checksum ..."
        ::= { wfSt2CircuitEntry 23 }

    wfSt2CircuitEncodeBadParm OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Bad parameter encoding ..."
        ::= { wfSt2CircuitEntry 24 }

    wfSt2CircuitEncodeWrongParms OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Wrong parameter encoded ..."
        ::= { wfSt2CircuitEntry 25 }

    wfSt2CircuitMsgInHidColl OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Message in Hid ..."
        ::= { wfSt2CircuitEntry 26 }

    wfSt2CircuitMsgInNoCon OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Message in No ..."
        ::= { wfSt2CircuitEntry 27 }

    wfSt2CircuitNotSt2 OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Not an St2 packet ..."
        ::= { wfSt2CircuitEntry 28 }

    wfSt2CircuitParmMissing OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit parameter missing ..."
        ::= { wfSt2CircuitEntry 29 }

    wfSt2CircuitScmpRefNum OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Scmp refuses ..."
        ::= { wfSt2CircuitEntry 30 }

    wfSt2CircuitScmp0rVlid OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Scmp Or Vlid ..."
        ::= { wfSt2CircuitEntry 31 }

    wfSt2CircuitScmp0sVlid OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Scmp Os Vlid ..."
        ::= { wfSt2CircuitEntry 32 }

    wfSt2CircuitScmpBadVlid OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Bad Scmp Vlid ..."
        ::= { wfSt2CircuitEntry 33 }

    wfSt2CircuitScmpCksum OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Scmp checksun ..."
        ::= { wfSt2CircuitEntry 34 }

    wfSt2CircuitScmpFailedResources OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Scmp recources failed ..."
        ::= { wfSt2CircuitEntry 35 }

    wfSt2CircuitScmpFailedRoute OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Scmp routed failed ..."
        ::= { wfSt2CircuitEntry 36 }

    wfSt2CircuitScmpLenInconsist OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Scmp packet length inconsistent ..."
        ::= { wfSt2CircuitEntry 37 }

    wfSt2CircuitScmpRxTimeOut OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Scmp receive time outs ..."
        ::= { wfSt2CircuitEntry 38 }

    wfSt2CircuitScmpXmtCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Scmp transmit count ..."
        ::= { wfSt2CircuitEntry 39 }

    wfSt2CircuitScmpRcvCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Scmp receive count ..."
        ::= { wfSt2CircuitEntry 40 }

    wfSt2CircuitDataXmtCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Transmited data count ..."
        ::= { wfSt2CircuitEntry 41 }

    wfSt2CircuitDataRcvCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "received data count ..."
        ::= { wfSt2CircuitEntry 42 }

    wfSt2CircuitSt2StreamCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "St2 stream count ..."
        ::= { wfSt2CircuitEntry 43 }

    wfSt2CircuitHelloXmtCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Hellos transmitted count ..."
        ::= { wfSt2CircuitEntry 44 }

    wfSt2CircuitHelloRcvCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Hellos received count ..."
        ::= { wfSt2CircuitEntry 45 }

    wfSt2CircuitHelloRAckCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Hellos received acknowledged coubt ..."
        ::= { wfSt2CircuitEntry 46 }

    wfSt2CircuitLbPoliceDrop OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Learning bridge police drop count ..."
        ::= { wfSt2CircuitEntry 47 }

    wfSt2CircuitPbsDropCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Pbs drop count ..."
        ::= { wfSt2CircuitEntry 48 }

    wfSt2CircuitOverDrop2Cnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Over drop ? count ..."
        ::= { wfSt2CircuitEntry 49 }

    wfSt2CircuitPktCnt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit packet count ..."
        ::= { wfSt2CircuitEntry 50 }

    wfSt2CircuitScmpXmt OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Scmp packets transmitted ..."
        ::= { wfSt2CircuitEntry 51 }

    wfSt2CircuitScmpRcv OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Scmp packets received ..."
        ::= { wfSt2CircuitEntry 52 }

    wfSt2CircuitBWAlloc OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit bandwith allocated ..."
        ::= { wfSt2CircuitEntry 53 }

    wfSt2CircuitRsvdParameter1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Circuit reserved parameter"
        ::= { wfSt2CircuitEntry 54 }

    wfSt2CircuitRsvdParameter2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Circuit reserved parameter"
        ::= { wfSt2CircuitEntry 55 }

    wfSt2NeighborTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSt2NeighborEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The ST2 neighbor routing table"
        ::= { wfSt2Group 3 }

    wfSt2NeighborEntry OBJECT-TYPE
        SYNTAX	WfSt2NeighborEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Neighbor Table"
        INDEX	{ wfSt2NeighborNxtHopIPAddr }
        ::= { wfSt2NeighborTable 1 }

    WfSt2NeighborEntry ::= SEQUENCE {
    	    wfSt2NeighborDelete
    		INTEGER,
    	    wfSt2NeighborDisable
    		INTEGER,
    	    wfSt2NeighborNxtHopIPAddr
    		IpAddress,
    	    wfSt2NeighborRteExplr
    		INTEGER,
    	    wfSt2NeighborHelloProtocol
    		INTEGER,
    	    wfSt2NeighborType
    		INTEGER,
    	    wfSt2NeighborPriorityLevel
    		INTEGER,
    	    wfSt2NeighborRsvdParameter1
    		INTEGER,
    	    wfSt2NeighborRsvdParameter2
    		INTEGER
        }

    wfSt2NeighborDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Determines whether the base record is configured"
        DEFVAL	{ create }
        ::= { wfSt2NeighborEntry 1 }

    wfSt2NeighborDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Determines whether the base record is active"
        DEFVAL	{ enable }
        ::= { wfSt2NeighborEntry 2 }

    wfSt2NeighborNxtHopIPAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "IP address of next hop router"
        ::= { wfSt2NeighborEntry 3 }

    wfSt2NeighborRteExplr OBJECT-TYPE
        SYNTAX	INTEGER {
    		    yes(1),
    		    no(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Is the neighbor capable of route exploration"
        DEFVAL	{ no }
        ::= { wfSt2NeighborEntry 4 }

    wfSt2NeighborHelloProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    active(2),
    		    disable(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Helloing in use"
        DEFVAL	{ enable }
        ::= { wfSt2NeighborEntry 5 }

    wfSt2NeighborType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    local(1),
    		    tunnel(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Neighbor type, local or tunnel"
        DEFVAL	{ local }
        ::= { wfSt2NeighborEntry 6 }

    wfSt2NeighborPriorityLevel OBJECT-TYPE
        SYNTAX	INTEGER(1..16)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Route exploration or tunnel priority level"
        DEFVAL	{ 8 }
        ::= { wfSt2NeighborEntry 7 }

    wfSt2NeighborRsvdParameter1 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "neighbor reserved parameter"
        ::= { wfSt2NeighborEntry 8 }

    wfSt2NeighborRsvdParameter2 OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "neighbor reserved parameter"
        ::= { wfSt2NeighborEntry 9 }

    END  -- Wellfleet-ST2-MIB
-- @(#)WSCCS o/mibs-st2ext.mib 1.1 8/30/95
Wellfleet-ST2EXT-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:48:08 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfSt2Group
        FROM Wellfleet-COMMON-MIB;


    stii		OBJECT IDENTIFIER ::= { wfSt2Group 5 }

    st2AgentCopyright OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'provider of (company which wrote) the ST-II agent code,
                   code release info and copyright info' "
        ::= { stii 1 }

    st2ProtoVersion OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "version of ST-II running; RFC-1190 for starters"
        ::= { stii 2 }

    st2FlowSpecVersion OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "registered version number of Flow Spec"
        ::= { stii 3 }

    st2AgentType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    intermediate(2),
    		    final(3),
    		    fin(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'whether this system performs ST-II end-system or
                   intermediate-system functions or both' "
        ::= { stii 4 }

    st2RoutingDerived OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    fixed(2),
    		    ip(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'where does ST-II get routes from, whether IP routing tables
                   or some other means' "
        ::= { stii 5 }

    st2ToAccept OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Initial hop-by-hop timeout for acknowledgment of ACCEPT"
        ::= { stii 6 }

    st2NAccept OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "number of ACCEPT retries before returning a failure"
        ::= { stii 7 }

    st2ToConnect OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Initial hop-by-hop timeout for acknowledgment of CONNECT"
        ::= { stii 8 }

    st2NConnect OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "number of CONNECT retries before returning a failure"
        ::= { stii 9 }

    st2ToDisconnect OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Initial hop-by-hop timeout for acknowledgment of DISCONNECT"
        ::= { stii 10 }

    st2NDisconnect OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "number of DISCONNECT retries before returning a failure"
        ::= { stii 11 }

    st2ToHidAck OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Initial hop-by-hop timeout for acknowledgment of
                HID-CHANGE-REQUEST' "
        ::= { stii 12 }

    st2NHidAck OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "number of HID-CHANGE-REQUEST retries before returning a failure"
        ::= { stii 13 }

    st2ToHidChange OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Initial hop-by-hop timeout for acknowledgment of HID-CHANGE"
        ::= { stii 14 }

    st2NHidChange OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "number of HID-CHANGE retries before returning a failure"
        ::= { stii 15 }

    st2ToNotify OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Initial hop-by-hop timeout for acknowledgment of NOTIFY"
        ::= { stii 16 }

    st2NNotify OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "number of NOTIFY retries before returning a failure"
        ::= { stii 17 }

    st2ToRefuse OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Initial hop-by-hop timeout for acknowledgment of REFUSE"
        ::= { stii 18 }

    st2NRefuse OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "number of REFUSE retries before returning a failure"
        ::= { stii 19 }

    st2ToReroute OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Timeout for receipt of ACCEPT or REFUSE from targets during
                   failure recovery, allowing intermediate systems time to try
                recovery' "
        ::= { stii 20 }

    st2NReroute OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "number of CONNECT retries before returning a failure
                from targets' "
        ::= { stii 21 }

    st2ToEnd2End OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "End-to-end timeout for receipt of ACCEPT or REFUSE from
                targets by origin during failure recovery, allowing intermediate
                systems time to try recovery' "
        ::= { stii 22 }

    st2NEnd2End OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "number of CONNECT retries before origin returns a
                failure from targets'  "
        ::= { stii 23 }

    st2NHidAbort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of rejected HID proposals before aborting the HID
                negotiation process' "
        ::= { stii 24 }

    st2HelloTimerHoldDown OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Interval that Restarted bit must be set after ST Agent restart"
        ::= { stii 25 }

    st2HelloLossFactor OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of consecutively missed HELLO messages before
                declaring link failure to neighbor' "
        ::= { stii 26 }

    st2DefaultRecoveryTimeout OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Default for interval between successive HELLOs to/from
                active neighbors' "
        ::= { stii 27 }

    st2DefaultHelloFactor OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "HELLO filtering function factor"
        ::= { stii 28 }

    st2ScmpRcvdOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total octets of SCMP messages received"
        ::= { stii 29 }

    st2ScmpSentOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total octets of SCMP messages sent"
        ::= { stii 30 }

    st2ScmpRcvdBadTypes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP messages received with bad type field"
        ::= { stii 31 }

    st2ScmpRcvdBadCks OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP messages received with bad checksum"
        ::= { stii 32 }

    st2ScmpSentAccepts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP ACCEPT messages sent"
        ::= { stii 33 }

    st2ScmpSentAcks OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP ACK messages sent"
        ::= { stii 34 }

    st2ScmpSentChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP CHANGE messages sent"
        ::= { stii 35 }

    st2ScmpSentChangeReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP CHANGE-REQUEST messages sent"
        ::= { stii 36 }

    st2ScmpSentConnects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP CONNECT messages sent"
        ::= { stii 37 }

    st2ScmpSentDisconnects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP DISCONNECT messages sent"
        ::= { stii 38 }

    st2ScmpSentErrorInReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP ERROR-IN-REQUEST messages sent"
        ::= { stii 39 }

    st2ScmpSentErrorInResps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP ERROR-IN-RESPONSE messages sent"
        ::= { stii 40 }

    st2ScmpSentHellos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP HELLO messages sent"
        ::= { stii 41 }

    st2ScmpSentHidApproves OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP HID-APPROVE messages sent"
        ::= { stii 42 }

    st2ScmpSentHidChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP HID-CHANGE messages sent"
        ::= { stii 43 }

    st2ScmpSentHidChangeReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP HID-CHANGE-REQUEST messages sent"
        ::= { stii 44 }

    st2ScmpSentHidRejects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP HID-REJECT messages sent"
        ::= { stii 45 }

    st2ScmpSentNotifys OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP NOTIFY messages sent"
        ::= { stii 46 }

    st2ScmpSentRefuses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP REFUSE messages sent"
        ::= { stii 47 }

    st2ScmpSentStatus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP STATUS messages sent"
        ::= { stii 48 }

    st2ScmpSentStatusResps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP STATUS-RESPONSE messages sent"
        ::= { stii 49 }

    st2ScmpRcvdAccepts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP ACCEPT messages received"
        ::= { stii 50 }

    st2ScmpRcvdAcks OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP ACK messages received"
        ::= { stii 51 }

    st2ScmpRcvdChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP CHANGE messages received"
        ::= { stii 52 }

    st2ScmpRcvdChangeReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP CHANGE-REQUEST messages received"
        ::= { stii 53 }

    st2ScmpRcvdConnects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP CONNECT messages received"
        ::= { stii 54 }

    st2ScmpRcvdDisconnects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP DISCONNECT messages received"
        ::= { stii 55 }

    st2ScmpRcvdErrorInReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP ERROR-IN-REQUEST messages received"
        ::= { stii 56 }

    st2ScmpRcvdErrorInResps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP ERROR-IN-RESPONSE messages received"
        ::= { stii 57 }

    st2ScmpRcvdHellos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP HELLO messages received"
        ::= { stii 58 }

    st2ScmpRcvdHidApproves OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP HID-APPROVE messages received"
        ::= { stii 59 }

    st2ScmpRcvdHidChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP HID-CHANGE messages received"
        ::= { stii 60 }

    st2ScmpRcvdHidChangeReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP HID-CHANGE-REQUEST messages received"
        ::= { stii 61 }

    st2ScmpRcvdHidRejects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP HID-REJECT messages received"
        ::= { stii 62 }

    st2ScmpRcvdNotifys OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP NOTIFY messages received"
        ::= { stii 63 }

    st2ScmpRcvdRefuses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP REFUSE messages received"
        ::= { stii 64 }

    st2ScmpRcvdStatus OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP STATUS messages received"
        ::= { stii 65 }

    st2ScmpRcvdStatusResps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of SCMP STATUS-RESPONSE messages received"
        ::= { stii 66 }

    st2ScmpRcvdErrorSnap OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Contents from last SCMP packet received with error"
        ::= { stii 67 }

    st2ScmpRcvdBadTypeTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time that last SCMP packet was received with bad Type field"
        ::= { stii 68 }

    st2ScmpRcvdBadCksTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time that last SCMP packet was received with bad checksum"
        ::= { stii 69 }

    st2OriginOpens OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Count of streams opened with this agent as origin, but they
                   may have since been closed' "
        ::= { stii 70 }

    st2IntermedOpens OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of streams opened with this agent as intermediate system"
        ::= { stii 71 }

    st2TargetOpens OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Count of streams opened with this agent as target (destination)
                   - may also be counted in intermediate' "
        ::= { stii 72 }

    st2FailOpens OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of stream opens attempted which did not complete"
        ::= { stii 73 }

    st2AcceptTimeouts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Count of stream opens failed because ACCEPT did not get
                acknowledged' "
        ::= { stii 74 }

    st2ParamChangeFails OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of stream parameter changes which failed"
        ::= { stii 75 }

    st2NumStreamEntries OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of stream table entries (extent of streams table)"
        ::= { stii 76 }

    st2NumOpenStreams OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Count of streams which are open
                (number of table entries for them)' "
        ::= { stii 77 }

    st2NumOpenOriginStreams OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of current open streams which were originated here"
        ::= { stii 78 }

    st2NumHops OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of Hop entries (extent of next-hop table)"
        ::= { stii 79 }

    st2NumNeighbors OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of Neighbor entries (extent of neighbor table)"
        ::= { stii 80 }

    st2NumTargets OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of target entries (extent of target table)"
        ::= { stii 81 }

    st2NumGroups OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "count of group entries (extent of groups table)"
        ::= { stii 82 }

    st2NumSubgroups OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of subgroup entries (extent of subgroups table)"
        ::= { stii 83 }

    st2RouteFailures OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of stream opens failed because no route found"
        ::= { stii 84 }

    st2RouteLoops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Count of stream opens failed because route inconsistency
                   found, e.g. potential or actual loop' "
        ::= { stii 85 }

    st2ScmpRetrans OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "count of SCMP control timeout and retransmissions"
        ::= { stii 86 }

    st2StreamTable OBJECT-TYPE
        SYNTAX	TABLE
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Table of ST2 Stream Counter records"
        ::= { stii 87 }

    st2HopTable OBJECT-TYPE
        SYNTAX	TABLE
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Table of ST2 hop records"
        ::= { stii 88 }

    st2NeighborTable OBJECT-TYPE
        SYNTAX	TABLE
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Table of ST2 neighbor routing table"
        ::= { stii 89 }

    st2TargetTable OBJECT-TYPE
        SYNTAX	TABLE
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Table of information for each target"
        ::= { stii 90 }

    st2GroupTable OBJECT-TYPE
        SYNTAX	TABLE
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Table of information for each group"
        ::= { stii 91 }

    st2SubgroupTable OBJECT-TYPE
        SYNTAX	TABLE
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Table of information for each sub-group"
        ::= { stii 92 }

    st2InterfaceTable OBJECT-TYPE
        SYNTAX	TABLE
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Table of information for each group"
        ::= { stii 93 }

    st2StreamTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF St2StreamEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table of ST2 Stream Counter records"
        ::= { stii 87 }

    st2StreamEntry OBJECT-TYPE
        SYNTAX	St2StreamEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table of information for each stream."
        INDEX	{ st2StreamName,
    		  st2StreamPrevHopAddr,
    		  st2StreamPrevHopVlid }
        ::= { st2StreamTable 1 }

    St2StreamEntry ::= SEQUENCE {
    	    st2StreamName
    		OCTET STRING,
    	    st2StreamPrevHopAddr
    		IpAddress,
    	    st2StreamPrevHopVlid
    		INTEGER,
    	    st2StreamStartTime
    		TimeTicks,
    	    st2StreamState
    		INTEGER,
    	    st2StreamStateTime
    		TimeTicks,
    	    st2StreamRole
    		INTEGER,
    	    st2StreamGroup
    		OCTET STRING,
    	    st2StreamNumSubgroups
    		Gauge,
    	    st2StreamNumNextHops
    		Gauge,
    	    st2StreamNumTargets
    		Gauge,
    	    st2StreamRefuses
    		Counter,
    	    st2StreamFlowspecChanges
    		Counter,
    	    st2StreamFlowPrecedence
    		INTEGER,
    	    st2StreamFlowDutyFactor
    		INTEGER,
    	    st2StreamFlowErrorRate
    		INTEGER,
    	    st2StreamFlowReliability
    		INTEGER,
    	    st2StreamFlowTradeoffs
    		INTEGER,
    	    st2StreamFlowRecoveryTimeout
    		INTEGER,
    	    st2StreamFlowLimitOnCost
    		INTEGER,
    	    st2StreamFlowLimitOnDelay
    		INTEGER,
    	    st2StreamFlowLimitOnPduBytes
    		INTEGER,
    	    st2StreamFlowLimitOnPduRate
    		INTEGER,
    	    st2StreamFlowMinBytesXRate
    		INTEGER,
    	    st2StreamFlowMeanDelay
    		INTEGER,
    	    st2StreamFlowDelayVariance
    		INTEGER,
    	    st2StreamFlowDesPduBytes
    		INTEGER,
    	    st2StreamFlowDesPduRate
    		INTEGER,
    	    st2StreamOptionPtp
    		INTEGER,
    	    st2StreamOptionFdx
    		INTEGER,
    	    st2StreamOptionRecover
    		INTEGER,
    	    st2StreamOptionReverseCharge
    		INTEGER,
    	    st2StreamOptionTimestamp
    		INTEGER
        }

    st2StreamName OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (10))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Internal format name of this stream"
        ::= { st2StreamEntry 1 }

    st2StreamPrevHopAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Previous hop entry which feeds data to this node"
        ::= { st2StreamEntry 2 }

    st2StreamPrevHopVlid OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Virtual link identifier of the previous hop"
        ::= { st2StreamEntry 3 }

    st2StreamStartTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Timestamp when this stream was first entered in this table"
        ::= { st2StreamEntry 4 }

    st2StreamState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    idle(2),
    		    hidnotok(3),
    		    acceptabl(4),
    		    active(5),
    		    activereduced(6),
    		    passive(7)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current state of this stream at this node"
        ::= { st2StreamEntry 5 }

    st2StreamStateTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "time this stream entered its current state"
        ::= { st2StreamEntry 6 }

    st2StreamRole OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    origin(2),
    		    target(3),
    		    intermediate(4),
    		    intermediateandtarget(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "role that this agent performs for this stream"
        ::= { st2StreamEntry 7 }

    st2StreamGroup OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "group (if any) which this stream is in"
        ::= { st2StreamEntry 8 }

    st2StreamNumSubgroups OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of subgroups which this stream is in
                (get info from subgroup table)' "
        ::= { st2StreamEntry 9 }

    st2StreamNumNextHops OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of nexthops to which this stream feeds data
                (get info from hop table)' "
        ::= { st2StreamEntry 10 }

    st2StreamNumTargets OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of targets to which this stream feeds data
                (get info from target table)' "
        ::= { st2StreamEntry 11 }

    st2StreamRefuses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of times this stream has suffered the ignominy
                of getting changes refused' "
        ::= { st2StreamEntry 12 }

    st2StreamFlowspecChanges OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of times this flowspec has been changed over
                the duration of this stream.' "
        ::= { st2StreamEntry 13 }

    st2StreamFlowPrecedence OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "flowspec precedence field (8 bits)"
        ::= { st2StreamEntry 14 }

    st2StreamFlowDutyFactor OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "flowspec dutyfactor field (8 bits)"
        ::= { st2StreamEntry 15 }

    st2StreamFlowErrorRate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "flowspec error rate field (8 bits)"
        ::= { st2StreamEntry 16 }

    st2StreamFlowReliability OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "flowspec reliability field (8 bits)"
        ::= { st2StreamEntry 17 }

    st2StreamFlowTradeoffs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "flowspec tradeoffs field (16 bits)"
        ::= { st2StreamEntry 18 }

    st2StreamFlowRecoveryTimeout OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "flowspec recovery timeout field (16 bits)"
        ::= { st2StreamEntry 19 }

    st2StreamFlowLimitOnCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "flowspec limit on cost field (16 bits)"
        ::= { st2StreamEntry 20 }

    st2StreamFlowLimitOnDelay OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "flowspec limit on delay field (16 bits)"
        ::= { st2StreamEntry 21 }

    st2StreamFlowLimitOnPduBytes OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "flowspec LIMIT ON PDU BYTES (pdu size in octets)
                field (16 bits)' "
        ::= { st2StreamEntry 22 }

    st2StreamFlowLimitOnPduRate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "flowspec limit on pdu rate field (16 bits)"
        ::= { st2StreamEntry 23 }

    st2StreamFlowMinBytesXRate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "flowspec min bytes x rate field (product gives
                bandwidth in bytes per 10 seconds; divide by 1250
                for Kbits per second) (32 bits)' "
        ::= { st2StreamEntry 24 }

    st2StreamFlowMeanDelay OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "flowspec accumulated mean delay field (32 bits)"
        ::= { st2StreamEntry 25 }

    st2StreamFlowDelayVariance OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "flowspec accumulated delay variance field (32 bits)"
        ::= { st2StreamEntry 26 }

    st2StreamFlowDesPduBytes OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "flowspec desired pdu bytes (size) field (16 bits)"
        ::= { st2StreamEntry 27 }

    st2StreamFlowDesPduRate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "flowspec desired pdu rate field (16 bits)"
        ::= { st2StreamEntry 28 }

    st2StreamOptionPtp OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "true if POINT TO POINT option specified on this stream"
        ::= { st2StreamEntry 29 }

    st2StreamOptionFdx OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "true if FULL DUPLEX option specified on this stream;
                reverse stream is the same but takes a separate stream
                table entry in this MIB' "
        ::= { st2StreamEntry 30 }

    st2StreamOptionRecover OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "false if NO RECOVERY option specified for this stream"
        ::= { st2StreamEntry 31 }

    st2StreamOptionReverseCharge OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "true if REVERSE CHARGE option specified for this stream"
        ::= { st2StreamEntry 32 }

    st2StreamOptionTimestamp OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the TIMESTAMP option specified for this stream"
        ::= { st2StreamEntry 33 }

    st2HopTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF St2HopEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The ST2 hop table"
        ::= { stii 88 }

    st2HopEntry OBJECT-TYPE
        SYNTAX	St2HopEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Hop Table"
        INDEX	{ st2StreamName,
    		  st2StreamPrevHopAddr,
    		  st2StreamPrevHopVlid,
    		  st2HopNeighborAddr }
        ::= { st2HopTable 1 }

    St2HopEntry ::= SEQUENCE {
    	    st2HopHid
    		INTEGER,
    	    st2HopMyVlid
    		INTEGER,
    	    st2HopYourVlid
    		INTEGER,
    	    st2HopState
    		INTEGER,
    	    st2HopStateTime
    		TimeTicks,
    	    st2HopNumTargets
    		Gauge,
    	    st2HopMcastAddr
    		IpAddress,
    	    st2HopErrorCode
    		INTEGER,
    	    st2HopDetectorAddr
    		IpAddress,
    	    st2HopNeighborAddr
    		IpAddress,
    	    st2HopStreamName
    		OCTET STRING,
    	    st2HopPkts
    		Counter,
    	    st2HopOctets
    		Counter,
    	    st2HopDiscards
    		Counter,
    	    st2HopIpEncap
    		INTEGER,
    	    st2HopIpAddr
    		IpAddress,
    	    st2HopRole
    		INTEGER,
    	    st2HopInterfaceIndex
    		INTEGER
        }

    st2HopHid OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'HID which this node has negotiated with this next hop
                (and all others on a multicast)' "
        ::= { st2HopEntry 1 }

    st2HopMyVlid OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'VLID (table index or something) by which this next
                hop addresses me' "
        ::= { st2HopEntry 2 }

    st2HopYourVlid OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'VLID (table index or something) by which I address
                this next hop' "
        ::= { st2HopEntry 3 }

    st2HopState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ok(1),
    		    open(2),
    		    negot(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "state of negotiation for this stream to this hop"
        ::= { st2HopEntry 4 }

    st2HopStateTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "time this state was entered"
        ::= { st2HopEntry 5 }

    st2HopNumTargets OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of targets reached via this next hop"
        ::= { st2HopEntry 6 }

    st2HopMcastAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'multicast address, if any, used to reach this hop and
                others on same net (for current ST-II, this does not work
                here)(this should be an IP multicast address, or some
                magic IP address which translates into local-net multicast' "
        ::= { st2HopEntry 7 }

    st2HopErrorCode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "refuse code or other error indicator received from next hop"
        ::= { st2HopEntry 8 }

    st2HopDetectorAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'detector address field from error message received
                from next hop' "
        ::= { st2HopEntry 9 }

    st2HopNeighborAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'ip address of neighbor which is this next hop
                (it has the info rfc1190 to all next hops for streams
                which go through that node)' "
        ::= { st2HopEntry 10 }

    st2HopStreamName OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "back pointer to stream for which this is a hop"
        ::= { st2HopEntry 11 }

    st2HopPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'count of packets received from this hop in this stream,
                or sent in this stream to this hop, depending on st2HopRole' "
        ::= { st2HopEntry 12 }

    st2HopOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'count of octets received from this hop in this stream,
                or sent in this stream to this hop, depending on st2HopRole' "
        ::= { st2HopEntry 13 }

    st2HopDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'count of packets received from this hop in this stream
                and not processed, or not able to be sent in this stream
                to this hop, depending on st2HopRole' "
        ::= { st2HopEntry 14 }

    st2HopIpEncap OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'true if data for this stream is sent with IP
                encapsulation to this next hop'"
        ::= { st2HopEntry 15 }

    st2HopIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'if ip encapsulation is on, this is the direct
                (local) next hop IP address of the next router on
                the path. The ST agent next hop can be further away.
                Implementations might store this so as to bypass the
                IP routing function.' "
        ::= { st2HopEntry 16 }

    st2HopRole OBJECT-TYPE
        SYNTAX	INTEGER {
    		    nexthop(1),
    		    prevhop(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'tells whether this hop entry is a previous-hop for
                this stream or a next-hop. This is to help identify
                whether the packet, octet and discard counters are
                for input from a prev-hop or output to a next-hop.' "
        ::= { st2HopEntry 17 }

    st2HopInterfaceIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Interface Index"
        ::= { st2HopEntry 18 }

    st2NeighborTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF St2NeighborEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The ST2 neighbor routing table"
        ::= { stii 89 }

    st2NeighborEntry OBJECT-TYPE
        SYNTAX	St2NeighborEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Neighbor Table"
        INDEX	{ st2NeighborAddr }
        ::= { st2NeighborTable 1 }

    St2NeighborEntry ::= SEQUENCE {
    	    st2NeighborAddr
    		IpAddress,
    	    st2NeighborState
    		INTEGER,
    	    st2NeighborStateTime
    		TimeTicks,
    	    st2NeighborNumHops
    		Gauge,
    	    st2NeighborHelloTimer
    		TimeTicks,
    	    st2NeighborHelloRcvdTime
    		TimeTicks,
    	    st2NeighborDataRcvdTime
    		TimeTicks,
    	    st2NeighborAckRequested
    		INTEGER,
    	    st2NeighborRestarted
    		INTEGER,
    	    st2NeighborSentHellos
    		Counter,
    	    st2NeighborRcvdHellos
    		Counter,
    	    st2NeighborMissedHellos
    		Counter,
    	    st2NeighborRoundTripTime
    		TimeTicks,
    	    st2NeighborInterfaceIdx
    		INTEGER,
    	    st2NeighborStBadMsgs
    		Counter,
    	    st2NeighborScmpBadMsgs
    		Counter
        }

    st2NeighborAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'address of neighbor ST Agent serving as nexthop
                or previous hop for one or more streams' "
        ::= { st2NeighborEntry 1 }

    st2NeighborState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "state of neighbor ST Agent w.r.t. hellos and data"
        ::= { st2NeighborEntry 2 }

    st2NeighborStateTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "time entered this state of neighbor ST Agent"
        ::= { st2NeighborEntry 3 }

    st2NeighborNumHops OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of hops using this neighbor for next or prev"
        ::= { st2NeighborEntry 4 }

    st2NeighborHelloTimer OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'min of hello times based on RecoveryTimeout for
                all streams via this neighbor - or possibly default.
                Note: ST specifies this in milliseconds' "
        ::= { st2NeighborEntry 5 }

    st2NeighborHelloRcvdTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "timestamp when most recent hello received from this neighbor"
        ::= { st2NeighborEntry 6 }

    st2NeighborDataRcvdTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'timestamp when most recent ST data received from
                this neighbor - this may be updated infrequently,
                perhaps every couple of seconds' "
        ::= { st2NeighborEntry 7 }

    st2NeighborAckRequested OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'I have requested an ACK from this neighbor,
                still outstanding - for RTT estimation' "
        ::= { st2NeighborEntry 8 }

    st2NeighborRestarted OBJECT-TYPE
        SYNTAX	INTEGER {
    		    true(1),
    		    false(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'hello received from this neighbor with the restart
                bit on indicating neighbor has restarted recently' "
        ::= { st2NeighborEntry 9 }

    st2NeighborSentHellos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "count of hellos sent to this neighbor"
        ::= { st2NeighborEntry 10 }

    st2NeighborRcvdHellos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "count of hellos received from this neighbor"
        ::= { st2NeighborEntry 11 }

    st2NeighborMissedHellos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'count of hellos expected which were not received from this
                    neighbor' "
        ::= { st2NeighborEntry 12 }

    st2NeighborRoundTripTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'current estimate of round trip time to this neighbor based
                    on hello exchanges' "
        ::= { st2NeighborEntry 13 }

    st2NeighborInterfaceIdx OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "internal index of interface which reaches this neighbor"
        ::= { st2NeighborEntry 14 }

    st2NeighborStBadMsgs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'count of bad stream data messages received from
                this neighbor' "
        ::= { st2NeighborEntry 15 }

    st2NeighborScmpBadMsgs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'count of bad stream control messages received from
                this neighbor' "
        ::= { st2NeighborEntry 16 }

    st2TargetTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF St2TargetEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table of information for each target"
        ::= { stii 90 }

    st2TargetEntry OBJECT-TYPE
        SYNTAX	St2TargetEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table of information for each target."
        INDEX	{ st2StreamName,
    		  st2TargetAddr }
        ::= { st2TargetTable 1 }

    St2TargetEntry ::= SEQUENCE {
    	    st2TargetAddr
    		IpAddress,
    	    st2TargetHop
    		IpAddress,
    	    st2TargetStreamName
    		OCTET STRING
        }

    st2TargetAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ip address of target"
        ::= { st2TargetEntry 1 }

    st2TargetHop OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ip address of the nexthop which gets to this target"
        ::= { st2TargetEntry 2 }

    st2TargetStreamName OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "name of the stream this target is a member of"
        ::= { st2TargetEntry 3 }

    st2GroupTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF St2GroupEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table of information for each group"
        ::= { stii 91 }

    st2GroupEntry OBJECT-TYPE
        SYNTAX	St2GroupEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table of information for each target."
        INDEX	{ st2GroupName }
        ::= { st2GroupTable 1 }

    St2GroupEntry ::= SEQUENCE {
    	    st2GroupName
    		OCTET STRING,
    	    st2GroupId
    		INTEGER,
    	    st2GroupNumStreams
    		Gauge,
    	    st2GroupNumSubgroups
    		Gauge
        }

    st2GroupName OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (10))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "the st2 name of this group of stream"
        ::= { st2GroupEntry 1 }

    st2GroupId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "a  group identifier"
        ::= { st2GroupEntry 2 }

    st2GroupNumStreams OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of streams which are members of this group"
        ::= { st2GroupEntry 3 }

    st2GroupNumSubgroups OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of subgroups in this group"
        ::= { st2GroupEntry 4 }

    st2SubgroupTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF St2SubgroupEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table of information for each sub-group"
        ::= { stii 92 }

    st2SubgroupEntry OBJECT-TYPE
        SYNTAX	St2SubgroupEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table of information for each sub-group."
        INDEX	{ st2SubgroupIndex }
        ::= { st2SubgroupTable 1 }

    St2SubgroupEntry ::= SEQUENCE {
    	    st2SubgroupGroup
    		OCTET STRING,
    	    st2SubgroupNumStreams
    		Gauge,
    	    st2SubgroupIndex
    		INTEGER
        }

    st2SubgroupGroup OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "group  which  this subgroup is a member"
        ::= { st2SubgroupEntry 1 }

    st2SubgroupNumStreams OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of streams in this subgroup"
        ::= { st2SubgroupEntry 2 }

    st2SubgroupIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ip address of the nexthop which gets to this target"
        ::= { st2SubgroupEntry 3 }

    st2InterfaceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF St2InterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "' Table of ST2 interface information "
        ::= { stii 93 }

    st2InterfaceEntry OBJECT-TYPE
        SYNTAX	St2InterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "'Parameter information about all ST2 interfaces known.'"
        INDEX	{ st2InterfaceIndex }
        ::= { st2InterfaceTable 1 }

    St2InterfaceEntry ::= SEQUENCE {
    	    st2InterfaceIndex
    		INTEGER,
    	    st2InterfaceNumInStreams
    		Gauge,
    	    st2InterfaceNumOutStreams
    		Gauge,
    	    st2InterfaceNumNeighbors
    		Gauge,
    	    st2InterfaceInBwReserved
    		Gauge,
    	    st2InterfaceInBwReservable
    		Gauge,
    	    st2InterfaceOutBwReserved
    		Gauge,
    	    st2InterfaceOutBwReservable
    		Gauge,
    	    st2InterfaceTotRcvdPkts
    		Counter,
    	    st2InterfaceTotSentPkts
    		Counter,
    	    st2InterfaceTotRcvdOctets
    		Counter,
    	    st2InterfaceTotSentOctets
    		Counter,
    	    st2InterfaceRcvdHdrErrors
    		Counter,
    	    st2InterfaceRcvdHidErrors
    		Counter,
    	    st2InterfaceRcvdLenErrors
    		Counter,
    	    st2InterfaceRcvdHdrErrorTime
    		TimeTicks,
    	    st2InterfaceRcvdHidErrorTime
    		TimeTicks,
    	    st2InterfaceRcvdLenErrorTime
    		TimeTicks,
    	    st2InterfaceRcvdErrorSnap
    		DisplayString,
    	    st2InterfaceRcvdPktDrops
    		Counter,
    	    st2InterfaceSentPktDrops
    		Counter,
    	    st2InterfaceIpAddr
    		IpAddress
        }

    st2InterfaceIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "interface index of this interface - like ifindex
                from main MIB'"
        ::= { st2InterfaceEntry 1 }

    st2InterfaceNumInStreams OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of streams coming in this interface"
        ::= { st2InterfaceEntry 2 }

    st2InterfaceNumOutStreams OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of streams going out this interface"
        ::= { st2InterfaceEntry 3 }

    st2InterfaceNumNeighbors OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'number of neighbors on this interface being used
                as prev or next hop' "
        ::= { st2InterfaceEntry 4 }

    st2InterfaceInBwReserved OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'total of flowspec (bytes x rate) into this interface in units
                   of bits-per-second' "
        ::= { st2InterfaceEntry 5 }

    st2InterfaceInBwReservable OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'amount of bandwidth remaining able to be reserved for input
                   into this interface in units of bits-per-second' "
        ::= { st2InterfaceEntry 6 }

    st2InterfaceOutBwReserved OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'total of flowspec (bytes x rate) out of this interface in
                   units of bits-per-second' "
        ::= { st2InterfaceEntry 7 }

    st2InterfaceOutBwReservable OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'amount of bandwidth remaining able to be reserved for output
                   out of this interface in units of bits-per-second' "
        ::= { st2InterfaceEntry 8 }

    st2InterfaceTotRcvdPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Count of stream data packets received overall (for streams
                   both current and expired)' "
        ::= { st2InterfaceEntry 9 }

    st2InterfaceTotSentPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Count of stream data packets sent overall (??) including
                   replications for multiple output interfaces and multiple
                   next-hops when multicast is not used ( make this per interface ??)' "
        ::= { st2InterfaceEntry 10 }

    st2InterfaceTotRcvdOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of stream data octets received overall"
        ::= { st2InterfaceEntry 11 }

    st2InterfaceTotSentOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of stream data octets sent"
        ::= { st2InterfaceEntry 12 }

    st2InterfaceRcvdHdrErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Count of stream data packets received with
                header format errors' "
        ::= { st2InterfaceEntry 13 }

    st2InterfaceRcvdHidErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of stream data packets received with errors in HID"
        ::= { st2InterfaceEntry 14 }

    st2InterfaceRcvdLenErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count of stream data packets received with errors in length"
        ::= { st2InterfaceEntry 15 }

    st2InterfaceRcvdHdrErrorTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Time of last stream data packet received with
                header format errors' "
        ::= { st2InterfaceEntry 16 }

    st2InterfaceRcvdHidErrorTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time of last stream data packet received with errors in HID"
        ::= { st2InterfaceEntry 17 }

    st2InterfaceRcvdLenErrorTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Time of last stream data packet received with
                errors in length' "
        ::= { st2InterfaceEntry 18 }

    st2InterfaceRcvdErrorSnap OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Contents from last stream data packet received with error"
        ::= { st2InterfaceEntry 19 }

    st2InterfaceRcvdPktDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Count of stream data packets received and dropped due to
                   resource limitations' "
        ::= { st2InterfaceEntry 20 }

    st2InterfaceSentPktDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "'Count of stream data packets sent and dropped due tou
                   resource limitations' "
        ::= { st2InterfaceEntry 21 }

    st2InterfaceIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Interface Ip address"
        ::= { st2InterfaceEntry 22 }

    END  -- Wellfleet-ST2EXT-MIB
-- @(#)WSCCS k/mibs-sta.mib 1.1 8/30/95
Wellfleet-STA-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:48:19 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfStaGroup
        FROM Wellfleet-COMMON-MIB;


    wfSta		OBJECT IDENTIFIER ::= { wfStaGroup 1 }

    wfStaDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables or disables statistical thresholds and alarms"
        DEFVAL	{ enabled }
        ::= { wfSta 1 }

    wfStaPollInterval OBJECT-TYPE
        SYNTAX	INTEGER(5..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The polling interval (in seconds) in which to examine objects
                in the threshold table for threshold exceptions."
        DEFVAL	{ 60 }
        ::= { wfSta 2 }

    wfStaThresholdTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfStaThresholdEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table containing threshold targets"
        ::= { wfStaGroup 2 }

    wfStaThresholdEntry OBJECT-TYPE
        SYNTAX	WfStaThresholdEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Information about a particular threshold object"
        INDEX	{ wfStaThresholdObject }
        ::= { wfStaThresholdTable 1 }

    WfStaThresholdEntry ::= SEQUENCE {
    	    wfStaThresholdDelete
    		INTEGER,
    	    wfStaThresholdDisable
    		INTEGER,
    	    wfStaThresholdState
    		INTEGER,
    	    wfStaThresholdObject
    		OBJECT IDENTIFIER,
    	    wfStaThresholdLowValue
    		Gauge,
    	    wfStaThresholdLowEventLevel
    		INTEGER,
    	    wfStaThresholdMediumValue
    		Gauge,
    	    wfStaThresholdMediumEventLevel
    		INTEGER,
    	    wfStaThresholdHighValue
    		Gauge,
    	    wfStaThresholdHighEventLevel
    		INTEGER,
    	    wfStaThresholdCurrentValue
    		Gauge,
    	    wfStaThresholdUnits
    		INTEGER,
    	    wfStaThresholdAction
    		INTEGER,
    	    wfStaThresholdMaxSuccessiveAlarms
    		INTEGER,
    	    wfStaThresholdHoldDownIntervals
    		INTEGER,
    	    wfStaThresholdLowExceptions
    		Counter,
    	    wfStaThresholdLowAlarms
    		Counter,
    	    wfStaThresholdMediumExceptions
    		Counter,
    	    wfStaThresholdMediumAlarms
    		Counter,
    	    wfStaThresholdHighExceptions
    		Counter,
    	    wfStaThresholdHighAlarms
    		Counter,
    	    wfStaThresholdLabel
    		DisplayString
        }

    wfStaThresholdDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The row (object) deletion attribute for this threshold"
        DEFVAL	{ created }
        ::= { wfStaThresholdEntry 1 }

    wfStaThresholdDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The enable/disable attribute for this threshold. Setting
                this attribute to disabled, causes the threshold to be ignored
                in subsequent polling periods."
        DEFVAL	{ enabled }
        ::= { wfStaThresholdEntry 2 }

    wfStaThresholdState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    valid(1),
    		    ignored(2),
    		    held(3),
    		    suspended(4),
    		    invalid(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The state of this threshold. An invalid state means that the
                object could not be retrieved from the mib.  A held state
                indicates that the maximum successive exceptions for this
                threshold has been reached and that alarms will not be
                generated until an exception occurrs at a new level or no
                exception occurs for the specified number of hold down
                intervals at which point it becomes valid again.  An ignored
                state, indicates that this threshold is disabled and is not
                being polled.  A valid state indicates that this threshold is
                under examination each polling period and no errors have been
                encountered evaluating this object for exceptions.  A
                suspended state indicates that the object was not an integer
                type; user should manually delete the suspended object."
        DEFVAL	{ valid }
        ::= { wfStaThresholdEntry 3 }

    wfStaThresholdObject OBJECT-TYPE
        SYNTAX	OBJECT IDENTIFIER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The identifier of the mib object to examine for threshold
                exceptions."
        ::= { wfStaThresholdEntry 4 }

    wfStaThresholdLowValue OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The mark for low threshold exceptions"
        ::= { wfStaThresholdEntry 5 }

    wfStaThresholdLowEventLevel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    warning(1),
    		    info(2),
    		    debug(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The severity level of the event log message (alarm) to be
                generated on low exception"
        DEFVAL	{ info }
        ::= { wfStaThresholdEntry 6 }

    wfStaThresholdMediumValue OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The mark for medium threshold exceptions"
        ::= { wfStaThresholdEntry 7 }

    wfStaThresholdMediumEventLevel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    warning(1),
    		    info(2),
    		    debug(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The severity level of the event log message (alarm) to be
                generated on medium exception"
        DEFVAL	{ info }
        ::= { wfStaThresholdEntry 8 }

    wfStaThresholdHighValue OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The mark for high threshold exceptions"
        ::= { wfStaThresholdEntry 9 }

    wfStaThresholdHighEventLevel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    warning(1),
    		    info(2),
    		    debug(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The severity level of the event log message (alarm) to be
                generated on high exception"
        DEFVAL	{ info }
        ::= { wfStaThresholdEntry 10 }

    wfStaThresholdCurrentValue OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The most recently computed threshold value for the polled
                object."
        ::= { wfStaThresholdEntry 11 }

    wfStaThresholdUnits OBJECT-TYPE
        SYNTAX	INTEGER {
    		    absolute(1),
    		    persecond(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The units to be used in the determination of threshold
                exceptions.  Absolute means that when the value object reaches
                one of the three thresholds, an exception is generated.
                PerSecond means that when the value/second reaches one of the
                three threshold values, an exception is generated."
        DEFVAL	{ persecond }
        ::= { wfStaThresholdEntry 12 }

    wfStaThresholdAction OBJECT-TYPE
        SYNTAX	INTEGER {
    		    greaterthan(1),
    		    lessthan(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "How the threshold should be evaluated with respect to the
                threshold marks"
        DEFVAL	{ greaterthan }
        ::= { wfStaThresholdEntry 13 }

    wfStaThresholdMaxSuccessiveAlarms OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum number of successive alarms that can be generated
                for this object before it enters a HELD state.  A successive
                alarms is defined as two or more successive polling periods
                where an alarm is generated at the same level."
        DEFVAL	{ 5 }
        ::= { wfStaThresholdEntry 14 }

    wfStaThresholdHoldDownIntervals OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of exception free polling intervals which an
                object in a held state must pass before transitioning to a
                valid state."
        DEFVAL	{ 1 }
        ::= { wfStaThresholdEntry 15 }

    wfStaThresholdLowExceptions OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of low threshold exceptions."
        ::= { wfStaThresholdEntry 16 }

    wfStaThresholdLowAlarms OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of low threshold alarms."
        ::= { wfStaThresholdEntry 17 }

    wfStaThresholdMediumExceptions OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of medium threshold exceptions."
        ::= { wfStaThresholdEntry 18 }

    wfStaThresholdMediumAlarms OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of medium threshold alarms."
        ::= { wfStaThresholdEntry 19 }

    wfStaThresholdHighExceptions OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of high threshold exceptions."
        ::= { wfStaThresholdEntry 20 }

    wfStaThresholdHighAlarms OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of high threshold alarms."
        ::= { wfStaThresholdEntry 21 }

    wfStaThresholdLabel OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The threshold lable string configurable by user.
                The string would be returned in the trap and will
                show in the log as string wfSyncRxOctets.2.1 instead
                of the ASN.1 form."
        ::= { wfStaThresholdEntry 22 }

    END  -- Wellfleet-STA-MIB
-- @(#)WSCCS h/mibs-stats.mib 1.1 8/30/95
Wellfleet-STATS-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:48:24 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfStatsDcGroup
        FROM Wellfleet-COMMON-MIB;


    wfStatsDc	OBJECT IDENTIFIER ::= { wfStatsDcGroup 1 }

    wfStatsDcDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable  Statistical Data Collection."
        DEFVAL	{ disabled }
        ::= { wfStatsDc 1 }

    wfStatsDcVolume OBJECT-TYPE
        SYNTAX	INTEGER(0..14)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the file system volume number to which the
                Statistical Data Collection info files will be written.  The volume
                number corresponds to the slot number on which the
                volume resides.  "
        DEFVAL	{ 4 }
        ::= { wfStatsDc 2 }

    wfStatsDcFilePrefix OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The name of statistical data files."
        ::= { wfStatsDc 3 }

    wfStatsDcUpdateInterval OBJECT-TYPE
        SYNTAX	INTEGER(10..2147483647)
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "This number specifies the interval (number of minutes)
                for the STATS process to collect and update STATS data."
        DEFVAL	{ 60 }
        ::= { wfStatsDc 4 }

    wfStatsDcStoreInterval OBJECT-TYPE
        SYNTAX	INTEGER(10..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This number specifies the interval (number of minutes)
                for the STATS master process to collect and update STATS
                data from each slot and to write statistical data on to the
                file system. "
        DEFVAL	{ 60 }
        ::= { wfStatsDc 5 }

    wfStatsDcUpdateData OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Setting this attribute to a non-zero value will cause
                an immediate updating of the statistical data.
                Once activated, this attribute should be reset to zero
                to allow subsequent activations. "
        ::= { wfStatsDc 6 }

    wfStatsDcStoreData OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Setting this attribute to a non-zero value will cause
                an immediate writing of the statistical data info to
                a file in SRAM. Once activated, this attribute should
                be reset to zero to allow subsequent activations. "
        ::= { wfStatsDc 7 }

    wfStatsDcSwitchId OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "switch id used in the statistical data file to identify BNX. If
                it is not given explicitely, it will be assigned with wfSysName."
        ::= { wfStatsDc 8 }

    wfStatsDcEnableAll OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute, if set, will overwrite individual logical line
                enable/disable setting of statistical data collection."
        DEFVAL	{ off }
        ::= { wfStatsDc 9 }

    wfStatsDcMaxNumFiles OBJECT-TYPE
        SYNTAX	INTEGER(0..144)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute sets the MAX number of STATS files in an SRAM.
                If this number is reached, before writing the next STATS DC
                file to SRAM, the older STATS DC file will be delete.
                Note: Value 0 has the special meaning that this limitation
                  will not take into effect. The DC file will be written
                  in the round robin manner."
        ::= { wfStatsDc 10 }

    wfStatsDcFrVcDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "When this switch is turned on, the stats data of all VCs of the
                configured circuit will be collected. This is per BNX."
        DEFVAL	{ disabled }
        ::= { wfStatsDc 11 }

    wfStatsDcState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current state."
        DEFVAL	{ notpresent }
        ::= { wfStatsDc 12 }

    wfStatsDcHssiFields OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "************************************************************"
        DEFVAL	{ 4278190080 }
        ::= { wfStatsDc 13 }

    wfStatsDcSyncFields OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "************************************************************"
        DEFVAL	{ 4278190080 }
        ::= { wfStatsDc 14 }

    wfStatsDcDs1E1Fields OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "************************************************************"
        DEFVAL	{ 4294836224 }
        ::= { wfStatsDc 15 }

    wfStatsDcFrSwVcFields OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "************************************************************"
        DEFVAL	{ 4294966272 }
        ::= { wfStatsDc 16 }

    wfStatsDcCctCngcFields OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "************************************************************"
        DEFVAL	{ 4294901760 }
        ::= { wfStatsDc 17 }

    wfStatsDcFddiFields OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "************************************************************"
        ::= { wfStatsDc 18 }

    wfStatsDcCctCngcDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute is to enable.disable frsw cngc data collection"
        DEFVAL	{ disabled }
        ::= { wfStatsDc 19 }

    wfStatsDcMediaTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfStatsDcMediaEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "STATS Generic Media table for Generic media drivers using Line Number in their mib."
        ::= { wfStatsDcGroup 2 }

    wfStatsDcMediaEntry OBJECT-TYPE
        SYNTAX	WfStatsDcMediaEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The parameters for Stats."
        INDEX	{ wfStatsDcMediaLineNumber }
        ::= { wfStatsDcMediaTable 1 }

    WfStatsDcMediaEntry ::= SEQUENCE {
    	    wfStatsDcMediaDelete
    		INTEGER,
    	    wfStatsDcMediaLineNumber
    		INTEGER
        }

    wfStatsDcMediaDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates status of this entry."
        DEFVAL	{ created }
        ::= { wfStatsDcMediaEntry 1 }

    wfStatsDcMediaLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier; this indicates which line number
                NOTE: Line number is based on the following scheme:
                     msb   0         00      00      00      0       00      lsb
                           resv.     chan    type    slot    mod     conn"
        ::= { wfStatsDcMediaEntry 2 }

    END  -- Wellfleet-STATS-MIB
-- @(#)WSCCS r/mibs-swsmds.mib 1.1 8/30/95
Wellfleet-SWSMDS-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:48:30 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfSmdsSwGroup
        FROM Wellfleet-COMMON-MIB;


    wfSmdsSwSubTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSmdsSwSubEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Wellfleet SMDS Switch Circuit (SNI,
                subscriber) Record.  This record holds
                information on a per circuit (SSI, SNI,
                subscriber) basis."
        ::= { wfSmdsSwGroup 1 }

    wfSmdsSwSubEntry OBJECT-TYPE
        SYNTAX	WfSmdsSwSubEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Per Wellfleet circuit SMDS Switch configuration
                parameters and counters.
                This table contains Subscriber-Network Interface (SNI)
                parameters and state variables, one entry per SIP port."
        INDEX	{ wfSmdsSwSubCct }
        ::= { wfSmdsSwSubTable 1 }

    WfSmdsSwSubEntry ::= SEQUENCE {
    	    wfSmdsSwSubDelete
    		INTEGER,
    	    wfSmdsSwSubDisable
    		INTEGER,
    	    wfSmdsSwSubState
    		INTEGER,
    	    wfSmdsSwSubCct
    		INTEGER,
    	    wfSmdsSwSubDisableHrtbtPoll
    		INTEGER,
    	    wfSmdsSwSubHrtbtPollAddr
    		INTEGER,
    	    wfSmdsSwSubHrtbtPollInterval
    		INTEGER,
    	    wfSmdsSwSubHrtbtPollDownCount
    		INTEGER,
    	    wfSmdsSwSubDisableNetMgmt
    		INTEGER,
    	    wfSmdsSwSubInterfaceType
    		INTEGER,
    	    wfSmdsSwSubInterfaceIndex
    		INTEGER,
    	    wfSmdsSwSubDisableL3PduChecks
    		INTEGER,
    	    wfSmdsSwSubDisableUsageGeneration
    		INTEGER,
    	    wfSmdsSwSubDisableMIR
    		INTEGER,
    	    wfSmdsSwSubUnassignedSAs
    		Counter,
    	    wfSmdsSwSubSAScreenViolations
    		Counter,
    	    wfSmdsSwSubDAScreenViolations
    		Counter,
    	    wfSmdsSwSubNumPDUExceededMIR
    		Counter,
    	    wfSmdsSwSubSipL3ReceivedIAs
    		Counter,
    	    wfSmdsSwSubSipL3ReceivedGAs
    		Counter,
    	    wfSmdsSwSubSipL3UnrecIAs
    		Counter,
    	    wfSmdsSwSubSipL3UnrecGAs
    		Counter,
    	    wfSmdsSwSubSipL3SentIAs
    		Counter,
    	    wfSmdsSwSubSipL3SentGAs
    		Counter,
    	    wfSmdsSwSubSipL3Errors
    		Counter,
    	    wfSmdsSwSubSipL3InvAddrTypes
    		Counter,
    	    wfSmdsSwSubSipL3VersionSupport
    		INTEGER,
    	    wfSmdsSwSubSAScrnViolationOccur
    		OCTET STRING,
    	    wfSmdsSwSubDAScrnViolationOccur
    		OCTET STRING,
    	    wfSmdsSwSubUnassignedSAOccur
    		OCTET STRING,
    	    wfSmdsSwSubSAErrorOccur
    		OCTET STRING,
    	    wfSmdsSwSubDAErrorOccur
    		OCTET STRING,
    	    wfSmdsSwSubInvalidBASizeOccur
    		OCTET STRING,
    	    wfSmdsSwSubInvalidHELenOccur
    		OCTET STRING,
    	    wfSmdsSwSubInvalidHEVerOccur
    		OCTET STRING,
    	    wfSmdsSwSubInvalidHECarOccur
    		OCTET STRING,
    	    wfSmdsSwSubInvalidHEPadOccur
    		OCTET STRING,
    	    wfSmdsSwSubBEtagOccur
    		OCTET STRING,
    	    wfSmdsSwSubBAsizeNELenOccur
    		OCTET STRING,
    	    wfSmdsSwSubIncorrectLenOccur
    		OCTET STRING,
    	    wfSmdsSwSubExceededMIROccur
    		OCTET STRING,
    	    wfSmdsSwSubInBandMgmtDisable
    		INTEGER,
    	    wfSmdsSwSubInBandMgmtLocalAddr
    		OCTET STRING,
    	    wfSmdsSwSubInBandMgmtReceivedPDUs
    		Counter,
    	    wfSmdsSwSubInBandMgmtSentPDUs
    		Counter,
    	    wfSmdsSwSubInBandMgmtMaxLenErrors
    		Counter,
    	    wfSmdsSwSubInBandMgmtEncapsErrors
    		Counter,
    	    wfSmdsSwSubGAPartialResolve
    		Counter,
    	    wfSmdsSwSubDANotOnSni
    		Counter
        }

    wfSmdsSwSubDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "create/delete parameter, dflt = created"
        DEFVAL	{ created }
        ::= { wfSmdsSwSubEntry 1 }

    wfSmdsSwSubDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable parameter, dflt = enabled"
        DEFVAL	{ enabled }
        ::= { wfSmdsSwSubEntry 2 }

    wfSmdsSwSubState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "SMDS Switch state variable, Up, Down Init, Not Present"
        DEFVAL	{ notpresent }
        ::= { wfSmdsSwSubEntry 3 }

    wfSmdsSwSubCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "cct number for this instance"
        ::= { wfSmdsSwSubEntry 4 }

    wfSmdsSwSubDisableHrtbtPoll OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "determine use of DXI heartbeat poll"
        DEFVAL	{ disabled }
        ::= { wfSmdsSwSubEntry 5 }

    wfSmdsSwSubHrtbtPollAddr OBJECT-TYPE
        SYNTAX	INTEGER {
    		    cpe(1),
    		    net(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "determine if heartbeat poll messages
                are sent as as CPE or network
                (CSU/DSU) messages."
        DEFVAL	{ net }
        ::= { wfSmdsSwSubEntry 6 }

    wfSmdsSwSubHrtbtPollInterval OBJECT-TYPE
        SYNTAX	INTEGER(6..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "heartbeat polling messages get sent every this many
                seconds - we don't want the polling interval to be
                less than or equal to the no-acknowledgment timer."
        DEFVAL	{ 10 }
        ::= { wfSmdsSwSubEntry 7 }

    wfSmdsSwSubHrtbtPollDownCount OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "if this many consecutive heartbeat polling messages
                go unacknowledged, log an event declaring the line down"
        DEFVAL	{ 3 }
        ::= { wfSmdsSwSubEntry 8 }

    wfSmdsSwSubDisableNetMgmt OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "determine use of LMI network management"
        DEFVAL	{ disabled }
        ::= { wfSmdsSwSubEntry 9 }

    wfSmdsSwSubInterfaceType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    sni(1),
    		    ssi(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "defines whether this interface is a SNI or
                SSI."
        DEFVAL	{ sni }
        ::= { wfSmdsSwSubEntry 10 }

    wfSmdsSwSubInterfaceIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The index number for the SSI/SNI. Each SNI in the
                network has a unique id.  The value of this object
                identifies the SIP port interface for which this
                entry contains management information."
        ::= { wfSmdsSwSubEntry 11 }

    wfSmdsSwSubDisableL3PduChecks OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable L3_PDU verification.
                Default is disabled."
        DEFVAL	{ enabled }
        ::= { wfSmdsSwSubEntry 12 }

    wfSmdsSwSubDisableUsageGeneration OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable usage data generation.
                Default is disabled."
        DEFVAL	{ disabled }
        ::= { wfSmdsSwSubEntry 13 }

    wfSmdsSwSubDisableMIR OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable MIR enforcement, default is
                disabled."
        DEFVAL	{ disabled }
        ::= { wfSmdsSwSubEntry 14 }

    wfSmdsSwSubUnassignedSAs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of SIP Level 3 PDUs discarded
                by the SMDS Switch because the Source Address was
                not assigned to the SNI."
        ::= { wfSmdsSwSubEntry 15 }

    wfSmdsSwSubSAScreenViolations OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of SIP L3_PDUs that violated the
                address screen based on source address screening
                for an SNI."
        ::= { wfSmdsSwSubEntry 16 }

    wfSmdsSwSubDAScreenViolations OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of SIP Level 3 PDUs that
                violated the Destination Address Screening using
                either an Individual Address Screen or a
                Group Address Screen for the SNI."
        ::= { wfSmdsSwSubEntry 17 }

    wfSmdsSwSubNumPDUExceededMIR OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of SIP L3_PDUs that exceeded
                the MIR on this interface."
        ::= { wfSmdsSwSubEntry 18 }

    wfSmdsSwSubSipL3ReceivedIAs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of individually addressed SIP Level 3
                PDUs received by the SMDS Switch from the CPE.
                The total includes only unerrored L3PDUs."
        ::= { wfSmdsSwSubEntry 19 }

    wfSmdsSwSubSipL3ReceivedGAs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of group addressed SIP Level 3 PDUs
                received by the SMDS Switch from the CPE.
                The total includes only unerrored L3PDUs."
        ::= { wfSmdsSwSubEntry 20 }

    wfSmdsSwSubSipL3UnrecIAs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of SIP Level 3 PDUs received by the
                SMDS Switch from the CPE that have an unknown,
                valid, individual SMDS Destination Address."
        ::= { wfSmdsSwSubEntry 21 }

    wfSmdsSwSubSipL3UnrecGAs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of SIP Level 3 PDUs received by the
                SMDS Switch from the CPE that have an unknown,
                valid, group SMDS Destination Address."
        ::= { wfSmdsSwSubEntry 22 }

    wfSmdsSwSubSipL3SentIAs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of individually addressed SIP Level 3 PDUs
                that have been sent by this SMDS Switch to the CPE."
        ::= { wfSmdsSwSubEntry 23 }

    wfSmdsSwSubSipL3SentGAs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of group addressed SIP L3PDUs that have been
                sent by this SMDS Switch to the CPE."
        ::= { wfSmdsSwSubEntry 24 }

    wfSmdsSwSubSipL3Errors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of SIP Level 3 PDUs received
                by the SMDS Switch from the CPE that were
                discovered to have protocol errors."
        ::= { wfSmdsSwSubEntry 25 }

    wfSmdsSwSubSipL3InvAddrTypes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of SIP Level 3 PDUs received
                by the SMDS Switch from the CPE that had a value
                in the Source or Destination Address type subfield
                other than group or individual.  Or if the
                Source Address type subfield value indicates
                a group address."
        ::= { wfSmdsSwSubEntry 26 }

    wfSmdsSwSubSipL3VersionSupport OBJECT-TYPE
        SYNTAX	INTEGER {
    		    version(1)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A value which indicates the version(s) of SIP
                that this SNI supports.  The value is a sum.
                This sum initially takes the value zero.  For each
                version, V, that this interface supports, 2 raised
                to (V - 1) is added to the sum. For example, a
                port supporting versions 1 and 2 would have a
                value of (2^(1-1)+2^(2-1))=3.  The
                SipL3VersionSupport is effectively a bit mask with
                Version 1 equal to the least significant bit (LSB)."
        DEFVAL	{ version }
        ::= { wfSmdsSwSubEntry 27 }

    wfSmdsSwSubSAScrnViolationOccur OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A string containing the SMDS Source Address,
                Destination Address, and Event time of the most
                recent occurance of an L3_PDU discarded as a
                result of a Source Address violation."
        ::= { wfSmdsSwSubEntry 28 }

    wfSmdsSwSubDAScrnViolationOccur OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A string containing the SMDS Source Address,
                Destination Address, and Event time of the most
                recent occurance of an L3_PDU discarded as a
                result of a Destination Address violation."
        ::= { wfSmdsSwSubEntry 29 }

    wfSmdsSwSubUnassignedSAOccur OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A string containing the SMDS Source Address,
                Destination Address, and Event time of the most
                recent occurance of an L3_PDU discarded as a
                result of a unassigned Source Address."
        ::= { wfSmdsSwSubEntry 30 }

    wfSmdsSwSubSAErrorOccur OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A string containing the SMDS Source Address,
                Destination Address, and Event time of the most
                recent occurance of an L3_PDU discarded because
                of a Source Address Field Format error."
        ::= { wfSmdsSwSubEntry 31 }

    wfSmdsSwSubDAErrorOccur OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A string containing the SMDS Source Address,
                Destination Address, and Event time of the most
                recent occurance of an L3_PDU discarded because
                of a Destination Address Field Format error."
        ::= { wfSmdsSwSubEntry 32 }

    wfSmdsSwSubInvalidBASizeOccur OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A string containing the SMDS Source Address,
                Destination Address, and Event time of the most
                recent occurance of an L3_PDU discarded because
                of an invalid BASize field value."
        ::= { wfSmdsSwSubEntry 33 }

    wfSmdsSwSubInvalidHELenOccur OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A string containing the SMDS Source Address,
                Destination Address, and Event time of the most
                recent occurance of an L3_PDU discarded because
                of an invalid Header Extension Length Field value."
        ::= { wfSmdsSwSubEntry 34 }

    wfSmdsSwSubInvalidHEVerOccur OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A string containing the SMDS Source Address,
                Destination Address, and Event time of the most
                recent occurance of an L3_PDU discarded because
                of an invalid Header Extension Version element."
        ::= { wfSmdsSwSubEntry 35 }

    wfSmdsSwSubInvalidHECarOccur OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A string containing the SMDS Source Address,
                Destination Address, and Event time of the most
                recent occurance of an L3_PDU discarded because
                of an invalid Header Extension Carrier element."
        ::= { wfSmdsSwSubEntry 36 }

    wfSmdsSwSubInvalidHEPadOccur OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A string containing the SMDS Source Address,
                Destination Address, and Event time of the most
                recent occurance of an L3_PDU discarded because
                of an invalid Header Extension Pad element."
        ::= { wfSmdsSwSubEntry 37 }

    wfSmdsSwSubBEtagOccur OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A string containing the SMDS Source Address,
                Destination Address, and Event time of the most
                recent occurance of an L3_PDU discarded because
                of a Beginning-End Tag mismatch."
        ::= { wfSmdsSwSubEntry 38 }

    wfSmdsSwSubBAsizeNELenOccur OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A string containing the SMDS Source Address,
                Destination Address, and Event time of the most
                recent occurance of an L3_PDU discarded because
                the BAsize and Length fields are not equal."
        ::= { wfSmdsSwSubEntry 39 }

    wfSmdsSwSubIncorrectLenOccur OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A string containing the SMDS Source Address,
                Destination Address, and Event time of the most
                recent occurance of an L3_PDU discarded because
                of an incorrect length."
        ::= { wfSmdsSwSubEntry 40 }

    wfSmdsSwSubExceededMIROccur OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A string containing the SMDS Source Address,
                Destination Address, and Event time of the most
                recent occurance of an L3_PDU discarded because
                it exceeded the MIR."
        ::= { wfSmdsSwSubEntry 41 }

    wfSmdsSwSubInBandMgmtDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "In-Band Management enable/disable parameter.
                This attribute indicates whether the local
                WSNI (only) is enabled to run IP in Host mode,
                for in-band management purposes, in additional
                to being a switch interface.  The default is
                disabled"
        DEFVAL	{ disabled }
        ::= { wfSmdsSwSubEntry 42 }

    wfSmdsSwSubInBandMgmtLocalAddr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Special SMDS E.164 Individual address that
                identifies this local circuit.  This attribute
                is only used when the wfSmdsSwSubInBandMgmtDisable
                attribute is set to ENABLED"
        ::= { wfSmdsSwSubEntry 43 }

    wfSmdsSwSubInBandMgmtReceivedPDUs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of individually addressed In-Band
                Management PDUs received by the SMDS Switch from
                the CPE.  The total includes only unerrored PDUs."
        ::= { wfSmdsSwSubEntry 44 }

    wfSmdsSwSubInBandMgmtSentPDUs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of individually addressed In-Band Management
                PDUs that have been sent by this SMDS Switch to the CPE."
        ::= { wfSmdsSwSubEntry 45 }

    wfSmdsSwSubInBandMgmtMaxLenErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of In-Band Management PDUs that have
                exceeded the MTU size configured for the line"
        ::= { wfSmdsSwSubEntry 46 }

    wfSmdsSwSubInBandMgmtEncapsErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of In-Band Management PDUs that have
                invalid encapsulation schemes"
        ::= { wfSmdsSwSubEntry 47 }

    wfSmdsSwSubGAPartialResolve OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times group addressed L3_PDU's
                could not be resolved due to congestion."
        ::= { wfSmdsSwSubEntry 48 }

    wfSmdsSwSubDANotOnSni OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times a L3_PDU was discarded
                at the egress because the destination
                address was not assigned to the SNI."
        ::= { wfSmdsSwSubEntry 49 }

    wfSmdsSwEndpTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSmdsSwEndpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Parameters for the Endpoint table. An
                Endpoint is defined as an IP address, SMDS E.164
                address pair.  Endpoint ranges should never overlap."
        ::= { wfSmdsSwGroup 2 }

    wfSmdsSwEndpEntry OBJECT-TYPE
        SYNTAX	WfSmdsSwEndpEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The parameters for a particular Endpoint."
        INDEX	{ wfSmdsSwEndpE164AddrHigh,
    		  wfSmdsSwEndpE164AddrDelta,
    		  wfSmdsSwEndpInterfaceIndex }
        ::= { wfSmdsSwEndpTable 1 }

    WfSmdsSwEndpEntry ::= SEQUENCE {
    	    wfSmdsSwEndpDelete
    		INTEGER,
    	    wfSmdsSwEndpE164AddrHigh
    		OCTET STRING,
    	    wfSmdsSwEndpE164AddrDelta
    		OCTET STRING,
    	    wfSmdsSwEndpInterfaceIndex
    		INTEGER
        }

    wfSmdsSwEndpDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to delete this endpoint entry."
        DEFVAL	{ created }
        ::= { wfSmdsSwEndpEntry 1 }

    wfSmdsSwEndpE164AddrHigh OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (8))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The High end of the E.164 address range for
                this endpoint information."
        ::= { wfSmdsSwEndpEntry 2 }

    wfSmdsSwEndpE164AddrDelta OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (8))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The difference between wfSmdsSwEndpE164AddrHigh
                to the beginning of the endpoint information."
        ::= { wfSmdsSwEndpEntry 3 }

    wfSmdsSwEndpInterfaceIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This number indicates which SNI
                the endpoint information refers to."
        ::= { wfSmdsSwEndpEntry 4 }

    wfSmdsSwInterfaceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSmdsSwInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the Interface Table.
                This table also holds the Maximum Information Rate
                (MIR) information."
        ::= { wfSmdsSwGroup 3 }

    wfSmdsSwInterfaceEntry OBJECT-TYPE
        SYNTAX	WfSmdsSwInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table defines the IP addresses and what
                interfaces they are associated with."
        INDEX	{ wfSmdsSwInterfaceType,
    		  wfSmdsSwInterfaceIndex }
        ::= { wfSmdsSwInterfaceTable 1 }

    WfSmdsSwInterfaceEntry ::= SEQUENCE {
    	    wfSmdsSwInterfaceDelete
    		INTEGER,
    	    wfSmdsSwInterfaceType
    		INTEGER,
    	    wfSmdsSwInterfaceIndex
    		INTEGER,
    	    wfSmdsSwInterfaceIpAddr
    		IpAddress,
    	    wfSmdsSwInterfaceMIR
    		INTEGER,
    	    wfSmdsSwInterfaceCurrentRate
    		INTEGER
        }

    wfSmdsSwInterfaceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to delete this interface entry."
        DEFVAL	{ created }
        ::= { wfSmdsSwInterfaceEntry 1 }

    wfSmdsSwInterfaceType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    sni(1),
    		    ssi(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This number determines whether the interface
                information refers to an SNI, SSI, or ICI."
        ::= { wfSmdsSwInterfaceEntry 2 }

    wfSmdsSwInterfaceIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This number indicates which SNI, SSI, or
                ICI the interface information refers to."
        ::= { wfSmdsSwInterfaceEntry 3 }

    wfSmdsSwInterfaceIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "IP Address associated with the interface."
        ::= { wfSmdsSwInterfaceEntry 4 }

    wfSmdsSwInterfaceMIR OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This number represents the MIR in octets per second."
        ::= { wfSmdsSwInterfaceEntry 5 }

    wfSmdsSwInterfaceCurrentRate OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This number indicates the current rate of traffic flow
                to the interface.  The software updates this counter.
                When this attribute exceeds wfSmdsSwInterfaceMIR
                traffic to the interface is dropped.  Periodically
                the sofware resets this counter to zero."
        ::= { wfSmdsSwInterfaceEntry 6 }

    wfSmdsSwAssocScrnTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSmdsSwAssocScrnEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This list identifies the associated SNI
                addresses per individualand group address screen.
                Different addresses on an SNI may be associated with
                different individual and group address screens (one
                individual address screen per associated address on
                an SNI, and one group address screen per associated
                address on an SNI )."
        ::= { wfSmdsSwGroup 4 }

    wfSmdsSwAssocScrnEntry OBJECT-TYPE
        SYNTAX	WfSmdsSwAssocScrnEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An SNI index, group and individual screening
                list index, and the associated addresses for
                the SNI for the address screens."
        INDEX	{ wfSmdsSwAssocScrnSniIndex,
    		  wfSmdsSwAssocScrnAddrInd,
    		  wfSmdsSwAssocScrnIndivIndex,
    		  wfSmdsSwAssocScrnGrpIndex }
        ::= { wfSmdsSwAssocScrnTable 1 }

    WfSmdsSwAssocScrnEntry ::= SEQUENCE {
    	    wfSmdsSwAssocScrnDelete
    		INTEGER,
    	    wfSmdsSwAssocScrnSniIndex
    		INTEGER,
    	    wfSmdsSwAssocScrnAddrInd
    		OCTET STRING,
    	    wfSmdsSwAssocScrnIndivIndex
    		INTEGER,
    	    wfSmdsSwAssocScrnGrpIndex
    		INTEGER
        }

    wfSmdsSwAssocScrnDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to delete this associated screen entry."
        DEFVAL	{ created }
        ::= { wfSmdsSwAssocScrnEntry 1 }

    wfSmdsSwAssocScrnSniIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of this object identifies the SIP Port
                interface for which this entry contains management
                information.  The value of this object for a
                particular interface has the same value as the
                ifIndex, defined in RFC1213, for the same
                interface."
        ::= { wfSmdsSwAssocScrnEntry 2 }

    wfSmdsSwAssocScrnAddrInd OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (8))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of this object identifies one of the
                SMDS addresses for the SNI, identified by the
                wfSmdsSwAssocScrnSniIndex that belongs to this
                individual (or group) address screen
                (wfSmdsSwAssocScrnAddrInd).  This list will
                contain both individual and group addresses,
                because this list is used for both Destination
                Address Screening and Source Address Screening; the
                destination address in the L3_PDU that is
                undergoing Source Address Screening may be either a
                group or individual address that is assigned to
                that SNI.  One screen will have a maximum of 64
                associated addresses; up to a maximum of 16
                individual addresses identifying an SNI and up to a
                maximum of 48 group addresses identifying an SNI."
        ::= { wfSmdsSwAssocScrnEntry 3 }

    wfSmdsSwAssocScrnIndivIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..4)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of this object identifies the individual
                address screening list.  There is at least one
                individual address screen and at most s individual
                address screens per SNI.  The initial value of s is
                defined to be 4.  In the future more screening
                lists per SNI may be allowed.  The values of this
                object correspond to the values of wfSmdsSwIAScrnIndex
                in the wfSmdsSwIAScrnTable."
        ::= { wfSmdsSwAssocScrnEntry 4 }

    wfSmdsSwAssocScrnGrpIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..4)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of this object identifies the group
                address screening list.  There is at least one
                group address screen and at most s group address
                screens per SNI.  The initial value of s is defined
                to be 4.  In the future more screening lists per
                SNI may be allowed.  The values of this object
                correspond to the values of wfSmdsSwGAScrnIndex in the
                wfSmdsSwGAScrnTable. This field applies only to
                individual addresses on the SNI because it applies
                only to destination address screening of group addresses."
        ::= { wfSmdsSwAssocScrnEntry 5 }

    wfSmdsSwIAScrnTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSmdsSwIAScrnEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This list identifies the individual addresses
                that will be screened per individual address screen
                table.  The are up to s (s is equal to 4) individual
                address screens per SNI and at least one individual
                address screen per SNI.  The Individual Address
                Screens and the Group Address Screens together
                consist of up to n addresses.  The initial value of
                n is defined as 128. In the future a value of n up
                to 2048 may be supported.  The Individual Address
                Screen is used to perform Destination Address
                Screening for individually addressed data units and
                Source Address Screening for all data units.  The
                Group Address Screen is used to perform Destination
                Address Screening for group addressed data units."
        ::= { wfSmdsSwGroup 5 }

    wfSmdsSwIAScrnEntry OBJECT-TYPE
        SYNTAX	WfSmdsSwIAScrnEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An SNI index, a screening list index, the
                individual addresses to be screened for the
                individual address screen, and whether the screened
                address is valid or invalid."
        INDEX	{ wfSmdsSwIAScrnSniIndex,
    		  wfSmdsSwIAScrnIndex,
    		  wfSmdsSwIAScrnAddr }
        ::= { wfSmdsSwIAScrnTable 1 }

    WfSmdsSwIAScrnEntry ::= SEQUENCE {
    	    wfSmdsSwIAScrnDelete
    		INTEGER,
    	    wfSmdsSwIAScrnSniIndex
    		INTEGER,
    	    wfSmdsSwIAScrnIndex
    		INTEGER,
    	    wfSmdsSwIAScrnAddr
    		OCTET STRING
        }

    wfSmdsSwIAScrnDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to delete this IA screen entry."
        DEFVAL	{ created }
        ::= { wfSmdsSwIAScrnEntry 1 }

    wfSmdsSwIAScrnSniIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of this object identifies the SIP Port
                interface for which this entry contains management
                information.  The value of this object for a
                particular interface has the same value as the
                ifIndex, defined in RFC1213, for the same
                interface."
        ::= { wfSmdsSwIAScrnEntry 2 }

    wfSmdsSwIAScrnIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..4)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of this object identifies the individual
                address screening list.  There are at least one
                individual address screen and at most s individual
                address screens per SNI.  The initial value of s is
                defined to be 4.  In the future more screening
                lists per SNI may be allowed.  The values of this
                object correspond to the values of wfSmdsSwScrnIndex in
                the wfSmdsSwScrnTable."
        ::= { wfSmdsSwIAScrnEntry 3 }

    wfSmdsSwIAScrnAddr OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (8))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of this object identifies one of the
                individual addresses to be screened for source and
                destination address screening for the SNI
                identified by the wfSmdsSwIAScrnSniIndex and for the
                particular individual address screen
                (wfSmdsSwIAScrnIndex)."
        ::= { wfSmdsSwIAScrnEntry 4 }

    wfSmdsSwGAScrnTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSmdsSwGAScrnEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This list identifies the group addresses that
                will be screened per group address screen table.
                The are up to s (s is equal to 4) group address
                screens per SNI and at least one group address
                screen per SNI.  The Individual Address Screen and
                the Group Address Screen together consist of up to n
                addresses.  The initial value of n is defined as
                128. In the future a value of n up to 2048 may be
                supported.  The Individual Address Screen is used to
                perform Destination Address Screening for
                individually addressed data units and Source Address
                Screening for all data units.  The Group Address
                Screen is used to perform Destination Address
                Screening for group addressed data units."
        ::= { wfSmdsSwGroup 6 }

    wfSmdsSwGAScrnEntry OBJECT-TYPE
        SYNTAX	WfSmdsSwGAScrnEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An SNI index, a screening list index, the group
                addresses to be screened for the group address
                screen, and whether the screened address is valid
                or invalid."
        INDEX	{ wfSmdsSwGAScrnSniIndex,
    		  wfSmdsSwGAScrnIndex,
    		  wfSmdsSwGAScrnAddr }
        ::= { wfSmdsSwGAScrnTable 1 }

    WfSmdsSwGAScrnEntry ::= SEQUENCE {
    	    wfSmdsSwGAScrnDelete
    		INTEGER,
    	    wfSmdsSwGAScrnSniIndex
    		INTEGER,
    	    wfSmdsSwGAScrnIndex
    		INTEGER,
    	    wfSmdsSwGAScrnAddr
    		OCTET STRING
        }

    wfSmdsSwGAScrnDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to delete this GA screen entry."
        DEFVAL	{ created }
        ::= { wfSmdsSwGAScrnEntry 1 }

    wfSmdsSwGAScrnSniIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of this object identifies the SIP Port
                interface for which this entry contains management
                information.  The value of this object for a
                particular interface has the same value as the
                ifIndex, defined in RFC1213, for the same
                interface."
        ::= { wfSmdsSwGAScrnEntry 2 }

    wfSmdsSwGAScrnIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..4)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of this object identifies the group
                address screening list.  There is at least one
                group address screen and at most s group address
                screens per SNI.  The initial value of s is defined
                to be 4.  In the future more screening lists per
                SNI may be allowed.  The values of this object
                correspond to the values of wfSmdsSwScrnIndex in the
                wfSmdsSwSmdsScrnTable."
        ::= { wfSmdsSwGAScrnEntry 3 }

    wfSmdsSwGAScrnAddr OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (8))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of this object identifies one of the
                group addresses to be screened for destination
                address screening for the SNI identified by the
                wfSmdsSwGAScrnSniIndex and for the particular group
                address screen (wfSmdsSwGAScrnIndex)."
        ::= { wfSmdsSwGAScrnEntry 4 }

    wfSmdsSwGATable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSmdsSwGAEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A table of all group addresses in the network and
                the associated individual addresses identified by
                each group address.  A group address identifies up
                to m individual addresses.  An SMDS SS supports up
                to n group addresses.  A group address can be
                identified by up to p individual addresses.  A
                particular SNI is identified by up to 48 group
                addresses.  The initial values of m, n, and p are
                defined as 128, 1024, and 32, respectively.   In the
                future values of m and n of 2048 and 8192,
                respectively, may be supported."
        ::= { wfSmdsSwGroup 7 }

    wfSmdsSwGAEntry OBJECT-TYPE
        SYNTAX	WfSmdsSwGAEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A Group Address and an address in that group and
                whether that association is valid or invalid."
        INDEX	{ wfSmdsSwGASSI,
    		  wfSmdsSwGAGroupAddress,
    		  wfSmdsSwGAGroupMember }
        ::= { wfSmdsSwGATable 1 }

    WfSmdsSwGAEntry ::= SEQUENCE {
    	    wfSmdsSwGADelete
    		INTEGER,
    	    wfSmdsSwGASSI
    		INTEGER,
    	    wfSmdsSwGAGroupAddress
    		OCTET STRING,
    	    wfSmdsSwGAGroupMember
    		OCTET STRING
        }

    wfSmdsSwGADelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to delete this group address entry."
        DEFVAL	{ created }
        ::= { wfSmdsSwGAEntry 1 }

    wfSmdsSwGASSI OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The SSI associated with this Group Address.
                An SSI of 0 is used to indicate that all interfaces
                can use the group address.  An SSI other than 0
                indicates that only the SSI, or an SNI associated
                with the SSI should use the group."
        ::= { wfSmdsSwGAEntry 2 }

    wfSmdsSwGAGroupAddress OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (8))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A Group Address."
        ::= { wfSmdsSwGAEntry 3 }

    wfSmdsSwGAGroupMember OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (8))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "An individual SMDS address that belongs to this
                Group Address."
        ::= { wfSmdsSwGAEntry 4 }

    wfSmdsSwCurUsageTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSmdsSwCurUsageEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table contains the Current Usage Data.
                This is the interface between Billing and Switching.
                The Switch gates create these records.  The Billing gates
                collect them to create billing data."
        ::= { wfSmdsSwGroup 8 }

    wfSmdsSwCurUsageEntry OBJECT-TYPE
        SYNTAX	WfSmdsSwCurUsageEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The usage data for the current usage period
                indexed by destination,source address."
        INDEX	{ wfSmdsSwCurUsageSni,
    		  wfSmdsSwCurUsageDestAddr,
    		  wfSmdsSwCurUsageSrcAddr }
        ::= { wfSmdsSwCurUsageTable 1 }

    WfSmdsSwCurUsageEntry ::= SEQUENCE {
    	    wfSmdsSwCurUsageDelete
    		INTEGER,
    	    wfSmdsSwCurUsageSni
    		INTEGER,
    	    wfSmdsSwCurUsageDestAddr
    		OCTET STRING,
    	    wfSmdsSwCurUsageSrcAddr
    		OCTET STRING,
    	    wfSmdsSwCurUsageGrpIndAddr
    		OCTET STRING,
    	    wfSmdsSwCurUsageNumL3Pdu
    		Counter,
    	    wfSmdsSwCurUsageNumOctet
    		Counter,
    	    wfSmdsSwCurUsageToBeDeleted
    		INTEGER
        }

    wfSmdsSwCurUsageDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Indication to delete this current usage entry."
        DEFVAL	{ created }
        ::= { wfSmdsSwCurUsageEntry 1 }

    wfSmdsSwCurUsageSni OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The SNI number of the interface generating the
                usage information"
        ::= { wfSmdsSwCurUsageEntry 2 }

    wfSmdsSwCurUsageDestAddr OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (8))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The destination address of a SMDS group or
                individual E.164 address."
        ::= { wfSmdsSwCurUsageEntry 3 }

    wfSmdsSwCurUsageSrcAddr OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (8))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The source address of a SMDS individual
                E.164 address."
        ::= { wfSmdsSwCurUsageEntry 4 }

    wfSmdsSwCurUsageGrpIndAddr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "When the destination address of an L3_PDU is
                a group address, this attribute is set to one of
                the E.164 individual addresses that is in the
                group address and on the destination SNI."
        ::= { wfSmdsSwCurUsageEntry 5 }

    wfSmdsSwCurUsageNumL3Pdu OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This number represents the number of billable
                L3_PDUs counted by the circuit during the most recent
                collection interval."
        ::= { wfSmdsSwCurUsageEntry 6 }

    wfSmdsSwCurUsageNumOctet OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This number represents the number of billable
                octets counted by the circuit during the most recent
                collection interval."
        ::= { wfSmdsSwCurUsageEntry 7 }

    wfSmdsSwCurUsageToBeDeleted OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indication to billing to delete
                this current usage entry."
        DEFVAL	{ created }
        ::= { wfSmdsSwCurUsageEntry 8 }

    wfSmdsSwUsage	OBJECT IDENTIFIER ::= { wfSmdsSwGroup 9 }

    wfSmdsSwUsageEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable SMDS_SW billing."
        DEFVAL	{ enabled }
        ::= { wfSmdsSwUsage 1 }

    wfSmdsSwUsageVolume OBJECT-TYPE
        SYNTAX	INTEGER(0..14)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the file system volume number to which the
                billing usage data files will be written.  The volume
                number corresponds to the slot number on which the
                volume resides.
                Note: Value 0 has the special meaning that no
                      'Store' and 'Flush' operations will take
                      place.  This translates to no Billing data
                      will be written to the local file system.
                      'Update' operations will still be performed on
                      each local slot.  Full Billing statistics
                      will still be available in the wfSmdsSwUsageTable
                      MIB."
        ::= { wfSmdsSwUsage 2 }

    wfSmdsSwUsageVolumeBackup OBJECT-TYPE
        SYNTAX	INTEGER(0..14)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates the backup volume if wfSmdsSwUsageVolume
                becomes inoperative.
                Note: This feature is not implemented in this release."
        ::= { wfSmdsSwUsage 3 }

    wfSmdsSwUsageDirectory OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The name of the directory where the billing usage data
                files are stored. "
        ::= { wfSmdsSwUsage 4 }

    wfSmdsSwUsageFilePrefix OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The base name of billing usage data files."
        ::= { wfSmdsSwUsage 5 }

    wfSmdsSwUsageTimerInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..60)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This number determines the timer interval (number
                of seconds) unit for the Billing process to perform
                its various timer driven tasks. i.e. updating billing
                usage data, writing billing usage data to file system
                and file system management activities."
        DEFVAL	{ 1 }
        ::= { wfSmdsSwUsage 6 }

    wfSmdsSwUsageUpdateInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This number specifies the interval (number of minutes)
                for the Billing process to collect and update billing
                usage data in the wfSmdsSwUsage MIB.
                Note: When converted to seconds, this must be a multiple
                of wfSmdsSwUsageTimerInterval. "
        DEFVAL	{ 10 }
        ::= { wfSmdsSwUsage 7 }

    wfSmdsSwUsageStoreInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This number specifies the interval (number of minutes)
                for the Billing process to write billing usage data on
                to the file system from the wfSmdsSwUsage MIB.
                Note: When converted to seconds, this must be a multiple
                of wfSmdsSwUsageTimerInterval. "
        DEFVAL	{ 10 }
        ::= { wfSmdsSwUsage 8 }

    wfSmdsSwUsageFlushInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This number specifies the interval (number of minutes)
                for the Billing process to write billing usage data on
                to the file system from the wfSmdsSwUsage MIB followed
                by zeroing the wfSmdsSwUsage MIB.
                Note: When converted to seconds, this must be a multiple of
                wfSmdsSwUsageTimerInterval. "
        DEFVAL	{ 60 }
        ::= { wfSmdsSwUsage 9 }

    wfSmdsSwUsageCleanupInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the interval (number of minutes) for the Billing
                process to check and delete old billing usage data files.
                Note: When converted to seconds, this must be a multilple
                of wfSmdsSwUsageTimerInterval. "
        DEFVAL	{ 60 }
        ::= { wfSmdsSwUsage 10 }

    wfSmdsSwUsageLocalTimeZone OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates local time zone of the switch"
        ::= { wfSmdsSwUsage 11 }

    wfSmdsSwUsageUpdateTimeStamp OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time stamp of last wfSmdsSwUsageUpdateInterval timer
                expiration or the starting time of the current
                wfSmdsSwUsageUpdateInterval.  This value is number
                of seconds since midnight Jan 1, 1976 (GMT). "
        ::= { wfSmdsSwUsage 12 }

    wfSmdsSwUsageStoreTimeStamp OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time stamp of last wfSmdsSwUsageStoreInterval
                timer expiration or the starting time of the current
                wfSmdsSwUsageStoreInterval.  This value is number
                of seconds since midnight Jan. 1, 1976 (GMT). "
        ::= { wfSmdsSwUsage 13 }

    wfSmdsSwUsageFlushTimeStamp OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time stamp of last wfSmdsSwUsageFlushInterval
                timer expiration or the starting time of the current
                wfSmdsSwUsageFlushInterval.  This value is
                number of seconds since midnight Jan. 1, 1976 (GMT). "
        ::= { wfSmdsSwUsage 14 }

    wfSmdsSwUsageCleanupTimeStamp OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time stamp of last wfSmdsSwUsageCleanupInterval
                timer expiration or the starting time of the current
                wfSmdsSwUsageCleanupInterval.  This value is number
                of seconds since midnight Jan. 1, 1976 (GMT). "
        ::= { wfSmdsSwUsage 15 }

    wfSmdsSwUsageUpdateData OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Setting this attribute to a non-zero value will cause
                an immediate updating of the billing usage data.
                Once activated, this attribute should be reset to zero
                to allow subsequent activations. "
        ::= { wfSmdsSwUsage 16 }

    wfSmdsSwUsageStoreData OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Setting this attribute to a non-zero value will cause
                an immediate updating and writing of the billing
                usage data. Once activated, this attribute should
                be reset to zero to allow subsequent activations. "
        ::= { wfSmdsSwUsage 17 }

    wfSmdsSwUsageFlushData OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Setting this attribute to a non-zero value will cause
                an immediate updating and writing of the billing usage
                data and followed by zeroing the wfSmdsSwBillingUsage
                MIB. Once activated, this attribute should be reset
                to zero to allow subsequent activations. "
        ::= { wfSmdsSwUsage 18 }

    wfSmdsSwUsageFileCleanup OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Setting this attribute to a non-zero value will cause
                an immediate checking and deleting old billing usage
                data files. Once activated, this attribute should
                be reset to zero to allow subsequent activations. "
        ::= { wfSmdsSwUsage 19 }

    wfSmdsSwUsageState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current state of SMDS_SW billing."
        DEFVAL	{ notpresent }
        ::= { wfSmdsSwUsage 20 }

    wfSmdsSwUsageCurVolume OBJECT-TYPE
        SYNTAX	INTEGER(0..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current file system volume number used. This
                number is the same as wfSmdsSwUsageVolume except
                when the user sets wfSmdsSwUsageVolume to an
                invalid number."
        ::= { wfSmdsSwUsage 21 }

    wfSmdsSwUsageCurVolumeBackup OBJECT-TYPE
        SYNTAX	INTEGER(0..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "curent backup file system volume number used. This
                number is the same as wfSmdsSwUsageVolumeBackUp except
                when the user sets wfSmdsSwUsageVolume to an
                invalid number.
                Note: This feature is not implemented in this release."
        ::= { wfSmdsSwUsage 22 }

    wfSmdsSwUsageCurDirectory OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current directory name used. This number is the
                same as wfSmdsSwUsageDirectory except when the user
                sets wfSmdsSwUsageDirectory to an invalid name."
        ::= { wfSmdsSwUsage 23 }

    wfSmdsSwUsageCurFilePrefix OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current base file name used. This number is the
                same as wfSmdsSwUsageFilePrefix except when the user
                sets wfSmdsSwUsageFilePrefix to an invalid name."
        ::= { wfSmdsSwUsage 24 }

    wfSmdsSwUsageCurTimerInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..60)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current timer interval number used. This number is
                the same as wfSmdsSwUsageTimerInterval except when the
                user sets wfSmdsSwUsageTimerInterval to an invalid value."
        DEFVAL	{ 1 }
        ::= { wfSmdsSwUsage 25 }

    wfSmdsSwUsageCurUpdateInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current update interval number used. This number is
                the same as wfSmdsSwUsageUpdateInterval except when the
                user sets wfSmdsSwUsageUpdateInterval to an invalid value."
        DEFVAL	{ 10 }
        ::= { wfSmdsSwUsage 26 }

    wfSmdsSwUsageCurStoreInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current store timer interval number used. This
                number is the same as wfSmdsSwUsageStoreInterval
                except when the user sets wfSmdsSwUsageStoreInterval
                to an invalid value."
        DEFVAL	{ 10 }
        ::= { wfSmdsSwUsage 27 }

    wfSmdsSwUsageCurFlushInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current flush timer interval number used. This
                number is the same as wfSmdsSwUsageFlushInterval
                except when the user sets wfSmdsSwUsageFlushInterval
                to an invalid value."
        DEFVAL	{ 60 }
        ::= { wfSmdsSwUsage 28 }

    wfSmdsSwUsageCurCleanupInterval OBJECT-TYPE
        SYNTAX	INTEGER(1..2147483647)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current file cleanup timer interval number used. This
                number is the same as wfSmdsSwUsageCleanupInterval
                except when the user sets wfSmdsSwUsageCleanupInterval
                to an invalid value."
        DEFVAL	{ 60 }
        ::= { wfSmdsSwUsage 29 }

    wfSmdsSwUsageDebug OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable printing of debug edl (trap)
                messages.
                NOTE:  Do not enable this attribute in operational enviornment
                       as it will likely flood the logging facility.  This
                       attribute is reserved for specialized debugging in a
                       controlled lab enviornment."
        DEFVAL	{ disabled }
        ::= { wfSmdsSwUsage 30 }

    wfSmdsSwUsageCurDebug OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "current debug value used. This value is the
                same as wfSmdsSwUsageDebug except when the user
                sets wfSmdsSwUsageDeubg to an invalid value."
        DEFVAL	{ disabled }
        ::= { wfSmdsSwUsage 31 }

    wfSmdsSwUsageSwitchId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "switch id used in the billing usage data file."
        ::= { wfSmdsSwUsage 32 }

    wfSmdsSwUsageNumEntries OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of entries in wfSmdsSwUsageTable"
        ::= { wfSmdsSwUsage 33 }

    wfSmdsSwUsageTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSmdsSwUsageEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Billing Usage Table."
        ::= { wfSmdsSwGroup 10 }

    wfSmdsSwUsageEntry OBJECT-TYPE
        SYNTAX	WfSmdsSwUsageEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The parameters for Billing Usage."
        INDEX	{ wfSmdsSwUsageSni,
    		  wfSmdsSwUsageDestAddr,
    		  wfSmdsSwUsageSrcAddr }
        ::= { wfSmdsSwUsageTable 1 }

    WfSmdsSwUsageEntry ::= SEQUENCE {
    	    wfSmdsSwUsageDelete
    		INTEGER,
    	    wfSmdsSwUsageSni
    		INTEGER,
    	    wfSmdsSwUsageDestAddr
    		OCTET STRING,
    	    wfSmdsSwUsageSrcAddr
    		OCTET STRING,
    	    wfSmdsSwUsageStartTimeStampHigh
    		INTEGER,
    	    wfSmdsSwUsageStartTimeStampLow
    		INTEGER,
    	    wfSmdsSwUsageEndTimeStampHigh
    		INTEGER,
    	    wfSmdsSwUsageEndTimeStampLow
    		INTEGER,
    	    wfSmdsSwUsageSentL3PduHigh
    		INTEGER,
    	    wfSmdsSwUsageSentL3PduLow
    		INTEGER,
    	    wfSmdsSwUsageSentOctetHigh
    		INTEGER,
    	    wfSmdsSwUsageSentOctetLow
    		INTEGER,
    	    wfSmdsSwUsageLastL3PduHigh
    		INTEGER,
    	    wfSmdsSwUsageLastL3PduLow
    		INTEGER,
    	    wfSmdsSwUsageLastOctetHigh
    		INTEGER,
    	    wfSmdsSwUsageLastOctetLow
    		INTEGER,
    	    wfSmdsSwUsageGrpIndAddr
    		OCTET STRING
        }

    wfSmdsSwUsageDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates status of this entry. SMDS_SW_USAGE_CREATED
                is the normal case.  SMDS_SW_USAGE_DELETED means this
                billing instance will be deleted at the end of
                the next wfSmdsSwUsageFlush period after this
                billing record is written out to the file system."
        DEFVAL	{ created }
        ::= { wfSmdsSwUsageEntry 1 }

    wfSmdsSwUsageSni OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit number of the interface generating the
                usage information"
        ::= { wfSmdsSwUsageEntry 2 }

    wfSmdsSwUsageDestAddr OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (8))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier; the destination address of an L3_PDU.
                The SMDS Switch collects usage data based on the
                destination/source address pair."
        ::= { wfSmdsSwUsageEntry 3 }

    wfSmdsSwUsageSrcAddr OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (8))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier; the source address of an L3_PDU.
                The SMDS Switch collects usage data based on the
                destination/source address pair."
        ::= { wfSmdsSwUsageEntry 4 }

    wfSmdsSwUsageStartTimeStampHigh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time stamp of the starting time (the high 32 bits)
                of last billing usage interval.  This value is the
                number of 1/100th seconds since
                midnight Jan 1, 1976 (GMT)."
        ::= { wfSmdsSwUsageEntry 5 }

    wfSmdsSwUsageStartTimeStampLow OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time stamp of the starting time (the low 32 bits)
                of last billing usage interval.  This value is the
                number of 1/100th seconds since
                midnight Jan 1, 1976 (GMT)."
        ::= { wfSmdsSwUsageEntry 6 }

    wfSmdsSwUsageEndTimeStampHigh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time stamp of the ending time (the high 32 bits)
                of last billing usage interval.  This value is the
                number of 1/100th seconds since
                midnight Jan 1, 1976 (GMT)."
        ::= { wfSmdsSwUsageEntry 7 }

    wfSmdsSwUsageEndTimeStampLow OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time stamp of the ending time (the low 32 bits)
                of last billing usage interval.  This value is the
                number of 1/100th seconds since
                midnight Jan 1, 1976 (GMT)."
        ::= { wfSmdsSwUsageEntry 8 }

    wfSmdsSwUsageSentL3PduHigh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number (the high 32 bits) of L3_PDUs
                sent to the CPE between
                wfSmdsSwUsageStartTimeStamp and
                wfSmdsSwUsageEndTimeStamp."
        ::= { wfSmdsSwUsageEntry 9 }

    wfSmdsSwUsageSentL3PduLow OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number (the low 32 bits) of L3_PDUs
                sent to the CPE between
                wfSmdsSwUsageStartTimeStamp and
                wfSmdsSwUsageEndTimeStamp."
        ::= { wfSmdsSwUsageEntry 10 }

    wfSmdsSwUsageSentOctetHigh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number (the high 32 bits) of octets
                sent to the CPE between
                wfSmdsSwUsageStartTimeStamp and
                wfSmdsSwUsageEndTimeStamp."
        ::= { wfSmdsSwUsageEntry 11 }

    wfSmdsSwUsageSentOctetLow OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number (the low 32 bits) of octets
                sent to the CPE between
                wfSmdsSwUsageStartTimeStamp and
                wfSmdsSwUsageEndTimeStamp."
        ::= { wfSmdsSwUsageEntry 12 }

    wfSmdsSwUsageLastL3PduHigh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The (high 32 bits) value of
                wfSmdsSwCurUsageNumL3Pdu value at
                wfSmdsSwUsageEndTimeStamp.
                Note:  Since wfSmdsSwCurUsageNumL3Pdu
                is a 32-bit COUNTER, this is really a counter
                keeping track of number of times
                wfSmdsSwCurUsageNumL3Pdu has wrapped around."
        ::= { wfSmdsSwUsageEntry 13 }

    wfSmdsSwUsageLastL3PduLow OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The (low 32 bits) value of
                wfSmdsSwCurUsageNumL3Pdu value at
                wfSmdsSwUsageEndTimeStamp."
        ::= { wfSmdsSwUsageEntry 14 }

    wfSmdsSwUsageLastOctetHigh OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The (high 32 bits) value of
                wfSmdsSwCurUsageNumOctets value at
                wfSmdsSwUsageEndTimeStamp.
                Note:  Since wfSmdsSwCurUsageNumOctets
                is a 32-bit COUNTER, this is really a counter
                keeping track of number of times
                wfSmdsSwCurUsageNumOctets has wrapped around."
        ::= { wfSmdsSwUsageEntry 15 }

    wfSmdsSwUsageLastOctetLow OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The (low 32 bits) value of
                wfSmdsSwCurUsageNumOctets value at
                wfSmdsSwUsageEndTimeStamp."
        ::= { wfSmdsSwUsageEntry 16 }

    wfSmdsSwUsageGrpIndAddr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "When the destination address of an L3_PDU is
                a group address, this attribute is set to one of
                the E.164 individual addresses that is in the
                group address and on the destination SNI."
        ::= { wfSmdsSwUsageEntry 17 }

    wfSmdsSwSsiSniTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSmdsSwSsiSniEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The Parameters for the SSI/SNI Object.
                This object associates SNI's with SSI's for
                Bellcore TR-TSV-001239 compliance."
        ::= { wfSmdsSwGroup 11 }

    wfSmdsSwSsiSniEntry OBJECT-TYPE
        SYNTAX	WfSmdsSwSsiSniEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The parameters for a particular SSI/SNI."
        INDEX	{ wfSmdsSwSsiSniSSI,
    		  wfSmdsSwSsiSniSNI }
        ::= { wfSmdsSwSsiSniTable 1 }

    WfSmdsSwSsiSniEntry ::= SEQUENCE {
    	    wfSmdsSwSsiSniDelete
    		INTEGER,
    	    wfSmdsSwSsiSniSSI
    		INTEGER,
    	    wfSmdsSwSsiSniSNI
    		INTEGER
        }

    wfSmdsSwSsiSniDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indication to delete this SSI/SNI entry."
        DEFVAL	{ created }
        ::= { wfSmdsSwSsiSniEntry 1 }

    wfSmdsSwSsiSniSSI OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "An SSI."
        ::= { wfSmdsSwSsiSniEntry 2 }

    wfSmdsSwSsiSniSNI OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "An SNI."
        ::= { wfSmdsSwSsiSniEntry 3 }

    END  -- Wellfleet-SWSMDS-MIB
-- @(#)WSCCS x/mibs-sync.mib 1.1 8/30/95
Wellfleet-SYNC-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:48:41 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfLine
        FROM Wellfleet-COMMON-MIB;


    wfSyncTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSyncEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "SYNC  line record"
        ::= { wfLine 5 }

    wfSyncEntry OBJECT-TYPE
        SYNTAX	WfSyncEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the SYNC table"
        INDEX	{ wfSyncSlot,
    		  wfSyncConnector }
        ::= { wfSyncTable 1 }

    WfSyncEntry ::= SEQUENCE {
    	    wfSyncDelete
    		INTEGER,
    	    wfSyncDisable
    		INTEGER,
    	    wfSyncState
    		INTEGER,
    	    wfSyncSlot
    		INTEGER,
    	    wfSyncConnector
    		INTEGER,
    	    wfSyncCct
    		INTEGER,
    	    wfSyncBofl
    		INTEGER,
    	    wfSyncBoflTmo
    		INTEGER,
    	    wfSyncMtu
    		INTEGER,
    	    wfSyncMadr
    		OCTET STRING,
    	    wfSyncPromiscuous
    		INTEGER,
    	    wfSyncXid
    		INTEGER,
    	    wfSyncClkSource
    		INTEGER,
    	    wfSyncClkSpeed
    		INTEGER,
    	    wfSyncSignalMode
    		INTEGER,
    	    wfSyncRtsEnable
    		INTEGER,
    	    wfSyncBurstCount
    		INTEGER,
    	    wfSyncService
    		INTEGER,
    	    wfSyncRetryCount
    		INTEGER,
    	    wfSyncLinkIdleTimer
    		INTEGER,
    	    wfSyncRetryTimer
    		INTEGER,
    	    wfSyncExtendedAddress
    		INTEGER,
    	    wfSyncExtendedAddressForce
    		INTEGER,
    	    wfSyncExtendedControl
    		INTEGER,
    	    wfSyncExtendedControlForce
    		INTEGER,
    	    wfSyncConnectAttempts
    		INTEGER,
    	    wfSyncWindowSizeTx
    		INTEGER,
    	    wfSyncWindowSizeTxExtc
    		INTEGER,
    	    wfSyncMinFrameSpace
    		INTEGER,
    	    wfSyncLocalAddress
    		INTEGER,
    	    wfSyncRemoteAddress
    		INTEGER,
    	    wfSyncPassThruLocalMadr
    		OCTET STRING,
    	    wfSyncPassThruRemoteMadr
    		OCTET STRING,
    	    wfSyncWanProtocol
    		INTEGER,
    	    wfSyncCrcSize
    		INTEGER,
    	    wfSyncRxOctets
    		Counter,
    	    wfSyncRxFrames
    		Counter,
    	    wfSyncTxOctets
    		Counter,
    	    wfSyncTxFrames
    		Counter,
    	    wfSyncRxErrors
    		Counter,
    	    wfSyncTxErrors
    		Counter,
    	    wfSyncLackRescRx
    		Counter,
    	    wfSyncLackRescTx
    		Counter,
    	    wfSyncUnderFlowTx
    		Counter,
    	    wfSyncRejectsTx
    		Counter,
    	    wfSyncRejectsRx
    		Counter,
    	    wfSyncOverFlowRx
    		Counter,
    	    wfSyncFramesIncompRx
    		Counter,
    	    wfSyncBadFramesRx
    		Counter,
    	    wfSyncFrameRejectsRx
    		Counter,
    	    wfSyncRuntsRx
    		Counter,
    	    wfSyncT1Timeouts
    		Counter,
    	    wfSyncMemoryErrors
    		Counter,
    	    wfSyncMediaType
    		INTEGER,
    	    wfSyncCfgTxQueueLength
    		INTEGER,
    	    wfSyncCfgRxQueueLength
    		INTEGER,
    	    wfSyncTxQueueLength
    		INTEGER,
    	    wfSyncRxQueueLength
    		INTEGER,
    	    wfSyncRxReplenMisses
    		Counter,
    	    wfSyncStartUpMode
    		INTEGER,
    	    wfSyncIdleRRFrames
    		INTEGER,
    	    wfSyncMultilineMode
    		INTEGER,
    	    wfSyncBODExamPeriod
    		INTEGER,
    	    wfSyncBODFullThreshold
    		INTEGER,
    	    wfSyncBODRecoverThreshold
    		INTEGER,
    	    wfSyncBODPeriodsToFail
    		INTEGER,
    	    wfSyncKG84ACycle
    		INTEGER,
    	    wfSyncKG84ASyncLossInterval
    		INTEGER,
    	    wfSyncKG84ARemoteResyncWait
    		INTEGER,
    	    wfSyncKG84ASyncPulse
    		INTEGER,
    	    wfSyncKG84AResyncs
    		INTEGER,
    	    wfSyncKG84AResyncsDetected
    		INTEGER,
    	    wfSyncKG84ABsu
    		INTEGER,
    	    wfSyncKG84AState
    		INTEGER,
    	    wfSyncKG84AOkFrames
    		INTEGER,
    	    wfSyncPollingEnable
    		INTEGER,
    	    wfSyncBackupPool
    		INTEGER,
    	    wfSyncDemandPool
    		INTEGER,
    	    wfSyncLineNumber
    		INTEGER,
    	    wfSyncHoldDownTime
    		INTEGER,
    	    wfSyncNetworkType
    		INTEGER,
    	    wfSyncActiveCct
    		INTEGER,
    	    wfSyncCableType
    		INTEGER,
    	    wfSyncRxDropPackets
    		Counter,
    	    wfSyncTxDropPackets
    		Counter,
    	    wfSyncModule
    		INTEGER,
    	    wfSyncActualConnector
    		INTEGER,
    	    wfSyncLineCoding
    		INTEGER,
    	    wfSyncLastChange
    		TimeTicks,
    	    wfSyncOutQLen
    		Gauge,
    	    wfSyncRemoteLpbkDetection
    		INTEGER,
    	    wfSyncLastState
    		INTEGER,
    	    wfSyncExternalClkSpeed
    		INTEGER,
    	    wfSyncBChannelOverride
    		INTEGER,
    	    wfSyncBChannel
    		INTEGER,
    	    wfSyncForceIFTF
    		INTEGER,
    	    wfSyncPriority
    		INTEGER,
    	    wfSyncTurboBofl
    		INTEGER,
    	    wfSyncBoflNum
    		INTEGER,
    	    wfSyncBoflLen
    		INTEGER,
    	    wfSyncTurboBoflMisses
    		INTEGER,
    	    wfSyncTurboBoflInvocations
    		INTEGER,
    	    wfSyncBandwidthOnDemandPool
    		INTEGER,
    	    wfSyncBODRecoverPeriodsToPass
    		INTEGER,
    	    wfSyncBODHistory
    		DisplayString,
    	    wfSyncBODDebugFlag
    		INTEGER,
    	    wfSyncBChRateAdaption
    		INTEGER,
    	    wfSyncBChActualRateAdaption
    		INTEGER
        }

    wfSyncDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter"
        DEFVAL	{ created }
        ::= { wfSyncEntry 1 }

    wfSyncDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfSyncEntry 2 }

    wfSyncState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    wait(4),
    		    notpresent(5),
    		    dsrwait(6),
    		    holddown(7),
    		    remoteloop(8),
    		    notpres(20)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line Driver state variable, Reflects the current state of the
                Line Driver.  NOTPRESENT is an obsoleted state.  It is replaced
                with NOTPRES."
        DEFVAL	{ notpres }
        ::= { wfSyncEntry 3 }

    wfSyncSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Slot, filled in by driver"
        ::= { wfSyncEntry 4 }

    wfSyncConnector OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID Connector, filled in by driver. For the ASN
                this attribute is an encoded value and is equal to
                'module'*10 + 'connector'. Where 'module' is defined in
                attribute 86 and 'connector' is defined in attribute 78
                of this table. For non-ASN platforms this attribute is
                the physical connector number on the slot."
        ::= { wfSyncEntry 5 }

    wfSyncCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "CCT number for this line instance"
        ::= { wfSyncEntry 6 }

    wfSyncBofl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "breath of life parameter"
        DEFVAL	{ enabled }
        ::= { wfSyncEntry 7 }

    wfSyncBoflTmo OBJECT-TYPE
        SYNTAX	INTEGER(1..60)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "breath of life timeout in seconds"
        DEFVAL	{ 5 }
        ::= { wfSyncEntry 8 }

    wfSyncMtu OBJECT-TYPE
        SYNTAX	INTEGER(3..4608)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "MTU parameter, this is buffer size for SYNC media, fixed"
        DEFVAL	{ 1600 }
        ::= { wfSyncEntry 9 }

    wfSyncMadr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line MAC address, fixed - line driver fills in from the 48 bit
                address stored in the serial number prom for this connector."
        ::= { wfSyncEntry 10 }

    wfSyncPromiscuous OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The promiscuous parameter allows address filtering based on the local
                and remote addresses.  When enabled, all frames are received, disabled
                indicates only frames destined for this local address are received"
        DEFVAL	{ disabled }
        ::= { wfSyncEntry 11 }

    wfSyncXid OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "XID enable/disable parameter. This parameter is used to enable
                or disable transmission/reception of Test XID frames."
        DEFVAL	{ disabled }
        ::= { wfSyncEntry 12 }

    wfSyncClkSource OBJECT-TYPE
        SYNTAX	INTEGER {
    		    internal(1),
    		    external(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx/Rx clock source is either internally or external generated."
        DEFVAL	{ external }
        ::= { wfSyncEntry 13 }

    wfSyncClkSpeed OBJECT-TYPE
        SYNTAX	INTEGER {
    		    clk1200b(1200),
    		    clk2400b(2401),
    		    clk4800b(4807),
    		    clk7200b(7204),
    		    clk9600b(9615),
    		    clk19200b(19230),
    		    clk32000b(32051),
    		    clk38400b(38461),
    		    clk56k(56818),
    		    clk64k(64102),
    		    clk125k(125000),
    		    clk230k(227272),
    		    clk420k(416666),
    		    clk625k(625000),
    		    clk833k(833333),
    		    clk1mb(1250000),
    		    clk2mb(2500000),
    		    clk5mb(5000000)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Internal Tx/Rx clock speed. This speed selection is valid only when
                internal clocking is selected."
        DEFVAL	{ clk64k }
        ::= { wfSyncEntry 14 }

    wfSyncSignalMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    balanced(1),
    		    unbalanced(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The signal mode parameter indicates the line paramter balanced or
                unbalanced."
        DEFVAL	{ balanced }
        ::= { wfSyncEntry 15 }

    wfSyncRtsEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2),
    		    kg84aenabled(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Note: In KG84 support, RTS has a different meaning"
        DEFVAL	{ disabled }
        ::= { wfSyncEntry 16 }

    wfSyncBurstCount OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2),
    		    unlimited(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Allows control over the DMA burst cycle duration on MK5025 based products.
                This attribute is ignored for AN and ASN products.  The default is always
                8 short word bursts (ENABLED).  There are only two cases in which this
                attribute should be changed.

                Case 1:  In certain cases with DSDE and DSE link modules when one or both
                     of the ethernet ports are suffering from excessive TxUflo or RxOflo
                     errors,  the BurstCount of one or both SYNC interfaces can be set to
                     single short word bursts (DISABLED).  The only modules for which this
                     may be necessary are the DSDE (5430 - Dual Sync, Dual Enet) (module ID
                     112) and the DSE (5420 - Dual Sync, Single Enet) (module ID 116).
                     If after making the change,  the TxUflo or RxOflo errors persist on the
                     ethernet or this SYNC interface starts to get UnderFlowTx or OverFlowRx
                     errors,  then the Link Module is overloaded and a more significant
                     software configuration change or a hardware configuration change is
                     needed.

                Case 2:  When a SYNC interface on an mk5025 based Link Module is getting
                     UnderFlowTx or OverFlowRx errors while running at bandwidths greater
                     than 2Mbps,  the errors may be eliminated by setting this attribute to
                     unlimited burst mode (UNLIMITED).  If after making the change,  the
                     errors persist or the same errors start on another SYNC interface or
                     one of the ethernet interfaces on the same module starts to get TxUflo
                     or RxOflo errors,  then the Link Module is overloaded and a more
                     significant software configuration change or a hardware configuration
                     change is needed.  For 6Mbps full duplex operation,  this attribute
                     will most likely need to be set to UNLIMITED and all other interfaces
                     on this module will most likely have to be deconfigured."
        DEFVAL	{ enabled }
        ::= { wfSyncEntry 17 }

    wfSyncService OBJECT-TYPE
        SYNTAX	INTEGER {
    		    transparent(1),
    		    llc1(2),
    		    llc2(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Service type for this circuit. Transparent is raw HDLC mode, LLC1 will
                prefix the HDLC address and control fields to the frame.  The LLC2 service
                provides the LAPB protocol service."
        DEFVAL	{ llc1 }
        ::= { wfSyncEntry 18 }

    wfSyncRetryCount OBJECT-TYPE
        SYNTAX	INTEGER(1..64)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Retry count parameter indicates the number of retransmission
                attempts which will be tried per frame before a line is determined
                to be down.  The retry count is max attempts following expiration of
                the T1 timer.  This parameter is equal to the N2 counter in ICB."
        DEFVAL	{ 16 }
        ::= { wfSyncEntry 19 }

    wfSyncLinkIdleTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..9999)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The link idle parameter is the number of seconds before a line has
                been determined to be idle.  An idle line is considered disconnectd
                This value is expressed in seconds."
        DEFVAL	{ 9 }
        ::= { wfSyncEntry 20 }

    wfSyncRetryTimer OBJECT-TYPE
        SYNTAX	INTEGER(1..9999)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Retry Timer parameter indicates the timeout in tenths of seconds for a
                response to be heard form the link.  Link control frames are sent at
                the expiration of this timer value.  The frames will be resent up to
                retry count (N2) at which time the link will be disconnected."
        DEFVAL	{ 30 }
        ::= { wfSyncEntry 21 }

    wfSyncExtendedAddress OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter controls length determination of the address field.
                When this parameter is enabled, the first bit of the address field
                be tested to determine the length of address field in octets."
        DEFVAL	{ disabled }
        ::= { wfSyncEntry 22 }

    wfSyncExtendedAddressForce OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "When this parameter is enabled, the receiver will assume that all
                address fields are 2 octets in length regardless of the first two
                bits of the control field.  Usefull only in Transparent Mode."
        DEFVAL	{ disabled }
        ::= { wfSyncEntry 23 }

    wfSyncExtendedControl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter allows the control fields of all S and I frames to
                become 2 octets in length instead of one.  Numbering of all I frame
                become modulo 128 instead of modulo 8.  The control field of U
                frames remains one octet in length."
        DEFVAL	{ disabled }
        ::= { wfSyncEntry 24 }

    wfSyncExtendedControlForce OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter when enabled will force all control fields to become
                two octets in length regardless the first two bits in the control
                field.  Usefull only in Transparent Mode. (LLC1)"
        DEFVAL	{ disabled }
        ::= { wfSyncEntry 25 }

    wfSyncConnectAttempts OBJECT-TYPE
        SYNTAX	INTEGER(1..9999)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter controls the number of connection attempts which
                will be made during a LAPB connection request.  This parameter
                is applicable only during LLC2 service."
        DEFVAL	{ 10 }
        ::= { wfSyncEntry 26 }

    wfSyncWindowSizeTx OBJECT-TYPE
        SYNTAX	INTEGER(1..7)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The window size parameter controls the number of I frames which
                may be transmitted without acknowledgement. Non EXTC mode."
        DEFVAL	{ 1 }
        ::= { wfSyncEntry 27 }

    wfSyncWindowSizeTxExtc OBJECT-TYPE
        SYNTAX	INTEGER(1..7)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The window size parameter controls the number of I frames which
                may be transmitted without acknowledgement in EXTC mode."
        DEFVAL	{ 1 }
        ::= { wfSyncEntry 28 }

    wfSyncMinFrameSpace OBJECT-TYPE
        SYNTAX	INTEGER(1..32)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The minimum frame spacing parameter defines the number of flags
                that are transmitted between adjacent frames."
        DEFVAL	{ 1 }
        ::= { wfSyncEntry 29 }

    wfSyncLocalAddress OBJECT-TYPE
        SYNTAX	INTEGER {
    		    addressdte(3),
    		    addressdce(1),
    		    addressexplicit(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The local address parameter contains the DTE,DCE or EXPLICIT
                value expressed as a single octet.  It may be extended to 2
                octets if EXTA has been set."
        DEFVAL	{ addressexplicit }
        ::= { wfSyncEntry 30 }

    wfSyncRemoteAddress OBJECT-TYPE
        SYNTAX	INTEGER {
    		    addressdte(3),
    		    addressdce(1),
    		    addressexplicit(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The remote address parameter contains the DTE,DCE or EXPLICIT
                value expressed as a single octet.  It may be extended to 2
                octets if EXTA has been set."
        DEFVAL	{ addressexplicit }
        ::= { wfSyncEntry 31 }

    wfSyncPassThruLocalMadr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "48 bit MAC address of Local end of Sync Passthru circuit"
        ::= { wfSyncEntry 32 }

    wfSyncPassThruRemoteMadr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "48 bit MAC address of Remote end of Sync Passthru circuit"
        ::= { wfSyncEntry 33 }

    wfSyncWanProtocol OBJECT-TYPE
        SYNTAX	INTEGER {
    		    standard(1),
    		    passthru(2),
    		    ppp(3),
    		    smds(4),
    		    framerelay(5),
    		    x25(6),
    		    switch(7),
    		    sw(8),
    		    atm(9),
    		    lapb(10),
    		    sdlc(11)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "WAN protocol selection is provided via this parameter. The
                supported protocols can be selected per interface."
        DEFVAL	{ standard }
        ::= { wfSyncEntry 34 }

    wfSyncCrcSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    crc16bit(1),
    		    crc32bit(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "CRC size parameter, 16 bit standard CCITT or extended 32 bit CRC"
        DEFVAL	{ crc16bit }
        ::= { wfSyncEntry 35 }

    wfSyncRxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets received without error"
        ::= { wfSyncEntry 36 }

    wfSyncRxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received without error"
        ::= { wfSyncEntry 37 }

    wfSyncTxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets transmitted without error"
        ::= { wfSyncEntry 38 }

    wfSyncTxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames transmitted without error"
        ::= { wfSyncEntry 39 }

    wfSyncRxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of receive errors"
        ::= { wfSyncEntry 40 }

    wfSyncTxErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmission errors"
        ::= { wfSyncEntry 41 }

    wfSyncLackRescRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Rx frames dropped due to lack of buffer resources"
        ::= { wfSyncEntry 42 }

    wfSyncLackRescTx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames clipped in driver's transmit routine due to transmit
                congestion."
        ::= { wfSyncEntry 43 }

    wfSyncUnderFlowTx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of transmission underflows, device FIFO went empty before
                next DMA request was granted."
        ::= { wfSyncEntry 44 }

    wfSyncRejectsTx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of reject frames which were transmitted"
        ::= { wfSyncEntry 45 }

    wfSyncRejectsRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of reject frames which were received"
        ::= { wfSyncEntry 46 }

    wfSyncOverFlowRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of receive overflows, device FIFO overflowed before next
                DMA cycle granted.  No buffer resources available."
        ::= { wfSyncEntry 47 }

    wfSyncFramesIncompRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames which were incompletely received. These are frames
                which may have resulted from FRMRR errors."
        ::= { wfSyncEntry 48 }

    wfSyncBadFramesRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of bad receive frames, caused by FCS errors or non octet aligned."
        ::= { wfSyncEntry 49 }

    wfSyncFrameRejectsRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Frame Rejects received"
        ::= { wfSyncEntry 50 }

    wfSyncRuntsRx OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of runt frames received"
        ::= { wfSyncEntry 51 }

    wfSyncT1Timeouts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of T1 timeout's detected. The T1 timer is the link
                retransmission timer.  Link control frames will be retransmitted
                when T1 expires.  This is a count of the number of timeouts."
        ::= { wfSyncEntry 52 }

    wfSyncMemoryErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of memory access errors detected. A MERR is the expiration of
                a DMA cycle without the bus being granted within 26us."
        ::= { wfSyncEntry 53 }

    wfSyncMediaType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(1),
    		    t1(2),
    		    e1(3),
    		    raisedtr(4),
    		    v25bis(5),
    		    bri(6),
    		    isdnleased(7)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Media type selection is provided via this parameter"
        DEFVAL	{ default }
        ::= { wfSyncEntry 54 }

    wfSyncCfgTxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured Transmit Queue Length. Values other than zero over-ride the
                router selected values.  A value of zero has a special meaning.  Zero
                causes router based default values to be used.  Values larger than the
                compiled ring size are truncated to the compiled ring size. "
        ::= { wfSyncEntry 55 }

    wfSyncCfgRxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured Receive Queue Length. Values other than zero over-ride the
                router selected values.  A value of zero has a special meaning.  Zero
                causes router based default values to be used.  Values larger than the
                compiled ring size are truncated to the compiled ring size. "
        ::= { wfSyncEntry 56 }

    wfSyncTxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current Transmit Queue Length."
        ::= { wfSyncEntry 57 }

    wfSyncRxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current Receive Queue Length."
        ::= { wfSyncEntry 58 }

    wfSyncRxReplenMisses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packet buffer misses while attempting to replenish driver
                receive ring."
        ::= { wfSyncEntry 59 }

    wfSyncStartUpMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    passive(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Initiation of link level for LLC2 running LAPB"
        DEFVAL	{ active }
        ::= { wfSyncEntry 60 }

    wfSyncIdleRRFrames OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit Link level RR's (Reciever Readys) during idle time. Every
                wfSyncLinkIdleTimer expiration an RR will be sent."
        DEFVAL	{ off }
        ::= { wfSyncEntry 61 }

    wfSyncMultilineMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    standard(1),
    		    monitor(2),
    		    primary(3),
    		    secondary(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This indicates the roll the sync line plays in a
                Bandwidth on Demand multiline circuit.  If this is
                not BOD, the mode is standard."
        DEFVAL	{ standard }
        ::= { wfSyncEntry 62 }

    wfSyncBODExamPeriod OBJECT-TYPE
        SYNTAX	INTEGER(5..200)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This indicates the interval that the line should
                be polled for possible congestion.  This value is in
                tenths of a second"
        DEFVAL	{ 10 }
        ::= { wfSyncEntry 63 }

    wfSyncBODFullThreshold OBJECT-TYPE
        SYNTAX	INTEGER(10..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the percentage of the theoretical maximum line
                throughput that must be reached or exceeded before the line is
                considered congested."
        DEFVAL	{ 70 }
        ::= { wfSyncEntry 64 }

    wfSyncBODRecoverThreshold OBJECT-TYPE
        SYNTAX	INTEGER(10..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the recovery threshold expressed as a percentage of the
                theoretical maximum line throughput.  The actual throughput must fall
                below this percentage in order for the BOD circuit to
                revert back to the primary line only. This value should be
                set to less than one half the value of wfSyncBODFullThreshold
                to avoid toggling the secondary."
        DEFVAL	{ 20 }
        ::= { wfSyncEntry 65 }

    wfSyncBODPeriodsToFail OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the number of consecutive periods where the line
                throughput is above the congestion threshold required to declare
                the line congested."
        DEFVAL	{ 10 }
        ::= { wfSyncEntry 66 }

    wfSyncKG84ACycle OBJECT-TYPE
        SYNTAX	INTEGER {
    		    cycle5ms(5),
    		    cycle10ms(10),
    		    cycle25ms(25),
    		    cycle50ms(50),
    		    cycle100ms(100),
    		    cycle200ms(200),
    		    cycle500ms(500)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Monitor sample time in milliseconds"
        DEFVAL	{ cycle100ms }
        ::= { wfSyncEntry 67 }

    wfSyncKG84ASyncLossInterval OBJECT-TYPE
        SYNTAX	INTEGER {
    		    num2cycles(2),
    		    num5cycles(5),
    		    num10cycles(10),
    		    num25cycles(25),
    		    num50cycles(50),
    		    num100cycles(100),
    		    num200cycles(200),
    		    num500cycles(500)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "timer starts when FCS error detected; if no good frame received
                during this time, declare loss of synchronization"
        DEFVAL	{ num50cycles }
        ::= { wfSyncEntry 68 }

    wfSyncKG84ARemoteResyncWait OBJECT-TYPE
        SYNTAX	INTEGER {
    		    num2cycles(2),
    		    num5cycles(5),
    		    num10cycles(10),
    		    num25cycles(25),
    		    num50cycles(50),
    		    num100cycles(100),
    		    num200cycles(200),
    		    num500cycles(500)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "when loss of synchronization is detected, and CTS is low, start timer; if
                CTS is not high when timer expires, force sync request"
        DEFVAL	{ num200cycles }
        ::= { wfSyncEntry 69 }

    wfSyncKG84ASyncPulse OBJECT-TYPE
        SYNTAX	INTEGER(2..4096)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "interval to pulse KG84a SYNC signal, in milliseconds"
        DEFVAL	{ 10 }
        ::= { wfSyncEntry 70 }

    wfSyncKG84AResyncs OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of KG84 resyncs performed"
        ::= { wfSyncEntry 71 }

    wfSyncKG84AResyncsDetected OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "number of KG84 resyncs detected"
        ::= { wfSyncEntry 72 }

    wfSyncKG84ABsu OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "value taken from mk5025 sync chip control block"
        ::= { wfSyncEntry 73 }

    wfSyncKG84AState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    idle(1),
    		    local(2),
    		    remote(3),
    		    sync(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "state of sync"
        DEFVAL	{ idle }
        ::= { wfSyncEntry 74 }

    wfSyncKG84AOkFrames OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "count of valid frames received. This value taken from normal sync
                processing, updated by timer routine when FCE error detected"
        ::= { wfSyncEntry 75 }

    wfSyncPollingEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable or Disable Sync Polling. When Sync Polling is enabled, the
                the Sync Driver will be disabled if the DSR lead is dropped. If
                disabled, the DSR lead is ignored."
        DEFVAL	{ disabled }
        ::= { wfSyncEntry 76 }

    wfSyncBackupPool OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Backup pool id containing this line driver"
        ::= { wfSyncEntry 77 }

    wfSyncDemandPool OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Dial on demand  pool id containing this line driver"
        ::= { wfSyncEntry 78 }

    wfSyncLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "line number for this line instance"
        ::= { wfSyncEntry 79 }

    wfSyncHoldDownTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Wait this number of seconds before bringing the line
                up. This prevents line waffling if this is a
                reactivated primary line in a backup configuration
                and it is a dirty line"
        ::= { wfSyncEntry 80 }

    wfSyncNetworkType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    gosip(1),
    		    net2(2),
    		    c03(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specific Network Link Level to be executed, LAPB mode only.
                The types GOSIP and NET2 are used in conjunction with an MK5025
                chip revision C04.  If a customer must be NET2 compliant and is
                using an MK5025 chip revision C03, the C03 option must be used."
        DEFVAL	{ net2 }
        ::= { wfSyncEntry 81 }

    wfSyncActiveCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Active CCT number for this line instance"
        ::= { wfSyncEntry 82 }

    wfSyncCableType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    rs232(1),
    		    rs422(2),
    		    v35(3),
    		    x21(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Type of Cable attached to the sync port - this is
                needed for V.25bis and Raise DTR to properly
                communicate with the modem"
        ::= { wfSyncEntry 83 }

    wfSyncRxDropPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Rx packets dropped by driver."
        ::= { wfSyncEntry 84 }

    wfSyncTxDropPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Tx packets dropped by driver."
        ::= { wfSyncEntry 85 }

    wfSyncModule OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Module number for ASN platform, filled in by driver. For non-ASN
                platforms this attribute will not be used."
        ::= { wfSyncEntry 86 }

    wfSyncActualConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4),
    		    five(5),
    		    six(6),
    		    seven(7),
    		    eight(8)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Actual connector number for ASN platform, filled in
                by driver. For non-ASN platforms, this attribute will
                not be used."
        ::= { wfSyncEntry 87 }

    wfSyncLineCoding OBJECT-TYPE
        SYNTAX	INTEGER {
    		    nrz(1),
    		    nrzi(2),
    		    nrzimark(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Line Coding for sync interface. Can be either NRZ or NRZI."
        DEFVAL	{ nrz }
        ::= { wfSyncEntry 88 }

    wfSyncLastChange OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of SysUpTime at the time the interface entered it's current
                operational state (UP state).  SysUpTime is defined as the time (in
                hundredths of a second) since the network management portion of the
                system was last re-initialized.  Usually the time since boot."
        ::= { wfSyncEntry 89 }

    wfSyncOutQLen OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The instantaneous current length of the output packet queue (in packets)."
        ::= { wfSyncEntry 90 }

    wfSyncRemoteLpbkDetection OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute enables Remote Loopback Detection. When enabled along with
                wfSyncBofl,  the device driver will detect when it is receiving its own
                BOFL packets and will bring the interface down assuming that somewhere
                down stream the link has been put into loopback. "
        DEFVAL	{ disabled }
        ::= { wfSyncEntry 91 }

    wfSyncLastState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    wait(4),
    		    notpresent(5),
    		    dsrwait(6),
    		    holddown(7),
    		    remoteloop(8),
    		    notpres(20)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The state which the driver was in prior to the most recent
                re-initialization."
        ::= { wfSyncEntry 92 }

    wfSyncExternalClkSpeed OBJECT-TYPE
        SYNTAX	INTEGER(1200..6000000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "External Clock Speed. If external clocking is configured, this attribute
                should be set to the clock speed of the externally supplied clock.
                Depending on the protocols configured on this interface,  this value may
                control internal decision making within the router. In some cases,  router
                software uses this attribute for route selection.  If Priority Queuing is
                configured, it chooses queue depths based on this attribute.  This attribute
                has no effect when Internal clocking is configured."
        DEFVAL	{ 64102 }
        ::= { wfSyncEntry 93 }

    wfSyncBChannelOverride OBJECT-TYPE
        SYNTAX	INTEGER {
    		    bchannel1(1),
    		    bchannel2(2),
    		    default(3),
    		    floatingb(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "For ISDN, indicates which B Channel we're using. By default, we'd like
                the B Channel tied to the connector defined in the instance id, but
                the user may override that here, which gives the ability of connecting
                the B Channel to specific SCC's."
        DEFVAL	{ default }
        ::= { wfSyncEntry 94 }

    wfSyncBChannel OBJECT-TYPE
        SYNTAX	INTEGER {
    		    bchannel1(1),
    		    bchannel2(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates which B Channel is running"
        ::= { wfSyncEntry 95 }

    wfSyncForceIFTF OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(1),
    		    forcehdlcflags(2),
    		    forceidles(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the Inter Frame Time Fill (IFTF) pattern which gets transmitted
                when theres no data being transmitted on a particular channel. In normal
                operation, if this  attribute is set to the default value of
                SYNC_IFTF_DEFAULT, the pattern which gets transmitted is dependent
                on the 'wfSyncMediaType' value. This means that if 'wfSyncMediaType'
                equals 'SYNC_MEDIA_ISDN_BRI', the IFTF pattern will be Idles and for
                all other values of 'wfSyncMediaType', the IFTF pattern will be HDLC
                Flags. If this attribute is set to either SYNC_IFTF_FORCEFLAGS or
                SYNC_IFTF_FORCEIDLES, then the IFTF generated will be either HDLC
                Flags or Idles respectively, ignoring the 'wfSyncMediaType'. This
                gives the user the flexibility to override the default."
        DEFVAL	{ default }
        ::= { wfSyncEntry 96 }

    wfSyncPriority OBJECT-TYPE
        SYNTAX	INTEGER(1..50)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Used by dial/switched services to assign priority of lines
                within the same demand or backup pool"
        DEFVAL	{ 1 }
        ::= { wfSyncEntry 97 }

    wfSyncTurboBofl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DEBUG parameter - Turbo bofl enabled or disabled"
        DEFVAL	{ disabled }
        ::= { wfSyncEntry 98 }

    wfSyncBoflNum OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DEBUG parameter - Number of breath of life packets per breath
                of life"
        DEFVAL	{ 1 }
        ::= { wfSyncEntry 99 }

    wfSyncBoflLen OBJECT-TYPE
        SYNTAX	INTEGER(22..4450)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DEBUG parameter - breath of life packet length"
        DEFVAL	{ 200 }
        ::= { wfSyncEntry 100 }

    wfSyncTurboBoflMisses OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "DEBUG parameter - breath of life allocation failures"
        ::= { wfSyncEntry 101 }

    wfSyncTurboBoflInvocations OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "DEBUG parameter - breath of life invocations"
        ::= { wfSyncEntry 102 }

    wfSyncBandwidthOnDemandPool OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bandwidth pool id containing this line driver"
        ::= { wfSyncEntry 103 }

    wfSyncBODRecoverPeriodsToPass OBJECT-TYPE
        SYNTAX	INTEGER(1..100)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the number of consecutive periods where the queue
                depth is below the congestion threshold required to declare
                the line congested.  It is used for recovery.  That is,
                once a line is declared as congested, this is the number of
                consecutive examination periods where the queue depth is
                below the recovery threshold value required to delare that the
                line is no longer congested."
        DEFVAL	{ 10 }
        ::= { wfSyncEntry 104 }

    wfSyncBODHistory OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "DEBUG parameter - This is the SBOD history buffer."
        ::= { wfSyncEntry 105 }

    wfSyncBODDebugFlag OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "DEBUG parameter - This is the SBOD Debug flag, used to control
                debug code for SBOD."
        ::= { wfSyncEntry 106 }

    wfSyncBChRateAdaption OBJECT-TYPE
        SYNTAX	INTEGER {
    		    adaption64k(1),
    		    adaption128k(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute is only relevant when this Synchronous device driver
                is performing as an ISDN B channel over a BRI interface in leased
                line mode.  This attribute specifies the piece of ISDN line's bandwidth
                which data from this driver will occupy.  "
        DEFVAL	{ adaption64k }
        ::= { wfSyncEntry 107 }

    wfSyncBChActualRateAdaption OBJECT-TYPE
        SYNTAX	INTEGER {
    		    adaption64k(1),
    		    adaption128k(2),
    		    adaption56kmsb(3),
    		    adaption56klsb(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the current B Channel Rate Adaption in use. This attribute
                is only relevant when this Synchronous device driver is performing
                as an ISDN B channel over a BRI interface in leased line or dial-up
                mode. This attribute indicates the speed of this B-channel. It also
                specifies their bit positions for the case of 56K selections."
        ::= { wfSyncEntry 108 }

    END  -- Wellfleet-SYNC-MIB
-- @(#)WSCCS t/mibs-synro.mib 1.1 8/30/95
-- SECTION 1: Top Level Definitions

SYNOPTICS-ROOT-MIB DEFINITIONS ::= BEGIN


-- SynOptics Root MIB Release 1.3.3
-- Revision 06/05/95

-- Copyright 1995 Bay Networks, Inc.
-- All rights reserved.
-- This Bay Networks SNMP Management Information Base Specification
-- (Specification) embodies Bay Networks' confidential and
-- proprietary intellectual property. Bay Networks retains all
-- title and ownership in the Specification, including any
-- revisions.

-- This Specification is supplied "AS IS," and Bay Networks makes
-- no warranty, either express or implied, as to the use,
-- operation, condition, or performance of the Specification.


-- Imports

IMPORTS
	enterprises
		FROM RFC1155-SMI;

-- Textual Conventions

SnpxBackplaneType ::= INTEGER {
	other(1),		-- none of the following
	eth(2),			-- ethernet
	ethTok(3),		-- ethernet and tokenring
	ethFddi(4),		-- ethernet and FDDI
	ethTokFddi(5),		-- ethernet, tokenring, and FDDI
	ethTokRed(6),		-- ethernet and tokenring with
				--   redundant powersupply
	ethTokFddiRed(7),	-- ethernet, tokenring, and FDDI
				--   with redundant powersupply
	tok(8)			-- tokenring
	}
-- This type is used to specify a concentrator backplane.


SnpxChassisType ::= INTEGER {
	other(1),		-- none of the following
	m3000(2),		-- product 3000
	m3030(3),		-- product 3030
	m2310(4),		-- product 2310
	m2810(5),		-- product 2810
	m2912(6),		-- product 2912
	m2914(7),		-- product 2914
	m271x(8),		-- product 271x
	m2813(9),		-- product 2813
	m2814(10),		-- product 2814
	m2915(11),		-- product 2915
	m5000(12),		-- product 5000
	m2813SA(13),		-- product 2813SA
	m2814SA(14),		-- product 2814SA
	m810M(15),		-- product 810M
	m1032x(16),		-- product EtherCell
	m5005(17),		-- product 5005
	mAlcatelEthConc(18),	-- product Alcatel Ethernet workgroup conc.
	m2715SA(20),		-- product 2715SA
	m2486(21),		-- product 2486
	m28xxx(22),		-- product 28000 series
	m2300x(23),		-- product 23000 series
	m5DN00x(24),		-- product 5DN00x series
	mFusion(25),		-- product Fusion series
	m2310x(26)		-- product 23100 series
	}
-- This type is used to specify a concentrator chassis.


-- Top Branches under "synoptics"

synoptics	OBJECT IDENTIFIER ::= { enterprises 45 }

products	OBJECT IDENTIFIER ::= { synoptics 1 }
temporary	OBJECT IDENTIFIER ::= { synoptics 2 }
registration	OBJECT IDENTIFIER ::= { synoptics 3 }


-- Branches under "products"

series1000	OBJECT IDENTIFIER ::= { products 1 }
s3SnmpAgent	OBJECT IDENTIFIER ::= { products 2 }
series3000	OBJECT IDENTIFIER ::= { products 3 }
superAgent	OBJECT IDENTIFIER ::= { products 4 }
specialTraps	OBJECT IDENTIFIER ::= { products 5 }
series5000	OBJECT IDENTIFIER ::= { products 6 }
lanSwitch	OBJECT IDENTIFIER ::= { products 7 }


-- Branches under "temporary"

-- ieee8023	OBJECT IDENTIFIER ::= { temporary 1 }
-- proj1(del)	OBJECT IDENTIFIER ::= { temporary 2 }
-- proj2(sa)	OBJECT IDENTIFIER ::= { temporary 3 }
-- proj3(lc)	OBJECT IDENTIFIER ::= { temporary 4 }
-- proj4(pen)	OBJECT IDENTIFIER ::= { temporary 5 }
-- proj5(phe)	OBJECT IDENTIFIER ::= { temporary 6 }
-- proj6(fddi)	OBJECT IDENTIFIER ::= { temporary 7 }



-- Branches under "registration" (values for object sysObjectId)
s3reg-other	OBJECT IDENTIFIER ::= { registration 1 }


s3reg-3000	OBJECT IDENTIFIER ::= { registration 2 }
  s3reg-3000-enetNMM
		OBJECT IDENTIFIER ::= { s3reg-3000 1 }
  s3reg-3000-trNMM
		OBJECT IDENTIFIER ::= { s3reg-3000 2 }
  s3reg-3000-FDDI-NMM
		OBJECT IDENTIFIER ::= { s3reg-3000 3 }


s3reg-3030	OBJECT IDENTIFIER ::= { registration 3 }
  s3reg-3030-enetNMM
		OBJECT IDENTIFIER ::= { s3reg-3030 1 }
  s3reg-3030-trNMM
		OBJECT IDENTIFIER ::= { s3reg-3030 2 }
  s3reg-3030-FDDI-NMM
		OBJECT IDENTIFIER ::= { s3reg-3030 3 }


s3reg-2310	OBJECT IDENTIFIER ::= { registration 4 }
  s3reg-2310-enetNMM
		OBJECT IDENTIFIER ::= { s3reg-2310 1 }
  s3reg-2310-trNMM
		OBJECT IDENTIFIER ::= { s3reg-2310 2 }
  s3reg-2310-FDDI-NMM
		OBJECT IDENTIFIER ::= { s3reg-2310 3 }


s3reg-332X	OBJECT IDENTIFIER ::= { registration 5 }
s3reg-332XS	OBJECT IDENTIFIER ::= { registration 6 }
s3reg-3356	OBJECT IDENTIFIER ::= { registration 7 }


s3reg-2810	OBJECT IDENTIFIER ::= { registration 8 }
  s3reg-2810-enetNMM
		OBJECT IDENTIFIER ::= { s3reg-2810 1 }


s3reg-2715	OBJECT IDENTIFIER ::= { registration 9 }
  s3reg-2715-trNMM
	OBJECT IDENTIFIER ::= { s3reg-2715 1 }


s3reg-291X	OBJECT IDENTIFIER ::= { registration 10 }
  s3reg-291X-FDDI-NMM
		OBJECT IDENTIFIER ::= { s3reg-291X 1 }


s3reg-3394	OBJECT IDENTIFIER ::= { registration 11 }



s3reg-281X	OBJECT IDENTIFIER ::= { registration 12 }
  s3reg-281X-enetNMM
		OBJECT IDENTIFIER ::= { s3reg-281X 1 }


s5reg-5000	OBJECT IDENTIFIER ::= { registration 13 }
  s5reg-5000-ethNMM  -- Ethernet NMM in 5000 Chassis
		OBJECT IDENTIFIER ::= { s5reg-5000 1 }
  s5reg-5000-tokNMM  -- Token Ring NMM in 5000 Chassis
		OBJECT IDENTIFIER ::= { s5reg-5000 2 }
  s5reg-5000-fddNMM  -- FDDI NMM in 5000 Chassis
		OBJECT IDENTIFIER ::= { s5reg-5000 3 }
  s5reg-5000-atmNMM  -- ATM NMM in 5000 Chassis
		OBJECT IDENTIFIER ::= { s5reg-5000 4 }
  s5reg-5000-ethSwitchNMM  -- Ethernet Switch NMM in 5000 Chassis
		OBJECT IDENTIFIER ::= {s5reg-5000 5}


s3reg-281XSA	OBJECT IDENTIFIER ::= { registration 14 }
  s3reg-281XSA-enetNMM
		OBJECT IDENTIFIER ::= { s3reg-281XSA 1 }


lsreg-28xxx	OBJECT IDENTIFIER ::= { registration 15 }
  lsreg-28xxx-NMM
		OBJECT IDENTIFIER ::= { lsreg-28xxx 1 }


s3reg-8xx	OBJECT IDENTIFIER ::= { registration 16 }
  s3reg-810M-enetNMM
		OBJECT IDENTIFIER ::= { s3reg-8xx 1 }


s5reg-5005	OBJECT IDENTIFIER ::= { registration 17 }
  s5reg-5005-ethNMM  -- Ethernet NMM in 5005 Chassis
		OBJECT IDENTIFIER ::= { s5reg-5005 1 }
  s5reg-5005-tokNMM  -- Token Ring NMM in 5005 Chassis
		OBJECT IDENTIFIER ::= { s5reg-5005 2 }


s3reg-AlcatelConc	OBJECT IDENTIFIER ::= { registration 18 }
  s3reg-AlcatelEthConc-enetNMM
		OBJECT IDENTIFIER ::= { s3reg-AlcatelConc 1 }


s3reg-271XSA	OBJECT IDENTIFIER ::= { registration 19 }
  s3reg-271XSA-trNMM	OBJECT IDENTIFIER ::= { s3reg-271XSA 1 }


ecreg-1032x	OBJECT IDENTIFIER ::= { registration 20 }
  s3reg-1032x-NMM	OBJECT IDENTIFIER ::= { ecreg-1032x 1 }


sreg-5DN00x	OBJECT IDENTIFIER ::= { registration 21 }
  sreg-5DN00x-EthNMM	OBJECT IDENTIFIER ::= { sreg-5DN00x 1 }


sreg-Fusion	OBJECT IDENTIFIER ::= { registration 22 }
  sreg-Fusion-ethNMM	OBJECT IDENTIFIER ::= { sreg-Fusion 1 }


sreg-2300x	OBJECT IDENTIFIER ::= { registration 23 }
  sreg-2300x-NMM	OBJECT IDENTIFIER ::= { sreg-2300x 1 }


sreg-2310x	OBJECT IDENTIFIER ::= { registration 24 }
  sreg-2310x-NMM	OBJECT IDENTIFIER ::= { sreg-2310x 1 }


END
-- @(#)WSCCS h/mibs-sys.mib 1.1 8/30/95
Wellfleet-SYS-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:48:50 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfSystem
        FROM Wellfleet-COMMON-MIB;


    wfSys		OBJECT IDENTIFIER ::= { wfSystem 1 }

    wfSysDescr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A textual description of the entity including full name and version of
                the system's hardware type, OS, and networking SW "
        ::= { wfSys 1 }

    wfSysObjectID OBJECT-TYPE
        SYNTAX	OBJECT IDENTIFIER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Provides an unambiguous means for determining the MIB type (old product vs.
                harpoon MIB)."
        ::= { wfSys 2 }

    wfSysUpTime OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Time in seconds/100 since the last cold start"
        ::= { wfSys 3 }

    wfSysContact OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Contact person for this node and where/how to contact them"
        ::= { wfSys 4 }

    wfSysName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Node's fully qualified domain name or administratively assigned name"
        ::= { wfSys 5 }

    wfSysLocation OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Physical Location of this Node"
        ::= { wfSys 6 }

    wfSysServices OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A sum of numbers indicating the set of services the entity offers. For each
                layer L, add 2**(L - 1). Example: 78 = Layers 2,3,4, and 7."
        DEFVAL	{ 78 }
        ::= { wfSys 7 }

    wfSysGmtOffset OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The positive or negative offset from Greenwich Mean Time (GMT). This
                effectively describes the time zone."
        ::= { wfSys 8 }

    wfSysMibVersion OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The version of the private management information base currently being
                used by the system software. Format is: xV.RR"
        ::= { wfSys 9 }

    wfSysMibRevision OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The revision level of the private management information base currently
                being used by the system software."
        ::= { wfSys 10 }

    wfSysAgentType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    anrptragenttype(29),
    		    anhubagenttype(30)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network management agent's module type"
        ::= { wfSys 11 }

    wfSysMibCounterEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Mib II counter Switch"
        DEFVAL	{ enabled }
        ::= { wfSys 12 }

    END  -- Wellfleet-SYS-MIB
-- @(#)WSCCS s/mibs-sys_svc.mib 1.1 8/30/95
Wellfleet-SYS-SVC-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:49:00 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfNetBootGroup
        FROM Wellfleet-COMMON-MIB;


    wfNetbootCfgGroup	OBJECT IDENTIFIER ::= { wfNetBootGroup 1 }

    wfNetbootImage OBJECT-TYPE
        SYNTAX	INTEGER {
    		    imageoff(1),
    		    imageon(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables booting of an executable image over the network. If
                disabled, then the image will be read from a local file system."
        DEFVAL	{ imageon }
        ::= { wfNetbootCfgGroup 1 }

    wfNetbootConfig OBJECT-TYPE
        SYNTAX	INTEGER {
    		    configoff(1),
    		    configon(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables booting of a configuration file over the network. If
                disabled, then the config will be read from a local file system."
        DEFVAL	{ configon }
        ::= { wfNetbootCfgGroup 2 }

    wfNetbootServerAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "IP address of remote server."
        ::= { wfNetbootCfgGroup 3 }

    wfNetbootImageName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Pathname of image file on remote server."
        ::= { wfNetbootCfgGroup 4 }

    wfNetbootConfigName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Pathname of configuration file on remote server."
        ::= { wfNetbootCfgGroup 5 }

    wfNetbootCfgDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "create/delete parameter, dflt = created"
        DEFVAL	{ create }
        ::= { wfNetbootCfgGroup 6 }

    wfNetbootCurrGroup	OBJECT IDENTIFIER ::= { wfNetBootGroup 2 }

    wfNetbootImageCurr OBJECT-TYPE
        SYNTAX	INTEGER {
    		    imagecurroff(1),
    		    imagecurron(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current value of Netboot image flag in Non-Volatile RAM."
        DEFVAL	{ imagecurron }
        ::= { wfNetbootCurrGroup 1 }

    wfNetbootConfigCurr OBJECT-TYPE
        SYNTAX	INTEGER {
    		    configcurroff(1),
    		    configcurron(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current value of Netboot config flag in Non-Volatile RAM."
        DEFVAL	{ configcurron }
        ::= { wfNetbootCurrGroup 2 }

    wfNetbootServerAddressCurr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "IP address of remote server."
        ::= { wfNetbootCurrGroup 3 }

    wfNetbootImageNameCurr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Pathname of image file on remote server."
        ::= { wfNetbootCurrGroup 4 }

    wfNetbootConfigNameCurr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Pathname of configuration file on remote server."
        ::= { wfNetbootCurrGroup 5 }

    wfNetbootCfgTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNetbootCfgEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A Table of Interface-specific Netboot Configuration Parameters"
        ::= { wfNetBootGroup 3 }

    wfNetbootCfgEntry OBJECT-TYPE
        SYNTAX	WfNetbootCfgEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Values of a particular interface's configuration parameters."
        INDEX	{ wfNetbootSlot,
    		  wfNetbootConnector }
        ::= { wfNetbootCfgTable 1 }

    WfNetbootCfgEntry ::= SEQUENCE {
    	    wfNetbootDelete
    		INTEGER,
    	    wfNetbootSlot
    		INTEGER,
    	    wfNetbootConnector
    		INTEGER,
    	    wfNetbootIpAddr
    		IpAddress,
    	    wfNetbootIpMask
    		IpAddress,
    	    wfNetbootNextHop
    		IpAddress,
    	    wfNetbootProtoMask
    		INTEGER,
    	    wfNetbootDisable
    		INTEGER,
    	    wfNetbootConnName
    		DisplayString
        }

    wfNetbootDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    create(1),
    		    delete(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "create/delete parameter, dflt = created
                Deleteing this instance will set the corresponding NOVRAM
                values to the default settings."
        DEFVAL	{ create }
        ::= { wfNetbootCfgEntry 1 }

    wfNetbootSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "instance ID Slot, filled in by driver"
        ::= { wfNetbootCfgEntry 2 }

    wfNetbootConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    xcvr1(1),
    		    com1(2),
    		    com2(3),
    		    com3(4),
    		    xcvr11(5),
    		    xcvr12(6),
    		    com11(7),
    		    com12(8),
    		    xcvr21(9),
    		    xcvr22(10),
    		    com21(11),
    		    com22(12),
    		    xcvr31(13),
    		    xcvr32(14),
    		    com31(15),
    		    com32(16),
    		    xcvr41(17),
    		    xcvr42(18),
    		    com41(19),
    		    com42(20),
    		    xcvr2(21)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Unique number which identifies the interface for which the
                following parameters are configured."
        ::= { wfNetbootCfgEntry 3 }

    wfNetbootIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "IP address to use on this interface"
        ::= { wfNetbootCfgEntry 4 }

    wfNetbootIpMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "IP address mask to use on this interface"
        ::= { wfNetbootCfgEntry 5 }

    wfNetbootNextHop OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "IP address of the next hop router connected to this interface.
                This value is used to auto-configure a static route for
                Network Boot."
        ::= { wfNetbootCfgEntry 6 }

    wfNetbootProtoMask OBJECT-TYPE
        SYNTAX	INTEGER {
    		    fron(1),
    		    x25on(2),
    		    intrnclkon(3),
    		    noton(4),
    		    annexaon(5),
    		    lmion(6)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Bit Mask indicating a non-default protocol is being used on
                this interface."
        DEFVAL	{ noton }
        ::= { wfNetbootCfgEntry 7 }

    wfNetbootDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable or disable the interface for Netbooting."
        DEFVAL	{ enable }
        ::= { wfNetbootCfgEntry 8 }

    wfNetbootConnName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Connector name."
        ::= { wfNetbootCfgEntry 9 }

    wfNetbootCurrTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfNetbootCurrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A Table of current values for Interface-specific Netboot Parameters"
        ::= { wfNetBootGroup 4 }

    wfNetbootCurrEntry OBJECT-TYPE
        SYNTAX	WfNetbootCurrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Values of a particular interface's current configuration parameters."
        INDEX	{ wfNetbootCurrSlot,
    		  wfNetbootCurrConnector }
        ::= { wfNetbootCurrTable 1 }

    WfNetbootCurrEntry ::= SEQUENCE {
    	    wfNetbootCurrSlot
    		INTEGER,
    	    wfNetbootCurrConnector
    		INTEGER,
    	    wfNetbootCurrIpAddr
    		IpAddress,
    	    wfNetbootCurrIpMask
    		IpAddress,
    	    wfNetbootCurrNextHop
    		IpAddress,
    	    wfNetbootCurrProtoMask
    		INTEGER,
    	    wfNetbootCurrDisable
    		INTEGER,
    	    wfNetbootCurrConnName
    		DisplayString
        }

    wfNetbootCurrSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "instance ID Slot, filled in by driver"
        ::= { wfNetbootCurrEntry 1 }

    wfNetbootCurrConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    currxcvr1(1),
    		    currcom1(2),
    		    currcom2(3),
    		    currcom3(4),
    		    currxcvr11(5),
    		    currxcvr12(6),
    		    currcom11(7),
    		    currcom12(8),
    		    currxcvr21(9),
    		    currxcvr22(10),
    		    currcom21(11),
    		    currcom22(12),
    		    currxcvr31(13),
    		    currxcvr32(14),
    		    currcom31(15),
    		    currcom32(16),
    		    currxcvr41(17),
    		    currxcvr42(18),
    		    currcom41(19),
    		    currcom42(20),
    		    currxcvr2(21)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Unique number which identifies the interface for which the
                following parameters are configured."
        ::= { wfNetbootCurrEntry 2 }

    wfNetbootCurrIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "IP address to use on this interface"
        ::= { wfNetbootCurrEntry 3 }

    wfNetbootCurrIpMask OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "IP address mask to use on this interface"
        ::= { wfNetbootCurrEntry 4 }

    wfNetbootCurrNextHop OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "IP address of the next hop router connected to this interface.
                This value is used to auto-configure a static route for
                Network Boot."
        ::= { wfNetbootCurrEntry 5 }

    wfNetbootCurrProtoMask OBJECT-TYPE
        SYNTAX	INTEGER {
    		    frcurron(1),
    		    x25curron(2),
    		    intrnclkcurron(3),
    		    notcurron(4),
    		    annexaon(5),
    		    lmion(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Bit Mask indicating a non-default protocol is being used on
                this interface."
        DEFVAL	{ notcurron }
        ::= { wfNetbootCurrEntry 6 }

    wfNetbootCurrDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enable(1),
    		    disable(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Enable or disable the interface for Netbooting."
        DEFVAL	{ enable }
        ::= { wfNetbootCurrEntry 7 }

    wfNetbootCurrConnName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Connector name."
        ::= { wfNetbootCurrEntry 8 }

    END  -- Wellfleet-SYS-SVC-MIB
-- @(#)WSCCS l/mibs-sysl.mib 1.1 8/30/95
Wellfleet-SYSL-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:48:55 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfSyslogGroup
        FROM Wellfleet-COMMON-MIB;


    wfSyslog	OBJECT IDENTIFIER ::= { wfSyslogGroup 1 }

    wfSyslogDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A flag to indicate SYSLOG instance deletion
                If this flag is set to delete then the syslog
                subsystem and all associated MIB information
                will be deleted from the router."
        DEFVAL	{ created }
        ::= { wfSyslog 1 }

    wfSyslogDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables or Disables SYSLOG Subsystem
                Note:  Even if this attribute is set to SYSLOG_BASE_ENABLED
                a remote host must be configured and enabled with
                associated enabled filters before the syslog subsystem will
                begin filtering and forwarding messages"
        DEFVAL	{ enabled }
        ::= { wfSyslog 2 }

    wfSyslogOperState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This field indicates the actual stat of the syslog
                subsystem.  If it is equal to SYSLOG_UP, then the
                subsystem is currently filtering and forwarding
                syslog messages.  If it is SYSLOG_DOWN then it is
                not forwarding messages because of several
                possiblities:
                1) No hosts are configured for the subsystem,
                     2) No hosts are enabled
                3) Hosts are enabled but have no respective
                   filters enabled"
        DEFVAL	{ down }
        ::= { wfSyslog 3 }

    wfSyslogMaxHosts OBJECT-TYPE
        SYNTAX	INTEGER(1..10)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of remote hosts allowed to be configured"
        DEFVAL	{ 5 }
        ::= { wfSyslog 4 }

    wfSyslogPollTimer OBJECT-TYPE
        SYNTAX	INTEGER(5..610000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Timer used to determine the iteration that log files
                are polled for new messages by the syslog application"
        DEFVAL	{ 5 }
        ::= { wfSyslog 5 }

    wfSyslogActTimeSeqHosts OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This attribute is used to keep track of the current
                number of ACTIVE hosts configured for time sequencing. If a
                management station attempts to configure more hosts
                (wfSyslogTimeSeqHosts and wfSyslogNonSeqHosts) than
                wfSyslogMaxHosts allows, then the wfSyslogHostState
                for that host record will be set to SYSLOG_HOST_INACTIVE.
                 "
        ::= { wfSyslog 6 }

    wfSyslogActNonSeqHosts OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This attribute is used to keep track of the current
                number of ACTIVE hosts that are NOT configured for time sequencing.
                If a management station attempts to configure more hosts
                (wfSyslogTimeSeqHosts and wfSyslogNonSeqHosts) than
                wfSyslogMaxHosts allows, then the wfSyslogHostState
                for that host record will be set to SYSLOG_HOST_INACTIVE.
                 "
        ::= { wfSyslog 7 }

    wfSyslogTotalMsgFwds OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counter used to track the total number of UDP syslog
                messages sent"
        ::= { wfSyslog 8 }

    wfSyslogHostTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSyslogHostEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table containing remote host records"
        ::= { wfSyslogGroup 2 }

    wfSyslogHostEntry OBJECT-TYPE
        SYNTAX	WfSyslogHostEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Information concerning a specific remote host entry"
        INDEX	{ wfSyslogHostDest }
        ::= { wfSyslogHostTable 1 }

    WfSyslogHostEntry ::= SEQUENCE {
    	    wfSyslogHostDelete
    		INTEGER,
    	    wfSyslogHostDisable
    		INTEGER,
    	    wfSyslogHostDest
    		IpAddress,
    	    wfSyslogHostUDPPort
    		INTEGER,
    	    wfSyslogHostLogFacility
    		INTEGER,
    	    wfSyslogHostTimeSeqEnable
    		INTEGER,
    	    wfSyslogHostOperState
    		INTEGER,
    	    wfSyslogHostMsgFwds
    		Counter
        }

    wfSyslogHostDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A flag to indicate SYSLOG instance deletion
                If this flag is set to delete then it is the
                application's responsibility to delete the
                record and the respective filter table records"
        DEFVAL	{ created }
        ::= { wfSyslogHostEntry 1 }

    wfSyslogHostDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables or Disables syslog messaging for this remote
                host"
        DEFVAL	{ enabled }
        ::= { wfSyslogHostEntry 2 }

    wfSyslogHostDest OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "IP address of the remote host"
        ::= { wfSyslogHostEntry 3 }

    wfSyslogHostUDPPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "UDP port of the remote host"
        DEFVAL	{ 514 }
        ::= { wfSyslogHostEntry 4 }

    wfSyslogHostLogFacility OBJECT-TYPE
        SYNTAX	INTEGER {
    		    local0(128),
    		    local1(136),
    		    local2(144),
    		    local3(152),
    		    local4(160),
    		    local5(168),
    		    local6(176),
    		    local7(184)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Facility type to use in encoding the priority of the
                syslog message
                    LOG_LOCAL0  ->  SYSLOG_LOG_FACILITY_LOCAL0
                    LOG_LOCAL1  ->  SYSLOG_LOG_FACILITY_LOCAL1
                        .
                        .
                    LOG_LOCAL7  ->  SYSLOG_LOG_FACILITY_LOCAL7"
        DEFVAL	{ local7 }
        ::= { wfSyslogHostEntry 5 }

    wfSyslogHostTimeSeqEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If wfSyslogLogTimeSeqEnable is set to enabled then
                the syslog application will transmit the messages to the
                remote host in time sequenced order(This is not
                guaranteed however because the UDP transport mechanism is
                connectionless, an thus, unreliable.  The possibility
                exists for messages to be lost or delivered out of sequence )
                If this attribute is disabled then messages will be sent
                to the remote host in the order that they occur on each
                slot( i.e. no aggragation of the messages across slots
                will be performed )
                NOTE: If this value is changed while this host is
                  enabled then the possiblity exists such that
                 the remote host could receive duplicate log messages
                  or worse log messages may not be sent to the remote host.
                  The best procedure to follow would be to disable
                  the the remote host's MIB record, then set this value
                      and then enable this host's MIB record again."
        DEFVAL	{ disabled }
        ::= { wfSyslogHostEntry 6 }

    wfSyslogHostOperState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    inactive(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Used to track the state of the host record.  If too
                many hosts are configured with entity filters then this
                value will be set to inactive by the syslog application."
        DEFVAL	{ inactive }
        ::= { wfSyslogHostEntry 7 }

    wfSyslogHostMsgFwds OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Counter used to track the number of UDP syslog
                messages sent to this remote host"
        ::= { wfSyslogHostEntry 8 }

    wfSyslogEntityFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfSyslogEntFltrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Table containing filter records for associated remote hostss"
        ::= { wfSyslogGroup 3 }

    wfSyslogEntFltrEntry OBJECT-TYPE
        SYNTAX	WfSyslogEntFltrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table is used to filter out messages by filtering
                them on a per entity basis, per remote host.  This table
                is indexed with the remote host's IP address that is to
                receive the filtered messages, a value that represents
                the entity type to filter messages on and an entity filter
                index.  All messages are passed through this filter table.
                If an instance of this table exists for a remote host, then
                a message will then be checked to see if the
                entity type of the message is equal to one specified
                in this table.  If not then it is not forwarded.  If it
                does equal the one specified in this table then the filters
                for that entity instance are applied to that message.
                Example:


                Entity    Log Event  Severity  Slot Filter
                 Type    LWBnd UPBnd   Mask    LWBnd UPBnd
                -------  -----------  ------   -----------
                88(FTP)   2      8   ''    3      6 -->All FTP log msgs
                      of value 2,3,4,5,
                     6,7,8 occurring
                     on slots 3,4,5,6
                     will be forwarded
                2( IP )   0     255   'fw'    4   4 --> All IP log msgs
                     of level
                     fault and warning
                                                             occurring on slot
                     4 will be forwarded

                 -------------------------------------------------------------
                NOTE:  A wildcard entity filter will only be used if the
                       there are no other 'non-wildcard' filters( i.e. IP,
                       FTP etc. ) enabled for the wildcard entity filter's
                       remote host.

                255(WC)    Ignored   'fwd'   4  5 --> All log msgs
                     of level fault,
                                                             warning and debug
                     occurring on slots
                     4 and 5 will be
                                                             forwarded "
        INDEX	{ wfSyslogEntFltrHostIndex,
    		  wfSyslogEntFltrNum,
    		  wfSyslogEntFltrIndex }
        ::= { wfSyslogEntityFilterTable 1 }

    WfSyslogEntFltrEntry ::= SEQUENCE {
    	    wfSyslogEntFltrDelete
    		INTEGER,
    	    wfSyslogEntFltrDisable
    		INTEGER,
    	    wfSyslogEntFltrHostIndex
    		IpAddress,
    	    wfSyslogEntFltrNum
    		INTEGER,
    	    wfSyslogEntFltrIndex
    		INTEGER,
    	    wfSyslogEntFltrOperState
    		INTEGER,
    	    wfSyslogEntFltrLogEvtLowBnd
    		INTEGER,
    	    wfSyslogEntFltrLogEvtUppBnd
    		INTEGER,
    	    wfSyslogEntFltrSevMask
    		DisplayString,
    	    wfSyslogEntFltrSlotLowBnd
    		INTEGER,
    	    wfSyslogEntFltrSlotUppBnd
    		INTEGER,
    	    wfSyslogEntFltrFaultMap
    		INTEGER,
    	    wfSyslogEntFltrWarningMap
    		INTEGER,
    	    wfSyslogEntFltrInfoMap
    		INTEGER,
    	    wfSyslogEntFltrTraceMap
    		INTEGER,
    	    wfSyslogEntFltrDebugMap
    		INTEGER
        }

    wfSyslogEntFltrDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A flag to indicate SYSLOG instance deletion
                If this flag is set to delete then it is the
                application's responsibility to delete the
                record and the respective filter table records"
        DEFVAL	{ created }
        ::= { wfSyslogEntFltrEntry 1 }

    wfSyslogEntFltrDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables or Disables syslog filtering for this
                entity record"
        DEFVAL	{ enabled }
        ::= { wfSyslogEntFltrEntry 2 }

    wfSyslogEntFltrHostIndex OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Remote Host IP address, used to associate this filter with
                a remote host in the SYSLOG_HOST_TABLE"
        ::= { wfSyslogEntFltrEntry 3 }

    wfSyslogEntFltrNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Entity type to use as filter
                NOTE:  Entities are listed with their numerical mappings
                in the documentation titled 'Event Messages for Wellfleet
                Routers'
                NOTE2: If entity type is WILDCARD(255) then the attributes
                wfSyslogEntFltrLogEvtLowBnd and wfSyslogEntFltrLogEvtUppBnd will
                be ignored and wfSyslogEntFltrSevMask will be used."
        ::= { wfSyslogEntFltrEntry 4 }

    wfSyslogEntFltrIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Entity Filter Index.  Used to distinguish filters of the
                same entity type"
        ::= { wfSyslogEntFltrEntry 5 }

    wfSyslogEntFltrOperState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    inactive(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This field indicates the actual stat of the syslog
                filter.  If it is equal to SYSLOG_FILTER_ACTIVE, then the
                subsystem is currently filtering events against this
                filter.  If it is SYSLOG_FILTER_INACTIVE then the subsystem is
                not filtering events against this filter because of several
                possiblities:
                1) Filter's host is not activ,
                     2) Filter does not have event range configured
                3) Filter does not have severity mask configured
                4) Slot's residing in system do not fall within
                        filter's slot range"
        DEFVAL	{ inactive }
        ::= { wfSyslogEntFltrEntry 6 }

    wfSyslogEntFltrLogEvtLowBnd OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Lower boundary for the log event entity filter, see
                SYSLOG_ENTITY_FILTER_TABLE for more complete description
                NOTE:  Event numerical mappings are found in
                /include/<ENTITY>_edl.h"
        ::= { wfSyslogEntFltrEntry 7 }

    wfSyslogEntFltrLogEvtUppBnd OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Upper boundary for the log event entity filter, see
                SYSLOG_ENTITY_FILTER_TABLE for more complete description"
        DEFVAL	{ 255 }
        ::= { wfSyslogEntFltrEntry 8 }

    wfSyslogEntFltrSevMask OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Filter used to filter out log messages by error level
                (i.e. fault, informational, warning, trace and debug.
                This filter is used only if no values are specified for
                wfSyslogEntFltrLogEvtLowBnd, or if this entity type is of type
                WILDCARD(255)"
        ::= { wfSyslogEntFltrEntry 9 }

    wfSyslogEntFltrSlotLowBnd OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Lower boundary for the entity slot filter, see
                SYSLOG_ENTITY_FILTER_TABLE for more complete description"
        ::= { wfSyslogEntFltrEntry 10 }

    wfSyslogEntFltrSlotUppBnd OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Upper boundary for the entity slot filter, see
                SYSLOG_ENTITY_FILTER_TABLE for more complete description"
        ::= { wfSyslogEntFltrEntry 11 }

    wfSyslogEntFltrFaultMap OBJECT-TYPE
        SYNTAX	INTEGER {
    		    emerg(1),
    		    alert(2),
    		    crit(3),
    		    err(4),
    		    warning(5),
    		    notice(6),
    		    info(7),
    		    debug(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Value to Map System Fault log messages to"
        DEFVAL	{ crit }
        ::= { wfSyslogEntFltrEntry 12 }

    wfSyslogEntFltrWarningMap OBJECT-TYPE
        SYNTAX	INTEGER {
    		    emerg(1),
    		    alert(2),
    		    crit(3),
    		    err(4),
    		    warning(5),
    		    notice(6),
    		    info(7),
    		    debug(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Value to Map System Warning log messages to"
        DEFVAL	{ warning }
        ::= { wfSyslogEntFltrEntry 13 }

    wfSyslogEntFltrInfoMap OBJECT-TYPE
        SYNTAX	INTEGER {
    		    emerg(1),
    		    alert(2),
    		    crit(3),
    		    err(4),
    		    warning(5),
    		    notice(6),
    		    info(7),
    		    debug(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Value to Map System Info log messages to"
        DEFVAL	{ info }
        ::= { wfSyslogEntFltrEntry 14 }

    wfSyslogEntFltrTraceMap OBJECT-TYPE
        SYNTAX	INTEGER {
    		    emerg(1),
    		    alert(2),
    		    crit(3),
    		    err(4),
    		    warning(5),
    		    notice(6),
    		    info(7),
    		    debug(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Value to Map System Trace log messages to"
        DEFVAL	{ debug }
        ::= { wfSyslogEntFltrEntry 15 }

    wfSyslogEntFltrDebugMap OBJECT-TYPE
        SYNTAX	INTEGER {
    		    emerg(1),
    		    alert(2),
    		    crit(3),
    		    err(4),
    		    warning(5),
    		    notice(6),
    		    info(7),
    		    debug(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Value to Map System Debug log messages to"
        DEFVAL	{ debug }
        ::= { wfSyslogEntFltrEntry 16 }

    END  -- Wellfleet-SYSL-MIB
-- @(#)WSCCS d/mibs-t1.mib 1.1 8/30/95
Wellfleet-T1-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:49:06 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfLine
        FROM Wellfleet-COMMON-MIB;


    wfT1Table OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfT1Entry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "T1 line record"
        ::= { wfLine 10 }

    wfT1Entry OBJECT-TYPE
        SYNTAX	WfT1Entry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the T1 table"
        INDEX	{ wfT1Slot,
    		  wfT1Connector }
        ::= { wfT1Table 1 }

    WfT1Entry ::= SEQUENCE {
    	    wfT1Delete
    		INTEGER,
    	    wfT1Disable
    		INTEGER,
    	    wfT1State
    		INTEGER,
    	    wfT1Slot
    		INTEGER,
    	    wfT1Connector
    		INTEGER,
    	    wfT1Madr
    		OCTET STRING,
    	    wfT1FrameType
    		INTEGER,
    	    wfT1LineBuildout
    		INTEGER,
    	    wfT1B8ZSSupport
    		INTEGER,
    	    wfT1ClockMode
    		INTEGER,
    	    wfT1MiniDacs
    		DisplayString,
    	    wfT1BipolarVios
    		Counter,
    	    wfT1FrameBitErrs
    		Counter,
    	    wfT1OutOfFrameErrs
    		Counter,
    	    wfT1SuperFrameErrs
    		Counter,
    	    wfT1RcvYelAlarms
    		Counter,
    	    wfT1RcvCarrierLoss
    		Counter,
    	    wfT1RcvRedAlarms
    		Counter
        }

    wfT1Delete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "create/delete parameter, dflt = created"
        DEFVAL	{ created }
        ::= { wfT1Entry 1 }

    wfT1Disable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable parameter, dflt = enabled"
        DEFVAL	{ enabled }
        ::= { wfT1Entry 2 }

    wfT1State OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "line driver state variable, Not Present, Init, Up"
        DEFVAL	{ notpresent }
        ::= { wfT1Entry 3 }

    wfT1Slot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "instance ID Slot, filled in by driver"
        ::= { wfT1Entry 4 }

    wfT1Connector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "instance ID Connector, filled in by driver"
        ::= { wfT1Entry 5 }

    wfT1Madr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line mac address, filled in by driver"
        ::= { wfT1Entry 6 }

    wfT1FrameType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    d4(1),
    		    esf(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Frame Type - differentiates between two tarrifed framing formats
                D4 and ESF."
        DEFVAL	{ esf }
        ::= { wfT1Entry 7 }

    wfT1LineBuildout OBJECT-TYPE
        SYNTAX	INTEGER(1..655)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Line Buildout - Approximate length of cable"
        DEFVAL	{ 1 }
        ::= { wfT1Entry 8 }

    wfT1B8ZSSupport OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "B8ZS Support - Enables or disables Binary 8 zeros suppression"
        DEFVAL	{ disabled }
        ::= { wfT1Entry 9 }

    wfT1ClockMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    internal(1),
    		    slave(2),
    		    manual(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Clock Mode - Specifies the source of the T1 transmit clock"
        DEFVAL	{ internal }
        ::= { wfT1Entry 10 }

    wfT1MiniDacs OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "MiniDacs Configuration - assigns each T1 channel to a specific
                function"
        ::= { wfT1Entry 11 }

    wfT1BipolarVios OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Bipolar Violations"
        ::= { wfT1Entry 12 }

    wfT1FrameBitErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frame bit errors"
        ::= { wfT1Entry 13 }

    wfT1OutOfFrameErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Out of Frame errors"
        ::= { wfT1Entry 14 }

    wfT1SuperFrameErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of  Superframe errors"
        ::= { wfT1Entry 15 }

    wfT1RcvYelAlarms OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Yellow Alarms Received"
        ::= { wfT1Entry 16 }

    wfT1RcvCarrierLoss OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of instances of carrier loss"
        ::= { wfT1Entry 17 }

    wfT1RcvRedAlarms OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Red Alarm Received"
        ::= { wfT1Entry 18 }

    END  -- Wellfleet-T1-MIB
-- @(#)WSCCS j/mibs-tcp.mib 1.1 8/30/95
Wellfleet-TCP-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:49:12 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfTcpGroup
        FROM Wellfleet-COMMON-MIB;


    wfTcp		OBJECT IDENTIFIER ::= { wfTcpGroup 1 }

    wfTcpDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform a set operation on this
                object in order to create/delete TCP."
        DEFVAL	{ created }
        ::= { wfTcp 1 }

    wfTcpDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform a set operation on this
                object in order to enable/disable TCP."
        DEFVAL	{ enabled }
        ::= { wfTcp 2 }

    wfTcpState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the entire TCP."
        DEFVAL	{ notpresent }
        ::= { wfTcp 3 }

    wfTcpRtoAlgorithm OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    constant(2),
    		    rsre(3),
    		    vanj(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The algorithm used to determine the timeout value
                used for retransmitting unacknowledged octets."
        DEFVAL	{ vanj }
        ::= { wfTcp 4 }

    wfTcpRtoMin OBJECT-TYPE
        SYNTAX	INTEGER(100..15000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The minimum value permitted by a TCP
                implementation for the retransmission timeout,
                measured in milliseconds.  More refined semantics
                for objects of this type depend upon the algorithm
                used to determine the retransmission timeout.  In
                particular, when the timeout algorithm is rsre(3),
                an object of this type has the semantics of the
                LBOUND quantity described in RFC 793."
        DEFVAL	{ 250 }
        ::= { wfTcp 5 }

    wfTcpRtoMax OBJECT-TYPE
        SYNTAX	INTEGER(15000..240000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum value permitted by a TCP
                implementation for the retransmission timeout,
                measured in milliseconds.  More refined semantics
                for objects of this type depend upon the algorithm
                used to determine the retransmission timeout.  In
                particular, when the timeout algorithm is rsre(3),
                an object of this type has the semantics of the
                UBOUND quantity described in RFC 793."
        DEFVAL	{ 240000 }
        ::= { wfTcp 6 }

    wfTcpMaxConn OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The limit on the total number of TCP connections
                the entity can support.  In entities where the
                maximum number of connections is dynamic, this
                object should contain the value -1."
        ::= { wfTcp 7 }

    wfTcpActiveOpens OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times TCP connections have made a
                direct transition to the SYN-SENT state from the
                CLOSED state."
        ::= { wfTcp 8 }

    wfTcpPassiveOpens OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times TCP connections have made a
                direct transition to the SYN-RCVD state from the
                LISTEN state."
        ::= { wfTcp 9 }

    wfTcpAttemptFails OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times TCP connections have made a
                direct transition to the CLOSED state from either
                the SYN-SENT state or the SYN-RCVD state, plus the
                number of times TCP connections have made a direct
                transition to the LISTEN state from the SYN-RCVD
                state."
        ::= { wfTcp 10 }

    wfTcpEstabResets OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times TCP connections have made a
                direct transition to the CLOSED state from either
                the ESTABLISHED state or the CLOSE-WAIT state."
        ::= { wfTcp 11 }

    wfTcpCurrEstab OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of TCP connections for which the
                current state is either ESTABLISHED or CLOSE-
                WAIT."
        ::= { wfTcp 12 }

    wfTcpInSegs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of segments received, including
                those received in error.  This count includes
                segments received on currently established
                connections."
        ::= { wfTcp 13 }

    wfTcpOutSegs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of segments sent, including
                those on current connections but excluding those
                containing only retransmitted octets."
        ::= { wfTcp 14 }

    wfTcpRetransSegs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of segments retransmitted - that
                is, the number of TCP segments transmitted
                containing one or more previously transmitted
                octets."
        ::= { wfTcp 15 }

    wfTcpInErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of segments received in error
                (e.g., bad TCP checksums)."
        ::= { wfTcp 16 }

    wfTcpOutRsts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of TCP segments sent containing the
                RST flag."
        ::= { wfTcp 17 }

    wfTcpMaxWindow OBJECT-TYPE
        SYNTAX	INTEGER(512..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The maximum transmit and receive window size TCP will allow
                for each connection measured in octets."
        DEFVAL	{ 4096 }
        ::= { wfTcp 18 }

    wfTcpConnTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfTcpConnEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The TCP connection table contains information about this
                entity's existing TCP connections."
        ::= { wfTcpGroup 2 }

    wfTcpConnEntry OBJECT-TYPE
        SYNTAX	WfTcpConnEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A TCP Connection"
        INDEX	{ wfTcpConnLocalAddress,
    		  wfTcpConnLocalPort,
    		  wfTcpConnRemAddress,
    		  wfTcpConnRemPort }
        ::= { wfTcpConnTable 1 }

    WfTcpConnEntry ::= SEQUENCE {
    	    wfTcpConnDelete
    		INTEGER,
    	    wfTcpConnState
    		INTEGER,
    	    wfTcpConnLocalAddress
    		IpAddress,
    	    wfTcpConnLocalPort
    		INTEGER,
    	    wfTcpConnRemAddress
    		IpAddress,
    	    wfTcpConnRemPort
    		INTEGER
        }

    wfTcpConnDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Delete connection attribute. Users set this attribute
                to a value of TCP_CONN_STATE_DELETE to delete a TCP connection.
                This is the only value that can be written. The instance should
                never get created by a user writing to this attribute."
        DEFVAL	{ created }
        ::= { wfTcpConnEntry 1 }

    wfTcpConnState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    closed(1),
    		    listen(2),
    		    synsent(3),
    		    synreceived(4),
    		    established(5),
    		    finwait1(6),
    		    finwait2(7),
    		    closewait(8),
    		    lastack(9),
    		    closing(10),
    		    timewait(11),
    		    deletetcb(12)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The state of this TCP connection.

                 The only value which may be set by a management
                 station is deleteTCB(12).  Accordingly, it is
                 appropriate for an agent to return a `badValue'
                 response if a management station attempts to set
                 this object to any other value.

                 If a management station sets this object to the
                 value deleteTCB(12), then this has the effect of
                 deleting the TCB (as defined in RFC 793) of the
                 corresponding connection on the managed node,
                 resulting in immediate termination of the
                 connection.

                 As an implementation-specific option, a RST
                 segment may be sent from the managed node to the
                 other TCP endpoint (note however that RST segments
                 are not sent reliably)."
        DEFVAL	{ closed }
        ::= { wfTcpConnEntry 2 }

    wfTcpConnLocalAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The local IP address for this TCP connection. In
                the case of a connection in the listen state which
                is willing to accept connections for any IP
                interface associated with the node, the value
                0.0.0.0 is used."
        ::= { wfTcpConnEntry 3 }

    wfTcpConnLocalPort OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The local port number for this TCP connection"
        ::= { wfTcpConnEntry 4 }

    wfTcpConnRemAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The remote IP address for this TCP connection."
        ::= { wfTcpConnEntry 5 }

    wfTcpConnRemPort OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The remote port number for this TCP connection."
        ::= { wfTcpConnEntry 6 }

    END  -- Wellfleet-TCP-MIB
-- @(#)WSCCS x/mibs-tcp_ecli.mib 1.1 8/30/95
Wellfleet-TCP-ECHOCLI-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:49:17 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfTcpGroup
        FROM Wellfleet-COMMON-MIB;


    wfTcpEchoCliGroup	OBJECT IDENTIFIER ::= { wfTcpGroup 4 }

    wfTcpEchoCli	OBJECT IDENTIFIER ::= { wfTcpEchoCliGroup 1 }

    wfTcpEchoCliDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Creates or Deletes TCP Echo Client Subsystem"
        DEFVAL	{ created }
        ::= { wfTcpEchoCli 1 }

    wfTcpEchoCliDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables or Disables TCP Echo Client Subsystem"
        DEFVAL	{ enabled }
        ::= { wfTcpEchoCli 2 }

    wfTcpEchoCliState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    down(1),
    		    init(2),
    		    up(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Enables or Disables TCP Echo Client Subsystem"
        ::= { wfTcpEchoCli 3 }

    wfTcpEchoCliMaxConns OBJECT-TYPE
        SYNTAX	INTEGER(1..1000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Max limit on number of Tcp Echo Client Sessions/Connections"
        DEFVAL	{ 100 }
        ::= { wfTcpEchoCli 4 }

    wfTcpEchoCliConns OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current number of Active Tcp Echo Client Sessions/Connections"
        ::= { wfTcpEchoCli 5 }

    wfTcpEchoCliCharsRcvd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of Characters Received by TCP Echo Clients"
        ::= { wfTcpEchoCli 6 }

    wfTcpEchoCliCharsXmtd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of characters transmitted by TCP Echo Clients"
        ::= { wfTcpEchoCli 7 }

    wfTcpEchoCliBufsRcvd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of Buffers Received by TCP Echo Servers"
        ::= { wfTcpEchoCli 8 }

    wfTcpEchoCliBufsXmtd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of Buffers Transmitted by TCP Echo Servers"
        ::= { wfTcpEchoCli 9 }

    wfTcpEchoCliConnTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfTcpEchoCliConn
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The TCP Echo Client Connection Table contains informnation about
                this entitity's existing TCP Echo Client connections"
        ::= { wfTcpEchoCliGroup 2 }

    wfTcpEchoCliConn OBJECT-TYPE
        SYNTAX	WfTcpEchoCliConn
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A TCP Echo Client Connection"
        INDEX	{ wfTcpEchoCliConnLocalAddress,
    		  wfTcpEchoCliConnRemoteAddress,
    		  wfTcpEchoCliConnTestId }
        ::= { wfTcpEchoCliConnTable 1 }

    WfTcpEchoCliConn ::= SEQUENCE {
    	    wfTcpEchoCliConnDelete
    		INTEGER,
    	    wfTcpEchoCliConnDisable
    		INTEGER,
    	    wfTcpEchoCliConnState
    		INTEGER,
    	    wfTcpEchoCliConnLocalAddress
    		IpAddress,
    	    wfTcpEchoCliConnRemoteAddress
    		IpAddress,
    	    wfTcpEchoCliConnTestId
    		INTEGER,
    	    wfTcpEchoCliConnTestControl
    		INTEGER,
    	    wfTcpEchoCliConnTcpRcvWin
    		INTEGER,
    	    wfTcpEchoCliConnTcpXmtWin
    		INTEGER,
    	    wfTcpEchoCliConnBufsToSend
    		INTEGER,
    	    wfTcpEchoCliConnCharsPerBuf
    		INTEGER,
    	    wfTcpEchoCliConnLocalPort
    		INTEGER,
    	    wfTcpEchoCliConnRuns
    		Counter,
    	    wfTcpEchoCliConnGoodRuns
    		Counter,
    	    wfTcpEchoCliConnBadRuns
    		Counter,
    	    wfTcpEchoCliConnStopReason
    		INTEGER,
    	    wfTcpEchoCliConnStopDetails
    		INTEGER,
    	    wfTcpEchoCliConnFirstXmtTime
    		INTEGER,
    	    wfTcpEchoCliConnLastRcvTime
    		INTEGER,
    	    wfTcpEchoCliConnAvrgGoodRunTime
    		INTEGER,
    	    wfTcpEchoCliConnBufsRcvd
    		Counter,
    	    wfTcpEchoCliConnCharsRcvd
    		Counter,
    	    wfTcpEchoCliConnBufsXmtd
    		Counter,
    	    wfTcpEchoCliConnCharsXmtd
    		Counter
        }

    wfTcpEchoCliConnDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Delete TCP Echo Client Connection Attribute. Users set this
                attribute to a value of TCP_ECHOCLI_CONN_CREATED to begin
                configuring an instance of the TCP Echo Client for testing."
        DEFVAL	{ created }
        ::= { wfTcpEchoCliConn 1 }

    wfTcpEchoCliConnDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Enable TCP Echo Client Connection Attribute. Users set this
                attribute to a value of TCP_ECHOCLI_CONN_ENABLED to start a test
                using this instance of the echo client connectio entry's test
                parameters."
        DEFVAL	{ disabled }
        ::= { wfTcpEchoCliConn 2 }

    wfTcpEchoCliConnState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    down(1),
    		    config(2),
    		    init(3),
    		    run(4),
    		    xdone(5),
    		    stopped(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The State of this TCP Echo Client Connection"
        DEFVAL	{ down }
        ::= { wfTcpEchoCliConn 3 }

    wfTcpEchoCliConnLocalAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Local IP Address on which this TCP Echo Client Connection
                is opened"
        ::= { wfTcpEchoCliConn 4 }

    wfTcpEchoCliConnRemoteAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Remote IP Address to which this TCP Echo Client's connection
                request will be directed."
        ::= { wfTcpEchoCliConn 5 }

    wfTcpEchoCliConnTestId OBJECT-TYPE
        SYNTAX	INTEGER(1..10000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Test Identification Number. This number must be unique across
                the box for the echo client gate to even make an attempt to run the
                given test. It also serves as the instance ID for this Echo Client
                Connection Instance"
        ::= { wfTcpEchoCliConn 6 }

    wfTcpEchoCliConnTestControl OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "A set of flags to control the Echo test...
                Bit 0:
                 If set, data integrity is checked
                If clear no data integrity checking is done
                  Bit 1:
                If set, buffers are filled with a 'count' pattern
                If clear, buffers are not filled with a count pattern
                  Bits 2-23:
                Reserved,.. Muzt Be Zero
                  Bits 24-31:
                If non-zero:
                 If Bit 1 also set, config error
                 else, xmit buffers are filled with this constant
                else
                 xmit buffers are not filled with constant"
        ::= { wfTcpEchoCliConn 7 }

    wfTcpEchoCliConnTcpRcvWin OBJECT-TYPE
        SYNTAX	INTEGER(100..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive Window for TCP Echo Clients to advertise to TCP"
        DEFVAL	{ 4096 }
        ::= { wfTcpEchoCliConn 8 }

    wfTcpEchoCliConnTcpXmtWin OBJECT-TYPE
        SYNTAX	INTEGER(1024..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit Window for TCP Echo Clients to request from TCP"
        DEFVAL	{ 4096 }
        ::= { wfTcpEchoCliConn 9 }

    wfTcpEchoCliConnBufsToSend OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of buffers to send for a given run of the configured
                TCP Echo Client test"
        ::= { wfTcpEchoCliConn 10 }

    wfTcpEchoCliConnCharsPerBuf OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The number of characters/octets to place in each xmit buffer"
        ::= { wfTcpEchoCliConn 11 }

    wfTcpEchoCliConnLocalPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Local TCP port on which this TCP Echo Client Connection
                is opened."
        ::= { wfTcpEchoCliConn 12 }

    wfTcpEchoCliConnRuns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of time the test configured in this insatnce has been
                run; includes both Good and Bad runs."
        ::= { wfTcpEchoCliConn 13 }

    wfTcpEchoCliConnGoodRuns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of time the test configured in this insatnce has been
                run and completed with Good results. This implies that all the
                buffers were sent. Depending on other control settings this may
                also imply that the received stream passed integrity checks."
        ::= { wfTcpEchoCliConn 14 }

    wfTcpEchoCliConnBadRuns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of time the test configured in this insatnce has been
                run and completed with bad results."
        ::= { wfTcpEchoCliConn 15 }

    wfTcpEchoCliConnStopReason OBJECT-TYPE
        SYNTAX	INTEGER {
    		    complete(1),
    		    mgmt(2),
    		    abort(3),
    		    error(4),
    		    incomplete(5),
    		    panic(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The reason this TCP Echo Client Test was terminated.
                - a Value of 1 indicates a normal 'end of test'.
                - a Value of 2 indicates the TCP Echo Server Connection Entry's
                 MIB instance was disabled by network management.
                - a Value of 3 indicates that the TCP Connection for this Echo
                  Server Connection Entry was aborted by TCP
                - a Value of 4 indicates that an unexpected and unrecoverable
                 TCP error occrued during the last run of the test"
        ::= { wfTcpEchoCliConn 16 }

    wfTcpEchoCliConnStopDetails OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The detailed reason this TCP Echo Client Test was terminated.
                if ( wfTcpEchoCliConnStopReason == TCP_ECHOCLI_STOP_NORM )
                 this attribute has no meaning
                else if ( wfTcpEchoCliConnStopReason == TCP_ECHOCLI_STOP_MGMT )
                 this attribute has no meaning
                else if ( wfTcpEchoCliConnStopReason == TCP_ECHOCLI_STOP_TCP_ABORT )
                 this attribute contains the TCP abort reason
                else if ( wfTcpEchoCliConnStopReason == TCP_ECHOCLI_STOP_TCP_ERROR )
                 this attribute contains the TCP error code
                else if ( wfTcpEchoCliConnStopReason == TCP_ECHOCLI_STOP_PANIC )
                 this attribute has no meaning"
        ::= { wfTcpEchoCliConn 17 }

    wfTcpEchoCliConnFirstXmtTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The timestamp of the first transmit request (units unspecified)"
        ::= { wfTcpEchoCliConn 18 }

    wfTcpEchoCliConnLastRcvTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The timestamp of the arrival of the last or most recent receive
                buffer (units unspecified). For a Good Run, this also marks the end
                of the test."
        ::= { wfTcpEchoCliConn 19 }

    wfTcpEchoCliConnAvrgGoodRunTime OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The average elapsed time for Good Runs of the configured test"
        ::= { wfTcpEchoCliConn 20 }

    wfTcpEchoCliConnBufsRcvd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of buffers received by this Echo Client instance
                which contained at least one byte of inbound receive (urgent) data."
        ::= { wfTcpEchoCliConn 21 }

    wfTcpEchoCliConnCharsRcvd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of characters (octets) received by this
                Echo Client instance."
        ::= { wfTcpEchoCliConn 22 }

    wfTcpEchoCliConnBufsXmtd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of transmit buffers passed to TCP by this Echo Server
                Instance."
        ::= { wfTcpEchoCliConn 23 }

    wfTcpEchoCliConnCharsXmtd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of transmit characters (octets) passed to TCP by
                this Echo Server Instance."
        ::= { wfTcpEchoCliConn 24 }

    END  -- Wellfleet-TCP-ECHOCLI-MIB
-- @(#)WSCCS g/mibs-tcp_esrv.mib 1.1 8/30/95
Wellfleet-TCP-ECHOSRV-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:49:21 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfTcpGroup
        FROM Wellfleet-COMMON-MIB;


    wfTcpEchoSrvGroup	OBJECT IDENTIFIER ::= { wfTcpGroup 3 }

    wfTcpEchoSrv	OBJECT IDENTIFIER ::= { wfTcpEchoSrvGroup 1 }

    wfTcpEchoSrvDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Creates or Deletes TCP Echo Server Subsystem"
        DEFVAL	{ created }
        ::= { wfTcpEchoSrv 1 }

    wfTcpEchoSrvDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables or Disables TCP Echo Server Subsystem"
        DEFVAL	{ enabled }
        ::= { wfTcpEchoSrv 2 }

    wfTcpEchoSrvState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Enables or Disables TCP Echo Server Subsystem"
        DEFVAL	{ notpresent }
        ::= { wfTcpEchoSrv 3 }

    wfTcpEchoSrvControl OBJECT-TYPE
        SYNTAX	INTEGER(1..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Some flags/bits to control echo server behavior:
                If Bit 0 is set, echo server connection gates log their MIB results
                else no logging occurs
                If Bit 1 is set, ECHO server connections depend on TCP to deliver
                a TCP_WIN_MSG to unjam the transmit stream if/when it has become
                flow controlled. If Bit 1 not set, ECHO server connection gates will
                make explicit requests ( via tcp_get_xwin() ) to ensure the delivery
                of a TCP_WIN_MSG.

                Bits 2- 31 reserved for future use"
        ::= { wfTcpEchoSrv 4 }

    wfTcpEchoSrvMaxConns OBJECT-TYPE
        SYNTAX	INTEGER(1..1000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Max limit on number of Tcp Echo Server Sessions/Connections"
        DEFVAL	{ 100 }
        ::= { wfTcpEchoSrv 5 }

    wfTcpEchoSrvTcpRcvWin OBJECT-TYPE
        SYNTAX	INTEGER(100..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The TCP receive Window that the Echo server will support"
        DEFVAL	{ 4096 }
        ::= { wfTcpEchoSrv 6 }

    wfTcpEchoSrvTcpXmtWin OBJECT-TYPE
        SYNTAX	INTEGER(100..65535)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Max limit on number of Tcp Echo Server Sessions/Connections"
        DEFVAL	{ 4096 }
        ::= { wfTcpEchoSrv 7 }

    wfTcpEchoSrvConns OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current number of Active Tcp Echo Server Sessions/Connections"
        ::= { wfTcpEchoSrv 8 }

    wfTcpEchoSrvCharsRcvd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of Characters Received by TCP Echo Servers"
        ::= { wfTcpEchoSrv 9 }

    wfTcpEchoSrvCharsXmtd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of characters transmitted by TCP Echo Servers"
        ::= { wfTcpEchoSrv 10 }

    wfTcpEchoSrvBufsRcvd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of Buffers Received by TCP Echo Servers"
        ::= { wfTcpEchoSrv 11 }

    wfTcpEchoSrvBufsXmtd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of Buffers Transmitted by TCP Echo Servers"
        ::= { wfTcpEchoSrv 12 }

    wfTcpEchoSrvConnTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfTcpEchoSrvConn
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The TCP Echo Server Connection Table contains informnation about
                this entitity's existing TCP Echo Server connections"
        ::= { wfTcpEchoSrvGroup 2 }

    wfTcpEchoSrvConn OBJECT-TYPE
        SYNTAX	WfTcpEchoSrvConn
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A TCP Echo Server Connection"
        INDEX	{ wfTcpEchoSrvConnLocalAddress,
    		  wfTcpEchoSrvConnLocalPort,
    		  wfTcpEchoSrvConnRemoteAddress,
    		  wfTcpEchoSrvConnRemotePort }
        ::= { wfTcpEchoSrvConnTable 1 }

    WfTcpEchoSrvConn ::= SEQUENCE {
    	    wfTcpEchoSrvConnDelete
    		INTEGER,
    	    wfTcpEchoSrvConnState
    		INTEGER,
    	    wfTcpEchoSrvConnLocalAddress
    		IpAddress,
    	    wfTcpEchoSrvConnLocalPort
    		INTEGER,
    	    wfTcpEchoSrvConnRemoteAddress
    		IpAddress,
    	    wfTcpEchoSrvConnRemotePort
    		INTEGER,
    	    wfTcpEchoSrvConnBufsRcvd
    		Counter,
    	    wfTcpEchoSrvConnCharsRcvd
    		Counter,
    	    wfTcpEchoSrvConnBufsXmtd
    		Counter,
    	    wfTcpEchoSrvConnCharsXmtd
    		Counter,
    	    wfTcpEchoSrvConnStopReason
    		INTEGER,
    	    wfTcpEchoSrvConnStopDetails
    		INTEGER
        }

    wfTcpEchoSrvConnDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Delete TCP Echo Server Connection Attribute. Users set this
                attribute to a value of TCP_ECHOSRV_CONN_DELETED to delete a TCP
                Echo Server Connection. This is the only value that can be written.
                The instance should never get created by a user writing to this
                attribute."
        DEFVAL	{ created }
        ::= { wfTcpEchoSrvConn 1 }

    wfTcpEchoSrvConnState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    closed(1),
    		    open(2),
    		    up(3),
    		    closing(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The State of this Echo Server Connection"
        DEFVAL	{ closed }
        ::= { wfTcpEchoSrvConn 2 }

    wfTcpEchoSrvConnLocalAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Local IP Address on which this TCP Echo Server Connection
                is opened"
        ::= { wfTcpEchoSrvConn 3 }

    wfTcpEchoSrvConnLocalPort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Local TCP port on which this TCP Echo Server Connection
                is opened... should always be 7."
        ::= { wfTcpEchoSrvConn 4 }

    wfTcpEchoSrvConnRemoteAddress OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Remote IP Address (of the client) on which this TCP Echo Server
                Connection is opened."
        ::= { wfTcpEchoSrvConn 5 }

    wfTcpEchoSrvConnRemotePort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Remote TCP Port (of the client) on which this TCP Echo Server
                Connection is opened"
        ::= { wfTcpEchoSrvConn 6 }

    wfTcpEchoSrvConnBufsRcvd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of buffers delivered by TCP to this Echo Server Instance
                which contained at least one byte of inbound receive (urgent) data."
        ::= { wfTcpEchoSrvConn 7 }

    wfTcpEchoSrvConnCharsRcvd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of inbound received characters (octets) delivered by TCP
                to this Echo Server Instance."
        ::= { wfTcpEchoSrvConn 8 }

    wfTcpEchoSrvConnBufsXmtd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of buffers passed to TCP by this Echo Server Instance
                which contained at least one byte of transmit (urgent) data."
        ::= { wfTcpEchoSrvConn 9 }

    wfTcpEchoSrvConnCharsXmtd OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of outbound transmit characters (octets) passed to TCP by
                this Echo Server Instance."
        ::= { wfTcpEchoSrvConn 10 }

    wfTcpEchoSrvConnStopReason OBJECT-TYPE
        SYNTAX	INTEGER {
    		    norm(1),
    		    mgmt(2),
    		    echoerr(3),
    		    tcpabort(4),
    		    tcperror(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The reason this TCP Echo Server Connection was terminated.
                - a Value of 1 indicates a normal client close operation
                - a Value of 2 indicates the TCP Echo Server Connection
                 MIB instance was disabled by network management.
                - a Value of 3 indicates that the TCP Connection for this Echo
                  Server Connection was aborted"
        ::= { wfTcpEchoSrvConn 11 }

    wfTcpEchoSrvConnStopDetails OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "if ( wfTcpEchoSrvConnStopReason == 1 )
                this attribute contains the time between 1st receive
                 and close completion
                else if ( wfTcpEchoSrvConnStopReason == 2 )
                this attribute has no meaning
                else if ( wfTcpEchoSrvConnStopReason == 3 )
                this attribute will contain the Echo Client error code
                else if ( wfTcpEchoSrvConnStopReason == 4 )
                this attribute will contain the TCP abort Reason Code
                else if ( wfTcpEchoSrvConnStopReason == 5 )
                this attribute will contain the TCP Error Code"
        ::= { wfTcpEchoSrvConn 12 }

    END  -- Wellfleet-TCP-ECHOSRV-MIB
-- @(#)WSCCS w/mibs-telnet.mib 1.1 8/30/95
Wellfleet-TELNET-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:49:25 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfTelnetGroup
        FROM Wellfleet-COMMON-MIB;


    wfTelnet	OBJECT IDENTIFIER ::= { wfTelnetGroup 1 }

    wfTelnetDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform a set operation on this
                object in order to create/delete TELNET."
        DEFVAL	{ created }
        ::= { wfTelnet 1 }

    wfTelnetDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables or Disables TELNET Subsystem"
        DEFVAL	{ enabled }
        ::= { wfTelnet 2 }

    wfTelnetLinesPerScreen OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of lines which can be displayed in one screen on the Telnet
                Technician Interface console.
                (Default value if NAWS option not negotiated)"
        DEFVAL	{ 24 }
        ::= { wfTelnet 3 }

    wfTelnetMoreDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable the 'more' feature on the Telnet Technician Interface console"
        DEFVAL	{ enabled }
        ::= { wfTelnet 4 }

    wfTelnetPrompt OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Character string which will be used as the system prompt on
                the Telnet Technician Interface console"
        ::= { wfTelnet 5 }

    wfTelnetLoginTimeOut OBJECT-TYPE
        SYNTAX	INTEGER(1..99)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Time out in minutes to Disconnect when at the login prompt"
        DEFVAL	{ 1 }
        ::= { wfTelnet 6 }

    wfTelnetPasswordTimeOut OBJECT-TYPE
        SYNTAX	INTEGER(1..99)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Timout in minutes on Password entry"
        DEFVAL	{ 1 }
        ::= { wfTelnet 7 }

    wfTelnetCommandTimeOut OBJECT-TYPE
        SYNTAX	INTEGER(1..99)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Time out in minutes to Disconnect when at the command prompt"
        DEFVAL	{ 15 }
        ::= { wfTelnet 8 }

    wfTelnetLoginRetries OBJECT-TYPE
        SYNTAX	INTEGER(1..99)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Limit # of login attempts then Disconnect"
        DEFVAL	{ 3 }
        ::= { wfTelnet 9 }

    wfTelnetTotalLogins OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of Telnet TI login attempts"
        ::= { wfTelnet 10 }

    wfTelnetUserLoginErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of FAILED User login attempts"
        ::= { wfTelnet 11 }

    wfTelnetManagerLoginErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of FAILED Manager login attempts"
        ::= { wfTelnet 12 }

    wfTelnetOtherLoginErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of FAILED Other login attempts"
        ::= { wfTelnet 13 }

    wfTelnetActiveSessions OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of Telnet TI Sessions"
        ::= { wfTelnet 14 }

    wfTelnetDiagnosticReport OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Diagnostic Flag: report prints the options
                information, plus some additional information about
                what processing is  going  on"
        DEFVAL	{ disabled }
        ::= { wfTelnet 15 }

    wfTelnetDiagnosticExercise OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Diagnostic Flag: Not implemented yet."
        DEFVAL	{ disabled }
        ::= { wfTelnet 16 }

    wfTelnetDiagnosticNetworkData OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Diagnostic Flag: NETDATA displays the data
                stream received by telnetd"
        DEFVAL	{ disabled }
        ::= { wfTelnet 17 }

    wfTelnetDiagnosticPtyData OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Diagnostic Flag: PTYDATA displays data written to the pty"
        DEFVAL	{ disabled }
        ::= { wfTelnet 18 }

    wfTelnetDiagnosticOptions OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Diagnostic Flag: OPTIONS prints information about
                the negotiation of TELNET options"
        DEFVAL	{ disabled }
        ::= { wfTelnet 19 }

    wfTelnetInitialSearchPath OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "Example:  'A:;1:;2:' or '2:;4:6:;9:"
        ::= { wfTelnet 20 }

    wfTelnetManagerAutoScript OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "for each login."
        ::= { wfTelnet 21 }

    wfTelnetUserAutoScript OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "for each login."
        ::= { wfTelnet 22 }

    wfTelnetUserAbortLogoutDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "a USER from escaping out of the User Autoscript"
        DEFVAL	{ disabled }
        ::= { wfTelnet 23 }

    wfTelnetHistoryDepth OBJECT-TYPE
        SYNTAX	INTEGER(1..40)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "TI command history table size"
        DEFVAL	{ 20 }
        ::= { wfTelnet 24 }

    END  -- Wellfleet-TELNET-MIB
-- @(#)WSCCS y/mibs-tftp.mib 1.1 8/30/95
Wellfleet-TFTP-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:49:29 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfInternet
        FROM Wellfleet-COMMON-MIB;


    wfTftp		OBJECT IDENTIFIER ::= { wfInternet 6 }

    wfTftpDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enables or Disables TFTP Subsystem"
        DEFVAL	{ enabled }
        ::= { wfTftp 1 }

    wfTftpDefaultVolume OBJECT-TYPE
        SYNTAX	INTEGER {
    		    volume1(1),
    		    volume2(2),
    		    volume3(3),
    		    volume4(4),
    		    volume5(5),
    		    volume6(6),
    		    volume7(7),
    		    volume8(8),
    		    volume9(9),
    		    volume10(10),
    		    volume11(11),
    		    volume12(12),
    		    volume13(13),
    		    volumea(65)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The file system volume number to which transferred files will
                be written and from which they will be retrieved. The volume
                number corresponds to the slot number on which the volume
                resides. On systems with a floppy disk, volumeA(65) should be
                used."
        DEFVAL	{ volume2 }
        ::= { wfTftp 2 }

    wfTftpXfers OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Transfers in Progress"
        ::= { wfTftp 3 }

    wfTftpTimeOut OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "General Retransmission time-out value (seconds)"
        DEFVAL	{ 5 }
        ::= { wfTftp 4 }

    wfTftpCloseTimeOut OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Retransmission time-out value for sender of final ACK (seconds)"
        DEFVAL	{ 25 }
        ::= { wfTftp 5 }

    wfTftpRexmit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum Number of Retransmissions"
        DEFVAL	{ 5 }
        ::= { wfTftp 6 }

    wfTftpIpTos OBJECT-TYPE
        SYNTAX	INTEGER {
    		    normal(1),
    		    lowdelay(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Type Of Service value set in the IP
                datagram specifies to the Internet transport
                layer how the datagram should be handled.
                For TFTP packet transfers low delay
                is preferred"
        DEFVAL	{ lowdelay }
        ::= { wfTftp 7 }

    wfTftpInFiles OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of files Successfully received"
        ::= { wfTftp 8 }

    wfTftpOutFiles OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of files Successfully sent"
        ::= { wfTftp 9 }

    wfTftpInWRQ OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of write requests received"
        ::= { wfTftp 10 }

    wfTftpOutWRQ OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of write requests sent"
        ::= { wfTftp 11 }

    wfTftpInRRQ OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of read requests received"
        ::= { wfTftp 12 }

    wfTftpOutRRQ OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of read requests sent"
        ::= { wfTftp 13 }

    wfTftpRexmitPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Re-transmitted packets"
        ::= { wfTftp 14 }

    wfTftpInErr OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Error PDUs Received"
        ::= { wfTftp 15 }

    wfTftpOutErr OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Error PDUs Sent"
        ::= { wfTftp 16 }

    wfTftpAborts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Aborted Pseudo Connections"
        ::= { wfTftp 17 }

    END  -- Wellfleet-TFTP-MIB
-- @(#)WSCCS w/mibs-ti_rui.mib 1.1 8/30/95
Wellfleet-TI-RUI-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:49:32 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfServices
        FROM Wellfleet-COMMON-MIB;


    wfTiRui		OBJECT IDENTIFIER ::= { wfServices 2 }

    wfTiRuiState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    idle(1),
    		    busy(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The state of the ti rui command processor. Idle is normal state. Busy
                indicates a command is being processed. "
        DEFVAL	{ idle }
        ::= { wfTiRui 1 }

    wfTiRuiAction OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Ti command request string"
        ::= { wfTiRui 2 }

    wfTiRuiResult OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The result of the Ti command requst"
        ::= { wfTiRui 3 }

    wfTiRuiInReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of command requests"
        ::= { wfTiRui 4 }

    wfTiRuiOutResults OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of command requests that processed without error"
        ::= { wfTiRui 5 }

    wfTiRuiOutResultsErr OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of command requests that could not be processed because of
                errors "
        ::= { wfTiRui 6 }

    END  -- Wellfleet-TI-RUI-MIB
-- @(#)WSCCS h/mibs-tnc.mib 1.1 8/30/95
Wellfleet-TNC-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:49:36 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfTelnetGroup
        FROM Wellfleet-COMMON-MIB;


    wfTelnetClient	OBJECT IDENTIFIER ::= { wfTelnetGroup 2 }

    wfTelnetClientDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create or Delete the Object Base Record"
        DEFVAL	{ created }
        ::= { wfTelnetClient 1 }

    wfTelnetClientDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable or Disable Telnet Client"
        DEFVAL	{ enabled }
        ::= { wfTelnetClient 2 }

    wfTelnetClientDebug OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Initial Value of the Debug Toggle"
        DEFVAL	{ off }
        ::= { wfTelnetClient 3 }

    wfTelnetClientRemotePort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Default Remote Telnet Server TCP Port"
        DEFVAL	{ 23 }
        ::= { wfTelnetClient 4 }

    wfTelnetClientPrompt OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Default Telnet Client Command Prompt"
        ::= { wfTelnetClient 5 }

    wfTelnetClientActiveSessions OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of active outbound telnet sessions"
        ::= { wfTelnetClient 6 }

    wfTelnetClientTotalSessions OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of outbound telnet sessions"
        ::= { wfTelnetClient 7 }

    END  -- Wellfleet-TNC-MIB
-- @(#)WSCCS i/mibs-tokenrng.mib 1.1 8/30/95
Wellfleet-TOKEN-RING-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:49:40 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfLine
        FROM Wellfleet-COMMON-MIB;


    wfTokenRingTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfTokenRingEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "TOKEN RING line record"
        ::= { wfLine 2 }

    wfTokenRingEntry OBJECT-TYPE
        SYNTAX	WfTokenRingEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the token table"
        INDEX	{ wfTokenRingSlot,
    		  wfTokenRingConnector }
        ::= { wfTokenRingTable 1 }

    WfTokenRingEntry ::= SEQUENCE {
    	    wfTokenRingDelete
    		INTEGER,
    	    wfTokenRingDisable
    		INTEGER,
    	    wfTokenRingState
    		INTEGER,
    	    wfTokenRingSlot
    		INTEGER,
    	    wfTokenRingConnector
    		INTEGER,
    	    wfTokenRingCct
    		INTEGER,
    	    wfTokenRingMtu
    		INTEGER,
    	    wfTokenRingMadr
    		OCTET STRING,
    	    wfTokenRingCfgMadr
    		OCTET STRING,
    	    wfTokenRingMadrSelect
    		INTEGER,
    	    wfTokenRingSpeed
    		INTEGER,
    	    wfTokenRingEarlyTokenRelease
    		INTEGER,
    	    wfTokenRingStatus
    		INTEGER,
    	    wfTokenRingOpenState
    		INTEGER,
    	    wfTokenRingOpenStatus
    		INTEGER,
    	    wfTokenRingUpStream
    		OCTET STRING,
    	    wfTokenRingRxOctets
    		Counter,
    	    wfTokenRingRxFrames
    		Counter,
    	    wfTokenRingTxOctets
    		Counter,
    	    wfTokenRingTxFrames
    		Counter,
    	    wfTokenRingInDiscards
    		Counter,
    	    wfTokenRingInErrors
    		Counter,
    	    wfTokenRingOutDiscards
    		Counter,
    	    wfTokenRingOutErrors
    		Counter,
    	    wfTokenRingTxClipFrames
    		Counter,
    	    wfTokenRingRxReplenMisses
    		Counter,
    	    wfTokenRingSignalLosses
    		Counter,
    	    wfTokenRingHardErrors
    		Counter,
    	    wfTokenRingSoftErrors
    		Counter,
    	    wfTokenRingTransmitBeacons
    		Counter,
    	    wfTokenRingLobeWireFaults
    		Counter,
    	    wfTokenRingAutoRemovalErrors
    		Counter,
    	    wfTokenRingRequestRemoves
    		Counter,
    	    wfTokenRingCounterOverflows
    		Counter,
    	    wfTokenRingSingleStations
    		Counter,
    	    wfTokenRingRingRecoveries
    		Counter,
    	    wfTokenRingAdapterChecks
    		Counter,
    	    wfTokenRingFirstAdapterCheckCode
    		INTEGER,
    	    wfTokenRingLastAdapterCheckCode
    		INTEGER,
    	    wfTokenRingLineErrors
    		Counter,
    	    wfTokenRingBurstErrors
    		Counter,
    	    wfTokenRingAriFciErrors
    		Counter,
    	    wfTokenRingLostFrameErrors
    		Counter,
    	    wfTokenRingRxCongestionErrors
    		Counter,
    	    wfTokenRingFrameCopiedErrors
    		Counter,
    	    wfTokenRingTokenErrors
    		Counter,
    	    wfTokenRingDmaBusErrors
    		Counter,
    	    wfTokenRingDmaParityErrors
    		Counter,
    	    wfTokenRingSrbNotFreeCmdAborts
    		Counter,
    	    wfTokenRingRxProcessings
    		Counter,
    	    wfTokenRingTxProcessings
    		Counter,
    	    wfTokenRingTxCmplProcessings
    		Counter,
    	    wfTokenRingRxTimeouts
    		Counter,
    	    wfTokenRingCmdTimeouts
    		Counter,
    	    wfTokenRingRxHostIntErrors
    		Counter,
    	    wfTokenRingRxTxBufferSize
    		INTEGER,
    	    wfTokenRingCfgTxQueueLength
    		INTEGER,
    	    wfTokenRingCfgRxQueueLength
    		INTEGER,
    	    wfTokenRingTxQueueLength
    		INTEGER,
    	    wfTokenRingRxQueueLength
    		INTEGER,
    	    wfTokenRingMacRxOctets
    		Counter,
    	    wfTokenRingMacRxFrames
    		Counter,
    	    wfTokenRingCfgFunctionalAddress
    		INTEGER,
    	    wfTokenRingFunctionalAddress
    		INTEGER,
    	    wfTokenRingGroupAddress
    		INTEGER,
    	    wfTokenRingLineNumber
    		INTEGER,
    	    wfTokenRingMacCode
    		DisplayString,
    	    wfTokenRingModule
    		INTEGER,
    	    wfTokenRingActualConnector
    		INTEGER,
    	    wfTokenRingLastChange
    		TimeTicks,
    	    wfTokenRingOutQLen
    		Gauge,
    	    wfTokenRingForceMacCode
    		INTEGER
        }

    wfTokenRingDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "create/delete parameter."
        DEFVAL	{ created }
        ::= { wfTokenRingEntry 1 }

    wfTokenRingDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "enable/disable parameter."
        DEFVAL	{ enabled }
        ::= { wfTokenRingEntry 2 }

    wfTokenRingState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "line driver state variable, Not Present, Init, Down, Up"
        DEFVAL	{ notpresent }
        ::= { wfTokenRingEntry 3 }

    wfTokenRingSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "instance ID Slot, filled in by driver"
        ::= { wfTokenRingEntry 4 }

    wfTokenRingConnector OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "instance ID Connector, filled in by driver. For the ASN
                this attribute is an encoded value and is equal to
                'module'*10 + 'connector'. Where 'module' is defined in
                attribute 70 and 'connector' is defined in attribute 71
                of this table. For non-ASN platforms this attribute is the
                phisical connector number on the slot"
        ::= { wfTokenRingEntry 5 }

    wfTokenRingCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1023)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "cct number for this line instance, configuration required"
        ::= { wfTokenRingEntry 6 }

    wfTokenRingMtu OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(4568)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "mtu parameter, fixed. This mtu of 4568 allows a type 3 Source Route
                Frame (info=4472) to be IP encapsulated over Token Ring.
                The components are:
                     AC_FC      (2) +
                     SNAP       (12+8) +
                     SNAP_IP    (12+8+20) +
                     SR         (12+18) +
                     TYPE3_INFO (4472) +
                     FCS        (4)
                     ---------------------
                     total      4568 bytes"
        DEFVAL	{ default }
        ::= { wfTokenRingEntry 7 }

    wfTokenRingMadr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "line MAC address, line driver fills in the currently used 48 bit
                MAC address."
        ::= { wfTokenRingEntry 8 }

    wfTokenRingCfgMadr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured line MAC address. Only used if wfTokenRingMadrSelect
                is set appropriately."
        ::= { wfTokenRingEntry 9 }

    wfTokenRingMadrSelect OBJECT-TYPE
        SYNTAX	INTEGER {
    		    boxwide(1),
    		    prom(2),
    		    cnfg(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selector determines which MAC address the interface will use."
        DEFVAL	{ prom }
        ::= { wfTokenRingEntry 10 }

    wfTokenRingSpeed OBJECT-TYPE
        SYNTAX	INTEGER {
    		    mbps4(4194304),
    		    mbps16(16777216)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Token Ring speed parameter - 4 and 16 Mbps are only valid values"
        DEFVAL	{ mbps16 }
        ::= { wfTokenRingEntry 11 }

    wfTokenRingEarlyTokenRelease OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Early Token Release parameter, only valid with 16Mbps"
        DEFVAL	{ enabled }
        ::= { wfTokenRingEntry 12 }

    wfTokenRingStatus OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current interface status. This attribute is only valid when the
                wfTokenRingOpenState attribute is set to OPENED.  The attribute's
                value is a sum of values,  one for each currently applicable condition
                (ie, bit positions indicate active conditions).  Occurrences of each
                condition are separately counted and the counts are included in this
                MIB as attributes wfTokenRingSignalLosses through
                wfTokenRingRingRecoveries.  The following values are defined:

                     32768 = Signal Losses
                     16384 = Hard Errors
                     8192  = Soft Errors
                     4096  = Transmit Beacons
                     2048  = Lobe Wire Faults
                     1024  = Auto-Removal Errors
                     256   = Remove Received
                     128   = Counter Overflows
                     64    = Single Stations
                     32    = Ring Recoveries

                This attribute is the most recent sum of these conditions.  More
                information on each condition is include in the descriptions of the
                individual counter attributes."
        ::= { wfTokenRingEntry 13 }

    wfTokenRingOpenState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    opened(1),
    		    opening(2),
    		    closing(3),
    		    openfailure(4),
    		    ringfailure(5),
    		    closed(6)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current interface state with respect to entering or leaving
                the ring."
        DEFVAL	{ closed }
        ::= { wfTokenRingEntry 14 }

    wfTokenRingOpenStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    open(1),
    		    badparam(2),
    		    lobefailed(3),
    		    signalloss(4),
    		    insertiontimeout(5),
    		    ringfailed(6),
    		    beaconing(7),
    		    duplicatemac(8),
    		    requestfailed(9),
    		    removereceived(10),
    		    unkerror(11),
    		    noopen(12)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the success, or the reason for failure, of the station's
                most recent attempt to enter the ring."
        DEFVAL	{ noopen }
        ::= { wfTokenRingEntry 15 }

    wfTokenRingUpStream OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "MAC address of Up Stream neighbor. Only valid when 'opened'."
        ::= { wfTokenRingEntry 16 }

    wfTokenRingRxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets received without error."
        ::= { wfTokenRingEntry 17 }

    wfTokenRingRxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames received without error."
        ::= { wfTokenRingEntry 18 }

    wfTokenRingTxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of octets transmitted without error."
        ::= { wfTokenRingEntry 19 }

    wfTokenRingTxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames transmitted without error."
        ::= { wfTokenRingEntry 20 }

    wfTokenRingInDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of error-free inbound packets discarded. Usually due to lack of
                memory resources. This is equivalent to wfTokenRingRxCongestionErrors."
        ::= { wfTokenRingEntry 21 }

    wfTokenRingInErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of inbound packets not delivered to higher-layer protocol due to
                errors.  The sum of wfTokenRingLineErrors and wfTokenRingBurstErrors."
        ::= { wfTokenRingEntry 22 }

    wfTokenRingOutDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of error-free outbound packets discarded. Usually due to lack of
                transmission bandwidth. This is equivalent to wfTokenRingTxClipFrames."
        ::= { wfTokenRingEntry 23 }

    wfTokenRingOutErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of outbound packets that could not be transmitted because of
                errors. This is equivalent to wfTokenRingLostFrameErrors."
        ::= { wfTokenRingEntry 24 }

    wfTokenRingTxClipFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames clipped in driver's transmit routine due to transmit
                congestion."
        ::= { wfTokenRingEntry 25 }

    wfTokenRingRxReplenMisses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of packet buffer misses while attempting to replenish driver
                receive ring."
        ::= { wfTokenRingEntry 26 }

    wfTokenRingSignalLosses OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of ring signal losses detected."
        ::= { wfTokenRingEntry 27 }

    wfTokenRingHardErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of events causing the adapter to transmit or receive beacon
                MAC frames."
        ::= { wfTokenRingEntry 28 }

    wfTokenRingSoftErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of soft errors. Corresponds to the number of Report Error MAC
                frames transmitted by this station."
        ::= { wfTokenRingEntry 29 }

    wfTokenRingTransmitBeacons OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of events causing the adapter to transmit beacon frames."
        ::= { wfTokenRingEntry 30 }

    wfTokenRingLobeWireFaults OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of opens or shorts (cable faults) between the adapter and
                the MAU."
        ::= { wfTokenRingEntry 31 }

    wfTokenRingAutoRemovalErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of lobe wrap test failures during beacon auto_removal process."
        ::= { wfTokenRingEntry 32 }

    wfTokenRingRequestRemoves OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Remove Ring Station MAC frames received. Each frame causes
                this station to leave the ring."
        ::= { wfTokenRingEntry 33 }

    wfTokenRingCounterOverflows OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of adapter error counter overflows."
        ::= { wfTokenRingEntry 34 }

    wfTokenRingSingleStations OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of ring status change interrupts while adapter is only station
                on the ring."
        ::= { wfTokenRingEntry 35 }

    wfTokenRingRingRecoveries OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of claim token MAC frames (ring recoveries) observed on
                the ring."
        ::= { wfTokenRingEntry 36 }

    wfTokenRingAdapterChecks OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of internal adapter errors that result in adapter crashes."
        ::= { wfTokenRingEntry 37 }

    wfTokenRingFirstAdapterCheckCode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Adapter Check Code of first occurrence."
        ::= { wfTokenRingEntry 38 }

    wfTokenRingLastAdapterCheckCode OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Adapter Check Code of most recent (last) occurrence."
        ::= { wfTokenRingEntry 39 }

    wfTokenRingLineErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames copied or repeated by this station with bad
                format or an FCS error."
        ::= { wfTokenRingEntry 40 }

    wfTokenRingBurstErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of errored frames with no transition for 5 1/2 bit times."
        ::= { wfTokenRingEntry 41 }

    wfTokenRingAriFciErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of occurrences of this station receiving both an AMP MAC
                frame and a SMP MAC frame with the a & c bits clear or more than
                one SMP MAC frame with the a & c bits clear without an intervening
                AMP MAC frame.  This condition indicates that the up-stream
                neighbor is unable to set the a & c bits in a frame that it has
                copied."
        ::= { wfTokenRingEntry 42 }

    wfTokenRingLostFrameErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames being stripped which are missing their tails."
        ::= { wfTokenRingEntry 43 }

    wfTokenRingRxCongestionErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of frames dropped due to receive congestion."
        ::= { wfTokenRingEntry 44 }

    wfTokenRingFrameCopiedErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of specifically addressed frames for this station that had
                their a & c bits previously set."
        ::= { wfTokenRingEntry 45 }

    wfTokenRingTokenErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of token protocol errors. Only relevant when this station is
                the active monitor."
        ::= { wfTokenRingEntry 46 }

    wfTokenRingDmaBusErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of bus errors during DMA that do not exceed threshold."
        ::= { wfTokenRingEntry 47 }

    wfTokenRingDmaParityErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of parity errors during DMA that do not exceed threshold."
        ::= { wfTokenRingEntry 48 }

    wfTokenRingSrbNotFreeCmdAborts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of host to adapter commands aborted because of in-completed in
                process commands."
        ::= { wfTokenRingEntry 49 }

    wfTokenRingRxProcessings OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of processings of received frames (similar to RINT)."
        ::= { wfTokenRingEntry 50 }

    wfTokenRingTxProcessings OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of processings of frames for transmit."
        ::= { wfTokenRingEntry 51 }

    wfTokenRingTxCmplProcessings OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of processings of transmitted frames (similar to TINT)."
        ::= { wfTokenRingEntry 52 }

    wfTokenRingRxTimeouts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of re-initializations due to receiver time-outs."
        ::= { wfTokenRingEntry 53 }

    wfTokenRingCmdTimeouts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of re-initializations due to command time-outs."
        ::= { wfTokenRingEntry 54 }

    wfTokenRingRxHostIntErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of re-initializations due to receive host interface errors."
        ::= { wfTokenRingEntry 55 }

    wfTokenRingRxTxBufferSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Internal Adapter RAM buffer size."
        ::= { wfTokenRingEntry 56 }

    wfTokenRingCfgTxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured Transmit Queue Length. Values other than zero over-ride the
                router selected values.  A value of zero has a special meaning.  Zero
                causes router based default values to be used.  Values larger than the
                compiled ring size are truncated to the compiled ring size. "
        ::= { wfTokenRingEntry 57 }

    wfTokenRingCfgRxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER(0..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configured Receive Queue Length. Values other than zero over-ride the
                router selected values.  A value of zero has a special meaning.  Zero
                causes router based default values to be used.  Values larger than the
                compiled ring size are truncated to the compiled ring size. "
        ::= { wfTokenRingEntry 58 }

    wfTokenRingTxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current Transmit Queue Length."
        ::= { wfTokenRingEntry 59 }

    wfTokenRingRxQueueLength OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current Receive Queue Length."
        ::= { wfTokenRingEntry 60 }

    wfTokenRingMacRxOctets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Mac frame octets received without error."
        ::= { wfTokenRingEntry 61 }

    wfTokenRingMacRxFrames OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Mac frames received without error."
        ::= { wfTokenRingEntry 62 }

    wfTokenRingCfgFunctionalAddress OBJECT-TYPE
        SYNTAX	INTEGER {
    		    mask(2147467520)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The configurable bit mask of all Token Ring Functional addresses for which
                this interface will accept frames. This value is loaded into the func addr
                defined in the attribute 'wfTokenRingFunctionalAddress.'
                note: 2147467520 = 0x7fffc100"
        DEFVAL	{ mask }
        ::= { wfTokenRingEntry 63 }

    wfTokenRingFunctionalAddress OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The bit mask of all Token Ring Functional addresses for which this
                interface will accept frames."
        ::= { wfTokenRingEntry 64 }

    wfTokenRingGroupAddress OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The single Token Ring Group address for which this interface will
                accept frames."
        ::= { wfTokenRingEntry 65 }

    wfTokenRingLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Logical line number associated with this driver entity."
        ::= { wfTokenRingEntry 66 }

    wfTokenRingMacCode OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Type and version of microcode running on the TMS380."
        ::= { wfTokenRingEntry 67 }

    wfTokenRingModule OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Module number for ASN platform, filled in by driver. For non-ASN
                platforms this attribute will not be used."
        ::= { wfTokenRingEntry 68 }

    wfTokenRingActualConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Actual connector number for ASN platform, filled in by
                driver. For non-ASN platforms this attribute will not be used."
        ::= { wfTokenRingEntry 69 }

    wfTokenRingLastChange OBJECT-TYPE
        SYNTAX	TimeTicks
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The value of SysUpTime at the time the interface entered it's current
                operational state (UP state).  SysUpTime is defined as the time (in
                hundredths of a second) since the network management portion of the
                system was last re-initialized.  Usually the time since boot."
        ::= { wfTokenRingEntry 70 }

    wfTokenRingOutQLen OBJECT-TYPE
        SYNTAX	Gauge
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The instantaneous current length of the output packet queue (in packets)."
        ::= { wfTokenRingEntry 71 }

    wfTokenRingForceMacCode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    timac(1),
    		    fastmac(2),
    		    fastmacplus(3),
    		    fastmacplusb(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Selector determines which microcode will be downloaded for the TMS380."
        ::= { wfTokenRingEntry 72 }

    END  -- Wellfleet-TOKEN-RING-MIB
-- @(#)WSCCS x/mibs-vines.mib 1.1 8/30/95
Wellfleet-VINES-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:49:46 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfVinesGroup
        FROM Wellfleet-COMMON-MIB;


    wfVinesBase	OBJECT IDENTIFIER ::= { wfVinesGroup 1 }

    wfVinesBaseDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter.  This value determines whether or not VINES
                is configured on this slot."
        DEFVAL	{ created }
        ::= { wfVinesBase 1 }

    wfVinesBaseDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter determines whether or not VINES is to startup."
        DEFVAL	{ enabled }
        ::= { wfVinesBase 2 }

    wfVinesBaseState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This parameter reflects the current state of VINES."
        DEFVAL	{ notpresent }
        ::= { wfVinesBase 3 }

    wfVinesBaseUserNetid OBJECT-TYPE
        SYNTAX	INTEGER(1..2097151)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The network ID as defined by the user.  A null value indicates
                that the user is not configuring a Network ID and that the
                the router should assign it."
        ::= { wfVinesBase 4 }

    wfVinesBaseRouterNetid OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network ID as defined by the router.  If the user configures
                a Network ID in the above attribute, we will take that value
                and add in the Wellfleet code for VINES and save it here."
        ::= { wfVinesBase 5 }

    wfVinesBaseBcastClass OBJECT-TYPE
        SYNTAX	INTEGER {
    		    bcast(1),
    		    chrg(2),
    		    cost(3),
    		    lans(4),
    		    srvr(5),
    		    nochrg(6),
    		    locost(7),
    		    alllans(8)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The broadcast modifier.  This value defines the
                class of broadcast packets that are originated
                by this node."
        DEFVAL	{ bcast }
        ::= { wfVinesBase 6 }

    wfVinesBaseNetworkSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Allows the network administrator to pre-configure the size of the
                network.  The default is 0."
        ::= { wfVinesBase 7 }

    wfVinesBaseHostSize OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Allows the network administrator to pre-configure the expected number
                of neighbor.  The dafault is 0."
        ::= { wfVinesBase 8 }

    wfVinesBaseRtpMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    automode(1),
    		    seq(2),
    		    sequenced(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter will determine whether sequenced RTP or
                Non Sequenced RTP will be supported or both modes will
                be available."
        DEFVAL	{ automode }
        ::= { wfVinesBase 9 }

    wfVinesBaseLogFilter OBJECT-TYPE
        SYNTAX	INTEGER {
    		    nothing(2147483647),
    		    debug(1),
    		    info(2),
    		    trace(16),
    		    debuginfo(3),
    		    debugtrace(17),
    		    infotrace(18),
    		    debuginfotrace(19)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Filter out some log messages, Default filters out
                trace messages. ??? Change this later to FILTER_TRACE ??? "
        DEFVAL	{ nothing }
        ::= { wfVinesBase 10 }

    wfVinesBaseRouterSeqNumber OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This parameter keeps track of the of current router
                sequence number"
        ::= { wfVinesBase 11 }

    wfVinesIp	OBJECT IDENTIFIER ::= { wfVinesGroup 2 }

    wfVinesIpTotIn OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of VINES IP packets received."
        ::= { wfVinesIp 1 }

    wfVinesIpTotOut OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of VINES IP packets sent."
        ::= { wfVinesIp 2 }

    wfVinesIpBad OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of badly formed packets that were received.
                This field is incremented when a packet is received with an
                improper checksum.  "
        ::= { wfVinesIp 3 }

    wfVinesIpRouted OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of packets received that were routed to another
                node.  This statistic includes the number of IP packets
                encapsulated within routed VINES IP headers.  Each routed packet
                counts as both an incoming and outgoing packet."
        ::= { wfVinesIp 4 }

    wfVinesIpRoutedHWM OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The largest number of packets routed in one second since the server
                was last booted."
        ::= { wfVinesIp 5 }

    wfVinesIpBcast OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of VINES IP broadcast packets sent, both locally
                generated and routed from other nodes.  "
        ::= { wfVinesIp 6 }

    wfVinesIpBcastHWM OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The largest number of packets broadcast in one second since the server
                was last booted."
        ::= { wfVinesIp 7 }

    wfVinesIpReass OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of times that packets were reassembled.  Reassemblies
                result from the transmission of packets that must be broken into
                smaller pieces, then reassembled due to differences in transmission
                media."
        ::= { wfVinesIp 8 }

    wfVinesIpFrags OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of packet fragmentations performed."
        ::= { wfVinesIp 9 }

    wfVinesIpToDodIP OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of packets that VINES IP passed to IP for encapsulation in
                IP headers.  These packets were initially handled by VINES IP, but
                were passed to IP for routing.  If the TCP/IP Server-to-Server
                option is not installed, this value will be zero."
        ::= { wfVinesIp 10 }

    wfVinesIpFromDodIP OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of packets that VINES IP received from IP to be
                decapsulated into VINES packets.  IP initially handled these packets,
                but had to pass them on to VINES IP for routing.  If the server is
                not running a TCP/IP option, this value will be zero."
        ::= { wfVinesIp 11 }

    wfVinesRtpNbr	OBJECT IDENTIFIER ::= { wfVinesGroup 3 }

    wfVinesRtpNbrNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of entries in the Table of Neighbors."
        ::= { wfVinesRtpNbr 1 }

    wfVinesRtpNbrTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfVinesRtpNbrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the Table of Neighbors."
        ::= { wfVinesGroup 4 }

    wfVinesRtpNbrEntry OBJECT-TYPE
        SYNTAX	WfVinesRtpNbrEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Table of Neighbors."
        INDEX	{ wfVinesRtpNbrNetId }
        ::= { wfVinesRtpNbrTable 1 }

    WfVinesRtpNbrEntry ::= SEQUENCE {
    	    wfVinesRtpNbrNetId
    		Counter,
    	    wfVinesRtpNbrSubNetId
    		INTEGER,
    	    wfVinesRtpNbrType
    		INTEGER,
    	    wfVinesRtpNbrIfType
    		INTEGER,
    	    wfVinesRtpNbrRemAdr
    		OCTET STRING,
    	    wfVinesRtpNbrLocAdr
    		OCTET STRING,
    	    wfVinesRtpNbrLocSlot
    		INTEGER,
    	    wfVinesRtpNbrLocLine
    		INTEGER,
    	    wfVinesRtpNbrSvrName
    		OCTET STRING,
    	    wfVinesRtpNbrCost
    		INTEGER,
    	    wfVinesSeqRtpNbrState
    		INTEGER,
    	    wfVinesSeqRtpNbrSeqNumber
    		Counter,
    	    wfVinesRtpNbrRtType
    		INTEGER,
    	    wfVinesRtpNbrNumPaths
    		Counter
        }

    wfVinesRtpNbrNetId OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network ID of this neighbor."
        ::= { wfVinesRtpNbrEntry 1 }

    wfVinesRtpNbrSubNetId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The subnetwork ID of this neighbor."
        ::= { wfVinesRtpNbrEntry 2 }

    wfVinesRtpNbrType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    workst(1),
    		    server(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The type of node: client or server."
        ::= { wfVinesRtpNbrEntry 3 }

    wfVinesRtpNbrIfType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enet(1),
    		    tr4k(2),
    		    tr16k(3),
    		    hdlc1200(4),
    		    hdlc4800(5),
    		    hdlc9600(6),
    		    hdlc56000(7),
    		    async1200(8),
    		    async4800(9),
    		    async9600(10),
    		    async56000(11),
    		    x251200(12),
    		    x254800(13),
    		    x259600(14),
    		    x2556000(15),
    		    t145k(16),
    		    t1128k(17),
    		    t1192k(18),
    		    t1256k(19),
    		    t1320k(20),
    		    t1384k(21),
    		    t1448k(22),
    		    t1512k(23),
    		    t1576k(24),
    		    t1640k(25),
    		    t1704k(26),
    		    t1896k(27),
    		    t11088k(28),
    		    t11344k(29),
    		    tunnel(30),
    		    fddi(31)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This describes the type of interface."
        ::= { wfVinesRtpNbrEntry 4 }

    wfVinesRtpNbrRemAdr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Remote MAC address."
        ::= { wfVinesRtpNbrEntry 5 }

    wfVinesRtpNbrLocAdr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Local MAC address."
        ::= { wfVinesRtpNbrEntry 6 }

    wfVinesRtpNbrLocSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot connected to this neighbor."
        ::= { wfVinesRtpNbrEntry 7 }

    wfVinesRtpNbrLocLine OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line connected to this neighbor."
        ::= { wfVinesRtpNbrEntry 8 }

    wfVinesRtpNbrSvrName OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Name of the server (N/A)."
        ::= { wfVinesRtpNbrEntry 9 }

    wfVinesRtpNbrCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Cost for this neighbor."
        ::= { wfVinesRtpNbrEntry 10 }

    wfVinesSeqRtpNbrState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    init(1),
    		    fullrqst(2),
    		    chgrqst(3),
    		    up(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Current state of the Nbr"
        DEFVAL	{ up }
        ::= { wfVinesRtpNbrEntry 11 }

    wfVinesSeqRtpNbrSeqNumber OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Nbr's own sequence number"
        ::= { wfVinesRtpNbrEntry 12 }

    wfVinesRtpNbrRtType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    seq(1),
    		    sequenced(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The route type of this nbr"
        ::= { wfVinesRtpNbrEntry 13 }

    wfVinesRtpNbrNumPaths OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of paths to the Nbr"
        ::= { wfVinesRtpNbrEntry 14 }

    wfVinesRtpRt	OBJECT IDENTIFIER ::= { wfVinesGroup 5 }

    wfVinesRtpRtNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of entries in the Table of Networks."
        ::= { wfVinesRtpRt 1 }

    wfVinesRtpRtTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfVinesRtpRtEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the Table of Networks."
        ::= { wfVinesGroup 6 }

    wfVinesRtpRtEntry OBJECT-TYPE
        SYNTAX	WfVinesRtpRtEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Table of Networks."
        INDEX	{ wfVinesRtpRtNetid }
        ::= { wfVinesRtpRtTable 1 }

    WfVinesRtpRtEntry ::= SEQUENCE {
    	    wfVinesRtpRtNetid
    		Counter,
    	    wfVinesRtpRtMetric
    		INTEGER,
    	    wfVinesRtpRtIdle
    		INTEGER,
    	    wfVinesRtpRtGateNetid
    		Counter,
    	    wfVinesRtpRtSvrName
    		OCTET STRING,
    	    wfVinesRtpRtGateSvrName
    		OCTET STRING,
    	    wfVinesRtpRtLocSlot
    		INTEGER,
    	    wfVinesRtpRtLocLine
    		INTEGER,
    	    wfVinesRtpRtIfType
    		INTEGER,
    	    wfVinesRtpRtGateHwAddr
    		OCTET STRING,
    	    wfVinesRtpRtType
    		INTEGER,
    	    wfVinesRtpRtSeqNumber
    		Counter,
    	    wfVinesRtpRtTimeStamp
    		Counter,
    	    wfVinesRtpRtNumPaths
    		Counter
        }

    wfVinesRtpRtNetid OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network ID number."
        ::= { wfVinesRtpRtEntry 1 }

    wfVinesRtpRtMetric OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The routing metric to get to this network."
        ::= { wfVinesRtpRtEntry 2 }

    wfVinesRtpRtIdle OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The idle time for this network."
        ::= { wfVinesRtpRtEntry 3 }

    wfVinesRtpRtGateNetid OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network ID of the gateway to this network."
        ::= { wfVinesRtpRtEntry 4 }

    wfVinesRtpRtSvrName OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The servers name (N/A)."
        ::= { wfVinesRtpRtEntry 5 }

    wfVinesRtpRtGateSvrName OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The name of the gateway server."
        ::= { wfVinesRtpRtEntry 6 }

    wfVinesRtpRtLocSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot connected to this Network."
        ::= { wfVinesRtpRtEntry 7 }

    wfVinesRtpRtLocLine OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Line connected to this Network."
        ::= { wfVinesRtpRtEntry 8 }

    wfVinesRtpRtIfType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enet(1),
    		    tr4k(2),
    		    tr16k(3),
    		    hdlc1200(4),
    		    hdlc4800(5),
    		    hdlc9600(6),
    		    hdlc56000(7),
    		    async1200(8),
    		    async4800(9),
    		    async9600(10),
    		    async56000(11),
    		    x251200(12),
    		    x254800(13),
    		    x259600(14),
    		    x2556000(15),
    		    t145k(16),
    		    t1128k(17),
    		    t1192k(18),
    		    t1256k(19),
    		    t1320k(20),
    		    t1384k(21),
    		    t1448k(22),
    		    t1512k(23),
    		    t1576k(24),
    		    t1640k(25),
    		    t1704k(26),
    		    t1896k(27),
    		    t11088k(28),
    		    t11344k(29),
    		    tunnel(30),
    		    fddi(31)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This describes the type of interface."
        ::= { wfVinesRtpRtEntry 9 }

    wfVinesRtpRtGateHwAddr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Remote MAC address."
        ::= { wfVinesRtpRtEntry 10 }

    wfVinesRtpRtType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    seq(1),
    		    sequenced(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the whether this is a VINES 5.50 router or
                a VINES 4.11 Router/Server. If learnt as part of a 4.11
                RTP or thro' a sequenced RTP or by looking at the network
                flag in the tuple of a sequenced update"
        ::= { wfVinesRtpRtEntry 11 }

    wfVinesRtpRtSeqNumber OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This attribute will always have a value of 0x0"
        ::= { wfVinesRtpRtEntry 12 }

    wfVinesRtpRtTimeStamp OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This attribute will always have a value of 0x0"
        ::= { wfVinesRtpRtEntry 13 }

    wfVinesRtpRtNumPaths OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of paths to the Network"
        ::= { wfVinesRtpRtEntry 14 }

    wfVinesIf	OBJECT IDENTIFIER ::= { wfVinesGroup 7 }

    wfVinesIfNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of entries in the Interfaces Table."
        ::= { wfVinesIf 1 }

    wfVinesIfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfVinesIfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the Table of Interfaces."
        ::= { wfVinesGroup 8 }

    wfVinesIfEntry OBJECT-TYPE
        SYNTAX	WfVinesIfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry to the Interface Table."
        INDEX	{ wfVinesIfCct }
        ::= { wfVinesIfTable 1 }

    WfVinesIfEntry ::= SEQUENCE {
    	    wfVinesIfDelete
    		INTEGER,
    	    wfVinesIfDisable
    		INTEGER,
    	    wfVinesIfState
    		INTEGER,
    	    wfVinesIfSlot
    		INTEGER,
    	    wfVinesIfLine
    		INTEGER,
    	    wfVinesIfCct
    		INTEGER,
    	    wfVinesIfSession
    		INTEGER,
    	    wfVinesIfType
    		INTEGER,
    	    wfVinesIfDescr
    		OCTET STRING,
    	    wfVinesIfAdr
    		OCTET STRING,
    	    wfVinesIfDodIpDisable
    		INTEGER,
    	    wfVinesIfArpDisable
    		INTEGER,
    	    wfVinesIfTrEndStation
    		INTEGER,
    	    wfVinesIfInPkts
    		Counter,
    	    wfVinesIfInErrs
    		Counter,
    	    wfVinesIfOutPkts
    		Counter,
    	    wfVinesIfOutErrs
    		Counter,
    	    wfVinesIfInMsgs
    		Counter,
    	    wfVinesIfMux
    		INTEGER,
    	    wfVinesIfFwdDrops
    		Counter,
    	    wfVinesIfZeroHopDrops
    		Counter,
    	    wfVinesIfIcpInErrorNotifs
    		Counter,
    	    wfVinesIfIcpInMetricNotifs
    		Counter,
    	    wfVinesIfIcpInErrors
    		Counter,
    	    wfVinesIfIcpOutErrorNotifs
    		Counter,
    	    wfVinesIfIcpOutMetricNotifs
    		Counter,
    	    wfVinesIfArpInQueries
    		Counter,
    	    wfVinesIfArpInAssgReqs
    		Counter,
    	    wfVinesIfArpInErrors
    		Counter,
    	    wfVinesIfArpOutServRsps
    		Counter,
    	    wfVinesIfArpOutAssgRsps
    		Counter,
    	    wfVinesIfInRedirects
    		Counter,
    	    wfVinesIfOutRedirects
    		Counter,
    	    wfVinesIfEchoInPkts
    		Counter,
    	    wfVinesIfEchoOutPkts
    		Counter,
    	    wfVinesIfReassFails
    		Counter,
    	    wfVinesIfRemClientPrivDisable
    		INTEGER,
    	    wfVinesIfSplitHorizonDisable
    		INTEGER,
    	    wfVinesIfCost
    		INTEGER,
    	    wfVinesIfSyncPortNumber
    		INTEGER,
    	    wfVinesIfInLackRescError
    		Counter,
    	    wfVinesIfOutLackRescError
    		Counter,
    	    wfVinesIfRtpRecv
    		Counter,
    	    wfVinesIfRtpSent
    		Counter,
    	    wfVinesIfSMDSGroupAddress
    		OCTET STRING,
    	    wfVinesIfFRBcastDlci
    		OCTET STRING,
    	    wfVinesIfCfgAdr
    		OCTET STRING,
    	    wfVinesIfNumRoutes
    		Counter,
    	    wfVinesIfCfgCost
    		INTEGER,
    	    wfVinesIfCostUsed
    		INTEGER,
    	    wfVinesIfFrpEnable
    		INTEGER,
    	    wfVinesIfSeqArpInQueries
    		Counter,
    	    wfVinesIfSeqArpInAssgReqs
    		Counter,
    	    wfVinesIfSeqArpInErrors
    		Counter,
    	    wfVinesIfSeqArpOutServRsps
    		Counter,
    	    wfVinesIfSeqArpOutAssgRsps
    		Counter,
    	    wfVinesIfInSeqRedirects
    		Counter,
    	    wfVinesIfOutSeqRedirects
    		Counter,
    	    wfVinesIfSeqRtpRecv
    		Counter,
    	    wfVinesIfSeqRtpSent
    		Counter,
    	    wfVinesIfRtpGenerationDisable
    		INTEGER,
    	    wfVinesIfInverseArpEnable
    		INTEGER,
    	    wfVinesIfSTalkSplitHorizon
    		INTEGER,
    	    wfVinesIfPermWanNbr
    		INTEGER,
    	    wfVinesIfNumFwdEntries
    		Counter,
    	    wfVinesIfNumNonSeqNbrs
    		Counter,
    	    wfVinesIfNumSeqNbrs
    		Counter
        }

    wfVinesIfDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter.  Users perform an SNMP set command to
                create/delete a VINES interface. "
        DEFVAL	{ created }
        ::= { wfVinesIfEntry 1 }

    wfVinesIfDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter.  Users perform an SNMP set command to
                enable/disable a VINES interface. "
        DEFVAL	{ enabled }
        ::= { wfVinesIfEntry 2 }

    wfVinesIfState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This parameter reflects the current state of the VINES interface."
        DEFVAL	{ notpresent }
        ::= { wfVinesIfEntry 3 }

    wfVinesIfSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The slot on which this interface is configured."
        ::= { wfVinesIfEntry 4 }

    wfVinesIfLine OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The line on which this interface is configured."
        ::= { wfVinesIfEntry 5 }

    wfVinesIfCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The circuit number for this interface."
        ::= { wfVinesIfEntry 6 }

    wfVinesIfSession OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The session number for this interface."
        ::= { wfVinesIfEntry 7 }

    wfVinesIfType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enet(1),
    		    tr4k(2),
    		    tr16k(3),
    		    hdlc1200(4),
    		    hdlc4800(5),
    		    hdlc9600(6),
    		    hdlc56000(7),
    		    async1200(8),
    		    async4800(9),
    		    async9600(10),
    		    async56000(11),
    		    x251200(12),
    		    x254800(13),
    		    x259600(14),
    		    x2556000(15),
    		    t145k(16),
    		    t1128k(17),
    		    t1192k(18),
    		    t1256k(19),
    		    t1320k(20),
    		    t1384k(21),
    		    t1448k(22),
    		    t1512k(23),
    		    t1576k(24),
    		    t1640k(25),
    		    t1704k(26),
    		    t1896k(27),
    		    t11088k(28),
    		    t11344k(29),
    		    tunnel(30),
    		    fddi(31)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The type of interface this is."
        DEFVAL	{ enet }
        ::= { wfVinesIfEntry 8 }

    wfVinesIfDescr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Description of this interface."
        ::= { wfVinesIfEntry 9 }

    wfVinesIfAdr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The MAC address of this interface."
        ::= { wfVinesIfEntry 10 }

    wfVinesIfDodIpDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter indicates if this interface is enabled to  encapsulate
                VINES packets over DoD IP."
        DEFVAL	{ disabled }
        ::= { wfVinesIfEntry 11 }

    wfVinesIfArpDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter indicates if this interface is enabled to support
                VINES ARP. "
        DEFVAL	{ disabled }
        ::= { wfVinesIfEntry 12 }

    wfVinesIfTrEndStation OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter indicates if this interface is enabled for source
                routing end station support. "
        DEFVAL	{ disabled }
        ::= { wfVinesIfEntry 13 }

    wfVinesIfInPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of packets received on this interface."
        ::= { wfVinesIfEntry 14 }

    wfVinesIfInErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of packets received with errors."
        ::= { wfVinesIfEntry 15 }

    wfVinesIfOutPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of packets transmitted on this interface."
        ::= { wfVinesIfEntry 16 }

    wfVinesIfOutErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of errors on packets transmitted."
        ::= { wfVinesIfEntry 17 }

    wfVinesIfInMsgs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of messages received on this interface."
        ::= { wfVinesIfEntry 18 }

    wfVinesIfMux OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enet(1),
    		    snap(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Muxing scheme for this interface.  VINES currently only supports
                Ethernet encapsulation, but they plan to switch to SNAP."
        DEFVAL	{ enet }
        ::= { wfVinesIfEntry 19 }

    wfVinesIfFwdDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of pakets that were dropped because of no forwarding
                information for the destination."
        ::= { wfVinesIfEntry 20 }

    wfVinesIfZeroHopDrops OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of pakets that were dropped because of a zero hop count."
        ::= { wfVinesIfEntry 21 }

    wfVinesIfIcpInErrorNotifs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICP error notification packets received."
        ::= { wfVinesIfEntry 22 }

    wfVinesIfIcpInMetricNotifs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICP metric notification packets received."
        ::= { wfVinesIfEntry 23 }

    wfVinesIfIcpInErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICP packets received with errors."
        ::= { wfVinesIfEntry 24 }

    wfVinesIfIcpOutErrorNotifs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICP error notification packets transmitted."
        ::= { wfVinesIfEntry 25 }

    wfVinesIfIcpOutMetricNotifs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ICP metric notification packets transmitted."
        ::= { wfVinesIfEntry 26 }

    wfVinesIfArpInQueries OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ARP queries received."
        ::= { wfVinesIfEntry 27 }

    wfVinesIfArpInAssgReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ARP assignment requests received."
        ::= { wfVinesIfEntry 28 }

    wfVinesIfArpInErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ARP packets received with errors."
        ::= { wfVinesIfEntry 29 }

    wfVinesIfArpOutServRsps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ARP service responses sent."
        ::= { wfVinesIfEntry 30 }

    wfVinesIfArpOutAssgRsps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ARP assignment responses sent."
        ::= { wfVinesIfEntry 31 }

    wfVinesIfInRedirects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Redirect packets received."
        ::= { wfVinesIfEntry 32 }

    wfVinesIfOutRedirects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Redirect packets sent."
        ::= { wfVinesIfEntry 33 }

    wfVinesIfEchoInPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Echo packets received."
        ::= { wfVinesIfEntry 34 }

    wfVinesIfEchoOutPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Echo packets sent."
        ::= { wfVinesIfEntry 35 }

    wfVinesIfReassFails OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of packet reassemblies that failed."
        ::= { wfVinesIfEntry 36 }

    wfVinesIfRemClientPrivDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter indicates that this interface will allow remote
                clients privileges on this segment.  This means that a client
                is not restricted to being within one hop of a VINES server. "
        DEFVAL	{ disabled }
        ::= { wfVinesIfEntry 37 }

    wfVinesIfSplitHorizonDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Split Horizon"
        DEFVAL	{ disabled }
        ::= { wfVinesIfEntry 38 }

    wfVinesIfCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "The Interface Cost
                The default is null - meaning use the Banyan specified cost.
                Otherwise, the configured value wfVinesIfCfgCost will be used."
        ::= { wfVinesIfEntry 39 }

    wfVinesIfSyncPortNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	obsolete
        DESCRIPTION
                "The Sync port number required to determine number of RTP
                packets sent for each network.  It can only take a value
                between 1 - 4.  It correspond to the Sync port number on this
                slot only.
                If it is 4.2 for example, then the port number should be 2."
        ::= { wfVinesIfEntry 40 }

    wfVinesIfInLackRescError OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Failed to duplicate packet due to lack of resource."
        ::= { wfVinesIfEntry 41 }

    wfVinesIfOutLackRescError OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Failed to duplicate packet due to lack of resource."
        ::= { wfVinesIfEntry 42 }

    wfVinesIfRtpRecv OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of RTP packets received."
        ::= { wfVinesIfEntry 43 }

    wfVinesIfRtpSent OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of RTP packets sent."
        ::= { wfVinesIfEntry 44 }

    wfVinesIfSMDSGroupAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configurable SMDS broadcast address"
        ::= { wfVinesIfEntry 45 }

    wfVinesIfFRBcastDlci OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configurable FRAME RELAY broadcast address"
        ::= { wfVinesIfEntry 46 }

    wfVinesIfCfgAdr OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The configured MAC address of this interface."
        ::= { wfVinesIfEntry 47 }

    wfVinesIfNumRoutes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	obsolete
        DESCRIPTION
                "Number of routes cached in the forwarding table"
        ::= { wfVinesIfEntry 48 }

    wfVinesIfCfgCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The configured interface cost"
        ::= { wfVinesIfEntry 49 }

    wfVinesIfCostUsed OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Interface Cost used by the router"
        ::= { wfVinesIfEntry 50 }

    wfVinesIfFrpEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Parameter to indicate whether this interface is to support
                the use of FRP header "
        DEFVAL	{ enabled }
        ::= { wfVinesIfEntry 51 }

    wfVinesIfSeqArpInQueries OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Sequenced ARP queries received."
        ::= { wfVinesIfEntry 52 }

    wfVinesIfSeqArpInAssgReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Sequenced ARP assignment requests received."
        ::= { wfVinesIfEntry 53 }

    wfVinesIfSeqArpInErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Sequenced ARP packets received with errors."
        ::= { wfVinesIfEntry 54 }

    wfVinesIfSeqArpOutServRsps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Sequenced ARP service responses sent."
        ::= { wfVinesIfEntry 55 }

    wfVinesIfSeqArpOutAssgRsps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Sequenced ARP assignment responses sent."
        ::= { wfVinesIfEntry 56 }

    wfVinesIfInSeqRedirects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Sequenced Redirect packets received."
        ::= { wfVinesIfEntry 57 }

    wfVinesIfOutSeqRedirects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of Sequenced Redirect packets sent."
        ::= { wfVinesIfEntry 58 }

    wfVinesIfSeqRtpRecv OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of RTP packets received."
        ::= { wfVinesIfEntry 59 }

    wfVinesIfSeqRtpSent OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of RTP packets sent."
        ::= { wfVinesIfEntry 60 }

    wfVinesIfRtpGenerationDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This parameter will be used to disable the RTP generation on
                an interface, where static routes may be configured"
        DEFVAL	{ enabled }
        ::= { wfVinesIfEntry 61 }

    wfVinesIfInverseArpEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is to enable the use of Inverse ARP protocol to learn
                nbrs in a Frame Relay/ATM network when a new dlci comes up"
        DEFVAL	{ disabled }
        ::= { wfVinesIfEntry 62 }

    wfVinesIfSTalkSplitHorizon OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is to disable the use of split horizon for STALK
                packets so as to support a partially meshed Frame Relay
                Network for VINES"
        DEFVAL	{ enabled }
        ::= { wfVinesIfEntry 63 }

    wfVinesIfPermWanNbr OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is to enable the use of Permanent Non sequenced Nbrs
                for Non sequenced neighbors over a WAN link, so that
                these are not aged every 1 hour, when using Automode/Sequenced Mode."
        DEFVAL	{ disabled }
        ::= { wfVinesIfEntry 64 }

    wfVinesIfNumFwdEntries OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This counts the number of forwarding entries on this
                interface"
        ::= { wfVinesIfEntry 65 }

    wfVinesIfNumNonSeqNbrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This counts the number of Non sequenced Nbrs"
        ::= { wfVinesIfEntry 66 }

    wfVinesIfNumSeqNbrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This counts the number of sequenced Nbrs"
        ::= { wfVinesIfEntry 67 }

    wfVinesIfX25VC	OBJECT IDENTIFIER ::= { wfVinesGroup 9 }

    wfVinesIfX25VCNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the number of entries in the X.25 Virtual Circuit Table."
        ::= { wfVinesIfX25VC 1 }

    wfVinesIfX25VCTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfVinesIfX25VCEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the Table of X.25 Virtual Circuits."
        ::= { wfVinesGroup 10 }

    wfVinesIfX25VCEntry OBJECT-TYPE
        SYNTAX	WfVinesIfX25VCEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Table of X.25 Virtual Circuits."
        INDEX	{ wfVinesIfX25VCCct }
        ::= { wfVinesIfX25VCTable 1 }

    WfVinesIfX25VCEntry ::= SEQUENCE {
    	    wfVinesIfX25VCSlot
    		INTEGER,
    	    wfVinesIfX25VCLine
    		INTEGER,
    	    wfVinesIfX25VCCct
    		INTEGER,
    	    wfVinesIfX25VCSession
    		INTEGER,
    	    wfVinesIfX25VCTotIn
    		Counter,
    	    wfVinesIfX25VCTotOut
    		Counter,
    	    wfVinesIfX25VCInErrs
    		Counter,
    	    wfVinesIfX25VCOutErrs
    		Counter,
    	    wfVinesIfX25VCPktsOut
    		Counter,
    	    wfVinesIfX25VCPktsAwaitAck
    		INTEGER,
    	    wfVinesIfX25VCBytesOut
    		Counter,
    	    wfVinesIfX25VCBytesAwaitAck
    		INTEGER,
    	    wfVinesIfX25VCPktsIn
    		Counter,
    	    wfVinesIfX25VCBytesIn
    		Counter,
    	    wfVinesIfX25VCResetsIn
    		Counter,
    	    wfVinesIfX25VCResetsOut
    		Counter
        }

    wfVinesIfX25VCSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of the slot in which the card is installed."
        ::= { wfVinesIfX25VCEntry 1 }

    wfVinesIfX25VCLine OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "For a serial line, this is the number of the line on the card."
        ::= { wfVinesIfX25VCEntry 2 }

    wfVinesIfX25VCCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Local circuit number for this Virtual Circuit."
        ::= { wfVinesIfX25VCEntry 3 }

    wfVinesIfX25VCSession OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Local session number for this Virtual Circuit."
        ::= { wfVinesIfX25VCEntry 4 }

    wfVinesIfX25VCTotIn OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of VINES IP packets received on this VC.
                Depending on the size of the X.25 packets received, more than one
                X.25 packet can make up a VINES IP packet."
        ::= { wfVinesIfX25VCEntry 5 }

    wfVinesIfX25VCTotOut OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of VINES IP packets sent on this VC.  Depending
                on the size of the X.25 packets sent, more than one X.25 packet can
                make up a VINES IP packet."
        ::= { wfVinesIfX25VCEntry 6 }

    wfVinesIfX25VCInErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of input errors."
        ::= { wfVinesIfX25VCEntry 7 }

    wfVinesIfX25VCOutErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of output errors."
        ::= { wfVinesIfX25VCEntry 8 }

    wfVinesIfX25VCPktsOut OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of X.25 packets transmitted on this VC."
        ::= { wfVinesIfX25VCEntry 9 }

    wfVinesIfX25VCPktsAwaitAck OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total number of X.25 packets transmitted on this VC waiting for ACK."
        ::= { wfVinesIfX25VCEntry 10 }

    wfVinesIfX25VCBytesOut OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total Bytes transmitted on this VC."
        ::= { wfVinesIfX25VCEntry 11 }

    wfVinesIfX25VCBytesAwaitAck OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total bytes transmitted on this VC that are waiting for ACK."
        ::= { wfVinesIfX25VCEntry 12 }

    wfVinesIfX25VCPktsIn OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total X.25 packets received on this VC."
        ::= { wfVinesIfX25VCEntry 13 }

    wfVinesIfX25VCBytesIn OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Total Bytes received on this VC."
        ::= { wfVinesIfX25VCEntry 14 }

    wfVinesIfX25VCResetsIn OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of X.25 reset packets received on this VC."
        ::= { wfVinesIfX25VCEntry 15 }

    wfVinesIfX25VCResetsOut OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of X.25 reset packets transmitted on this VC."
        ::= { wfVinesIfX25VCEntry 16 }

    wfVinesTrafficFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfVinesTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "VINES Traffic Filters"
        ::= { wfVinesGroup 11 }

    wfVinesTrafficFilterEntry OBJECT-TYPE
        SYNTAX	WfVinesTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in WfVinesTrafficFilterTable."
        INDEX	{ wfVinesTrafficFilterCircuit,
    		  wfVinesTrafficFilterRuleNumber,
    		  wfVinesTrafficFilterFragment }
        ::= { wfVinesTrafficFilterTable 1 }

    WfVinesTrafficFilterEntry ::= SEQUENCE {
    	    wfVinesTrafficFilterCreate
    		INTEGER,
    	    wfVinesTrafficFilterEnable
    		INTEGER,
    	    wfVinesTrafficFilterStatus
    		INTEGER,
    	    wfVinesTrafficFilterCounter
    		Counter,
    	    wfVinesTrafficFilterDefinition
    		OCTET STRING,
    	    wfVinesTrafficFilterReserved
    		INTEGER,
    	    wfVinesTrafficFilterCircuit
    		INTEGER,
    	    wfVinesTrafficFilterRuleNumber
    		INTEGER,
    	    wfVinesTrafficFilterFragment
    		INTEGER,
    	    wfVinesTrafficFilterName
    		DisplayString
        }

    wfVinesTrafficFilterCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the existence of the traffic filter rule:
                created - traffic filter exists
                delete - traffic filter does not exist and can be deleted."
        DEFVAL	{ created }
        ::= { wfVinesTrafficFilterEntry 1 }

    wfVinesTrafficFilterEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether or not the traffic filter rule should be used:
                enabled - activate the rule.
                disabled - inactivate the rule."
        DEFVAL	{ enabled }
        ::= { wfVinesTrafficFilterEntry 2 }

    wfVinesTrafficFilterStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    error(2),
    		    inactive(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines the current status of the traffic filter:
                inactive - the rule is not in use.
                active - the rule is being used.
                error - the application detected an error in the rule."
        DEFVAL	{ inactive }
        ::= { wfVinesTrafficFilterEntry 3 }

    wfVinesTrafficFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets that have
                matched this rule."
        ::= { wfVinesTrafficFilterEntry 4 }

    wfVinesTrafficFilterDefinition OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The filter rule definition."
        ::= { wfVinesTrafficFilterEntry 5 }

    wfVinesTrafficFilterReserved OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reserved field."
        ::= { wfVinesTrafficFilterEntry 6 }

    wfVinesTrafficFilterCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ID of the Circuit to which the
                filter is applied."
        ::= { wfVinesTrafficFilterEntry 7 }

    wfVinesTrafficFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ID for the rule."
        ::= { wfVinesTrafficFilterEntry 8 }

    wfVinesTrafficFilterFragment OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fragment number - for large rules."
        ::= { wfVinesTrafficFilterEntry 9 }

    wfVinesTrafficFilterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Name of the rule number."
        ::= { wfVinesTrafficFilterEntry 10 }

    wfVinesNameTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfVinesNameEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is the Name-to-Address Binding Table."
        ::= { wfVinesGroup 12 }

    wfVinesNameEntry OBJECT-TYPE
        SYNTAX	WfVinesNameEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Table of Names."
        INDEX	{ wfVinesNameNetid }
        ::= { wfVinesNameTable 1 }

    WfVinesNameEntry ::= SEQUENCE {
    	    wfVinesNameDelete
    		INTEGER,
    	    wfVinesNameDisable
    		INTEGER,
    	    wfVinesNameNetid
    		Counter,
    	    wfVinesNameHost
    		DisplayString,
    	    wfVinesNameSubNetid
    		INTEGER
        }

    wfVinesNameDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter.  Users perform an SNMP set command to
                create/delete this name. "
        DEFVAL	{ created }
        ::= { wfVinesNameEntry 1 }

    wfVinesNameDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter.  Users perform an SNMP set command to
                enable/disable a name. "
        DEFVAL	{ enabled }
        ::= { wfVinesNameEntry 2 }

    wfVinesNameNetid OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This is the network number for the host."
        ::= { wfVinesNameEntry 3 }

    wfVinesNameHost OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the name of the host."
        ::= { wfVinesNameEntry 4 }

    wfVinesNameSubNetid OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the subnetwork number for the host."
        ::= { wfVinesNameEntry 5 }

    wfVinesArp	OBJECT IDENTIFIER ::= { wfVinesGroup 13 }

    wfVinesArpDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete ARP."
        DEFVAL	{ created }
        ::= { wfVinesArp 1 }

    wfVinesArpDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable Parameter indicates whether
                this ARP record is enabled or disabled."
        DEFVAL	{ enabled }
        ::= { wfVinesArp 2 }

    wfVinesArpState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "State of ARP."
        DEFVAL	{ down }
        ::= { wfVinesArp 3 }

    wfVinesArpSubnetid OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The next subnetwork ID to be assigned. "
        ::= { wfVinesArp 4 }

    wfVinesArpSubnetBlock OBJECT-TYPE
        SYNTAX	INTEGER(1..32)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The size of the block of subnet ids a slot can grab. "
        DEFVAL	{ 2 }
        ::= { wfVinesArp 5 }

    wfVinesArpAssignDeniedPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of ARP Assignment packets received for which we
                didn't have a free subnet number."
        ::= { wfVinesArp 6 }

    wfVinesSeqRtpNbr	OBJECT IDENTIFIER ::= { wfVinesGroup 14 }

    wfVinesSeqRtpNbrNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of entries in the Table of 5.5 Neighbors."
        ::= { wfVinesSeqRtpNbr 1 }

    wfVinesAggrStats	OBJECT IDENTIFIER ::= { wfVinesGroup 15 }

    wfVinesAggrInPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of packets received"
        ::= { wfVinesAggrStats 1 }

    wfVinesAggrOutPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams sent (includes datagrams
                forwarded)"
        ::= { wfVinesAggrStats 2 }

    wfVinesAggrFwdPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams forwarded"
        ::= { wfVinesAggrStats 3 }

    wfVinesAggrInXsumErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams destined for a local
                entity that were dropped because of a checksum error."
        ::= { wfVinesAggrStats 4 }

    wfVinesAggrBcastPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of broadcast packets sent (includes
                locally generated broadcasts)."
        ::= { wfVinesAggrStats 5 }

    wfVinesAggrOutNoRoutes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of packets queued for transmission thet
                were discarded because the destination was unreachable."
        ::= { wfVinesAggrStats 6 }

    wfVinesAggrInHopCountErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of pakets that were dropped because of
                a zero hop count."
        ::= { wfVinesAggrStats 7 }

    wfVinesAggrInIcpErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of ICP error notification packets
                received."
        ::= { wfVinesAggrStats 8 }

    wfVinesAggrInIcpMetrics OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of ICP metric notification packets
                received."
        ::= { wfVinesAggrStats 9 }

    wfVinesAggrOutIcpErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of ICP error notification packets
                transmitted."
        ::= { wfVinesAggrStats 10 }

    wfVinesAggrOutIcpMetrics OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of ICP metric notification packets
                transmitted."
        ::= { wfVinesAggrStats 11 }

    wfVinesAggrInArpQueries OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of ARP queries received."
        ::= { wfVinesAggrStats 12 }

    wfVinesAggrInArpAssigns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of ARP assignment requests received."
        ::= { wfVinesAggrStats 13 }

    wfVinesAggrInArpErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of ARP packets received with errors."
        ::= { wfVinesAggrStats 14 }

    wfVinesAggrOutArpServResps OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of ARP service responses sent."
        ::= { wfVinesAggrStats 15 }

    wfVinesAggrOutArpAssigns OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of ARP assignment responses sent."
        ::= { wfVinesAggrStats 16 }

    wfVinesAggrInRedirects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of Redirect packets received."
        ::= { wfVinesAggrStats 17 }

    wfVinesAggrOutRedirects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of Redirect packets sent."
        ::= { wfVinesAggrStats 18 }

    wfVinesAggrInEchos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of Echo packets received."
        ::= { wfVinesAggrStats 19 }

    wfVinesAggrOutEchos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of Echo packets sent."
        ::= { wfVinesAggrStats 20 }

    END  -- Wellfleet-VINES-MIB
-- @(#)WSCCS m/mibs-wcp.mib 1.2 9/8/95
Wellfleet-WCP-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:49:56 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfCompressionGroup
        FROM Wellfleet-COMMON-MIB;


    wfWcpLineTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfWcpLineEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The line table contains line entries."
        ::= { wfCompressionGroup 1 }

    wfWcpLineEntry OBJECT-TYPE
        SYNTAX	WfWcpLineEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The components of the instance ID of a line entry."
        INDEX	{ wfWcpLineLineNumber,
    		  wfWcpLineLLIndex }
        ::= { wfWcpLineTable 1 }

    WfWcpLineEntry ::= SEQUENCE {
    	    wfWcpLineDelete
    		INTEGER,
    	    wfWcpLineDisable
    		INTEGER,
    	    wfWcpLineLineNumber
    		INTEGER,
    	    wfWcpLineLLIndex
    		INTEGER,
    	    wfWcpLineCompressionMode
    		INTEGER,
    	    wfWcpLineHistorySize
    		INTEGER,
    	    wfWcpLineBufferSize
    		INTEGER,
    	    wfWcpLineEngineType
    		INTEGER,
            wfWcpLineSearchDepth
                INTEGER,
            wfWcpLineFallbackCompressionMode
                INTEGER
        }

    wfWcpLineDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the instance have been created or deleted."
        DEFVAL	{ created }
        ::= { wfWcpLineEntry 1 }

    wfWcpLineDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the instance have been enabled or disabled."
        DEFVAL	{ enabled }
        ::= { wfWcpLineEntry 2 }

    wfWcpLineLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "instance ID."
        ::= { wfWcpLineEntry 3 }

    wfWcpLineLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "instance ID."
        ::= { wfWcpLineEntry 4 }

    wfWcpLineCompressionMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    cpc(1),
    		    ppc(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "line is relatively noisy."
        DEFVAL	{ cpc }
        ::= { wfWcpLineEntry 5 }

    wfWcpLineHistorySize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    k32(1),
    		    k8(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "line."
        DEFVAL	{ k32 }
        ::= { wfWcpLineEntry 6 }

    wfWcpLineBufferSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    verylarge(1),
    		    large(2),
    		    normal(3),
    		    none(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "used."
        DEFVAL	{ normal }
        ::= { wfWcpLineEntry 7 }

    wfWcpLineEngineType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    software(1),
    		    hardware(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether to use hardware or software compression"
        DEFVAL	{ software }
        ::= { wfWcpLineEntry 8 }

    wfWcpLineSearchDepth OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute is only relevant for HW Compression VCs
                 configured for CPC, 8K history. It indicates the Search
                 Depth configured for this line. Increasing this attribute
                 may allow the user to achieve better Compression ratios.
                 This however could occur at the expense of throughput
                 (i.e. you may get better compression ratios, but lower
                 throughput). Note that this value may be set to 0, if the
                 user wishes to run their Line in High Speed mode."
        DEFVAL	{ 3 }
        ::= { wfWcpLineEntry 9 }

    wfWcpLineFallbackCompressionMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    softwarecpc(1),
    		    hardwareppc(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute is only relevant for HW Compression VCs
                 configured for CPC. It indicates what Compression Mode
                 the user wants All VCs on a line to use, when any VC on
                 that line is unable to register for HW Compression due
                 to a lack of physical HW Context memory (Note that only
                 HW CPC contexts can fail registration in this way)."
        DEFVAL	{ softwarecpc }
        ::= { wfWcpLineEntry 10 }

    wfWcpCircuitTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfWcpCircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The circuit table contains circuit entries."
        ::= { wfCompressionGroup 2 }

    wfWcpCircuitEntry OBJECT-TYPE
        SYNTAX	WfWcpCircuitEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The components of the instance ID of a circuit entry."
        INDEX	{ wfWcpCircuitId }
        ::= { wfWcpCircuitTable 1 }

    WfWcpCircuitEntry ::= SEQUENCE {
    	    wfWcpCircuitDelete
    		INTEGER,
    	    wfWcpCircuitDisable
    		INTEGER,
    	    wfWcpCircuitId
    		INTEGER,
    	    wfWcpCircuitCompressionMode
    		INTEGER,
    	    wfWcpCircuitHistorySize
    		INTEGER,
    	    wfWcpCircuitEngineType
    		INTEGER,
            wfWcpCircuitSearchDepth
                INTEGER
        }

    wfWcpCircuitDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the instance have been created or deleted."
        DEFVAL	{ created }
        ::= { wfWcpCircuitEntry 1 }

    wfWcpCircuitDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether the instance have been enabled or disabled."
        DEFVAL	{ enabled }
        ::= { wfWcpCircuitEntry 2 }

    wfWcpCircuitId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the circuit ID of this entry."
        ::= { wfWcpCircuitEntry 3 }

    wfWcpCircuitCompressionMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    cpc(1),
    		    ppc(2),
    		    inherit(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "suitable when the line is relatively noisy."
        DEFVAL	{ inherit }
        ::= { wfWcpCircuitEntry 4 }

    wfWcpCircuitHistorySize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    k32(1),
    		    k8(2),
    		    inherit(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "circuit."
        DEFVAL	{ inherit }
        ::= { wfWcpCircuitEntry 5 }

    wfWcpCircuitEngineType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    software(1),
    		    hardware(2),
    		    inherit(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether to use hardware or software compression"
        DEFVAL	{ inherit }
        ::= { wfWcpCircuitEntry 6 }

    wfWcpCircuitSearchDepth OBJECT-TYPE
        SYNTAX	INTEGER(1..256)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This attribute is only relevant for HW Compression VCs
                 configured for CPC, 8K history. It indicates the Search
                 Depth configured for this circuit. Increasing this attribute
                 may allow the user to achieve better Compression ratios.
                 This however could occur at the expense of throughput
                 (i.e. you may get better compression ratios, but lower
                 throughput). Note that this value may be set to 0, if the
                 user wishes to run this circuit in High Speed mode.
                 Note that the default value of 256 is actually used to
                 indicate that that this attribute should be inherited from
                 wfWcpLineEntry MIB & is not a valid search depth value.
                 Valid Search Depth values lie within the 1..255 range."
        DEFVAL	{ 256 }
        ::= { wfWcpCircuitEntry 7 }

    wfWcpVcTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfWcpVcEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The VC table contains VC entries"
        ::= { wfCompressionGroup 3 }

    wfWcpVcEntry OBJECT-TYPE
        SYNTAX	WfWcpVcEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The components of the instance ID of a VC entry."
        INDEX	{ wfWcpVcLineNumber,
    		  wfWcpVcLLIndex,
    		  wfWcpVcCircuitId,
    		  wfWcpVcId }
        ::= { wfWcpVcTable 1 }

    WfWcpVcEntry ::= SEQUENCE {
    	    wfWcpVcCompressorState
    		INTEGER,
    	    wfWcpVcDecompressorState
    		INTEGER,
    	    wfWcpVcLineNumber
    		INTEGER,
    	    wfWcpVcLLIndex
    		INTEGER,
    	    wfWcpVcCircuitId
    		INTEGER,
    	    wfWcpVcId
    		INTEGER,
    	    wfWcpVcCompressionMode
    		INTEGER,
    	    wfWcpVcHistorySize
    		INTEGER,
    	    wfWcpVcCompressorInBytes
    		Counter,
    	    wfWcpVcCompressorOutBytes
    		Counter,
    	    wfWcpVcDecompressorInBytes
    		Counter,
    	    wfWcpVcDecompressorOutBytes
    		Counter,
    	    wfWcpVcTxCPCPackets
    		Counter,
    	    wfWcpVcRxCPCPackets
    		Counter,
    	    wfWcpVcTxPPCPackets
    		Counter,
    	    wfWcpVcRxPPCPackets
    		Counter,
    	    wfWcpVcTxAntiExpPackets
    		Counter,
    	    wfWcpVcRxAntiExpPackets
    		Counter,
    	    wfWcpVcTxResetReqs
    		Counter,
    	    wfWcpVcRxResetReqs
    		Counter,
    	    wfWcpVcTxRexmitReqs
    		Counter,
    	    wfWcpVcRxRexmitReqs
    		Counter,
    	    wfWcpVcTxRexmitNaks
    		Counter,
    	    wfWcpVcRxRexmitNaks
    		Counter,
    	    wfWcpVcDataOutOfSeqs
    		Counter,
    	    wfWcpVcRexmitOutOfSeqs
    		Counter,
    	    wfWcpVcRexmitTimeouts
    		Counter,
    	    wfWcpVcExceededKs
    		Counter,
    	    wfWcpVcInvalidOpCodes
    		Counter,
    	    wfWcpVcEngineType
    		INTEGER,
            wfWcpVcSearchDepth
                INTEGER
        }

    wfWcpVcCompressorState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    data(1),
    		    disabled(2),
    		    disconnected(3),
    		    init(4),
    		    nak(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the VC compressor state of the WCP logical connection."
        DEFVAL	{ disconnected }
        ::= { wfWcpVcEntry 1 }

    wfWcpVcDecompressorState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    data(1),
    		    disabled(2),
    		    disconnected(3),
    		    init(4),
    		    rexmit(5),
    		    reset(6),
    		    connecting(7),
    		    disconnecting(8)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the VC decompressor state of the WCP logical connection."
        DEFVAL	{ disconnected }
        ::= { wfWcpVcEntry 2 }

    wfWcpVcLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "instance ID."
        ::= { wfWcpVcEntry 3 }

    wfWcpVcLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "instance ID."
        ::= { wfWcpVcEntry 4 }

    wfWcpVcCircuitId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ID."
        ::= { wfWcpVcEntry 5 }

    wfWcpVcId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the ID of this VC entry. This is part of the instance ID."
        ::= { wfWcpVcEntry 6 }

    wfWcpVcCompressionMode OBJECT-TYPE
        SYNTAX	INTEGER {
    		    cpc(1),
    		    ppc(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "line is relatively noisy."
        ::= { wfWcpVcEntry 7 }

    wfWcpVcHistorySize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    k32(1),
    		    k8(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "VC. HIGH will allow the highest compression ratio to be realized."
        ::= { wfWcpVcEntry 8 }

    wfWcpVcCompressorInBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of bytes submitted to the compressor."
        ::= { wfWcpVcEntry 9 }

    wfWcpVcCompressorOutBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of bytes produced by the compressor."
        ::= { wfWcpVcEntry 10 }

    wfWcpVcDecompressorInBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of bytes submitted to the decompressor."
        ::= { wfWcpVcEntry 11 }

    wfWcpVcDecompressorOutBytes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of bytes produced by the decompressor."
        ::= { wfWcpVcEntry 12 }

    wfWcpVcTxCPCPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of continuous mode packets sent."
        ::= { wfWcpVcEntry 13 }

    wfWcpVcRxCPCPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of continuous mode packets received."
        ::= { wfWcpVcEntry 14 }

    wfWcpVcTxPPCPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of PPC mode packets sent."
        ::= { wfWcpVcEntry 15 }

    wfWcpVcRxPPCPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of PPC mode packets Received."
        ::= { wfWcpVcEntry 16 }

    wfWcpVcTxAntiExpPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of anti-expanded packets sent."
        ::= { wfWcpVcEntry 17 }

    wfWcpVcRxAntiExpPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of anti-expanded packets received."
        ::= { wfWcpVcEntry 18 }

    wfWcpVcTxResetReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of reset request sent."
        ::= { wfWcpVcEntry 19 }

    wfWcpVcRxResetReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of reset request received."
        ::= { wfWcpVcEntry 20 }

    wfWcpVcTxRexmitReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of re-transmit request sent."
        ::= { wfWcpVcEntry 21 }

    wfWcpVcRxRexmitReqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of re-transmit request received."
        ::= { wfWcpVcEntry 22 }

    wfWcpVcTxRexmitNaks OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of re-transmit Nak sent."
        ::= { wfWcpVcEntry 23 }

    wfWcpVcRxRexmitNaks OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of re-transmit Nak received."
        ::= { wfWcpVcEntry 24 }

    wfWcpVcDataOutOfSeqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of times that a data indication is out of sequence."
        ::= { wfWcpVcEntry 25 }

    wfWcpVcRexmitOutOfSeqs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of times that a re-transmit Ack is out of sequence."
        ::= { wfWcpVcEntry 26 }

    wfWcpVcRexmitTimeouts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of re-transmit timeout."
        ::= { wfWcpVcEntry 27 }

    wfWcpVcExceededKs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of times that K is exceeded."
        ::= { wfWcpVcEntry 28 }

    wfWcpVcInvalidOpCodes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the number of packets received with invalid op code."
        ::= { wfWcpVcEntry 29 }

    wfWcpVcEngineType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    software(1),
    		    hardware(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether hardware or software compression is used"
        ::= { wfWcpVcEntry 30 }

    wfWcpVcSearchDepth OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This attribute is only relevant for HW Compression VCs
                 configured for CPC, 8K history. It indicates the Search
                 Depth configured for this VC. Increasing this attribute
                 may allow the user to achieve better Compression ratios.
                 This however could occur at the expense of throughput
                 (i.e. you may get better compression ratios, but lower
                 throughput). Note that this value may be  0, if the user
                 wishes to run  their VC in High Speed Mode."
        ::= { wfWcpVcEntry 31 }

    wfHwCompressionTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfHwCompressionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The HW Compression Table contains compression entries."
        ::= { wfCompressionGroup 4 }

    wfHwCompressionEntry OBJECT-TYPE
        SYNTAX	WfHwCompressionEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Slot number used as instance identifier."
        INDEX	{ wfHwCompressionSlot,
    		  wfHwCompressionModule,
    		  wfHwCompressionDaughterboard }
        ::= { wfHwCompressionTable 1 }

    WfHwCompressionEntry ::= SEQUENCE {
    	    wfHwCompressionState
    		INTEGER,
    	    wfHwCompressionSlot
    		INTEGER,
    	    wfHwCompressionModule
    		INTEGER,
    	    wfHwCompressionDaughterboard
    		INTEGER,
    	    wfHwCompressionCompressionMemoryTotal
    		INTEGER,
    	    wfHwCompressionDictionaryMemoryTotal
    		INTEGER,
    	    wfHwCompressionDecompressionMemoryTotal
    		INTEGER,
    	    wfHwCompression8kContextsTotal
    		INTEGER,
    	    wfHwCompression32kContextsTotal
    		INTEGER,
    	    wfHwCompression8kContextsInUse
    		INTEGER,
    	    wfHwCompression32kContextsInUse
    		INTEGER,
    	    wfHwCompression8kContextsUnuseable
    		INTEGER,
    	    wfHwCompression8kContextsAvailable
    		INTEGER,
    	    wfHwCompression32kContextsAvailable
    		INTEGER,
            wfHwCompressionCpcContextsRegistered
                INTEGER,
            wfHwCompressionPpcContextsRegistered
                INTEGER,
    	    wfHwCompressionCompressedPkts
    		Counter,
    	    wfHwCompressionDecompressedPkts
    		Counter,
    	    wfHwCompressionExpansions
    		Counter,
    	    wfHwCompressionCompressionErrors
    		Counter,
    	    wfHwCompressionDecompressionErrors
    		Counter,
    	    wfHwCompressionOverflowXmtPackets
    		Counter,
    	    wfHwCompressionOverflowRcvPackets
    		Counter,
    	    wfHwCompressionDecompOutOfSync
    		Counter,
    	    wfHwCompressionCompSourcePktLengthErrors
    		Counter,
    	    wfHwCompressionCompCcbFormatErrors
    		Counter,
    	    wfHwCompressionCompDescriptorFormatErrors
    		Counter,
    	    wfHwCompressionCompInternalErrors
    		Counter,
    	    wfHwCompressionDecompSourcePktLengthErrors
    		Counter,
    	    wfHwCompressionDecompCcbFormatErrors
    		Counter,
    	    wfHwCompressionDecompDescriptorFormatErrors
    		Counter,
    	    wfHwCompressionDecompInternalErrors
    		Counter
        }

    wfHwCompressionState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(20)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Driver state variable."
        ::= { wfHwCompressionEntry 1 }

    wfHwCompressionSlot OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number -- gotten from the instance ID."
        ::= { wfHwCompressionEntry 2 }

    wfHwCompressionModule OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Module # -- gotten from the instance ID."
        ::= { wfHwCompressionEntry 3 }

    wfHwCompressionDaughterboard OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates which Compression daughterboard we're dealing with"
        ::= { wfHwCompressionEntry 4 }

    wfHwCompressionCompressionMemoryTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The amount of Compression memory contained on this board."
        ::= { wfHwCompressionEntry 5 }

    wfHwCompressionDictionaryMemoryTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The amount of Compression Dictionary memory contained on this board.
                Equals 1/2 the total amount of Compression memory available."
        ::= { wfHwCompressionEntry 6 }

    wfHwCompressionDecompressionMemoryTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The amount of Decompression history memory contained on this board.
                Equals 1/2 the total amount of Compression memory available."
        ::= { wfHwCompressionEntry 7 }

    wfHwCompression8kContextsTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the maximum number of 8Kb Context Control Blocks (CCBs)
                (i.e. VC's) we can support with this memory configuration. This is
                assuming ALL VC's using Variable Search Depth Mode, 8Kb dictionaries.
                This equals wfHwCompressionDictionaryMemoryTotal' divided by 8Kb."
        ::= { wfHwCompressionEntry 8 }

    wfHwCompression32kContextsTotal OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the maximum number of 32Kb Context Control Blocks (CCBs)
                (i.e. VC's) we can support with this memory configuration. This is
                assuming ALL VC's using High Speed, Single Search Mode, 32Kb dictionaries.
                This equals wfHwCompressionDictionaryMemoryTotal' divided by 32Kb."
        ::= { wfHwCompressionEntry 9 }

    wfHwCompression8kContextsInUse OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the current number of 8Kb Context Control Blocks (CCBs)
                (i.e. VC's) using Hardware Compression services."
        ::= { wfHwCompressionEntry 10 }

    wfHwCompression32kContextsInUse OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the current number of 32Kb Context Control Blocks (CCBs)
                (i.e. VC's) using Hardware Compression services."
        ::= { wfHwCompressionEntry 11 }

    wfHwCompression8kContextsUnuseable OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the current number of 8Kb Context Control Blocks (CCBs)
                (i.e. VC's) which are now unable to use Hardware Compression services.
                Any time a user configures a VC to use High Speed, Single Search Mode,
                that VC is going to use 32Kb of compression memory, which  renders 4 8Kb
                CCB's essentially unusable until that 32Kb VC is cleared/deleted. Unusable
                Contexts therefore equals the # of High Speed, Single Search VC's  x 4."
        ::= { wfHwCompressionEntry 12 }

    wfHwCompression8kContextsAvailable OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of 'usable' 8k Context Control Blocks available.
                Note that this will get reduced (by 4) when a user configures a VC to use
                High Speed, Single Search Mode."
        ::= { wfHwCompressionEntry 13 }

    wfHwCompression32kContextsAvailable OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of 'usable' 32k Context Control Blocks
                available. This means that this/these number of pages of Compression
                Memory currently have NO Context Control Block (i.e.VC) associated
                with them."
        ::= { wfHwCompressionEntry 14 }

    wfHwCompressionCpcContextsRegistered OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of VC's which have registered for
                 HW Compression and are using Continuous Packet Compression
                 (CPC) mode. Anytime a VC/Context successfully registers with
                 HW Compression using this mode, a HW context has been
                 dedicated to that VC."
        ::= { wfHwCompressionEntry 15 }

    wfHwCompressionPpcContextsRegistered OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This indicates the number of VC's which have registered
                 for HW Compression and are using Packet by Packet Compression
                 (PPC) mode. All VCs/Contexts which register using PPC mode,
                 share 1 HW Context which has been dedicated for use by PPC
                 Vcs."
        ::= { wfHwCompressionEntry 16 }

    wfHwCompressionCompressedPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The # of pkts successfully compressed."
        ::= { wfHwCompressionEntry 17 }

    wfHwCompressionDecompressedPkts OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The # of pkts successfully decompressed."
        ::= { wfHwCompressionEntry 18 }

    wfHwCompressionExpansions OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The # of pkts given to the Compressor which actually expanded
                instead of compressing."
        ::= { wfHwCompressionEntry 19 }

    wfHwCompressionCompressionErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the total # of Compression Errors detected on this module."
        ::= { wfHwCompressionEntry 20 }

    wfHwCompressionDecompressionErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the total # of Decompression Errors detected on this module."
        ::= { wfHwCompressionEntry 21 }

    wfHwCompressionOverflowXmtPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the # of packets which had to be temporarily put on an XMT
                Overflow queue, as the Hardware Compression Descriptor Ring was full."
        ::= { wfHwCompressionEntry 22 }

    wfHwCompressionOverflowRcvPackets OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the # of packets which had to be temporarily put on a RCV
                Overflow queue, as the Hardware Decompression Descriptor Ring was full."
        ::= { wfHwCompressionEntry 23 }

    wfHwCompressionDecompOutOfSync OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates the decompressor channel is out of SYNC."
        ::= { wfHwCompressionEntry 24 }

    wfHwCompressionCompSourcePktLengthErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A zero length source packet was received by the Compressor or
                Decompressor."
        ::= { wfHwCompressionEntry 25 }

    wfHwCompressionCompCcbFormatErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The format of the specified Context Control Block (CCB) was detected to be
                in error."
        ::= { wfHwCompressionEntry 26 }

    wfHwCompressionCompDescriptorFormatErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The format of the current descriptor is in error."
        ::= { wfHwCompressionEntry 27 }

    wfHwCompressionCompInternalErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Compressor or Decompressor took an internal error when processing
                this descriptor."
        ::= { wfHwCompressionEntry 28 }

    wfHwCompressionDecompSourcePktLengthErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A zero length source packet was received by the Compressor or
                Decompressor."
        ::= { wfHwCompressionEntry 29 }

    wfHwCompressionDecompCcbFormatErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The format of the specified Context Control Block (CCB) was detected to be
                in error."
        ::= { wfHwCompressionEntry 30 }

    wfHwCompressionDecompDescriptorFormatErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The format of the current descriptor is in error."
        ::= { wfHwCompressionEntry 31 }

    wfHwCompressionDecompInternalErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Compressor or Decompressor took an internal error when processing
                this descriptor."
        ::= { wfHwCompressionEntry 32 }


    END  -- Wellfleet-WCP-MIB
-- @(#)WSCCS p/mibs-wfdot1d.mib 1.1 8/30/95
Wellfleet-WFDOT1D-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:50:03 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfBridgeGroup
        FROM Wellfleet-COMMON-MIB;


    wfDot1d		OBJECT IDENTIFIER ::= { wfBridgeGroup 6 }
    wfDot1dBaseGroup	OBJECT IDENTIFIER ::= { wfDot1d 1 }
    wfDot1dStaticGroup  OBJECT IDENTIFIER ::= { wfDot1d 5 }


    wfDot1dBaseBridgeAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The MAC address used by this bridge when it must
                be referred to in a unique fashion.   It is
                recommended that this be the numerically smallest
                MAC address of all ports that belong to this
                bridge.  However it is only required to be unique.
                When concatenated with dot1dStpPriority a unique
                BridgeIdentifier is formed which is used in the
                Spanning Tree Protocol."
        ::= { wfDot1dBaseGroup 1 }

    wfDot1dBaseNumPorts OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of ports controlled by this bridging
                entity."
        ::= { wfDot1dBaseGroup 2 }

    wfDot1dBaseType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    unk(1),
    		    only(2),
    		    sr(3),
    		    srt(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Indicates what type of bridging this bridge can
                perform.  If a bridge is actually performing a
                certain type of bridging this will be indicated by
                entries in the port table for the given type."
        DEFVAL	{ only }
        ::= { wfDot1dBaseGroup 3 }

    wfDot1dStaticTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfDot1dStaticTableEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "'A table containing filtering information
                configured into the bridge by (local or network)
                management specifying the set of ports to which
                frames received from specific ports and containing
                specific destination addresses are allowed to be
                forwarded.  The value of zero in this table as the
                port number from which frames with a specific
                destination address are received, is used to
                specify all ports for which there is no specific
                entry in this table for that particular
                destination address.  Entries are valid for
                unicast and for group/broadcast addresses.'"
        ::= { wfDot1dStaticGroup 1 }

    wfDot1dStaticTableEntry OBJECT-TYPE
        SYNTAX	WfDot1dStaticTableEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "'Filtering information configured into the bridge
                 by (local or network) management specifying the
                 set of ports to which frames received from a
                 specific port and containing a specific
                 destination address are allowed to be forwarded.'"
        INDEX	{ wfDot1dStaticAddress,
    		  wfDot1dStaticReceivePort }
        ::= { wfDot1dStaticTable 1 }

    WfDot1dStaticTableEntry ::= SEQUENCE {
    	    wfDot1dStaticAddress
    		OCTET STRING,
    	    wfDot1dStaticReceivePort
    		INTEGER,
    	    wfDot1dStaticAllowedToGoTo
    		OCTET STRING,
    	    wfDot1dStaticStatus
    		INTEGER
        }

    wfDot1dStaticAddress OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The destination MAC address in a frame to which
                this entry's filtering information applies.  This
                object can take the value of a unicast address, a
                group address or the broadcast address.'"
        ::= { wfDot1dStaticTableEntry 1 }

    wfDot1dStaticReceivePort OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'Either the value '0', or the port number of the
                port from which a frame must be received in order
                for this entry's filtering information to apply.
                A value of zero indicates that this entry applies
                on all ports of the bridge for which there is no
                other applicable entry.'"
        ::= { wfDot1dStaticTableEntry 2 }

    wfDot1dStaticAllowedToGoTo OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'The set of ports to which frames received from a
                specific port and destined for a specific MAC
                address, are allowed to be forwarded.  Each octet
                within the value of this object specifies a set of
                eight ports, with the first octet specifying ports
                1 through 8, the second octet specifying ports 9
                through 16, etc.  Within each octet, the most
                significant bit represents the lowest numbered
                port, and the least significant bit represents the
                highest numbered port.  Thus, each port of the
                bridge is represented by a single bit within the
                value of this object.  If that bit has a value of
                '1' then that port is included in the set of
                ports; the port is not included if its bit has a
                value of '0'.  (Note that the setting of the bit
                corresponding to the port from which a frame is
                received is irrelevant.)'"
        ::= { wfDot1dStaticTableEntry 3 }

    wfDot1dStaticStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    invalid(2),
    		    permanent(3),
    		    reset(4),
    		    timeout(5)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "'This object indicates the status of this entry.
                     other(1) - this entry is currently in use but
                          the conditions under which it will
                          remain so are different from each of the
                          following values.
                     invalid(2) - writing this value to the object
                          removes the corresponding entry.
                     permanent(3) - this entry is currently in use
                          and will remain so after the next reset
                          of the bridge.
                     deleteOnReset(4) - this entry is currently in
                          use and will remain so until the next
                          reset of the bridge.
                     deleteOnTimeout(5) - this entry is currently
                          in use and will remain so until it is
                          aged out.'"
        DEFVAL	{ invalid }
        ::= { wfDot1dStaticTableEntry 4 }

    END  -- Wellfleet-WFDOT1D-MIB
-- @(#)WSCCS j/mibs-x25.mib 1.3 10/3/95
Wellfleet-X25-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:50:09 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfX25Group
        FROM Wellfleet-COMMON-MIB;


    wfX25		OBJECT IDENTIFIER ::= { wfX25Group 1 }

    wfX25Delete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created."
        DEFVAL	{ created }
        ::= { wfX25 1 }

    wfX25Disable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled."
        DEFVAL	{ enabled }
        ::= { wfX25 2 }

    wfX25State OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the entire X.25."
        DEFVAL	{ notpresent }
        ::= { wfX25 3 }

    wfX25ServiceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfX25ServiceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This table describes the services of a circuit on an X.25 line."
        ::= { wfX25Group 2 }

    wfX25ServiceEntry OBJECT-TYPE
        SYNTAX	WfX25ServiceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the X25 Service table."
        INDEX	{ wfX25ServiceSlot,
    		  wfX25ServiceConnector,
    		  wfX25ServiceLineNumber,
    		  wfX25ServiceLLIndex,
    		  wfX25ServiceCct,
    		  wfX25ServiceIndex }
        ::= { wfX25ServiceTable 1 }

    WfX25ServiceEntry ::= SEQUENCE {
    	    wfX25ServiceDelete
    		INTEGER,
    	    wfX25ServiceDisable
    		INTEGER,
    	    wfX25ServiceSlot
    		INTEGER,
    	    wfX25ServiceConnector
    		INTEGER,
    	    wfX25ServiceLineNumber
    		INTEGER,
    	    wfX25ServiceLLIndex
    		INTEGER,
    	    wfX25ServiceCct
    		INTEGER,
    	    wfX25ServiceIndex
    		INTEGER,
    	    wfX25ServiceType
    		INTEGER,
    	    wfX25ServiceConnRef
    		INTEGER,
    	    wfX25ServiceConnId
    		INTEGER,
    	    wfX25ServiceRemoteX121Addr
    		DisplayString,
    	    wfX25ServiceRemoteIpAddr
    		IpAddress,
    	    wfX25ServiceBCast
    		INTEGER,
    	    wfX25ServiceMaxConn
    		INTEGER,
    	    wfX25ServicePrecedence
    		INTEGER,
    	    wfX25ServiceMaxIdle
    		INTEGER,
    	    wfX25ServiceCallRetry
    		INTEGER,
    	    wfX25ServiceFlowFacility
    		INTEGER,
    	    wfX25ServiceWinSize
    		INTEGER,
    	    wfX25ServicePktSize
    		INTEGER,
    	    wfX25ServiceFastSelRequest
    		INTEGER,
    	    wfX25ServiceFastSelAccept
    		INTEGER,
    	    wfX25ServiceRevChRequest
    		INTEGER,
    	    wfX25ServiceRevChAccept
    		INTEGER,
    	    wfX25ServiceCugFormat
    		INTEGER,
    	    wfX25ServiceCugType
    		INTEGER,
    	    wfX25ServiceCugNum
    		INTEGER,
    	    wfX25ServiceUserFacility
    		OCTET STRING,
    	    wfX25ServiceValid
    		INTEGER,
    	    wfX25ServiceBFE
    		INTEGER,
    	    wfX25ServiceForceCugZero
    		INTEGER,
    	    wfX25ServiceWcpEnable
    		INTEGER,
    	    wfX25ServiceMUX
    		INTEGER,
            wfX25ServicePtopCallRequest
                INTEGER
        }

    wfX25ServiceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter, default = created."
        DEFVAL	{ created }
        ::= { wfX25ServiceEntry 1 }

    wfX25ServiceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter, default = enabled."
        DEFVAL	{ enabled }
        ::= { wfX25ServiceEntry 2 }

    wfX25ServiceSlot OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number and part of Instance Id."
        ::= { wfX25ServiceEntry 3 }

    wfX25ServiceConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Connector number and instance ID member."
        ::= { wfX25ServiceEntry 4 }

    wfX25ServiceLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier member. This is the line number assigned
                to the driver X.25 is running over.  No used in 7.60."
        ::= { wfX25ServiceEntry 5 }

    wfX25ServiceLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier member. This is the lower layer index
                presented to X25 by the layer immediately below it on the
                protocol stack. If the lower layer is a driver, the index
                will be 0. Not used in 7.60."
        ::= { wfX25ServiceEntry 6 }

    wfX25ServiceCct OBJECT-TYPE
        SYNTAX	INTEGER(1..1024)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit number and instance ID member."
        ::= { wfX25ServiceEntry 7 }

    wfX25ServiceIndex OBJECT-TYPE
        SYNTAX	INTEGER(1..4000)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "X.25 service entry record ID for this instance."
        ::= { wfX25ServiceEntry 8 }

    wfX25ServiceType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    pdntype(1),
    		    ddntype(2),
    		    ptoptype(4),
    		    npttype(8),
    		    ipextype(16)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Type of Service."
        ::= { wfX25ServiceEntry 9 }

    wfX25ServiceConnRef OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Use of Connection Reference Numbers in Call Request
                For PDN only, if ON then use wfX25ServiceConnId as
                starting reference number for PDN."
        DEFVAL	{ off }
        ::= { wfX25ServiceEntry 10 }

    wfX25ServiceConnId OBJECT-TYPE
        SYNTAX	INTEGER(1..255)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Connection Id to be used in a PTOP Call request. For PDN this will
                be the starting number to be used as Connection Id in PDN."
        DEFVAL	{ 1 }
        ::= { wfX25ServiceEntry 11 }

    wfX25ServiceRemoteX121Addr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Remote X.121 address for this table entry instance."
        ::= { wfX25ServiceEntry 12 }

    wfX25ServiceRemoteIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Remote IP address for PDN and DDN only."
        ::= { wfX25ServiceEntry 13 }

    wfX25ServiceBCast OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Broadcast recipient status for this table entry instance."
        DEFVAL	{ off }
        ::= { wfX25ServiceEntry 14 }

    wfX25ServiceMaxConn OBJECT-TYPE
        SYNTAX	INTEGER(1..4)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum connections per destination for this table entry instance."
        DEFVAL	{ 2 }
        ::= { wfX25ServiceEntry 15 }

    wfX25ServicePrecedence OBJECT-TYPE
        SYNTAX	INTEGER {
    		    negot(1),
    		    default(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Precedence value for this table entry instance. DDN only."
        DEFVAL	{ default }
        ::= { wfX25ServiceEntry 16 }

    wfX25ServiceMaxIdle OBJECT-TYPE
        SYNTAX	INTEGER(1..999)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum Idle Time in Minutes for this table entry instance. If 0
                is entered the connection stays on forever."
        DEFVAL	{ 2 }
        ::= { wfX25ServiceEntry 17 }

    wfX25ServiceCallRetry OBJECT-TYPE
        SYNTAX	INTEGER(10..999)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Interval in seconds between Call Request to same the destination.
                Must be at least 2 times T11/T21 Timer for Packet Level."
        DEFVAL	{ 60 }
        ::= { wfX25ServiceEntry 18 }

    wfX25ServiceFlowFacility OBJECT-TYPE
        SYNTAX	INTEGER {
    		    negot(1),
    		    default(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Flow Control negotiation facility parameter for this instance."
        DEFVAL	{ default }
        ::= { wfX25ServiceEntry 19 }

    wfX25ServiceWinSize OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Packet window size parameter for this table entry instance."
        DEFVAL	{ 2 }
        ::= { wfX25ServiceEntry 20 }

    wfX25ServicePktSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    size16(4),
    		    size32(5),
    		    size64(6),
    		    size128(7),
    		    size256(8),
    		    size512(9),
    		    size1024(10),
    		    size2048(11),
    		    size4096(12)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Packet size parameter for this table entry instance."
        DEFVAL	{ size128 }
        ::= { wfX25ServiceEntry 21 }

    wfX25ServiceFastSelRequest OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Fast Select Request Facility for this table entry instance."
        DEFVAL	{ off }
        ::= { wfX25ServiceEntry 22 }

    wfX25ServiceFastSelAccept OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Fast Select Accept Facility for this table entry instance."
        DEFVAL	{ off }
        ::= { wfX25ServiceEntry 23 }

    wfX25ServiceRevChRequest OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Reverse Charge Request Facility for this table entry instance."
        DEFVAL	{ off }
        ::= { wfX25ServiceEntry 24 }

    wfX25ServiceRevChAccept OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Reverse charge Accept Facility for this table entry instance."
        DEFVAL	{ off }
        ::= { wfX25ServiceEntry 25 }

    wfX25ServiceCugFormat OBJECT-TYPE
        SYNTAX	INTEGER {
    		    none(1),
    		    basic(2),
    		    ext(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Closed User Group Facility Format."
        DEFVAL	{ none }
        ::= { wfX25ServiceEntry 26 }

    wfX25ServiceCugType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    normal(1),
    		    oa(2),
    		    bilat(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Closed User Group Facility Type: Normal CUG,
                Bilateral CUG, or Outgoing Access CUG."
        DEFVAL	{ normal }
        ::= { wfX25ServiceEntry 27 }

    wfX25ServiceCugNum OBJECT-TYPE
        SYNTAX	INTEGER(1..9999)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Closed User Group (CUG) number."
        ::= { wfX25ServiceEntry 28 }

    wfX25ServiceUserFacility OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Additional User Supplied Facilities. Must be in Hexadecimal form."
        ::= { wfX25ServiceEntry 29 }

    wfX25ServiceValid OBJECT-TYPE
        SYNTAX	INTEGER {
    		    valid(1),
    		    invalid(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Validity of the record - updated by X.25."
        DEFVAL	{ valid }
        ::= { wfX25ServiceEntry 30 }

    wfX25ServiceBFE OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enabled if DDNX.25/BFE enabled."
        DEFVAL	{ disabled }
        ::= { wfX25ServiceEntry 31 }

    wfX25ServiceForceCugZero OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Force Closed User Group of Zero."
        DEFVAL	{ disabled }
        ::= { wfX25ServiceEntry 32 }

    wfX25ServiceWcpEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable compression"
        DEFVAL	{ disabled }
        ::= { wfX25ServiceEntry 33 }

    wfX25ServiceMUX OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Set to Enabled to perform 1356 Multiplexing of protocols in the same Vc"
        DEFVAL	{ disabled }
        ::= { wfX25ServiceEntry 34 }

    wfX25ServicePtopCallRequest OBJECT-TYPE
        SYNTAX	INTEGER {
    		    default(1),
    		    local(2),
                    remote(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Select which side of PTOP circuit initiates the connection.
                (default = highest X.121 address initiates the call)"
        DEFVAL	{ default }
        ::= { wfX25ServiceEntry 35 }

    wfX25Vc OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfX25VcEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is a table of Statistic Entries is per Virtual Circuit."
        ::= { wfX25Group 4 }

    wfX25VcEntry OBJECT-TYPE
        SYNTAX	WfX25VcEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the X.25 VC table."
        INDEX	{ wfX25VcSlotNum,
    		  wfX25VcConnector,
    		  wfX25VcLineNumber,
    		  wfX25VcLLIndex,
    		  wfX25VcCct,
    		  wfX25VcNumber }
        ::= { wfX25Vc 1 }

    WfX25VcEntry ::= SEQUENCE {
    	    wfX25VcSlotNum
    		INTEGER,
    	    wfX25VcConnector
    		INTEGER,
    	    wfX25VcLineNumber
    		INTEGER,
    	    wfX25VcLLIndex
    		INTEGER,
    	    wfX25VcCct
    		INTEGER,
    	    wfX25VcNumber
    		INTEGER,
    	    wfX25VcDataTxs
    		Counter,
    	    wfX25VcInterruptTxs
    		Counter,
    	    wfX25VcResetTxs
    		Counter,
    	    wfX25VcRrTxs
    		Counter,
    	    wfX25VcRnrTxs
    		Counter,
    	    wfX25VcRejectTxs
    		Counter,
    	    wfX25VcSegmentTxs
    		Counter,
    	    wfX25VcBytesTxs
    		Counter,
    	    wfX25VcIntBytesTxs
    		Counter,
    	    wfX25VcDataRxs
    		Counter,
    	    wfX25VcInterruptRxs
    		Counter,
    	    wfX25VcResetRxs
    		Counter,
    	    wfX25VcRrRxs
    		Counter,
    	    wfX25VcRnrRxs
    		Counter,
    	    wfX25VcRejectRxs
    		Counter,
    	    wfX25VcSegmentRxs
    		Counter,
    	    wfX25VcBytesRxs
    		Counter,
    	    wfX25VcIntBytesRxs
    		Counter,
    	    wfX25VcApPktsDropped
    		Counter,
    	    wfX25VcRemoteX121Addr
    		DisplayString
        }

    wfX25VcSlotNum OBJECT-TYPE
        SYNTAX	INTEGER(1..14)
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID and Slot number this VC is on."
        ::= { wfX25VcEntry 1 }

    wfX25VcConnector OBJECT-TYPE
        SYNTAX	INTEGER {
    		    one(1),
    		    two(2),
    		    three(3),
    		    four(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID and Connector number this VC is using"
        ::= { wfX25VcEntry 2 }

    wfX25VcLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier member. This is the line number assigned
                to the driver X25 is running on top of and this VC is running
                on.  No used in 7.60"
        ::= { wfX25VcEntry 3 }

    wfX25VcLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier member. This is the lower layer index
                presented to X25 by the layer immediately below it on the
                protocol stack. If the lower layer is a driver, the index
                will be 0. Not used in 7.60."
        ::= { wfX25VcEntry 4 }

    wfX25VcCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID and CCT supporting these VCs. User determines this CCT
                via log."
        ::= { wfX25VcEntry 5 }

    wfX25VcNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance ID and VC number for this VC. This number corresponds to
                the LCN."
        ::= { wfX25VcEntry 6 }

    wfX25VcDataTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Data Packets sent."
        ::= { wfX25VcEntry 7 }

    wfX25VcInterruptTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Interrupt Packets sent."
        ::= { wfX25VcEntry 8 }

    wfX25VcResetTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Reset Packets sent."
        ::= { wfX25VcEntry 9 }

    wfX25VcRrTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Receiver Ready Packets sent."
        ::= { wfX25VcEntry 10 }

    wfX25VcRnrTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Receiver Not Ready Packets sent."
        ::= { wfX25VcEntry 11 }

    wfX25VcRejectTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Reject Packets sent."
        ::= { wfX25VcEntry 12 }

    wfX25VcSegmentTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Charge Units sent."
        ::= { wfX25VcEntry 13 }

    wfX25VcBytesTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Data Bytes sent."
        ::= { wfX25VcEntry 14 }

    wfX25VcIntBytesTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Interrupt Data Bytes sent."
        ::= { wfX25VcEntry 15 }

    wfX25VcDataRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Data Packets received."
        ::= { wfX25VcEntry 16 }

    wfX25VcInterruptRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Interrupt Packets received."
        ::= { wfX25VcEntry 17 }

    wfX25VcResetRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Reset Packets received."
        ::= { wfX25VcEntry 18 }

    wfX25VcRrRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Receiver Ready Packets received."
        ::= { wfX25VcEntry 19 }

    wfX25VcRnrRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Receiver Not Ready Packets received."
        ::= { wfX25VcEntry 20 }

    wfX25VcRejectRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Reject Packets received."
        ::= { wfX25VcEntry 21 }

    wfX25VcSegmentRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Charge Units received."
        ::= { wfX25VcEntry 22 }

    wfX25VcBytesRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Data Bytes received."
        ::= { wfX25VcEntry 23 }

    wfX25VcIntBytesRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Interrupt Data Bytes received."
        ::= { wfX25VcEntry 24 }

    wfX25VcApPktsDropped OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Application/redirector Packets Droped"
        ::= { wfX25VcEntry 25 }

    wfX25VcRemoteX121Addr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Remote DTE Address for this connection"
        ::= { wfX25VcEntry 26 }

    wfLapbPktTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfLapbPktEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The table of LAPB PKT Level Parameters"
        ::= { wfX25Group 5 }

    wfLapbPktEntry OBJECT-TYPE
        SYNTAX	WfLapbPktEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the LAPB PKT table"
        INDEX	{ wfLapbPktSlotNum,
    		  wfLapbPktConnector,
    		  wfLapbPktLineNumber,
    		  wfLapbPktLLIndex }
        ::= { wfLapbPktTable 1 }

    WfLapbPktEntry ::= SEQUENCE {
    	    wfLapbPktDelete
    		INTEGER,
    	    wfLapbPktDisable
    		INTEGER,
    	    wfLapbPktSlotNum
    		INTEGER,
    	    wfLapbPktConnector
    		INTEGER,
    	    wfLapbPktLineNumber
    		INTEGER,
    	    wfLapbPktLLIndex
    		INTEGER,
    	    wfLapbPktLapbCct
    		INTEGER,
    	    wfLapbPktLinkId
    		INTEGER,
    	    wfLapbPktLineState
    		INTEGER,
    	    wfLapbPktSeqSize
    		INTEGER,
    	    wfLapbPktMaxWindow
    		INTEGER,
    	    wfLapbPktMaxLength
    		INTEGER,
    	    wfLapbPktMaxThroughput
    		INTEGER,
    	    wfLapbPktFlowCtl
    		INTEGER,
    	    wfLapbPktThroughput
    		INTEGER,
    	    wfLapbPktUserIdentity
    		INTEGER,
    	    wfLapbPktInCalls
    		INTEGER,
    	    wfLapbPktOutCalls
    		INTEGER,
    	    wfLapbPktFastAccept
    		INTEGER,
    	    wfLapbPktReverseAccept
    		INTEGER,
    	    wfLapbPktFastSelect
    		INTEGER,
    	    wfLapbPktReverseCharging
    		INTEGER,
    	    wfLapbPktCugSelection
    		INTEGER,
    	    wfLapbPktCugOA
    		INTEGER,
    	    wfLapbPktCugBilateral
    		INTEGER,
    	    wfLapbPktRpoaSelection
    		INTEGER,
    	    wfLapbPktChargeInform
    		INTEGER,
    	    wfLapbPktTransitDelay
    		INTEGER,
    	    wfLapbPktFullAddressing
    		INTEGER,
    	    wfLapbPktAccFormat
    		INTEGER,
    	    wfLapbPktRelFormat
    		INTEGER,
    	    wfLapbPktT1
    		INTEGER,
    	    wfLapbPktT2
    		INTEGER,
    	    wfLapbPktT3
    		INTEGER,
    	    wfLapbPktT4
    		INTEGER,
    	    wfLapbPktIwcCnt
    		INTEGER,
    	    wfLapbPktIwcId
    		INTEGER,
    	    wfLapbPktBwcCnt
    		INTEGER,
    	    wfLapbPktBwcId
    		INTEGER,
    	    wfLapbPktOwcCnt
    		INTEGER,
    	    wfLapbPktOwcId
    		INTEGER,
    	    wfLapbPktDefWindow
    		INTEGER,
    	    wfLapbPktDefLength
    		INTEGER,
    	    wfLapbPktDefClass
    		INTEGER,
    	    wfLapbPktDxe
    		INTEGER,
    	    wfLapbPktConformance
    		INTEGER,
    	    wfLapbPktStandard
    		INTEGER,
    	    wfLapbPktNetaddr
    		DisplayString,
    	    wfLapbPktStatistics
    		INTEGER,
    	    wfLapbPktNetaddrType
    		INTEGER,
    	    wfLapbPktDDNIpAddr
    		IpAddress,
    	    wfLapbPktPDNX121Addr
    		DisplayString,
    	    wfLapbPktTxT5
    		INTEGER,
	    wfLapbPktUseDfltService
		INTEGER,
    	    wfLapbPktPVCCnt
    		INTEGER,
    	    wfLapbPktPVCLowLcn
    		INTEGER
        }

    wfLapbPktDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created."
        DEFVAL	{ created }
        ::= { wfLapbPktEntry 1 }

    wfLapbPktDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter"
        DEFVAL	{ enabled }
        ::= { wfLapbPktEntry 2 }

    wfLapbPktSlotNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This is the slot number where this X.25 packet
                layer is running."
        ::= { wfLapbPktEntry 3 }

    wfLapbPktConnector OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This is the Physical connector number for the Physical
                layer associated with this X25 Packet layer."
        ::= { wfLapbPktEntry 4 }

    wfLapbPktLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This is the line number assigned to the LAPB Driver
                associated with this X25 Packet Layer.  Not used in 7.60"
        ::= { wfLapbPktEntry 5 }

    wfLapbPktLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This is the lower layer index presented to X25 by
                the layer immediately below it on the protocol stack. If the lower layer
                is a driver, the index will be 0. Not used in 7.60."
        ::= { wfLapbPktEntry 6 }

    wfLapbPktLapbCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit number of Lapb (SYNC) driver associated with this X25 Packet Layer"
        ::= { wfLapbPktEntry 7 }

    wfLapbPktLinkId OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Access Link identifier - index into  line information array."
        ::= { wfLapbPktEntry 8 }

    wfLapbPktLineState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reflects the state of the X.25 packet layer that is associated with this
                network record. When the state of this parameter is set to Up, the router
                can transfer data between the line layer and the packet layer. Note that
                this parameter is used internally; it does NOT reflect the status of the
                underlying synchronous circuit."
        DEFVAL	{ notpresent }
        ::= { wfLapbPktEntry 9 }

    wfLapbPktSeqSize OBJECT-TYPE
        SYNTAX	INTEGER {
    		    mod8(8),
    		    mod128(128)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Sequence numbering scheme for the data packets. Modulo 8 or Modulo 128"
        DEFVAL	{ mod8 }
        ::= { wfLapbPktEntry 10 }

    wfLapbPktMaxWindow OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum window size that can be negotiated on a per call basis, if the
                flow control facility is subscribed too.  Extended window size of 127
                can be used if wfLapbPktSeqSize is 128.  Otherwise the maximum is 7.
                This attribute is effective only if the attribute  wfLapbPktFloCtl is
                set to 'ON'."
        DEFVAL	{ 2 }
        ::= { wfLapbPktEntry 11 }

    wfLapbPktMaxLength OBJECT-TYPE
        SYNTAX	INTEGER {
    		    size16(4),
    		    size32(5),
    		    size64(6),
    		    size128(7),
    		    size256(8),
    		    size512(9),
    		    size1024(10),
    		    size2048(11),
    		    size4096(12)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum packet length that can be negotiated on a per call basis, if
                the flow control facility is subscribed too. This attribute is effective
                only if the attribute wfLapbPktFloCtl is set to 'ON'. This attribute
                should not be greater than the wfSYNCEntry attribute wfSyncMtu."
        DEFVAL	{ size128 }
        ::= { wfLapbPktEntry 12 }

    wfLapbPktMaxThroughput OBJECT-TYPE
        SYNTAX	INTEGER {
    		    thrclass75(3),
    		    thrclass150(4),
    		    thrclass300(5),
    		    thrclass600(6),
    		    thrclass1200(7),
    		    thrclass2400(8),
    		    thrclass4800(9),
    		    thrclass9600(10),
    		    thrclass19200(11),
    		    thrclass48k(12),
    		    thrclass64k(13)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Maximum throughput class value that can be negotiated on a per call basis,
                if the throughput class negotiation facility is subscribed too. For this
                to be effective the attribute wfLapbPktThroughput must be set to ON."
        DEFVAL	{ thrclass19200 }
        ::= { wfLapbPktEntry 13 }

    wfLapbPktFlowCtl OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Flow control parameter negotiation facility subscription"
        DEFVAL	{ off }
        ::= { wfLapbPktEntry 14 }

    wfLapbPktThroughput OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Throughput class negotiation facility subscription"
        DEFVAL	{ off }
        ::= { wfLapbPktEntry 15 }

    wfLapbPktUserIdentity OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Network user identification (NUI) related facility subscription"
        DEFVAL	{ off }
        ::= { wfLapbPktEntry 16 }

    wfLapbPktInCalls OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies whether or not (ON/OFF) incoming calls are permitted"
        DEFVAL	{ on }
        ::= { wfLapbPktEntry 17 }

    wfLapbPktOutCalls OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies whether or not (ON/OFF) outgoing calls are permitted"
        DEFVAL	{ on }
        ::= { wfLapbPktEntry 18 }

    wfLapbPktFastAccept OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies whether or not (ON/OFF) fast select acceptance facility is
                subscribed too."
        DEFVAL	{ off }
        ::= { wfLapbPktEntry 19 }

    wfLapbPktReverseAccept OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies whether or not (ON/OFF) reverse charge aceptance facility is
                subscribed to.  If this is set this packet layer will simply accept calls
                with reverse charge facility.  But the packet layer (router) will not
                provide any charging information."
        DEFVAL	{ off }
        ::= { wfLapbPktEntry 20 }

    wfLapbPktFastSelect OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies whether or not (ON/OFF) fast select facility is allowed on
                a per call basis."
        DEFVAL	{ off }
        ::= { wfLapbPktEntry 21 }

    wfLapbPktReverseCharging OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies whether or not (ON/OFF) reverse charging facility is allowed
                on a per call basis."
        DEFVAL	{ off }
        ::= { wfLapbPktEntry 22 }

    wfLapbPktCugSelection OBJECT-TYPE
        SYNTAX	INTEGER {
    		    basic(16),
    		    extended(32)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Format of the Closed User Group (CUG) related facilities supported."
        ::= { wfLapbPktEntry 23 }

    wfLapbPktCugOA OBJECT-TYPE
        SYNTAX	INTEGER {
    		    cugoa(64)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies whether or not CUG with Outgoing access selection facility
                is supported."
        ::= { wfLapbPktEntry 24 }

    wfLapbPktCugBilateral OBJECT-TYPE
        SYNTAX	INTEGER {
    		    bilat(128)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies whether or not Bilateral Closed User Group related facility
                is supported.  If this is set, then the wfLapbPktCugSelection should be
                set to EXTENDED."
        ::= { wfLapbPktEntry 25 }

    wfLapbPktRpoaSelection OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies whether or not RPOA related facility is supported. Outgoing
                calls will not contain any RPOA facility. But if set this packet layer
                will simply accept calls with RPOA related facility."
        DEFVAL	{ off }
        ::= { wfLapbPktEntry 26 }

    wfLapbPktChargeInform OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies whether or not the charging information related facilities
                are supported.  Outgoing calls will not contain the charge information
                related facility. But if set this packet layer will simply accept calls
                with the charge information related facility.  No charging information
                will be collected."
        DEFVAL	{ off }
        ::= { wfLapbPktEntry 27 }

    wfLapbPktTransitDelay OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transit delay indication facility. If set, accept calls with this
                facility."
        DEFVAL	{ off }
        ::= { wfLapbPktEntry 28 }

    wfLapbPktFullAddressing OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If this attribute is set, the full local X121 address (calling address)
                is supplied in the outgoing call request and the X.25 network also expected
                to provide the full called address in the incoming call packet."
        DEFVAL	{ on }
        ::= { wfLapbPktEntry 29 }

    wfLapbPktAccFormat OBJECT-TYPE
        SYNTAX	INTEGER {
    		    basic(2),
    		    allext(255),
    		    defbas(103)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specifies the format of the call accepted packet."
        DEFVAL	{ basic }
        ::= { wfLapbPktEntry 30 }

    wfLapbPktRelFormat OBJECT-TYPE
        SYNTAX	INTEGER {
    		    basic(2),
    		    allext(255),
    		    defext(103)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Connection release format -  format of Clear Requests"
        DEFVAL	{ basic }
        ::= { wfLapbPktEntry 31 }

    wfLapbPktT1 OBJECT-TYPE
        SYNTAX	INTEGER(1..999)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Local confirmation timeouts in seconds. This timer represents the
                following CCITT timers.
                  If DCE: T10 (restart), T12 (reset), T13 (clear)
                  If DTE: T20 (restart), T22 (reset), T23 (clear)"
        DEFVAL	{ 60 }
        ::= { wfLapbPktEntry 32 }

    wfLapbPktT2 OBJECT-TYPE
        SYNTAX	INTEGER(1..999)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Call confirmation time out in seconds. This represent the CCITT T11
                timer for the DCE and T21 timer for the DTE."
        DEFVAL	{ 180 }
        ::= { wfLapbPktEntry 33 }

    wfLapbPktT3 OBJECT-TYPE
        SYNTAX	INTEGER(200..2000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Congestion or busy condition watchdog timer in milliseconds. When system
                resources needed for packet assembly/deassembly depleted, this timer is
                set to reenter the PLP state machine to retry. User should use extreme
                caution in manipulating this timer."
        DEFVAL	{ 200 }
        ::= { wfLapbPktEntry 34 }

    wfLapbPktT4 OBJECT-TYPE
        SYNTAX	INTEGER(200..2000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Data packet transmission watchdog timer in milliseconds. This is the
                delay for acknowledgement. It is used to reenter PLP state machine also.
                User should use extreme caution in manipulating this timer."
        DEFVAL	{ 200 }
        ::= { wfLapbPktEntry 35 }

    wfLapbPktIwcCnt OBJECT-TYPE
        SYNTAX	INTEGER(1..512)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of IWC (Incoming VC's) defined on this access link."
        ::= { wfLapbPktEntry 36 }

    wfLapbPktIwcId OBJECT-TYPE
        SYNTAX	INTEGER(0..4095)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Low LCN ID for IWC (Incoming VC's) defined on this access link."
        DEFVAL	{ 1 }
        ::= { wfLapbPktEntry 37 }

    wfLapbPktBwcCnt OBJECT-TYPE
        SYNTAX	INTEGER(1..512)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of BWC (Bidirectional VC's) defined on this access link."
        ::= { wfLapbPktEntry 38 }

    wfLapbPktBwcId OBJECT-TYPE
        SYNTAX	INTEGER(0..4095)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Low LCN ID for BWC (Bidirectional VC's) defined on this access link."
        DEFVAL	{ 1 }
        ::= { wfLapbPktEntry 39 }

    wfLapbPktOwcCnt OBJECT-TYPE
        SYNTAX	INTEGER(1..512)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of OWC (Outgoing VC's) defined on this access link."
        ::= { wfLapbPktEntry 40 }

    wfLapbPktOwcId OBJECT-TYPE
        SYNTAX	INTEGER(0..4095)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Low LCN ID for OWC (Outgoing VC's) defined on this access link."
        DEFVAL	{ 1 }
        ::= { wfLapbPktEntry 41 }

    wfLapbPktDefWindow OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Non standard default transmit/receive window size."
        DEFVAL	{ 2 }
        ::= { wfLapbPktEntry 42 }

    wfLapbPktDefLength OBJECT-TYPE
        SYNTAX	INTEGER {
    		    size16(4),
    		    size32(5),
    		    size64(6),
    		    size128(7),
    		    size256(8),
    		    size512(9),
    		    size1024(10),
    		    size2048(11),
    		    size4096(12)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Non standard default transmit/receive packet size. This attribute should
                not be greater than the wfSyncEntry attribute wfSyncMtu."
        DEFVAL	{ size128 }
        ::= { wfLapbPktEntry 43 }

    wfLapbPktDefClass OBJECT-TYPE
        SYNTAX	INTEGER(3..12)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Non standard default transmit/receive throughput class assignment."
        DEFVAL	{ 3 }
        ::= { wfLapbPktEntry 44 }

    wfLapbPktDxe OBJECT-TYPE
        SYNTAX	INTEGER {
    		    x25dtersta(1),
    		    x25dte(2),
    		    x25dce(3),
    		    x25dtedxe(4)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Specify type of local X25 interface and imply subsequent rules of X.25.
                DXE_X25DTERSTA ->DTE mode with Restart Procedure.
                DXE_X25DTE     ->DTE mode without any restart procedure
                DXE_X25DCE     ->DCE mode with restart procedure
                DXE_X25DTEDXE  ->DTE/DTE environment, unassigned roles."
        DEFVAL	{ x25dtersta }
        ::= { wfLapbPktEntry 45 }

    wfLapbPktConformance OBJECT-TYPE
        SYNTAX	INTEGER {
    		    dxe1980(257),
    		    fsel1980(258),
    		    dxe1984(513),
    		    fsel1984(514),
    		    dxe1988(1025),
    		    fsel1988(1026)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "CCITT conformance recommendation used on each line."
        DEFVAL	{ dxe1988 }
        ::= { wfLapbPktEntry 46 }

    wfLapbPktStandard OBJECT-TYPE
        SYNTAX	INTEGER {
    		    stdiso(16),
    		    stddod(32),
    		    stdnone(1)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Network Standard to be used on each line."
        DEFVAL	{ stdnone }
        ::= { wfLapbPktEntry 47 }

    wfLapbPktNetaddr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This Link's Network address (X121 address)."
        ::= { wfLapbPktEntry 48 }

    wfLapbPktStatistics OBJECT-TYPE
        SYNTAX	INTEGER {
    		    statson(1),
    		    statsoff(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Gives the user the ability to Turn ON or Shut OFF statistics computation.
                This can be shut off for better performance on the line. Now it also
                provides a small packet trace function."
        DEFVAL	{ statsoff }
        ::= { wfLapbPktEntry 49 }

    wfLapbPktNetaddrType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    pdntype(1),
    		    ddntype(2),
    		    bfetype(3)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This defines whether the Network connection is to a DDN network or
                PDN Network. This is used to decide how the Local X121 Network address is
                derived. If this attribute is set to DDN the Local X121 address used in
                the attribute wfLapbPktNetaddr will be derived from the user supplied
                IP address.  Otherwise the X121 address should be supplid by the user."
        DEFVAL	{ pdntype }
        ::= { wfLapbPktEntry 50 }

    wfLapbPktDDNIpAddr OBJECT-TYPE
        SYNTAX	IpAddress
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If the wfLapbPktNetaddrType is DDNTYPE or DDN_BFE this is the user
                supplied local IP address. The router will convert this to the
                corresponding X121 address and the X121 address value will be put
                in wfLapbPktNetaddr attribute."
        ::= { wfLapbPktEntry 51 }

    wfLapbPktPDNX121Addr OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "If the wfLapbPktNetaddrType is PDNTYPE this is the user supplied local
                X.121 address.  The router will put this value in wfLapbPktNetaddr
                attribute."
        ::= { wfLapbPktEntry 52 }

    wfLapbPktTxT5 OBJECT-TYPE
        SYNTAX	INTEGER(1..8000)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Tx window size transmit delay timer"
        DEFVAL	{ 200 }
        ::= { wfLapbPktEntry 53 }

    wfLapbPktUseDfltService OBJECT-TYPE
        SYNTAX	INTEGER {
    		    on(1),
    		    off(2)
	}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Indicates whether or not to use the default ddn service."
	DEFVAL  { off }
        ::= { wfLapbPktEntry 54 }

    wfLapbPktPVCCnt OBJECT-TYPE
        SYNTAX	INTEGER(1..512)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Number of PVCs defined on this access link."
        ::= { wfLapbPktEntry 55 }

    wfLapbPktPVCLowLcn OBJECT-TYPE
        SYNTAX	INTEGER(0..4095)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Low LCN ID for PVCs defined on this access link."
        DEFVAL	{ 1 }
        ::= { wfLapbPktEntry 56 }

    wfLapbPktStatsTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfLapbPktStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The table of LAPB PKT Level Statistics."
        ::= { wfX25Group 6 }

    wfLapbPktStatsEntry OBJECT-TYPE
        SYNTAX	WfLapbPktStatsEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "Packet level statistics."
        INDEX	{ wfLapbPktStatsSlotNum,
    		  wfLapbPktStatsConnector,
    		  wfLapbPktStatsLineNumber,
    		  wfLapbPktStatsLLIndex }
        ::= { wfLapbPktStatsTable 1 }

    WfLapbPktStatsEntry ::= SEQUENCE {
    	    wfLapbPktStatsSlotNum
    		INTEGER,
    	    wfLapbPktStatsConnector
    		INTEGER,
    	    wfLapbPktStatsLineNumber
    		INTEGER,
    	    wfLapbPktStatsLLIndex
    		INTEGER,
    	    wfLapbPktStatsCct
    		INTEGER,
    	    wfLapbPktStatsLineAddress
    		DisplayString,
    	    wfLapbPktStatsMaxVcs
    		Counter,
    	    wfLapbPktStatsActiveVcs
    		Counter,
    	    wfLapbPktStatsActiveMax
    		Counter,
    	    wfLapbPktStatsTotalConnections
    		Counter,
    	    wfLapbPktStatsFailedConnections
    		Counter,
    	    wfLapbPktStatsNormalDisconnects
    		Counter,
    	    wfLapbPktStatsAbnormalDisconnects
    		Counter,
    	    wfLapbPktStatsDataTxs
    		Counter,
    	    wfLapbPktStatsInterruptTxs
    		Counter,
    	    wfLapbPktStatsResetTxs
    		Counter,
    	    wfLapbPktStatsRrTxs
    		Counter,
    	    wfLapbPktStatsRnrTxs
    		Counter,
    	    wfLapbPktStatsRejectTxs
    		Counter,
    	    wfLapbPktStatsRestartTxs
    		Counter,
    	    wfLapbPktStatsDiagTxs
    		Counter,
    	    wfLapbPktStatsSegmentTxs
    		Counter,
    	    wfLapbPktStatsBytesTxs
    		Counter,
    	    wfLapbPktStatsIntBytesTxs
    		Counter,
    	    wfLapbPktStatsDataRxs
    		Counter,
    	    wfLapbPktStatsInterruptRxs
    		Counter,
    	    wfLapbPktStatsResetRxs
    		Counter,
    	    wfLapbPktStatsRrRxs
    		Counter,
    	    wfLapbPktStatsRnrRxs
    		Counter,
    	    wfLapbPktStatsRejectRxs
    		Counter,
    	    wfLapbPktStatsRestartRxs
    		Counter,
    	    wfLapbPktStatsDiagRxs
    		Counter,
    	    wfLapbPktStatsSegmentRxs
    		Counter,
    	    wfLapbPktStatsBytesRxs
    		Counter,
    	    wfLapbPktStatsIntBytesRxs
    		Counter,
    	    wfLapbPktStatsOnOffSwitch
    		INTEGER
        }

    wfLapbPktStatsSlotNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Slot number and instance ID for this Lapb Packet Layer Line instance."
        ::= { wfLapbPktStatsEntry 1 }

    wfLapbPktStatsConnector OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Port number and instance ID for this Lapb Packet Layer Line instance."
        ::= { wfLapbPktStatsEntry 2 }

    wfLapbPktStatsLineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier member. This is the line number assigned to the
                driver X.25 is running over.  No used in 7.60"
        ::= { wfLapbPktStatsEntry 3 }

    wfLapbPktStatsLLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier member. This is the lower layer index
                presented to X25 by the layer immediately below it on the
                protocol stack. If the lower layer is a driver, the index
                will be 0. Not used in 7.60."
        ::= { wfLapbPktStatsEntry 4 }

    wfLapbPktStatsCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit number for this instance."
        ::= { wfLapbPktStatsEntry 5 }

    wfLapbPktStatsLineAddress OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The local X.121 address of this line."
        ::= { wfLapbPktStatsEntry 6 }

    wfLapbPktStatsMaxVcs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Maximum number of Virtual Circuits allowed on this line."
        ::= { wfLapbPktStatsEntry 7 }

    wfLapbPktStatsActiveVcs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Active Virtual Circuits on this line."
        ::= { wfLapbPktStatsEntry 8 }

    wfLapbPktStatsActiveMax OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Highest number of active Virtual Circuits on this line."
        ::= { wfLapbPktStatsEntry 9 }

    wfLapbPktStatsTotalConnections OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Total Virtual Connections performed since start up."
        ::= { wfLapbPktStatsEntry 10 }

    wfLapbPktStatsFailedConnections OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of unsuccessful Virtual Connections performed since start up."
        ::= { wfLapbPktStatsEntry 11 }

    wfLapbPktStatsNormalDisconnects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Normal Virtual Circuit Disconnections."
        ::= { wfLapbPktStatsEntry 12 }

    wfLapbPktStatsAbnormalDisconnects OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Abnormal Virtual Circuit Disconnections."
        ::= { wfLapbPktStatsEntry 13 }

    wfLapbPktStatsDataTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Data Packets Transmitted on this line."
        ::= { wfLapbPktStatsEntry 14 }

    wfLapbPktStatsInterruptTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Interrupt Packets sent."
        ::= { wfLapbPktStatsEntry 15 }

    wfLapbPktStatsResetTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Reset Requests sent."
        ::= { wfLapbPktStatsEntry 16 }

    wfLapbPktStatsRrTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Receiver Ready Packets sent."
        ::= { wfLapbPktStatsEntry 17 }

    wfLapbPktStatsRnrTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Receiver Not Ready Packets sent."
        ::= { wfLapbPktStatsEntry 18 }

    wfLapbPktStatsRejectTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Reject Packets sent."
        ::= { wfLapbPktStatsEntry 19 }

    wfLapbPktStatsRestartTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Restart Packets sent."
        ::= { wfLapbPktStatsEntry 20 }

    wfLapbPktStatsDiagTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Diagnostic Packets sent."
        ::= { wfLapbPktStatsEntry 21 }

    wfLapbPktStatsSegmentTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Charge Units sent."
        ::= { wfLapbPktStatsEntry 22 }

    wfLapbPktStatsBytesTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Data Bytes sent."
        ::= { wfLapbPktStatsEntry 23 }

    wfLapbPktStatsIntBytesTxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Interrupt Data Bytes sent."
        ::= { wfLapbPktStatsEntry 24 }

    wfLapbPktStatsDataRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Data Packets received on this line."
        ::= { wfLapbPktStatsEntry 25 }

    wfLapbPktStatsInterruptRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Interrupt Packets received."
        ::= { wfLapbPktStatsEntry 26 }

    wfLapbPktStatsResetRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Reset Requests received."
        ::= { wfLapbPktStatsEntry 27 }

    wfLapbPktStatsRrRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Receiver Ready Packets received."
        ::= { wfLapbPktStatsEntry 28 }

    wfLapbPktStatsRnrRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Receiver Not Ready Packets received."
        ::= { wfLapbPktStatsEntry 29 }

    wfLapbPktStatsRejectRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Reject Packets received."
        ::= { wfLapbPktStatsEntry 30 }

    wfLapbPktStatsRestartRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Restart Packets received."
        ::= { wfLapbPktStatsEntry 31 }

    wfLapbPktStatsDiagRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Diagnostic Packets received."
        ::= { wfLapbPktStatsEntry 32 }

    wfLapbPktStatsSegmentRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Charge Units received."
        ::= { wfLapbPktStatsEntry 33 }

    wfLapbPktStatsBytesRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Data Bytes received."
        ::= { wfLapbPktStatsEntry 34 }

    wfLapbPktStatsIntBytesRxs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Number of Interrupt Data Bytes received."
        ::= { wfLapbPktStatsEntry 35 }

    wfLapbPktStatsOnOffSwitch OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "This tells the user if Statistics Computation is turned ON or OFF."
        ::= { wfLapbPktStatsEntry 36 }

    wfLapbPktPvcTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfX25PvcServiceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "the table of Lapb Pvc Packet level parameters"
        ::= { wfX25Group 7 }

    wfX25PvcServiceEntry OBJECT-TYPE
        SYNTAX	WfX25PvcServiceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the LAPB PKT table"
        INDEX	{ wfX25SlotNum,
    		  wfX25Connector,
    		  wfX25LineNumber,
    		  wfX25LLIndex,
    		  wfX25PvcServiceCct,
    		  wfX25PvcServiceIndex }
        ::= { wfLapbPktPvcTable 1 }

    WfX25PvcServiceEntry ::= SEQUENCE {
    	    wfX25PvcDelete
    		INTEGER,
    	    wfX25PvcDisable
    		INTEGER,
    	    wfX25SlotNum
    		INTEGER,
    	    wfX25Connector
    		INTEGER,
    	    wfX25LineNumber
    		INTEGER,
    	    wfX25LLIndex
    		INTEGER,
    	    wfX25PvcServiceCct
    		INTEGER,
    	    wfX25PvcServiceIndex
    		INTEGER,
    	    wfX25PvcServiceType
    		INTEGER,
    	    wfX25PvcRxDefWindow
    		INTEGER,
    	    wfX25PvcTxDefWindow
    		INTEGER,
    	    wfX25PvcRxDefLength
    		INTEGER,
    	    wfX25PvcTxDefLength
    		INTEGER,
    	    wfX25PvcRxDefClass
    		INTEGER,
    	    wfX25PvcTxDefClass
    		INTEGER
        }

    wfX25PvcDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter, Default is created"
        DEFVAL	{ created }
        ::= { wfX25PvcServiceEntry 1 }

    wfX25PvcDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable Parameter"
        DEFVAL	{ enabled }
        ::= { wfX25PvcServiceEntry 2 }

    wfX25SlotNum OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Part of the Instance Identifier. This is the slot number where this
                X25 packet layer is running"
        ::= { wfX25PvcServiceEntry 3 }

    wfX25Connector OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Part of the Instance Identifier. This is the physical connector number
                for the physical layer associated with this packet layer"
        ::= { wfX25PvcServiceEntry 4 }

    wfX25LineNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Part of the Instance Id. This is the line number assigned to the LAPB
                driver associated with the X25 Packet layer."
        ::= { wfX25PvcServiceEntry 5 }

    wfX25LLIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance identifier. This is the lower layer index presented to X25 by
                the layer immediately below it on the protocol stack. If the lower layer
                is a driver, the index will be 0. Not used in 7.60."
        ::= { wfX25PvcServiceEntry 6 }

    wfX25PvcServiceCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instance Id. This is the Circuit number"
        ::= { wfX25PvcServiceEntry 7 }

    wfX25PvcServiceIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Instace Id. This is the lcn on which this pvc is running"
        ::= { wfX25PvcServiceEntry 8 }

    wfX25PvcServiceType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    pdntype(1),
    		    ddntype(2),
    		    ptoptype(4),
    		    npttype(8),
    		    ipextype(16)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Type of Service for this PVC Service record"
        ::= { wfX25PvcServiceEntry 9 }

    wfX25PvcRxDefWindow OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the receive window size used for setting up the pvc."
        DEFVAL	{ 2 }
        ::= { wfX25PvcServiceEntry 10 }

    wfX25PvcTxDefWindow OBJECT-TYPE
        SYNTAX	INTEGER(1..127)
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the transmit window size used for setting up the pvc."
        DEFVAL	{ 2 }
        ::= { wfX25PvcServiceEntry 11 }

    wfX25PvcRxDefLength OBJECT-TYPE
        SYNTAX	INTEGER {
    		    size16(4),
    		    size32(5),
    		    size64(6),
    		    size128(7),
    		    size256(8),
    		    size512(9),
    		    size1024(10),
    		    size2048(11),
    		    size4096(12)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the receive packet size."
        DEFVAL	{ size128 }
        ::= { wfX25PvcServiceEntry 12 }

    wfX25PvcTxDefLength OBJECT-TYPE
        SYNTAX	INTEGER {
    		    size16(4),
    		    size32(5),
    		    size64(6),
    		    size128(7),
    		    size256(8),
    		    size512(9),
    		    size1024(10),
    		    size2048(11),
    		    size4096(12)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the trasmit packet size"
        DEFVAL	{ size128 }
        ::= { wfX25PvcServiceEntry 13 }

    wfX25PvcRxDefClass OBJECT-TYPE
        SYNTAX	INTEGER {
    		    thrclass75(3),
    		    thrclass150(4),
    		    thrclass300(5),
    		    thrclass600(6),
    		    thrclass1200(7),
    		    thrclass2400(8),
    		    thrclass4800(9),
    		    thrclass9600(10),
    		    thrclass19200(11),
    		    thrclass48k(12),
    		    thrclass64k(13)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the receive througput class value that can be used on a per pvc
                basis. For this to be effective, the wfX25Throughput must be set
                ON"
        DEFVAL	{ thrclass19200 }
        ::= { wfX25PvcServiceEntry 14 }

    wfX25PvcTxDefClass OBJECT-TYPE
        SYNTAX	INTEGER {
    		    thrclass75(3),
    		    thrclass150(4),
    		    thrclass300(5),
    		    thrclass600(6),
    		    thrclass1200(7),
    		    thrclass2400(8),
    		    thrclass4800(9),
    		    thrclass9600(10),
    		    thrclass19200(11),
    		    thrclass48k(12),
    		    thrclass64k(13)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "This is the transmit througput class value that can be used on a per pvc
                basis. For this to be effective, the wfX25Throughput must be set
                ON"
        DEFVAL	{ thrclass19200 }
        ::= { wfX25PvcServiceEntry 15 }

    END  -- Wellfleet-X25-MIB
-- @(#)WSCCS b/mibs-xns.mib 1.1 8/30/95
Wellfleet-XNS-MIB DEFINITIONS ::= BEGIN

-- Created by mdl2asn version 3.1
-- Creation date: Wed Aug 30 16:50:22 EDT 1995


    IMPORTS

      IpAddress, Counter, Gauge, TimeTicks, Opaque, enterprises, mgmt
        FROM RFC1155-SMI
      OBJECT-TYPE
        FROM RFC-1212
      TRAP-TYPE
        FROM RFC-1215
      DisplayString, mib-2
        FROM RFC1213-MIB
      wfXnsGroup
        FROM Wellfleet-COMMON-MIB;


    wfXnsBase	OBJECT IDENTIFIER ::= { wfXnsGroup 1 }

    wfXnsBaseDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete XNS."
        DEFVAL	{ created }
        ::= { wfXnsBase 1 }

    wfXnsBaseDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable XNS."
        DEFVAL	{ enabled }
        ::= { wfXnsBase 2 }

    wfXnsBaseState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the entire XNS."
        DEFVAL	{ notpresent }
        ::= { wfXnsBase 3 }

    wfXnsBaseCfgHostNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Host Number of Router and potential MAC address of box."
        ::= { wfXnsBase 4 }

    wfXnsBaseActiveHostNumber OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "a legal input, else takes on a self generated unique number"
        ::= { wfXnsBase 5 }

    wfXnsBaseImplement OBJECT-TYPE
        SYNTAX	INTEGER {
    		    xerox(1),
    		    ungb(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Implementation method.  UB_XNS/XNS concurrent functionality or
                Vanilla XNS functionality only."
        DEFVAL	{ xerox }
        ::= { wfXnsBase 6 }

    wfXnsBaseNetCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count the total number of nets in the box."
        ::= { wfXnsBase 7 }

    wfXnsBaseHostCount OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Count the total number of hosts in the box."
        ::= { wfXnsBase 8 }

    wfXnsBaseLogFilter OBJECT-TYPE
        SYNTAX	INTEGER {
    		    debug(1),
    		    info(2),
    		    trace(16),
    		    debuginfo(3),
    		    debugtrace(17),
    		    infotrace(18),
    		    debuginfotrace(19)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Filter out some log messages, Default filters out
                debugs, info, and trace messages."
        DEFVAL	{ trace }
        ::= { wfXnsBase 9 }

    wfXnsBaseAdjEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfXnsBaseAdjEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "This is used by Ungermann-Bass functionality only."
        ::= { wfXnsGroup 8 }

    wfXnsBaseAdjEntry OBJECT-TYPE
        SYNTAX	WfXnsBaseAdjEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Adjacency Table"
        INDEX	{ wfXnsBaseAdjacencyNetwork,
    		  wfXnsBaseAdjacencyHostid }
        ::= { wfXnsBaseAdjEntryTable 1 }

    WfXnsBaseAdjEntry ::= SEQUENCE {
    	    wfXnsBaseAdjacencyNetwork
    		OCTET STRING,
    	    wfXnsBaseAdjacencyHostid
    		OCTET STRING,
    	    wfXnsBaseAdjacencyCost
    		INTEGER,
    	    wfXnsBaseAdjacencyAge
    		INTEGER,
    	    wfXnsBaseAdjacencyIntf
    		OCTET STRING,
    	    wfXnsBaseAdjacencyCct
    		INTEGER
        }

    wfXnsBaseAdjacencyNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Adjacent Router's/Host's network address for which a hello has been
                received."
        ::= { wfXnsBaseAdjEntry 1 }

    wfXnsBaseAdjacencyHostid OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Adjacent Router's/Host's hostid for which a hello has been received."
        ::= { wfXnsBaseAdjEntry 2 }

    wfXnsBaseAdjacencyCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Cost associated with reaching this adjacency."
        ::= { wfXnsBaseAdjEntry 3 }

    wfXnsBaseAdjacencyAge OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Adjacent Router/Host for which a hello has been received."
        ::= { wfXnsBaseAdjEntry 4 }

    wfXnsBaseAdjacencyIntf OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "XNS Network interface."
        ::= { wfXnsBaseAdjEntry 5 }

    wfXnsBaseAdjacencyCct OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Circuit on which hello was received."
        ::= { wfXnsBaseAdjEntry 6 }

    wfXnsBaseRtEntryTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfXnsBaseRtEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The table of Elements in XNS's routing table"
        ::= { wfXnsGroup 2 }

    wfXnsBaseRtEntry OBJECT-TYPE
        SYNTAX	WfXnsBaseRtEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Routing Table"
        INDEX	{ wfXnsBaseRouteDest }
        ::= { wfXnsBaseRtEntryTable 1 }

    WfXnsBaseRtEntry ::= SEQUENCE {
    	    wfXnsBaseRouteDest
    		OCTET STRING,
    	    wfXnsBaseRouteIfIndex
    		INTEGER,
    	    wfXnsBaseRouteMetric
    		INTEGER,
    	    wfXnsBaseRouteNextHopNetwork
    		OCTET STRING,
    	    wfXnsBaseRouteNextHopHost
    		OCTET STRING,
    	    wfXnsBaseRouteType
    		INTEGER,
    	    wfXnsBaseRouteProto
    		INTEGER,
    	    wfXnsBaseRouteAge
    		INTEGER,
    	    wfXnsBaseRouteInfo
    		OCTET STRING
        }

    wfXnsBaseRouteDest OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The destination XNS address of this route.  An
                entry with a value of 0.0.0.0 is considered a
                default route.  Multiple routes to a single
                destination can appear in the table, but access to
                such multiple entries is dependent on the table-
                access mechanisms defined by the network
                management protocol in use."
        ::= { wfXnsBaseRtEntry 1 }

    wfXnsBaseRouteIfIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The index value which uniquely identifies the
                local interface through which the next hop of this
                route should be reached.  The interface identified
                by a particular value of this index is the same
                interface as identified by the same value of
                ifIndex."
        ::= { wfXnsBaseRtEntry 2 }

    wfXnsBaseRouteMetric OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The primary routing metric for this route.  The
                semantics of this metric are determined by the
                routing-protocol specified in the route's
                XnsBaseRouteProto value.  If this metric is not used,
                its value should be set to -1."
        ::= { wfXnsBaseRtEntry 3 }

    wfXnsBaseRouteNextHopNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "(In the case of a route bound to an interface
                which is realized via a broadcast media, the value
                of this field is the agent's XNS address on that
                interface.)"
        ::= { wfXnsBaseRtEntry 4 }

    wfXnsBaseRouteNextHopHost OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Full network.host_id address of nexthop host for
                this network."
        ::= { wfXnsBaseRtEntry 5 }

    wfXnsBaseRouteType OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    invalid(2),
    		    direct(3),
    		    indirect(4),
    		    static(5)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The type of route.  Note that the values
                direct(3) and indirect(4) refer to the notion of
                direct and indirect routing in the XNS
                architecture.
                "
        ::= { wfXnsBaseRtEntry 6 }

    wfXnsBaseRouteProto OBJECT-TYPE
        SYNTAX	INTEGER {
    		    other(1),
    		    local(2),
    		    netmgmt(3),
    		    rip(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The routing mechanism via which this route was
                learned.  Inclusion of values for gateway routing
                protocols is not intended to imply that hosts
                should support those protocols."
        ::= { wfXnsBaseRtEntry 7 }

    wfXnsBaseRouteAge OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of seconds since this route was last
                updated or otherwise determined to be correct.
                Note that no semantics of `too old' can be implied
                except through knowledge of the routing protocol
                by which the route was learned."
        ::= { wfXnsBaseRtEntry 8 }

    wfXnsBaseRouteInfo OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A user-defined string which describes this Route entry"
        ::= { wfXnsBaseRtEntry 9 }

    wfXnsInterfaceTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfXnsInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The network interface record"
        ::= { wfXnsGroup 3 }

    wfXnsInterfaceEntry OBJECT-TYPE
        SYNTAX	WfXnsInterfaceEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Routing Table"
        INDEX	{ wfXnsInterfaceNetworkNumber,
    		  wfXnsInterfaceCircuit }
        ::= { wfXnsInterfaceTable 1 }

    WfXnsInterfaceEntry ::= SEQUENCE {
    	    wfXnsInterfaceIndex
    		INTEGER,
    	    wfXnsInterfaceDelete
    		INTEGER,
    	    wfXnsInterfaceDisable
    		INTEGER,
    	    wfXnsInterfaceState
    		INTEGER,
    	    wfXnsInterfaceCircuit
    		INTEGER,
    	    wfXnsInterfaceNetworkNumber
    		OCTET STRING,
    	    wfXnsInterfaceCost
    		INTEGER,
    	    wfXnsInterfaceXsumOn
    		INTEGER,
    	    wfXnsInterfaceEncaps
    		INTEGER,
    	    wfXnsInterfaceMacAddress
    		OCTET STRING,
    	    wfXnsInterfaceSMDSGroupAddress
    		OCTET STRING,
    	    wfXnsInterfaceMaxInfo
    		INTEGER,
    	    wfXnsInterfaceExtServer
    		INTEGER,
    	    wfXnsInterfaceExServNetwork
    		OCTET STRING,
    	    wfXnsInterfaceExServHostId
    		OCTET STRING,
    	    wfXnsInterfaceExServPktType
    		OCTET STRING,
    	    wfXnsInterfaceExServSockNm
    		OCTET STRING,
    	    wfXnsInterfaceInReceives
    		Counter,
    	    wfXnsInterfaceInHdrErrors
    		Counter,
    	    wfXnsInterfaceInAddrErrors
    		Counter,
    	    wfXnsInterfaceForwDatagrams
    		Counter,
    	    wfXnsInterfaceInUnknownProtos
    		Counter,
    	    wfXnsInterfaceInDiscards
    		Counter,
    	    wfXnsInterfaceInDelivers
    		Counter,
    	    wfXnsInterfaceOutRequests
    		Counter,
    	    wfXnsInterfaceOutDiscards
    		Counter,
    	    wfXnsInterfaceOutNoRoutes
    		Counter,
    	    wfXnsInterfaceFRBcast
    		OCTET STRING,
    	    wfXnsInterfaceFRMcast
    		OCTET STRING,
    	    wfXnsInterfaceSplit
    		INTEGER
        }

    wfXnsInterfaceIndex OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "A unique value for each XNS interface.  Its value
                ranges between 1 and the value of MAXCIRCUITS."
        ::= { wfXnsInterfaceEntry 1 }

    wfXnsInterfaceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete an XNS interface."
        DEFVAL	{ created }
        ::= { wfXnsInterfaceEntry 2 }

    wfXnsInterfaceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable an XNS interface."
        DEFVAL	{ enabled }
        ::= { wfXnsInterfaceEntry 3 }

    wfXnsInterfaceState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of the XNS interface"
        DEFVAL	{ notpresent }
        ::= { wfXnsInterfaceEntry 4 }

    wfXnsInterfaceCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Circuit Number that this interface runs over"
        ::= { wfXnsInterfaceEntry 5 }

    wfXnsInterfaceNetworkNumber OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The XNS Address to which this entry's addressing
                information pertains."
        ::= { wfXnsInterfaceEntry 6 }

    wfXnsInterfaceCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Cost associated with the XNS Address of this entry"
        ::= { wfXnsInterfaceEntry 7 }

    wfXnsInterfaceXsumOn OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Flag for checksums"
        DEFVAL	{ enabled }
        ::= { wfXnsInterfaceEntry 8 }

    wfXnsInterfaceEncaps OBJECT-TYPE
        SYNTAX	INTEGER {
    		    ethernet(1),
    		    snap(2)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "chosen by the XNS implementation according to underlying media."
        DEFVAL	{ ethernet }
        ::= { wfXnsInterfaceEntry 9 }

    wfXnsInterfaceMacAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The MacAddress of this interface
                this port will receive or transmit."
        ::= { wfXnsInterfaceEntry 10 }

    wfXnsInterfaceSMDSGroupAddress OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The SMDS Group Address of this interface
                this port will receive or transmit."
        ::= { wfXnsInterfaceEntry 11 }

    wfXnsInterfaceMaxInfo OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The maximum size of the INFO (non-MAC) field
                that this port will receive or transmit."
        ::= { wfXnsInterfaceEntry 12 }

    wfXnsInterfaceExtServer OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Flag indicating if this interface has External server
                capabilities turned on. Allows interface to pass on
                defined packets, such as PEP/TP requests, to a
                remote server not located on local network."
        DEFVAL	{ disabled }
        ::= { wfXnsInterfaceEntry 13 }

    wfXnsInterfaceExServNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Network address of the remote server."
        ::= { wfXnsInterfaceEntry 14 }

    wfXnsInterfaceExServHostId OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Host ID of the remote server."
        ::= { wfXnsInterfaceEntry 15 }

    wfXnsInterfaceExServPktType OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The packet type of the requests which are to be
                passed on to the specified remote server."
        ::= { wfXnsInterfaceEntry 16 }

    wfXnsInterfaceExServSockNm OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The destination socket number of the requests which
                are to be passed on to the specified remote server.
                If no socket number is specified then all packets
                of the specified type that this interface receives
                will be forwarded to specified remote server.
                "
        ::= { wfXnsInterfaceEntry 17 }

    wfXnsInterfaceInReceives OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of input datagrams received from
                interfaces, including those received in error."
        ::= { wfXnsInterfaceEntry 18 }

    wfXnsInterfaceInHdrErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of input datagrams discarded due to
                errors in their XNS headers, including bad
                checksums, version number mismatch, other format
                errors, time-to-live exceeded, errors discovered
                in processing their XNS options, etc."
        ::= { wfXnsInterfaceEntry 19 }

    wfXnsInterfaceInAddrErrors OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of input datagrams discarded because
                the XNS address in their XNS header's destination
                field was not a valid address to be received at
                this entity.This counter includes datagrams
                discarded because the destination address was not
                a local address."
        ::= { wfXnsInterfaceEntry 20 }

    wfXnsInterfaceForwDatagrams OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of input datagrams for which this
                entity was not their final XNS destination, as a
                result of which an attempt was made to find a
                route to forward them to that final destination.
                In entities which do not act as XNS Gateways, this
                counter will include only those packets which were
                Source-Routed via this entity, and the Source-
                Route option processing was successful."
        ::= { wfXnsInterfaceEntry 21 }

    wfXnsInterfaceInUnknownProtos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of locally-addressed datagrams
                received successfully but discarded because of an
                unknown or unsupported protocol."
        ::= { wfXnsInterfaceEntry 22 }

    wfXnsInterfaceInDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of input XNS datagrams for which no
                problems were encountered to prevent their
                continued processing, but which were discarded
                (e.g., for lack of buffer space).  Note that this
                counter does not include any datagrams discarded
                while awaiting re-assembly."
        ::= { wfXnsInterfaceEntry 23 }

    wfXnsInterfaceInDelivers OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of input datagrams successfully
                delivered to XNS user-protocols (including ECHO)"
        ::= { wfXnsInterfaceEntry 24 }

    wfXnsInterfaceOutRequests OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of XNS datagrams which local XNS
                user-protocols supplied to XNS in
                requests for transmission.  Note that this counter
                does not include any datagrams counted in
                XnsInteraceFwdDatagrams."
        ::= { wfXnsInterfaceEntry 25 }

    wfXnsInterfaceOutDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of output XNS datagrams for which no
                problem was encountered to prevent their
                transmission to their destination, but which were
                discarded (e.g., for lack of buffer space).  Note
                that this counter would include datagrams counted
                in XnsForwDatagrams if any such packets met this
                (discretionary) discard criterion."
        ::= { wfXnsInterfaceEntry 26 }

    wfXnsInterfaceOutNoRoutes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of XNS datagrams discarded because no
                route could be found to transmit them to their
                destination.  Note that this counter includes any
                packets counted in ForwDatagrams which meet this
                `no-route' criterion.  Note that this includes any
                datagarms which a host cannot route because all of
                its default gateways are down."
        ::= { wfXnsInterfaceEntry 27 }

    wfXnsInterfaceFRBcast OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configurable Frame Relay broadcast address"
        ::= { wfXnsInterfaceEntry 28 }

    wfXnsInterfaceFRMcast OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Configurable Frame Relay multicast address"
        ::= { wfXnsInterfaceEntry 29 }

    wfXnsInterfaceSplit OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable or Disable Split Horizon algorithm for this interface
                Comes into to play for non full-meshed WAN networks (Frame Relay) "
        DEFVAL	{ enabled }
        ::= { wfXnsInterfaceEntry 30 }

    wfXnsRipIntfTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfXnsRipIntfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The list of RIP interfaces"
        ::= { wfXnsGroup 4 }

    wfXnsRipIntfEntry OBJECT-TYPE
        SYNTAX	WfXnsRipIntfEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Routing Table"
        INDEX	{ wfXnsRipInterfaceIndex }
        ::= { wfXnsRipIntfTable 1 }

    WfXnsRipIntfEntry ::= SEQUENCE {
    	    wfXnsRipInterfaceDelete
    		INTEGER,
    	    wfXnsRipInterfaceDisable
    		INTEGER,
    	    wfXnsRipInterfaceState
    		INTEGER,
    	    wfXnsRipInterfaceIndex
    		OCTET STRING,
    	    wfXnsRipInterfaceSupply
    		INTEGER,
    	    wfXnsRipInterfaceListen
    		INTEGER
        }

    wfXnsRipInterfaceDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete an RIP Interface instance."
        DEFVAL	{ created }
        ::= { wfXnsRipIntfEntry 1 }

    wfXnsRipInterfaceDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable a RIP instance."
        DEFVAL	{ enabled }
        ::= { wfXnsRipIntfEntry 2 }

    wfXnsRipInterfaceState OBJECT-TYPE
        SYNTAX	INTEGER {
    		    up(1),
    		    down(2),
    		    init(3),
    		    notpresent(4)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The current state of RIP on this interface."
        DEFVAL	{ notpresent }
        ::= { wfXnsRipIntfEntry 3 }

    wfXnsRipInterfaceIndex OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The XNS interface to run RIP on."
        ::= { wfXnsRipIntfEntry 4 }

    wfXnsRipInterfaceSupply OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Transmit RIP packets."
        DEFVAL	{ enabled }
        ::= { wfXnsRipIntfEntry 5 }

    wfXnsRipInterfaceListen OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Receive RIP packets."
        DEFVAL	{ enabled }
        ::= { wfXnsRipIntfEntry 6 }

    wfXnsAdjacentHostTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfXnsAdjacentHostEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "must be configured for a nexthop host."
        ::= { wfXnsGroup 5 }

    wfXnsAdjacentHostEntry OBJECT-TYPE
        SYNTAX	WfXnsAdjacentHostEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Adjacent Host Table"
        INDEX	{ wfXnsAhTargHostNetwork,
    		  wfXnsAhTargHostId }
        ::= { wfXnsAdjacentHostTable 1 }

    WfXnsAdjacentHostEntry ::= SEQUENCE {
    	    wfXnsAhDelete
    		INTEGER,
    	    wfXnsAhDisable
    		INTEGER,
    	    wfXnsAhTargHostNetwork
    		OCTET STRING,
    	    wfXnsAhTargHostId
    		OCTET STRING,
    	    wfXnsAhNextHopIntf
    		OCTET STRING,
    	    wfXnsAhDlci
    		OCTET STRING
        }

    wfXnsAhDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete the XNS
                Static Host."
        DEFVAL	{ created }
        ::= { wfXnsAdjacentHostEntry 1 }

    wfXnsAhDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this XNS
                Static Route."
        DEFVAL	{ enabled }
        ::= { wfXnsAdjacentHostEntry 2 }

    wfXnsAhTargHostNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network address of the static host."
        ::= { wfXnsAdjacentHostEntry 3 }

    wfXnsAhTargHostId OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (6))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Address of this static host."
        ::= { wfXnsAdjacentHostEntry 4 }

    wfXnsAhNextHopIntf OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Next Hop Interface Network Address"
        ::= { wfXnsAdjacentHostEntry 5 }

    wfXnsAhDlci OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The next Hop Host address"
        ::= { wfXnsAdjacentHostEntry 6 }

    wfXnsStaticRouteTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfXnsStaticRouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "The list of Adjacent Hosts used for Configuring XNS"
        ::= { wfXnsGroup 6 }

    wfXnsStaticRouteEntry OBJECT-TYPE
        SYNTAX	WfXnsStaticRouteEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "An entry in the Host Table"
        INDEX	{ wfXnsSrTargNetwork,
    		  wfXnsSrNextHopNetwork }
        ::= { wfXnsStaticRouteTable 1 }

    WfXnsStaticRouteEntry ::= SEQUENCE {
    	    wfXnsSrDelete
    		INTEGER,
    	    wfXnsSrDisable
    		INTEGER,
    	    wfXnsSrTargNetwork
    		OCTET STRING,
    	    wfXnsSrCost
    		INTEGER,
    	    wfXnsSrNextHopNetwork
    		OCTET STRING,
    	    wfXnsSrNextHopHost
    		OCTET STRING,
    	    wfXnsSrTargNetworkRt
    		INTEGER
        }

    wfXnsSrDelete OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Create/Delete parameter. Default is created.
                Users perform an SNMP SET operation on this
                object in order to create/delete the XNS
                Static Route."
        DEFVAL	{ created }
        ::= { wfXnsStaticRouteEntry 1 }

    wfXnsSrDisable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Enable/Disable parameter. Default is enabled.
                Users perform an SNMP SET operation on this
                object in order to enable/disable this XNS
                Static Route."
        DEFVAL	{ enabled }
        ::= { wfXnsStaticRouteEntry 2 }

    wfXnsSrTargNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Address of this static route"
        ::= { wfXnsStaticRouteEntry 3 }

    wfXnsSrCost OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The Cost of this Static Route"
        ::= { wfXnsStaticRouteEntry 4 }

    wfXnsSrNextHopNetwork OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Next Hop XNS Address"
        ::= { wfXnsStaticRouteEntry 5 }

    wfXnsSrNextHopHost OBJECT-TYPE
        SYNTAX	OCTET STRING
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The next Hop Host address"
        ::= { wfXnsStaticRouteEntry 6 }

    wfXnsSrTargNetworkRt OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The Route Identifier Which numbered route this is to be"
        ::= { wfXnsStaticRouteEntry 7 }

    wfXnsTrafficFilterTable OBJECT-TYPE
        SYNTAX	SEQUENCE OF WfXnsTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "XNS Traffic Filters"
        ::= { wfXnsGroup 7 }

    wfXnsTrafficFilterEntry OBJECT-TYPE
        SYNTAX	WfXnsTrafficFilterEntry
        ACCESS	not-accessible
        STATUS	mandatory
        DESCRIPTION
                "A traffic filter definition"
        INDEX	{ wfXnsTrafficFilterInterface,
    		  wfXnsTrafficFilterCircuit,
    		  wfXnsTrafficFilterRuleNumber,
    		  wfXnsTrafficFilterFragment }
        ::= { wfXnsTrafficFilterTable 1 }

    WfXnsTrafficFilterEntry ::= SEQUENCE {
    	    wfXnsTrafficFilterCreate
    		INTEGER,
    	    wfXnsTrafficFilterEnable
    		INTEGER,
    	    wfXnsTrafficFilterStatus
    		INTEGER,
    	    wfXnsTrafficFilterCounter
    		Counter,
    	    wfXnsTrafficFilterDefinition
    		Opaque,
    	    wfXnsTrafficFilterReserved
    		INTEGER,
    	    wfXnsTrafficFilterInterface
    		OCTET STRING,
    	    wfXnsTrafficFilterCircuit
    		INTEGER,
    	    wfXnsTrafficFilterRuleNumber
    		INTEGER,
    	    wfXnsTrafficFilterFragment
    		INTEGER,
    	    wfXnsTrafficFilterName
    		DisplayString
        }

    wfXnsTrafficFilterCreate OBJECT-TYPE
        SYNTAX	INTEGER {
    		    created(1),
    		    deleted(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines the existence of the traffic filter rule:
                created - traffic filter exists
                delete - traffic filter does not exist and can be deleted."
        DEFVAL	{ created }
        ::= { wfXnsTrafficFilterEntry 1 }

    wfXnsTrafficFilterEnable OBJECT-TYPE
        SYNTAX	INTEGER {
    		    enabled(1),
    		    disabled(2)
    		}
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Defines whether or not the traffic filter rule should be used:
                enabled - activate the rule.
                disabled - inactivate the rule."
        DEFVAL	{ enabled }
        ::= { wfXnsTrafficFilterEntry 2 }

    wfXnsTrafficFilterStatus OBJECT-TYPE
        SYNTAX	INTEGER {
    		    active(1),
    		    error(2),
    		    inactive(3)
    		}
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Defines the current status of the traffic filter:
                inactive - the rule is not in use.
                active - the rule is being used.
                error - the application detected an error in the rule."
        DEFVAL	{ inactive }
        ::= { wfXnsTrafficFilterEntry 3 }

    wfXnsTrafficFilterCounter OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The number of received packets that have
                matched this rule."
        ::= { wfXnsTrafficFilterEntry 4 }

    wfXnsTrafficFilterDefinition OBJECT-TYPE
        SYNTAX	Opaque
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "The filter rule definition."
        ::= { wfXnsTrafficFilterEntry 5 }

    wfXnsTrafficFilterReserved OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Reserved field."
        ::= { wfXnsTrafficFilterEntry 6 }

    wfXnsTrafficFilterInterface OBJECT-TYPE
        SYNTAX	OCTET STRING (SIZE (4))
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The network address of the XNS
                interface to which this filter is applied."
        ::= { wfXnsTrafficFilterEntry 7 }

    wfXnsTrafficFilterCircuit OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The ID of the Circuit to which the
                filter is applied."
        ::= { wfXnsTrafficFilterEntry 8 }

    wfXnsTrafficFilterRuleNumber OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "ID for the rule."
        ::= { wfXnsTrafficFilterEntry 9 }

    wfXnsTrafficFilterFragment OBJECT-TYPE
        SYNTAX	INTEGER
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "Fragment number - for large rules."
        ::= { wfXnsTrafficFilterEntry 10 }

    wfXnsTrafficFilterName OBJECT-TYPE
        SYNTAX	DisplayString
        ACCESS	read-write
        STATUS	mandatory
        DESCRIPTION
                "Name of the rule number."
        ::= { wfXnsTrafficFilterEntry 11 }

    wfXnsAggrStats	OBJECT IDENTIFIER ::= { wfXnsGroup 9 }

    wfXnsAggrInDatagrams OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams received"
        ::= { wfXnsAggrStats 1 }

    wfXnsAggrOutDatagrams OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams sent (includes datagrams
                forwarded)"
        ::= { wfXnsAggrStats 2 }

    wfXnsAggrFwdDatagrams OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams forwarded"
        ::= { wfXnsAggrStats 3 }

    wfXnsAggrInDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams queued for reception that
                were discarded for resource reasons"
        ::= { wfXnsAggrStats 4 }

    wfXnsAggrInHdrErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams discarded because of errors
                in the XNS header."
        ::= { wfXnsAggrStats 5 }

    wfXnsAggrInAddrErrs OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total nmber of datagrams received whose destination
                address was invalid for this entity."
        ::= { wfXnsAggrStats 6 }

    wfXnsAggrInUnknownProtos OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams received locally which
                specified an unknown or unsupported protocol."
        ::= { wfXnsAggrStats 7 }

    wfXnsAggrOutDiscards OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams queued for transmission
                that were discarded for resource reasons."
        ::= { wfXnsAggrStats 8 }

    wfXnsAggrOutNoRoutes OBJECT-TYPE
        SYNTAX	Counter
        ACCESS	read-only
        STATUS	mandatory
        DESCRIPTION
                "The total number of datagrams queued for transmission thet
                were discarded because the destination was unreachable."
        ::= { wfXnsAggrStats 9 }

    END  -- Wellfleet-XNS-MIB
